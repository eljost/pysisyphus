import numpy

from pysisyphus.wavefunction.ints.boys import boys


def eri_0000(a, A, b, B, c, C, d, D):
    """Cartesian [ss|ss] 2-electron electron repulsion integral.

    Generated code; DO NOT modify by hand!"""

    x0 = a + b
    x1 = c + d
    x2 = x0 * x1
    x3 = x0 + x1
    x4 = x0 ** (-1.0)
    x5 = x1 ** (-1.0)

    # 1 item(s)
    S = numpy.array(
        [
            2
            * numpy.pi**2.5
            * boys(
                0,
                x2
                * (
                    (x4 * (a * A[0] + b * B[0]) - x5 * (c * C[0] + d * D[0])) ** 2
                    + (x4 * (a * A[1] + b * B[1]) - x5 * (c * C[1] + d * D[1])) ** 2
                    + (x4 * (a * A[2] + b * B[2]) - x5 * (c * C[2] + d * D[2])) ** 2
                )
                / x3,
            )
            * numpy.exp(
                -a
                * b
                * x4
                * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2)
            )
            * numpy.exp(
                -c
                * d
                * x5
                * ((C[0] - D[0]) ** 2 + (C[1] - D[1]) ** 2 + (C[2] - D[2]) ** 2)
            )
            / (x2 + numpy.sqrt(x3))
        ]
    )
    return S


def eri_0001(a, A, b, B, c, C, d, D):
    """Cartesian [ss|sp] 2-electron electron repulsion integral.

    Generated code; DO NOT modify by hand!"""

    x0 = C[0] - D[0]
    x1 = a + b
    x2 = c + d
    x3 = x1 + x2
    x4 = x3 ** (-1.0)
    x5 = x2 ** (-1.0)
    x6 = x5 * (c * C[0] + d * D[0])
    x7 = x1 ** (-1.0)
    x8 = -x6 + x7 * (a * A[0] + b * B[0])
    x9 = x5 * (c * C[1] + d * D[1])
    x10 = x7 * (a * A[1] + b * B[1]) - x9
    x11 = x1 * x2
    x12 = (
        x11
        * x4
        * (
            x10**2
            + x8**2
            + (-x5 * (c * C[2] + d * D[2]) + x7 * (a * A[2] + b * B[2])) ** 2
        )
    )
    x13 = C[1] - D[1]
    x14 = C[2] - D[2]
    x15 = (
        2
        * numpy.pi**2.5
        * numpy.exp(
            -a * b * x7 * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2)
        )
        * numpy.exp(-c * d * x5 * (x0**2 + x13**2 + x14**2))
        / (x11 + numpy.sqrt(x3))
    )
    x16 = x15 * boys(0, x12)
    x17 = x1 * x15 * x4 * boys(1, x12)

    # 3 item(s)
    S = numpy.array(
        [
            x0 * x16 + x16 * (x6 - C[0]) + x17 * x8,
            x10 * x17 + x13 * x16 + x16 * (x9 - C[1]),
            x14 * x16,
        ]
    )
    return S


def eri_0002(a, A, b, B, c, C, d, D):
    """Cartesian [ss|sd] 2-electron electron repulsion integral.

    Generated code; DO NOT modify by hand!"""

    x0 = numpy.pi**2.5
    x1 = a + b
    x2 = c + d
    x3 = x1 * x2
    x4 = x1 + x2
    x5 = (x3 + numpy.sqrt(x4)) ** (-1.0)
    x6 = x1 ** (-1.0)
    x7 = numpy.exp(
        -a * b * x6 * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2)
    )
    x8 = x2 ** (-1.0)
    x9 = C[0] - D[0]
    x10 = C[1] - D[1]
    x11 = C[2] - D[2]
    x12 = x11**2
    x13 = numpy.exp(-c * d * x8 * (x10**2 + x12 + x9**2))
    x14 = x4 ** (-1.0)
    x15 = x8 * (c * C[0] + d * D[0])
    x16 = -x15 + x6 * (a * A[0] + b * B[0])
    x17 = x8 * (c * C[1] + d * D[1])
    x18 = -x17 + x6 * (a * A[1] + b * B[1])
    x19 = (
        x14
        * x3
        * (
            x16**2
            + x18**2
            + (x6 * (a * A[2] + b * B[2]) - x8 * (c * C[2] + d * D[2])) ** 2
        )
    )
    x20 = boys(0, x19)
    x21 = x1 * x14
    x22 = 2 * x0 * x13 * x5 * x7
    x23 = x22 * boys(1, x19)
    x24 = (2 * x0 * x13 * x20 * x5 * x7 - x21 * x23) / (2 * c + 2 * d)
    x25 = x15 - C[0]
    x26 = x20 * x22
    x27 = x16 * x21
    x28 = x23 * x27 + x25 * x26
    x29 = x22 * boys(2, x19)
    x30 = x26 * x9
    x31 = x17 - C[1]
    x32 = x18 * x21
    x33 = x23 * x32 + x26 * x31
    x34 = x23 * x31 + x29 * x32
    x35 = x10 * x26
    x36 = x33 + x35

    # 6 item(s)
    S = numpy.array(
        [
            x24 + x25 * x28 + x27 * (x23 * x25 + x27 * x29) + x28 * x9 + x9 * (x28 + x30),
            x10 * x28 + x25 * x33 + x27 * x34 + x36 * x9,
            x11 * x28 + x11 * x30,
            x10 * x33 + x10 * x36 + x24 + x31 * x33 + x32 * x34,
            x11 * x33 + x11 * x35,
            x12 * x26,
        ]
    )
    return S


def eri_0010(a, A, b, B, c, C, d, D):
    """Cartesian [ss|ps] 2-electron electron repulsion integral.

    Generated code; DO NOT modify by hand!"""

    x0 = c + d
    x1 = x0 ** (-1.0)
    x2 = x1 * (c * C[0] + d * D[0])
    x3 = a + b
    x4 = x0 + x3
    x5 = x4 ** (-1.0)
    x6 = x3 ** (-1.0)
    x7 = -x2 + x6 * (a * A[0] + b * B[0])
    x8 = x1 * (c * C[1] + d * D[1])
    x9 = x6 * (a * A[1] + b * B[1]) - x8
    x10 = x0 * x3
    x11 = (
        x10
        * x5
        * (
            x7**2
            + x9**2
            + (-x1 * (c * C[2] + d * D[2]) + x6 * (a * A[2] + b * B[2])) ** 2
        )
    )
    x12 = (
        2
        * numpy.pi**2.5
        * numpy.exp(
            -a * b * x6 * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2)
        )
        * numpy.exp(
            -c * d * x1 * ((C[0] - D[0]) ** 2 + (C[1] - D[1]) ** 2 + (C[2] - D[2]) ** 2)
        )
        / (x10 + numpy.sqrt(x4))
    )
    x13 = x12 * boys(0, x11)
    x14 = x12 * x3 * x5 * boys(1, x11)

    # 3 item(s)
    S = numpy.array([x13 * (x2 - C[0]) + x14 * x7, x13 * (x8 - C[1]) + x14 * x9, 0])
    return S


def eri_0011(a, A, b, B, c, C, d, D):
    """Cartesian [ss|pp] 2-electron electron repulsion integral.

    Generated code; DO NOT modify by hand!"""

    x0 = numpy.pi**2.5
    x1 = a + b
    x2 = c + d
    x3 = x1 * x2
    x4 = x1 + x2
    x5 = (x3 + numpy.sqrt(x4)) ** (-1.0)
    x6 = x1 ** (-1.0)
    x7 = numpy.exp(
        -a * b * x6 * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2)
    )
    x8 = x2 ** (-1.0)
    x9 = C[0] - D[0]
    x10 = C[1] - D[1]
    x11 = C[2] - D[2]
    x12 = numpy.exp(-c * d * x8 * (x10**2 + x11**2 + x9**2))
    x13 = x4 ** (-1.0)
    x14 = x8 * (c * C[0] + d * D[0])
    x15 = -x14 + x6 * (a * A[0] + b * B[0])
    x16 = x8 * (c * C[1] + d * D[1])
    x17 = -x16 + x6 * (a * A[1] + b * B[1])
    x18 = (
        x13
        * x3
        * (
            x15**2
            + x17**2
            + (x6 * (a * A[2] + b * B[2]) - x8 * (c * C[2] + d * D[2])) ** 2
        )
    )
    x19 = boys(0, x18)
    x20 = x1 * x13
    x21 = 2 * x0 * x12 * x5 * x7
    x22 = x21 * boys(1, x18)
    x23 = (2 * x0 * x12 * x19 * x5 * x7 - x20 * x22) / (2 * c + 2 * d)
    x24 = x14 - C[0]
    x25 = x19 * x21
    x26 = x15 * x20
    x27 = x22 * x26 + x24 * x25
    x28 = x21 * boys(2, x18)
    x29 = x16 - C[1]
    x30 = x17 * x20
    x31 = x22 * x30 + x25 * x29
    x32 = x22 * x29 + x28 * x30
    x33 = x24 * x31 + x26 * x32

    # 9 item(s)
    S = numpy.array(
        [
            x23 + x24 * x27 + x26 * (x22 * x24 + x26 * x28) + x27 * x9,
            x10 * x27 + x33,
            x11 * x27,
            x31 * x9 + x33,
            x10 * x31 + x23 + x29 * x31 + x30 * x32,
            x11 * x31,
            0,
            0,
            0,
        ]
    )
    return S


def eri_0012(a, A, b, B, c, C, d, D):
    """Cartesian [ss|pd] 2-electron electron repulsion integral.

    Generated code; DO NOT modify by hand!"""

    x0 = (2 * c + 2 * d) ** (-1.0)
    x1 = c + d
    x2 = x1 ** (-1.0)
    x3 = x2 * (c * C[0] + d * D[0])
    x4 = x3 - C[0]
    x5 = a + b
    x6 = x1 + x5
    x7 = x6 ** (-1.0)
    x8 = x5 ** (-1.0)
    x9 = -x3 + x8 * (a * A[0] + b * B[0])
    x10 = x2 * (c * C[1] + d * D[1])
    x11 = -x10 + x8 * (a * A[1] + b * B[1])
    x12 = x1 * x5
    x13 = (
        x12
        * x7
        * (
            x11**2
            + x9**2
            + (-x2 * (c * C[2] + d * D[2]) + x8 * (a * A[2] + b * B[2])) ** 2
        )
    )
    x14 = boys(1, x13)
    x15 = numpy.pi**2.5
    x16 = (x12 + numpy.sqrt(x6)) ** (-1.0)
    x17 = numpy.exp(
        -a * b * x8 * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2)
    )
    x18 = C[0] - D[0]
    x19 = C[1] - D[1]
    x20 = C[2] - D[2]
    x21 = x20**2
    x22 = numpy.exp(-c * d * x2 * (x18**2 + x19**2 + x21))
    x23 = 2 * x15 * x16 * x17 * x22
    x24 = x14 * x23
    x25 = x5 * x7
    x26 = x25 * x9
    x27 = x23 * boys(2, x13)
    x28 = x24 * x4 + x26 * x27
    x29 = x25 * x28
    x30 = boys(0, x13)
    x31 = x23 * x30
    x32 = x24 * x26 + x31 * x4
    x33 = x0 * (2 * x15 * x16 * x17 * x22 * x30 - x24 * x25)
    x34 = x29 * x9 + x32 * x4 + x33
    x35 = x0 * (2 * x14 * x15 * x16 * x17 * x22 - x25 * x27)
    x36 = x23 * boys(3, x13)
    x37 = x18 * x32
    x38 = x19 * x32
    x39 = x10 - C[1]
    x40 = x11 * x25
    x41 = x24 * x40 + x31 * x39
    x42 = x24 * x39 + x27 * x40
    x43 = x25 * x42
    x44 = x4 * x41 + x43 * x9
    x45 = x38 + x44
    x46 = x0 * (x41 - x43)
    x47 = x27 * x39 + x36 * x40
    x48 = x26 * (x26 * x47 + x4 * x42) + x4 * x44 + x46
    x49 = x11 * x43 + x33 + x39 * x41
    x50 = x35 + x39 * x42 + x40 * x47
    x51 = x19 * x44 + x26 * x50 + x4 * x49
    x52 = x20 * x44
    x53 = x18 * x41
    x54 = x19 * x41
    x55 = x49 + x54

    # 18 item(s)
    S = numpy.array(
        [
            2 * x0 * (-x29 + x32)
            + x18 * x34
            + x18 * (x34 + x37)
            + x26 * (x26 * (x26 * x36 + x27 * x4) + x28 * x4 + x35)
            + x34 * x4,
            x18 * x45 + x19 * x34 + x48,
            x20 * x34 + x20 * x37,
            x19 * x45 + x51,
            x20 * x38 + x52,
            x21 * x32,
            x18 * x44 + x18 * (x44 + x53) + x48,
            x18 * x55 + x51,
            x20 * x53 + x52,
            x19 * x49 + x19 * x55 + x39 * x49 + x40 * x50 + 2 * x46,
            x20 * x49 + x20 * x54,
            x21 * x41,
            0,
            0,
            0,
            0,
            0,
            0,
        ]
    )
    return S


def eri_0020(a, A, b, B, c, C, d, D):
    """Cartesian [ss|ds] 2-electron electron repulsion integral.

    Generated code; DO NOT modify by hand!"""

    x0 = numpy.pi**2.5
    x1 = a + b
    x2 = c + d
    x3 = x1 * x2
    x4 = x1 + x2
    x5 = (x3 + numpy.sqrt(x4)) ** (-1.0)
    x6 = x1 ** (-1.0)
    x7 = numpy.exp(
        -a * b * x6 * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2)
    )
    x8 = x2 ** (-1.0)
    x9 = numpy.exp(
        -c * d * x8 * ((C[0] - D[0]) ** 2 + (C[1] - D[1]) ** 2 + (C[2] - D[2]) ** 2)
    )
    x10 = x4 ** (-1.0)
    x11 = x8 * (c * C[0] + d * D[0])
    x12 = -x11 + x6 * (a * A[0] + b * B[0])
    x13 = x8 * (c * C[1] + d * D[1])
    x14 = -x13 + x6 * (a * A[1] + b * B[1])
    x15 = (
        x10
        * x3
        * (
            x12**2
            + x14**2
            + (x6 * (a * A[2] + b * B[2]) - x8 * (c * C[2] + d * D[2])) ** 2
        )
    )
    x16 = boys(0, x15)
    x17 = x1 * x10
    x18 = 2 * x0 * x5 * x7 * x9
    x19 = x18 * boys(1, x15)
    x20 = (2 * x0 * x16 * x5 * x7 * x9 - x17 * x19) / (2 * c + 2 * d)
    x21 = x11 - C[0]
    x22 = x16 * x18
    x23 = x12 * x17
    x24 = x18 * boys(2, x15)
    x25 = x13 - C[1]
    x26 = x14 * x17
    x27 = x19 * x26 + x22 * x25
    x28 = x19 * x25 + x24 * x26

    # 6 item(s)
    S = numpy.array(
        [
            x20 + x21 * (x19 * x23 + x21 * x22) + x23 * (x19 * x21 + x23 * x24),
            x21 * x27 + x23 * x28,
            0,
            x20 + x25 * x27 + x26 * x28,
            0,
            0,
        ]
    )
    return S


def eri_0021(a, A, b, B, c, C, d, D):
    """Cartesian [ss|dp] 2-electron electron repulsion integral.

    Generated code; DO NOT modify by hand!"""

    x0 = (2 * c + 2 * d) ** (-1.0)
    x1 = c + d
    x2 = x1 ** (-1.0)
    x3 = x2 * (c * C[0] + d * D[0])
    x4 = x3 - C[0]
    x5 = a + b
    x6 = x1 + x5
    x7 = x6 ** (-1.0)
    x8 = x5 ** (-1.0)
    x9 = -x3 + x8 * (a * A[0] + b * B[0])
    x10 = x2 * (c * C[1] + d * D[1])
    x11 = -x10 + x8 * (a * A[1] + b * B[1])
    x12 = x1 * x5
    x13 = (
        x12
        * x7
        * (
            x11**2
            + x9**2
            + (-x2 * (c * C[2] + d * D[2]) + x8 * (a * A[2] + b * B[2])) ** 2
        )
    )
    x14 = boys(1, x13)
    x15 = numpy.pi**2.5
    x16 = (x12 + numpy.sqrt(x6)) ** (-1.0)
    x17 = numpy.exp(
        -a * b * x8 * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2)
    )
    x18 = C[0] - D[0]
    x19 = C[1] - D[1]
    x20 = C[2] - D[2]
    x21 = numpy.exp(-c * d * x2 * (x18**2 + x19**2 + x20**2))
    x22 = 2 * x15 * x16 * x17 * x21
    x23 = x14 * x22
    x24 = x5 * x7
    x25 = x24 * x9
    x26 = x22 * boys(2, x13)
    x27 = x23 * x4 + x25 * x26
    x28 = x24 * x27
    x29 = boys(0, x13)
    x30 = x22 * x29
    x31 = x23 * x25 + x30 * x4
    x32 = x0 * (2 * x15 * x16 * x17 * x21 * x29 - x23 * x24)
    x33 = x28 * x9 + x31 * x4 + x32
    x34 = x0 * (2 * x14 * x15 * x16 * x17 * x21 - x24 * x26)
    x35 = x22 * boys(3, x13)
    x36 = x10 - C[1]
    x37 = x11 * x24
    x38 = x23 * x36 + x26 * x37
    x39 = x24 * x38
    x40 = x23 * x37 + x30 * x36
    x41 = x0 * (-x39 + x40)
    x42 = x39 * x9 + x4 * x40
    x43 = x26 * x36 + x35 * x37
    x44 = x25 * (x25 * x43 + x38 * x4) + x4 * x42 + x41
    x45 = x11 * x39 + x32 + x36 * x40
    x46 = x34 + x36 * x38 + x37 * x43
    x47 = x25 * x46 + x4 * x45

    # 18 item(s)
    S = numpy.array(
        [
            2 * x0 * (-x28 + x31)
            + x18 * x33
            + x25 * (x25 * (x25 * x35 + x26 * x4) + x27 * x4 + x34)
            + x33 * x4,
            x19 * x33 + x44,
            x20 * x33,
            x18 * x42 + x44,
            x19 * x42 + x47,
            x20 * x42,
            0,
            0,
            0,
            x18 * x45 + x47,
            x19 * x45 + x36 * x45 + x37 * x46 + 2 * x41,
            x20 * x45,
            0,
            0,
            0,
            0,
            0,
            0,
        ]
    )
    return S


def eri_0022(a, A, b, B, c, C, d, D):
    """Cartesian [ss|dd] 2-electron electron repulsion integral.

    Generated code; DO NOT modify by hand!"""

    x0 = (2 * c + 2 * d) ** (-1.0)
    x1 = numpy.pi**2.5
    x2 = a + b
    x3 = c + d
    x4 = x2 * x3
    x5 = x2 + x3
    x6 = (x4 + numpy.sqrt(x5)) ** (-1.0)
    x7 = x2 ** (-1.0)
    x8 = numpy.exp(
        -a * b * x7 * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2)
    )
    x9 = x3 ** (-1.0)
    x10 = C[0] - D[0]
    x11 = C[1] - D[1]
    x12 = C[2] - D[2]
    x13 = x12**2
    x14 = numpy.exp(-c * d * x9 * (x10**2 + x11**2 + x13))
    x15 = x5 ** (-1.0)
    x16 = x9 * (c * C[0] + d * D[0])
    x17 = -x16 + x7 * (a * A[0] + b * B[0])
    x18 = x9 * (c * C[1] + d * D[1])
    x19 = -x18 + x7 * (a * A[1] + b * B[1])
    x20 = (
        x15
        * x4
        * (
            x17**2
            + x19**2
            + (x7 * (a * A[2] + b * B[2]) - x9 * (c * C[2] + d * D[2])) ** 2
        )
    )
    x21 = boys(1, x20)
    x22 = x15 * x2
    x23 = boys(2, x20)
    x24 = 2 * x1 * x14 * x6 * x8
    x25 = x23 * x24
    x26 = x0 * (2 * x1 * x14 * x21 * x6 * x8 - x22 * x25)
    x27 = x16 - C[0]
    x28 = x21 * x24
    x29 = x17 * x22
    x30 = x25 * x29 + x27 * x28
    x31 = x24 * boys(3, x20)
    x32 = x25 * x27 + x29 * x31
    x33 = x22 * x32
    x34 = x17 * x33 + x26 + x27 * x30
    x35 = x22 * x34
    x36 = boys(0, x20)
    x37 = x0 * (2 * x1 * x14 * x36 * x6 * x8 - x22 * x28)
    x38 = x24 * x36
    x39 = x27 * x38 + x28 * x29
    x40 = x22 * x30
    x41 = x17 * x40 + x27 * x39 + x37
    x42 = 2 * x0
    x43 = x17 * x35 + x27 * x41 + x42 * (x39 - x40)
    x44 = x0 * (2 * x1 * x14 * x23 * x6 * x8 - x22 * x31)
    x45 = x24 * boys(4, x20)
    x46 = x10 * x41
    x47 = x11 * x41
    x48 = x18 - C[1]
    x49 = x19 * x22
    x50 = x25 * x49 + x28 * x48
    x51 = x22 * x50
    x52 = x28 * x49 + x38 * x48
    x53 = x0 * (-x51 + x52)
    x54 = x17 * x51 + x27 * x52
    x55 = x25 * x48 + x31 * x49
    x56 = x22 * x55
    x57 = x17 * x56 + x27 * x50
    x58 = x22 * x57
    x59 = x17 * x58 + x27 * x54 + x53
    x60 = x47 + x59
    x61 = x0 * (x50 - x56)
    x62 = x31 * x48 + x45 * x49
    x63 = (
        x27 * x59
        + x29 * (x27 * x57 + x29 * (x27 * x55 + x29 * x62) + x61)
        + x42 * (x54 - x58)
    )
    x64 = x19 * x56 + x26 + x48 * x50
    x65 = x22 * x64
    x66 = x19 * x51 + x37 + x48 * x52
    x67 = x0 * (-x65 + x66)
    x68 = x17 * x65 + x27 * x66
    x69 = x44 + x48 * x55 + x49 * x62
    x70 = x27 * x68 + x29 * (x27 * x64 + x29 * x69) + x67
    x71 = x11 * x59 + x70
    x72 = x12 * x59
    x73 = x10 * x54
    x74 = x11 * x54
    x75 = x68 + x74
    x76 = x19 * x65 + x48 * x66 + 2 * x53
    x77 = x48 * x64 + x49 * x69 + 2 * x61
    x78 = x11 * x68 + x27 * x76 + x29 * x77
    x79 = x12 * x68
    x80 = x10 * x66
    x81 = x11 * x66
    x82 = x76 + x81

    # 36 item(s)
    S = numpy.array(
        [
            3 * x0 * (-x35 + x41)
            + x10 * x43
            + x10 * (x43 + x46)
            + x27 * x43
            + x29
            * (
                x27 * x34
                + x29 * (x27 * x32 + x29 * (x27 * x31 + x29 * x45) + x44)
                + x42 * (x30 - x33)
            ),
            x10 * x60 + x11 * x43 + x63,
            x12 * x43 + x12 * x46,
            x11 * x60 + x71,
            x12 * x47 + x72,
            x13 * x41,
            x10 * x59 + x10 * (x59 + x73) + x63,
            x10 * x75 + x71,
            x12 * x73 + x72,
            x11 * x75 + x78,
            x12 * x74 + x79,
            x13 * x54,
            0,
            0,
            0,
            0,
            0,
            0,
            x10 * x68 + x10 * (x68 + x80) + x70,
            x10 * x82 + x78,
            x12 * x80 + x79,
            x11 * x76 + x11 * x82 + x48 * x76 + x49 * x77 + 3 * x67,
            x12 * x76 + x12 * x81,
            x13 * x66,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
        ]
    )
    return S


def eri_0100(a, A, b, B, c, C, d, D):
    """Cartesian [sp|ss] 2-electron electron repulsion integral.

    Generated code; DO NOT modify by hand!"""

    x0 = A[0] - B[0]
    x1 = a + b
    x2 = c + d
    x3 = x1 + x2
    x4 = x3 ** (-1.0)
    x5 = x2 ** (-1.0)
    x6 = x1 ** (-1.0)
    x7 = -x6 * (a * A[0] + b * B[0])
    x8 = -x5 * (c * C[0] + d * D[0]) - x7
    x9 = -x6 * (a * A[1] + b * B[1])
    x10 = -x5 * (c * C[1] + d * D[1]) - x9
    x11 = -x6 * (a * A[2] + b * B[2])
    x12 = -x11 - x5 * (c * C[2] + d * D[2])
    x13 = x1 * x2
    x14 = x13 * x4 * (x10**2 + x12**2 + x8**2)
    x15 = A[1] - B[1]
    x16 = A[2] - B[2]
    x17 = (
        2
        * numpy.pi**2.5
        * numpy.exp(-a * b * x6 * (x0**2 + x15**2 + x16**2))
        * numpy.exp(
            -c * d * x5 * ((C[0] - D[0]) ** 2 + (C[1] - D[1]) ** 2 + (C[2] - D[2]) ** 2)
        )
        / (x13 + numpy.sqrt(x3))
    )
    x18 = x17 * boys(0, x14)
    x19 = x17 * x2 * x4 * boys(1, x14)

    # 3 item(s)
    S = numpy.array(
        [
            x0 * x18 + x18 * (-x7 - A[0]) - x19 * x8,
            -x10 * x19 + x15 * x18 + x18 * (-x9 - A[1]),
            -x12 * x19 + x16 * x18 + x18 * (-x11 - A[2]),
        ]
    )
    return S


def eri_0101(a, A, b, B, c, C, d, D):
    """Cartesian [sp|sp] 2-electron electron repulsion integral.

    Generated code; DO NOT modify by hand!"""

    x0 = C[0] - D[0]
    x1 = a + b
    x2 = c + d
    x3 = x1 + x2
    x4 = x3 ** (-1.0)
    x5 = x2 ** (-1.0)
    x6 = x5 * (c * C[0] + d * D[0])
    x7 = x1 ** (-1.0)
    x8 = -x7 * (a * A[0] + b * B[0])
    x9 = -x6 - x8
    x10 = x5 * (c * C[1] + d * D[1])
    x11 = -x7 * (a * A[1] + b * B[1])
    x12 = -x10 - x11
    x13 = -x7 * (a * A[2] + b * B[2])
    x14 = -x13 - x5 * (c * C[2] + d * D[2])
    x15 = x1 * x2
    x16 = x15 * x4 * (x12**2 + x14**2 + x9**2)
    x17 = boys(0, x16)
    x18 = -x8 - A[0]
    x19 = A[0] - B[0]
    x20 = A[1] - B[1]
    x21 = A[2] - B[2]
    x22 = C[1] - D[1]
    x23 = C[2] - D[2]
    x24 = (
        2
        * numpy.pi**2.5
        * numpy.exp(-a * b * x7 * (x19**2 + x20**2 + x21**2))
        * numpy.exp(-c * d * x5 * (x0**2 + x22**2 + x23**2))
        / (x15 + numpy.sqrt(x3))
    )
    x25 = x18 * x24
    x26 = x2 * x4
    x27 = x26 * x9
    x28 = boys(1, x16)
    x29 = x24 * x28
    x30 = x17 * x25 - x27 * x29
    x31 = (2 * a + 2 * b + 2 * c + 2 * d) ** (-1.0)
    x32 = x24 * boys(2, x16)
    x33 = x6 - C[0]
    x34 = x17 * x24
    x35 = x1 * x4
    x36 = x35 * x9
    x37 = x29 * x36 + x33 * x34
    x38 = x29 * x33 + x32 * x36
    x39 = x0 * x34 + x37
    x40 = x10 - C[1]
    x41 = x12 * x35
    x42 = x29 * x41 + x34 * x40
    x43 = x29 * x40 + x32 * x41
    x44 = x22 * x34 + x42
    x45 = x23 * x34
    x46 = -x11 - A[1]
    x47 = x12 * x26
    x48 = -x29 * x47 + x34 * x46
    x49 = -x13 - A[2]
    x50 = x14 * x26
    x51 = -x29 * x50 + x34 * x49

    # 9 item(s)
    S = numpy.array(
        [
            x0 * x30 + x18 * x37 + x19 * x39 - x27 * x38 + x31 * (x25 * x28 - x27 * x32),
            x18 * x42 + x19 * x44 + x22 * x30 - x27 * x43,
            x19 * x45 + x23 * x30,
            x0 * x48 + x20 * x39 + x37 * x46 - x38 * x47,
            x20 * x44 + x22 * x48 + x31 * (x29 * x46 - x32 * x47) + x42 * x46 - x43 * x47,
            x20 * x45 + x23 * x48,
            x0 * x51 + x21 * x39 + x37 * x49 - x38 * x50,
            x21 * x44 + x22 * x51 + x42 * x49 - x43 * x50,
            x21 * x45 + x23 * x51 + x31 * (x29 * x49 - x32 * x50),
        ]
    )
    return S


def eri_0102(a, A, b, B, c, C, d, D):
    """Cartesian [sp|sd] 2-electron electron repulsion integral.

    Generated code; DO NOT modify by hand!"""

    x0 = a + b
    x1 = x0 ** (-1.0)
    x2 = -x1 * (a * A[0] + b * B[0])
    x3 = -x2 - A[0]
    x4 = 2 * c + 2 * d
    x5 = x4 ** (-1.0)
    x6 = numpy.pi**2.5
    x7 = c + d
    x8 = x0 * x7
    x9 = x0 + x7
    x10 = (x8 + numpy.sqrt(x9)) ** (-1.0)
    x11 = A[0] - B[0]
    x12 = A[1] - B[1]
    x13 = A[2] - B[2]
    x14 = numpy.exp(-a * b * x1 * (x11**2 + x12**2 + x13**2))
    x15 = x7 ** (-1.0)
    x16 = C[0] - D[0]
    x17 = C[1] - D[1]
    x18 = C[2] - D[2]
    x19 = x18**2
    x20 = numpy.exp(-c * d * x15 * (x16**2 + x17**2 + x19))
    x21 = x9 ** (-1.0)
    x22 = x15 * (c * C[0] + d * D[0])
    x23 = -x2 - x22
    x24 = x15 * (c * C[1] + d * D[1])
    x25 = -x1 * (a * A[1] + b * B[1])
    x26 = -x24 - x25
    x27 = -x1 * (a * A[2] + b * B[2])
    x28 = -x15 * (c * C[2] + d * D[2]) - x27
    x29 = x21 * x8 * (x23**2 + x26**2 + x28**2)
    x30 = boys(0, x29)
    x31 = boys(1, x29)
    x32 = 2 * x10 * x14 * x20 * x6
    x33 = x31 * x32
    x34 = x0 * x21
    x35 = x5 * (2 * x10 * x14 * x20 * x30 * x6 - x33 * x34)
    x36 = x22 - C[0]
    x37 = x30 * x32
    x38 = x21 * x23
    x39 = x0 * x38
    x40 = x33 * x39 + x36 * x37
    x41 = x32 * boys(2, x29)
    x42 = x33 * x36 + x39 * x41
    x43 = x38 * x42
    x44 = x0 * x43 + x35 + x36 * x40
    x45 = x5 * (2 * x10 * x14 * x20 * x31 * x6 - x34 * x41)
    x46 = x32 * boys(3, x29)
    x47 = x36 * x41 + x39 * x46
    x48 = x38 * x47
    x49 = x0 * x48 + x36 * x42 + x45
    x50 = x38 * x7
    x51 = 2 * a + 2 * b + x4
    x52 = x51 ** (-1.0)
    x53 = x3 * x40 - x43 * x7 + x52 * (x3 * x33 - x41 * x50)
    x54 = 2 * x52
    x55 = x3 * x37 - x33 * x50
    x56 = x16 * x55
    x57 = x16 * x37
    x58 = x16 * x40 + x16 * (x40 + x57) + x44
    x59 = x24 - C[1]
    x60 = x21 * x26
    x61 = x0 * x60
    x62 = x33 * x59 + x41 * x61
    x63 = x41 * x59 + x46 * x61
    x64 = x33 * x61 + x37 * x59
    x65 = x36 * x64 + x39 * x62
    x66 = x36 * x62 + x39 * x63
    x67 = x17 * x55
    x68 = x3 * x64 - x50 * x62
    x69 = x67 + x68
    x70 = x17 * x37
    x71 = x64 + x70
    x72 = x16 * x71 + x17 * x40 + x65
    x73 = x18 * x40 + x18 * x57
    x74 = x35 + x59 * x64 + x61 * x62
    x75 = x45 + x59 * x62 + x61 * x63
    x76 = x17 * x64 + x17 * x71 + x74
    x77 = x18 * x64 + x18 * x70
    x78 = x19 * x37
    x79 = -x25 - A[1]
    x80 = x60 * x7
    x81 = x40 * x79 - x42 * x80
    x82 = -x33 * x80 + x37 * x79
    x83 = x16 * x82
    x84 = x17 * x82
    x85 = x52 * (x33 * x79 - x41 * x80) - x62 * x80 + x64 * x79
    x86 = x84 + x85
    x87 = -x27 - A[2]
    x88 = x21 * x28 * x7
    x89 = x40 * x87 - x42 * x88
    x90 = -x33 * x88 + x37 * x87
    x91 = -x62 * x88 + x64 * x87
    x92 = x17 * x90 + x91
    x93 = x52 * (x33 * x87 - x41 * x88)
    x94 = x18 * x90 + x93

    # 18 item(s)
    S = numpy.array(
        [
            x11 * x58
            + x16 * x53
            + x16 * (x53 + x56)
            + x3 * x44
            - x49 * x50
            + x54 * (x3 * x42 - x48 * x7 + x52 * (x3 * x41 - x46 * x50)),
            x11 * x72
            + x16 * x69
            + x17 * x53
            + x3 * x65
            - x50 * x66
            + x52 * (x3 * x62 - x50 * x63),
            x11 * x73 + x18 * x53 + x18 * x56,
            x11 * x76 + x17 * x68 + x17 * x69 + x3 * x74 - x50 * x75,
            x11 * x77 + x18 * x67 + x18 * x68,
            x11 * x78 + x19 * x55,
            x12 * x58 + x16 * x81 + x16 * (x81 + x83) + x44 * x79 - x49 * x80,
            x12 * x72
            + x16 * x86
            + x17 * x81
            + x52 * (x42 * x79 - x47 * x80)
            + x65 * x79
            - x66 * x80,
            x12 * x73 + x18 * x81 + x18 * x83,
            x12 * x76
            + x17 * x85
            + x17 * x86
            + x54 * (x52 * (x41 * x79 - x46 * x80) + x62 * x79 - x63 * x80)
            + x74 * x79
            - x75 * x80,
            x12 * x77 + x18 * x84 + x18 * x85,
            x12 * x78 + x19 * x82,
            x13 * x58 + x16 * x89 + x16 * (x16 * x90 + x89) + x44 * x87 - x49 * x88,
            x13 * x72 + x16 * x92 + x17 * x89 + x65 * x87 - x66 * x88,
            x13 * x73 + x16 * x94 + x18 * x89 + x52 * (x42 * x87 - x47 * x88),
            x13 * x76 + x17 * x91 + x17 * x92 + x74 * x87 - x75 * x88,
            x13 * x77 + x17 * x94 + x18 * x91 + x52 * (x62 * x87 - x63 * x88),
            x13 * x78 + x18 * x93 + x18 * x94 + 2 * (x41 * x87 - x46 * x88) / x51**2,
        ]
    )
    return S


def eri_0110(a, A, b, B, c, C, d, D):
    """Cartesian [sp|ps] 2-electron electron repulsion integral.

    Generated code; DO NOT modify by hand!"""

    x0 = A[0] - B[0]
    x1 = c + d
    x2 = x1 ** (-1.0)
    x3 = x2 * (c * C[0] + d * D[0])
    x4 = x3 - C[0]
    x5 = a + b
    x6 = x1 + x5
    x7 = x6 ** (-1.0)
    x8 = x5 ** (-1.0)
    x9 = -x8 * (a * A[0] + b * B[0])
    x10 = -x3 - x9
    x11 = x2 * (c * C[1] + d * D[1])
    x12 = -x8 * (a * A[1] + b * B[1])
    x13 = -x11 - x12
    x14 = -x8 * (a * A[2] + b * B[2])
    x15 = -x14 - x2 * (c * C[2] + d * D[2])
    x16 = x1 * x5
    x17 = x16 * x7 * (x10**2 + x13**2 + x15**2)
    x18 = A[1] - B[1]
    x19 = A[2] - B[2]
    x20 = (
        2
        * numpy.pi**2.5
        * numpy.exp(-a * b * x8 * (x0**2 + x18**2 + x19**2))
        * numpy.exp(
            -c * d * x2 * ((C[0] - D[0]) ** 2 + (C[1] - D[1]) ** 2 + (C[2] - D[2]) ** 2)
        )
        / (x16 + numpy.sqrt(x6))
    )
    x21 = x20 * boys(0, x17)
    x22 = x20 * boys(1, x17)
    x23 = x5 * x7
    x24 = x10 * x23
    x25 = x21 * x4 + x22 * x24
    x26 = (2 * a + 2 * b + 2 * c + 2 * d) ** (-1.0)
    x27 = -x9 - A[0]
    x28 = x1 * x7
    x29 = x10 * x28
    x30 = x20 * boys(2, x17)
    x31 = x22 * x4 + x24 * x30
    x32 = x11 - C[1]
    x33 = x13 * x23
    x34 = x21 * x32 + x22 * x33
    x35 = x22 * x32 + x30 * x33
    x36 = -x12 - A[1]
    x37 = x13 * x28
    x38 = -x14 - A[2]
    x39 = x15 * x28

    # 9 item(s)
    S = numpy.array(
        [
            x0 * x25 + x25 * x27 + x26 * (x22 * x27 - x29 * x30) - x29 * x31,
            x0 * x34 + x27 * x34 - x29 * x35,
            0,
            x18 * x25 + x25 * x36 - x31 * x37,
            x18 * x34 + x26 * (x22 * x36 - x30 * x37) + x34 * x36 - x35 * x37,
            0,
            x19 * x25 + x25 * x38 - x31 * x39,
            x19 * x34 + x34 * x38 - x35 * x39,
            x26 * (x22 * x38 - x30 * x39),
        ]
    )
    return S


def eri_0111(a, A, b, B, c, C, d, D):
    """Cartesian [sp|pp] 2-electron electron repulsion integral.

    Generated code; DO NOT modify by hand!"""

    x0 = a + b
    x1 = x0 ** (-1.0)
    x2 = -x1 * (a * A[0] + b * B[0])
    x3 = -x2 - A[0]
    x4 = 2 * c + 2 * d
    x5 = x4 ** (-1.0)
    x6 = numpy.pi**2.5
    x7 = c + d
    x8 = x0 * x7
    x9 = x0 + x7
    x10 = (x8 + numpy.sqrt(x9)) ** (-1.0)
    x11 = A[0] - B[0]
    x12 = A[1] - B[1]
    x13 = A[2] - B[2]
    x14 = numpy.exp(-a * b * x1 * (x11**2 + x12**2 + x13**2))
    x15 = x7 ** (-1.0)
    x16 = C[0] - D[0]
    x17 = C[1] - D[1]
    x18 = C[2] - D[2]
    x19 = numpy.exp(-c * d * x15 * (x16**2 + x17**2 + x18**2))
    x20 = x9 ** (-1.0)
    x21 = x15 * (c * C[0] + d * D[0])
    x22 = -x2 - x21
    x23 = x15 * (c * C[1] + d * D[1])
    x24 = -x1 * (a * A[1] + b * B[1])
    x25 = -x23 - x24
    x26 = -x1 * (a * A[2] + b * B[2])
    x27 = -x15 * (c * C[2] + d * D[2]) - x26
    x28 = x20 * x8 * (x22**2 + x25**2 + x27**2)
    x29 = boys(0, x28)
    x30 = boys(1, x28)
    x31 = 2 * x10 * x14 * x19 * x6
    x32 = x30 * x31
    x33 = x0 * x20
    x34 = x5 * (2 * x10 * x14 * x19 * x29 * x6 - x32 * x33)
    x35 = x21 - C[0]
    x36 = x29 * x31
    x37 = x20 * x22
    x38 = x0 * x37
    x39 = x32 * x38 + x35 * x36
    x40 = x31 * boys(2, x28)
    x41 = x32 * x35 + x38 * x40
    x42 = x37 * x41
    x43 = x0 * x42 + x34 + x35 * x39
    x44 = x5 * (2 * x10 * x14 * x19 * x30 * x6 - x33 * x40)
    x45 = x31 * boys(3, x28)
    x46 = x35 * x40 + x38 * x45
    x47 = x37 * x46
    x48 = x0 * x47 + x35 * x41 + x44
    x49 = x37 * x7
    x50 = 2 * a + 2 * b + x4
    x51 = x50 ** (-1.0)
    x52 = x3 * x39 - x42 * x7 + x51 * (x3 * x32 - x40 * x49)
    x53 = 2 * x51
    x54 = x16 * x39 + x43
    x55 = x23 - C[1]
    x56 = x20 * x25
    x57 = x0 * x56
    x58 = x32 * x57 + x36 * x55
    x59 = x32 * x55 + x40 * x57
    x60 = x35 * x58 + x38 * x59
    x61 = x17 * x39 + x60
    x62 = x40 * x55 + x45 * x57
    x63 = x35 * x59 + x38 * x62
    x64 = x3 * x60 - x49 * x63 + x51 * (x3 * x59 - x49 * x62)
    x65 = x11 * x18
    x66 = x16 * x58 + x60
    x67 = x3 * x58 - x49 * x59
    x68 = x34 + x55 * x58 + x57 * x59
    x69 = x44 + x55 * x59 + x57 * x62
    x70 = x17 * x58 + x68
    x71 = -x24 - A[1]
    x72 = x56 * x7
    x73 = x39 * x71 - x41 * x72
    x74 = x51 * (x41 * x71 - x46 * x72) + x60 * x71 - x63 * x72
    x75 = x12 * x18
    x76 = x51 * (x32 * x71 - x40 * x72) + x58 * x71 - x59 * x72
    x77 = -x26 - A[2]
    x78 = x20 * x27 * x7
    x79 = x39 * x77 - x41 * x78
    x80 = x60 * x77 - x63 * x78
    x81 = x13 * x18
    x82 = x51 * (x41 * x77 - x46 * x78)
    x83 = x58 * x77 - x59 * x78
    x84 = x51 * (x59 * x77 - x62 * x78)
    x85 = x51 * (x32 * x77 - x40 * x78)

    # 27 item(s)
    S = numpy.array(
        [
            x11 * x54
            + x16 * x52
            + x3 * x43
            - x48 * x49
            + x53 * (x3 * x41 - x47 * x7 + x51 * (x3 * x40 - x45 * x49)),
            x11 * x61 + x17 * x52 + x64,
            x18 * x52 + x39 * x65,
            x11 * x66 + x16 * x67 + x64,
            x11 * x70 + x17 * x67 + x3 * x68 - x49 * x69,
            x18 * x67 + x58 * x65,
            0,
            0,
            0,
            x12 * x54 + x16 * x73 + x43 * x71 - x48 * x72,
            x12 * x61 + x17 * x73 + x74,
            x18 * x73 + x39 * x75,
            x12 * x66 + x16 * x76 + x74,
            x12 * x70
            + x17 * x76
            + x53 * (x51 * (x40 * x71 - x45 * x72) + x59 * x71 - x62 * x72)
            + x68 * x71
            - x69 * x72,
            x18 * x76 + x58 * x75,
            0,
            0,
            0,
            x13 * x54 + x16 * x79 + x43 * x77 - x48 * x78,
            x13 * x61 + x17 * x79 + x80,
            x18 * x79 + x39 * x81 + x82,
            x13 * x66 + x16 * x83 + x80,
            x13 * x70 + x17 * x83 + x68 * x77 - x69 * x78,
            x18 * x83 + x58 * x81 + x84,
            x16 * x85 + x82,
            x17 * x85 + x84,
            x18 * x85 + 2 * (x40 * x77 - x45 * x78) / x50**2,
        ]
    )
    return S


def eri_0112(a, A, b, B, c, C, d, D):
    """Cartesian [sp|pd] 2-electron electron repulsion integral.

    Generated code; DO NOT modify by hand!"""

    x0 = a + b
    x1 = x0 ** (-1.0)
    x2 = -x1 * (a * A[0] + b * B[0])
    x3 = -x2 - A[0]
    x4 = c + d
    x5 = x4 ** (-1.0)
    x6 = x5 * (c * C[0] + d * D[0])
    x7 = x6 - C[0]
    x8 = x0 + x4
    x9 = x8 ** (-1.0)
    x10 = -x2 - x6
    x11 = x5 * (c * C[1] + d * D[1])
    x12 = -x1 * (a * A[1] + b * B[1])
    x13 = -x11 - x12
    x14 = -x1 * (a * A[2] + b * B[2])
    x15 = -x14 - x5 * (c * C[2] + d * D[2])
    x16 = x0 * x4
    x17 = x16 * x9 * (x10**2 + x13**2 + x15**2)
    x18 = boys(1, x17)
    x19 = numpy.pi**2.5
    x20 = (x16 + numpy.sqrt(x8)) ** (-1.0)
    x21 = A[0] - B[0]
    x22 = A[1] - B[1]
    x23 = A[2] - B[2]
    x24 = numpy.exp(-a * b * x1 * (x21**2 + x22**2 + x23**2))
    x25 = C[0] - D[0]
    x26 = C[1] - D[1]
    x27 = C[2] - D[2]
    x28 = x27**2
    x29 = numpy.exp(-c * d * x5 * (x25**2 + x26**2 + x28))
    x30 = 2 * x19 * x20 * x24 * x29
    x31 = x18 * x30
    x32 = x0 * x9
    x33 = x10 * x32
    x34 = boys(2, x17)
    x35 = x30 * x34
    x36 = x31 * x7 + x33 * x35
    x37 = x32 * x36
    x38 = boys(0, x17)
    x39 = x30 * x38
    x40 = x31 * x33 + x39 * x7
    x41 = 2 * c + 2 * d
    x42 = x41 ** (-1.0)
    x43 = 2 * x42
    x44 = x42 * (2 * x19 * x20 * x24 * x29 * x38 - x31 * x32)
    x45 = x10 * x37 + x40 * x7 + x44
    x46 = x42 * (2 * x18 * x19 * x20 * x24 * x29 - x32 * x35)
    x47 = x30 * boys(3, x17)
    x48 = x33 * x47 + x35 * x7
    x49 = x32 * x48
    x50 = x10 * x49 + x36 * x7 + x46
    x51 = x10 * x50
    x52 = x32 * x51 + x43 * (-x37 + x40) + x45 * x7
    x53 = x42 * (2 * x19 * x20 * x24 * x29 * x34 - x32 * x47)
    x54 = x30 * boys(4, x17)
    x55 = x33 * x54 + x47 * x7
    x56 = x33 * x55 + x48 * x7 + x53
    x57 = x33 * x56 + x43 * (x36 - x49) + x50 * x7
    x58 = x4 * x9
    x59 = x10 * x58
    x60 = 2 * a + 2 * b + x41
    x61 = x60 ** (-1.0)
    x62 = 2 * x61
    x63 = (
        x3 * x45 - x51 * x58 + x62 * (x3 * x36 - x48 * x59 + x61 * (x3 * x35 - x47 * x59))
    )
    x64 = 3 * x61
    x65 = x3 * x40 - x36 * x59 + x61 * (x3 * x31 - x35 * x59)
    x66 = x25 * x65
    x67 = x25 * x40
    x68 = x25 * x45 + x25 * (x45 + x67) + x52
    x69 = x26 * x40
    x70 = x11 - C[1]
    x71 = x13 * x32
    x72 = x31 * x71 + x39 * x70
    x73 = x31 * x70 + x35 * x71
    x74 = x32 * x73
    x75 = x10 * x74 + x7 * x72
    x76 = x69 + x75
    x77 = x42 * (x72 - x74)
    x78 = x35 * x70 + x47 * x71
    x79 = x32 * x78
    x80 = x10 * x79 + x7 * x73
    x81 = x33 * x80 + x7 * x75 + x77
    x82 = x25 * x76 + x26 * x45 + x81
    x83 = x26 * x65
    x84 = x3 * x75 - x59 * x80 + x61 * (x3 * x73 - x59 * x78)
    x85 = x83 + x84
    x86 = x47 * x70 + x54 * x71
    x87 = x33 * x86 + x7 * x78
    x88 = x42 * (x73 - x79)
    x89 = x33 * x87 + x7 * x80 + x88
    x90 = (
        x3 * x81 - x59 * x89 + x62 * (x3 * x80 - x59 * x87 + x61 * (x3 * x78 - x59 * x86))
    )
    x91 = x27 * x45 + x27 * x67
    x92 = x13 * x74 + x44 + x70 * x72
    x93 = x13 * x79 + x46 + x70 * x73
    x94 = x33 * x93 + x7 * x92
    x95 = x26 * x75 + x94
    x96 = x26 * x76 + x95
    x97 = x53 + x70 * x78 + x71 * x86
    x98 = x33 * x97 + x7 * x93
    x99 = x26 * x84 + x3 * x94 - x59 * x98 + x61 * (x3 * x93 - x59 * x97)
    x100 = x27 * x75
    x101 = x100 + x27 * x69
    x102 = x27 * x84
    x103 = x21 * x28
    x104 = x25 * x72
    x105 = x25 * x75 + x25 * (x104 + x75) + x81
    x106 = x3 * x72 - x59 * x73
    x107 = x106 * x25
    x108 = x26 * x72
    x109 = x108 + x92
    x110 = x109 * x25 + x95
    x111 = x106 * x26
    x112 = x3 * x92 - x59 * x93
    x113 = x111 + x112
    x114 = x100 + x104 * x27
    x115 = x70 * x92 + x71 * x93 + 2 * x77
    x116 = x70 * x93 + x71 * x97 + 2 * x88
    x117 = x109 * x26 + x115 + x26 * x92
    x118 = x108 * x27 + x27 * x92
    x119 = -x12 - A[1]
    x120 = x13 * x58
    x121 = x119 * x45 - x120 * x50
    x122 = x119 * x40 - x120 * x36
    x123 = x122 * x25
    x124 = x122 * x26
    x125 = x119 * x75 - x120 * x80 + x61 * (x119 * x36 - x120 * x48)
    x126 = x124 + x125
    x127 = x119 * x81 - x120 * x89 + x61 * (x119 * x50 - x120 * x56)
    x128 = (
        x119 * x94
        - x120 * x98
        + x125 * x26
        + x62 * (x119 * x80 - x120 * x87 + x61 * (x119 * x48 - x120 * x55))
    )
    x129 = x125 * x27
    x130 = x22 * x28
    x131 = x119 * x72 - x120 * x73 + x61 * (x119 * x31 - x120 * x35)
    x132 = x131 * x25
    x133 = x131 * x26
    x134 = (
        x119 * x92
        - x120 * x93
        + x62 * (x119 * x73 - x120 * x78 + x61 * (x119 * x35 - x120 * x47))
    )
    x135 = x133 + x134
    x136 = -x14 - A[2]
    x137 = x15 * x58
    x138 = x136 * x45 - x137 * x50
    x139 = x136 * x40 - x137 * x36
    x140 = x136 * x75 - x137 * x80
    x141 = x139 * x26 + x140
    x142 = x136 * x81 - x137 * x89
    x143 = x61 * (x136 * x36 - x137 * x48)
    x144 = x139 * x27 + x143
    x145 = x61 * (x136 * x50 - x137 * x56)
    x146 = x136 * x94 - x137 * x98 + x140 * x26
    x147 = x61 * (x136 * x80 - x137 * x87)
    x148 = x140 * x27 + x147
    x149 = x23 * x28
    x150 = 2 / x60**2
    x151 = x143 * x27 + x150 * (x136 * x48 - x137 * x55)
    x152 = x136 * x72 - x137 * x73
    x153 = x136 * x92 - x137 * x93
    x154 = x152 * x26 + x153
    x155 = x61 * (x136 * x73 - x137 * x78)
    x156 = x152 * x27 + x155
    x157 = x61 * (x136 * x93 - x137 * x97)
    x158 = x150 * (x136 * x78 - x137 * x86) + x155 * x27
    x159 = x61 * (x136 * x31 - x137 * x35)
    x160 = x155 + x159 * x26
    x161 = x150 * (x136 * x35 - x137 * x47)
    x162 = x159 * x27 + x161

    # 54 item(s)
    S = numpy.array(
        [
            x21 * x68
            + x25 * x63
            + x25 * (x63 + x66)
            + x3 * x52
            - x57 * x59
            + x64
            * (
                x3 * x50
                - x56 * x59
                + x62 * (x3 * x48 - x55 * x59 + x61 * (x3 * x47 - x54 * x59))
            ),
            x21 * x82 + x25 * x85 + x26 * x63 + x90,
            x21 * x91 + x27 * x63 + x27 * x66,
            x21 * x96 + x26 * x85 + x99,
            x101 * x21 + x102 + x27 * x83,
            x103 * x40 + x28 * x65,
            x105 * x21 + x25 * x84 + x25 * (x107 + x84) + x90,
            x110 * x21 + x113 * x25 + x99,
            x102 + x107 * x27 + x114 * x21,
            x112 * x26 + x113 * x26 + x115 * x3 - x116 * x59 + x117 * x21,
            x111 * x27 + x112 * x27 + x118 * x21,
            x103 * x72 + x106 * x28,
            0,
            0,
            0,
            0,
            0,
            0,
            x119 * x52 - x120 * x57 + x121 * x25 + x22 * x68 + x25 * (x121 + x123),
            x121 * x26 + x126 * x25 + x127 + x22 * x82,
            x121 * x27 + x123 * x27 + x22 * x91,
            x126 * x26 + x128 + x22 * x96,
            x101 * x22 + x124 * x27 + x129,
            x122 * x28 + x130 * x40,
            x105 * x22 + x125 * x25 + x127 + x25 * (x125 + x132),
            x110 * x22 + x128 + x135 * x25,
            x114 * x22 + x129 + x132 * x27,
            x115 * x119
            - x116 * x120
            + x117 * x22
            + x134 * x26
            + x135 * x26
            + x64
            * (
                x119 * x93
                - x120 * x97
                + x62 * (x119 * x78 - x120 * x86 + x61 * (x119 * x47 - x120 * x54))
            ),
            x118 * x22 + x133 * x27 + x134 * x27,
            x130 * x72 + x131 * x28,
            0,
            0,
            0,
            0,
            0,
            0,
            x136 * x52 - x137 * x57 + x138 * x25 + x23 * x68 + x25 * (x138 + x139 * x25),
            x138 * x26 + x141 * x25 + x142 + x23 * x82,
            x138 * x27 + x144 * x25 + x145 + x23 * x91,
            x141 * x26 + x146 + x23 * x96,
            x101 * x23 + x144 * x26 + x148,
            x144 * x27 + x149 * x40 + x151,
            x105 * x23 + x140 * x25 + x142 + x25 * (x140 + x152 * x25),
            x110 * x23 + x146 + x154 * x25,
            x114 * x23 + x148 + x156 * x25,
            x115 * x136 - x116 * x137 + x117 * x23 + x153 * x26 + x154 * x26,
            x118 * x23 + x153 * x27 + x156 * x26 + x157,
            x149 * x72 + x156 * x27 + x158,
            x143 * x25 + x145 + x25 * (x143 + x159 * x25),
            x143 * x26 + x147 + x160 * x25,
            x151 + x162 * x25,
            x155 * x26 + x157 + x160 * x26,
            x158 + x162 * x26,
            x161 * x27 + x162 * x27 + 6 * (x136 * x47 - x137 * x54) / x60**3,
        ]
    )
    return S


def eri_0120(a, A, b, B, c, C, d, D):
    """Cartesian [sp|ds] 2-electron electron repulsion integral.

    Generated code; DO NOT modify by hand!"""

    x0 = A[0] - B[0]
    x1 = 2 * c + 2 * d
    x2 = x1 ** (-1.0)
    x3 = numpy.pi**2.5
    x4 = a + b
    x5 = c + d
    x6 = x4 * x5
    x7 = x4 + x5
    x8 = (x6 + numpy.sqrt(x7)) ** (-1.0)
    x9 = x4 ** (-1.0)
    x10 = A[1] - B[1]
    x11 = A[2] - B[2]
    x12 = numpy.exp(-a * b * x9 * (x0**2 + x10**2 + x11**2))
    x13 = x5 ** (-1.0)
    x14 = numpy.exp(
        -c * d * x13 * ((C[0] - D[0]) ** 2 + (C[1] - D[1]) ** 2 + (C[2] - D[2]) ** 2)
    )
    x15 = x7 ** (-1.0)
    x16 = x13 * (c * C[0] + d * D[0])
    x17 = -x9 * (a * A[0] + b * B[0])
    x18 = -x16 - x17
    x19 = x13 * (c * C[1] + d * D[1])
    x20 = -x9 * (a * A[1] + b * B[1])
    x21 = -x19 - x20
    x22 = -x9 * (a * A[2] + b * B[2])
    x23 = -x13 * (c * C[2] + d * D[2]) - x22
    x24 = x15 * x6 * (x18**2 + x21**2 + x23**2)
    x25 = boys(0, x24)
    x26 = boys(1, x24)
    x27 = 2 * x12 * x14 * x3 * x8
    x28 = x26 * x27
    x29 = x15 * x4
    x30 = x2 * (2 * x12 * x14 * x25 * x3 * x8 - x28 * x29)
    x31 = x16 - C[0]
    x32 = x25 * x27
    x33 = x15 * x18
    x34 = x33 * x4
    x35 = x27 * boys(2, x24)
    x36 = x28 * x31 + x34 * x35
    x37 = x30 + x31 * (x28 * x34 + x31 * x32) + x34 * x36
    x38 = -x17 - A[0]
    x39 = x2 * (2 * x12 * x14 * x26 * x3 * x8 - x29 * x35)
    x40 = x27 * boys(3, x24)
    x41 = x31 * x35 + x34 * x40
    x42 = x31 * x36 + x34 * x41 + x39
    x43 = x33 * x5
    x44 = 2 * a + 2 * b + x1
    x45 = x44 ** (-1.0)
    x46 = 2 * x45
    x47 = x19 - C[1]
    x48 = x15 * x21
    x49 = x4 * x48
    x50 = x28 * x49 + x32 * x47
    x51 = x28 * x47 + x35 * x49
    x52 = x31 * x50 + x34 * x51
    x53 = x35 * x47 + x40 * x49
    x54 = x31 * x51 + x34 * x53
    x55 = x30 + x47 * x50 + x49 * x51
    x56 = x39 + x47 * x51 + x49 * x53
    x57 = -x20 - A[1]
    x58 = x48 * x5
    x59 = -x22 - A[2]
    x60 = x15 * x23 * x5

    # 18 item(s)
    S = numpy.array(
        [
            x0 * x37
            + x37 * x38
            - x42 * x43
            + x46 * (x36 * x38 - x41 * x43 + x45 * (x35 * x38 - x40 * x43)),
            x0 * x52 + x38 * x52 - x43 * x54 + x45 * (x38 * x51 - x43 * x53),
            0,
            x0 * x55 + x38 * x55 - x43 * x56,
            0,
            0,
            x10 * x37 + x37 * x57 - x42 * x58,
            x10 * x52 + x45 * (x36 * x57 - x41 * x58) + x52 * x57 - x54 * x58,
            0,
            x10 * x55
            + x46 * (x45 * (x35 * x57 - x40 * x58) + x51 * x57 - x53 * x58)
            + x55 * x57
            - x56 * x58,
            0,
            0,
            x11 * x37 + x37 * x59 - x42 * x60,
            x11 * x52 + x52 * x59 - x54 * x60,
            x45 * (x36 * x59 - x41 * x60),
            x11 * x55 + x55 * x59 - x56 * x60,
            x45 * (x51 * x59 - x53 * x60),
            2 * (x35 * x59 - x40 * x60) / x44**2,
        ]
    )
    return S


def eri_0121(a, A, b, B, c, C, d, D):
    """Cartesian [sp|dp] 2-electron electron repulsion integral.

    Generated code; DO NOT modify by hand!"""

    x0 = a + b
    x1 = x0 ** (-1.0)
    x2 = -x1 * (a * A[0] + b * B[0])
    x3 = -x2 - A[0]
    x4 = c + d
    x5 = x4 ** (-1.0)
    x6 = x5 * (c * C[0] + d * D[0])
    x7 = x6 - C[0]
    x8 = x0 + x4
    x9 = x8 ** (-1.0)
    x10 = -x2 - x6
    x11 = x5 * (c * C[1] + d * D[1])
    x12 = -x1 * (a * A[1] + b * B[1])
    x13 = -x11 - x12
    x14 = -x1 * (a * A[2] + b * B[2])
    x15 = -x14 - x5 * (c * C[2] + d * D[2])
    x16 = x0 * x4
    x17 = x16 * x9 * (x10**2 + x13**2 + x15**2)
    x18 = boys(1, x17)
    x19 = numpy.pi**2.5
    x20 = (x16 + numpy.sqrt(x8)) ** (-1.0)
    x21 = A[0] - B[0]
    x22 = A[1] - B[1]
    x23 = A[2] - B[2]
    x24 = numpy.exp(-a * b * x1 * (x21**2 + x22**2 + x23**2))
    x25 = C[0] - D[0]
    x26 = C[1] - D[1]
    x27 = C[2] - D[2]
    x28 = numpy.exp(-c * d * x5 * (x25**2 + x26**2 + x27**2))
    x29 = 2 * x19 * x20 * x24 * x28
    x30 = x18 * x29
    x31 = x0 * x9
    x32 = x10 * x31
    x33 = boys(2, x17)
    x34 = x29 * x33
    x35 = x30 * x7 + x32 * x34
    x36 = x31 * x35
    x37 = boys(0, x17)
    x38 = x29 * x37
    x39 = x30 * x32 + x38 * x7
    x40 = 2 * c + 2 * d
    x41 = x40 ** (-1.0)
    x42 = 2 * x41
    x43 = x41 * (2 * x19 * x20 * x24 * x28 * x37 - x30 * x31)
    x44 = x10 * x36 + x39 * x7 + x43
    x45 = x41 * (2 * x18 * x19 * x20 * x24 * x28 - x31 * x34)
    x46 = x29 * boys(3, x17)
    x47 = x32 * x46 + x34 * x7
    x48 = x31 * x47
    x49 = x10 * x48 + x35 * x7 + x45
    x50 = x10 * x49
    x51 = x31 * x50 + x42 * (-x36 + x39) + x44 * x7
    x52 = x41 * (2 * x19 * x20 * x24 * x28 * x33 - x31 * x46)
    x53 = x29 * boys(4, x17)
    x54 = x32 * x53 + x46 * x7
    x55 = x32 * x54 + x47 * x7 + x52
    x56 = x32 * x55 + x42 * (x35 - x48) + x49 * x7
    x57 = x4 * x9
    x58 = x10 * x57
    x59 = 2 * a + 2 * b + x40
    x60 = x59 ** (-1.0)
    x61 = 2 * x60
    x62 = (
        x3 * x44 - x50 * x57 + x61 * (x3 * x35 - x47 * x58 + x60 * (x3 * x34 - x46 * x58))
    )
    x63 = 3 * x60
    x64 = x25 * x44 + x51
    x65 = x11 - C[1]
    x66 = x13 * x31
    x67 = x30 * x65 + x34 * x66
    x68 = x31 * x67
    x69 = x30 * x66 + x38 * x65
    x70 = x41 * (-x68 + x69)
    x71 = x10 * x68 + x69 * x7
    x72 = x34 * x65 + x46 * x66
    x73 = x31 * x72
    x74 = x10 * x73 + x67 * x7
    x75 = x32 * x74 + x7 * x71 + x70
    x76 = x26 * x44 + x75
    x77 = x46 * x65 + x53 * x66
    x78 = x32 * x77 + x7 * x72
    x79 = x41 * (x67 - x73)
    x80 = x32 * x78 + x7 * x74 + x79
    x81 = (
        x3 * x75 - x58 * x80 + x61 * (x3 * x74 - x58 * x78 + x60 * (x3 * x72 - x58 * x77))
    )
    x82 = x21 * x27
    x83 = x25 * x71 + x75
    x84 = x3 * x71 - x58 * x74 + x60 * (x3 * x67 - x58 * x72)
    x85 = x13 * x68 + x43 + x65 * x69
    x86 = x13 * x73 + x45 + x65 * x67
    x87 = x32 * x86 + x7 * x85
    x88 = x26 * x71 + x87
    x89 = x52 + x65 * x72 + x66 * x77
    x90 = x32 * x89 + x7 * x86
    x91 = x3 * x87 - x58 * x90 + x60 * (x3 * x86 - x58 * x89)
    x92 = x25 * x85 + x87
    x93 = x3 * x85 - x58 * x86
    x94 = x65 * x85 + x66 * x86 + 2 * x70
    x95 = x65 * x86 + x66 * x89 + 2 * x79
    x96 = x26 * x85 + x94
    x97 = -x12 - A[1]
    x98 = x13 * x57
    x99 = x44 * x97 - x49 * x98
    x100 = x60 * (x49 * x97 - x55 * x98) + x75 * x97 - x80 * x98
    x101 = x22 * x27
    x102 = x60 * (x35 * x97 - x47 * x98) + x71 * x97 - x74 * x98
    x103 = (
        x61 * (x60 * (x47 * x97 - x54 * x98) + x74 * x97 - x78 * x98)
        + x87 * x97
        - x90 * x98
    )
    x104 = (
        x61 * (x60 * (x34 * x97 - x46 * x98) + x67 * x97 - x72 * x98)
        + x85 * x97
        - x86 * x98
    )
    x105 = -x14 - A[2]
    x106 = x15 * x57
    x107 = x105 * x44 - x106 * x49
    x108 = x105 * x75 - x106 * x80
    x109 = x23 * x27
    x110 = x60 * (x105 * x49 - x106 * x55)
    x111 = x105 * x71 - x106 * x74
    x112 = x105 * x87 - x106 * x90
    x113 = x60 * (x105 * x74 - x106 * x78)
    x114 = x60 * (x105 * x35 - x106 * x47)
    x115 = 2 / x59**2
    x116 = x115 * (x105 * x47 - x106 * x54)
    x117 = x105 * x85 - x106 * x86
    x118 = x60 * (x105 * x86 - x106 * x89)
    x119 = x60 * (x105 * x67 - x106 * x72)
    x120 = x115 * (x105 * x72 - x106 * x77)
    x121 = x115 * (x105 * x34 - x106 * x46)

    # 54 item(s)
    S = numpy.array(
        [
            x21 * x64
            + x25 * x62
            + x3 * x51
            - x56 * x58
            + x63
            * (
                x3 * x49
                - x55 * x58
                + x61 * (x3 * x47 - x54 * x58 + x60 * (x3 * x46 - x53 * x58))
            ),
            x21 * x76 + x26 * x62 + x81,
            x27 * x62 + x44 * x82,
            x21 * x83 + x25 * x84 + x81,
            x21 * x88 + x26 * x84 + x91,
            x27 * x84 + x71 * x82,
            0,
            0,
            0,
            x21 * x92 + x25 * x93 + x91,
            x21 * x96 + x26 * x93 + x3 * x94 - x58 * x95,
            x27 * x93 + x82 * x85,
            0,
            0,
            0,
            0,
            0,
            0,
            x22 * x64 + x25 * x99 + x51 * x97 - x56 * x98,
            x100 + x22 * x76 + x26 * x99,
            x101 * x44 + x27 * x99,
            x100 + x102 * x25 + x22 * x83,
            x102 * x26 + x103 + x22 * x88,
            x101 * x71 + x102 * x27,
            0,
            0,
            0,
            x103 + x104 * x25 + x22 * x92,
            x104 * x26
            + x22 * x96
            + x63
            * (
                x61 * (x60 * (x46 * x97 - x53 * x98) + x72 * x97 - x77 * x98)
                + x86 * x97
                - x89 * x98
            )
            + x94 * x97
            - x95 * x98,
            x101 * x85 + x104 * x27,
            0,
            0,
            0,
            0,
            0,
            0,
            x105 * x51 - x106 * x56 + x107 * x25 + x23 * x64,
            x107 * x26 + x108 + x23 * x76,
            x107 * x27 + x109 * x44 + x110,
            x108 + x111 * x25 + x23 * x83,
            x111 * x26 + x112 + x23 * x88,
            x109 * x71 + x111 * x27 + x113,
            x110 + x114 * x25,
            x113 + x114 * x26,
            x114 * x27 + x116,
            x112 + x117 * x25 + x23 * x92,
            x105 * x94 - x106 * x95 + x117 * x26 + x23 * x96,
            x109 * x85 + x117 * x27 + x118,
            x113 + x119 * x25,
            x118 + x119 * x26,
            x119 * x27 + x120,
            x116 + x121 * x25,
            x120 + x121 * x26,
            x121 * x27 + 6 * (x105 * x46 - x106 * x53) / x59**3,
        ]
    )
    return S


def eri_0122(a, A, b, B, c, C, d, D):
    """Cartesian [sp|dd] 2-electron electron repulsion integral.

    Generated code; DO NOT modify by hand!"""

    x0 = a + b
    x1 = x0 ** (-1.0)
    x2 = -x1 * (a * A[0] + b * B[0])
    x3 = -x2 - A[0]
    x4 = 2 * c + 2 * d
    x5 = x4 ** (-1.0)
    x6 = numpy.pi**2.5
    x7 = c + d
    x8 = x0 * x7
    x9 = x0 + x7
    x10 = (x8 + numpy.sqrt(x9)) ** (-1.0)
    x11 = A[0] - B[0]
    x12 = A[1] - B[1]
    x13 = A[2] - B[2]
    x14 = numpy.exp(-a * b * x1 * (x11**2 + x12**2 + x13**2))
    x15 = x7 ** (-1.0)
    x16 = C[0] - D[0]
    x17 = C[1] - D[1]
    x18 = C[2] - D[2]
    x19 = x18**2
    x20 = numpy.exp(-c * d * x15 * (x16**2 + x17**2 + x19))
    x21 = x9 ** (-1.0)
    x22 = x15 * (c * C[0] + d * D[0])
    x23 = -x2 - x22
    x24 = x15 * (c * C[1] + d * D[1])
    x25 = -x1 * (a * A[1] + b * B[1])
    x26 = -x24 - x25
    x27 = -x1 * (a * A[2] + b * B[2])
    x28 = -x15 * (c * C[2] + d * D[2]) - x27
    x29 = x21 * x8 * (x23**2 + x26**2 + x28**2)
    x30 = boys(1, x29)
    x31 = x0 * x21
    x32 = boys(2, x29)
    x33 = 2 * x10 * x14 * x20 * x6
    x34 = x32 * x33
    x35 = x5 * (2 * x10 * x14 * x20 * x30 * x6 - x31 * x34)
    x36 = x22 - C[0]
    x37 = x30 * x33
    x38 = x23 * x31
    x39 = x34 * x38 + x36 * x37
    x40 = boys(3, x29)
    x41 = x33 * x40
    x42 = x34 * x36 + x38 * x41
    x43 = x31 * x42
    x44 = x23 * x43 + x35 + x36 * x39
    x45 = x31 * x44
    x46 = boys(0, x29)
    x47 = x5 * (2 * x10 * x14 * x20 * x46 * x6 - x31 * x37)
    x48 = x33 * x46
    x49 = x36 * x48 + x37 * x38
    x50 = x31 * x39
    x51 = x23 * x50 + x36 * x49 + x47
    x52 = 3 * x5
    x53 = 2 * x5
    x54 = x23 * x45 + x36 * x51 + x53 * (x49 - x50)
    x55 = x5 * (2 * x10 * x14 * x20 * x32 * x6 - x31 * x41)
    x56 = x33 * boys(4, x29)
    x57 = x36 * x41 + x38 * x56
    x58 = x31 * x57
    x59 = x23 * x58 + x36 * x42 + x55
    x60 = x31 * x59
    x61 = x23 * x60 + x36 * x44 + x53 * (x39 - x43)
    x62 = x23 * x61
    x63 = x31 * x62 + x36 * x54 + x52 * (-x45 + x51)
    x64 = x5 * (2 * x10 * x14 * x20 * x40 * x6 - x31 * x56)
    x65 = x33 * boys(5, x29)
    x66 = x36 * x56 + x38 * x65
    x67 = x36 * x57 + x38 * x66 + x64
    x68 = x36 * x59 + x38 * x67 + x53 * (x42 - x58)
    x69 = x36 * x61 + x38 * x68 + x52 * (x44 - x60)
    x70 = x21 * x7
    x71 = x23 * x70
    x72 = 2 * a + 2 * b + x4
    x73 = x72 ** (-1.0)
    x74 = 2 * x73
    x75 = 3 * x73
    x76 = (
        x3 * x54
        - x62 * x70
        + x75
        * (
            x3 * x44
            - x59 * x71
            + x74 * (x3 * x42 - x57 * x71 + x73 * (x3 * x41 - x56 * x71))
        )
    )
    x77 = 4 * x73
    x78 = (
        x3 * x51 - x44 * x71 + x74 * (x3 * x39 - x42 * x71 + x73 * (x3 * x34 - x41 * x71))
    )
    x79 = x16 * x78
    x80 = x16 * x51
    x81 = x16 * x54 + x16 * (x54 + x80) + x63
    x82 = x17 * x51
    x83 = x24 - C[1]
    x84 = x26 * x31
    x85 = x34 * x84 + x37 * x83
    x86 = x31 * x85
    x87 = x37 * x84 + x48 * x83
    x88 = x5 * (-x86 + x87)
    x89 = x23 * x86 + x36 * x87
    x90 = x34 * x83 + x41 * x84
    x91 = x31 * x90
    x92 = x23 * x91 + x36 * x85
    x93 = x31 * x92
    x94 = x23 * x93 + x36 * x89 + x88
    x95 = x82 + x94
    x96 = x5 * (x85 - x91)
    x97 = x41 * x83 + x56 * x84
    x98 = x31 * x97
    x99 = x23 * x98 + x36 * x90
    x100 = x31 * x99
    x101 = x100 * x23 + x36 * x92 + x96
    x102 = x101 * x38 + x36 * x94 + x53 * (x89 - x93)
    x103 = x102 + x16 * x95 + x17 * x54
    x104 = x17 * x78
    x105 = (
        -x101 * x71
        + x3 * x94
        + x74 * (x3 * x92 - x71 * x99 + x73 * (x3 * x90 - x71 * x97))
    )
    x106 = x104 + x105
    x107 = x5 * (x90 - x98)
    x108 = x56 * x83 + x65 * x84
    x109 = x108 * x38 + x36 * x97
    x110 = x107 + x109 * x38 + x36 * x99
    x111 = x101 * x36 + x110 * x38 + x53 * (-x100 + x92)
    x112 = (
        x102 * x3
        - x111 * x71
        + x75
        * (
            x101 * x3
            - x110 * x71
            + x74 * (-x109 * x71 + x3 * x99 + x73 * (-x108 * x71 + x3 * x97))
        )
    )
    x113 = x18 * x54 + x18 * x80
    x114 = x26 * x91 + x35 + x83 * x85
    x115 = x114 * x31
    x116 = x26 * x86 + x47 + x83 * x87
    x117 = x5 * (-x115 + x116)
    x118 = x115 * x23 + x116 * x36
    x119 = x26 * x98 + x55 + x83 * x90
    x120 = x119 * x31
    x121 = x114 * x36 + x120 * x23
    x122 = x117 + x118 * x36 + x121 * x38
    x123 = x122 + x17 * x94
    x124 = x123 + x17 * x95
    x125 = x108 * x84 + x64 + x83 * x97
    x126 = x119 * x36 + x125 * x38
    x127 = x5 * (x114 - x120)
    x128 = x121 * x36 + x126 * x38 + x127
    x129 = (
        x122 * x3
        - x128 * x71
        + x74 * (x121 * x3 - x126 * x71 + x73 * (x119 * x3 - x125 * x71))
    )
    x130 = x105 * x17 + x129
    x131 = x18 * x94
    x132 = x131 + x18 * x82
    x133 = x105 * x18
    x134 = x11 * x19
    x135 = x16 * x89
    x136 = x102 + x16 * x94 + x16 * (x135 + x94)
    x137 = x3 * x89 - x71 * x92 + x73 * (x3 * x85 - x71 * x90)
    x138 = x137 * x16
    x139 = x17 * x89
    x140 = x118 + x139
    x141 = x123 + x140 * x16
    x142 = x137 * x17
    x143 = x118 * x3 - x121 * x71 + x73 * (x114 * x3 - x119 * x71)
    x144 = x142 + x143
    x145 = x131 + x135 * x18
    x146 = x115 * x26 + x116 * x83 + 2 * x88
    x147 = x114 * x83 + x120 * x26 + 2 * x96
    x148 = x146 * x36 + x147 * x38
    x149 = x118 * x17 + x148
    x150 = x140 * x17 + x149
    x151 = 2 * x107 + x119 * x83 + x125 * x84
    x152 = x147 * x36 + x151 * x38
    x153 = x143 * x17 + x148 * x3 - x152 * x71 + x73 * (x147 * x3 - x151 * x71)
    x154 = x118 * x18
    x155 = x139 * x18 + x154
    x156 = x143 * x18
    x157 = x116 * x16
    x158 = x118 * x16 + x122 + x16 * (x118 + x157)
    x159 = -x114 * x71 + x116 * x3
    x160 = x159 * x16
    x161 = x116 * x17
    x162 = x146 + x161
    x163 = x149 + x16 * x162
    x164 = x159 * x17
    x165 = x146 * x3 - x147 * x71
    x166 = x164 + x165
    x167 = x154 + x157 * x18
    x168 = 3 * x117 + x146 * x83 + x147 * x84
    x169 = 3 * x127 + x147 * x83 + x151 * x84
    x170 = x146 * x17 + x162 * x17 + x168
    x171 = x146 * x18 + x161 * x18
    x172 = -x25 - A[1]
    x173 = x26 * x70
    x174 = x172 * x54 - x173 * x61
    x175 = x172 * x51 - x173 * x44
    x176 = x16 * x175
    x177 = x17 * x175
    x178 = -x101 * x173 + x172 * x94 + x73 * (x172 * x44 - x173 * x59)
    x179 = x177 + x178
    x180 = x102 * x172 - x111 * x173 + x73 * (x172 * x61 - x173 * x68)
    x181 = (
        x122 * x172
        - x128 * x173
        + x74 * (x101 * x172 - x110 * x173 + x73 * (x172 * x59 - x173 * x67))
    )
    x182 = x17 * x178 + x181
    x183 = x178 * x18
    x184 = x12 * x19
    x185 = x172 * x89 - x173 * x92 + x73 * (x172 * x39 - x173 * x42)
    x186 = x16 * x185
    x187 = x17 * x185
    x188 = (
        x118 * x172
        - x121 * x173
        + x74 * (x172 * x92 - x173 * x99 + x73 * (x172 * x42 - x173 * x57))
    )
    x189 = x187 + x188
    x190 = (
        x148 * x172
        - x152 * x173
        + x17 * x188
        + x75
        * (
            x121 * x172
            - x126 * x173
            + x74 * (-x109 * x173 + x172 * x99 + x73 * (x172 * x57 - x173 * x66))
        )
    )
    x191 = x18 * x188
    x192 = (
        -x114 * x173
        + x116 * x172
        + x74 * (x172 * x85 - x173 * x90 + x73 * (x172 * x34 - x173 * x41))
    )
    x193 = x16 * x192
    x194 = x17 * x192
    x195 = (
        x146 * x172
        - x147 * x173
        + x75
        * (
            x114 * x172
            - x119 * x173
            + x74 * (x172 * x90 - x173 * x97 + x73 * (x172 * x41 - x173 * x56))
        )
    )
    x196 = x194 + x195
    x197 = -x27 - A[2]
    x198 = x28 * x70
    x199 = x197 * x54 - x198 * x61
    x200 = x197 * x51 - x198 * x44
    x201 = -x101 * x198 + x197 * x94
    x202 = x17 * x200 + x201
    x203 = x102 * x197 - x111 * x198
    x204 = x73 * (x197 * x44 - x198 * x59)
    x205 = x18 * x200 + x204
    x206 = x73 * (x197 * x61 - x198 * x68)
    x207 = x122 * x197 - x128 * x198
    x208 = x17 * x201 + x207
    x209 = x73 * (x101 * x197 - x110 * x198)
    x210 = x18 * x201 + x209
    x211 = x13 * x19
    x212 = 2 / x72**2
    x213 = x212 * (x197 * x59 - x198 * x67)
    x214 = x18 * x204 + x213
    x215 = x197 * x89 - x198 * x92
    x216 = x118 * x197 - x121 * x198
    x217 = x17 * x215 + x216
    x218 = x73 * (x197 * x92 - x198 * x99)
    x219 = x18 * x215 + x218
    x220 = x148 * x197 - x152 * x198 + x17 * x216
    x221 = x73 * (x121 * x197 - x126 * x198)
    x222 = x18 * x216 + x221
    x223 = x212 * (-x109 * x198 + x197 * x99)
    x224 = x18 * x218 + x223
    x225 = x73 * (x197 * x39 - x198 * x42)
    x226 = x17 * x225 + x218
    x227 = x212 * (x197 * x42 - x198 * x57)
    x228 = x18 * x225 + x227
    x229 = x17 * x218 + x221
    x230 = 6 / x72**3
    x231 = x18 * x227 + x230 * (x197 * x57 - x198 * x66)
    x232 = -x114 * x198 + x116 * x197
    x233 = x146 * x197 - x147 * x198
    x234 = x17 * x232 + x233
    x235 = x73 * (x114 * x197 - x119 * x198)
    x236 = x18 * x232 + x235
    x237 = x73 * (x147 * x197 - x151 * x198)
    x238 = x212 * (x119 * x197 - x125 * x198)
    x239 = x18 * x235 + x238
    x240 = x73 * (x197 * x85 - x198 * x90)
    x241 = x17 * x240 + x235
    x242 = x212 * (x197 * x90 - x198 * x97)
    x243 = x18 * x240 + x242
    x244 = x18 * x242 + x230 * (-x108 * x198 + x197 * x97)
    x245 = x212 * (x197 * x34 - x198 * x41)
    x246 = x17 * x245 + x242
    x247 = x230 * (x197 * x41 - x198 * x56)
    x248 = x18 * x245 + x247

    # 108 item(s)
    S = numpy.array(
        [
            x11 * x81
            + x16 * x76
            + x16 * (x76 + x79)
            + x3 * x63
            - x69 * x71
            + x77
            * (
                x3 * x61
                - x68 * x71
                + x75
                * (
                    x3 * x59
                    - x67 * x71
                    + x74 * (x3 * x57 - x66 * x71 + x73 * (x3 * x56 - x65 * x71))
                )
            ),
            x103 * x11 + x106 * x16 + x112 + x17 * x76,
            x11 * x113 + x18 * x76 + x18 * x79,
            x106 * x17 + x11 * x124 + x130,
            x104 * x18 + x11 * x132 + x133,
            x134 * x51 + x19 * x78,
            x105 * x16 + x11 * x136 + x112 + x16 * (x105 + x138),
            x11 * x141 + x130 + x144 * x16,
            x11 * x145 + x133 + x138 * x18,
            x11 * x150 + x144 * x17 + x153,
            x11 * x155 + x142 * x18 + x156,
            x134 * x89 + x137 * x19,
            0,
            0,
            0,
            0,
            0,
            0,
            x11 * x158 + x129 + x143 * x16 + x16 * (x143 + x160),
            x11 * x163 + x153 + x16 * x166,
            x11 * x167 + x156 + x160 * x18,
            x11 * x170 + x165 * x17 + x166 * x17 + x168 * x3 - x169 * x71,
            x11 * x171 + x164 * x18 + x165 * x18,
            x116 * x134 + x159 * x19,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            x12 * x81 + x16 * x174 + x16 * (x174 + x176) + x172 * x63 - x173 * x69,
            x103 * x12 + x16 * x179 + x17 * x174 + x180,
            x113 * x12 + x174 * x18 + x176 * x18,
            x12 * x124 + x17 * x179 + x182,
            x12 * x132 + x177 * x18 + x183,
            x175 * x19 + x184 * x51,
            x12 * x136 + x16 * x178 + x16 * (x178 + x186) + x180,
            x12 * x141 + x16 * x189 + x182,
            x12 * x145 + x18 * x186 + x183,
            x12 * x150 + x17 * x189 + x190,
            x12 * x155 + x18 * x187 + x191,
            x184 * x89 + x185 * x19,
            0,
            0,
            0,
            0,
            0,
            0,
            x12 * x158 + x16 * x188 + x16 * (x188 + x193) + x181,
            x12 * x163 + x16 * x196 + x190,
            x12 * x167 + x18 * x193 + x191,
            x12 * x170
            + x168 * x172
            - x169 * x173
            + x17 * x195
            + x17 * x196
            + x77
            * (
                x147 * x172
                - x151 * x173
                + x75
                * (
                    x119 * x172
                    - x125 * x173
                    + x74 * (-x108 * x173 + x172 * x97 + x73 * (x172 * x56 - x173 * x65))
                )
            ),
            x12 * x171 + x18 * x194 + x18 * x195,
            x116 * x184 + x19 * x192,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            x13 * x81 + x16 * x199 + x16 * (x16 * x200 + x199) + x197 * x63 - x198 * x69,
            x103 * x13 + x16 * x202 + x17 * x199 + x203,
            x113 * x13 + x16 * x205 + x18 * x199 + x206,
            x124 * x13 + x17 * x202 + x208,
            x13 * x132 + x17 * x205 + x210,
            x18 * x205 + x211 * x51 + x214,
            x13 * x136 + x16 * x201 + x16 * (x16 * x215 + x201) + x203,
            x13 * x141 + x16 * x217 + x208,
            x13 * x145 + x16 * x219 + x210,
            x13 * x150 + x17 * x217 + x220,
            x13 * x155 + x17 * x219 + x222,
            x18 * x219 + x211 * x89 + x224,
            x16 * x204 + x16 * (x16 * x225 + x204) + x206,
            x16 * x226 + x17 * x204 + x209,
            x16 * x228 + x214,
            x17 * x226 + x229,
            x17 * x228 + x224,
            x18 * x228 + x231,
            x13 * x158 + x16 * x216 + x16 * (x16 * x232 + x216) + x207,
            x13 * x163 + x16 * x234 + x220,
            x13 * x167 + x16 * x236 + x222,
            x13 * x170 + x168 * x197 - x169 * x198 + x17 * x233 + x17 * x234,
            x13 * x171 + x17 * x236 + x18 * x233 + x237,
            x116 * x211 + x18 * x236 + x239,
            x16 * x218 + x16 * (x16 * x240 + x218) + x209,
            x16 * x241 + x229,
            x16 * x243 + x224,
            x17 * x235 + x17 * x241 + x237,
            x17 * x243 + x239,
            x18 * x243 + x244,
            x16 * x227 + x16 * (x16 * x245 + x227) + x213,
            x16 * x246 + x17 * x227 + x223,
            x16 * x248 + x231,
            x17 * x242 + x17 * x246 + x238,
            x17 * x248 + x244,
            x18 * x247 + x18 * x248 + 24 * (x197 * x56 - x198 * x65) / x72**4,
        ]
    )
    return S


def eri_0200(a, A, b, B, c, C, d, D):
    """Cartesian [sd|ss] 2-electron electron repulsion integral.

    Generated code; DO NOT modify by hand!"""

    x0 = numpy.pi**2.5
    x1 = a + b
    x2 = c + d
    x3 = x1 * x2
    x4 = x1 + x2
    x5 = (x3 + numpy.sqrt(x4)) ** (-1.0)
    x6 = x1 ** (-1.0)
    x7 = A[0] - B[0]
    x8 = A[1] - B[1]
    x9 = A[2] - B[2]
    x10 = numpy.exp(-a * b * x6 * (x7**2 + x8**2 + x9**2))
    x11 = x2 ** (-1.0)
    x12 = numpy.exp(
        -c * d * x11 * ((C[0] - D[0]) ** 2 + (C[1] - D[1]) ** 2 + (C[2] - D[2]) ** 2)
    )
    x13 = x4 ** (-1.0)
    x14 = -x6 * (a * A[0] + b * B[0])
    x15 = -x11 * (c * C[0] + d * D[0]) - x14
    x16 = -x6 * (a * A[1] + b * B[1])
    x17 = -x11 * (c * C[1] + d * D[1]) - x16
    x18 = -x6 * (a * A[2] + b * B[2])
    x19 = -x11 * (c * C[2] + d * D[2]) - x18
    x20 = x13 * x3 * (x15**2 + x17**2 + x19**2)
    x21 = boys(0, x20)
    x22 = x13 * x2
    x23 = 2 * x0 * x10 * x12 * x5
    x24 = x23 * boys(1, x20)
    x25 = (2 * x0 * x10 * x12 * x21 * x5 - x22 * x24) / (2 * a + 2 * b)
    x26 = -x14 - A[0]
    x27 = x21 * x23
    x28 = x15 * x22
    x29 = -x24 * x28 + x26 * x27
    x30 = x23 * boys(2, x20)
    x31 = -x16 - A[1]
    x32 = x17 * x22
    x33 = -x24 * x32 + x27 * x31
    x34 = x24 * x31 - x30 * x32
    x35 = x27 * x8 + x33
    x36 = -x18 - A[2]
    x37 = x19 * x22
    x38 = -x24 * x37 + x27 * x36
    x39 = x24 * x36 - x30 * x37
    x40 = x27 * x9 + x38

    # 6 item(s)
    S = numpy.array(
        [
            x25
            + x26 * x29
            - x28 * (x24 * x26 - x28 * x30)
            + x29 * x7
            + x7 * (x27 * x7 + x29),
            x26 * x33 - x28 * x34 + x29 * x8 + x35 * x7,
            x26 * x38 - x28 * x39 + x29 * x9 + x40 * x7,
            x25 + x31 * x33 - x32 * x34 + x33 * x8 + x35 * x8,
            x31 * x38 - x32 * x39 + x33 * x9 + x40 * x8,
            x25 + x36 * x38 - x37 * x39 + x38 * x9 + x40 * x9,
        ]
    )
    return S


def eri_0201(a, A, b, B, c, C, d, D):
    """Cartesian [sd|sp] 2-electron electron repulsion integral.

    Generated code; DO NOT modify by hand!"""

    x0 = 2 * a + 2 * b
    x1 = x0 ** (-1.0)
    x2 = c + d
    x3 = x2 ** (-1.0)
    x4 = x3 * (c * C[0] + d * D[0])
    x5 = x4 - C[0]
    x6 = a + b
    x7 = x2 + x6
    x8 = x7 ** (-1.0)
    x9 = x6 ** (-1.0)
    x10 = -x9 * (a * A[0] + b * B[0])
    x11 = -x10 - x4
    x12 = x3 * (c * C[1] + d * D[1])
    x13 = -x9 * (a * A[1] + b * B[1])
    x14 = -x12 - x13
    x15 = -x9 * (a * A[2] + b * B[2])
    x16 = -x15 - x3 * (c * C[2] + d * D[2])
    x17 = x2 * x6
    x18 = x17 * x8 * (x11**2 + x14**2 + x16**2)
    x19 = boys(1, x18)
    x20 = numpy.pi**2.5
    x21 = (x17 + numpy.sqrt(x7)) ** (-1.0)
    x22 = A[0] - B[0]
    x23 = A[1] - B[1]
    x24 = A[2] - B[2]
    x25 = numpy.exp(-a * b * x9 * (x22**2 + x23**2 + x24**2))
    x26 = C[0] - D[0]
    x27 = C[1] - D[1]
    x28 = C[2] - D[2]
    x29 = numpy.exp(-c * d * x3 * (x26**2 + x27**2 + x28**2))
    x30 = 2 * x20 * x21 * x25 * x29
    x31 = x19 * x30
    x32 = x30 * boys(2, x18)
    x33 = x6 * x8
    x34 = x11 * x33
    x35 = x31 * x5 + x32 * x34
    x36 = x2 * x8
    x37 = x35 * x36
    x38 = boys(0, x18)
    x39 = x30 * x38
    x40 = x31 * x34 + x39 * x5
    x41 = x1 * (-x37 + x40)
    x42 = x1 * (2 * x20 * x21 * x25 * x29 * x38 - x31 * x36)
    x43 = -x10 - A[0]
    x44 = x11 * x36
    x45 = -x31 * x44 + x39 * x43
    x46 = x31 * x43 - x32 * x44
    x47 = x42 + x43 * x45 - x44 * x46
    x48 = (2 * c + 2 * d + x0) ** (-1.0)
    x49 = x1 * (2 * x19 * x20 * x21 * x25 * x29 - x32 * x36)
    x50 = x30 * boys(3, x18)
    x51 = x32 * x43 - x44 * x50
    x52 = -x11 * x37 + x40 * x43 + x46 * x48
    x53 = x32 * x5 + x34 * x50
    x54 = x26 * x45 + x52
    x55 = x26 * x39 + x40
    x56 = x12 - C[1]
    x57 = x14 * x33
    x58 = x31 * x56 + x32 * x57
    x59 = x36 * x58
    x60 = x31 * x57 + x39 * x56
    x61 = x1 * (-x59 + x60)
    x62 = -x11 * x59 + x43 * x60
    x63 = x32 * x56 + x50 * x57
    x64 = x27 * x45 + x62
    x65 = x27 * x39 + x60
    x66 = x28 * x45
    x67 = x28 * x39
    x68 = -x13 - A[1]
    x69 = x14 * x36
    x70 = -x31 * x69 + x39 * x68
    x71 = x31 * x68 - x32 * x69
    x72 = x43 * x70 - x44 * x71
    x73 = x32 * x68 - x50 * x69
    x74 = -x14 * x37 + x40 * x68
    x75 = x35 * x68 - x53 * x69
    x76 = x26 * x70 + x74
    x77 = x23 * x55 + x76
    x78 = -x14 * x59 + x48 * x71 + x60 * x68
    x79 = x48 * x73 + x58 * x68 - x63 * x69
    x80 = x27 * x70 + x78
    x81 = x23 * x65 + x80
    x82 = x28 * x70
    x83 = x23 * x67 + x82
    x84 = -x15 - A[2]
    x85 = x16 * x36
    x86 = -x31 * x85 + x39 * x84
    x87 = x31 * x84 - x32 * x85
    x88 = x43 * x86 - x44 * x87
    x89 = x43 * x87
    x90 = x32 * x84 - x50 * x85
    x91 = x44 * x90
    x92 = -x16 * x37 + x40 * x84
    x93 = x35 * x84 - x53 * x85
    x94 = x26 * x86 + x92
    x95 = x24 * x55 + x94
    x96 = -x16 * x59 + x60 * x84
    x97 = x58 * x84 - x63 * x85
    x98 = x27 * x86 + x96
    x99 = x24 * x65 + x98
    x100 = x48 * x87
    x101 = x100 + x28 * x86
    x102 = x101 + x24 * x67
    x103 = x42 + x68 * x70 - x69 * x71
    x104 = x68 * x86 - x69 * x87
    x105 = x69 * x90
    x106 = x42 + x84 * x86 - x85 * x87
    x107 = x85 * x90

    # 18 item(s)
    S = numpy.array(
        [
            x22 * x54
            + x22 * (x22 * x55 + x54)
            + x26 * x47
            + x41
            + x43 * x52
            - x44 * (x35 * x43 - x44 * x53 + x48 * x51)
            + x48 * (x43 * x46 - x44 * x51 + x49),
            x22 * x64
            + x22 * (x22 * x65 + x64)
            + x27 * x47
            + x43 * x62
            - x44 * (x43 * x58 - x44 * x63)
            + x61,
            x22 * x66 + x22 * (x22 * x67 + x66) + x28 * x47,
            x22 * x77
            + x23 * x54
            + x26 * x72
            + x43 * x74
            - x44 * x75
            + x48 * (x43 * x71 - x44 * x73),
            x22 * x81 + x23 * x64 + x27 * x72 + x43 * x78 - x44 * x79,
            x22 * x83 + x23 * x66 + x28 * x72,
            x22 * x95 + x24 * x54 + x26 * x88 + x43 * x92 - x44 * x93 + x48 * (x89 - x91),
            x22 * x99 + x24 * x64 + x27 * x88 + x43 * x96 - x44 * x97,
            x102 * x22 + x24 * x66 + x28 * x88 + x48 * x89 - x48 * x91,
            x103 * x26 + x23 * x76 + x23 * x77 + x41 + x68 * x74 - x69 * x75,
            x103 * x27
            + x23 * x80
            + x23 * x81
            + x48 * (x49 + x68 * x71 - x69 * x73)
            + x61
            + x68 * x78
            - x69 * x79,
            x103 * x28 + x23 * x82 + x23 * x83,
            x104 * x26 + x23 * x95 + x24 * x76 + x68 * x92 - x69 * x93,
            x104 * x27
            + x23 * x99
            + x24 * x80
            + x48 * (-x105 + x68 * x87)
            + x68 * x96
            - x69 * x97,
            x100 * x68 + x102 * x23 + x104 * x28 - x105 * x48 + x24 * x82,
            x106 * x26 + x24 * x94 + x24 * x95 + x41 + x84 * x92 - x85 * x93,
            x106 * x27 + x24 * x98 + x24 * x99 + x61 + x84 * x96 - x85 * x97,
            x100 * x84
            + x101 * x24
            + x102 * x24
            + x106 * x28
            - x107 * x48
            + x48 * (-x107 + x49 + x84 * x87),
        ]
    )
    return S


def eri_0202(a, A, b, B, c, C, d, D):
    """Cartesian [sd|sd] 2-electron electron repulsion integral.

    Generated code; DO NOT modify by hand!"""

    x0 = 2 * a + 2 * b
    x1 = x0 ** (-1.0)
    x2 = 2 * c + 2 * d
    x3 = x2 ** (-1.0)
    x4 = numpy.pi**2.5
    x5 = a + b
    x6 = c + d
    x7 = x5 * x6
    x8 = x5 + x6
    x9 = (x7 + numpy.sqrt(x8)) ** (-1.0)
    x10 = x5 ** (-1.0)
    x11 = A[0] - B[0]
    x12 = A[1] - B[1]
    x13 = A[2] - B[2]
    x14 = numpy.exp(-a * b * x10 * (x11**2 + x12**2 + x13**2))
    x15 = x6 ** (-1.0)
    x16 = C[0] - D[0]
    x17 = C[1] - D[1]
    x18 = C[2] - D[2]
    x19 = x18**2
    x20 = numpy.exp(-c * d * x15 * (x16**2 + x17**2 + x19))
    x21 = x8 ** (-1.0)
    x22 = x15 * (c * C[0] + d * D[0])
    x23 = -x10 * (a * A[0] + b * B[0])
    x24 = -x22 - x23
    x25 = x15 * (c * C[1] + d * D[1])
    x26 = -x10 * (a * A[1] + b * B[1])
    x27 = -x25 - x26
    x28 = -x10 * (a * A[2] + b * B[2])
    x29 = -x15 * (c * C[2] + d * D[2]) - x28
    x30 = x21 * x7 * (x24**2 + x27**2 + x29**2)
    x31 = boys(1, x30)
    x32 = -2 * x14 * x20 * x31 * x4 * x9
    x33 = x21 * x5
    x34 = boys(2, x30)
    x35 = 2 * x14 * x20 * x4 * x9
    x36 = x34 * x35
    x37 = x3 * (-x32 - x33 * x36)
    x38 = x22 - C[0]
    x39 = x31 * x35
    x40 = x24 * x33
    x41 = x36 * x40 + x38 * x39
    x42 = x35 * boys(3, x30)
    x43 = x36 * x38 + x40 * x42
    x44 = x37 + x38 * x41 + x40 * x43
    x45 = x21 * x6
    x46 = x44 * x45
    x47 = boys(0, x30)
    x48 = -2 * x14 * x20 * x4 * x47 * x9
    x49 = x3 * (-x33 * x39 - x48)
    x50 = x35 * x47
    x51 = x38 * x50 + x39 * x40
    x52 = x38 * x51 + x40 * x41 + x49
    x53 = x1 * (-x46 + x52)
    x54 = -x23 - A[0]
    x55 = x0 + x2
    x56 = x55 ** (-1.0)
    x57 = x24 * x45
    x58 = x36 * x54 - x42 * x57
    x59 = x43 * x45
    x60 = -x24 * x59 + x41 * x54 + x56 * x58
    x61 = 2 * x56
    x62 = -x24 * x46 + x52 * x54 + x60 * x61
    x63 = -2 * x14 * x20 * x34 * x4 * x9
    x64 = x3 * (-x33 * x42 - x63)
    x65 = x35 * boys(4, x30)
    x66 = x38 * x42 + x40 * x65
    x67 = x38 * x43 + x40 * x66 + x64
    x68 = x42 * x54 - x57 * x65
    x69 = x43 * x54 + x56 * x68 - x57 * x66
    x70 = x41 * x45
    x71 = x1 * (x51 - x70)
    x72 = x1 * (-x32 - x36 * x45)
    x73 = -x36 * x57 + x39 * x54
    x74 = -x24 * x70 + x51 * x54 + x56 * x73
    x75 = x54 * x74 + x56 * (x54 * x73 - x57 * x58 + x72) - x57 * x60 + x71
    x76 = x1 * (x41 - x59)
    x77 = x1 * (-x42 * x45 - x63)
    x78 = x1 * (-x39 * x45 - x48)
    x79 = -x39 * x57 + x50 * x54
    x80 = x54 * x79 - x57 * x73 + x78
    x81 = x16 * x80
    x82 = x16 * x79
    x83 = x16 * x74 + x16 * (x74 + x82) + x62
    x84 = x16 * x50
    x85 = x16 * x51 + x16 * (x51 + x84) + x52
    x86 = x25 - C[1]
    x87 = x27 * x33
    x88 = x36 * x87 + x39 * x86
    x89 = x36 * x86 + x42 * x87
    x90 = x38 * x88 + x40 * x89
    x91 = x45 * x90
    x92 = x39 * x87 + x50 * x86
    x93 = x38 * x92 + x40 * x88
    x94 = x1 * (-x91 + x93)
    x95 = x45 * x89
    x96 = x1 * (x88 - x95)
    x97 = -x24 * x95 + x54 * x88
    x98 = x42 * x86 + x65 * x87
    x99 = x54 * x89 - x57 * x98
    x100 = -x24 * x91 + x54 * x93 + x56 * x97
    x101 = x38 * x89 + x40 * x98
    x102 = x17 * x80
    x103 = x45 * x88
    x104 = x1 * (-x103 + x92)
    x105 = -x103 * x24 + x54 * x92
    x106 = x104 + x105 * x54 - x57 * x97
    x107 = x102 + x106
    x108 = x17 * x79
    x109 = x105 + x108
    x110 = x100 + x109 * x16 + x17 * x74
    x111 = x17 * x50
    x112 = x111 + x92
    x113 = x112 * x16 + x17 * x51 + x93
    x114 = x18 * x74 + x18 * x82
    x115 = x18 * x51 + x18 * x84
    x116 = x37 + x86 * x88 + x87 * x89
    x117 = x116 * x45
    x118 = x49 + x86 * x92 + x87 * x88
    x119 = x1 * (-x117 + x118)
    x120 = -x117 * x24 + x118 * x54
    x121 = x64 + x86 * x89 + x87 * x98
    x122 = x105 * x17 + x109 * x17 + x120
    x123 = x112 * x17 + x118 + x17 * x92
    x124 = x105 * x18 + x108 * x18
    x125 = x111 * x18 + x18 * x92
    x126 = x19 * x79
    x127 = x19 * x50
    x128 = -x26 - A[1]
    x129 = x128 * x52 - x27 * x46
    x130 = x27 * x45
    x131 = x128 * x44 - x130 * x67
    x132 = x128 * x39 - x130 * x36
    x133 = x128 * x36 - x130 * x42
    x134 = x128 * x51 - x27 * x70
    x135 = x128 * x41 - x27 * x59
    x136 = x134 * x54 - x135 * x57 + x56 * (x132 * x54 - x133 * x57)
    x137 = x128 * x42 - x130 * x65
    x138 = x128 * x43 - x130 * x66
    x139 = x128 * x50 - x130 * x39
    x140 = -x132 * x57 + x139 * x54
    x141 = x140 * x16
    x142 = x139 * x16
    x143 = x129 + x134 * x16 + x16 * (x134 + x142)
    x144 = x12 * x85 + x143
    x145 = x128 * x88 + x133 * x56 - x27 * x95
    x146 = x128 * x89 - x130 * x98 + x137 * x56
    x147 = x128 * x93 + x135 * x56 - x27 * x91
    x148 = -x101 * x130 + x128 * x90 + x138 * x56
    x149 = x140 * x17
    x150 = -x103 * x27 + x128 * x92 + x132 * x56
    x151 = -x145 * x57 + x150 * x54
    x152 = x149 + x151
    x153 = x139 * x17
    x154 = x150 + x153
    x155 = x134 * x17 + x147 + x154 * x16
    x156 = x113 * x12 + x155
    x157 = x134 * x18 + x142 * x18
    x158 = x115 * x12 + x157
    x159 = -x117 * x27 + x118 * x128 + x145 * x61
    x160 = x116 * x128 - x121 * x130 + x146 * x61
    x161 = x150 * x17 + x154 * x17 + x159
    x162 = x12 * x123 + x161
    x163 = x150 * x18 + x153 * x18
    x164 = x12 * x125 + x163
    x165 = x139 * x19
    x166 = x12 * x127 + x165
    x167 = -x28 - A[2]
    x168 = x167 * x52 - x29 * x46
    x169 = x29 * x45
    x170 = x167 * x44 - x169 * x67
    x171 = x167 * x39 - x169 * x36
    x172 = x171 * x54
    x173 = x167 * x36 - x169 * x42
    x174 = x173 * x57
    x175 = x167 * x51 - x29 * x70
    x176 = x167 * x41 - x29 * x59
    x177 = x175 * x54 - x176 * x57 + x56 * (x172 - x174)
    x178 = x173 * x54
    x179 = x167 * x42 - x169 * x65
    x180 = x179 * x57
    x181 = x176 * x54
    x182 = x167 * x43 - x169 * x66
    x183 = x182 * x57
    x184 = x167 * x50 - x169 * x39
    x185 = -x171 * x57 + x184 * x54
    x186 = x16 * x175 + x16 * (x16 * x184 + x175) + x168
    x187 = x13 * x85 + x186
    x188 = x167 * x93 - x29 * x91
    x189 = x167 * x88 - x29 * x95
    x190 = x189 * x54
    x191 = x167 * x89 - x169 * x98
    x192 = x191 * x57
    x193 = -x101 * x169 + x167 * x90
    x194 = -x103 * x29 + x167 * x92
    x195 = -x189 * x57 + x194 * x54
    x196 = x17 * x185 + x195
    x197 = x17 * x184 + x194
    x198 = x16 * x197 + x17 * x175 + x188
    x199 = x113 * x13 + x198
    x200 = x172 * x56 - x174 * x56
    x201 = x18 * x185 + x200
    x202 = x171 * x56
    x203 = x18 * x184 + x202
    x204 = x176 * x56
    x205 = x16 * x203 + x175 * x18 + x204
    x206 = x115 * x13 + x205
    x207 = -x117 * x29 + x118 * x167
    x208 = x116 * x167 - x121 * x169
    x209 = x17 * x194 + x17 * x197 + x207
    x210 = x123 * x13 + x209
    x211 = x189 * x56
    x212 = x17 * x203 + x18 * x194 + x211
    x213 = x125 * x13 + x212
    x214 = 2 / x55**2
    x215 = x173 * x214 + x18 * x202 + x18 * x203
    x216 = x127 * x13 + x215
    x217 = x128 * x134 - x130 * x135 + x71
    x218 = x128 * x139 - x130 * x132 + x78
    x219 = x16 * x218
    x220 = x17 * x218
    x221 = x104 + x128 * x150 - x130 * x145 + x56 * (x128 * x132 - x130 * x133 + x72)
    x222 = x220 + x221
    x223 = x128 * x175 - x130 * x176
    x224 = x128 * x184 - x130 * x171
    x225 = x130 * x182
    x226 = x130 * x173
    x227 = x128 * x194 - x130 * x189 + x56 * (x128 * x171 - x226)
    x228 = x17 * x224 + x227
    x229 = x128 * x202 - x226 * x56
    x230 = x18 * x224 + x229
    x231 = x128 * x173
    x232 = x130 * x179
    x233 = x130 * x191
    x234 = x167 * x175 - x169 * x176 + x71
    x235 = x167 * x184 - x169 * x171 + x78
    x236 = x104 + x167 * x194 - x169 * x189
    x237 = x17 * x235 + x236
    x238 = x169 * x182
    x239 = x169 * x173
    x240 = x167 * x202 - x239 * x56 + x56 * (x167 * x171 - x239 + x72)
    x241 = x18 * x235 + x240
    x242 = x169 * x191
    x243 = x167 * x173
    x244 = x169 * x179

    # 36 item(s)
    S = numpy.array(
        [
            x11 * x83
            + x11 * (x11 * x85 + x83)
            + x16 * x75
            + x16 * (x75 + x81)
            + x53
            + x54 * x62
            - x57 * (x44 * x54 - x57 * x67 + x61 * x69)
            + x61 * (x54 * x60 + x56 * (x54 * x58 - x57 * x68 + x77) - x57 * x69 + x76),
            x100 * x54
            + x107 * x16
            + x11 * x110
            + x11 * (x11 * x113 + x110)
            + x17 * x75
            + x56 * (x54 * x97 - x57 * x99 + x96)
            - x57 * (-x101 * x57 + x54 * x90 + x56 * x99)
            + x94,
            x11 * x114 + x11 * (x11 * x115 + x114) + x18 * x75 + x18 * x81,
            x106 * x17
            + x107 * x17
            + x11 * x122
            + x11 * (x11 * x123 + x122)
            + x119
            + x120 * x54
            - x57 * (x116 * x54 - x121 * x57),
            x102 * x18 + x106 * x18 + x11 * x124 + x11 * (x11 * x125 + x124),
            x11 * x126 + x11 * (x11 * x127 + x126) + x19 * x80,
            x11 * x144
            + x12 * x83
            + x129 * x54
            - x131 * x57
            + x136 * x16
            + x16 * (x136 + x141)
            + x61 * (x135 * x54 - x138 * x57 + x56 * (x133 * x54 - x137 * x57)),
            x11 * x156
            + x110 * x12
            + x136 * x17
            + x147 * x54
            - x148 * x57
            + x152 * x16
            + x56 * (x145 * x54 - x146 * x57),
            x11 * x158 + x114 * x12 + x136 * x18 + x141 * x18,
            x11 * x162 + x12 * x122 + x151 * x17 + x152 * x17 + x159 * x54 - x160 * x57,
            x11 * x164 + x12 * x124 + x149 * x18 + x151 * x18,
            x11 * x166 + x12 * x126 + x140 * x19,
            x11 * x187
            + x13 * x83
            + x16 * x177
            + x16 * (x16 * x185 + x177)
            + x168 * x54
            - x170 * x57
            + x61 * (x181 - x183 + x56 * (x178 - x180)),
            x11 * x199
            + x110 * x13
            + x16 * x196
            + x17 * x177
            + x188 * x54
            - x193 * x57
            + x56 * (x190 - x192),
            x11 * x206
            + x114 * x13
            + x16 * x201
            + x177 * x18
            + x181 * x56
            - x183 * x56
            + x56 * (x178 * x56 - x180 * x56),
            x11 * x210 + x122 * x13 + x17 * x195 + x17 * x196 + x207 * x54 - x208 * x57,
            x11 * x213 + x124 * x13 + x17 * x201 + x18 * x195 + x190 * x56 - x192 * x56,
            x11 * x216 + x126 * x13 + x178 * x214 + x18 * x200 + x18 * x201 - x180 * x214,
            x12 * x143
            + x12 * x144
            + x128 * x129
            - x130 * x131
            + x16 * x217
            + x16 * (x217 + x219)
            + x53,
            x12 * x155
            + x12 * x156
            + x128 * x147
            - x130 * x148
            + x16 * x222
            + x17 * x217
            + x56 * (x128 * x135 - x130 * x138 + x76)
            + x94,
            x12 * x157 + x12 * x158 + x18 * x217 + x18 * x219,
            x119
            + x12 * x161
            + x12 * x162
            + x128 * x159
            - x130 * x160
            + x17 * x221
            + x17 * x222
            + x61
            * (x128 * x145 - x130 * x146 + x56 * (x128 * x133 - x130 * x137 + x77) + x96),
            x12 * x163 + x12 * x164 + x18 * x220 + x18 * x221,
            x12 * x165 + x12 * x166 + x19 * x218,
            x12 * x187
            + x128 * x168
            + x13 * x143
            - x130 * x170
            + x16 * x223
            + x16 * (x16 * x224 + x223),
            x12 * x199
            + x128 * x188
            + x13 * x155
            - x130 * x193
            + x16 * x228
            + x17 * x223
            + x56 * (x128 * x176 - x225),
            x12 * x206 + x128 * x204 + x13 * x157 + x16 * x230 + x18 * x223 - x225 * x56,
            x12 * x210
            + x128 * x207
            + x13 * x161
            - x130 * x208
            + x17 * x227
            + x17 * x228
            + x61 * (x128 * x189 - x233 + x56 * (x231 - x232)),
            x12 * x213
            + x128 * x211
            + x13 * x163
            + x17 * x230
            + x18 * x227
            - x233 * x56
            + x56 * (x231 * x56 - x232 * x56),
            x12 * x216 + x13 * x165 + x18 * x229 + x18 * x230 + x214 * x231 - x214 * x232,
            x13 * x186
            + x13 * x187
            + x16 * x234
            + x16 * (x16 * x235 + x234)
            + x167 * x168
            - x169 * x170
            + x53,
            x13 * x198
            + x13 * x199
            + x16 * x237
            + x167 * x188
            - x169 * x193
            + x17 * x234
            + x94,
            x13 * x205
            + x13 * x206
            + x16 * x241
            + x167 * x204
            + x18 * x234
            - x238 * x56
            + x56 * (x167 * x176 - x238 + x76),
            x119
            + x13 * x209
            + x13 * x210
            + x167 * x207
            - x169 * x208
            + x17 * x236
            + x17 * x237,
            x13 * x212
            + x13 * x213
            + x167 * x211
            + x17 * x241
            + x18 * x236
            - x242 * x56
            + x56 * (x167 * x189 - x242 + x96),
            x13 * x215
            + x13 * x216
            + x18 * x240
            + x18 * x241
            + x214 * x243
            - x214 * x244
            + x61 * (x243 * x56 - x244 * x56 + x56 * (x243 - x244 + x77)),
        ]
    )
    return S


def eri_0210(a, A, b, B, c, C, d, D):
    """Cartesian [sd|ps] 2-electron electron repulsion integral.

    Generated code; DO NOT modify by hand!"""

    x0 = 2 * a + 2 * b
    x1 = x0 ** (-1.0)
    x2 = c + d
    x3 = x2 ** (-1.0)
    x4 = x3 * (c * C[0] + d * D[0])
    x5 = x4 - C[0]
    x6 = a + b
    x7 = x2 + x6
    x8 = x7 ** (-1.0)
    x9 = x6 ** (-1.0)
    x10 = -x9 * (a * A[0] + b * B[0])
    x11 = -x10 - x4
    x12 = x3 * (c * C[1] + d * D[1])
    x13 = -x9 * (a * A[1] + b * B[1])
    x14 = -x12 - x13
    x15 = -x9 * (a * A[2] + b * B[2])
    x16 = -x15 - x3 * (c * C[2] + d * D[2])
    x17 = x2 * x6
    x18 = x17 * x8 * (x11**2 + x14**2 + x16**2)
    x19 = boys(1, x18)
    x20 = numpy.pi**2.5
    x21 = (x17 + numpy.sqrt(x7)) ** (-1.0)
    x22 = A[0] - B[0]
    x23 = A[1] - B[1]
    x24 = A[2] - B[2]
    x25 = numpy.exp(-a * b * x9 * (x22**2 + x23**2 + x24**2))
    x26 = numpy.exp(
        -c * d * x3 * ((C[0] - D[0]) ** 2 + (C[1] - D[1]) ** 2 + (C[2] - D[2]) ** 2)
    )
    x27 = 2 * x20 * x21 * x25 * x26
    x28 = x19 * x27
    x29 = boys(2, x18)
    x30 = x27 * x29
    x31 = x6 * x8
    x32 = x11 * x31
    x33 = x28 * x5 + x30 * x32
    x34 = x2 * x8
    x35 = x33 * x34
    x36 = boys(0, x18)
    x37 = x27 * x5
    x38 = x28 * x32 + x36 * x37
    x39 = x1 * (-x35 + x38)
    x40 = (2 * c + 2 * d + x0) ** (-1.0)
    x41 = x1 * (2 * x19 * x20 * x21 * x25 * x26 - x30 * x34)
    x42 = -x10 - A[0]
    x43 = x11 * x34
    x44 = x28 * x42 - x30 * x43
    x45 = x27 * boys(3, x18)
    x46 = x30 * x42 - x43 * x45
    x47 = -x11 * x35 + x38 * x42 + x40 * x44
    x48 = x29 * x37 + x32 * x45
    x49 = x12 - C[1]
    x50 = x14 * x31
    x51 = x28 * x49 + x30 * x50
    x52 = x34 * x51
    x53 = x27 * x36 * x49 + x28 * x50
    x54 = x1 * (-x52 + x53)
    x55 = -x11 * x52 + x42 * x53
    x56 = x30 * x49 + x45 * x50
    x57 = -x13 - A[1]
    x58 = x14 * x34
    x59 = x28 * x57 - x30 * x58
    x60 = x30 * x57 - x45 * x58
    x61 = -x14 * x35 + x38 * x57
    x62 = x33 * x57 - x48 * x58
    x63 = x23 * x38 + x61
    x64 = -x14 * x52 + x40 * x59 + x53 * x57
    x65 = x40 * x60 + x51 * x57 - x56 * x58
    x66 = x23 * x53 + x64
    x67 = -x15 - A[2]
    x68 = x16 * x34
    x69 = x28 * x67 - x30 * x68
    x70 = x42 * x69
    x71 = x30 * x67 - x45 * x68
    x72 = x43 * x71
    x73 = -x16 * x35 + x38 * x67
    x74 = x33 * x67 - x48 * x68
    x75 = x24 * x38 + x73
    x76 = -x16 * x52 + x53 * x67
    x77 = x51 * x67 - x56 * x68
    x78 = x24 * x53 + x76
    x79 = x40 * x69
    x80 = x57 * x69
    x81 = x58 * x71
    x82 = x67 * x69
    x83 = x68 * x71

    # 18 item(s)
    S = numpy.array(
        [
            x22 * x47
            + x22 * (x22 * x38 + x47)
            + x39
            + x40 * (x41 + x42 * x44 - x43 * x46)
            + x42 * x47
            - x43 * (x33 * x42 + x40 * x46 - x43 * x48),
            x22 * x55
            + x22 * (x22 * x53 + x55)
            + x42 * x55
            - x43 * (x42 * x51 - x43 * x56)
            + x54,
            0,
            x22 * x63 + x23 * x47 + x40 * (x42 * x59 - x43 * x60) + x42 * x61 - x43 * x62,
            x22 * x66 + x23 * x55 + x42 * x64 - x43 * x65,
            0,
            x22 * x75 + x24 * x47 + x40 * (x70 - x72) + x42 * x73 - x43 * x74,
            x22 * x78 + x24 * x55 + x42 * x76 - x43 * x77,
            x22 * x79 + x40 * x70 - x40 * x72,
            x23 * x61 + x23 * x63 + x39 + x57 * x61 - x58 * x62,
            x23 * x64
            + x23 * x66
            + x40 * (x41 + x57 * x59 - x58 * x60)
            + x54
            + x57 * x64
            - x58 * x65,
            0,
            x23 * x75 + x24 * x61 + x57 * x73 - x58 * x74,
            x23 * x78 + x24 * x64 + x40 * (x80 - x81) + x57 * x76 - x58 * x77,
            x23 * x79 + x40 * x80 - x40 * x81,
            x24 * x73 + x24 * x75 + x39 + x67 * x73 - x68 * x74,
            x24 * x76 + x24 * x78 + x54 + x67 * x76 - x68 * x77,
            2 * x24 * x79 + x40 * x82 - x40 * x83 + x40 * (x41 + x82 - x83),
        ]
    )
    return S


def eri_0211(a, A, b, B, c, C, d, D):
    """Cartesian [sd|pp] 2-electron electron repulsion integral.

    Generated code; DO NOT modify by hand!"""

    x0 = 2 * a + 2 * b
    x1 = x0 ** (-1.0)
    x2 = 2 * c + 2 * d
    x3 = x2 ** (-1.0)
    x4 = numpy.pi**2.5
    x5 = a + b
    x6 = c + d
    x7 = x5 * x6
    x8 = x5 + x6
    x9 = (x7 + numpy.sqrt(x8)) ** (-1.0)
    x10 = x5 ** (-1.0)
    x11 = A[0] - B[0]
    x12 = A[1] - B[1]
    x13 = A[2] - B[2]
    x14 = numpy.exp(-a * b * x10 * (x11**2 + x12**2 + x13**2))
    x15 = x6 ** (-1.0)
    x16 = C[0] - D[0]
    x17 = C[1] - D[1]
    x18 = C[2] - D[2]
    x19 = numpy.exp(-c * d * x15 * (x16**2 + x17**2 + x18**2))
    x20 = x8 ** (-1.0)
    x21 = x15 * (c * C[0] + d * D[0])
    x22 = -x10 * (a * A[0] + b * B[0])
    x23 = -x21 - x22
    x24 = x15 * (c * C[1] + d * D[1])
    x25 = -x10 * (a * A[1] + b * B[1])
    x26 = -x24 - x25
    x27 = -x10 * (a * A[2] + b * B[2])
    x28 = -x15 * (c * C[2] + d * D[2]) - x27
    x29 = x20 * x7 * (x23**2 + x26**2 + x28**2)
    x30 = boys(1, x29)
    x31 = -2 * x14 * x19 * x30 * x4 * x9
    x32 = x20 * x5
    x33 = boys(2, x29)
    x34 = 2 * x14 * x19 * x4 * x9
    x35 = x33 * x34
    x36 = x3 * (-x31 - x32 * x35)
    x37 = x21 - C[0]
    x38 = x30 * x34
    x39 = x23 * x32
    x40 = x35 * x39 + x37 * x38
    x41 = x34 * boys(3, x29)
    x42 = x35 * x37 + x39 * x41
    x43 = x36 + x37 * x40 + x39 * x42
    x44 = x20 * x6
    x45 = x43 * x44
    x46 = boys(0, x29)
    x47 = x3 * (2 * x14 * x19 * x4 * x46 * x9 - x32 * x38)
    x48 = x34 * x46
    x49 = x37 * x48 + x38 * x39
    x50 = x37 * x49 + x39 * x40 + x47
    x51 = x1 * (-x45 + x50)
    x52 = -x22 - A[0]
    x53 = x0 + x2
    x54 = x53 ** (-1.0)
    x55 = x23 * x44
    x56 = x35 * x52 - x41 * x55
    x57 = x42 * x44
    x58 = -x23 * x57 + x40 * x52 + x54 * x56
    x59 = 2 * x54
    x60 = -x23 * x45 + x50 * x52 + x58 * x59
    x61 = -2 * x14 * x19 * x33 * x4 * x9
    x62 = x3 * (-x32 * x41 - x61)
    x63 = x34 * boys(4, x29)
    x64 = x37 * x41 + x39 * x63
    x65 = x37 * x42 + x39 * x64 + x62
    x66 = x41 * x52 - x55 * x63
    x67 = x42 * x52 + x54 * x66 - x55 * x64
    x68 = x40 * x44
    x69 = x1 * (x49 - x68)
    x70 = x1 * (-x31 - x35 * x44)
    x71 = -x35 * x55 + x38 * x52
    x72 = -x23 * x68 + x49 * x52 + x54 * x71
    x73 = x52 * x72 + x54 * (x52 * x71 - x55 * x56 + x70) - x55 * x58 + x69
    x74 = x1 * (x40 - x57)
    x75 = x1 * (-x41 * x44 - x61)
    x76 = x16 * x72 + x60
    x77 = x16 * x49 + x50
    x78 = x24 - C[1]
    x79 = x26 * x32
    x80 = x35 * x79 + x38 * x78
    x81 = x35 * x78 + x41 * x79
    x82 = x44 * x81
    x83 = -x23 * x82 + x52 * x80
    x84 = x38 * x79 + x48 * x78
    x85 = x37 * x84 + x39 * x80
    x86 = x37 * x80 + x39 * x81
    x87 = x44 * x86
    x88 = -x23 * x87 + x52 * x85 + x54 * x83
    x89 = x17 * x72 + x88
    x90 = x17 * x49 + x85
    x91 = x1 * (x85 - x87)
    x92 = x1 * (x80 - x82)
    x93 = x41 * x78 + x63 * x79
    x94 = x52 * x81 - x55 * x93
    x95 = x37 * x81 + x39 * x93
    x96 = (
        x52 * x88
        + x54 * (x52 * x83 - x55 * x94 + x92)
        - x55 * (x52 * x86 + x54 * x94 - x55 * x95)
        + x91
    )
    x97 = x18 * x72
    x98 = x11 * x18
    x99 = x44 * x80
    x100 = -x23 * x99 + x52 * x84
    x101 = x100 * x16 + x88
    x102 = x16 * x84 + x85
    x103 = x1 * (x84 - x99)
    x104 = x100 * x52 + x103 - x55 * x83
    x105 = x36 + x78 * x80 + x79 * x81
    x106 = x105 * x44
    x107 = x47 + x78 * x84 + x79 * x80
    x108 = x1 * (-x106 + x107)
    x109 = -x106 * x23 + x107 * x52
    x110 = x62 + x78 * x81 + x79 * x93
    x111 = x100 * x17 + x109
    x112 = x107 + x17 * x84
    x113 = x100 * x18
    x114 = -x25 - A[1]
    x115 = x114 * x50 - x26 * x45
    x116 = x26 * x44
    x117 = x114 * x43 - x116 * x65
    x118 = x114 * x38 - x116 * x35
    x119 = x114 * x35 - x116 * x41
    x120 = x114 * x49 - x26 * x68
    x121 = x114 * x40 - x26 * x57
    x122 = x120 * x52 - x121 * x55 + x54 * (x118 * x52 - x119 * x55)
    x123 = x114 * x41 - x116 * x63
    x124 = x114 * x42 - x116 * x64
    x125 = x115 + x120 * x16
    x126 = x12 * x77 + x125
    x127 = x114 * x85 + x121 * x54 - x26 * x87
    x128 = x120 * x17 + x127
    x129 = x12 * x90 + x128
    x130 = x114 * x80 + x119 * x54 - x26 * x82
    x131 = x114 * x81 - x116 * x93 + x123 * x54
    x132 = x114 * x86 - x116 * x95 + x124 * x54
    x133 = x127 * x52 - x132 * x55 + x54 * (x130 * x52 - x131 * x55)
    x134 = x12 * x18
    x135 = x120 * x18
    x136 = x134 * x49 + x135
    x137 = x114 * x84 + x118 * x54 - x26 * x99
    x138 = x127 + x137 * x16
    x139 = x102 * x12 + x138
    x140 = -x130 * x55 + x137 * x52
    x141 = -x106 * x26 + x107 * x114 + x130 * x59
    x142 = x105 * x114 - x110 * x116 + x131 * x59
    x143 = x137 * x17 + x141
    x144 = x112 * x12 + x143
    x145 = x137 * x18
    x146 = x134 * x84 + x145
    x147 = -x27 - A[2]
    x148 = x147 * x50 - x28 * x45
    x149 = x28 * x44
    x150 = x147 * x43 - x149 * x65
    x151 = x147 * x38 - x149 * x35
    x152 = x151 * x52
    x153 = x147 * x35 - x149 * x41
    x154 = x153 * x55
    x155 = x147 * x49 - x28 * x68
    x156 = x147 * x40 - x28 * x57
    x157 = x155 * x52 - x156 * x55 + x54 * (x152 - x154)
    x158 = x153 * x52
    x159 = x147 * x41 - x149 * x63
    x160 = x159 * x55
    x161 = x156 * x52
    x162 = x147 * x42 - x149 * x64
    x163 = x162 * x55
    x164 = x148 + x155 * x16
    x165 = x13 * x77 + x164
    x166 = x147 * x85 - x28 * x87
    x167 = x155 * x17 + x166
    x168 = x13 * x90 + x167
    x169 = x147 * x80 - x28 * x82
    x170 = x169 * x52
    x171 = x147 * x81 - x149 * x93
    x172 = x171 * x55
    x173 = x147 * x86 - x149 * x95
    x174 = x166 * x52 - x173 * x55 + x54 * (x170 - x172)
    x175 = x13 * x18
    x176 = x156 * x54
    x177 = x155 * x18 + x176
    x178 = x175 * x49 + x177
    x179 = x161 * x54 - x163 * x54 + x54 * (x158 * x54 - x160 * x54)
    x180 = x147 * x84 - x28 * x99
    x181 = x16 * x180 + x166
    x182 = x102 * x13 + x181
    x183 = -x169 * x55 + x180 * x52
    x184 = -x106 * x28 + x107 * x147
    x185 = x105 * x147 - x110 * x149
    x186 = x17 * x180 + x184
    x187 = x112 * x13 + x186
    x188 = x169 * x54
    x189 = x18 * x180 + x188
    x190 = x175 * x84 + x189
    x191 = x170 * x54 - x172 * x54
    x192 = x151 * x54
    x193 = x16 * x192 + x176
    x194 = x152 * x54 - x154 * x54
    x195 = x17 * x192 + x188
    x196 = 2 / x53**2
    x197 = x153 * x196 + x18 * x192
    x198 = x114 * x120 - x116 * x121 + x69
    x199 = x114 * x127 - x116 * x132 + x54 * (x114 * x121 - x116 * x124 + x74) + x91
    x200 = x103 + x114 * x137 - x116 * x130 + x54 * (x114 * x118 - x116 * x119 + x70)
    x201 = x114 * x155 - x116 * x156
    x202 = x116 * x162
    x203 = x114 * x166 - x116 * x173 + x54 * (x114 * x156 - x202)
    x204 = x114 * x176 - x202 * x54
    x205 = x114 * x151
    x206 = x116 * x153
    x207 = x114 * x180 - x116 * x169 + x54 * (x205 - x206)
    x208 = x114 * x153
    x209 = x116 * x159
    x210 = x116 * x171
    x211 = x114 * x188 - x210 * x54 + x54 * (x208 * x54 - x209 * x54)
    x212 = x205 * x54 - x206 * x54
    x213 = x147 * x155 - x149 * x156 + x69
    x214 = x147 * x166 - x149 * x173 + x91
    x215 = x149 * x162
    x216 = x147 * x176 - x215 * x54 + x54 * (x147 * x156 - x215 + x74)
    x217 = x103 + x147 * x180 - x149 * x169
    x218 = x149 * x171
    x219 = x147 * x188 - x218 * x54 + x54 * (x147 * x169 - x218 + x92)
    x220 = x147 * x151
    x221 = x149 * x153
    x222 = x220 * x54 - x221 * x54 + x54 * (x220 - x221 + x70)
    x223 = 2 * x13
    x224 = x147 * x153
    x225 = x149 * x159

    # 54 item(s)
    S = numpy.array(
        [
            x11 * x76
            + x11 * (x11 * x77 + x76)
            + x16 * x73
            + x51
            + x52 * x60
            - x55 * (x43 * x52 - x55 * x65 + x59 * x67)
            + x59 * (x52 * x58 + x54 * (x52 * x56 - x55 * x66 + x75) - x55 * x67 + x74),
            x11 * x89 + x11 * (x11 * x90 + x89) + x17 * x73 + x96,
            x11 * x97 + x11 * (x49 * x98 + x97) + x18 * x73,
            x101 * x11 + x104 * x16 + x11 * (x101 + x102 * x11) + x96,
            x104 * x17
            + x108
            + x109 * x52
            + x11 * x111
            + x11 * (x11 * x112 + x111)
            - x55 * (x105 * x52 - x110 * x55),
            x104 * x18 + x11 * x113 + x11 * (x113 + x84 * x98),
            0,
            0,
            0,
            x11 * x126
            + x115 * x52
            - x117 * x55
            + x12 * x76
            + x122 * x16
            + x59 * (x121 * x52 - x124 * x55 + x54 * (x119 * x52 - x123 * x55)),
            x11 * x129 + x12 * x89 + x122 * x17 + x133,
            x11 * x136 + x12 * x97 + x122 * x18,
            x101 * x12 + x11 * x139 + x133 + x140 * x16,
            x11 * x144 + x111 * x12 + x140 * x17 + x141 * x52 - x142 * x55,
            x11 * x146 + x113 * x12 + x140 * x18,
            0,
            0,
            0,
            x11 * x165
            + x13 * x76
            + x148 * x52
            - x150 * x55
            + x157 * x16
            + x59 * (x161 - x163 + x54 * (x158 - x160)),
            x11 * x168 + x13 * x89 + x157 * x17 + x174,
            x11 * x178 + x13 * x97 + x157 * x18 + x179,
            x101 * x13 + x11 * x182 + x16 * x183 + x174,
            x11 * x187 + x111 * x13 + x17 * x183 + x184 * x52 - x185 * x55,
            x11 * x190 + x113 * x13 + x18 * x183 + x191,
            x11 * x193 + x16 * x194 + x179,
            x11 * x195 + x17 * x194 + x191,
            x11 * x197 + x158 * x196 - x160 * x196 + x18 * x194,
            x114 * x115 - x116 * x117 + x12 * x125 + x12 * x126 + x16 * x198 + x51,
            x12 * x128 + x12 * x129 + x17 * x198 + x199,
            x12 * x135 + x12 * x136 + x18 * x198,
            x12 * x138 + x12 * x139 + x16 * x200 + x199,
            x108
            + x114 * x141
            - x116 * x142
            + x12 * x143
            + x12 * x144
            + x17 * x200
            + x59
            * (x114 * x130 - x116 * x131 + x54 * (x114 * x119 - x116 * x123 + x75) + x92),
            x12 * x145 + x12 * x146 + x18 * x200,
            0,
            0,
            0,
            x114 * x148 - x116 * x150 + x12 * x165 + x125 * x13 + x16 * x201,
            x12 * x168 + x128 * x13 + x17 * x201 + x203,
            x12 * x178 + x13 * x135 + x18 * x201 + x204,
            x12 * x182 + x13 * x138 + x16 * x207 + x203,
            x114 * x184
            - x116 * x185
            + x12 * x187
            + x13 * x143
            + x17 * x207
            + x59 * (x114 * x169 - x210 + x54 * (x208 - x209)),
            x12 * x190 + x13 * x145 + x18 * x207 + x211,
            x12 * x193 + x16 * x212 + x204,
            x12 * x195 + x17 * x212 + x211,
            x12 * x197 + x18 * x212 + x196 * x208 - x196 * x209,
            x13 * x164 + x13 * x165 + x147 * x148 - x149 * x150 + x16 * x213 + x51,
            x13 * x167 + x13 * x168 + x17 * x213 + x214,
            x13 * x177 + x13 * x178 + x18 * x213 + x216,
            x13 * x181 + x13 * x182 + x16 * x217 + x214,
            x108 + x13 * x186 + x13 * x187 + x147 * x184 - x149 * x185 + x17 * x217,
            x13 * x189 + x13 * x190 + x18 * x217 + x219,
            x16 * x222 + x193 * x223 + x216,
            x17 * x222 + x195 * x223 + x219,
            x18 * x222
            + x196 * x224
            - x196 * x225
            + x197 * x223
            + x59 * (x224 * x54 - x225 * x54 + x54 * (x224 - x225 + x75)),
        ]
    )
    return S


def eri_0212(a, A, b, B, c, C, d, D):
    """Cartesian [sd|pd] 2-electron electron repulsion integral.

    Generated code; DO NOT modify by hand!"""

    x0 = 2 * a + 2 * b
    x1 = x0 ** (-1.0)
    x2 = c + d
    x3 = x2 ** (-1.0)
    x4 = x3 * (c * C[0] + d * D[0])
    x5 = x4 - C[0]
    x6 = a + b
    x7 = x2 + x6
    x8 = x7 ** (-1.0)
    x9 = x6 ** (-1.0)
    x10 = -x9 * (a * A[0] + b * B[0])
    x11 = -x10 - x4
    x12 = x3 * (c * C[1] + d * D[1])
    x13 = -x9 * (a * A[1] + b * B[1])
    x14 = -x12 - x13
    x15 = -x9 * (a * A[2] + b * B[2])
    x16 = -x15 - x3 * (c * C[2] + d * D[2])
    x17 = x2 * x6
    x18 = x17 * x8 * (x11**2 + x14**2 + x16**2)
    x19 = boys(2, x18)
    x20 = numpy.pi**2.5
    x21 = (x17 + numpy.sqrt(x7)) ** (-1.0)
    x22 = A[0] - B[0]
    x23 = A[1] - B[1]
    x24 = A[2] - B[2]
    x25 = numpy.exp(-a * b * x9 * (x22**2 + x23**2 + x24**2))
    x26 = C[0] - D[0]
    x27 = C[1] - D[1]
    x28 = C[2] - D[2]
    x29 = x28**2
    x30 = numpy.exp(-c * d * x3 * (x26**2 + x27**2 + x29))
    x31 = 2 * x20 * x21 * x25 * x30
    x32 = x19 * x31
    x33 = x6 * x8
    x34 = x11 * x33
    x35 = boys(3, x18)
    x36 = x31 * x35
    x37 = x32 * x5 + x34 * x36
    x38 = x33 * x37
    x39 = boys(1, x18)
    x40 = x31 * x39
    x41 = x32 * x34 + x40 * x5
    x42 = 2 * c + 2 * d
    x43 = x42 ** (-1.0)
    x44 = 2 * x43
    x45 = -2 * x20 * x21 * x25 * x30 * x39
    x46 = x43 * (-x32 * x33 - x45)
    x47 = x11 * x38 + x41 * x5 + x46
    x48 = -2 * x19 * x20 * x21 * x25 * x30
    x49 = x43 * (-x33 * x36 - x48)
    x50 = x31 * boys(4, x18)
    x51 = x34 * x50 + x36 * x5
    x52 = x33 * x51
    x53 = x11 * x52 + x37 * x5 + x49
    x54 = x34 * x53 + x44 * (-x38 + x41) + x47 * x5
    x55 = x2 * x8
    x56 = x54 * x55
    x57 = x33 * x41
    x58 = boys(0, x18)
    x59 = x31 * x58
    x60 = x34 * x40 + x5 * x59
    x61 = x43 * (2 * x20 * x21 * x25 * x30 * x58 - x33 * x40)
    x62 = x11 * x57 + x5 * x60 + x61
    x63 = x34 * x47 + x44 * (-x57 + x60) + x5 * x62
    x64 = x1 * (-x56 + x63)
    x65 = -x10 - A[0]
    x66 = x53 * x55
    x67 = x0 + x42
    x68 = x67 ** (-1.0)
    x69 = x11 * x55
    x70 = x36 * x65 - x50 * x69
    x71 = x51 * x55
    x72 = -x11 * x71 + x37 * x65 + x68 * x70
    x73 = 2 * x68
    x74 = -x11 * x66 + x47 * x65 + x72 * x73
    x75 = 3 * x68
    x76 = -x11 * x56 + x63 * x65 + x74 * x75
    x77 = -2 * x20 * x21 * x25 * x30 * x35
    x78 = x43 * (-x33 * x50 - x77)
    x79 = x31 * boys(5, x18)
    x80 = x34 * x79 + x5 * x50
    x81 = x34 * x80 + x5 * x51 + x78
    x82 = x34 * x81 + x44 * (x37 - x52) + x5 * x53
    x83 = x50 * x65 - x69 * x79
    x84 = x51 * x65 + x68 * x83 - x69 * x80
    x85 = x53 * x65 - x69 * x81 + x73 * x84
    x86 = x47 * x55
    x87 = x1 * (x62 - x86)
    x88 = x32 * x65 - x36 * x69
    x89 = x37 * x55
    x90 = -x11 * x89 + x41 * x65 + x68 * x88
    x91 = -x11 * x86 + x62 * x65 + x73 * x90
    x92 = x1 * (x41 - x89)
    x93 = x1 * (-x36 * x55 - x48)
    x94 = (
        x65 * x91
        - x69 * x74
        + x73 * (x65 * x90 + x68 * (x65 * x88 - x69 * x70 + x93) - x69 * x72 + x92)
        + x87
    )
    x95 = x1 * (x47 - x66)
    x96 = x1 * (x37 - x71)
    x97 = x1 * (-x50 * x55 - x77)
    x98 = -x32 * x69 + x40 * x65
    x99 = x41 * x55
    x100 = -x11 * x99 + x60 * x65 + x68 * x98
    x101 = x100 * x26
    x102 = x26 * x91 + x26 * (x101 + x91) + x76
    x103 = x1 * (x60 - x99)
    x104 = x1 * (-x32 * x55 - x45)
    x105 = x100 * x65 + x103 + x68 * (x104 + x65 * x98 - x69 * x88) - x69 * x90
    x106 = x105 * x26
    x107 = x26 * x60
    x108 = x26 * x62 + x26 * (x107 + x62) + x63
    x109 = x100 * x27
    x110 = x12 - C[1]
    x111 = x14 * x33
    x112 = x110 * x40 + x111 * x32
    x113 = x110 * x32 + x111 * x36
    x114 = x113 * x55
    x115 = -x11 * x114 + x112 * x65
    x116 = x110 * x59 + x111 * x40
    x117 = x112 * x33
    x118 = x11 * x117 + x116 * x5
    x119 = x113 * x33
    x120 = x11 * x119 + x112 * x5
    x121 = x120 * x55
    x122 = -x11 * x121 + x115 * x68 + x118 * x65
    x123 = x109 + x122
    x124 = x43 * (x116 - x117)
    x125 = x118 * x5 + x120 * x34 + x124
    x126 = x43 * (x112 - x119)
    x127 = x110 * x36 + x111 * x50
    x128 = x127 * x33
    x129 = x11 * x128 + x113 * x5
    x130 = x120 * x5 + x126 + x129 * x34
    x131 = x130 * x55
    x132 = x127 * x55
    x133 = -x11 * x132 + x113 * x65
    x134 = x129 * x55
    x135 = -x11 * x134 + x120 * x65 + x133 * x68
    x136 = -x11 * x131 + x125 * x65 + x135 * x73
    x137 = x123 * x26 + x136 + x27 * x91
    x138 = x27 * x60
    x139 = x118 + x138
    x140 = x125 + x139 * x26 + x27 * x62
    x141 = x105 * x27
    x142 = x1 * (x118 - x121)
    x143 = x1 * (x112 - x114)
    x144 = x122 * x65 - x135 * x69 + x142 + x68 * (x115 * x65 - x133 * x69 + x143)
    x145 = x141 + x144
    x146 = x1 * (x125 - x131)
    x147 = x1 * (x120 - x134)
    x148 = x1 * (x113 - x132)
    x149 = x110 * x50 + x111 * x79
    x150 = x127 * x65 - x149 * x69
    x151 = x127 * x5 + x149 * x34
    x152 = x129 * x65 + x150 * x68 - x151 * x69
    x153 = x43 * (x113 - x128)
    x154 = x129 * x5 + x151 * x34 + x153
    x155 = (
        x136 * x65
        + x146
        - x69 * (x130 * x65 + x152 * x73 - x154 * x69)
        + x73 * (x135 * x65 + x147 - x152 * x69 + x68 * (x133 * x65 + x148 - x150 * x69))
    )
    x156 = x101 * x28 + x28 * x91
    x157 = x107 * x28 + x28 * x62
    x158 = x110 * x112 + x119 * x14 + x46
    x159 = x110 * x113 + x128 * x14 + x49
    x160 = x159 * x55
    x161 = -x11 * x160 + x158 * x65
    x162 = x110 * x116 + x117 * x14 + x61
    x163 = x158 * x34 + x162 * x5
    x164 = x158 * x5 + x159 * x34
    x165 = x164 * x55
    x166 = -x11 * x165 + x161 * x68 + x163 * x65
    x167 = x122 * x27 + x166
    x168 = x123 * x27 + x167
    x169 = x118 * x27 + x163
    x170 = x139 * x27 + x169
    x171 = x1 * (x163 - x165)
    x172 = x1 * (x158 - x160)
    x173 = x110 * x127 + x111 * x149 + x78
    x174 = x159 * x65 - x173 * x69
    x175 = x159 * x5 + x173 * x34
    x176 = (
        x144 * x27
        + x166 * x65
        + x171
        + x68 * (x161 * x65 + x172 - x174 * x69)
        - x69 * (x164 * x65 + x174 * x68 - x175 * x69)
    )
    x177 = x122 * x28
    x178 = x109 * x28 + x177
    x179 = x118 * x28
    x180 = x138 * x28 + x179
    x181 = x144 * x28
    x182 = x100 * x29
    x183 = x22 * x29
    x184 = x112 * x55
    x185 = -x11 * x184 + x116 * x65
    x186 = x185 * x26
    x187 = x122 * x26 + x136 + x26 * (x122 + x186)
    x188 = x116 * x26
    x189 = x118 * x26 + x125 + x26 * (x118 + x188)
    x190 = x1 * (x116 - x184)
    x191 = -x115 * x69 + x185 * x65 + x190
    x192 = x191 * x26
    x193 = x185 * x27
    x194 = x158 * x55
    x195 = -x11 * x194 + x162 * x65
    x196 = x193 + x195
    x197 = x167 + x196 * x26
    x198 = x116 * x27
    x199 = x162 + x198
    x200 = x169 + x199 * x26
    x201 = x191 * x27
    x202 = x1 * (x162 - x194)
    x203 = -x161 * x69 + x195 * x65 + x202
    x204 = x201 + x203
    x205 = x177 + x186 * x28
    x206 = x179 + x188 * x28
    x207 = x110 * x158 + x111 * x159 + 2 * x126
    x208 = x207 * x55
    x209 = x110 * x162 + x111 * x158 + 2 * x124
    x210 = x1 * (-x208 + x209)
    x211 = -x11 * x208 + x209 * x65
    x212 = x110 * x159 + x111 * x173 + 2 * x153
    x213 = x195 * x27 + x196 * x27 + x211
    x214 = x162 * x27 + x199 * x27 + x209
    x215 = x193 * x28 + x195 * x28
    x216 = x162 * x28 + x198 * x28
    x217 = x185 * x29
    x218 = -x13 - A[1]
    x219 = -x14 * x56 + x218 * x63
    x220 = x14 * x55
    x221 = x218 * x54 - x220 * x82
    x222 = -x14 * x86 + x218 * x62
    x223 = -x14 * x66 + x218 * x47
    x224 = x218 * x32 - x220 * x36
    x225 = x218 * x36 - x220 * x50
    x226 = -x14 * x89 + x218 * x41
    x227 = -x14 * x71 + x218 * x37
    x228 = (
        x222 * x65
        - x223 * x69
        + x73 * (x226 * x65 - x227 * x69 + x68 * (x224 * x65 - x225 * x69))
    )
    x229 = x218 * x53 - x220 * x81
    x230 = x218 * x50 - x220 * x79
    x231 = x218 * x51 - x220 * x80
    x232 = x218 * x40 - x220 * x32
    x233 = -x14 * x99 + x218 * x60
    x234 = -x226 * x69 + x233 * x65 + x68 * (-x224 * x69 + x232 * x65)
    x235 = x234 * x26
    x236 = x233 * x26
    x237 = x219 + x222 * x26 + x26 * (x222 + x236)
    x238 = x108 * x23 + x237
    x239 = x233 * x27
    x240 = x118 * x218 - x121 * x14 + x226 * x68
    x241 = x239 + x240
    x242 = x125 * x218 - x131 * x14 + x223 * x68
    x243 = x222 * x27 + x241 * x26 + x242
    x244 = x140 * x23 + x243
    x245 = x234 * x27
    x246 = x112 * x218 - x114 * x14 + x224 * x68
    x247 = x113 * x218 - x132 * x14 + x225 * x68
    x248 = x120 * x218 - x134 * x14 + x227 * x68
    x249 = x240 * x65 - x248 * x69 + x68 * (x246 * x65 - x247 * x69)
    x250 = x245 + x249
    x251 = x127 * x218 - x149 * x220 + x230 * x68
    x252 = x129 * x218 - x151 * x220 + x231 * x68
    x253 = x130 * x218 - x154 * x220 + x229 * x68
    x254 = (
        x242 * x65
        - x253 * x69
        + x73 * (x248 * x65 - x252 * x69 + x68 * (x247 * x65 - x251 * x69))
    )
    x255 = x222 * x28 + x236 * x28
    x256 = x157 * x23 + x255
    x257 = -x14 * x165 + x163 * x218 + x248 * x73
    x258 = x240 * x27 + x257
    x259 = x241 * x27 + x258
    x260 = x170 * x23 + x259
    x261 = -x14 * x160 + x158 * x218 + x247 * x73
    x262 = x159 * x218 - x173 * x220 + x251 * x73
    x263 = x164 * x218 - x175 * x220 + x252 * x73
    x264 = x249 * x27 + x257 * x65 - x263 * x69 + x68 * (x261 * x65 - x262 * x69)
    x265 = x240 * x28
    x266 = x239 * x28 + x265
    x267 = x180 * x23 + x266
    x268 = x249 * x28
    x269 = x23 * x29
    x270 = x233 * x29
    x271 = x269 * x60 + x270
    x272 = x116 * x218 - x14 * x184 + x232 * x68
    x273 = x26 * x272
    x274 = x240 * x26 + x242 + x26 * (x240 + x273)
    x275 = x189 * x23 + x274
    x276 = -x246 * x69 + x272 * x65
    x277 = x26 * x276
    x278 = x27 * x272
    x279 = -x14 * x194 + x162 * x218 + x246 * x73
    x280 = x278 + x279
    x281 = x258 + x26 * x280
    x282 = x200 * x23 + x281
    x283 = x27 * x276
    x284 = -x261 * x69 + x279 * x65
    x285 = x283 + x284
    x286 = x265 + x273 * x28
    x287 = x206 * x23 + x286
    x288 = -x14 * x208 + x209 * x218 + x261 * x75
    x289 = x207 * x218 - x212 * x220 + x262 * x75
    x290 = x27 * x279 + x27 * x280 + x288
    x291 = x214 * x23 + x290
    x292 = x278 * x28 + x279 * x28
    x293 = x216 * x23 + x292
    x294 = x272 * x29
    x295 = x116 * x269 + x294
    x296 = -x15 - A[2]
    x297 = -x16 * x56 + x296 * x63
    x298 = x16 * x55
    x299 = x296 * x54 - x298 * x82
    x300 = -x16 * x86 + x296 * x62
    x301 = -x16 * x66 + x296 * x47
    x302 = x296 * x32 - x298 * x36
    x303 = x302 * x65
    x304 = x296 * x36 - x298 * x50
    x305 = x304 * x69
    x306 = -x16 * x89 + x296 * x41
    x307 = x306 * x65
    x308 = -x16 * x71 + x296 * x37
    x309 = x308 * x69
    x310 = x300 * x65 - x301 * x69 + x73 * (x307 - x309 + x68 * (x303 - x305))
    x311 = x301 * x65
    x312 = x296 * x53 - x298 * x81
    x313 = x312 * x69
    x314 = x304 * x65
    x315 = x296 * x50 - x298 * x79
    x316 = x315 * x69
    x317 = x308 * x65
    x318 = x296 * x51 - x298 * x80
    x319 = x318 * x69
    x320 = x296 * x40 - x298 * x32
    x321 = x320 * x65
    x322 = x302 * x69
    x323 = -x16 * x99 + x296 * x60
    x324 = -x306 * x69 + x323 * x65 + x68 * (x321 - x322)
    x325 = x26 * x300 + x26 * (x26 * x323 + x300) + x297
    x326 = x108 * x24 + x325
    x327 = x118 * x296 - x121 * x16
    x328 = x27 * x323 + x327
    x329 = x125 * x296 - x131 * x16
    x330 = x26 * x328 + x27 * x300 + x329
    x331 = x140 * x24 + x330
    x332 = x112 * x296 - x114 * x16
    x333 = x332 * x65
    x334 = x113 * x296 - x132 * x16
    x335 = x334 * x69
    x336 = x120 * x296 - x134 * x16
    x337 = x327 * x65 - x336 * x69 + x68 * (x333 - x335)
    x338 = x27 * x324 + x337
    x339 = x336 * x65
    x340 = x334 * x65
    x341 = x127 * x296 - x149 * x298
    x342 = x341 * x69
    x343 = x129 * x296 - x151 * x298
    x344 = x343 * x69
    x345 = x130 * x296 - x154 * x298
    x346 = x329 * x65 - x345 * x69 + x73 * (x339 - x344 + x68 * (x340 - x342))
    x347 = x306 * x68
    x348 = x28 * x323 + x347
    x349 = x301 * x68
    x350 = x26 * x348 + x28 * x300 + x349
    x351 = x157 * x24 + x350
    x352 = x307 * x68 - x309 * x68 + x68 * (x303 * x68 - x305 * x68)
    x353 = x28 * x324 + x352
    x354 = (
        x311 * x68
        - x313 * x68
        + x73 * (x317 * x68 - x319 * x68 + x68 * (x314 * x68 - x316 * x68))
    )
    x355 = -x16 * x165 + x163 * x296
    x356 = x27 * x327 + x355
    x357 = x27 * x328 + x356
    x358 = x170 * x24 + x357
    x359 = x158 * x296 - x16 * x160
    x360 = x359 * x65
    x361 = x159 * x296 - x173 * x298
    x362 = x361 * x69
    x363 = x164 * x296 - x175 * x298
    x364 = x27 * x337 + x355 * x65 - x363 * x69 + x68 * (x360 - x362)
    x365 = x336 * x68
    x366 = x28 * x327 + x365
    x367 = x27 * x348 + x366
    x368 = x180 * x24 + x367
    x369 = x339 * x68 - x344 * x68 + x68 * (x340 * x68 - x342 * x68)
    x370 = x28 * x337 + x369
    x371 = x24 * x29
    x372 = 2 / x67**2
    x373 = x28 * x347 + x308 * x372
    x374 = x28 * x348 + x373
    x375 = x371 * x60 + x374
    x376 = x28 * x352 + x317 * x372 - x319 * x372 + x68 * (x314 * x372 - x316 * x372)
    x377 = x116 * x296 - x16 * x184
    x378 = x26 * x327 + x26 * (x26 * x377 + x327) + x329
    x379 = x189 * x24 + x378
    x380 = -x332 * x69 + x377 * x65
    x381 = -x16 * x194 + x162 * x296
    x382 = x27 * x377 + x381
    x383 = x26 * x382 + x356
    x384 = x200 * x24 + x383
    x385 = -x359 * x69 + x381 * x65
    x386 = x27 * x380 + x385
    x387 = x332 * x68
    x388 = x28 * x377 + x387
    x389 = x26 * x388 + x366
    x390 = x206 * x24 + x389
    x391 = x333 * x68 - x335 * x68
    x392 = x28 * x380 + x391
    x393 = -x16 * x208 + x209 * x296
    x394 = x207 * x296 - x212 * x298
    x395 = x27 * x381 + x27 * x382 + x393
    x396 = x214 * x24 + x395
    x397 = x359 * x68
    x398 = x27 * x388 + x28 * x381 + x397
    x399 = x216 * x24 + x398
    x400 = x360 * x68 - x362 * x68
    x401 = x28 * x387 + x334 * x372
    x402 = x28 * x388 + x401
    x403 = x116 * x371 + x402
    x404 = x28 * x391 + x340 * x372 - x342 * x372
    x405 = x320 * x68
    x406 = x26 * x347 + x26 * (x26 * x405 + x347) + x349
    x407 = x321 * x68 - x322 * x68
    x408 = x27 * x405 + x387
    x409 = x26 * x408 + x27 * x347 + x365
    x410 = x27 * x407 + x391
    x411 = x302 * x372
    x412 = x28 * x405 + x411
    x413 = x26 * x412 + x373
    x414 = x303 * x372 - x305 * x372
    x415 = x28 * x407 + x414
    x416 = x27 * x387 + x27 * x408 + x397
    x417 = x27 * x412 + x401
    x418 = 6 / x67**3
    x419 = x28 * x411 + x28 * x412 + x304 * x418
    x420 = x218 * x222 - x220 * x223 + x87
    x421 = x103 + x218 * x233 - x220 * x226
    x422 = x26 * x421
    x423 = x27 * x421
    x424 = x142 + x218 * x240 - x220 * x248 + x68 * (x218 * x226 - x220 * x227 + x92)
    x425 = x423 + x424
    x426 = x146 + x218 * x242 - x220 * x253 + x68 * (x218 * x223 - x220 * x229 + x95)
    x427 = (
        x171
        + x218 * x257
        - x220 * x263
        + x27 * x424
        + x73
        * (x147 + x218 * x248 - x220 * x252 + x68 * (x218 * x227 - x220 * x231 + x96))
    )
    x428 = x28 * x424
    x429 = x190 + x218 * x272 - x220 * x246 + x68 * (x104 + x218 * x232 - x220 * x224)
    x430 = x26 * x429
    x431 = x27 * x429
    x432 = (
        x202
        + x218 * x279
        - x220 * x261
        + x73
        * (x143 + x218 * x246 - x220 * x247 + x68 * (x218 * x224 - x220 * x225 + x93))
    )
    x433 = x431 + x432
    x434 = x218 * x300 - x220 * x301
    x435 = x218 * x323 - x220 * x306
    x436 = x220 * x308
    x437 = x218 * x327 - x220 * x336 + x68 * (x218 * x306 - x436)
    x438 = x27 * x435 + x437
    x439 = x220 * x312
    x440 = x218 * x329 - x220 * x345 + x68 * (x218 * x301 - x439)
    x441 = x218 * x347 - x436 * x68
    x442 = x28 * x435 + x441
    x443 = x218 * x349 - x439 * x68
    x444 = x218 * x308
    x445 = x220 * x318
    x446 = x220 * x343
    x447 = (
        x218 * x355
        - x220 * x363
        + x27 * x437
        + x73 * (x218 * x336 - x446 + x68 * (x444 - x445))
    )
    x448 = x218 * x365 - x446 * x68 + x68 * (x444 * x68 - x445 * x68)
    x449 = x28 * x437 + x448
    x450 = x28 * x441 + x372 * x444 - x372 * x445
    x451 = x218 * x320
    x452 = x220 * x302
    x453 = x218 * x377 - x220 * x332 + x68 * (x451 - x452)
    x454 = x218 * x302
    x455 = x220 * x304
    x456 = x220 * x334
    x457 = x218 * x381 - x220 * x359 + x73 * (x218 * x332 - x456 + x68 * (x454 - x455))
    x458 = x27 * x453 + x457
    x459 = x218 * x387 - x456 * x68 + x68 * (x454 * x68 - x455 * x68)
    x460 = x28 * x453 + x459
    x461 = x220 * x361
    x462 = x218 * x304
    x463 = x220 * x315
    x464 = x218 * x334
    x465 = x220 * x341
    x466 = (
        x218 * x397
        - x461 * x68
        + x73 * (x464 * x68 - x465 * x68 + x68 * (x462 * x68 - x463 * x68))
    )
    x467 = x28 * x459 + x372 * x464 - x372 * x465 + x68 * (x372 * x462 - x372 * x463)
    x468 = x451 * x68 - x452 * x68
    x469 = x27 * x468 + x459
    x470 = x372 * x454 - x372 * x455
    x471 = x28 * x468 + x470
    x472 = x296 * x300 - x298 * x301 + x87
    x473 = x103 + x296 * x323 - x298 * x306
    x474 = x142 + x296 * x327 - x298 * x336
    x475 = x27 * x473 + x474
    x476 = x146 + x296 * x329 - x298 * x345
    x477 = x298 * x308
    x478 = x296 * x347 - x477 * x68 + x68 * (x296 * x306 - x477 + x92)
    x479 = x28 * x473 + x478
    x480 = x298 * x312
    x481 = x296 * x349 - x480 * x68 + x68 * (x296 * x301 - x480 + x95)
    x482 = x171 + x27 * x474 + x296 * x355 - x298 * x363
    x483 = x298 * x343
    x484 = x296 * x365 - x483 * x68 + x68 * (x147 + x296 * x336 - x483)
    x485 = x28 * x474 + x484
    x486 = x296 * x308
    x487 = x298 * x318
    x488 = (
        x28 * x478
        + x372 * x486
        - x372 * x487
        + x73 * (x486 * x68 - x487 * x68 + x68 * (x486 - x487 + x96))
    )
    x489 = x190 + x296 * x377 - x298 * x332
    x490 = x202 + x296 * x381 - x298 * x359
    x491 = x27 * x489 + x490
    x492 = x298 * x334
    x493 = x296 * x387 - x492 * x68 + x68 * (x143 + x296 * x332 - x492)
    x494 = x28 * x489 + x493
    x495 = x298 * x361
    x496 = x296 * x397 - x495 * x68 + x68 * (x172 + x296 * x359 - x495)
    x497 = x296 * x334
    x498 = x298 * x341
    x499 = (
        x28 * x493
        + x372 * x497
        - x372 * x498
        + x73 * (x497 * x68 - x498 * x68 + x68 * (x148 + x497 - x498))
    )
    x500 = x296 * x320
    x501 = x298 * x302
    x502 = x500 * x68 - x501 * x68 + x68 * (x104 + x500 - x501)
    x503 = 2 * x24
    x504 = x27 * x502 + x493
    x505 = x296 * x302
    x506 = x298 * x304
    x507 = (
        x372 * x505
        - x372 * x506
        + x73 * (x505 * x68 - x506 * x68 + x68 * (x505 - x506 + x93))
    )
    x508 = x28 * x502 + x507
    x509 = x296 * x304
    x510 = x298 * x315

    # 108 item(s)
    S = numpy.array(
        [
            x102 * x22
            + x22 * (x102 + x108 * x22)
            + x26 * x94
            + x26 * (x106 + x94)
            + x64
            + x65 * x76
            - x69 * (x54 * x65 - x69 * x82 + x75 * x85)
            + x75
            * (
                x65 * x74
                - x69 * x85
                + x73
                * (x65 * x72 + x68 * (x65 * x70 - x69 * x83 + x97) - x69 * x84 + x96)
                + x95
            ),
            x137 * x22 + x145 * x26 + x155 + x22 * (x137 + x140 * x22) + x27 * x94,
            x106 * x28 + x156 * x22 + x22 * (x156 + x157 * x22) + x28 * x94,
            x145 * x27 + x168 * x22 + x176 + x22 * (x168 + x170 * x22),
            x141 * x28 + x178 * x22 + x181 + x22 * (x178 + x180 * x22),
            x105 * x29 + x182 * x22 + x22 * (x182 + x183 * x60),
            x144 * x26
            + x155
            + x187 * x22
            + x22 * (x187 + x189 * x22)
            + x26 * (x144 + x192),
            x176 + x197 * x22 + x204 * x26 + x22 * (x197 + x200 * x22),
            x181 + x192 * x28 + x205 * x22 + x22 * (x205 + x206 * x22),
            x203 * x27
            + x204 * x27
            + x210
            + x211 * x65
            + x213 * x22
            + x22 * (x213 + x214 * x22)
            - x69 * (x207 * x65 - x212 * x69),
            x201 * x28 + x203 * x28 + x215 * x22 + x22 * (x215 + x216 * x22),
            x191 * x29 + x217 * x22 + x22 * (x116 * x183 + x217),
            0,
            0,
            0,
            0,
            0,
            0,
            x102 * x23
            + x219 * x65
            + x22 * x238
            - x221 * x69
            + x228 * x26
            + x26 * (x228 + x235)
            + x75
            * (
                x223 * x65
                - x229 * x69
                + x73 * (x227 * x65 - x231 * x69 + x68 * (x225 * x65 - x230 * x69))
            ),
            x137 * x23 + x22 * x244 + x228 * x27 + x250 * x26 + x254,
            x156 * x23 + x22 * x256 + x228 * x28 + x235 * x28,
            x168 * x23 + x22 * x260 + x250 * x27 + x264,
            x178 * x23 + x22 * x267 + x245 * x28 + x268,
            x182 * x23 + x22 * x271 + x234 * x29,
            x187 * x23 + x22 * x275 + x249 * x26 + x254 + x26 * (x249 + x277),
            x197 * x23 + x22 * x282 + x26 * x285 + x264,
            x205 * x23 + x22 * x287 + x268 + x277 * x28,
            x213 * x23 + x22 * x291 + x27 * x284 + x27 * x285 + x288 * x65 - x289 * x69,
            x215 * x23 + x22 * x293 + x28 * x283 + x28 * x284,
            x217 * x23 + x22 * x295 + x276 * x29,
            0,
            0,
            0,
            0,
            0,
            0,
            x102 * x24
            + x22 * x326
            + x26 * x310
            + x26 * (x26 * x324 + x310)
            + x297 * x65
            - x299 * x69
            + x75 * (x311 - x313 + x73 * (x317 - x319 + x68 * (x314 - x316))),
            x137 * x24 + x22 * x331 + x26 * x338 + x27 * x310 + x346,
            x156 * x24 + x22 * x351 + x26 * x353 + x28 * x310 + x354,
            x168 * x24 + x22 * x358 + x27 * x338 + x364,
            x178 * x24 + x22 * x368 + x27 * x353 + x370,
            x182 * x24 + x22 * x375 + x28 * x353 + x376,
            x187 * x24 + x22 * x379 + x26 * x337 + x26 * (x26 * x380 + x337) + x346,
            x197 * x24 + x22 * x384 + x26 * x386 + x364,
            x205 * x24 + x22 * x390 + x26 * x392 + x370,
            x213 * x24 + x22 * x396 + x27 * x385 + x27 * x386 + x393 * x65 - x394 * x69,
            x215 * x24 + x22 * x399 + x27 * x392 + x28 * x385 + x400,
            x217 * x24 + x22 * x403 + x28 * x392 + x404,
            x22 * x406 + x26 * x352 + x26 * (x26 * x407 + x352) + x354,
            x22 * x409 + x26 * x410 + x27 * x352 + x369,
            x22 * x413 + x26 * x415 + x376,
            x22 * x416 + x27 * x391 + x27 * x410 + x400,
            x22 * x417 + x27 * x415 + x404,
            x22 * x419 + x28 * x414 + x28 * x415 + x314 * x418 - x316 * x418,
            x218 * x219
            - x220 * x221
            + x23 * x237
            + x23 * x238
            + x26 * x420
            + x26 * (x420 + x422)
            + x64,
            x23 * x243 + x23 * x244 + x26 * x425 + x27 * x420 + x426,
            x23 * x255 + x23 * x256 + x28 * x420 + x28 * x422,
            x23 * x259 + x23 * x260 + x27 * x425 + x427,
            x23 * x266 + x23 * x267 + x28 * x423 + x428,
            x23 * x270 + x23 * x271 + x29 * x421,
            x23 * x274 + x23 * x275 + x26 * x424 + x26 * (x424 + x430) + x426,
            x23 * x281 + x23 * x282 + x26 * x433 + x427,
            x23 * x286 + x23 * x287 + x28 * x430 + x428,
            x210
            + x218 * x288
            - x220 * x289
            + x23 * x290
            + x23 * x291
            + x27 * x432
            + x27 * x433
            + x75
            * (
                x172
                + x218 * x261
                - x220 * x262
                + x73
                * (
                    x148
                    + x218 * x247
                    - x220 * x251
                    + x68 * (x218 * x225 - x220 * x230 + x97)
                )
            ),
            x23 * x292 + x23 * x293 + x28 * x431 + x28 * x432,
            x23 * x294 + x23 * x295 + x29 * x429,
            0,
            0,
            0,
            0,
            0,
            0,
            x218 * x297
            - x220 * x299
            + x23 * x326
            + x237 * x24
            + x26 * x434
            + x26 * (x26 * x435 + x434),
            x23 * x331 + x24 * x243 + x26 * x438 + x27 * x434 + x440,
            x23 * x351 + x24 * x255 + x26 * x442 + x28 * x434 + x443,
            x23 * x358 + x24 * x259 + x27 * x438 + x447,
            x23 * x368 + x24 * x266 + x27 * x442 + x449,
            x23 * x375 + x24 * x270 + x28 * x442 + x450,
            x23 * x379 + x24 * x274 + x26 * x437 + x26 * (x26 * x453 + x437) + x440,
            x23 * x384 + x24 * x281 + x26 * x458 + x447,
            x23 * x390 + x24 * x286 + x26 * x460 + x449,
            x218 * x393
            - x220 * x394
            + x23 * x396
            + x24 * x290
            + x27 * x457
            + x27 * x458
            + x75 * (x218 * x359 - x461 + x73 * (x464 - x465 + x68 * (x462 - x463))),
            x23 * x399 + x24 * x292 + x27 * x460 + x28 * x457 + x466,
            x23 * x403 + x24 * x294 + x28 * x460 + x467,
            x23 * x406 + x26 * x441 + x26 * (x26 * x468 + x441) + x443,
            x23 * x409 + x26 * x469 + x27 * x441 + x448,
            x23 * x413 + x26 * x471 + x450,
            x23 * x416 + x27 * x459 + x27 * x469 + x466,
            x23 * x417 + x27 * x471 + x467,
            x23 * x419 + x28 * x470 + x28 * x471 + x418 * x462 - x418 * x463,
            x24 * x325
            + x24 * x326
            + x26 * x472
            + x26 * (x26 * x473 + x472)
            + x296 * x297
            - x298 * x299
            + x64,
            x24 * x330 + x24 * x331 + x26 * x475 + x27 * x472 + x476,
            x24 * x350 + x24 * x351 + x26 * x479 + x28 * x472 + x481,
            x24 * x357 + x24 * x358 + x27 * x475 + x482,
            x24 * x367 + x24 * x368 + x27 * x479 + x485,
            x24 * x374 + x24 * x375 + x28 * x479 + x488,
            x24 * x378 + x24 * x379 + x26 * x474 + x26 * (x26 * x489 + x474) + x476,
            x24 * x383 + x24 * x384 + x26 * x491 + x482,
            x24 * x389 + x24 * x390 + x26 * x494 + x485,
            x210
            + x24 * x395
            + x24 * x396
            + x27 * x490
            + x27 * x491
            + x296 * x393
            - x298 * x394,
            x24 * x398 + x24 * x399 + x27 * x494 + x28 * x490 + x496,
            x24 * x402 + x24 * x403 + x28 * x494 + x499,
            x26 * x478 + x26 * (x26 * x502 + x478) + x406 * x503 + x481,
            x26 * x504 + x27 * x478 + x409 * x503 + x484,
            x26 * x508 + x413 * x503 + x488,
            x27 * x493 + x27 * x504 + x416 * x503 + x496,
            x27 * x508 + x417 * x503 + x499,
            x28 * x507
            + x28 * x508
            + x418 * x509
            - x418 * x510
            + x419 * x503
            + x75
            * (
                x372 * x509
                - x372 * x510
                + x73 * (x509 * x68 - x510 * x68 + x68 * (x509 - x510 + x97))
            ),
        ]
    )
    return S


def eri_0220(a, A, b, B, c, C, d, D):
    """Cartesian [sd|ds] 2-electron electron repulsion integral.

    Generated code; DO NOT modify by hand!"""

    x0 = 2 * a + 2 * b
    x1 = x0 ** (-1.0)
    x2 = 2 * c + 2 * d
    x3 = x2 ** (-1.0)
    x4 = numpy.pi**2.5
    x5 = a + b
    x6 = c + d
    x7 = x5 * x6
    x8 = x5 + x6
    x9 = (x7 + numpy.sqrt(x8)) ** (-1.0)
    x10 = x5 ** (-1.0)
    x11 = A[0] - B[0]
    x12 = A[1] - B[1]
    x13 = A[2] - B[2]
    x14 = numpy.exp(-a * b * x10 * (x11**2 + x12**2 + x13**2))
    x15 = x6 ** (-1.0)
    x16 = numpy.exp(
        -c * d * x15 * ((C[0] - D[0]) ** 2 + (C[1] - D[1]) ** 2 + (C[2] - D[2]) ** 2)
    )
    x17 = x8 ** (-1.0)
    x18 = x15 * (c * C[0] + d * D[0])
    x19 = -x10 * (a * A[0] + b * B[0])
    x20 = -x18 - x19
    x21 = x15 * (c * C[1] + d * D[1])
    x22 = -x10 * (a * A[1] + b * B[1])
    x23 = -x21 - x22
    x24 = -x10 * (a * A[2] + b * B[2])
    x25 = -x15 * (c * C[2] + d * D[2]) - x24
    x26 = x17 * x7 * (x20**2 + x23**2 + x25**2)
    x27 = boys(1, x26)
    x28 = x17 * x5
    x29 = boys(2, x26)
    x30 = 2 * x14 * x16 * x4 * x9
    x31 = x29 * x30
    x32 = x3 * (2 * x14 * x16 * x27 * x4 * x9 - x28 * x31)
    x33 = x18 - C[0]
    x34 = x27 * x30
    x35 = x20 * x28
    x36 = x31 * x35 + x33 * x34
    x37 = x30 * boys(3, x26)
    x38 = x31 * x33 + x35 * x37
    x39 = x32 + x33 * x36 + x35 * x38
    x40 = x17 * x6
    x41 = x39 * x40
    x42 = boys(0, x26)
    x43 = x3 * (2 * x14 * x16 * x4 * x42 * x9 - x28 * x34)
    x44 = x30 * x42
    x45 = x33 * (x33 * x44 + x34 * x35) + x35 * x36 + x43
    x46 = x1 * (-x41 + x45)
    x47 = -x19 - A[0]
    x48 = x0 + x2
    x49 = x48 ** (-1.0)
    x50 = x20 * x40
    x51 = x31 * x47 - x37 * x50
    x52 = x38 * x40
    x53 = -x20 * x52 + x36 * x47 + x49 * x51
    x54 = 2 * x49
    x55 = -x20 * x41 + x45 * x47 + x53 * x54
    x56 = -2 * x14 * x16 * x29 * x4 * x9
    x57 = x3 * (-x28 * x37 - x56)
    x58 = x30 * boys(4, x26)
    x59 = x33 * x37 + x35 * x58
    x60 = x33 * x38 + x35 * x59 + x57
    x61 = x37 * x47 - x50 * x58
    x62 = x38 * x47 + x49 * x61 - x50 * x59
    x63 = x1 * (x36 - x52)
    x64 = x1 * (-x37 * x40 - x56)
    x65 = x21 - C[1]
    x66 = x23 * x28
    x67 = x31 * x66 + x34 * x65
    x68 = x31 * x65 + x37 * x66
    x69 = x33 * x67 + x35 * x68
    x70 = x40 * x69
    x71 = x34 * x66 + x44 * x65
    x72 = x33 * x71 + x35 * x67
    x73 = x1 * (-x70 + x72)
    x74 = x40 * x68
    x75 = x1 * (x67 - x74)
    x76 = -x20 * x74 + x47 * x67
    x77 = x37 * x65 + x58 * x66
    x78 = x47 * x68 - x50 * x77
    x79 = -x20 * x70 + x47 * x72 + x49 * x76
    x80 = x33 * x68 + x35 * x77
    x81 = x32 + x65 * x67 + x66 * x68
    x82 = x40 * x81
    x83 = x43 + x65 * x71 + x66 * x67
    x84 = x1 * (-x82 + x83)
    x85 = -x20 * x82 + x47 * x83
    x86 = x57 + x65 * x68 + x66 * x77
    x87 = -x22 - A[1]
    x88 = -x23 * x41 + x45 * x87
    x89 = x23 * x40
    x90 = x39 * x87 - x60 * x89
    x91 = x31 * x87 - x37 * x89
    x92 = x37 * x87 - x58 * x89
    x93 = -x23 * x52 + x36 * x87
    x94 = x38 * x87 - x59 * x89
    x95 = x12 * x45 + x88
    x96 = -x23 * x74 + x49 * x91 + x67 * x87
    x97 = x49 * x92 + x68 * x87 - x77 * x89
    x98 = -x23 * x70 + x49 * x93 + x72 * x87
    x99 = x49 * x94 + x69 * x87 - x80 * x89
    x100 = x12 * x72 + x98
    x101 = -x23 * x82 + x54 * x96 + x83 * x87
    x102 = x54 * x97 + x81 * x87 - x86 * x89
    x103 = x101 + x12 * x83
    x104 = -x24 - A[2]
    x105 = x104 * x45 - x25 * x41
    x106 = x25 * x40
    x107 = x104 * x39 - x106 * x60
    x108 = x104 * x31 - x106 * x37
    x109 = x108 * x47
    x110 = x104 * x37 - x106 * x58
    x111 = x110 * x50
    x112 = x104 * x36 - x25 * x52
    x113 = x112 * x47
    x114 = x104 * x38 - x106 * x59
    x115 = x114 * x50
    x116 = x105 + x13 * x45
    x117 = x104 * x72 - x25 * x70
    x118 = x104 * x67 - x25 * x74
    x119 = x118 * x47
    x120 = x104 * x68 - x106 * x77
    x121 = x120 * x50
    x122 = x104 * x69 - x106 * x80
    x123 = x117 + x13 * x72
    x124 = x11 * x49
    x125 = x104 * x83 - x25 * x82
    x126 = x104 * x81 - x106 * x86
    x127 = x125 + x13 * x83
    x128 = x48 ** (-2.0)
    x129 = 2 * x128
    x130 = x108 * x129
    x131 = x112 * x87
    x132 = x114 * x89
    x133 = x12 * x49
    x134 = x108 * x87
    x135 = x110 * x89
    x136 = x118 * x87
    x137 = x120 * x89
    x138 = x13 * x54
    x139 = x104 * x112
    x140 = x106 * x114
    x141 = x104 * x118
    x142 = x106 * x120
    x143 = x104 * x108
    x144 = x106 * x110

    # 36 item(s)
    S = numpy.array(
        [
            x11 * x55
            + x11 * (x11 * x45 + x55)
            + x46
            + x47 * x55
            - x50 * (x39 * x47 - x50 * x60 + x54 * x62)
            + x54 * (x47 * x53 + x49 * (x47 * x51 - x50 * x61 + x64) - x50 * x62 + x63),
            x11 * x79
            + x11 * (x11 * x72 + x79)
            + x47 * x79
            + x49 * (x47 * x76 - x50 * x78 + x75)
            - x50 * (x47 * x69 + x49 * x78 - x50 * x80)
            + x73,
            0,
            x11 * x85
            + x11 * (x11 * x83 + x85)
            + x47 * x85
            - x50 * (x47 * x81 - x50 * x86)
            + x84,
            0,
            0,
            x11 * x95
            + x12 * x55
            + x47 * x88
            - x50 * x90
            + x54 * (x47 * x93 + x49 * (x47 * x91 - x50 * x92) - x50 * x94),
            x100 * x11
            + x12 * x79
            + x47 * x98
            + x49 * (x47 * x96 - x50 * x97)
            - x50 * x99,
            0,
            x101 * x47 - x102 * x50 + x103 * x11 + x12 * x85,
            0,
            0,
            x105 * x47
            - x107 * x50
            + x11 * x116
            + x13 * x55
            + x54 * (x113 - x115 + x49 * (x109 - x111)),
            x11 * x123 + x117 * x47 - x122 * x50 + x13 * x79 + x49 * (x119 - x121),
            x112 * x124 + x113 * x49 - x115 * x49 + x49 * (x109 * x49 - x111 * x49),
            x11 * x127 + x125 * x47 - x126 * x50 + x13 * x85,
            x118 * x124 + x119 * x49 - x121 * x49,
            x109 * x129 + x11 * x130 - x111 * x129,
            x12 * x88 + x12 * x95 + x46 + x87 * x88 - x89 * x90,
            x100 * x12
            + x12 * x98
            + x49 * (x63 + x87 * x93 - x89 * x94)
            + x73
            + x87 * x98
            - x89 * x99,
            0,
            x101 * x12
            + x101 * x87
            - x102 * x89
            + x103 * x12
            + x54 * (x49 * (x64 + x87 * x91 - x89 * x92) + x75 + x87 * x96 - x89 * x97)
            + x84,
            0,
            0,
            x105 * x87 - x107 * x89 + x116 * x12 + x13 * x88,
            x117 * x87 + x12 * x123 - x122 * x89 + x13 * x98 + x49 * (x131 - x132),
            x112 * x133 + x131 * x49 - x132 * x49,
            x101 * x13
            + x12 * x127
            + x125 * x87
            - x126 * x89
            + x54 * (x136 - x137 + x49 * (x134 - x135)),
            x118 * x133 + x136 * x49 - x137 * x49 + x49 * (x134 * x49 - x135 * x49),
            x12 * x130 + x129 * x134 - x129 * x135,
            x104 * x105 + x105 * x13 - x106 * x107 + x116 * x13 + x46,
            x104 * x117 - x106 * x122 + x117 * x13 + x123 * x13 + x73,
            x112 * x138 + x139 * x49 - x140 * x49 + x49 * (x139 - x140 + x63),
            x104 * x125 - x106 * x126 + x125 * x13 + x127 * x13 + x84,
            x118 * x138 + x141 * x49 - x142 * x49 + x49 * (x141 - x142 + x75),
            4 * x108 * x128 * x13
            + x129 * x143
            - x129 * x144
            + x54 * (x143 * x49 - x144 * x49 + x49 * (x143 - x144 + x64)),
        ]
    )
    return S


def eri_0221(a, A, b, B, c, C, d, D):
    """Cartesian [sd|dp] 2-electron electron repulsion integral.

    Generated code; DO NOT modify by hand!"""

    x0 = 2 * a + 2 * b
    x1 = x0 ** (-1.0)
    x2 = c + d
    x3 = x2 ** (-1.0)
    x4 = x3 * (c * C[0] + d * D[0])
    x5 = x4 - C[0]
    x6 = a + b
    x7 = x2 + x6
    x8 = x7 ** (-1.0)
    x9 = x6 ** (-1.0)
    x10 = -x9 * (a * A[0] + b * B[0])
    x11 = -x10 - x4
    x12 = x3 * (c * C[1] + d * D[1])
    x13 = -x9 * (a * A[1] + b * B[1])
    x14 = -x12 - x13
    x15 = -x9 * (a * A[2] + b * B[2])
    x16 = -x15 - x3 * (c * C[2] + d * D[2])
    x17 = x2 * x6
    x18 = x17 * x8 * (x11**2 + x14**2 + x16**2)
    x19 = boys(2, x18)
    x20 = numpy.pi**2.5
    x21 = (x17 + numpy.sqrt(x7)) ** (-1.0)
    x22 = A[0] - B[0]
    x23 = A[1] - B[1]
    x24 = A[2] - B[2]
    x25 = numpy.exp(-a * b * x9 * (x22**2 + x23**2 + x24**2))
    x26 = C[0] - D[0]
    x27 = C[1] - D[1]
    x28 = C[2] - D[2]
    x29 = numpy.exp(-c * d * x3 * (x26**2 + x27**2 + x28**2))
    x30 = 2 * x20 * x21 * x25 * x29
    x31 = x19 * x30
    x32 = x6 * x8
    x33 = x11 * x32
    x34 = boys(3, x18)
    x35 = x30 * x34
    x36 = x31 * x5 + x33 * x35
    x37 = x32 * x36
    x38 = boys(1, x18)
    x39 = x30 * x38
    x40 = x31 * x33 + x39 * x5
    x41 = 2 * c + 2 * d
    x42 = x41 ** (-1.0)
    x43 = 2 * x42
    x44 = x42 * (2 * x20 * x21 * x25 * x29 * x38 - x31 * x32)
    x45 = x11 * x37 + x40 * x5 + x44
    x46 = -2 * x19 * x20 * x21 * x25 * x29
    x47 = x42 * (-x32 * x35 - x46)
    x48 = x30 * boys(4, x18)
    x49 = x33 * x48 + x35 * x5
    x50 = x32 * x49
    x51 = x11 * x50 + x36 * x5 + x47
    x52 = x33 * x51 + x43 * (-x37 + x40) + x45 * x5
    x53 = x2 * x8
    x54 = x52 * x53
    x55 = x32 * x40
    x56 = boys(0, x18)
    x57 = x30 * x56
    x58 = x33 * x39 + x5 * x57
    x59 = x42 * (2 * x20 * x21 * x25 * x29 * x56 - x32 * x39)
    x60 = x11 * x55 + x5 * x58 + x59
    x61 = x33 * x45 + x43 * (-x55 + x58) + x5 * x60
    x62 = x1 * (-x54 + x61)
    x63 = -x10 - A[0]
    x64 = x51 * x53
    x65 = x0 + x41
    x66 = x65 ** (-1.0)
    x67 = x11 * x53
    x68 = x35 * x63 - x48 * x67
    x69 = x49 * x53
    x70 = -x11 * x69 + x36 * x63 + x66 * x68
    x71 = 2 * x66
    x72 = -x11 * x64 + x45 * x63 + x70 * x71
    x73 = 3 * x66
    x74 = -x11 * x54 + x61 * x63 + x72 * x73
    x75 = -2 * x20 * x21 * x25 * x29 * x34
    x76 = x42 * (-x32 * x48 - x75)
    x77 = x30 * boys(5, x18)
    x78 = x33 * x77 + x48 * x5
    x79 = x33 * x78 + x49 * x5 + x76
    x80 = x33 * x79 + x43 * (x36 - x50) + x5 * x51
    x81 = x48 * x63 - x67 * x77
    x82 = x49 * x63 + x66 * x81 - x67 * x78
    x83 = x51 * x63 - x67 * x79 + x71 * x82
    x84 = x45 * x53
    x85 = x31 * x63 - x35 * x67
    x86 = x36 * x53
    x87 = -x11 * x86 + x40 * x63 + x66 * x85
    x88 = -x11 * x84 + x60 * x63 + x71 * x87
    x89 = x26 * x88 + x74
    x90 = x1 * (x60 - x84)
    x91 = x1 * (x40 - x86)
    x92 = x1 * (-x35 * x53 - x46)
    x93 = (
        x63 * x88
        - x67 * x72
        + x71 * (x63 * x87 + x66 * (x63 * x85 - x67 * x68 + x92) - x67 * x70 + x91)
        + x90
    )
    x94 = x1 * (x45 - x64)
    x95 = x1 * (x36 - x69)
    x96 = x1 * (-x48 * x53 - x75)
    x97 = x26 * x60 + x61
    x98 = x12 - C[1]
    x99 = x14 * x32
    x100 = x31 * x99 + x39 * x98
    x101 = x100 * x32
    x102 = x39 * x99 + x57 * x98
    x103 = x42 * (-x101 + x102)
    x104 = x101 * x11 + x102 * x5
    x105 = x31 * x98 + x35 * x99
    x106 = x105 * x32
    x107 = x100 * x5 + x106 * x11
    x108 = x103 + x104 * x5 + x107 * x33
    x109 = x42 * (x100 - x106)
    x110 = x35 * x98 + x48 * x99
    x111 = x110 * x32
    x112 = x105 * x5 + x11 * x111
    x113 = x107 * x5 + x109 + x112 * x33
    x114 = x113 * x53
    x115 = x110 * x53
    x116 = x105 * x63 - x11 * x115
    x117 = x112 * x53
    x118 = x107 * x63 - x11 * x117 + x116 * x66
    x119 = x108 * x63 - x11 * x114 + x118 * x71
    x120 = x119 + x27 * x88
    x121 = x108 + x27 * x60
    x122 = x1 * (x108 - x114)
    x123 = x1 * (x107 - x117)
    x124 = x1 * (x105 - x115)
    x125 = x48 * x98 + x77 * x99
    x126 = x110 * x63 - x125 * x67
    x127 = x110 * x5 + x125 * x33
    x128 = x112 * x63 + x126 * x66 - x127 * x67
    x129 = x42 * (x105 - x111)
    x130 = x112 * x5 + x127 * x33 + x129
    x131 = (
        x119 * x63
        + x122
        - x67 * (x113 * x63 + x128 * x71 - x130 * x67)
        + x71 * (x118 * x63 + x123 - x128 * x67 + x66 * (x116 * x63 + x124 - x126 * x67))
    )
    x132 = x28 * x88
    x133 = x22 * x28
    x134 = x105 * x53
    x135 = x100 * x63 - x11 * x134
    x136 = x107 * x53
    x137 = x104 * x63 - x11 * x136 + x135 * x66
    x138 = x119 + x137 * x26
    x139 = x104 * x26 + x108
    x140 = x1 * (x104 - x136)
    x141 = x1 * (x100 - x134)
    x142 = -x118 * x67 + x137 * x63 + x140 + x66 * (-x116 * x67 + x135 * x63 + x141)
    x143 = x100 * x98 + x106 * x14 + x44
    x144 = x105 * x98 + x111 * x14 + x47
    x145 = x144 * x53
    x146 = -x11 * x145 + x143 * x63
    x147 = x101 * x14 + x102 * x98 + x59
    x148 = x143 * x33 + x147 * x5
    x149 = x143 * x5 + x144 * x33
    x150 = x149 * x53
    x151 = -x11 * x150 + x146 * x66 + x148 * x63
    x152 = x137 * x27 + x151
    x153 = x104 * x27 + x148
    x154 = x1 * (x148 - x150)
    x155 = x1 * (x143 - x145)
    x156 = x110 * x98 + x125 * x99 + x76
    x157 = x144 * x63 - x156 * x67
    x158 = x144 * x5 + x156 * x33
    x159 = (
        x151 * x63
        + x154
        + x66 * (x146 * x63 + x155 - x157 * x67)
        - x67 * (x149 * x63 + x157 * x66 - x158 * x67)
    )
    x160 = x137 * x28
    x161 = x143 * x53
    x162 = -x11 * x161 + x147 * x63
    x163 = x151 + x162 * x26
    x164 = x147 * x26 + x148
    x165 = x1 * (x147 - x161)
    x166 = -x146 * x67 + x162 * x63 + x165
    x167 = 2 * x109 + x143 * x98 + x144 * x99
    x168 = x167 * x53
    x169 = 2 * x103 + x143 * x99 + x147 * x98
    x170 = x1 * (-x168 + x169)
    x171 = -x11 * x168 + x169 * x63
    x172 = 2 * x129 + x144 * x98 + x156 * x99
    x173 = x162 * x27 + x171
    x174 = x147 * x27 + x169
    x175 = x162 * x28
    x176 = -x13 - A[1]
    x177 = -x14 * x54 + x176 * x61
    x178 = x14 * x53
    x179 = x176 * x52 - x178 * x80
    x180 = -x14 * x84 + x176 * x60
    x181 = -x14 * x64 + x176 * x45
    x182 = x176 * x31 - x178 * x35
    x183 = x176 * x35 - x178 * x48
    x184 = -x14 * x86 + x176 * x40
    x185 = -x14 * x69 + x176 * x36
    x186 = (
        x180 * x63
        - x181 * x67
        + x71 * (x184 * x63 - x185 * x67 + x66 * (x182 * x63 - x183 * x67))
    )
    x187 = x176 * x51 - x178 * x79
    x188 = x176 * x48 - x178 * x77
    x189 = x176 * x49 - x178 * x78
    x190 = x177 + x180 * x26
    x191 = x190 + x23 * x97
    x192 = x108 * x176 - x114 * x14 + x181 * x66
    x193 = x180 * x27 + x192
    x194 = x121 * x23 + x193
    x195 = x105 * x176 - x115 * x14 + x183 * x66
    x196 = x110 * x176 - x125 * x178 + x188 * x66
    x197 = x107 * x176 - x117 * x14 + x185 * x66
    x198 = x112 * x176 - x127 * x178 + x189 * x66
    x199 = x113 * x176 - x130 * x178 + x187 * x66
    x200 = (
        x192 * x63
        - x199 * x67
        + x71 * (x197 * x63 - x198 * x67 + x66 * (x195 * x63 - x196 * x67))
    )
    x201 = x23 * x28
    x202 = x180 * x28
    x203 = x201 * x60 + x202
    x204 = x104 * x176 - x136 * x14 + x184 * x66
    x205 = x192 + x204 * x26
    x206 = x139 * x23 + x205
    x207 = x100 * x176 - x134 * x14 + x182 * x66
    x208 = -x197 * x67 + x204 * x63 + x66 * (-x195 * x67 + x207 * x63)
    x209 = -x14 * x150 + x148 * x176 + x197 * x71
    x210 = x204 * x27 + x209
    x211 = x153 * x23 + x210
    x212 = -x14 * x145 + x143 * x176 + x195 * x71
    x213 = x144 * x176 - x156 * x178 + x196 * x71
    x214 = x149 * x176 - x158 * x178 + x198 * x71
    x215 = x209 * x63 - x214 * x67 + x66 * (x212 * x63 - x213 * x67)
    x216 = x204 * x28
    x217 = x104 * x201 + x216
    x218 = -x14 * x161 + x147 * x176 + x207 * x71
    x219 = x209 + x218 * x26
    x220 = x164 * x23 + x219
    x221 = -x212 * x67 + x218 * x63
    x222 = -x14 * x168 + x169 * x176 + x212 * x73
    x223 = x167 * x176 - x172 * x178 + x213 * x73
    x224 = x218 * x27 + x222
    x225 = x174 * x23 + x224
    x226 = x218 * x28
    x227 = x147 * x201 + x226
    x228 = -x15 - A[2]
    x229 = -x16 * x54 + x228 * x61
    x230 = x16 * x53
    x231 = x228 * x52 - x230 * x80
    x232 = -x16 * x84 + x228 * x60
    x233 = -x16 * x64 + x228 * x45
    x234 = x228 * x31 - x230 * x35
    x235 = x234 * x63
    x236 = x228 * x35 - x230 * x48
    x237 = x236 * x67
    x238 = -x16 * x86 + x228 * x40
    x239 = x238 * x63
    x240 = -x16 * x69 + x228 * x36
    x241 = x240 * x67
    x242 = x232 * x63 - x233 * x67 + x71 * (x239 - x241 + x66 * (x235 - x237))
    x243 = x233 * x63
    x244 = x228 * x51 - x230 * x79
    x245 = x244 * x67
    x246 = x236 * x63
    x247 = x228 * x48 - x230 * x77
    x248 = x247 * x67
    x249 = x240 * x63
    x250 = x228 * x49 - x230 * x78
    x251 = x250 * x67
    x252 = x229 + x232 * x26
    x253 = x24 * x97 + x252
    x254 = x108 * x228 - x114 * x16
    x255 = x232 * x27 + x254
    x256 = x121 * x24 + x255
    x257 = x107 * x228 - x117 * x16
    x258 = x257 * x63
    x259 = x105 * x228 - x115 * x16
    x260 = x259 * x63
    x261 = x110 * x228 - x125 * x230
    x262 = x261 * x67
    x263 = x112 * x228 - x127 * x230
    x264 = x263 * x67
    x265 = x113 * x228 - x130 * x230
    x266 = x254 * x63 - x265 * x67 + x71 * (x258 - x264 + x66 * (x260 - x262))
    x267 = x24 * x28
    x268 = x233 * x66
    x269 = x232 * x28 + x268
    x270 = x267 * x60 + x269
    x271 = (
        x243 * x66
        - x245 * x66
        + x71 * (x249 * x66 - x251 * x66 + x66 * (x246 * x66 - x248 * x66))
    )
    x272 = x104 * x228 - x136 * x16
    x273 = x254 + x26 * x272
    x274 = x139 * x24 + x273
    x275 = x100 * x228 - x134 * x16
    x276 = x275 * x63
    x277 = x259 * x67
    x278 = -x257 * x67 + x272 * x63 + x66 * (x276 - x277)
    x279 = x148 * x228 - x150 * x16
    x280 = x27 * x272 + x279
    x281 = x153 * x24 + x280
    x282 = x143 * x228 - x145 * x16
    x283 = x282 * x63
    x284 = x144 * x228 - x156 * x230
    x285 = x284 * x67
    x286 = x149 * x228 - x158 * x230
    x287 = x279 * x63 - x286 * x67 + x66 * (x283 - x285)
    x288 = x257 * x66
    x289 = x272 * x28 + x288
    x290 = x104 * x267 + x289
    x291 = x258 * x66 - x264 * x66 + x66 * (x260 * x66 - x262 * x66)
    x292 = x238 * x66
    x293 = x26 * x292 + x268
    x294 = x239 * x66 - x241 * x66 + x66 * (x235 * x66 - x237 * x66)
    x295 = x27 * x292 + x288
    x296 = 2 / x65**2
    x297 = x240 * x296
    x298 = x28 * x292 + x297
    x299 = x249 * x296 - x251 * x296 + x66 * (x246 * x296 - x248 * x296)
    x300 = x147 * x228 - x16 * x161
    x301 = x26 * x300 + x279
    x302 = x164 * x24 + x301
    x303 = -x282 * x67 + x300 * x63
    x304 = -x16 * x168 + x169 * x228
    x305 = x167 * x228 - x172 * x230
    x306 = x27 * x300 + x304
    x307 = x174 * x24 + x306
    x308 = x282 * x66
    x309 = x28 * x300 + x308
    x310 = x147 * x267 + x309
    x311 = x283 * x66 - x285 * x66
    x312 = x275 * x66
    x313 = x26 * x312 + x288
    x314 = x276 * x66 - x277 * x66
    x315 = x27 * x312 + x308
    x316 = x259 * x296
    x317 = x28 * x312 + x316
    x318 = x260 * x296 - x262 * x296
    x319 = x234 * x296
    x320 = x26 * x319 + x297
    x321 = x235 * x296 - x237 * x296
    x322 = x27 * x319 + x316
    x323 = 6 / x65**3
    x324 = x236 * x323 + x28 * x319
    x325 = x176 * x180 - x178 * x181 + x90
    x326 = x122 + x176 * x192 - x178 * x199 + x66 * (x176 * x181 - x178 * x187 + x94)
    x327 = x140 + x176 * x204 - x178 * x197 + x66 * (x176 * x184 - x178 * x185 + x91)
    x328 = (
        x154
        + x176 * x209
        - x178 * x214
        + x71
        * (x123 + x176 * x197 - x178 * x198 + x66 * (x176 * x185 - x178 * x189 + x95))
    )
    x329 = (
        x165
        + x176 * x218
        - x178 * x212
        + x71
        * (x141 + x176 * x207 - x178 * x195 + x66 * (x176 * x182 - x178 * x183 + x92))
    )
    x330 = x176 * x232 - x178 * x233
    x331 = x178 * x244
    x332 = x176 * x254 - x178 * x265 + x66 * (x176 * x233 - x331)
    x333 = x176 * x268 - x331 * x66
    x334 = x176 * x238
    x335 = x178 * x240
    x336 = x176 * x272 - x178 * x257 + x66 * (x334 - x335)
    x337 = x176 * x240
    x338 = x178 * x250
    x339 = x178 * x263
    x340 = x176 * x279 - x178 * x286 + x71 * (x176 * x257 - x339 + x66 * (x337 - x338))
    x341 = x176 * x288 - x339 * x66 + x66 * (x337 * x66 - x338 * x66)
    x342 = x334 * x66 - x335 * x66
    x343 = x296 * x337 - x296 * x338
    x344 = x176 * x234
    x345 = x178 * x236
    x346 = x176 * x275
    x347 = x178 * x259
    x348 = x176 * x300 - x178 * x282 + x71 * (x346 - x347 + x66 * (x344 - x345))
    x349 = x178 * x284
    x350 = x176 * x236
    x351 = x178 * x247
    x352 = x176 * x259
    x353 = x178 * x261
    x354 = (
        x176 * x308
        - x349 * x66
        + x71 * (x352 * x66 - x353 * x66 + x66 * (x350 * x66 - x351 * x66))
    )
    x355 = x346 * x66 - x347 * x66 + x66 * (x344 * x66 - x345 * x66)
    x356 = x296 * x352 - x296 * x353 + x66 * (x296 * x350 - x296 * x351)
    x357 = x296 * x344 - x296 * x345
    x358 = x228 * x232 - x230 * x233 + x90
    x359 = x122 + x228 * x254 - x230 * x265
    x360 = x230 * x244
    x361 = x228 * x268 - x360 * x66 + x66 * (x228 * x233 - x360 + x94)
    x362 = x140 + x228 * x272 - x230 * x257
    x363 = x154 + x228 * x279 - x230 * x286
    x364 = x230 * x263
    x365 = x228 * x288 - x364 * x66 + x66 * (x123 + x228 * x257 - x364)
    x366 = x228 * x238
    x367 = x230 * x240
    x368 = x366 * x66 - x367 * x66 + x66 * (x366 - x367 + x91)
    x369 = 2 * x24
    x370 = x228 * x240
    x371 = x230 * x250
    x372 = (
        x296 * x370
        - x296 * x371
        + x71 * (x370 * x66 - x371 * x66 + x66 * (x370 - x371 + x95))
    )
    x373 = x165 + x228 * x300 - x230 * x282
    x374 = x230 * x284
    x375 = x228 * x308 - x374 * x66 + x66 * (x155 + x228 * x282 - x374)
    x376 = x228 * x275
    x377 = x230 * x259
    x378 = x376 * x66 - x377 * x66 + x66 * (x141 + x376 - x377)
    x379 = x228 * x259
    x380 = x230 * x261
    x381 = (
        x296 * x379
        - x296 * x380
        + x71 * (x379 * x66 - x380 * x66 + x66 * (x124 + x379 - x380))
    )
    x382 = x228 * x234
    x383 = x230 * x236
    x384 = (
        x296 * x382
        - x296 * x383
        + x71 * (x382 * x66 - x383 * x66 + x66 * (x382 - x383 + x92))
    )
    x385 = x228 * x236
    x386 = x230 * x247

    # 108 item(s)
    S = numpy.array(
        [
            x22 * x89
            + x22 * (x22 * x97 + x89)
            + x26 * x93
            + x62
            + x63 * x74
            - x67 * (x52 * x63 - x67 * x80 + x73 * x83)
            + x73
            * (
                x63 * x72
                - x67 * x83
                + x71
                * (x63 * x70 + x66 * (x63 * x68 - x67 * x81 + x96) - x67 * x82 + x95)
                + x94
            ),
            x120 * x22 + x131 + x22 * (x120 + x121 * x22) + x27 * x93,
            x132 * x22 + x22 * (x132 + x133 * x60) + x28 * x93,
            x131 + x138 * x22 + x142 * x26 + x22 * (x138 + x139 * x22),
            x142 * x27 + x152 * x22 + x159 + x22 * (x152 + x153 * x22),
            x142 * x28 + x160 * x22 + x22 * (x104 * x133 + x160),
            0,
            0,
            0,
            x159 + x163 * x22 + x166 * x26 + x22 * (x163 + x164 * x22),
            x166 * x27
            + x170
            + x171 * x63
            + x173 * x22
            + x22 * (x173 + x174 * x22)
            - x67 * (x167 * x63 - x172 * x67),
            x166 * x28 + x175 * x22 + x22 * (x133 * x147 + x175),
            0,
            0,
            0,
            0,
            0,
            0,
            x177 * x63
            - x179 * x67
            + x186 * x26
            + x191 * x22
            + x23 * x89
            + x73
            * (
                x181 * x63
                - x187 * x67
                + x71 * (x185 * x63 - x189 * x67 + x66 * (x183 * x63 - x188 * x67))
            ),
            x120 * x23 + x186 * x27 + x194 * x22 + x200,
            x132 * x23 + x186 * x28 + x203 * x22,
            x138 * x23 + x200 + x206 * x22 + x208 * x26,
            x152 * x23 + x208 * x27 + x211 * x22 + x215,
            x160 * x23 + x208 * x28 + x217 * x22,
            0,
            0,
            0,
            x163 * x23 + x215 + x22 * x220 + x221 * x26,
            x173 * x23 + x22 * x225 + x221 * x27 + x222 * x63 - x223 * x67,
            x175 * x23 + x22 * x227 + x221 * x28,
            0,
            0,
            0,
            0,
            0,
            0,
            x22 * x253
            + x229 * x63
            - x231 * x67
            + x24 * x89
            + x242 * x26
            + x73 * (x243 - x245 + x71 * (x249 - x251 + x66 * (x246 - x248))),
            x120 * x24 + x22 * x256 + x242 * x27 + x266,
            x132 * x24 + x22 * x270 + x242 * x28 + x271,
            x138 * x24 + x22 * x274 + x26 * x278 + x266,
            x152 * x24 + x22 * x281 + x27 * x278 + x287,
            x160 * x24 + x22 * x290 + x278 * x28 + x291,
            x22 * x293 + x26 * x294 + x271,
            x22 * x295 + x27 * x294 + x291,
            x22 * x298 + x28 * x294 + x299,
            x163 * x24 + x22 * x302 + x26 * x303 + x287,
            x173 * x24 + x22 * x307 + x27 * x303 + x304 * x63 - x305 * x67,
            x175 * x24 + x22 * x310 + x28 * x303 + x311,
            x22 * x313 + x26 * x314 + x291,
            x22 * x315 + x27 * x314 + x311,
            x22 * x317 + x28 * x314 + x318,
            x22 * x320 + x26 * x321 + x299,
            x22 * x322 + x27 * x321 + x318,
            x22 * x324 + x246 * x323 - x248 * x323 + x28 * x321,
            x176 * x177 - x178 * x179 + x190 * x23 + x191 * x23 + x26 * x325 + x62,
            x193 * x23 + x194 * x23 + x27 * x325 + x326,
            x202 * x23 + x203 * x23 + x28 * x325,
            x205 * x23 + x206 * x23 + x26 * x327 + x326,
            x210 * x23 + x211 * x23 + x27 * x327 + x328,
            x216 * x23 + x217 * x23 + x28 * x327,
            0,
            0,
            0,
            x219 * x23 + x220 * x23 + x26 * x329 + x328,
            x170
            + x176 * x222
            - x178 * x223
            + x224 * x23
            + x225 * x23
            + x27 * x329
            + x73
            * (
                x155
                + x176 * x212
                - x178 * x213
                + x71
                * (
                    x124
                    + x176 * x195
                    - x178 * x196
                    + x66 * (x176 * x183 - x178 * x188 + x96)
                )
            ),
            x226 * x23 + x227 * x23 + x28 * x329,
            0,
            0,
            0,
            0,
            0,
            0,
            x176 * x229 - x178 * x231 + x190 * x24 + x23 * x253 + x26 * x330,
            x193 * x24 + x23 * x256 + x27 * x330 + x332,
            x202 * x24 + x23 * x270 + x28 * x330 + x333,
            x205 * x24 + x23 * x274 + x26 * x336 + x332,
            x210 * x24 + x23 * x281 + x27 * x336 + x340,
            x216 * x24 + x23 * x290 + x28 * x336 + x341,
            x23 * x293 + x26 * x342 + x333,
            x23 * x295 + x27 * x342 + x341,
            x23 * x298 + x28 * x342 + x343,
            x219 * x24 + x23 * x302 + x26 * x348 + x340,
            x176 * x304
            - x178 * x305
            + x224 * x24
            + x23 * x307
            + x27 * x348
            + x73 * (x176 * x282 - x349 + x71 * (x352 - x353 + x66 * (x350 - x351))),
            x226 * x24 + x23 * x310 + x28 * x348 + x354,
            x23 * x313 + x26 * x355 + x341,
            x23 * x315 + x27 * x355 + x354,
            x23 * x317 + x28 * x355 + x356,
            x23 * x320 + x26 * x357 + x343,
            x23 * x322 + x27 * x357 + x356,
            x23 * x324 + x28 * x357 + x323 * x350 - x323 * x351,
            x228 * x229 - x230 * x231 + x24 * x252 + x24 * x253 + x26 * x358 + x62,
            x24 * x255 + x24 * x256 + x27 * x358 + x359,
            x24 * x269 + x24 * x270 + x28 * x358 + x361,
            x24 * x273 + x24 * x274 + x26 * x362 + x359,
            x24 * x280 + x24 * x281 + x27 * x362 + x363,
            x24 * x289 + x24 * x290 + x28 * x362 + x365,
            x26 * x368 + x293 * x369 + x361,
            x27 * x368 + x295 * x369 + x365,
            x28 * x368 + x298 * x369 + x372,
            x24 * x301 + x24 * x302 + x26 * x373 + x363,
            x170 + x228 * x304 - x230 * x305 + x24 * x306 + x24 * x307 + x27 * x373,
            x24 * x309 + x24 * x310 + x28 * x373 + x375,
            x26 * x378 + x313 * x369 + x365,
            x27 * x378 + x315 * x369 + x375,
            x28 * x378 + x317 * x369 + x381,
            x26 * x384 + x320 * x369 + x372,
            x27 * x384 + x322 * x369 + x381,
            x28 * x384
            + x323 * x385
            - x323 * x386
            + x324 * x369
            + x73
            * (
                x296 * x385
                - x296 * x386
                + x71 * (x385 * x66 - x386 * x66 + x66 * (x385 - x386 + x96))
            ),
        ]
    )
    return S


def eri_0222(a, A, b, B, c, C, d, D):
    """Cartesian [sd|dd] 2-electron electron repulsion integral.

    Generated code; DO NOT modify by hand!"""

    x0 = 2 * a + 2 * b
    x1 = x0 ** (-1.0)
    x2 = 2 * c + 2 * d
    x3 = x2 ** (-1.0)
    x4 = numpy.pi**2.5
    x5 = a + b
    x6 = c + d
    x7 = x5 * x6
    x8 = x5 + x6
    x9 = (x7 + numpy.sqrt(x8)) ** (-1.0)
    x10 = x5 ** (-1.0)
    x11 = A[0] - B[0]
    x12 = A[1] - B[1]
    x13 = A[2] - B[2]
    x14 = numpy.exp(-a * b * x10 * (x11**2 + x12**2 + x13**2))
    x15 = x6 ** (-1.0)
    x16 = C[0] - D[0]
    x17 = C[1] - D[1]
    x18 = C[2] - D[2]
    x19 = x18**2
    x20 = numpy.exp(-c * d * x15 * (x16**2 + x17**2 + x19))
    x21 = x8 ** (-1.0)
    x22 = x15 * (c * C[0] + d * D[0])
    x23 = -x10 * (a * A[0] + b * B[0])
    x24 = -x22 - x23
    x25 = x15 * (c * C[1] + d * D[1])
    x26 = -x10 * (a * A[1] + b * B[1])
    x27 = -x25 - x26
    x28 = -x10 * (a * A[2] + b * B[2])
    x29 = -x15 * (c * C[2] + d * D[2]) - x28
    x30 = x21 * x7 * (x24**2 + x27**2 + x29**2)
    x31 = boys(2, x30)
    x32 = -2 * x14 * x20 * x31 * x4 * x9
    x33 = x21 * x5
    x34 = boys(3, x30)
    x35 = 2 * x14 * x20 * x4 * x9
    x36 = x34 * x35
    x37 = x3 * (-x32 - x33 * x36)
    x38 = x22 - C[0]
    x39 = x31 * x35
    x40 = x24 * x33
    x41 = x36 * x40 + x38 * x39
    x42 = boys(4, x30)
    x43 = x35 * x42
    x44 = x36 * x38 + x40 * x43
    x45 = x33 * x44
    x46 = x24 * x45 + x37 + x38 * x41
    x47 = x33 * x46
    x48 = boys(1, x30)
    x49 = x3 * (2 * x14 * x20 * x4 * x48 * x9 - x33 * x39)
    x50 = x35 * x48
    x51 = x38 * x50 + x39 * x40
    x52 = x33 * x41
    x53 = x24 * x52 + x38 * x51 + x49
    x54 = 3 * x3
    x55 = 2 * x3
    x56 = x24 * x47 + x38 * x53 + x55 * (x51 - x52)
    x57 = -2 * x14 * x20 * x34 * x4 * x9
    x58 = x3 * (-x33 * x43 - x57)
    x59 = x35 * boys(5, x30)
    x60 = x38 * x43 + x40 * x59
    x61 = x33 * x60
    x62 = x24 * x61 + x38 * x44 + x58
    x63 = x33 * x62
    x64 = x24 * x63 + x38 * x46 + x55 * (x41 - x45)
    x65 = x38 * x56 + x40 * x64 + x54 * (-x47 + x53)
    x66 = x21 * x6
    x67 = x65 * x66
    x68 = x33 * x53
    x69 = boys(0, x30)
    x70 = x3 * (2 * x14 * x20 * x4 * x69 * x9 - x33 * x50)
    x71 = x35 * x69
    x72 = x38 * x71 + x40 * x50
    x73 = x33 * x51
    x74 = x24 * x73 + x38 * x72 + x70
    x75 = x24 * x68 + x38 * x74 + x55 * (x72 - x73)
    x76 = x38 * x75 + x40 * x56 + x54 * (-x68 + x74)
    x77 = x1 * (-x67 + x76)
    x78 = -x23 - A[0]
    x79 = x64 * x66
    x80 = x62 * x66
    x81 = x0 + x2
    x82 = x81 ** (-1.0)
    x83 = x24 * x66
    x84 = x43 * x78 - x59 * x83
    x85 = x60 * x66
    x86 = -x24 * x85 + x44 * x78 + x82 * x84
    x87 = 2 * x82
    x88 = -x24 * x80 + x46 * x78 + x86 * x87
    x89 = 3 * x82
    x90 = -x24 * x79 + x56 * x78 + x88 * x89
    x91 = 4 * x82
    x92 = -x24 * x67 + x76 * x78 + x90 * x91
    x93 = -2 * x14 * x20 * x4 * x42 * x9
    x94 = x3 * (-x33 * x59 - x93)
    x95 = x35 * boys(6, x30)
    x96 = x38 * x59 + x40 * x95
    x97 = x38 * x60 + x40 * x96 + x94
    x98 = x38 * x62 + x40 * x97 + x55 * (x44 - x61)
    x99 = x38 * x64 + x40 * x98 + x54 * (x46 - x63)
    x100 = x59 * x78 - x83 * x95
    x101 = x100 * x82 + x60 * x78 - x83 * x96
    x102 = x101 * x87 + x62 * x78 - x83 * x97
    x103 = x102 * x89 + x64 * x78 - x83 * x98
    x104 = x56 * x66
    x105 = x1 * (-x104 + x75)
    x106 = x46 * x66
    x107 = x36 * x78 - x43 * x83
    x108 = x44 * x66
    x109 = x107 * x82 - x108 * x24 + x41 * x78
    x110 = -x106 * x24 + x109 * x87 + x53 * x78
    x111 = -x104 * x24 + x110 * x89 + x75 * x78
    x112 = x1 * (-x106 + x53)
    x113 = x1 * (-x108 + x41)
    x114 = x1 * (-x43 * x66 - x57)
    x115 = (
        x105
        + x111 * x78
        - x83 * x90
        + x89
        * (
            x110 * x78
            + x112
            - x83 * x88
            + x87
            * (x109 * x78 + x113 + x82 * (x107 * x78 + x114 - x83 * x84) - x83 * x86)
        )
    )
    x116 = x1 * (x56 - x79)
    x117 = x1 * (x46 - x80)
    x118 = x1 * (x44 - x85)
    x119 = x1 * (-x59 * x66 - x93)
    x120 = x53 * x66
    x121 = -x36 * x83 + x39 * x78
    x122 = x41 * x66
    x123 = x121 * x82 - x122 * x24 + x51 * x78
    x124 = -x120 * x24 + x123 * x87 + x74 * x78
    x125 = x124 * x16
    x126 = x111 * x16 + x16 * (x111 + x125) + x92
    x127 = x1 * (-x120 + x74)
    x128 = x1 * (-x122 + x51)
    x129 = x1 * (-x32 - x36 * x66)
    x130 = (
        -x110 * x83
        + x124 * x78
        + x127
        + x87
        * (-x109 * x83 + x123 * x78 + x128 + x82 * (-x107 * x83 + x121 * x78 + x129))
    )
    x131 = x130 * x16
    x132 = x16 * x74
    x133 = x16 * x75 + x16 * (x132 + x75) + x76
    x134 = x124 * x17
    x135 = x25 - C[1]
    x136 = x27 * x33
    x137 = x135 * x50 + x136 * x39
    x138 = x137 * x33
    x139 = x135 * x71 + x136 * x50
    x140 = x3 * (-x138 + x139)
    x141 = x138 * x24 + x139 * x38
    x142 = x135 * x39 + x136 * x36
    x143 = x142 * x33
    x144 = x137 * x38 + x143 * x24
    x145 = x144 * x33
    x146 = x140 + x141 * x38 + x145 * x24
    x147 = x3 * (x137 - x143)
    x148 = x135 * x36 + x136 * x43
    x149 = x148 * x33
    x150 = x142 * x38 + x149 * x24
    x151 = x150 * x33
    x152 = x144 * x38 + x147 + x151 * x24
    x153 = x152 * x66
    x154 = x148 * x66
    x155 = x142 * x78 - x154 * x24
    x156 = x150 * x66
    x157 = x144 * x78 + x155 * x82 - x156 * x24
    x158 = x146 * x78 - x153 * x24 + x157 * x87
    x159 = x134 + x158
    x160 = x146 * x38 + x152 * x40 + x55 * (x141 - x145)
    x161 = x3 * (x142 - x149)
    x162 = x135 * x43 + x136 * x59
    x163 = x162 * x33
    x164 = x148 * x38 + x163 * x24
    x165 = x164 * x33
    x166 = x150 * x38 + x161 + x165 * x24
    x167 = x152 * x38 + x166 * x40 + x55 * (x144 - x151)
    x168 = x167 * x66
    x169 = x166 * x66
    x170 = x162 * x66
    x171 = x148 * x78 - x170 * x24
    x172 = x164 * x66
    x173 = x150 * x78 + x171 * x82 - x172 * x24
    x174 = x152 * x78 - x169 * x24 + x173 * x87
    x175 = x160 * x78 - x168 * x24 + x174 * x89
    x176 = x111 * x17 + x159 * x16 + x175
    x177 = x17 * x74
    x178 = x146 + x177
    x179 = x16 * x178 + x160 + x17 * x75
    x180 = x130 * x17
    x181 = x1 * (x146 - x153)
    x182 = x1 * (x144 - x156)
    x183 = x1 * (x142 - x154)
    x184 = (
        x158 * x78
        - x174 * x83
        + x181
        + x87 * (x157 * x78 - x173 * x83 + x182 + x82 * (x155 * x78 - x171 * x83 + x183))
    )
    x185 = x180 + x184
    x186 = x1 * (x160 - x168)
    x187 = x1 * (x152 - x169)
    x188 = x3 * (x148 - x163)
    x189 = x135 * x59 + x136 * x95
    x190 = x162 * x38 + x189 * x40
    x191 = x164 * x38 + x188 + x190 * x40
    x192 = x162 * x78 - x189 * x83
    x193 = x164 * x78 - x190 * x83 + x192 * x82
    x194 = x166 * x78 - x191 * x83 + x193 * x87
    x195 = x1 * (x150 - x172)
    x196 = x1 * (x148 - x170)
    x197 = x166 * x38 + x191 * x40 + x55 * (x150 - x165)
    x198 = (
        x175 * x78
        + x186
        - x83 * (x167 * x78 + x194 * x89 - x197 * x83)
        + x89
        * (
            x174 * x78
            + x187
            - x194 * x83
            + x87
            * (x173 * x78 - x193 * x83 + x195 + x82 * (x171 * x78 - x192 * x83 + x196))
        )
    )
    x199 = x111 * x18 + x125 * x18
    x200 = x132 * x18 + x18 * x75
    x201 = x135 * x137 + x143 * x27 + x49
    x202 = x201 * x33
    x203 = x135 * x139 + x138 * x27 + x70
    x204 = x3 * (-x202 + x203)
    x205 = x202 * x24 + x203 * x38
    x206 = x135 * x142 + x149 * x27 + x37
    x207 = x206 * x33
    x208 = x201 * x38 + x207 * x24
    x209 = x204 + x205 * x38 + x208 * x40
    x210 = x3 * (x201 - x207)
    x211 = x135 * x148 + x163 * x27 + x58
    x212 = x211 * x33
    x213 = x206 * x38 + x212 * x24
    x214 = x208 * x38 + x210 + x213 * x40
    x215 = x214 * x66
    x216 = x211 * x66
    x217 = x206 * x78 - x216 * x24
    x218 = x213 * x66
    x219 = x208 * x78 + x217 * x82 - x218 * x24
    x220 = x209 * x78 - x215 * x24 + x219 * x87
    x221 = x158 * x17 + x220
    x222 = x159 * x17 + x221
    x223 = x146 * x17 + x209
    x224 = x17 * x178 + x223
    x225 = x1 * (x209 - x215)
    x226 = x1 * (x208 - x218)
    x227 = x1 * (x206 - x216)
    x228 = x135 * x162 + x136 * x189 + x94
    x229 = x211 * x78 - x228 * x83
    x230 = x211 * x38 + x228 * x40
    x231 = x213 * x78 + x229 * x82 - x230 * x83
    x232 = x3 * (x206 - x212)
    x233 = x213 * x38 + x230 * x40 + x232
    x234 = (
        x220 * x78
        + x225
        - x83 * (x214 * x78 + x231 * x87 - x233 * x83)
        + x87 * (x219 * x78 + x226 - x231 * x83 + x82 * (x217 * x78 + x227 - x229 * x83))
    )
    x235 = x17 * x184 + x234
    x236 = x158 * x18
    x237 = x134 * x18 + x236
    x238 = x146 * x18
    x239 = x177 * x18 + x238
    x240 = x18 * x184
    x241 = x124 * x19
    x242 = x11 * x19
    x243 = x142 * x66
    x244 = x137 * x78 - x24 * x243
    x245 = x144 * x66
    x246 = x141 * x78 - x24 * x245 + x244 * x82
    x247 = x16 * x246
    x248 = x158 * x16 + x16 * (x158 + x247) + x175
    x249 = x141 * x16
    x250 = x146 * x16 + x16 * (x146 + x249) + x160
    x251 = x1 * (x141 - x245)
    x252 = x1 * (x137 - x243)
    x253 = -x157 * x83 + x246 * x78 + x251 + x82 * (-x155 * x83 + x244 * x78 + x252)
    x254 = x16 * x253
    x255 = x17 * x246
    x256 = x206 * x66
    x257 = x201 * x78 - x24 * x256
    x258 = x208 * x66
    x259 = x205 * x78 - x24 * x258 + x257 * x82
    x260 = x255 + x259
    x261 = x16 * x260 + x221
    x262 = x141 * x17
    x263 = x205 + x262
    x264 = x16 * x263 + x223
    x265 = x17 * x253
    x266 = x1 * (x205 - x258)
    x267 = x1 * (x201 - x256)
    x268 = -x219 * x83 + x259 * x78 + x266 + x82 * (-x217 * x83 + x257 * x78 + x267)
    x269 = x265 + x268
    x270 = x18 * x247 + x236
    x271 = x18 * x249 + x238
    x272 = x135 * x201 + 2 * x147 + x207 * x27
    x273 = x135 * x206 + 2 * x161 + x212 * x27
    x274 = x273 * x66
    x275 = -x24 * x274 + x272 * x78
    x276 = x135 * x203 + 2 * x140 + x202 * x27
    x277 = x272 * x40 + x276 * x38
    x278 = x272 * x38 + x273 * x40
    x279 = x278 * x66
    x280 = -x24 * x279 + x275 * x82 + x277 * x78
    x281 = x17 * x259 + x280
    x282 = x17 * x260 + x281
    x283 = x17 * x205 + x277
    x284 = x17 * x263 + x283
    x285 = x1 * (x277 - x279)
    x286 = x1 * (x272 - x274)
    x287 = x135 * x211 + x136 * x228 + 2 * x188
    x288 = x273 * x78 - x287 * x83
    x289 = x273 * x38 + x287 * x40
    x290 = (
        x17 * x268
        + x280 * x78
        + x285
        + x82 * (x275 * x78 + x286 - x288 * x83)
        - x83 * (x278 * x78 + x288 * x82 - x289 * x83)
    )
    x291 = x18 * x259
    x292 = x18 * x255 + x291
    x293 = x18 * x205
    x294 = x18 * x262 + x293
    x295 = x18 * x268
    x296 = x19 * x246
    x297 = x201 * x66
    x298 = x203 * x78 - x24 * x297
    x299 = x16 * x298
    x300 = x16 * x259 + x16 * (x259 + x299) + x220
    x301 = x16 * x203
    x302 = x16 * x205 + x16 * (x205 + x301) + x209
    x303 = x1 * (x203 - x297)
    x304 = -x257 * x83 + x298 * x78 + x303
    x305 = x16 * x304
    x306 = x17 * x298
    x307 = x272 * x66
    x308 = -x24 * x307 + x276 * x78
    x309 = x306 + x308
    x310 = x16 * x309 + x281
    x311 = x17 * x203
    x312 = x276 + x311
    x313 = x16 * x312 + x283
    x314 = x17 * x304
    x315 = x1 * (x276 - x307)
    x316 = -x275 * x83 + x308 * x78 + x315
    x317 = x314 + x316
    x318 = x18 * x299 + x291
    x319 = x18 * x301 + x293
    x320 = x135 * x272 + x136 * x273 + 3 * x210
    x321 = x320 * x66
    x322 = x135 * x276 + x136 * x272 + 3 * x204
    x323 = x1 * (-x321 + x322)
    x324 = -x24 * x321 + x322 * x78
    x325 = x135 * x273 + x136 * x287 + 3 * x232
    x326 = x17 * x308 + x17 * x309 + x324
    x327 = x17 * x276 + x17 * x312 + x322
    x328 = x18 * x306 + x18 * x308
    x329 = x18 * x276 + x18 * x311
    x330 = x19 * x298
    x331 = -x26 - A[1]
    x332 = -x27 * x67 + x331 * x76
    x333 = x27 * x66
    x334 = x331 * x65 - x333 * x99
    x335 = -x104 * x27 + x331 * x75
    x336 = -x27 * x79 + x331 * x56
    x337 = -x106 * x27 + x331 * x53
    x338 = -x27 * x80 + x331 * x46
    x339 = x331 * x36 - x333 * x43
    x340 = x331 * x43 - x333 * x59
    x341 = -x108 * x27 + x331 * x41
    x342 = -x27 * x85 + x331 * x44
    x343 = (
        x335 * x78
        - x336 * x83
        + x89
        * (
            x337 * x78
            - x338 * x83
            + x87 * (x341 * x78 - x342 * x83 + x82 * (x339 * x78 - x340 * x83))
        )
    )
    x344 = x331 * x64 - x333 * x98
    x345 = x331 * x62 - x333 * x97
    x346 = x331 * x59 - x333 * x95
    x347 = x331 * x60 - x333 * x96
    x348 = -x120 * x27 + x331 * x74
    x349 = x331 * x39 - x333 * x36
    x350 = -x122 * x27 + x331 * x51
    x351 = (
        -x337 * x83
        + x348 * x78
        + x87 * (-x341 * x83 + x350 * x78 + x82 * (-x339 * x83 + x349 * x78))
    )
    x352 = x16 * x351
    x353 = x16 * x348
    x354 = x16 * x335 + x16 * (x335 + x353) + x332
    x355 = x12 * x133 + x354
    x356 = x17 * x348
    x357 = x146 * x331 - x153 * x27 + x337 * x82
    x358 = x356 + x357
    x359 = x160 * x331 - x168 * x27 + x336 * x82
    x360 = x16 * x358 + x17 * x335 + x359
    x361 = x12 * x179 + x360
    x362 = x17 * x351
    x363 = x152 * x331 - x169 * x27 + x338 * x82
    x364 = x142 * x331 - x154 * x27 + x339 * x82
    x365 = x148 * x331 - x170 * x27 + x340 * x82
    x366 = x144 * x331 - x156 * x27 + x341 * x82
    x367 = x150 * x331 - x172 * x27 + x342 * x82
    x368 = (
        x357 * x78
        - x363 * x83
        + x87 * (x366 * x78 - x367 * x83 + x82 * (x364 * x78 - x365 * x83))
    )
    x369 = x362 + x368
    x370 = x166 * x331 - x191 * x333 + x345 * x82
    x371 = x162 * x331 - x189 * x333 + x346 * x82
    x372 = x164 * x331 - x190 * x333 + x347 * x82
    x373 = x167 * x331 - x197 * x333 + x344 * x82
    x374 = (
        x359 * x78
        - x373 * x83
        + x89
        * (
            x363 * x78
            - x370 * x83
            + x87 * (x367 * x78 - x372 * x83 + x82 * (x365 * x78 - x371 * x83))
        )
    )
    x375 = x18 * x335 + x18 * x353
    x376 = x12 * x200 + x375
    x377 = x209 * x331 - x215 * x27 + x363 * x87
    x378 = x17 * x357 + x377
    x379 = x17 * x358 + x378
    x380 = x12 * x224 + x379
    x381 = x206 * x331 - x216 * x27 + x365 * x87
    x382 = x211 * x331 - x228 * x333 + x371 * x87
    x383 = x208 * x331 - x218 * x27 + x367 * x87
    x384 = x213 * x331 - x230 * x333 + x372 * x87
    x385 = x214 * x331 - x233 * x333 + x370 * x87
    x386 = (
        x377 * x78
        - x385 * x83
        + x87 * (x383 * x78 - x384 * x83 + x82 * (x381 * x78 - x382 * x83))
    )
    x387 = x17 * x368 + x386
    x388 = x18 * x357
    x389 = x18 * x356 + x388
    x390 = x12 * x239 + x389
    x391 = x18 * x368
    x392 = x12 * x19
    x393 = x19 * x348
    x394 = x392 * x74 + x393
    x395 = x141 * x331 - x245 * x27 + x350 * x82
    x396 = x16 * x395
    x397 = x16 * x357 + x16 * (x357 + x396) + x359
    x398 = x12 * x250 + x397
    x399 = x137 * x331 - x243 * x27 + x349 * x82
    x400 = -x366 * x83 + x395 * x78 + x82 * (-x364 * x83 + x399 * x78)
    x401 = x16 * x400
    x402 = x17 * x395
    x403 = x205 * x331 - x258 * x27 + x366 * x87
    x404 = x402 + x403
    x405 = x16 * x404 + x378
    x406 = x12 * x264 + x405
    x407 = x17 * x400
    x408 = x201 * x331 - x256 * x27 + x364 * x87
    x409 = -x383 * x83 + x403 * x78 + x82 * (-x381 * x83 + x408 * x78)
    x410 = x407 + x409
    x411 = x18 * x396 + x388
    x412 = x12 * x271 + x411
    x413 = -x27 * x279 + x277 * x331 + x383 * x89
    x414 = x17 * x403 + x413
    x415 = x17 * x404 + x414
    x416 = x12 * x284 + x415
    x417 = -x27 * x274 + x272 * x331 + x381 * x89
    x418 = x273 * x331 - x287 * x333 + x382 * x89
    x419 = x278 * x331 - x289 * x333 + x384 * x89
    x420 = x17 * x409 + x413 * x78 - x419 * x83 + x82 * (x417 * x78 - x418 * x83)
    x421 = x18 * x403
    x422 = x18 * x402 + x421
    x423 = x12 * x294 + x422
    x424 = x18 * x409
    x425 = x19 * x395
    x426 = x141 * x392 + x425
    x427 = x203 * x331 - x27 * x297 + x399 * x87
    x428 = x16 * x427
    x429 = x16 * x403 + x16 * (x403 + x428) + x377
    x430 = x12 * x302 + x429
    x431 = -x408 * x83 + x427 * x78
    x432 = x16 * x431
    x433 = x17 * x427
    x434 = -x27 * x307 + x276 * x331 + x408 * x89
    x435 = x433 + x434
    x436 = x16 * x435 + x414
    x437 = x12 * x313 + x436
    x438 = x17 * x431
    x439 = -x417 * x83 + x434 * x78
    x440 = x438 + x439
    x441 = x18 * x428 + x421
    x442 = x12 * x319 + x441
    x443 = -x27 * x321 + x322 * x331 + x417 * x91
    x444 = x320 * x331 - x325 * x333 + x418 * x91
    x445 = x17 * x434 + x17 * x435 + x443
    x446 = x12 * x327 + x445
    x447 = x18 * x433 + x18 * x434
    x448 = x12 * x329 + x447
    x449 = x19 * x427
    x450 = x203 * x392 + x449
    x451 = -x28 - A[2]
    x452 = -x29 * x67 + x451 * x76
    x453 = x29 * x66
    x454 = x451 * x65 - x453 * x99
    x455 = -x104 * x29 + x451 * x75
    x456 = -x29 * x79 + x451 * x56
    x457 = -x106 * x29 + x451 * x53
    x458 = x457 * x78
    x459 = -x29 * x80 + x451 * x46
    x460 = x459 * x83
    x461 = x36 * x451 - x43 * x453
    x462 = x461 * x78
    x463 = x43 * x451 - x453 * x59
    x464 = x463 * x83
    x465 = -x108 * x29 + x41 * x451
    x466 = x465 * x78
    x467 = -x29 * x85 + x44 * x451
    x468 = x467 * x83
    x469 = (
        x455 * x78
        - x456 * x83
        + x89 * (x458 - x460 + x87 * (x466 - x468 + x82 * (x462 - x464)))
    )
    x470 = x456 * x78
    x471 = x451 * x64 - x453 * x98
    x472 = x471 * x83
    x473 = x459 * x78
    x474 = x451 * x62 - x453 * x97
    x475 = x474 * x83
    x476 = x463 * x78
    x477 = x451 * x59 - x453 * x95
    x478 = x477 * x83
    x479 = x467 * x78
    x480 = x451 * x60 - x453 * x96
    x481 = x480 * x83
    x482 = -x120 * x29 + x451 * x74
    x483 = -x36 * x453 + x39 * x451
    x484 = x483 * x78
    x485 = x461 * x83
    x486 = -x122 * x29 + x451 * x51
    x487 = x486 * x78
    x488 = x465 * x83
    x489 = -x457 * x83 + x482 * x78 + x87 * (x487 - x488 + x82 * (x484 - x485))
    x490 = x16 * x455 + x16 * (x16 * x482 + x455) + x452
    x491 = x13 * x133 + x490
    x492 = x146 * x451 - x153 * x29
    x493 = x17 * x482 + x492
    x494 = x160 * x451 - x168 * x29
    x495 = x16 * x493 + x17 * x455 + x494
    x496 = x13 * x179 + x495
    x497 = x152 * x451 - x169 * x29
    x498 = x144 * x451 - x156 * x29
    x499 = x498 * x78
    x500 = x142 * x451 - x154 * x29
    x501 = x500 * x78
    x502 = x148 * x451 - x170 * x29
    x503 = x502 * x83
    x504 = x150 * x451 - x172 * x29
    x505 = x504 * x83
    x506 = x492 * x78 - x497 * x83 + x87 * (x499 - x505 + x82 * (x501 - x503))
    x507 = x17 * x489 + x506
    x508 = x497 * x78
    x509 = x166 * x451 - x191 * x453
    x510 = x509 * x83
    x511 = x504 * x78
    x512 = x502 * x78
    x513 = x162 * x451 - x189 * x453
    x514 = x513 * x83
    x515 = x164 * x451 - x190 * x453
    x516 = x515 * x83
    x517 = x167 * x451 - x197 * x453
    x518 = (
        x494 * x78
        - x517 * x83
        + x89 * (x508 - x510 + x87 * (x511 - x516 + x82 * (x512 - x514)))
    )
    x519 = x457 * x82
    x520 = x18 * x482 + x519
    x521 = x456 * x82
    x522 = x16 * x520 + x18 * x455 + x521
    x523 = x13 * x200 + x522
    x524 = (
        x458 * x82
        - x460 * x82
        + x87 * (x466 * x82 - x468 * x82 + x82 * (x462 * x82 - x464 * x82))
    )
    x525 = x18 * x489 + x524
    x526 = (
        x470 * x82
        - x472 * x82
        + x89
        * (
            x473 * x82
            - x475 * x82
            + x87 * (x479 * x82 - x481 * x82 + x82 * (x476 * x82 - x478 * x82))
        )
    )
    x527 = x209 * x451 - x215 * x29
    x528 = x17 * x492 + x527
    x529 = x17 * x493 + x528
    x530 = x13 * x224 + x529
    x531 = x208 * x451 - x218 * x29
    x532 = x531 * x78
    x533 = x206 * x451 - x216 * x29
    x534 = x533 * x78
    x535 = x211 * x451 - x228 * x453
    x536 = x535 * x83
    x537 = x213 * x451 - x230 * x453
    x538 = x537 * x83
    x539 = x214 * x451 - x233 * x453
    x540 = x527 * x78 - x539 * x83 + x87 * (x532 - x538 + x82 * (x534 - x536))
    x541 = x17 * x506 + x540
    x542 = x497 * x82
    x543 = x18 * x492 + x542
    x544 = x17 * x520 + x543
    x545 = x13 * x239 + x544
    x546 = (
        x508 * x82
        - x510 * x82
        + x87 * (x511 * x82 - x516 * x82 + x82 * (x512 * x82 - x514 * x82))
    )
    x547 = x18 * x506 + x546
    x548 = x13 * x19
    x549 = 2 / x81**2
    x550 = x459 * x549
    x551 = x18 * x519 + x550
    x552 = x18 * x520 + x551
    x553 = x548 * x74 + x552
    x554 = (
        x473 * x549
        - x475 * x549
        + x87 * (x479 * x549 - x481 * x549 + x82 * (x476 * x549 - x478 * x549))
    )
    x555 = x18 * x524 + x554
    x556 = x141 * x451 - x245 * x29
    x557 = x16 * x492 + x16 * (x16 * x556 + x492) + x494
    x558 = x13 * x250 + x557
    x559 = x137 * x451 - x243 * x29
    x560 = x559 * x78
    x561 = x500 * x83
    x562 = -x498 * x83 + x556 * x78 + x82 * (x560 - x561)
    x563 = x205 * x451 - x258 * x29
    x564 = x17 * x556 + x563
    x565 = x16 * x564 + x528
    x566 = x13 * x264 + x565
    x567 = x201 * x451 - x256 * x29
    x568 = x567 * x78
    x569 = x533 * x83
    x570 = -x531 * x83 + x563 * x78 + x82 * (x568 - x569)
    x571 = x17 * x562 + x570
    x572 = x498 * x82
    x573 = x18 * x556 + x572
    x574 = x16 * x573 + x543
    x575 = x13 * x271 + x574
    x576 = x499 * x82 - x505 * x82 + x82 * (x501 * x82 - x503 * x82)
    x577 = x18 * x562 + x576
    x578 = x277 * x451 - x279 * x29
    x579 = x17 * x563 + x578
    x580 = x17 * x564 + x579
    x581 = x13 * x284 + x580
    x582 = x272 * x451 - x274 * x29
    x583 = x582 * x78
    x584 = x273 * x451 - x287 * x453
    x585 = x584 * x83
    x586 = x278 * x451 - x289 * x453
    x587 = x17 * x570 + x578 * x78 - x586 * x83 + x82 * (x583 - x585)
    x588 = x531 * x82
    x589 = x18 * x563 + x588
    x590 = x17 * x573 + x589
    x591 = x13 * x294 + x590
    x592 = x532 * x82 - x538 * x82 + x82 * (x534 * x82 - x536 * x82)
    x593 = x18 * x570 + x592
    x594 = x504 * x549
    x595 = x18 * x572 + x594
    x596 = x18 * x573 + x595
    x597 = x141 * x548 + x596
    x598 = x511 * x549 - x516 * x549 + x82 * (x512 * x549 - x514 * x549)
    x599 = x18 * x576 + x598
    x600 = x486 * x82
    x601 = x16 * x519 + x16 * (x16 * x600 + x519) + x521
    x602 = x487 * x82 - x488 * x82 + x82 * (x484 * x82 - x485 * x82)
    x603 = x17 * x600 + x572
    x604 = x16 * x603 + x17 * x519 + x542
    x605 = x17 * x602 + x576
    x606 = x465 * x549
    x607 = x18 * x600 + x606
    x608 = x16 * x607 + x551
    x609 = x466 * x549 - x468 * x549 + x82 * (x462 * x549 - x464 * x549)
    x610 = x18 * x602 + x609
    x611 = x17 * x572 + x588
    x612 = x17 * x603 + x611
    x613 = x17 * x576 + x592
    x614 = x17 * x607 + x595
    x615 = 6 / x81**3
    x616 = x18 * x606 + x467 * x615
    x617 = x18 * x607 + x616
    x618 = x18 * x609 + x479 * x615 - x481 * x615 + x82 * (x476 * x615 - x478 * x615)
    x619 = x203 * x451 - x29 * x297
    x620 = x16 * x563 + x16 * (x16 * x619 + x563) + x527
    x621 = x13 * x302 + x620
    x622 = -x567 * x83 + x619 * x78
    x623 = x276 * x451 - x29 * x307
    x624 = x17 * x619 + x623
    x625 = x16 * x624 + x579
    x626 = x13 * x313 + x625
    x627 = -x582 * x83 + x623 * x78
    x628 = x17 * x622 + x627
    x629 = x567 * x82
    x630 = x18 * x619 + x629
    x631 = x16 * x630 + x589
    x632 = x13 * x319 + x631
    x633 = x568 * x82 - x569 * x82
    x634 = x18 * x622 + x633
    x635 = -x29 * x321 + x322 * x451
    x636 = x320 * x451 - x325 * x453
    x637 = x17 * x623 + x17 * x624 + x635
    x638 = x13 * x327 + x637
    x639 = x582 * x82
    x640 = x17 * x630 + x18 * x623 + x639
    x641 = x13 * x329 + x640
    x642 = x583 * x82 - x585 * x82
    x643 = x533 * x549
    x644 = x18 * x629 + x643
    x645 = x18 * x630 + x644
    x646 = x203 * x548 + x645
    x647 = x534 * x549 - x536 * x549
    x648 = x18 * x633 + x647
    x649 = x559 * x82
    x650 = x16 * x572 + x16 * (x16 * x649 + x572) + x542
    x651 = x560 * x82 - x561 * x82
    x652 = x17 * x649 + x629
    x653 = x16 * x652 + x611
    x654 = x17 * x651 + x633
    x655 = x500 * x549
    x656 = x18 * x649 + x655
    x657 = x16 * x656 + x595
    x658 = x501 * x549 - x503 * x549
    x659 = x18 * x651 + x658
    x660 = x17 * x629 + x17 * x652 + x639
    x661 = x17 * x656 + x644
    x662 = x18 * x655 + x502 * x615
    x663 = x18 * x656 + x662
    x664 = x18 * x658 + x512 * x615 - x514 * x615
    x665 = x483 * x549
    x666 = x16 * x606 + x16 * (x16 * x665 + x606) + x550
    x667 = x484 * x549 - x485 * x549
    x668 = x17 * x665 + x655
    x669 = x16 * x668 + x17 * x606 + x594
    x670 = x17 * x667 + x658
    x671 = x461 * x615
    x672 = x18 * x665 + x671
    x673 = x16 * x672 + x616
    x674 = x462 * x615 - x464 * x615
    x675 = x18 * x667 + x674
    x676 = x17 * x655 + x17 * x668 + x643
    x677 = x17 * x672 + x662
    x678 = 24 / x81**4
    x679 = x18 * x671 + x18 * x672 + x463 * x678
    x680 = x105 + x331 * x335 - x333 * x336
    x681 = x127 + x331 * x348 - x333 * x337
    x682 = x16 * x681
    x683 = x17 * x681
    x684 = x181 + x331 * x357 - x333 * x363 + x82 * (x112 + x331 * x337 - x333 * x338)
    x685 = x683 + x684
    x686 = x186 + x331 * x359 - x333 * x373 + x82 * (x116 + x331 * x336 - x333 * x344)
    x687 = (
        x225
        + x331 * x377
        - x333 * x385
        + x87
        * (x187 + x331 * x363 - x333 * x370 + x82 * (x117 + x331 * x338 - x333 * x345))
    )
    x688 = x17 * x684 + x687
    x689 = x18 * x684
    x690 = x251 + x331 * x395 - x333 * x366 + x82 * (x128 + x331 * x350 - x333 * x341)
    x691 = x16 * x690
    x692 = x17 * x690
    x693 = (
        x266
        + x331 * x403
        - x333 * x383
        + x87
        * (x182 + x331 * x366 - x333 * x367 + x82 * (x113 + x331 * x341 - x333 * x342))
    )
    x694 = x692 + x693
    x695 = (
        x17 * x693
        + x285
        + x331 * x413
        - x333 * x419
        + x89
        * (
            x226
            + x331 * x383
            - x333 * x384
            + x87
            * (
                x195
                + x331 * x367
                - x333 * x372
                + x82 * (x118 + x331 * x342 - x333 * x347)
            )
        )
    )
    x696 = x18 * x693
    x697 = (
        x303
        + x331 * x427
        - x333 * x408
        + x87
        * (x252 + x331 * x399 - x333 * x364 + x82 * (x129 + x331 * x349 - x333 * x339))
    )
    x698 = x16 * x697
    x699 = x17 * x697
    x700 = (
        x315
        + x331 * x434
        - x333 * x417
        + x89
        * (
            x267
            + x331 * x408
            - x333 * x381
            + x87
            * (
                x183
                + x331 * x364
                - x333 * x365
                + x82 * (x114 + x331 * x339 - x333 * x340)
            )
        )
    )
    x701 = x699 + x700
    x702 = x331 * x455 - x333 * x456
    x703 = x331 * x482 - x333 * x457
    x704 = x333 * x459
    x705 = x331 * x492 - x333 * x497 + x82 * (x331 * x457 - x704)
    x706 = x17 * x703 + x705
    x707 = x333 * x471
    x708 = x331 * x494 - x333 * x517 + x82 * (x331 * x456 - x707)
    x709 = x331 * x519 - x704 * x82
    x710 = x18 * x703 + x709
    x711 = x331 * x521 - x707 * x82
    x712 = x331 * x459
    x713 = x333 * x474
    x714 = x333 * x509
    x715 = x331 * x527 - x333 * x539 + x87 * (x331 * x497 - x714 + x82 * (x712 - x713))
    x716 = x17 * x705 + x715
    x717 = x331 * x542 - x714 * x82 + x82 * (x712 * x82 - x713 * x82)
    x718 = x18 * x705 + x717
    x719 = x549 * x712 - x549 * x713
    x720 = x18 * x709 + x719
    x721 = x331 * x486
    x722 = x333 * x465
    x723 = x331 * x556 - x333 * x498 + x82 * (x721 - x722)
    x724 = x331 * x465
    x725 = x333 * x467
    x726 = x333 * x504
    x727 = x331 * x563 - x333 * x531 + x87 * (x331 * x498 - x726 + x82 * (x724 - x725))
    x728 = x17 * x723 + x727
    x729 = x331 * x572 - x726 * x82 + x82 * (x724 * x82 - x725 * x82)
    x730 = x18 * x723 + x729
    x731 = x333 * x537
    x732 = x331 * x504
    x733 = x331 * x467
    x734 = x333 * x480
    x735 = x333 * x515
    x736 = (
        x17 * x727
        + x331 * x578
        - x333 * x586
        + x89 * (x331 * x531 - x731 + x87 * (x732 - x735 + x82 * (x733 - x734)))
    )
    x737 = (
        x331 * x588
        - x731 * x82
        + x87 * (x732 * x82 - x735 * x82 + x82 * (x733 * x82 - x734 * x82))
    )
    x738 = x18 * x727 + x737
    x739 = x549 * x732 - x549 * x735 + x82 * (x549 * x733 - x549 * x734)
    x740 = x18 * x729 + x739
    x741 = x721 * x82 - x722 * x82
    x742 = x17 * x741 + x729
    x743 = x549 * x724 - x549 * x725
    x744 = x18 * x741 + x743
    x745 = x17 * x729 + x737
    x746 = x18 * x743 + x615 * x733 - x615 * x734
    x747 = x331 * x483
    x748 = x333 * x461
    x749 = x331 * x559
    x750 = x333 * x500
    x751 = x331 * x619 - x333 * x567 + x87 * (x749 - x750 + x82 * (x747 - x748))
    x752 = x333 * x533
    x753 = x331 * x461
    x754 = x333 * x463
    x755 = x331 * x500
    x756 = x333 * x502
    x757 = (
        x331 * x623
        - x333 * x582
        + x89 * (x331 * x567 - x752 + x87 * (x755 - x756 + x82 * (x753 - x754)))
    )
    x758 = x17 * x751 + x757
    x759 = (
        x331 * x629
        - x752 * x82
        + x87 * (x755 * x82 - x756 * x82 + x82 * (x753 * x82 - x754 * x82))
    )
    x760 = x18 * x751 + x759
    x761 = x333 * x584
    x762 = x331 * x533
    x763 = x333 * x535
    x764 = x331 * x463
    x765 = x333 * x477
    x766 = x331 * x502
    x767 = x333 * x513
    x768 = (
        x331 * x639
        - x761 * x82
        + x89
        * (
            x762 * x82
            - x763 * x82
            + x87 * (x766 * x82 - x767 * x82 + x82 * (x764 * x82 - x765 * x82))
        )
    )
    x769 = (
        x549 * x762
        - x549 * x763
        + x87 * (x549 * x766 - x549 * x767 + x82 * (x549 * x764 - x549 * x765))
    )
    x770 = x18 * x759 + x769
    x771 = x749 * x82 - x750 * x82 + x82 * (x747 * x82 - x748 * x82)
    x772 = x17 * x771 + x759
    x773 = x549 * x755 - x549 * x756 + x82 * (x549 * x753 - x549 * x754)
    x774 = x18 * x771 + x773
    x775 = x18 * x773 + x615 * x766 - x615 * x767 + x82 * (x615 * x764 - x615 * x765)
    x776 = x549 * x747 - x549 * x748
    x777 = x17 * x776 + x773
    x778 = x615 * x753 - x615 * x754
    x779 = x18 * x776 + x778
    x780 = x105 + x451 * x455 - x453 * x456
    x781 = x127 + x451 * x482 - x453 * x457
    x782 = x181 + x451 * x492 - x453 * x497
    x783 = x17 * x781 + x782
    x784 = x186 + x451 * x494 - x453 * x517
    x785 = x453 * x459
    x786 = x451 * x519 - x785 * x82 + x82 * (x112 + x451 * x457 - x785)
    x787 = x18 * x781 + x786
    x788 = x453 * x471
    x789 = x451 * x521 - x788 * x82 + x82 * (x116 + x451 * x456 - x788)
    x790 = x225 + x451 * x527 - x453 * x539
    x791 = x17 * x782 + x790
    x792 = x453 * x509
    x793 = x451 * x542 - x792 * x82 + x82 * (x187 + x451 * x497 - x792)
    x794 = x18 * x782 + x793
    x795 = x451 * x459
    x796 = x453 * x474
    x797 = (
        x549 * x795
        - x549 * x796
        + x87 * (x795 * x82 - x796 * x82 + x82 * (x117 + x795 - x796))
    )
    x798 = x18 * x786 + x797
    x799 = x251 + x451 * x556 - x453 * x498
    x800 = x266 + x451 * x563 - x453 * x531
    x801 = x17 * x799 + x800
    x802 = x453 * x504
    x803 = x451 * x572 - x802 * x82 + x82 * (x182 + x451 * x498 - x802)
    x804 = x18 * x799 + x803
    x805 = x17 * x800 + x285 + x451 * x578 - x453 * x586
    x806 = x453 * x537
    x807 = x451 * x588 - x806 * x82 + x82 * (x226 + x451 * x531 - x806)
    x808 = x18 * x800 + x807
    x809 = x451 * x504
    x810 = x453 * x515
    x811 = (
        x549 * x809
        - x549 * x810
        + x87 * (x809 * x82 - x810 * x82 + x82 * (x195 + x809 - x810))
    )
    x812 = x18 * x803 + x811
    x813 = x451 * x486
    x814 = x453 * x465
    x815 = x813 * x82 - x814 * x82 + x82 * (x128 + x813 - x814)
    x816 = 2 * x13
    x817 = x17 * x815 + x803
    x818 = x451 * x465
    x819 = x453 * x467
    x820 = (
        x549 * x818
        - x549 * x819
        + x87 * (x818 * x82 - x819 * x82 + x82 * (x113 + x818 - x819))
    )
    x821 = x18 * x815 + x820
    x822 = x17 * x803 + x807
    x823 = x451 * x467
    x824 = x453 * x480
    x825 = (
        x18 * x820
        + x615 * x823
        - x615 * x824
        + x89
        * (
            x549 * x823
            - x549 * x824
            + x87 * (x82 * x823 - x82 * x824 + x82 * (x118 + x823 - x824))
        )
    )
    x826 = x303 + x451 * x619 - x453 * x567
    x827 = x315 + x451 * x623 - x453 * x582
    x828 = x17 * x826 + x827
    x829 = x453 * x533
    x830 = x451 * x629 - x82 * x829 + x82 * (x267 + x451 * x567 - x829)
    x831 = x18 * x826 + x830
    x832 = x453 * x584
    x833 = x451 * x639 - x82 * x832 + x82 * (x286 + x451 * x582 - x832)
    x834 = x451 * x533
    x835 = x453 * x535
    x836 = (
        x549 * x834
        - x549 * x835
        + x87 * (x82 * x834 - x82 * x835 + x82 * (x227 + x834 - x835))
    )
    x837 = x18 * x830 + x836
    x838 = x451 * x559
    x839 = x453 * x500
    x840 = x82 * x838 - x82 * x839 + x82 * (x252 + x838 - x839)
    x841 = x17 * x840 + x830
    x842 = x451 * x500
    x843 = x453 * x502
    x844 = (
        x549 * x842
        - x549 * x843
        + x87 * (x82 * x842 - x82 * x843 + x82 * (x183 + x842 - x843))
    )
    x845 = x18 * x840 + x844
    x846 = x451 * x502
    x847 = x453 * x513
    x848 = (
        x18 * x844
        + x615 * x846
        - x615 * x847
        + x89
        * (
            x549 * x846
            - x549 * x847
            + x87 * (x82 * x846 - x82 * x847 + x82 * (x196 + x846 - x847))
        )
    )
    x849 = x451 * x483
    x850 = x453 * x461
    x851 = (
        x549 * x849
        - x549 * x850
        + x87 * (x82 * x849 - x82 * x850 + x82 * (x129 + x849 - x850))
    )
    x852 = x17 * x851 + x844
    x853 = x451 * x461
    x854 = x453 * x463
    x855 = (
        x615 * x853
        - x615 * x854
        + x89
        * (
            x549 * x853
            - x549 * x854
            + x87 * (x82 * x853 - x82 * x854 + x82 * (x114 + x853 - x854))
        )
    )
    x856 = x18 * x851 + x855
    x857 = x451 * x463
    x858 = x453 * x477

    # 216 item(s)
    S = numpy.array(
        [
            x11 * x126
            + x11 * (x11 * x133 + x126)
            + x115 * x16
            + x16 * (x115 + x131)
            + x77
            + x78 * x92
            - x83 * (x103 * x91 + x65 * x78 - x83 * x99)
            + x91
            * (
                -x103 * x83
                + x116
                + x78 * x90
                + x89
                * (
                    -x102 * x83
                    + x117
                    + x78 * x88
                    + x87
                    * (
                        -x101 * x83
                        + x118
                        + x78 * x86
                        + x82 * (-x100 * x83 + x119 + x78 * x84)
                    )
                )
            ),
            x11 * x176 + x11 * (x11 * x179 + x176) + x115 * x17 + x16 * x185 + x198,
            x11 * x199 + x11 * (x11 * x200 + x199) + x115 * x18 + x131 * x18,
            x11 * x222 + x11 * (x11 * x224 + x222) + x17 * x185 + x235,
            x11 * x237 + x11 * (x11 * x239 + x237) + x18 * x180 + x240,
            x11 * x241 + x11 * (x241 + x242 * x74) + x130 * x19,
            x11 * x248
            + x11 * (x11 * x250 + x248)
            + x16 * x184
            + x16 * (x184 + x254)
            + x198,
            x11 * x261 + x11 * (x11 * x264 + x261) + x16 * x269 + x235,
            x11 * x270 + x11 * (x11 * x271 + x270) + x18 * x254 + x240,
            x11 * x282 + x11 * (x11 * x284 + x282) + x17 * x269 + x290,
            x11 * x292 + x11 * (x11 * x294 + x292) + x18 * x265 + x295,
            x11 * x296 + x11 * (x141 * x242 + x296) + x19 * x253,
            0,
            0,
            0,
            0,
            0,
            0,
            x11 * x300
            + x11 * (x11 * x302 + x300)
            + x16 * x268
            + x16 * (x268 + x305)
            + x234,
            x11 * x310 + x11 * (x11 * x313 + x310) + x16 * x317 + x290,
            x11 * x318 + x11 * (x11 * x319 + x318) + x18 * x305 + x295,
            x11 * x326
            + x11 * (x11 * x327 + x326)
            + x17 * x316
            + x17 * x317
            + x323
            + x324 * x78
            - x83 * (x320 * x78 - x325 * x83),
            x11 * x328 + x11 * (x11 * x329 + x328) + x18 * x314 + x18 * x316,
            x11 * x330 + x11 * (x203 * x242 + x330) + x19 * x304,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            x11 * x355
            + x12 * x126
            + x16 * x343
            + x16 * (x343 + x352)
            + x332 * x78
            - x334 * x83
            + x91
            * (
                x336 * x78
                - x344 * x83
                + x89
                * (
                    x338 * x78
                    - x345 * x83
                    + x87 * (x342 * x78 - x347 * x83 + x82 * (x340 * x78 - x346 * x83))
                )
            ),
            x11 * x361 + x12 * x176 + x16 * x369 + x17 * x343 + x374,
            x11 * x376 + x12 * x199 + x18 * x343 + x18 * x352,
            x11 * x380 + x12 * x222 + x17 * x369 + x387,
            x11 * x390 + x12 * x237 + x18 * x362 + x391,
            x11 * x394 + x12 * x241 + x19 * x351,
            x11 * x398 + x12 * x248 + x16 * x368 + x16 * (x368 + x401) + x374,
            x11 * x406 + x12 * x261 + x16 * x410 + x387,
            x11 * x412 + x12 * x270 + x18 * x401 + x391,
            x11 * x416 + x12 * x282 + x17 * x410 + x420,
            x11 * x423 + x12 * x292 + x18 * x407 + x424,
            x11 * x426 + x12 * x296 + x19 * x400,
            0,
            0,
            0,
            0,
            0,
            0,
            x11 * x430 + x12 * x300 + x16 * x409 + x16 * (x409 + x432) + x386,
            x11 * x437 + x12 * x310 + x16 * x440 + x420,
            x11 * x442 + x12 * x318 + x18 * x432 + x424,
            x11 * x446 + x12 * x326 + x17 * x439 + x17 * x440 + x443 * x78 - x444 * x83,
            x11 * x448 + x12 * x328 + x18 * x438 + x18 * x439,
            x11 * x450 + x12 * x330 + x19 * x431,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            x11 * x491
            + x126 * x13
            + x16 * x469
            + x16 * (x16 * x489 + x469)
            + x452 * x78
            - x454 * x83
            + x91
            * (
                x470
                - x472
                + x89 * (x473 - x475 + x87 * (x479 - x481 + x82 * (x476 - x478)))
            ),
            x11 * x496 + x13 * x176 + x16 * x507 + x17 * x469 + x518,
            x11 * x523 + x13 * x199 + x16 * x525 + x18 * x469 + x526,
            x11 * x530 + x13 * x222 + x17 * x507 + x541,
            x11 * x545 + x13 * x237 + x17 * x525 + x547,
            x11 * x553 + x13 * x241 + x18 * x525 + x555,
            x11 * x558 + x13 * x248 + x16 * x506 + x16 * (x16 * x562 + x506) + x518,
            x11 * x566 + x13 * x261 + x16 * x571 + x541,
            x11 * x575 + x13 * x270 + x16 * x577 + x547,
            x11 * x581 + x13 * x282 + x17 * x571 + x587,
            x11 * x591 + x13 * x292 + x17 * x577 + x593,
            x11 * x597 + x13 * x296 + x18 * x577 + x599,
            x11 * x601 + x16 * x524 + x16 * (x16 * x602 + x524) + x526,
            x11 * x604 + x16 * x605 + x17 * x524 + x546,
            x11 * x608 + x16 * x610 + x555,
            x11 * x612 + x17 * x605 + x613,
            x11 * x614 + x17 * x610 + x599,
            x11 * x617 + x18 * x610 + x618,
            x11 * x621 + x13 * x300 + x16 * x570 + x16 * (x16 * x622 + x570) + x540,
            x11 * x626 + x13 * x310 + x16 * x628 + x587,
            x11 * x632 + x13 * x318 + x16 * x634 + x593,
            x11 * x638 + x13 * x326 + x17 * x627 + x17 * x628 + x635 * x78 - x636 * x83,
            x11 * x641 + x13 * x328 + x17 * x634 + x18 * x627 + x642,
            x11 * x646 + x13 * x330 + x18 * x634 + x648,
            x11 * x650 + x16 * x576 + x16 * (x16 * x651 + x576) + x546,
            x11 * x653 + x16 * x654 + x613,
            x11 * x657 + x16 * x659 + x599,
            x11 * x660 + x17 * x633 + x17 * x654 + x642,
            x11 * x661 + x17 * x659 + x648,
            x11 * x663 + x18 * x659 + x664,
            x11 * x666 + x16 * x609 + x16 * (x16 * x667 + x609) + x554,
            x11 * x669 + x16 * x670 + x17 * x609 + x598,
            x11 * x673 + x16 * x675 + x618,
            x11 * x676 + x17 * x658 + x17 * x670 + x647,
            x11 * x677 + x17 * x675 + x664,
            x11 * x679 + x18 * x674 + x18 * x675 + x476 * x678 - x478 * x678,
            x12 * x354
            + x12 * x355
            + x16 * x680
            + x16 * (x680 + x682)
            + x331 * x332
            - x333 * x334
            + x77,
            x12 * x360 + x12 * x361 + x16 * x685 + x17 * x680 + x686,
            x12 * x375 + x12 * x376 + x18 * x680 + x18 * x682,
            x12 * x379 + x12 * x380 + x17 * x685 + x688,
            x12 * x389 + x12 * x390 + x18 * x683 + x689,
            x12 * x393 + x12 * x394 + x19 * x681,
            x12 * x397 + x12 * x398 + x16 * x684 + x16 * (x684 + x691) + x686,
            x12 * x405 + x12 * x406 + x16 * x694 + x688,
            x12 * x411 + x12 * x412 + x18 * x691 + x689,
            x12 * x415 + x12 * x416 + x17 * x694 + x695,
            x12 * x422 + x12 * x423 + x18 * x692 + x696,
            x12 * x425 + x12 * x426 + x19 * x690,
            0,
            0,
            0,
            0,
            0,
            0,
            x12 * x429 + x12 * x430 + x16 * x693 + x16 * (x693 + x698) + x687,
            x12 * x436 + x12 * x437 + x16 * x701 + x695,
            x12 * x441 + x12 * x442 + x18 * x698 + x696,
            x12 * x445
            + x12 * x446
            + x17 * x700
            + x17 * x701
            + x323
            + x331 * x443
            - x333 * x444
            + x91
            * (
                x286
                + x331 * x417
                - x333 * x418
                + x89
                * (
                    x227
                    + x331 * x381
                    - x333 * x382
                    + x87
                    * (
                        x196
                        + x331 * x365
                        - x333 * x371
                        + x82 * (x119 + x331 * x340 - x333 * x346)
                    )
                )
            ),
            x12 * x447 + x12 * x448 + x18 * x699 + x18 * x700,
            x12 * x449 + x12 * x450 + x19 * x697,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            x12 * x491
            + x13 * x354
            + x16 * x702
            + x16 * (x16 * x703 + x702)
            + x331 * x452
            - x333 * x454,
            x12 * x496 + x13 * x360 + x16 * x706 + x17 * x702 + x708,
            x12 * x523 + x13 * x375 + x16 * x710 + x18 * x702 + x711,
            x12 * x530 + x13 * x379 + x17 * x706 + x716,
            x12 * x545 + x13 * x389 + x17 * x710 + x718,
            x12 * x553 + x13 * x393 + x18 * x710 + x720,
            x12 * x558 + x13 * x397 + x16 * x705 + x16 * (x16 * x723 + x705) + x708,
            x12 * x566 + x13 * x405 + x16 * x728 + x716,
            x12 * x575 + x13 * x411 + x16 * x730 + x718,
            x12 * x581 + x13 * x415 + x17 * x728 + x736,
            x12 * x591 + x13 * x422 + x17 * x730 + x738,
            x12 * x597 + x13 * x425 + x18 * x730 + x740,
            x12 * x601 + x16 * x709 + x16 * (x16 * x741 + x709) + x711,
            x12 * x604 + x16 * x742 + x17 * x709 + x717,
            x12 * x608 + x16 * x744 + x720,
            x12 * x612 + x17 * x742 + x745,
            x12 * x614 + x17 * x744 + x740,
            x12 * x617 + x18 * x744 + x746,
            x12 * x621 + x13 * x429 + x16 * x727 + x16 * (x16 * x751 + x727) + x715,
            x12 * x626 + x13 * x436 + x16 * x758 + x736,
            x12 * x632 + x13 * x441 + x16 * x760 + x738,
            x12 * x638
            + x13 * x445
            + x17 * x757
            + x17 * x758
            + x331 * x635
            - x333 * x636
            + x91
            * (
                x331 * x582
                - x761
                + x89 * (x762 - x763 + x87 * (x766 - x767 + x82 * (x764 - x765)))
            ),
            x12 * x641 + x13 * x447 + x17 * x760 + x18 * x757 + x768,
            x12 * x646 + x13 * x449 + x18 * x760 + x770,
            x12 * x650 + x16 * x729 + x16 * (x16 * x771 + x729) + x717,
            x12 * x653 + x16 * x772 + x745,
            x12 * x657 + x16 * x774 + x740,
            x12 * x660 + x17 * x759 + x17 * x772 + x768,
            x12 * x661 + x17 * x774 + x770,
            x12 * x663 + x18 * x774 + x775,
            x12 * x666 + x16 * x743 + x16 * (x16 * x776 + x743) + x719,
            x12 * x669 + x16 * x777 + x17 * x743 + x739,
            x12 * x673 + x16 * x779 + x746,
            x12 * x676 + x17 * x773 + x17 * x777 + x769,
            x12 * x677 + x17 * x779 + x775,
            x12 * x679 + x18 * x778 + x18 * x779 + x678 * x764 - x678 * x765,
            x13 * x490
            + x13 * x491
            + x16 * x780
            + x16 * (x16 * x781 + x780)
            + x451 * x452
            - x453 * x454
            + x77,
            x13 * x495 + x13 * x496 + x16 * x783 + x17 * x780 + x784,
            x13 * x522 + x13 * x523 + x16 * x787 + x18 * x780 + x789,
            x13 * x529 + x13 * x530 + x17 * x783 + x791,
            x13 * x544 + x13 * x545 + x17 * x787 + x794,
            x13 * x552 + x13 * x553 + x18 * x787 + x798,
            x13 * x557 + x13 * x558 + x16 * x782 + x16 * (x16 * x799 + x782) + x784,
            x13 * x565 + x13 * x566 + x16 * x801 + x791,
            x13 * x574 + x13 * x575 + x16 * x804 + x794,
            x13 * x580 + x13 * x581 + x17 * x801 + x805,
            x13 * x590 + x13 * x591 + x17 * x804 + x808,
            x13 * x596 + x13 * x597 + x18 * x804 + x812,
            x16 * x786 + x16 * (x16 * x815 + x786) + x601 * x816 + x789,
            x16 * x817 + x17 * x786 + x604 * x816 + x793,
            x16 * x821 + x608 * x816 + x798,
            x17 * x817 + x612 * x816 + x822,
            x17 * x821 + x614 * x816 + x812,
            x18 * x821 + x617 * x816 + x825,
            x13 * x620 + x13 * x621 + x16 * x800 + x16 * (x16 * x826 + x800) + x790,
            x13 * x625 + x13 * x626 + x16 * x828 + x805,
            x13 * x631 + x13 * x632 + x16 * x831 + x808,
            x13 * x637
            + x13 * x638
            + x17 * x827
            + x17 * x828
            + x323
            + x451 * x635
            - x453 * x636,
            x13 * x640 + x13 * x641 + x17 * x831 + x18 * x827 + x833,
            x13 * x645 + x13 * x646 + x18 * x831 + x837,
            x16 * x803 + x16 * (x16 * x840 + x803) + x650 * x816 + x793,
            x16 * x841 + x653 * x816 + x822,
            x16 * x845 + x657 * x816 + x812,
            x17 * x830 + x17 * x841 + x660 * x816 + x833,
            x17 * x845 + x661 * x816 + x837,
            x18 * x845 + x663 * x816 + x848,
            x16 * x820 + x16 * (x16 * x851 + x820) + x666 * x816 + x797,
            x16 * x852 + x17 * x820 + x669 * x816 + x811,
            x16 * x856 + x673 * x816 + x825,
            x17 * x844 + x17 * x852 + x676 * x816 + x836,
            x17 * x856 + x677 * x816 + x848,
            x18 * x855
            + x18 * x856
            + x678 * x857
            - x678 * x858
            + x679 * x816
            + x91
            * (
                x615 * x857
                - x615 * x858
                + x89
                * (
                    x549 * x857
                    - x549 * x858
                    + x87 * (x82 * x857 - x82 * x858 + x82 * (x119 + x857 - x858))
                )
            ),
        ]
    )
    return S


def eri_1000(a, A, b, B, c, C, d, D):
    """Cartesian [ps|ss] 2-electron electron repulsion integral.

    Generated code; DO NOT modify by hand!"""

    x0 = a + b
    x1 = x0 ** (-1.0)
    x2 = -x1 * (a * A[0] + b * B[0])
    x3 = c + d
    x4 = x0 + x3
    x5 = x4 ** (-1.0)
    x6 = x3 ** (-1.0)
    x7 = -x2 - x6 * (c * C[0] + d * D[0])
    x8 = -x1 * (a * A[1] + b * B[1])
    x9 = -x6 * (c * C[1] + d * D[1]) - x8
    x10 = -x1 * (a * A[2] + b * B[2])
    x11 = -x10 - x6 * (c * C[2] + d * D[2])
    x12 = x0 * x3
    x13 = x12 * x5 * (x11**2 + x7**2 + x9**2)
    x14 = (
        2
        * numpy.pi**2.5
        * numpy.exp(
            -a * b * x1 * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2)
        )
        * numpy.exp(
            -c * d * x6 * ((C[0] - D[0]) ** 2 + (C[1] - D[1]) ** 2 + (C[2] - D[2]) ** 2)
        )
        / (x12 + numpy.sqrt(x4))
    )
    x15 = x14 * boys(0, x13)
    x16 = x14 * x3 * x5 * boys(1, x13)

    # 3 item(s)
    S = numpy.array(
        [
            x15 * (-x2 - A[0]) - x16 * x7,
            x15 * (-x8 - A[1]) - x16 * x9,
            -x11 * x16 + x15 * (-x10 - A[2]),
        ]
    )
    return S


def eri_1001(a, A, b, B, c, C, d, D):
    """Cartesian [ps|sp] 2-electron electron repulsion integral.

    Generated code; DO NOT modify by hand!"""

    x0 = C[0] - D[0]
    x1 = a + b
    x2 = c + d
    x3 = x1 + x2
    x4 = x3 ** (-1.0)
    x5 = x2 ** (-1.0)
    x6 = x5 * (c * C[0] + d * D[0])
    x7 = x1 ** (-1.0)
    x8 = -x7 * (a * A[0] + b * B[0])
    x9 = -x6 - x8
    x10 = x5 * (c * C[1] + d * D[1])
    x11 = -x7 * (a * A[1] + b * B[1])
    x12 = -x10 - x11
    x13 = -x7 * (a * A[2] + b * B[2])
    x14 = -x13 - x5 * (c * C[2] + d * D[2])
    x15 = x1 * x2
    x16 = x15 * x4 * (x12**2 + x14**2 + x9**2)
    x17 = boys(0, x16)
    x18 = -x8 - A[0]
    x19 = C[1] - D[1]
    x20 = C[2] - D[2]
    x21 = (
        2
        * numpy.pi**2.5
        * numpy.exp(
            -a * b * x7 * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2)
        )
        * numpy.exp(-c * d * x5 * (x0**2 + x19**2 + x20**2))
        / (x15 + numpy.sqrt(x3))
    )
    x22 = x18 * x21
    x23 = boys(1, x16)
    x24 = x2 * x4
    x25 = x24 * x9
    x26 = x21 * x25
    x27 = x17 * x22 - x23 * x26
    x28 = (2 * a + 2 * b + 2 * c + 2 * d) ** (-1.0)
    x29 = boys(2, x16)
    x30 = x21 * (x6 - C[0])
    x31 = x21 * x23
    x32 = x1 * x4
    x33 = x32 * x9
    x34 = x17 * x30 + x31 * x33
    x35 = x21 * x29
    x36 = x23 * x30 + x33 * x35
    x37 = x21 * (x10 - C[1])
    x38 = x12 * x32
    x39 = x17 * x37 + x31 * x38
    x40 = x23 * x37 + x35 * x38
    x41 = -x11 - A[1]
    x42 = x21 * x41
    x43 = x12 * x24
    x44 = x17 * x42 - x31 * x43
    x45 = -x13 - A[2]
    x46 = x21 * x45
    x47 = x14 * x24
    x48 = x17 * x46 - x31 * x47

    # 9 item(s)
    S = numpy.array(
        [
            x0 * x27 + x18 * x34 - x25 * x36 + x28 * (x22 * x23 - x26 * x29),
            x18 * x39 + x19 * x27 - x25 * x40,
            x20 * x27,
            x0 * x44 + x34 * x41 - x36 * x43,
            x19 * x44 + x28 * (x23 * x42 - x35 * x43) + x39 * x41 - x40 * x43,
            x20 * x44,
            x0 * x48 + x34 * x45 - x36 * x47,
            x19 * x48 + x39 * x45 - x40 * x47,
            x20 * x48 + x28 * (x23 * x46 - x35 * x47),
        ]
    )
    return S


def eri_1002(a, A, b, B, c, C, d, D):
    """Cartesian [ps|sd] 2-electron electron repulsion integral.

    Generated code; DO NOT modify by hand!"""

    x0 = a + b
    x1 = x0 ** (-1.0)
    x2 = -x1 * (a * A[0] + b * B[0])
    x3 = -x2 - A[0]
    x4 = 2 * c + 2 * d
    x5 = x4 ** (-1.0)
    x6 = numpy.pi**2.5
    x7 = c + d
    x8 = x0 * x7
    x9 = x0 + x7
    x10 = (x8 + numpy.sqrt(x9)) ** (-1.0)
    x11 = numpy.exp(
        -a * b * x1 * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2)
    )
    x12 = x7 ** (-1.0)
    x13 = C[0] - D[0]
    x14 = C[1] - D[1]
    x15 = C[2] - D[2]
    x16 = x15**2
    x17 = numpy.exp(-c * d * x12 * (x13**2 + x14**2 + x16))
    x18 = x9 ** (-1.0)
    x19 = x12 * (c * C[0] + d * D[0])
    x20 = -x19 - x2
    x21 = x12 * (c * C[1] + d * D[1])
    x22 = -x1 * (a * A[1] + b * B[1])
    x23 = -x21 - x22
    x24 = -x1 * (a * A[2] + b * B[2])
    x25 = -x12 * (c * C[2] + d * D[2]) - x24
    x26 = x18 * x8 * (x20**2 + x23**2 + x25**2)
    x27 = boys(0, x26)
    x28 = boys(1, x26)
    x29 = 2 * x10 * x11 * x17 * x6
    x30 = x28 * x29
    x31 = x0 * x18
    x32 = x5 * (2 * x10 * x11 * x17 * x27 * x6 - x30 * x31)
    x33 = x19 - C[0]
    x34 = x27 * x29
    x35 = x18 * x20
    x36 = x0 * x35
    x37 = x30 * x36 + x33 * x34
    x38 = x29 * boys(2, x26)
    x39 = x30 * x33 + x36 * x38
    x40 = x35 * x39
    x41 = x0 * x40 + x32 + x33 * x37
    x42 = x5 * (2 * x10 * x11 * x17 * x28 * x6 - x31 * x38)
    x43 = x29 * boys(3, x26)
    x44 = x33 * x38 + x36 * x43
    x45 = x35 * x44
    x46 = x0 * x45 + x33 * x39 + x42
    x47 = x35 * x7
    x48 = 2 * a + 2 * b + x4
    x49 = x48 ** (-1.0)
    x50 = x3 * x37 - x40 * x7 + x49 * (x3 * x30 - x38 * x47)
    x51 = 2 * x49
    x52 = x3 * x34 - x30 * x47
    x53 = x13 * x52
    x54 = x21 - C[1]
    x55 = x18 * x23
    x56 = x0 * x55
    x57 = x30 * x54 + x38 * x56
    x58 = x38 * x54 + x43 * x56
    x59 = x30 * x56 + x34 * x54
    x60 = x33 * x59 + x36 * x57
    x61 = x33 * x57 + x36 * x58
    x62 = x14 * x52
    x63 = x3 * x59 - x47 * x57
    x64 = x62 + x63
    x65 = x32 + x54 * x59 + x56 * x57
    x66 = x42 + x54 * x57 + x56 * x58
    x67 = -x22 - A[1]
    x68 = x55 * x7
    x69 = x37 * x67 - x39 * x68
    x70 = -x30 * x68 + x34 * x67
    x71 = x13 * x70
    x72 = x14 * x70
    x73 = x49 * (x30 * x67 - x38 * x68) - x57 * x68 + x59 * x67
    x74 = x72 + x73
    x75 = -x24 - A[2]
    x76 = x18 * x25 * x7
    x77 = x37 * x75 - x39 * x76
    x78 = -x30 * x76 + x34 * x75
    x79 = -x57 * x76 + x59 * x75
    x80 = x14 * x78 + x79
    x81 = x49 * (x30 * x75 - x38 * x76)
    x82 = x15 * x78 + x81

    # 18 item(s)
    S = numpy.array(
        [
            x13 * x50
            + x13 * (x50 + x53)
            + x3 * x41
            - x46 * x47
            + x51 * (x3 * x39 - x45 * x7 + x49 * (x3 * x38 - x43 * x47)),
            x13 * x64 + x14 * x50 + x3 * x60 - x47 * x61 + x49 * (x3 * x57 - x47 * x58),
            x15 * x50 + x15 * x53,
            x14 * x63 + x14 * x64 + x3 * x65 - x47 * x66,
            x15 * x62 + x15 * x63,
            x16 * x52,
            x13 * x69 + x13 * (x69 + x71) + x41 * x67 - x46 * x68,
            x13 * x74 + x14 * x69 + x49 * (x39 * x67 - x44 * x68) + x60 * x67 - x61 * x68,
            x15 * x69 + x15 * x71,
            x14 * x73
            + x14 * x74
            + x51 * (x49 * (x38 * x67 - x43 * x68) + x57 * x67 - x58 * x68)
            + x65 * x67
            - x66 * x68,
            x15 * x72 + x15 * x73,
            x16 * x70,
            x13 * x77 + x13 * (x13 * x78 + x77) + x41 * x75 - x46 * x76,
            x13 * x80 + x14 * x77 + x60 * x75 - x61 * x76,
            x13 * x82 + x15 * x77 + x49 * (x39 * x75 - x44 * x76),
            x14 * x79 + x14 * x80 + x65 * x75 - x66 * x76,
            x14 * x82 + x15 * x79 + x49 * (x57 * x75 - x58 * x76),
            x15 * x81 + x15 * x82 + 2 * (x38 * x75 - x43 * x76) / x48**2,
        ]
    )
    return S


def eri_1010(a, A, b, B, c, C, d, D):
    """Cartesian [ps|ps] 2-electron electron repulsion integral.

    Generated code; DO NOT modify by hand!"""

    x0 = (2 * a + 2 * b + 2 * c + 2 * d) ** (-1.0)
    x1 = a + b
    x2 = x1 ** (-1.0)
    x3 = -x2 * (a * A[0] + b * B[0])
    x4 = -x3 - A[0]
    x5 = c + d
    x6 = x1 + x5
    x7 = x6 ** (-1.0)
    x8 = x5 ** (-1.0)
    x9 = x8 * (c * C[0] + d * D[0])
    x10 = -x3 - x9
    x11 = x8 * (c * C[1] + d * D[1])
    x12 = -x2 * (a * A[1] + b * B[1])
    x13 = -x11 - x12
    x14 = -x2 * (a * A[2] + b * B[2])
    x15 = -x14 - x8 * (c * C[2] + d * D[2])
    x16 = x1 * x5
    x17 = x16 * x7 * (x10**2 + x13**2 + x15**2)
    x18 = (
        2
        * numpy.pi**2.5
        * numpy.exp(
            -a * b * x2 * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2)
        )
        * numpy.exp(
            -c * d * x8 * ((C[0] - D[0]) ** 2 + (C[1] - D[1]) ** 2 + (C[2] - D[2]) ** 2)
        )
        / (x16 + numpy.sqrt(x6))
    )
    x19 = x18 * boys(1, x17)
    x20 = x5 * x7
    x21 = x10 * x20
    x22 = x18 * boys(2, x17)
    x23 = x9 - C[0]
    x24 = x18 * boys(0, x17)
    x25 = x1 * x7
    x26 = x10 * x25
    x27 = x19 * x26 + x23 * x24
    x28 = x19 * x23 + x22 * x26
    x29 = x11 - C[1]
    x30 = x13 * x25
    x31 = x19 * x30 + x24 * x29
    x32 = x19 * x29 + x22 * x30
    x33 = -x12 - A[1]
    x34 = x13 * x20
    x35 = -x14 - A[2]
    x36 = x15 * x20

    # 9 item(s)
    S = numpy.array(
        [
            x0 * (x19 * x4 - x21 * x22) - x21 * x28 + x27 * x4,
            -x21 * x32 + x31 * x4,
            0,
            x27 * x33 - x28 * x34,
            x0 * (x19 * x33 - x22 * x34) + x31 * x33 - x32 * x34,
            0,
            x27 * x35 - x28 * x36,
            x31 * x35 - x32 * x36,
            x0 * (x19 * x35 - x22 * x36),
        ]
    )
    return S


def eri_1011(a, A, b, B, c, C, d, D):
    """Cartesian [ps|pp] 2-electron electron repulsion integral.

    Generated code; DO NOT modify by hand!"""

    x0 = a + b
    x1 = x0 ** (-1.0)
    x2 = -x1 * (a * A[0] + b * B[0])
    x3 = -x2 - A[0]
    x4 = 2 * c + 2 * d
    x5 = x4 ** (-1.0)
    x6 = numpy.pi**2.5
    x7 = c + d
    x8 = x0 * x7
    x9 = x0 + x7
    x10 = (x8 + numpy.sqrt(x9)) ** (-1.0)
    x11 = numpy.exp(
        -a * b * x1 * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2)
    )
    x12 = x7 ** (-1.0)
    x13 = C[0] - D[0]
    x14 = C[1] - D[1]
    x15 = C[2] - D[2]
    x16 = numpy.exp(-c * d * x12 * (x13**2 + x14**2 + x15**2))
    x17 = x9 ** (-1.0)
    x18 = x12 * (c * C[0] + d * D[0])
    x19 = -x18 - x2
    x20 = x12 * (c * C[1] + d * D[1])
    x21 = -x1 * (a * A[1] + b * B[1])
    x22 = -x20 - x21
    x23 = -x1 * (a * A[2] + b * B[2])
    x24 = -x12 * (c * C[2] + d * D[2]) - x23
    x25 = x17 * x8 * (x19**2 + x22**2 + x24**2)
    x26 = boys(0, x25)
    x27 = boys(1, x25)
    x28 = 2 * x10 * x11 * x16 * x6
    x29 = x27 * x28
    x30 = x0 * x17
    x31 = x5 * (2 * x10 * x11 * x16 * x26 * x6 - x29 * x30)
    x32 = x18 - C[0]
    x33 = x26 * x28
    x34 = x17 * x19
    x35 = x0 * x34
    x36 = x29 * x35 + x32 * x33
    x37 = x28 * boys(2, x25)
    x38 = x29 * x32 + x35 * x37
    x39 = x34 * x38
    x40 = x0 * x39 + x31 + x32 * x36
    x41 = x5 * (2 * x10 * x11 * x16 * x27 * x6 - x30 * x37)
    x42 = x28 * boys(3, x25)
    x43 = x32 * x37 + x35 * x42
    x44 = x34 * x43
    x45 = x0 * x44 + x32 * x38 + x41
    x46 = x34 * x7
    x47 = 2 * a + 2 * b + x4
    x48 = x47 ** (-1.0)
    x49 = x3 * x36 - x39 * x7 + x48 * (x29 * x3 - x37 * x46)
    x50 = 2 * x48
    x51 = x20 - C[1]
    x52 = x17 * x22
    x53 = x0 * x52
    x54 = x29 * x51 + x37 * x53
    x55 = x37 * x51 + x42 * x53
    x56 = x29 * x53 + x33 * x51
    x57 = x32 * x56 + x35 * x54
    x58 = x32 * x54 + x35 * x55
    x59 = x3 * x57 - x46 * x58 + x48 * (x3 * x54 - x46 * x55)
    x60 = x3 * x56 - x46 * x54
    x61 = x31 + x51 * x56 + x53 * x54
    x62 = x41 + x51 * x54 + x53 * x55
    x63 = -x21 - A[1]
    x64 = x52 * x7
    x65 = x36 * x63 - x38 * x64
    x66 = x48 * (x38 * x63 - x43 * x64) + x57 * x63 - x58 * x64
    x67 = x48 * (x29 * x63 - x37 * x64) - x54 * x64 + x56 * x63
    x68 = -x23 - A[2]
    x69 = x17 * x24 * x7
    x70 = x36 * x68 - x38 * x69
    x71 = x57 * x68 - x58 * x69
    x72 = x48 * (x38 * x68 - x43 * x69)
    x73 = -x54 * x69 + x56 * x68
    x74 = x48 * (x54 * x68 - x55 * x69)
    x75 = x48 * (x29 * x68 - x37 * x69)

    # 27 item(s)
    S = numpy.array(
        [
            x13 * x49
            + x3 * x40
            - x45 * x46
            + x50 * (x3 * x38 - x44 * x7 + x48 * (x3 * x37 - x42 * x46)),
            x14 * x49 + x59,
            x15 * x49,
            x13 * x60 + x59,
            x14 * x60 + x3 * x61 - x46 * x62,
            x15 * x60,
            0,
            0,
            0,
            x13 * x65 + x40 * x63 - x45 * x64,
            x14 * x65 + x66,
            x15 * x65,
            x13 * x67 + x66,
            x14 * x67
            + x50 * (x48 * (x37 * x63 - x42 * x64) + x54 * x63 - x55 * x64)
            + x61 * x63
            - x62 * x64,
            x15 * x67,
            0,
            0,
            0,
            x13 * x70 + x40 * x68 - x45 * x69,
            x14 * x70 + x71,
            x15 * x70 + x72,
            x13 * x73 + x71,
            x14 * x73 + x61 * x68 - x62 * x69,
            x15 * x73 + x74,
            x13 * x75 + x72,
            x14 * x75 + x74,
            x15 * x75 + 2 * (x37 * x68 - x42 * x69) / x47**2,
        ]
    )
    return S


def eri_1012(a, A, b, B, c, C, d, D):
    """Cartesian [ps|pd] 2-electron electron repulsion integral.

    Generated code; DO NOT modify by hand!"""

    x0 = a + b
    x1 = x0 ** (-1.0)
    x2 = -x1 * (a * A[0] + b * B[0])
    x3 = -x2 - A[0]
    x4 = c + d
    x5 = x4 ** (-1.0)
    x6 = x5 * (c * C[0] + d * D[0])
    x7 = x6 - C[0]
    x8 = x0 + x4
    x9 = x8 ** (-1.0)
    x10 = -x2 - x6
    x11 = x5 * (c * C[1] + d * D[1])
    x12 = -x1 * (a * A[1] + b * B[1])
    x13 = -x11 - x12
    x14 = -x1 * (a * A[2] + b * B[2])
    x15 = -x14 - x5 * (c * C[2] + d * D[2])
    x16 = x0 * x4
    x17 = x16 * x9 * (x10**2 + x13**2 + x15**2)
    x18 = boys(1, x17)
    x19 = numpy.pi**2.5
    x20 = (x16 + numpy.sqrt(x8)) ** (-1.0)
    x21 = numpy.exp(
        -a * b * x1 * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2)
    )
    x22 = C[0] - D[0]
    x23 = C[1] - D[1]
    x24 = C[2] - D[2]
    x25 = x24**2
    x26 = numpy.exp(-c * d * x5 * (x22**2 + x23**2 + x25))
    x27 = 2 * x19 * x20 * x21 * x26
    x28 = x18 * x27
    x29 = x0 * x9
    x30 = x10 * x29
    x31 = boys(2, x17)
    x32 = x27 * x31
    x33 = x28 * x7 + x30 * x32
    x34 = x29 * x33
    x35 = boys(0, x17)
    x36 = x27 * x35
    x37 = x28 * x30 + x36 * x7
    x38 = 2 * c + 2 * d
    x39 = x38 ** (-1.0)
    x40 = 2 * x39
    x41 = x39 * (2 * x19 * x20 * x21 * x26 * x35 - x28 * x29)
    x42 = x10 * x34 + x37 * x7 + x41
    x43 = x39 * (2 * x18 * x19 * x20 * x21 * x26 - x29 * x32)
    x44 = x27 * boys(3, x17)
    x45 = x30 * x44 + x32 * x7
    x46 = x29 * x45
    x47 = x10 * x46 + x33 * x7 + x43
    x48 = x30 * x47 + x40 * (-x34 + x37) + x42 * x7
    x49 = x39 * (2 * x19 * x20 * x21 * x26 * x31 - x29 * x44)
    x50 = x27 * boys(4, x17)
    x51 = x30 * x50 + x44 * x7
    x52 = x30 * x51 + x45 * x7 + x49
    x53 = x30 * x52 + x40 * (x33 - x46) + x47 * x7
    x54 = x4 * x9
    x55 = x10 * x54
    x56 = 2 * a + 2 * b + x38
    x57 = x56 ** (-1.0)
    x58 = 2 * x57
    x59 = (
        x3 * x42 - x47 * x55 + x58 * (x3 * x33 - x45 * x55 + x57 * (x3 * x32 - x44 * x55))
    )
    x60 = 3 * x57
    x61 = x3 * x37 - x33 * x55 + x57 * (x28 * x3 - x32 * x55)
    x62 = x22 * x61
    x63 = x23 * x61
    x64 = x11 - C[1]
    x65 = x13 * x29
    x66 = x28 * x64 + x32 * x65
    x67 = x32 * x64 + x44 * x65
    x68 = x28 * x65 + x36 * x64
    x69 = x29 * x66
    x70 = x10 * x69 + x68 * x7
    x71 = x29 * x67
    x72 = x10 * x71 + x66 * x7
    x73 = x3 * x70 - x55 * x72 + x57 * (x3 * x66 - x55 * x67)
    x74 = x63 + x73
    x75 = x39 * (x68 - x69)
    x76 = x30 * x72 + x7 * x70 + x75
    x77 = x44 * x64 + x50 * x65
    x78 = x30 * x77 + x67 * x7
    x79 = x39 * (x66 - x71)
    x80 = x30 * x78 + x7 * x72 + x79
    x81 = (
        x3 * x76 - x55 * x80 + x58 * (x3 * x72 - x55 * x78 + x57 * (x3 * x67 - x55 * x77))
    )
    x82 = x13 * x71 + x43 + x64 * x66
    x83 = x49 + x64 * x67 + x65 * x77
    x84 = x13 * x69 + x41 + x64 * x68
    x85 = x30 * x82 + x7 * x84
    x86 = x30 * x83 + x7 * x82
    x87 = x23 * x73 + x3 * x85 - x55 * x86 + x57 * (x3 * x82 - x55 * x83)
    x88 = x24 * x73
    x89 = x3 * x68 - x55 * x66
    x90 = x22 * x89
    x91 = x23 * x89
    x92 = x3 * x84 - x55 * x82
    x93 = x91 + x92
    x94 = x64 * x84 + x65 * x82 + 2 * x75
    x95 = x64 * x82 + x65 * x83 + 2 * x79
    x96 = -x12 - A[1]
    x97 = x13 * x54
    x98 = x42 * x96 - x47 * x97
    x99 = -x33 * x97 + x37 * x96
    x100 = x22 * x99
    x101 = x23 * x99
    x102 = x57 * (x33 * x96 - x45 * x97) + x70 * x96 - x72 * x97
    x103 = x101 + x102
    x104 = x57 * (x47 * x96 - x52 * x97) + x76 * x96 - x80 * x97
    x105 = (
        x102 * x23
        + x58 * (x57 * (x45 * x96 - x51 * x97) + x72 * x96 - x78 * x97)
        + x85 * x96
        - x86 * x97
    )
    x106 = x102 * x24
    x107 = x57 * (x28 * x96 - x32 * x97) - x66 * x97 + x68 * x96
    x108 = x107 * x22
    x109 = x107 * x23
    x110 = (
        x58 * (x57 * (x32 * x96 - x44 * x97) + x66 * x96 - x67 * x97)
        - x82 * x97
        + x84 * x96
    )
    x111 = x109 + x110
    x112 = -x14 - A[2]
    x113 = x15 * x54
    x114 = x112 * x42 - x113 * x47
    x115 = x112 * x37 - x113 * x33
    x116 = x112 * x70 - x113 * x72
    x117 = x115 * x23 + x116
    x118 = x112 * x76 - x113 * x80
    x119 = x57 * (x112 * x33 - x113 * x45)
    x120 = x115 * x24 + x119
    x121 = x57 * (x112 * x47 - x113 * x52)
    x122 = x112 * x85 - x113 * x86 + x116 * x23
    x123 = x57 * (x112 * x72 - x113 * x78)
    x124 = x116 * x24 + x123
    x125 = 2 / x56**2
    x126 = x119 * x24 + x125 * (x112 * x45 - x113 * x51)
    x127 = x112 * x68 - x113 * x66
    x128 = x112 * x84 - x113 * x82
    x129 = x127 * x23 + x128
    x130 = x57 * (x112 * x66 - x113 * x67)
    x131 = x127 * x24 + x130
    x132 = x57 * (x112 * x82 - x113 * x83)
    x133 = x125 * (x112 * x67 - x113 * x77) + x130 * x24
    x134 = x57 * (x112 * x28 - x113 * x32)
    x135 = x130 + x134 * x23
    x136 = x125 * (x112 * x32 - x113 * x44)
    x137 = x134 * x24 + x136

    # 54 item(s)
    S = numpy.array(
        [
            x22 * x59
            + x22 * (x59 + x62)
            + x3 * x48
            - x53 * x55
            + x60
            * (
                x3 * x47
                - x52 * x55
                + x58 * (x3 * x45 - x51 * x55 + x57 * (x3 * x44 - x50 * x55))
            ),
            x22 * x74 + x23 * x59 + x81,
            x24 * x59 + x24 * x62,
            x23 * x74 + x87,
            x24 * x63 + x88,
            x25 * x61,
            x22 * x73 + x22 * (x73 + x90) + x81,
            x22 * x93 + x87,
            x24 * x90 + x88,
            x23 * x92 + x23 * x93 + x3 * x94 - x55 * x95,
            x24 * x91 + x24 * x92,
            x25 * x89,
            0,
            0,
            0,
            0,
            0,
            0,
            x22 * x98 + x22 * (x100 + x98) + x48 * x96 - x53 * x97,
            x103 * x22 + x104 + x23 * x98,
            x100 * x24 + x24 * x98,
            x103 * x23 + x105,
            x101 * x24 + x106,
            x25 * x99,
            x102 * x22 + x104 + x22 * (x102 + x108),
            x105 + x111 * x22,
            x106 + x108 * x24,
            x110 * x23
            + x111 * x23
            + x60
            * (
                x58 * (x57 * (x44 * x96 - x50 * x97) + x67 * x96 - x77 * x97)
                + x82 * x96
                - x83 * x97
            )
            + x94 * x96
            - x95 * x97,
            x109 * x24 + x110 * x24,
            x107 * x25,
            0,
            0,
            0,
            0,
            0,
            0,
            x112 * x48 - x113 * x53 + x114 * x22 + x22 * (x114 + x115 * x22),
            x114 * x23 + x117 * x22 + x118,
            x114 * x24 + x120 * x22 + x121,
            x117 * x23 + x122,
            x120 * x23 + x124,
            x120 * x24 + x126,
            x116 * x22 + x118 + x22 * (x116 + x127 * x22),
            x122 + x129 * x22,
            x124 + x131 * x22,
            x112 * x94 - x113 * x95 + x128 * x23 + x129 * x23,
            x128 * x24 + x131 * x23 + x132,
            x131 * x24 + x133,
            x119 * x22 + x121 + x22 * (x119 + x134 * x22),
            x119 * x23 + x123 + x135 * x22,
            x126 + x137 * x22,
            x130 * x23 + x132 + x135 * x23,
            x133 + x137 * x23,
            x136 * x24 + x137 * x24 + 6 * (x112 * x44 - x113 * x50) / x56**3,
        ]
    )
    return S


def eri_1020(a, A, b, B, c, C, d, D):
    """Cartesian [ps|ds] 2-electron electron repulsion integral.

    Generated code; DO NOT modify by hand!"""

    x0 = a + b
    x1 = x0 ** (-1.0)
    x2 = -x1 * (a * A[0] + b * B[0])
    x3 = -x2 - A[0]
    x4 = 2 * c + 2 * d
    x5 = x4 ** (-1.0)
    x6 = numpy.pi**2.5
    x7 = c + d
    x8 = x0 * x7
    x9 = x0 + x7
    x10 = (x8 + numpy.sqrt(x9)) ** (-1.0)
    x11 = numpy.exp(
        -a * b * x1 * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2)
    )
    x12 = x7 ** (-1.0)
    x13 = numpy.exp(
        -c * d * x12 * ((C[0] - D[0]) ** 2 + (C[1] - D[1]) ** 2 + (C[2] - D[2]) ** 2)
    )
    x14 = x9 ** (-1.0)
    x15 = x12 * (c * C[0] + d * D[0])
    x16 = -x15 - x2
    x17 = x12 * (c * C[1] + d * D[1])
    x18 = -x1 * (a * A[1] + b * B[1])
    x19 = -x17 - x18
    x20 = -x1 * (a * A[2] + b * B[2])
    x21 = -x12 * (c * C[2] + d * D[2]) - x20
    x22 = x14 * x8 * (x16**2 + x19**2 + x21**2)
    x23 = boys(0, x22)
    x24 = boys(1, x22)
    x25 = 2 * x10 * x11 * x13 * x6
    x26 = x24 * x25
    x27 = x0 * x14
    x28 = x5 * (2 * x10 * x11 * x13 * x23 * x6 - x26 * x27)
    x29 = x15 - C[0]
    x30 = x23 * x25
    x31 = x14 * x16
    x32 = x0 * x31
    x33 = x25 * boys(2, x22)
    x34 = x26 * x29 + x32 * x33
    x35 = x28 + x29 * (x26 * x32 + x29 * x30) + x32 * x34
    x36 = x5 * (2 * x10 * x11 * x13 * x24 * x6 - x27 * x33)
    x37 = x25 * boys(3, x22)
    x38 = x29 * x33 + x32 * x37
    x39 = x29 * x34 + x32 * x38 + x36
    x40 = x31 * x7
    x41 = 2 * a + 2 * b + x4
    x42 = x41 ** (-1.0)
    x43 = 2 * x42
    x44 = x17 - C[1]
    x45 = x14 * x19
    x46 = x0 * x45
    x47 = x26 * x44 + x33 * x46
    x48 = x33 * x44 + x37 * x46
    x49 = x26 * x46 + x30 * x44
    x50 = x29 * x49 + x32 * x47
    x51 = x29 * x47 + x32 * x48
    x52 = x28 + x44 * x49 + x46 * x47
    x53 = x36 + x44 * x47 + x46 * x48
    x54 = -x18 - A[1]
    x55 = x45 * x7
    x56 = -x20 - A[2]
    x57 = x14 * x21 * x7

    # 18 item(s)
    S = numpy.array(
        [
            x3 * x35
            - x39 * x40
            + x43 * (x3 * x34 - x38 * x40 + x42 * (x3 * x33 - x37 * x40)),
            x3 * x50 - x40 * x51 + x42 * (x3 * x47 - x40 * x48),
            0,
            x3 * x52 - x40 * x53,
            0,
            0,
            x35 * x54 - x39 * x55,
            x42 * (x34 * x54 - x38 * x55) + x50 * x54 - x51 * x55,
            0,
            x43 * (x42 * (x33 * x54 - x37 * x55) + x47 * x54 - x48 * x55)
            + x52 * x54
            - x53 * x55,
            0,
            0,
            x35 * x56 - x39 * x57,
            x50 * x56 - x51 * x57,
            x42 * (x34 * x56 - x38 * x57),
            x52 * x56 - x53 * x57,
            x42 * (x47 * x56 - x48 * x57),
            2 * (x33 * x56 - x37 * x57) / x41**2,
        ]
    )
    return S


def eri_1021(a, A, b, B, c, C, d, D):
    """Cartesian [ps|dp] 2-electron electron repulsion integral.

    Generated code; DO NOT modify by hand!"""

    x0 = a + b
    x1 = x0 ** (-1.0)
    x2 = -x1 * (a * A[0] + b * B[0])
    x3 = -x2 - A[0]
    x4 = c + d
    x5 = x4 ** (-1.0)
    x6 = x5 * (c * C[0] + d * D[0])
    x7 = x6 - C[0]
    x8 = x0 + x4
    x9 = x8 ** (-1.0)
    x10 = -x2 - x6
    x11 = x5 * (c * C[1] + d * D[1])
    x12 = -x1 * (a * A[1] + b * B[1])
    x13 = -x11 - x12
    x14 = -x1 * (a * A[2] + b * B[2])
    x15 = -x14 - x5 * (c * C[2] + d * D[2])
    x16 = x0 * x4
    x17 = x16 * x9 * (x10**2 + x13**2 + x15**2)
    x18 = boys(1, x17)
    x19 = numpy.pi**2.5
    x20 = (x16 + numpy.sqrt(x8)) ** (-1.0)
    x21 = numpy.exp(
        -a * b * x1 * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2)
    )
    x22 = C[0] - D[0]
    x23 = C[1] - D[1]
    x24 = C[2] - D[2]
    x25 = numpy.exp(-c * d * x5 * (x22**2 + x23**2 + x24**2))
    x26 = 2 * x19 * x20 * x21 * x25
    x27 = x18 * x26
    x28 = x0 * x9
    x29 = x10 * x28
    x30 = boys(2, x17)
    x31 = x26 * x30
    x32 = x27 * x7 + x29 * x31
    x33 = x28 * x32
    x34 = boys(0, x17)
    x35 = x26 * x34
    x36 = x27 * x29 + x35 * x7
    x37 = 2 * c + 2 * d
    x38 = x37 ** (-1.0)
    x39 = 2 * x38
    x40 = x38 * (2 * x19 * x20 * x21 * x25 * x34 - x27 * x28)
    x41 = x10 * x33 + x36 * x7 + x40
    x42 = x38 * (2 * x18 * x19 * x20 * x21 * x25 - x28 * x31)
    x43 = x26 * boys(3, x17)
    x44 = x29 * x43 + x31 * x7
    x45 = x28 * x44
    x46 = x10 * x45 + x32 * x7 + x42
    x47 = x29 * x46 + x39 * (-x33 + x36) + x41 * x7
    x48 = x38 * (2 * x19 * x20 * x21 * x25 * x30 - x28 * x43)
    x49 = x26 * boys(4, x17)
    x50 = x29 * x49 + x43 * x7
    x51 = x29 * x50 + x44 * x7 + x48
    x52 = x29 * x51 + x39 * (x32 - x45) + x46 * x7
    x53 = x4 * x9
    x54 = x10 * x53
    x55 = 2 * a + 2 * b + x37
    x56 = x55 ** (-1.0)
    x57 = 2 * x56
    x58 = (
        x3 * x41 - x46 * x54 + x57 * (x3 * x32 - x44 * x54 + x56 * (x3 * x31 - x43 * x54))
    )
    x59 = 3 * x56
    x60 = x11 - C[1]
    x61 = x13 * x28
    x62 = x27 * x60 + x31 * x61
    x63 = x28 * x62
    x64 = x27 * x61 + x35 * x60
    x65 = x38 * (-x63 + x64)
    x66 = x10 * x63 + x64 * x7
    x67 = x31 * x60 + x43 * x61
    x68 = x28 * x67
    x69 = x10 * x68 + x62 * x7
    x70 = x29 * x69 + x65 + x66 * x7
    x71 = x43 * x60 + x49 * x61
    x72 = x29 * x71 + x67 * x7
    x73 = x38 * (x62 - x68)
    x74 = x29 * x72 + x69 * x7 + x73
    x75 = (
        x3 * x70 - x54 * x74 + x57 * (x3 * x69 - x54 * x72 + x56 * (x3 * x67 - x54 * x71))
    )
    x76 = x3 * x66 - x54 * x69 + x56 * (x3 * x62 - x54 * x67)
    x77 = x13 * x68 + x42 + x60 * x62
    x78 = x48 + x60 * x67 + x61 * x71
    x79 = x13 * x63 + x40 + x60 * x64
    x80 = x29 * x77 + x7 * x79
    x81 = x29 * x78 + x7 * x77
    x82 = x3 * x80 - x54 * x81 + x56 * (x3 * x77 - x54 * x78)
    x83 = x3 * x79 - x54 * x77
    x84 = x60 * x79 + x61 * x77 + 2 * x65
    x85 = x60 * x77 + x61 * x78 + 2 * x73
    x86 = -x12 - A[1]
    x87 = x13 * x53
    x88 = x41 * x86 - x46 * x87
    x89 = x56 * (x46 * x86 - x51 * x87) + x70 * x86 - x74 * x87
    x90 = x56 * (x32 * x86 - x44 * x87) + x66 * x86 - x69 * x87
    x91 = (
        x57 * (x56 * (x44 * x86 - x50 * x87) + x69 * x86 - x72 * x87)
        + x80 * x86
        - x81 * x87
    )
    x92 = (
        x57 * (x56 * (x31 * x86 - x43 * x87) + x62 * x86 - x67 * x87)
        - x77 * x87
        + x79 * x86
    )
    x93 = -x14 - A[2]
    x94 = x15 * x53
    x95 = x41 * x93 - x46 * x94
    x96 = x70 * x93 - x74 * x94
    x97 = x56 * (x46 * x93 - x51 * x94)
    x98 = x66 * x93 - x69 * x94
    x99 = x80 * x93 - x81 * x94
    x100 = x56 * (x69 * x93 - x72 * x94)
    x101 = x56 * (x32 * x93 - x44 * x94)
    x102 = 2 / x55**2
    x103 = x102 * (x44 * x93 - x50 * x94)
    x104 = -x77 * x94 + x79 * x93
    x105 = x56 * (x77 * x93 - x78 * x94)
    x106 = x56 * (x62 * x93 - x67 * x94)
    x107 = x102 * (x67 * x93 - x71 * x94)
    x108 = x102 * (x31 * x93 - x43 * x94)

    # 54 item(s)
    S = numpy.array(
        [
            x22 * x58
            + x3 * x47
            - x52 * x54
            + x59
            * (
                x3 * x46
                - x51 * x54
                + x57 * (x3 * x44 - x50 * x54 + x56 * (x3 * x43 - x49 * x54))
            ),
            x23 * x58 + x75,
            x24 * x58,
            x22 * x76 + x75,
            x23 * x76 + x82,
            x24 * x76,
            0,
            0,
            0,
            x22 * x83 + x82,
            x23 * x83 + x3 * x84 - x54 * x85,
            x24 * x83,
            0,
            0,
            0,
            0,
            0,
            0,
            x22 * x88 + x47 * x86 - x52 * x87,
            x23 * x88 + x89,
            x24 * x88,
            x22 * x90 + x89,
            x23 * x90 + x91,
            x24 * x90,
            0,
            0,
            0,
            x22 * x92 + x91,
            x23 * x92
            + x59
            * (
                x57 * (x56 * (x43 * x86 - x49 * x87) + x67 * x86 - x71 * x87)
                + x77 * x86
                - x78 * x87
            )
            + x84 * x86
            - x85 * x87,
            x24 * x92,
            0,
            0,
            0,
            0,
            0,
            0,
            x22 * x95 + x47 * x93 - x52 * x94,
            x23 * x95 + x96,
            x24 * x95 + x97,
            x22 * x98 + x96,
            x23 * x98 + x99,
            x100 + x24 * x98,
            x101 * x22 + x97,
            x100 + x101 * x23,
            x101 * x24 + x103,
            x104 * x22 + x99,
            x104 * x23 + x84 * x93 - x85 * x94,
            x104 * x24 + x105,
            x100 + x106 * x22,
            x105 + x106 * x23,
            x106 * x24 + x107,
            x103 + x108 * x22,
            x107 + x108 * x23,
            x108 * x24 + 6 * (x43 * x93 - x49 * x94) / x55**3,
        ]
    )
    return S


def eri_1022(a, A, b, B, c, C, d, D):
    """Cartesian [ps|dd] 2-electron electron repulsion integral.

    Generated code; DO NOT modify by hand!"""

    x0 = a + b
    x1 = x0 ** (-1.0)
    x2 = -x1 * (a * A[0] + b * B[0])
    x3 = -x2 - A[0]
    x4 = 2 * c + 2 * d
    x5 = x4 ** (-1.0)
    x6 = numpy.pi**2.5
    x7 = c + d
    x8 = x0 * x7
    x9 = x0 + x7
    x10 = (x8 + numpy.sqrt(x9)) ** (-1.0)
    x11 = numpy.exp(
        -a * b * x1 * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2)
    )
    x12 = x7 ** (-1.0)
    x13 = C[0] - D[0]
    x14 = C[1] - D[1]
    x15 = C[2] - D[2]
    x16 = x15**2
    x17 = numpy.exp(-c * d * x12 * (x13**2 + x14**2 + x16))
    x18 = x9 ** (-1.0)
    x19 = x12 * (c * C[0] + d * D[0])
    x20 = -x19 - x2
    x21 = x12 * (c * C[1] + d * D[1])
    x22 = -x1 * (a * A[1] + b * B[1])
    x23 = -x21 - x22
    x24 = -x1 * (a * A[2] + b * B[2])
    x25 = -x12 * (c * C[2] + d * D[2]) - x24
    x26 = x18 * x8 * (x20**2 + x23**2 + x25**2)
    x27 = boys(1, x26)
    x28 = x0 * x18
    x29 = boys(2, x26)
    x30 = 2 * x10 * x11 * x17 * x6
    x31 = x29 * x30
    x32 = x5 * (2 * x10 * x11 * x17 * x27 * x6 - x28 * x31)
    x33 = x19 - C[0]
    x34 = x27 * x30
    x35 = x20 * x28
    x36 = x31 * x35 + x33 * x34
    x37 = boys(3, x26)
    x38 = x30 * x37
    x39 = x31 * x33 + x35 * x38
    x40 = x28 * x39
    x41 = x20 * x40 + x32 + x33 * x36
    x42 = x28 * x41
    x43 = boys(0, x26)
    x44 = x5 * (2 * x10 * x11 * x17 * x43 * x6 - x28 * x34)
    x45 = x30 * x43
    x46 = x33 * x45 + x34 * x35
    x47 = x28 * x36
    x48 = x20 * x47 + x33 * x46 + x44
    x49 = 3 * x5
    x50 = 2 * x5
    x51 = x20 * x42 + x33 * x48 + x50 * (x46 - x47)
    x52 = x5 * (2 * x10 * x11 * x17 * x29 * x6 - x28 * x38)
    x53 = x30 * boys(4, x26)
    x54 = x33 * x38 + x35 * x53
    x55 = x28 * x54
    x56 = x20 * x55 + x33 * x39 + x52
    x57 = x28 * x56
    x58 = x20 * x57 + x33 * x41 + x50 * (x36 - x40)
    x59 = x33 * x51 + x35 * x58 + x49 * (-x42 + x48)
    x60 = x5 * (2 * x10 * x11 * x17 * x37 * x6 - x28 * x53)
    x61 = x30 * boys(5, x26)
    x62 = x33 * x53 + x35 * x61
    x63 = x33 * x54 + x35 * x62 + x60
    x64 = x33 * x56 + x35 * x63 + x50 * (x39 - x55)
    x65 = x33 * x58 + x35 * x64 + x49 * (x41 - x57)
    x66 = x18 * x7
    x67 = x20 * x66
    x68 = 2 * a + 2 * b + x4
    x69 = x68 ** (-1.0)
    x70 = 2 * x69
    x71 = 3 * x69
    x72 = (
        x3 * x51
        - x58 * x67
        + x71
        * (
            x3 * x41
            - x56 * x67
            + x70 * (x3 * x39 - x54 * x67 + x69 * (x3 * x38 - x53 * x67))
        )
    )
    x73 = 4 * x69
    x74 = (
        x3 * x48 - x41 * x67 + x70 * (x3 * x36 - x39 * x67 + x69 * (x3 * x31 - x38 * x67))
    )
    x75 = x13 * x74
    x76 = x14 * x74
    x77 = x21 - C[1]
    x78 = x23 * x28
    x79 = x31 * x78 + x34 * x77
    x80 = x28 * x79
    x81 = x34 * x78 + x45 * x77
    x82 = x5 * (-x80 + x81)
    x83 = x20 * x80 + x33 * x81
    x84 = x31 * x77 + x38 * x78
    x85 = x28 * x84
    x86 = x20 * x85 + x33 * x79
    x87 = x28 * x86
    x88 = x20 * x87 + x33 * x83 + x82
    x89 = x5 * (x79 - x85)
    x90 = x38 * x77 + x53 * x78
    x91 = x28 * x90
    x92 = x20 * x91 + x33 * x84
    x93 = x28 * x92
    x94 = x20 * x93 + x33 * x86 + x89
    x95 = (
        x3 * x88 - x67 * x94 + x70 * (x3 * x86 - x67 * x92 + x69 * (x3 * x84 - x67 * x90))
    )
    x96 = x76 + x95
    x97 = x33 * x88 + x35 * x94 + x50 * (x83 - x87)
    x98 = x5 * (x84 - x91)
    x99 = x53 * x77 + x61 * x78
    x100 = x33 * x90 + x35 * x99
    x101 = x100 * x35 + x33 * x92 + x98
    x102 = x101 * x35 + x33 * x94 + x50 * (x86 - x93)
    x103 = (
        -x102 * x67
        + x3 * x97
        + x71
        * (
            -x101 * x67
            + x3 * x94
            + x70 * (-x100 * x67 + x3 * x92 + x69 * (x3 * x90 - x67 * x99))
        )
    )
    x104 = x23 * x85 + x32 + x77 * x79
    x105 = x104 * x28
    x106 = x23 * x80 + x44 + x77 * x81
    x107 = x5 * (-x105 + x106)
    x108 = x105 * x20 + x106 * x33
    x109 = x23 * x91 + x52 + x77 * x84
    x110 = x109 * x28
    x111 = x104 * x33 + x110 * x20
    x112 = x107 + x108 * x33 + x111 * x35
    x113 = x60 + x77 * x90 + x78 * x99
    x114 = x109 * x33 + x113 * x35
    x115 = x5 * (x104 - x110)
    x116 = x111 * x33 + x114 * x35 + x115
    x117 = (
        x112 * x3
        - x116 * x67
        + x70 * (x111 * x3 - x114 * x67 + x69 * (x109 * x3 - x113 * x67))
    )
    x118 = x117 + x14 * x95
    x119 = x15 * x95
    x120 = x3 * x83 - x67 * x86 + x69 * (x3 * x79 - x67 * x84)
    x121 = x120 * x13
    x122 = x120 * x14
    x123 = x108 * x3 - x111 * x67 + x69 * (x104 * x3 - x109 * x67)
    x124 = x122 + x123
    x125 = x104 * x77 + x110 * x23 + 2 * x89
    x126 = x109 * x77 + x113 * x78 + 2 * x98
    x127 = x105 * x23 + x106 * x77 + 2 * x82
    x128 = x125 * x35 + x127 * x33
    x129 = x125 * x33 + x126 * x35
    x130 = x123 * x14 + x128 * x3 - x129 * x67 + x69 * (x125 * x3 - x126 * x67)
    x131 = x123 * x15
    x132 = -x104 * x67 + x106 * x3
    x133 = x13 * x132
    x134 = x132 * x14
    x135 = -x125 * x67 + x127 * x3
    x136 = x134 + x135
    x137 = 3 * x107 + x125 * x78 + x127 * x77
    x138 = 3 * x115 + x125 * x77 + x126 * x78
    x139 = -x22 - A[1]
    x140 = x23 * x66
    x141 = x139 * x51 - x140 * x58
    x142 = x139 * x48 - x140 * x41
    x143 = x13 * x142
    x144 = x14 * x142
    x145 = x139 * x88 - x140 * x94 + x69 * (x139 * x41 - x140 * x56)
    x146 = x144 + x145
    x147 = -x102 * x140 + x139 * x97 + x69 * (x139 * x58 - x140 * x64)
    x148 = (
        x112 * x139
        - x116 * x140
        + x70 * (-x101 * x140 + x139 * x94 + x69 * (x139 * x56 - x140 * x63))
    )
    x149 = x14 * x145 + x148
    x150 = x145 * x15
    x151 = x139 * x83 - x140 * x86 + x69 * (x139 * x36 - x140 * x39)
    x152 = x13 * x151
    x153 = x14 * x151
    x154 = (
        x108 * x139
        - x111 * x140
        + x70 * (x139 * x86 - x140 * x92 + x69 * (x139 * x39 - x140 * x54))
    )
    x155 = x153 + x154
    x156 = (
        x128 * x139
        - x129 * x140
        + x14 * x154
        + x71
        * (
            x111 * x139
            - x114 * x140
            + x70 * (-x100 * x140 + x139 * x92 + x69 * (x139 * x54 - x140 * x62))
        )
    )
    x157 = x15 * x154
    x158 = (
        -x104 * x140
        + x106 * x139
        + x70 * (x139 * x79 - x140 * x84 + x69 * (x139 * x31 - x140 * x38))
    )
    x159 = x13 * x158
    x160 = x14 * x158
    x161 = (
        -x125 * x140
        + x127 * x139
        + x71
        * (
            x104 * x139
            - x109 * x140
            + x70 * (x139 * x84 - x140 * x90 + x69 * (x139 * x38 - x140 * x53))
        )
    )
    x162 = x160 + x161
    x163 = -x24 - A[2]
    x164 = x25 * x66
    x165 = x163 * x51 - x164 * x58
    x166 = x163 * x48 - x164 * x41
    x167 = x163 * x88 - x164 * x94
    x168 = x14 * x166 + x167
    x169 = -x102 * x164 + x163 * x97
    x170 = x69 * (x163 * x41 - x164 * x56)
    x171 = x15 * x166 + x170
    x172 = x69 * (x163 * x58 - x164 * x64)
    x173 = x112 * x163 - x116 * x164
    x174 = x14 * x167 + x173
    x175 = x69 * (-x101 * x164 + x163 * x94)
    x176 = x15 * x167 + x175
    x177 = 2 / x68**2
    x178 = x177 * (x163 * x56 - x164 * x63)
    x179 = x15 * x170 + x178
    x180 = x163 * x83 - x164 * x86
    x181 = x108 * x163 - x111 * x164
    x182 = x14 * x180 + x181
    x183 = x69 * (x163 * x86 - x164 * x92)
    x184 = x15 * x180 + x183
    x185 = x128 * x163 - x129 * x164 + x14 * x181
    x186 = x69 * (x111 * x163 - x114 * x164)
    x187 = x15 * x181 + x186
    x188 = x177 * (-x100 * x164 + x163 * x92)
    x189 = x15 * x183 + x188
    x190 = x69 * (x163 * x36 - x164 * x39)
    x191 = x14 * x190 + x183
    x192 = x177 * (x163 * x39 - x164 * x54)
    x193 = x15 * x190 + x192
    x194 = x14 * x183 + x186
    x195 = 6 / x68**3
    x196 = x15 * x192 + x195 * (x163 * x54 - x164 * x62)
    x197 = -x104 * x164 + x106 * x163
    x198 = -x125 * x164 + x127 * x163
    x199 = x14 * x197 + x198
    x200 = x69 * (x104 * x163 - x109 * x164)
    x201 = x15 * x197 + x200
    x202 = x69 * (x125 * x163 - x126 * x164)
    x203 = x177 * (x109 * x163 - x113 * x164)
    x204 = x15 * x200 + x203
    x205 = x69 * (x163 * x79 - x164 * x84)
    x206 = x14 * x205 + x200
    x207 = x177 * (x163 * x84 - x164 * x90)
    x208 = x15 * x205 + x207
    x209 = x15 * x207 + x195 * (x163 * x90 - x164 * x99)
    x210 = x177 * (x163 * x31 - x164 * x38)
    x211 = x14 * x210 + x207
    x212 = x195 * (x163 * x38 - x164 * x53)
    x213 = x15 * x210 + x212

    # 108 item(s)
    S = numpy.array(
        [
            x13 * x72
            + x13 * (x72 + x75)
            + x3 * x59
            - x65 * x67
            + x73
            * (
                x3 * x58
                - x64 * x67
                + x71
                * (
                    x3 * x56
                    - x63 * x67
                    + x70 * (x3 * x54 - x62 * x67 + x69 * (x3 * x53 - x61 * x67))
                )
            ),
            x103 + x13 * x96 + x14 * x72,
            x15 * x72 + x15 * x75,
            x118 + x14 * x96,
            x119 + x15 * x76,
            x16 * x74,
            x103 + x13 * x95 + x13 * (x121 + x95),
            x118 + x124 * x13,
            x119 + x121 * x15,
            x124 * x14 + x130,
            x122 * x15 + x131,
            x120 * x16,
            0,
            0,
            0,
            0,
            0,
            0,
            x117 + x123 * x13 + x13 * (x123 + x133),
            x13 * x136 + x130,
            x131 + x133 * x15,
            x135 * x14 + x136 * x14 + x137 * x3 - x138 * x67,
            x134 * x15 + x135 * x15,
            x132 * x16,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            x13 * x141 + x13 * (x141 + x143) + x139 * x59 - x140 * x65,
            x13 * x146 + x14 * x141 + x147,
            x141 * x15 + x143 * x15,
            x14 * x146 + x149,
            x144 * x15 + x150,
            x142 * x16,
            x13 * x145 + x13 * (x145 + x152) + x147,
            x13 * x155 + x149,
            x15 * x152 + x150,
            x14 * x155 + x156,
            x15 * x153 + x157,
            x151 * x16,
            0,
            0,
            0,
            0,
            0,
            0,
            x13 * x154 + x13 * (x154 + x159) + x148,
            x13 * x162 + x156,
            x15 * x159 + x157,
            x137 * x139
            - x138 * x140
            + x14 * x161
            + x14 * x162
            + x73
            * (
                x125 * x139
                - x126 * x140
                + x71
                * (
                    x109 * x139
                    - x113 * x140
                    + x70 * (x139 * x90 - x140 * x99 + x69 * (x139 * x53 - x140 * x61))
                )
            ),
            x15 * x160 + x15 * x161,
            x158 * x16,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            x13 * x165 + x13 * (x13 * x166 + x165) + x163 * x59 - x164 * x65,
            x13 * x168 + x14 * x165 + x169,
            x13 * x171 + x15 * x165 + x172,
            x14 * x168 + x174,
            x14 * x171 + x176,
            x15 * x171 + x179,
            x13 * x167 + x13 * (x13 * x180 + x167) + x169,
            x13 * x182 + x174,
            x13 * x184 + x176,
            x14 * x182 + x185,
            x14 * x184 + x187,
            x15 * x184 + x189,
            x13 * x170 + x13 * (x13 * x190 + x170) + x172,
            x13 * x191 + x14 * x170 + x175,
            x13 * x193 + x179,
            x14 * x191 + x194,
            x14 * x193 + x189,
            x15 * x193 + x196,
            x13 * x181 + x13 * (x13 * x197 + x181) + x173,
            x13 * x199 + x185,
            x13 * x201 + x187,
            x137 * x163 - x138 * x164 + x14 * x198 + x14 * x199,
            x14 * x201 + x15 * x198 + x202,
            x15 * x201 + x204,
            x13 * x183 + x13 * (x13 * x205 + x183) + x175,
            x13 * x206 + x194,
            x13 * x208 + x189,
            x14 * x200 + x14 * x206 + x202,
            x14 * x208 + x204,
            x15 * x208 + x209,
            x13 * x192 + x13 * (x13 * x210 + x192) + x178,
            x13 * x211 + x14 * x192 + x188,
            x13 * x213 + x196,
            x14 * x207 + x14 * x211 + x203,
            x14 * x213 + x209,
            x15 * x212 + x15 * x213 + 24 * (x163 * x53 - x164 * x61) / x68**4,
        ]
    )
    return S


def eri_1100(a, A, b, B, c, C, d, D):
    """Cartesian [pp|ss] 2-electron electron repulsion integral.

    Generated code; DO NOT modify by hand!"""

    x0 = numpy.pi**2.5
    x1 = a + b
    x2 = c + d
    x3 = x1 * x2
    x4 = x1 + x2
    x5 = (x3 + numpy.sqrt(x4)) ** (-1.0)
    x6 = x1 ** (-1.0)
    x7 = A[0] - B[0]
    x8 = A[1] - B[1]
    x9 = A[2] - B[2]
    x10 = numpy.exp(-a * b * x6 * (x7**2 + x8**2 + x9**2))
    x11 = x2 ** (-1.0)
    x12 = numpy.exp(
        -c * d * x11 * ((C[0] - D[0]) ** 2 + (C[1] - D[1]) ** 2 + (C[2] - D[2]) ** 2)
    )
    x13 = x4 ** (-1.0)
    x14 = -x6 * (a * A[0] + b * B[0])
    x15 = -x11 * (c * C[0] + d * D[0]) - x14
    x16 = -x6 * (a * A[1] + b * B[1])
    x17 = -x11 * (c * C[1] + d * D[1]) - x16
    x18 = -x6 * (a * A[2] + b * B[2])
    x19 = -x11 * (c * C[2] + d * D[2]) - x18
    x20 = x13 * x3 * (x15**2 + x17**2 + x19**2)
    x21 = boys(0, x20)
    x22 = x13 * x2
    x23 = 2 * x0 * x10 * x12 * x5
    x24 = x23 * boys(1, x20)
    x25 = (2 * x0 * x10 * x12 * x21 * x5 - x22 * x24) / (2 * a + 2 * b)
    x26 = -x14 - A[0]
    x27 = x21 * x23
    x28 = x15 * x22
    x29 = -x24 * x28 + x26 * x27
    x30 = x23 * boys(2, x20)
    x31 = -x16 - A[1]
    x32 = x17 * x22
    x33 = -x24 * x32 + x27 * x31
    x34 = x24 * x31 - x30 * x32
    x35 = x26 * x33 - x28 * x34
    x36 = -x18 - A[2]
    x37 = x19 * x22
    x38 = -x24 * x37 + x27 * x36
    x39 = x24 * x36 - x30 * x37
    x40 = x26 * x38 - x28 * x39
    x41 = x31 * x38 - x32 * x39

    # 9 item(s)
    S = numpy.array(
        [
            x25 + x26 * x29 - x28 * (x24 * x26 - x28 * x30) + x29 * x7,
            x29 * x8 + x35,
            x29 * x9 + x40,
            x33 * x7 + x35,
            x25 + x31 * x33 - x32 * x34 + x33 * x8,
            x33 * x9 + x41,
            x38 * x7 + x40,
            x38 * x8 + x41,
            x25 + x36 * x38 - x37 * x39 + x38 * x9,
        ]
    )
    return S


def eri_1101(a, A, b, B, c, C, d, D):
    """Cartesian [pp|sp] 2-electron electron repulsion integral.

    Generated code; DO NOT modify by hand!"""

    x0 = 2 * a + 2 * b
    x1 = x0 ** (-1.0)
    x2 = c + d
    x3 = x2 ** (-1.0)
    x4 = x3 * (c * C[0] + d * D[0])
    x5 = x4 - C[0]
    x6 = a + b
    x7 = x2 + x6
    x8 = x7 ** (-1.0)
    x9 = x6 ** (-1.0)
    x10 = -x9 * (a * A[0] + b * B[0])
    x11 = -x10 - x4
    x12 = x3 * (c * C[1] + d * D[1])
    x13 = -x9 * (a * A[1] + b * B[1])
    x14 = -x12 - x13
    x15 = -x9 * (a * A[2] + b * B[2])
    x16 = -x15 - x3 * (c * C[2] + d * D[2])
    x17 = x2 * x6
    x18 = x17 * x8 * (x11**2 + x14**2 + x16**2)
    x19 = boys(1, x18)
    x20 = numpy.pi**2.5
    x21 = (x17 + numpy.sqrt(x7)) ** (-1.0)
    x22 = A[0] - B[0]
    x23 = A[1] - B[1]
    x24 = A[2] - B[2]
    x25 = numpy.exp(-a * b * x9 * (x22**2 + x23**2 + x24**2))
    x26 = C[0] - D[0]
    x27 = C[1] - D[1]
    x28 = C[2] - D[2]
    x29 = numpy.exp(-c * d * x3 * (x26**2 + x27**2 + x28**2))
    x30 = 2 * x20 * x21 * x25 * x29
    x31 = x19 * x30
    x32 = x30 * boys(2, x18)
    x33 = x6 * x8
    x34 = x11 * x33
    x35 = x31 * x5 + x32 * x34
    x36 = x2 * x8
    x37 = x35 * x36
    x38 = boys(0, x18)
    x39 = x30 * x38
    x40 = x31 * x34 + x39 * x5
    x41 = x1 * (-x37 + x40)
    x42 = x1 * (2 * x20 * x21 * x25 * x29 * x38 - x31 * x36)
    x43 = -x10 - A[0]
    x44 = x11 * x36
    x45 = -x31 * x44 + x39 * x43
    x46 = x31 * x43 - x32 * x44
    x47 = x42 + x43 * x45 - x44 * x46
    x48 = (2 * c + 2 * d + x0) ** (-1.0)
    x49 = x1 * (2 * x19 * x20 * x21 * x25 * x29 - x32 * x36)
    x50 = x30 * boys(3, x18)
    x51 = x32 * x43 - x44 * x50
    x52 = -x11 * x37 + x40 * x43 + x46 * x48
    x53 = x32 * x5 + x34 * x50
    x54 = x26 * x45 + x52
    x55 = x12 - C[1]
    x56 = x14 * x33
    x57 = x31 * x55 + x32 * x56
    x58 = x36 * x57
    x59 = x31 * x56 + x39 * x55
    x60 = x1 * (-x58 + x59)
    x61 = -x11 * x58 + x43 * x59
    x62 = x32 * x55 + x50 * x56
    x63 = x27 * x45 + x61
    x64 = x28 * x45
    x65 = -x13 - A[1]
    x66 = x14 * x36
    x67 = x31 * x65 - x32 * x66
    x68 = x32 * x65 - x50 * x66
    x69 = -x31 * x66 + x39 * x65
    x70 = x43 * x69 - x44 * x67
    x71 = -x14 * x37 + x40 * x65
    x72 = x35 * x65 - x53 * x66
    x73 = x26 * x70 + x43 * x71 - x44 * x72 + x48 * (x43 * x67 - x44 * x68)
    x74 = -x14 * x58 + x48 * x67 + x59 * x65
    x75 = x48 * x68 + x57 * x65 - x62 * x66
    x76 = x27 * x70 + x43 * x74 - x44 * x75
    x77 = x28 * x70
    x78 = -x15 - A[2]
    x79 = x16 * x36
    x80 = x31 * x78 - x32 * x79
    x81 = x43 * x80
    x82 = x32 * x78 - x50 * x79
    x83 = x44 * x82
    x84 = -x31 * x79 + x39 * x78
    x85 = x43 * x84 - x44 * x80
    x86 = -x16 * x37 + x40 * x78
    x87 = x35 * x78 - x53 * x79
    x88 = x26 * x85 + x43 * x86 - x44 * x87 + x48 * (x81 - x83)
    x89 = -x16 * x58 + x59 * x78
    x90 = x57 * x78 - x62 * x79
    x91 = x27 * x85 + x43 * x89 - x44 * x90
    x92 = x28 * x85 + x48 * x81 - x48 * x83
    x93 = x26 * x69 + x71
    x94 = x27 * x69 + x74
    x95 = x28 * x69
    x96 = x42 + x65 * x69 - x66 * x67
    x97 = x65 * x84 - x66 * x80
    x98 = x26 * x97 + x65 * x86 - x66 * x87
    x99 = x65 * x80
    x100 = x66 * x82
    x101 = x27 * x97 + x48 * (-x100 + x99) + x65 * x89 - x66 * x90
    x102 = -x100 * x48 + x28 * x97 + x48 * x99
    x103 = x26 * x84 + x86
    x104 = x27 * x84 + x89
    x105 = x48 * x80
    x106 = x105 + x28 * x84
    x107 = x42 + x78 * x84 - x79 * x80
    x108 = x79 * x82

    # 27 item(s)
    S = numpy.array(
        [
            x22 * x54
            + x26 * x47
            + x41
            + x43 * x52
            - x44 * (x35 * x43 - x44 * x53 + x48 * x51)
            + x48 * (x43 * x46 - x44 * x51 + x49),
            x22 * x63 + x27 * x47 + x43 * x61 - x44 * (x43 * x57 - x44 * x62) + x60,
            x22 * x64 + x28 * x47,
            x23 * x54 + x73,
            x23 * x63 + x76,
            x23 * x64 + x77,
            x24 * x54 + x88,
            x24 * x63 + x91,
            x24 * x64 + x92,
            x22 * x93 + x73,
            x22 * x94 + x76,
            x22 * x95 + x77,
            x23 * x93 + x26 * x96 + x41 + x65 * x71 - x66 * x72,
            x23 * x94
            + x27 * x96
            + x48 * (x49 + x65 * x67 - x66 * x68)
            + x60
            + x65 * x74
            - x66 * x75,
            x23 * x95 + x28 * x96,
            x24 * x93 + x98,
            x101 + x24 * x94,
            x102 + x24 * x95,
            x103 * x22 + x88,
            x104 * x22 + x91,
            x106 * x22 + x92,
            x103 * x23 + x98,
            x101 + x104 * x23,
            x102 + x106 * x23,
            x103 * x24 + x107 * x26 + x41 + x78 * x86 - x79 * x87,
            x104 * x24 + x107 * x27 + x60 + x78 * x89 - x79 * x90,
            x105 * x78
            + x106 * x24
            + x107 * x28
            - x108 * x48
            + x48 * (-x108 + x49 + x78 * x80),
        ]
    )
    return S


def eri_1102(a, A, b, B, c, C, d, D):
    """Cartesian [pp|sd] 2-electron electron repulsion integral.

    Generated code; DO NOT modify by hand!"""

    x0 = 2 * a + 2 * b
    x1 = x0 ** (-1.0)
    x2 = 2 * c + 2 * d
    x3 = x2 ** (-1.0)
    x4 = numpy.pi**2.5
    x5 = a + b
    x6 = c + d
    x7 = x5 * x6
    x8 = x5 + x6
    x9 = (x7 + numpy.sqrt(x8)) ** (-1.0)
    x10 = x5 ** (-1.0)
    x11 = A[0] - B[0]
    x12 = A[1] - B[1]
    x13 = A[2] - B[2]
    x14 = numpy.exp(-a * b * x10 * (x11**2 + x12**2 + x13**2))
    x15 = x6 ** (-1.0)
    x16 = C[0] - D[0]
    x17 = C[1] - D[1]
    x18 = C[2] - D[2]
    x19 = x18**2
    x20 = numpy.exp(-c * d * x15 * (x16**2 + x17**2 + x19))
    x21 = x8 ** (-1.0)
    x22 = x15 * (c * C[0] + d * D[0])
    x23 = -x10 * (a * A[0] + b * B[0])
    x24 = -x22 - x23
    x25 = x15 * (c * C[1] + d * D[1])
    x26 = -x10 * (a * A[1] + b * B[1])
    x27 = -x25 - x26
    x28 = -x10 * (a * A[2] + b * B[2])
    x29 = -x15 * (c * C[2] + d * D[2]) - x28
    x30 = x21 * x7 * (x24**2 + x27**2 + x29**2)
    x31 = boys(1, x30)
    x32 = -2 * x14 * x20 * x31 * x4 * x9
    x33 = x21 * x5
    x34 = boys(2, x30)
    x35 = 2 * x14 * x20 * x4 * x9
    x36 = x34 * x35
    x37 = x3 * (-x32 - x33 * x36)
    x38 = x22 - C[0]
    x39 = x31 * x35
    x40 = x24 * x33
    x41 = x36 * x40 + x38 * x39
    x42 = x35 * boys(3, x30)
    x43 = x36 * x38 + x40 * x42
    x44 = x37 + x38 * x41 + x40 * x43
    x45 = x21 * x6
    x46 = x44 * x45
    x47 = boys(0, x30)
    x48 = -2 * x14 * x20 * x4 * x47 * x9
    x49 = x3 * (-x33 * x39 - x48)
    x50 = x35 * x47
    x51 = x38 * x50 + x39 * x40
    x52 = x38 * x51 + x40 * x41 + x49
    x53 = x1 * (-x46 + x52)
    x54 = -x23 - A[0]
    x55 = x0 + x2
    x56 = x55 ** (-1.0)
    x57 = x24 * x45
    x58 = x36 * x54 - x42 * x57
    x59 = x43 * x45
    x60 = -x24 * x59 + x41 * x54 + x56 * x58
    x61 = 2 * x56
    x62 = -x24 * x46 + x52 * x54 + x60 * x61
    x63 = -2 * x14 * x20 * x34 * x4 * x9
    x64 = x3 * (-x33 * x42 - x63)
    x65 = x35 * boys(4, x30)
    x66 = x38 * x42 + x40 * x65
    x67 = x38 * x43 + x40 * x66 + x64
    x68 = x42 * x54 - x57 * x65
    x69 = x43 * x54 + x56 * x68 - x57 * x66
    x70 = x41 * x45
    x71 = x1 * (x51 - x70)
    x72 = x1 * (-x32 - x36 * x45)
    x73 = -x36 * x57 + x39 * x54
    x74 = -x24 * x70 + x51 * x54 + x56 * x73
    x75 = x54 * x74 + x56 * (x54 * x73 - x57 * x58 + x72) - x57 * x60 + x71
    x76 = x1 * (x41 - x59)
    x77 = x1 * (-x42 * x45 - x63)
    x78 = x1 * (-x39 * x45 - x48)
    x79 = -x39 * x57 + x50 * x54
    x80 = x54 * x79 - x57 * x73 + x78
    x81 = x16 * x80
    x82 = x16 * x79
    x83 = x16 * x74 + x16 * (x74 + x82) + x62
    x84 = x25 - C[1]
    x85 = x27 * x33
    x86 = x36 * x85 + x39 * x84
    x87 = x36 * x84 + x42 * x85
    x88 = x38 * x86 + x40 * x87
    x89 = x45 * x88
    x90 = x39 * x85 + x50 * x84
    x91 = x38 * x90 + x40 * x86
    x92 = x1 * (-x89 + x91)
    x93 = x45 * x87
    x94 = x1 * (x86 - x93)
    x95 = -x24 * x93 + x54 * x86
    x96 = x42 * x84 + x65 * x85
    x97 = x54 * x87 - x57 * x96
    x98 = -x24 * x89 + x54 * x91 + x56 * x95
    x99 = x38 * x87 + x40 * x96
    x100 = x17 * x80
    x101 = x45 * x86
    x102 = x1 * (-x101 + x90)
    x103 = -x101 * x24 + x54 * x90
    x104 = x102 + x103 * x54 - x57 * x95
    x105 = x100 + x104
    x106 = x17 * x79
    x107 = x103 + x106
    x108 = x107 * x16 + x17 * x74 + x98
    x109 = x18 * x74 + x18 * x82
    x110 = x37 + x84 * x86 + x85 * x87
    x111 = x110 * x45
    x112 = x49 + x84 * x90 + x85 * x86
    x113 = x1 * (-x111 + x112)
    x114 = -x111 * x24 + x112 * x54
    x115 = x64 + x84 * x87 + x85 * x96
    x116 = x103 * x17 + x107 * x17 + x114
    x117 = x103 * x18 + x106 * x18
    x118 = x19 * x79
    x119 = -x26 - A[1]
    x120 = x27 * x45
    x121 = x119 * x39 - x120 * x36
    x122 = x119 * x36 - x120 * x42
    x123 = x119 * x51 - x27 * x70
    x124 = x119 * x41 - x27 * x59
    x125 = x123 * x54 - x124 * x57 + x56 * (x121 * x54 - x122 * x57)
    x126 = x119 * x50 - x120 * x39
    x127 = -x121 * x57 + x126 * x54
    x128 = x127 * x16
    x129 = x119 * x52 - x27 * x46
    x130 = x119 * x42 - x120 * x65
    x131 = x119 * x43 - x120 * x66
    x132 = x119 * x44 - x120 * x67
    x133 = (
        x125 * x16
        + x129 * x54
        - x132 * x57
        + x16 * (x125 + x128)
        + x61 * (x124 * x54 - x131 * x57 + x56 * (x122 * x54 - x130 * x57))
    )
    x134 = x119 * x86 + x122 * x56 - x27 * x93
    x135 = x119 * x87 - x120 * x96 + x130 * x56
    x136 = x127 * x17
    x137 = -x101 * x27 + x119 * x90 + x121 * x56
    x138 = -x134 * x57 + x137 * x54
    x139 = x136 + x138
    x140 = x119 * x91 + x124 * x56 - x27 * x89
    x141 = x119 * x88 - x120 * x99 + x131 * x56
    x142 = (
        x125 * x17
        + x139 * x16
        + x140 * x54
        - x141 * x57
        + x56 * (x134 * x54 - x135 * x57)
    )
    x143 = x125 * x18 + x128 * x18
    x144 = -x111 * x27 + x112 * x119 + x134 * x61
    x145 = x110 * x119 - x115 * x120 + x135 * x61
    x146 = x138 * x17 + x139 * x17 + x144 * x54 - x145 * x57
    x147 = x136 * x18 + x138 * x18
    x148 = x127 * x19
    x149 = -x28 - A[2]
    x150 = x29 * x45
    x151 = x149 * x39 - x150 * x36
    x152 = x151 * x54
    x153 = x149 * x36 - x150 * x42
    x154 = x153 * x57
    x155 = x149 * x51 - x29 * x70
    x156 = x149 * x41 - x29 * x59
    x157 = x155 * x54 - x156 * x57 + x56 * (x152 - x154)
    x158 = x149 * x50 - x150 * x39
    x159 = -x151 * x57 + x158 * x54
    x160 = x149 * x52 - x29 * x46
    x161 = x153 * x54
    x162 = x149 * x42 - x150 * x65
    x163 = x162 * x57
    x164 = x156 * x54
    x165 = x149 * x43 - x150 * x66
    x166 = x165 * x57
    x167 = x149 * x44 - x150 * x67
    x168 = (
        x157 * x16
        + x16 * (x157 + x159 * x16)
        + x160 * x54
        - x167 * x57
        + x61 * (x164 - x166 + x56 * (x161 - x163))
    )
    x169 = x149 * x86 - x29 * x93
    x170 = x169 * x54
    x171 = x149 * x87 - x150 * x96
    x172 = x171 * x57
    x173 = -x101 * x29 + x149 * x90
    x174 = -x169 * x57 + x173 * x54
    x175 = x159 * x17 + x174
    x176 = x149 * x91 - x29 * x89
    x177 = x149 * x88 - x150 * x99
    x178 = x157 * x17 + x16 * x175 + x176 * x54 - x177 * x57 + x56 * (x170 - x172)
    x179 = x152 * x56 - x154 * x56
    x180 = x159 * x18 + x179
    x181 = (
        x157 * x18
        + x16 * x180
        + x164 * x56
        - x166 * x56
        + x56 * (x161 * x56 - x163 * x56)
    )
    x182 = -x111 * x29 + x112 * x149
    x183 = x110 * x149 - x115 * x150
    x184 = x17 * x174 + x17 * x175 + x182 * x54 - x183 * x57
    x185 = x17 * x180 + x170 * x56 - x172 * x56 + x174 * x18
    x186 = 2 / x55**2
    x187 = x161 * x186 - x163 * x186 + x179 * x18 + x18 * x180
    x188 = x126 * x16
    x189 = x123 * x16 + x129 + x16 * (x123 + x188)
    x190 = x126 * x17
    x191 = x137 + x190
    x192 = x123 * x17 + x140 + x16 * x191
    x193 = x123 * x18 + x18 * x188
    x194 = x137 * x17 + x144 + x17 * x191
    x195 = x137 * x18 + x18 * x190
    x196 = x126 * x19
    x197 = x119 * x123 - x120 * x124 + x71
    x198 = x119 * x126 - x120 * x121 + x78
    x199 = x16 * x198
    x200 = x17 * x198
    x201 = x102 + x119 * x137 - x120 * x134 + x56 * (x119 * x121 - x120 * x122 + x72)
    x202 = x200 + x201
    x203 = x119 * x155 - x120 * x156
    x204 = x119 * x158 - x120 * x151
    x205 = x119 * x160 - x120 * x167 + x16 * x203 + x16 * (x16 * x204 + x203)
    x206 = x119 * x156
    x207 = x120 * x165
    x208 = x119 * x151
    x209 = x120 * x153
    x210 = x119 * x173 - x120 * x169 + x56 * (x208 - x209)
    x211 = x17 * x204 + x210
    x212 = x119 * x176 - x120 * x177 + x16 * x211 + x17 * x203 + x56 * (x206 - x207)
    x213 = x208 * x56 - x209 * x56
    x214 = x18 * x204 + x213
    x215 = x16 * x214 + x18 * x203 + x206 * x56 - x207 * x56
    x216 = x119 * x153
    x217 = x120 * x162
    x218 = x119 * x169
    x219 = x120 * x171
    x220 = (
        x119 * x182
        - x120 * x183
        + x17 * x210
        + x17 * x211
        + x61 * (x218 - x219 + x56 * (x216 - x217))
    )
    x221 = (
        x17 * x214
        + x18 * x210
        + x218 * x56
        - x219 * x56
        + x56 * (x216 * x56 - x217 * x56)
    )
    x222 = x18 * x213 + x18 * x214 + x186 * x216 - x186 * x217
    x223 = x155 * x16 + x16 * (x155 + x158 * x16) + x160
    x224 = x158 * x17 + x173
    x225 = x155 * x17 + x16 * x224 + x176
    x226 = x151 * x56
    x227 = x158 * x18 + x226
    x228 = x156 * x56
    x229 = x155 * x18 + x16 * x227 + x228
    x230 = x17 * x173 + x17 * x224 + x182
    x231 = x169 * x56
    x232 = x17 * x227 + x173 * x18 + x231
    x233 = x153 * x186 + x18 * x226 + x18 * x227
    x234 = x149 * x155 - x150 * x156 + x71
    x235 = x149 * x158 - x150 * x151 + x78
    x236 = x102 + x149 * x173 - x150 * x169
    x237 = x17 * x235 + x236
    x238 = x150 * x165
    x239 = x150 * x153
    x240 = x149 * x226 - x239 * x56 + x56 * (x149 * x151 - x239 + x72)
    x241 = x18 * x235 + x240
    x242 = x150 * x171
    x243 = x149 * x153
    x244 = x150 * x162

    # 54 item(s)
    S = numpy.array(
        [
            x11 * x83
            + x16 * x75
            + x16 * (x75 + x81)
            + x53
            + x54 * x62
            - x57 * (x44 * x54 - x57 * x67 + x61 * x69)
            + x61 * (x54 * x60 + x56 * (x54 * x58 - x57 * x68 + x77) - x57 * x69 + x76),
            x105 * x16
            + x108 * x11
            + x17 * x75
            + x54 * x98
            + x56 * (x54 * x95 - x57 * x97 + x94)
            - x57 * (x54 * x88 + x56 * x97 - x57 * x99)
            + x92,
            x109 * x11 + x18 * x75 + x18 * x81,
            x104 * x17
            + x105 * x17
            + x11 * x116
            + x113
            + x114 * x54
            - x57 * (x110 * x54 - x115 * x57),
            x100 * x18 + x104 * x18 + x11 * x117,
            x11 * x118 + x19 * x80,
            x12 * x83 + x133,
            x108 * x12 + x142,
            x109 * x12 + x143,
            x116 * x12 + x146,
            x117 * x12 + x147,
            x118 * x12 + x148,
            x13 * x83 + x168,
            x108 * x13 + x178,
            x109 * x13 + x181,
            x116 * x13 + x184,
            x117 * x13 + x185,
            x118 * x13 + x187,
            x11 * x189 + x133,
            x11 * x192 + x142,
            x11 * x193 + x143,
            x11 * x194 + x146,
            x11 * x195 + x147,
            x11 * x196 + x148,
            x119 * x129
            + x12 * x189
            - x120 * x132
            + x16 * x197
            + x16 * (x197 + x199)
            + x53,
            x119 * x140
            + x12 * x192
            - x120 * x141
            + x16 * x202
            + x17 * x197
            + x56 * (x119 * x124 - x120 * x131 + x76)
            + x92,
            x12 * x193 + x18 * x197 + x18 * x199,
            x113
            + x119 * x144
            + x12 * x194
            - x120 * x145
            + x17 * x201
            + x17 * x202
            + x61
            * (x119 * x134 - x120 * x135 + x56 * (x119 * x122 - x120 * x130 + x77) + x94),
            x12 * x195 + x18 * x200 + x18 * x201,
            x12 * x196 + x19 * x198,
            x13 * x189 + x205,
            x13 * x192 + x212,
            x13 * x193 + x215,
            x13 * x194 + x220,
            x13 * x195 + x221,
            x13 * x196 + x222,
            x11 * x223 + x168,
            x11 * x225 + x178,
            x11 * x229 + x181,
            x11 * x230 + x184,
            x11 * x232 + x185,
            x11 * x233 + x187,
            x12 * x223 + x205,
            x12 * x225 + x212,
            x12 * x229 + x215,
            x12 * x230 + x220,
            x12 * x232 + x221,
            x12 * x233 + x222,
            x13 * x223
            + x149 * x160
            - x150 * x167
            + x16 * x234
            + x16 * (x16 * x235 + x234)
            + x53,
            x13 * x225 + x149 * x176 - x150 * x177 + x16 * x237 + x17 * x234 + x92,
            x13 * x229
            + x149 * x228
            + x16 * x241
            + x18 * x234
            - x238 * x56
            + x56 * (x149 * x156 - x238 + x76),
            x113 + x13 * x230 + x149 * x182 - x150 * x183 + x17 * x236 + x17 * x237,
            x13 * x232
            + x149 * x231
            + x17 * x241
            + x18 * x236
            - x242 * x56
            + x56 * (x149 * x169 - x242 + x94),
            x13 * x233
            + x18 * x240
            + x18 * x241
            + x186 * x243
            - x186 * x244
            + x61 * (x243 * x56 - x244 * x56 + x56 * (x243 - x244 + x77)),
        ]
    )
    return S


def eri_1110(a, A, b, B, c, C, d, D):
    """Cartesian [pp|ps] 2-electron electron repulsion integral.

    Generated code; DO NOT modify by hand!"""

    x0 = 2 * a + 2 * b
    x1 = x0 ** (-1.0)
    x2 = c + d
    x3 = x2 ** (-1.0)
    x4 = x3 * (c * C[0] + d * D[0])
    x5 = x4 - C[0]
    x6 = a + b
    x7 = x2 + x6
    x8 = x7 ** (-1.0)
    x9 = x6 ** (-1.0)
    x10 = -x9 * (a * A[0] + b * B[0])
    x11 = -x10 - x4
    x12 = x3 * (c * C[1] + d * D[1])
    x13 = -x9 * (a * A[1] + b * B[1])
    x14 = -x12 - x13
    x15 = -x9 * (a * A[2] + b * B[2])
    x16 = -x15 - x3 * (c * C[2] + d * D[2])
    x17 = x2 * x6
    x18 = x17 * x8 * (x11**2 + x14**2 + x16**2)
    x19 = boys(1, x18)
    x20 = numpy.pi**2.5
    x21 = (x17 + numpy.sqrt(x7)) ** (-1.0)
    x22 = A[0] - B[0]
    x23 = A[1] - B[1]
    x24 = A[2] - B[2]
    x25 = numpy.exp(-a * b * x9 * (x22**2 + x23**2 + x24**2))
    x26 = numpy.exp(
        -c * d * x3 * ((C[0] - D[0]) ** 2 + (C[1] - D[1]) ** 2 + (C[2] - D[2]) ** 2)
    )
    x27 = 2 * x20 * x21 * x25 * x26
    x28 = x19 * x27
    x29 = boys(2, x18)
    x30 = x27 * x29
    x31 = x6 * x8
    x32 = x11 * x31
    x33 = x28 * x5 + x30 * x32
    x34 = x2 * x8
    x35 = x33 * x34
    x36 = boys(0, x18)
    x37 = x27 * x5
    x38 = x28 * x32 + x36 * x37
    x39 = x1 * (-x35 + x38)
    x40 = (2 * c + 2 * d + x0) ** (-1.0)
    x41 = x1 * (2 * x19 * x20 * x21 * x25 * x26 - x30 * x34)
    x42 = -x10 - A[0]
    x43 = x11 * x34
    x44 = x28 * x42 - x30 * x43
    x45 = x27 * boys(3, x18)
    x46 = x30 * x42 - x43 * x45
    x47 = -x11 * x35 + x38 * x42 + x40 * x44
    x48 = x29 * x37 + x32 * x45
    x49 = x12 - C[1]
    x50 = x14 * x31
    x51 = x28 * x49 + x30 * x50
    x52 = x34 * x51
    x53 = x27 * x36 * x49 + x28 * x50
    x54 = x1 * (-x52 + x53)
    x55 = -x11 * x52 + x42 * x53
    x56 = x30 * x49 + x45 * x50
    x57 = -x13 - A[1]
    x58 = x14 * x34
    x59 = x28 * x57 - x30 * x58
    x60 = x30 * x57 - x45 * x58
    x61 = -x14 * x35 + x38 * x57
    x62 = x33 * x57 - x48 * x58
    x63 = x40 * (x42 * x59 - x43 * x60) + x42 * x61 - x43 * x62
    x64 = -x14 * x52 + x40 * x59 + x53 * x57
    x65 = x40 * x60 + x51 * x57 - x56 * x58
    x66 = x42 * x64 - x43 * x65
    x67 = -x15 - A[2]
    x68 = x16 * x34
    x69 = x28 * x67 - x30 * x68
    x70 = x42 * x69
    x71 = x30 * x67 - x45 * x68
    x72 = x43 * x71
    x73 = -x16 * x35 + x38 * x67
    x74 = x33 * x67 - x48 * x68
    x75 = x40 * (x70 - x72) + x42 * x73 - x43 * x74
    x76 = -x16 * x52 + x53 * x67
    x77 = x51 * x67 - x56 * x68
    x78 = x42 * x76 - x43 * x77
    x79 = x40 * x70 - x40 * x72
    x80 = x57 * x73 - x58 * x74
    x81 = x57 * x69
    x82 = x58 * x71
    x83 = x40 * (x81 - x82) + x57 * x76 - x58 * x77
    x84 = x40 * x81 - x40 * x82
    x85 = x40 * x69
    x86 = x67 * x69
    x87 = x68 * x71

    # 27 item(s)
    S = numpy.array(
        [
            x22 * x47
            + x39
            + x40 * (x41 + x42 * x44 - x43 * x46)
            + x42 * x47
            - x43 * (x33 * x42 + x40 * x46 - x43 * x48),
            x22 * x55 + x42 * x55 - x43 * (x42 * x51 - x43 * x56) + x54,
            0,
            x23 * x47 + x63,
            x23 * x55 + x66,
            0,
            x24 * x47 + x75,
            x24 * x55 + x78,
            x79,
            x22 * x61 + x63,
            x22 * x64 + x66,
            0,
            x23 * x61 + x39 + x57 * x61 - x58 * x62,
            x23 * x64 + x40 * (x41 + x57 * x59 - x58 * x60) + x54 + x57 * x64 - x58 * x65,
            0,
            x24 * x61 + x80,
            x24 * x64 + x83,
            x84,
            x22 * x73 + x75,
            x22 * x76 + x78,
            x22 * x85 + x79,
            x23 * x73 + x80,
            x23 * x76 + x83,
            x23 * x85 + x84,
            x24 * x73 + x39 + x67 * x73 - x68 * x74,
            x24 * x76 + x54 + x67 * x76 - x68 * x77,
            x24 * x85 + x40 * x86 - x40 * x87 + x40 * (x41 + x86 - x87),
        ]
    )
    return S


def eri_1111(a, A, b, B, c, C, d, D):
    """Cartesian [pp|pp] 2-electron electron repulsion integral.

    Generated code; DO NOT modify by hand!"""

    x0 = 2 * a + 2 * b
    x1 = x0 ** (-1.0)
    x2 = 2 * c + 2 * d
    x3 = x2 ** (-1.0)
    x4 = numpy.pi**2.5
    x5 = a + b
    x6 = c + d
    x7 = x5 * x6
    x8 = x5 + x6
    x9 = (x7 + numpy.sqrt(x8)) ** (-1.0)
    x10 = x5 ** (-1.0)
    x11 = A[0] - B[0]
    x12 = A[1] - B[1]
    x13 = A[2] - B[2]
    x14 = numpy.exp(-a * b * x10 * (x11**2 + x12**2 + x13**2))
    x15 = x6 ** (-1.0)
    x16 = C[0] - D[0]
    x17 = C[1] - D[1]
    x18 = C[2] - D[2]
    x19 = numpy.exp(-c * d * x15 * (x16**2 + x17**2 + x18**2))
    x20 = x8 ** (-1.0)
    x21 = x15 * (c * C[0] + d * D[0])
    x22 = -x10 * (a * A[0] + b * B[0])
    x23 = -x21 - x22
    x24 = x15 * (c * C[1] + d * D[1])
    x25 = -x10 * (a * A[1] + b * B[1])
    x26 = -x24 - x25
    x27 = -x10 * (a * A[2] + b * B[2])
    x28 = -x15 * (c * C[2] + d * D[2]) - x27
    x29 = x20 * x7 * (x23**2 + x26**2 + x28**2)
    x30 = boys(1, x29)
    x31 = -2 * x14 * x19 * x30 * x4 * x9
    x32 = x20 * x5
    x33 = boys(2, x29)
    x34 = 2 * x14 * x19 * x4 * x9
    x35 = x33 * x34
    x36 = x3 * (-x31 - x32 * x35)
    x37 = x21 - C[0]
    x38 = x30 * x34
    x39 = x23 * x32
    x40 = x35 * x39 + x37 * x38
    x41 = x34 * boys(3, x29)
    x42 = x35 * x37 + x39 * x41
    x43 = x36 + x37 * x40 + x39 * x42
    x44 = x20 * x6
    x45 = x43 * x44
    x46 = boys(0, x29)
    x47 = x3 * (2 * x14 * x19 * x4 * x46 * x9 - x32 * x38)
    x48 = x34 * x46
    x49 = x37 * x48 + x38 * x39
    x50 = x37 * x49 + x39 * x40 + x47
    x51 = x1 * (-x45 + x50)
    x52 = -x22 - A[0]
    x53 = x0 + x2
    x54 = x53 ** (-1.0)
    x55 = x23 * x44
    x56 = x35 * x52 - x41 * x55
    x57 = x42 * x44
    x58 = -x23 * x57 + x40 * x52 + x54 * x56
    x59 = 2 * x54
    x60 = -x23 * x45 + x50 * x52 + x58 * x59
    x61 = -2 * x14 * x19 * x33 * x4 * x9
    x62 = x3 * (-x32 * x41 - x61)
    x63 = x34 * boys(4, x29)
    x64 = x37 * x41 + x39 * x63
    x65 = x37 * x42 + x39 * x64 + x62
    x66 = x41 * x52 - x55 * x63
    x67 = x42 * x52 + x54 * x66 - x55 * x64
    x68 = x40 * x44
    x69 = x1 * (x49 - x68)
    x70 = x1 * (-x31 - x35 * x44)
    x71 = -x35 * x55 + x38 * x52
    x72 = -x23 * x68 + x49 * x52 + x54 * x71
    x73 = x52 * x72 + x54 * (x52 * x71 - x55 * x56 + x70) - x55 * x58 + x69
    x74 = x1 * (x40 - x57)
    x75 = x1 * (-x41 * x44 - x61)
    x76 = x16 * x72 + x60
    x77 = x24 - C[1]
    x78 = x26 * x32
    x79 = x35 * x78 + x38 * x77
    x80 = x35 * x77 + x41 * x78
    x81 = x44 * x80
    x82 = -x23 * x81 + x52 * x79
    x83 = x38 * x78 + x48 * x77
    x84 = x37 * x83 + x39 * x79
    x85 = x37 * x79 + x39 * x80
    x86 = x44 * x85
    x87 = -x23 * x86 + x52 * x84 + x54 * x82
    x88 = x17 * x72 + x87
    x89 = x1 * (x84 - x86)
    x90 = x1 * (x79 - x81)
    x91 = x41 * x77 + x63 * x78
    x92 = x52 * x80 - x55 * x91
    x93 = x37 * x80 + x39 * x91
    x94 = (
        x52 * x87
        + x54 * (x52 * x82 - x55 * x92 + x90)
        - x55 * (x52 * x85 + x54 * x92 - x55 * x93)
        + x89
    )
    x95 = x11 * x18
    x96 = x44 * x79
    x97 = -x23 * x96 + x52 * x83
    x98 = x16 * x97 + x87
    x99 = x1 * (x83 - x96)
    x100 = x52 * x97 - x55 * x82 + x99
    x101 = x36 + x77 * x79 + x78 * x80
    x102 = x101 * x44
    x103 = x47 + x77 * x83 + x78 * x79
    x104 = x1 * (-x102 + x103)
    x105 = -x102 * x23 + x103 * x52
    x106 = x62 + x77 * x80 + x78 * x91
    x107 = x105 + x17 * x97
    x108 = -x25 - A[1]
    x109 = x26 * x44
    x110 = x108 * x38 - x109 * x35
    x111 = x108 * x35 - x109 * x41
    x112 = x108 * x49 - x26 * x68
    x113 = x108 * x40 - x26 * x57
    x114 = x112 * x52 - x113 * x55 + x54 * (x110 * x52 - x111 * x55)
    x115 = x108 * x50 - x26 * x45
    x116 = x108 * x41 - x109 * x63
    x117 = x108 * x42 - x109 * x64
    x118 = x108 * x43 - x109 * x65
    x119 = (
        x114 * x16
        + x115 * x52
        - x118 * x55
        + x59 * (x113 * x52 - x117 * x55 + x54 * (x111 * x52 - x116 * x55))
    )
    x120 = x108 * x79 + x111 * x54 - x26 * x81
    x121 = x108 * x80 - x109 * x91 + x116 * x54
    x122 = x108 * x84 + x113 * x54 - x26 * x86
    x123 = x108 * x85 - x109 * x93 + x117 * x54
    x124 = x122 * x52 - x123 * x55 + x54 * (x120 * x52 - x121 * x55)
    x125 = x114 * x17 + x124
    x126 = x12 * x18
    x127 = x114 * x18
    x128 = x108 * x83 + x110 * x54 - x26 * x96
    x129 = -x120 * x55 + x128 * x52
    x130 = x124 + x129 * x16
    x131 = -x102 * x26 + x103 * x108 + x120 * x59
    x132 = x101 * x108 - x106 * x109 + x121 * x59
    x133 = x129 * x17 + x131 * x52 - x132 * x55
    x134 = x129 * x18
    x135 = -x27 - A[2]
    x136 = x28 * x44
    x137 = x135 * x38 - x136 * x35
    x138 = x137 * x52
    x139 = x135 * x35 - x136 * x41
    x140 = x139 * x55
    x141 = x135 * x49 - x28 * x68
    x142 = x135 * x40 - x28 * x57
    x143 = x141 * x52 - x142 * x55 + x54 * (x138 - x140)
    x144 = x135 * x50 - x28 * x45
    x145 = x139 * x52
    x146 = x135 * x41 - x136 * x63
    x147 = x146 * x55
    x148 = x142 * x52
    x149 = x135 * x42 - x136 * x64
    x150 = x149 * x55
    x151 = x135 * x43 - x136 * x65
    x152 = (
        x143 * x16 + x144 * x52 - x151 * x55 + x59 * (x148 - x150 + x54 * (x145 - x147))
    )
    x153 = x135 * x79 - x28 * x81
    x154 = x153 * x52
    x155 = x135 * x80 - x136 * x91
    x156 = x155 * x55
    x157 = x135 * x84 - x28 * x86
    x158 = x135 * x85 - x136 * x93
    x159 = x157 * x52 - x158 * x55 + x54 * (x154 - x156)
    x160 = x143 * x17 + x159
    x161 = x13 * x18
    x162 = x148 * x54 - x150 * x54 + x54 * (x145 * x54 - x147 * x54)
    x163 = x143 * x18 + x162
    x164 = x135 * x83 - x28 * x96
    x165 = -x153 * x55 + x164 * x52
    x166 = x159 + x16 * x165
    x167 = -x102 * x28 + x103 * x135
    x168 = x101 * x135 - x106 * x136
    x169 = x165 * x17 + x167 * x52 - x168 * x55
    x170 = x154 * x54 - x156 * x54
    x171 = x165 * x18 + x170
    x172 = x138 * x54 - x140 * x54
    x173 = x16 * x172 + x162
    x174 = x17 * x172 + x170
    x175 = 2 / x53**2
    x176 = x145 * x175 - x147 * x175 + x172 * x18
    x177 = x112 * x16 + x115
    x178 = x112 * x17 + x122
    x179 = x122 + x128 * x16
    x180 = x128 * x17 + x131
    x181 = x108 * x112 - x109 * x113 + x69
    x182 = x108 * x122 - x109 * x123 + x54 * (x108 * x113 - x109 * x117 + x74) + x89
    x183 = x108 * x128 - x109 * x120 + x54 * (x108 * x110 - x109 * x111 + x70) + x99
    x184 = x108 * x141 - x109 * x142
    x185 = x108 * x144 - x109 * x151 + x16 * x184
    x186 = x108 * x142
    x187 = x109 * x149
    x188 = x108 * x157 - x109 * x158 + x54 * (x186 - x187)
    x189 = x17 * x184 + x188
    x190 = x186 * x54 - x187 * x54
    x191 = x18 * x184 + x190
    x192 = x108 * x137
    x193 = x109 * x139
    x194 = x108 * x164 - x109 * x153 + x54 * (x192 - x193)
    x195 = x16 * x194 + x188
    x196 = x108 * x139
    x197 = x109 * x146
    x198 = x108 * x153
    x199 = x109 * x155
    x200 = (
        x108 * x167 - x109 * x168 + x17 * x194 + x59 * (x198 - x199 + x54 * (x196 - x197))
    )
    x201 = x198 * x54 - x199 * x54 + x54 * (x196 * x54 - x197 * x54)
    x202 = x18 * x194 + x201
    x203 = x192 * x54 - x193 * x54
    x204 = x16 * x203 + x190
    x205 = x17 * x203 + x201
    x206 = x175 * x196 - x175 * x197 + x18 * x203
    x207 = x141 * x16 + x144
    x208 = x141 * x17 + x157
    x209 = x142 * x54
    x210 = x141 * x18 + x209
    x211 = x157 + x16 * x164
    x212 = x164 * x17 + x167
    x213 = x153 * x54
    x214 = x164 * x18 + x213
    x215 = x137 * x54
    x216 = x16 * x215 + x209
    x217 = x17 * x215 + x213
    x218 = x139 * x175 + x18 * x215
    x219 = x135 * x141 - x136 * x142 + x69
    x220 = x135 * x157 - x136 * x158 + x89
    x221 = x136 * x149
    x222 = x135 * x209 - x221 * x54 + x54 * (x135 * x142 - x221 + x74)
    x223 = x135 * x164 - x136 * x153 + x99
    x224 = x136 * x155
    x225 = x135 * x213 - x224 * x54 + x54 * (x135 * x153 - x224 + x90)
    x226 = x135 * x137
    x227 = x136 * x139
    x228 = x226 * x54 - x227 * x54 + x54 * (x226 - x227 + x70)
    x229 = x135 * x139
    x230 = x136 * x146

    # 81 item(s)
    S = numpy.array(
        [
            x11 * x76
            + x16 * x73
            + x51
            + x52 * x60
            - x55 * (x43 * x52 - x55 * x65 + x59 * x67)
            + x59 * (x52 * x58 + x54 * (x52 * x56 - x55 * x66 + x75) - x55 * x67 + x74),
            x11 * x88 + x17 * x73 + x94,
            x18 * x73 + x72 * x95,
            x100 * x16 + x11 * x98 + x94,
            x100 * x17 + x104 + x105 * x52 + x107 * x11 - x55 * (x101 * x52 - x106 * x55),
            x100 * x18 + x95 * x97,
            0,
            0,
            0,
            x119 + x12 * x76,
            x12 * x88 + x125,
            x126 * x72 + x127,
            x12 * x98 + x130,
            x107 * x12 + x133,
            x126 * x97 + x134,
            0,
            0,
            0,
            x13 * x76 + x152,
            x13 * x88 + x160,
            x161 * x72 + x163,
            x13 * x98 + x166,
            x107 * x13 + x169,
            x161 * x97 + x171,
            x173,
            x174,
            x176,
            x11 * x177 + x119,
            x11 * x178 + x125,
            x112 * x95 + x127,
            x11 * x179 + x130,
            x11 * x180 + x133,
            x128 * x95 + x134,
            0,
            0,
            0,
            x108 * x115 - x109 * x118 + x12 * x177 + x16 * x181 + x51,
            x12 * x178 + x17 * x181 + x182,
            x112 * x126 + x18 * x181,
            x12 * x179 + x16 * x183 + x182,
            x104
            + x108 * x131
            - x109 * x132
            + x12 * x180
            + x17 * x183
            + x59
            * (x108 * x120 - x109 * x121 + x54 * (x108 * x111 - x109 * x116 + x75) + x90),
            x126 * x128 + x18 * x183,
            0,
            0,
            0,
            x13 * x177 + x185,
            x13 * x178 + x189,
            x112 * x161 + x191,
            x13 * x179 + x195,
            x13 * x180 + x200,
            x128 * x161 + x202,
            x204,
            x205,
            x206,
            x11 * x207 + x152,
            x11 * x208 + x160,
            x11 * x210 + x163,
            x11 * x211 + x166,
            x11 * x212 + x169,
            x11 * x214 + x171,
            x11 * x216 + x173,
            x11 * x217 + x174,
            x11 * x218 + x176,
            x12 * x207 + x185,
            x12 * x208 + x189,
            x12 * x210 + x191,
            x12 * x211 + x195,
            x12 * x212 + x200,
            x12 * x214 + x202,
            x12 * x216 + x204,
            x12 * x217 + x205,
            x12 * x218 + x206,
            x13 * x207 + x135 * x144 - x136 * x151 + x16 * x219 + x51,
            x13 * x208 + x17 * x219 + x220,
            x13 * x210 + x18 * x219 + x222,
            x13 * x211 + x16 * x223 + x220,
            x104 + x13 * x212 + x135 * x167 - x136 * x168 + x17 * x223,
            x13 * x214 + x18 * x223 + x225,
            x13 * x216 + x16 * x228 + x222,
            x13 * x217 + x17 * x228 + x225,
            x13 * x218
            + x175 * x229
            - x175 * x230
            + x18 * x228
            + x59 * (x229 * x54 - x230 * x54 + x54 * (x229 - x230 + x75)),
        ]
    )
    return S


def eri_1112(a, A, b, B, c, C, d, D):
    """Cartesian [pp|pd] 2-electron electron repulsion integral.

    Generated code; DO NOT modify by hand!"""

    x0 = 2 * a + 2 * b
    x1 = x0 ** (-1.0)
    x2 = c + d
    x3 = x2 ** (-1.0)
    x4 = x3 * (c * C[0] + d * D[0])
    x5 = x4 - C[0]
    x6 = a + b
    x7 = x2 + x6
    x8 = x7 ** (-1.0)
    x9 = x6 ** (-1.0)
    x10 = -x9 * (a * A[0] + b * B[0])
    x11 = -x10 - x4
    x12 = x3 * (c * C[1] + d * D[1])
    x13 = -x9 * (a * A[1] + b * B[1])
    x14 = -x12 - x13
    x15 = -x9 * (a * A[2] + b * B[2])
    x16 = -x15 - x3 * (c * C[2] + d * D[2])
    x17 = x2 * x6
    x18 = x17 * x8 * (x11**2 + x14**2 + x16**2)
    x19 = boys(2, x18)
    x20 = numpy.pi**2.5
    x21 = (x17 + numpy.sqrt(x7)) ** (-1.0)
    x22 = A[0] - B[0]
    x23 = A[1] - B[1]
    x24 = A[2] - B[2]
    x25 = numpy.exp(-a * b * x9 * (x22**2 + x23**2 + x24**2))
    x26 = C[0] - D[0]
    x27 = C[1] - D[1]
    x28 = C[2] - D[2]
    x29 = x28**2
    x30 = numpy.exp(-c * d * x3 * (x26**2 + x27**2 + x29))
    x31 = 2 * x20 * x21 * x25 * x30
    x32 = x19 * x31
    x33 = x6 * x8
    x34 = x11 * x33
    x35 = boys(3, x18)
    x36 = x31 * x35
    x37 = x32 * x5 + x34 * x36
    x38 = x33 * x37
    x39 = boys(1, x18)
    x40 = x31 * x39
    x41 = x32 * x34 + x40 * x5
    x42 = 2 * c + 2 * d
    x43 = x42 ** (-1.0)
    x44 = 2 * x43
    x45 = -2 * x20 * x21 * x25 * x30 * x39
    x46 = x43 * (-x32 * x33 - x45)
    x47 = x11 * x38 + x41 * x5 + x46
    x48 = -2 * x19 * x20 * x21 * x25 * x30
    x49 = x43 * (-x33 * x36 - x48)
    x50 = x31 * boys(4, x18)
    x51 = x34 * x50 + x36 * x5
    x52 = x33 * x51
    x53 = x11 * x52 + x37 * x5 + x49
    x54 = x34 * x53 + x44 * (-x38 + x41) + x47 * x5
    x55 = x2 * x8
    x56 = x54 * x55
    x57 = x33 * x41
    x58 = boys(0, x18)
    x59 = x31 * x58
    x60 = x34 * x40 + x5 * x59
    x61 = x43 * (2 * x20 * x21 * x25 * x30 * x58 - x33 * x40)
    x62 = x11 * x57 + x5 * x60 + x61
    x63 = x34 * x47 + x44 * (-x57 + x60) + x5 * x62
    x64 = x1 * (-x56 + x63)
    x65 = -x10 - A[0]
    x66 = x53 * x55
    x67 = x0 + x42
    x68 = x67 ** (-1.0)
    x69 = x11 * x55
    x70 = x36 * x65 - x50 * x69
    x71 = x51 * x55
    x72 = -x11 * x71 + x37 * x65 + x68 * x70
    x73 = 2 * x68
    x74 = -x11 * x66 + x47 * x65 + x72 * x73
    x75 = 3 * x68
    x76 = -x11 * x56 + x63 * x65 + x74 * x75
    x77 = -2 * x20 * x21 * x25 * x30 * x35
    x78 = x43 * (-x33 * x50 - x77)
    x79 = x31 * boys(5, x18)
    x80 = x34 * x79 + x5 * x50
    x81 = x34 * x80 + x5 * x51 + x78
    x82 = x34 * x81 + x44 * (x37 - x52) + x5 * x53
    x83 = x50 * x65 - x69 * x79
    x84 = x51 * x65 + x68 * x83 - x69 * x80
    x85 = x53 * x65 - x69 * x81 + x73 * x84
    x86 = x47 * x55
    x87 = x1 * (x62 - x86)
    x88 = x32 * x65 - x36 * x69
    x89 = x37 * x55
    x90 = -x11 * x89 + x41 * x65 + x68 * x88
    x91 = -x11 * x86 + x62 * x65 + x73 * x90
    x92 = x1 * (x41 - x89)
    x93 = x1 * (-x36 * x55 - x48)
    x94 = (
        x65 * x91
        - x69 * x74
        + x73 * (x65 * x90 + x68 * (x65 * x88 - x69 * x70 + x93) - x69 * x72 + x92)
        + x87
    )
    x95 = x1 * (x47 - x66)
    x96 = x1 * (x37 - x71)
    x97 = x1 * (-x50 * x55 - x77)
    x98 = -x32 * x69 + x40 * x65
    x99 = x41 * x55
    x100 = -x11 * x99 + x60 * x65 + x68 * x98
    x101 = x100 * x26
    x102 = x26 * x91 + x26 * (x101 + x91) + x76
    x103 = x1 * (x60 - x99)
    x104 = x1 * (-x32 * x55 - x45)
    x105 = x100 * x65 + x103 + x68 * (x104 + x65 * x98 - x69 * x88) - x69 * x90
    x106 = x105 * x26
    x107 = x100 * x27
    x108 = x12 - C[1]
    x109 = x14 * x33
    x110 = x108 * x40 + x109 * x32
    x111 = x108 * x32 + x109 * x36
    x112 = x111 * x55
    x113 = -x11 * x112 + x110 * x65
    x114 = x108 * x59 + x109 * x40
    x115 = x110 * x33
    x116 = x11 * x115 + x114 * x5
    x117 = x111 * x33
    x118 = x11 * x117 + x110 * x5
    x119 = x118 * x55
    x120 = -x11 * x119 + x113 * x68 + x116 * x65
    x121 = x107 + x120
    x122 = x43 * (x114 - x115)
    x123 = x116 * x5 + x118 * x34 + x122
    x124 = x43 * (x110 - x117)
    x125 = x108 * x36 + x109 * x50
    x126 = x125 * x33
    x127 = x11 * x126 + x111 * x5
    x128 = x118 * x5 + x124 + x127 * x34
    x129 = x128 * x55
    x130 = x125 * x55
    x131 = -x11 * x130 + x111 * x65
    x132 = x127 * x55
    x133 = -x11 * x132 + x118 * x65 + x131 * x68
    x134 = -x11 * x129 + x123 * x65 + x133 * x73
    x135 = x121 * x26 + x134 + x27 * x91
    x136 = x105 * x27
    x137 = x1 * (x116 - x119)
    x138 = x1 * (x110 - x112)
    x139 = x120 * x65 - x133 * x69 + x137 + x68 * (x113 * x65 - x131 * x69 + x138)
    x140 = x136 + x139
    x141 = x1 * (x123 - x129)
    x142 = x1 * (x118 - x132)
    x143 = x1 * (x111 - x130)
    x144 = x108 * x50 + x109 * x79
    x145 = x125 * x65 - x144 * x69
    x146 = x125 * x5 + x144 * x34
    x147 = x127 * x65 + x145 * x68 - x146 * x69
    x148 = x43 * (x111 - x126)
    x149 = x127 * x5 + x146 * x34 + x148
    x150 = (
        x134 * x65
        + x141
        - x69 * (x128 * x65 + x147 * x73 - x149 * x69)
        + x73 * (x133 * x65 + x142 - x147 * x69 + x68 * (x131 * x65 + x143 - x145 * x69))
    )
    x151 = x101 * x28 + x28 * x91
    x152 = x108 * x110 + x117 * x14 + x46
    x153 = x108 * x111 + x126 * x14 + x49
    x154 = x153 * x55
    x155 = -x11 * x154 + x152 * x65
    x156 = x108 * x114 + x115 * x14 + x61
    x157 = x152 * x34 + x156 * x5
    x158 = x152 * x5 + x153 * x34
    x159 = x158 * x55
    x160 = -x11 * x159 + x155 * x68 + x157 * x65
    x161 = x120 * x27 + x160
    x162 = x121 * x27 + x161
    x163 = x1 * (x157 - x159)
    x164 = x1 * (x152 - x154)
    x165 = x108 * x125 + x109 * x144 + x78
    x166 = x153 * x65 - x165 * x69
    x167 = x153 * x5 + x165 * x34
    x168 = (
        x139 * x27
        + x160 * x65
        + x163
        + x68 * (x155 * x65 + x164 - x166 * x69)
        - x69 * (x158 * x65 + x166 * x68 - x167 * x69)
    )
    x169 = x120 * x28
    x170 = x107 * x28 + x169
    x171 = x139 * x28
    x172 = x22 * x29
    x173 = x110 * x55
    x174 = -x11 * x173 + x114 * x65
    x175 = x174 * x26
    x176 = x120 * x26 + x134 + x26 * (x120 + x175)
    x177 = x1 * (x114 - x173)
    x178 = -x113 * x69 + x174 * x65 + x177
    x179 = x178 * x26
    x180 = x174 * x27
    x181 = x152 * x55
    x182 = -x11 * x181 + x156 * x65
    x183 = x180 + x182
    x184 = x161 + x183 * x26
    x185 = x178 * x27
    x186 = x1 * (x156 - x181)
    x187 = -x155 * x69 + x182 * x65 + x186
    x188 = x185 + x187
    x189 = x169 + x175 * x28
    x190 = x108 * x152 + x109 * x153 + 2 * x124
    x191 = x190 * x55
    x192 = x108 * x156 + x109 * x152 + 2 * x122
    x193 = x1 * (-x191 + x192)
    x194 = -x11 * x191 + x192 * x65
    x195 = x108 * x153 + x109 * x165 + 2 * x148
    x196 = x182 * x27 + x183 * x27 + x194
    x197 = x180 * x28 + x182 * x28
    x198 = -x13 - A[1]
    x199 = -x14 * x86 + x198 * x62
    x200 = -x14 * x66 + x198 * x47
    x201 = x14 * x55
    x202 = x198 * x32 - x201 * x36
    x203 = x198 * x36 - x201 * x50
    x204 = -x14 * x89 + x198 * x41
    x205 = -x14 * x71 + x198 * x37
    x206 = (
        x199 * x65
        - x200 * x69
        + x73 * (x204 * x65 - x205 * x69 + x68 * (x202 * x65 - x203 * x69))
    )
    x207 = x198 * x40 - x201 * x32
    x208 = -x14 * x99 + x198 * x60
    x209 = -x204 * x69 + x208 * x65 + x68 * (-x202 * x69 + x207 * x65)
    x210 = x209 * x26
    x211 = -x14 * x56 + x198 * x63
    x212 = x198 * x53 - x201 * x81
    x213 = x198 * x50 - x201 * x79
    x214 = x198 * x51 - x201 * x80
    x215 = x198 * x54 - x201 * x82
    x216 = (
        x206 * x26
        + x211 * x65
        - x215 * x69
        + x26 * (x206 + x210)
        + x75
        * (
            x200 * x65
            - x212 * x69
            + x73 * (x205 * x65 - x214 * x69 + x68 * (x203 * x65 - x213 * x69))
        )
    )
    x217 = x209 * x27
    x218 = x110 * x198 - x112 * x14 + x202 * x68
    x219 = x111 * x198 - x130 * x14 + x203 * x68
    x220 = x116 * x198 - x119 * x14 + x204 * x68
    x221 = x118 * x198 - x132 * x14 + x205 * x68
    x222 = x220 * x65 - x221 * x69 + x68 * (x218 * x65 - x219 * x69)
    x223 = x217 + x222
    x224 = x123 * x198 - x129 * x14 + x200 * x68
    x225 = x125 * x198 - x144 * x201 + x213 * x68
    x226 = x127 * x198 - x146 * x201 + x214 * x68
    x227 = x128 * x198 - x149 * x201 + x212 * x68
    x228 = (
        x224 * x65
        - x227 * x69
        + x73 * (x221 * x65 - x226 * x69 + x68 * (x219 * x65 - x225 * x69))
    )
    x229 = x206 * x27 + x223 * x26 + x228
    x230 = x206 * x28 + x210 * x28
    x231 = -x14 * x154 + x152 * x198 + x219 * x73
    x232 = x153 * x198 - x165 * x201 + x225 * x73
    x233 = -x14 * x159 + x157 * x198 + x221 * x73
    x234 = x158 * x198 - x167 * x201 + x226 * x73
    x235 = x222 * x27 + x233 * x65 - x234 * x69 + x68 * (x231 * x65 - x232 * x69)
    x236 = x223 * x27 + x235
    x237 = x222 * x28
    x238 = x217 * x28 + x237
    x239 = x23 * x29
    x240 = x209 * x29
    x241 = x114 * x198 - x14 * x173 + x207 * x68
    x242 = -x218 * x69 + x241 * x65
    x243 = x242 * x26
    x244 = x222 * x26 + x228 + x26 * (x222 + x243)
    x245 = x242 * x27
    x246 = -x14 * x181 + x156 * x198 + x218 * x73
    x247 = -x231 * x69 + x246 * x65
    x248 = x245 + x247
    x249 = x235 + x248 * x26
    x250 = x237 + x243 * x28
    x251 = -x14 * x191 + x192 * x198 + x231 * x75
    x252 = x190 * x198 - x195 * x201 + x232 * x75
    x253 = x247 * x27 + x248 * x27 + x251 * x65 - x252 * x69
    x254 = x245 * x28 + x247 * x28
    x255 = x242 * x29
    x256 = -x15 - A[2]
    x257 = -x16 * x86 + x256 * x62
    x258 = -x16 * x66 + x256 * x47
    x259 = x16 * x55
    x260 = x256 * x32 - x259 * x36
    x261 = x260 * x65
    x262 = x256 * x36 - x259 * x50
    x263 = x262 * x69
    x264 = -x16 * x89 + x256 * x41
    x265 = x264 * x65
    x266 = -x16 * x71 + x256 * x37
    x267 = x266 * x69
    x268 = x257 * x65 - x258 * x69 + x73 * (x265 - x267 + x68 * (x261 - x263))
    x269 = x256 * x40 - x259 * x32
    x270 = x269 * x65
    x271 = x260 * x69
    x272 = -x16 * x99 + x256 * x60
    x273 = -x264 * x69 + x272 * x65 + x68 * (x270 - x271)
    x274 = -x16 * x56 + x256 * x63
    x275 = x258 * x65
    x276 = x256 * x53 - x259 * x81
    x277 = x276 * x69
    x278 = x262 * x65
    x279 = x256 * x50 - x259 * x79
    x280 = x279 * x69
    x281 = x266 * x65
    x282 = x256 * x51 - x259 * x80
    x283 = x282 * x69
    x284 = x256 * x54 - x259 * x82
    x285 = (
        x26 * x268
        + x26 * (x26 * x273 + x268)
        + x274 * x65
        - x284 * x69
        + x75 * (x275 - x277 + x73 * (x281 - x283 + x68 * (x278 - x280)))
    )
    x286 = x116 * x256 - x119 * x16
    x287 = x110 * x256 - x112 * x16
    x288 = x287 * x65
    x289 = x111 * x256 - x130 * x16
    x290 = x289 * x69
    x291 = x118 * x256 - x132 * x16
    x292 = x286 * x65 - x291 * x69 + x68 * (x288 - x290)
    x293 = x27 * x273 + x292
    x294 = x123 * x256 - x129 * x16
    x295 = x291 * x65
    x296 = x289 * x65
    x297 = x125 * x256 - x144 * x259
    x298 = x297 * x69
    x299 = x127 * x256 - x146 * x259
    x300 = x299 * x69
    x301 = x128 * x256 - x149 * x259
    x302 = x294 * x65 - x301 * x69 + x73 * (x295 - x300 + x68 * (x296 - x298))
    x303 = x26 * x293 + x268 * x27 + x302
    x304 = x265 * x68 - x267 * x68 + x68 * (x261 * x68 - x263 * x68)
    x305 = x273 * x28 + x304
    x306 = (
        x275 * x68
        - x277 * x68
        + x73 * (x281 * x68 - x283 * x68 + x68 * (x278 * x68 - x280 * x68))
    )
    x307 = x26 * x305 + x268 * x28 + x306
    x308 = x152 * x256 - x154 * x16
    x309 = x308 * x65
    x310 = x153 * x256 - x165 * x259
    x311 = x310 * x69
    x312 = x157 * x256 - x159 * x16
    x313 = x158 * x256 - x167 * x259
    x314 = x27 * x292 + x312 * x65 - x313 * x69 + x68 * (x309 - x311)
    x315 = x27 * x293 + x314
    x316 = x295 * x68 - x300 * x68 + x68 * (x296 * x68 - x298 * x68)
    x317 = x28 * x292 + x316
    x318 = x27 * x305 + x317
    x319 = x24 * x29
    x320 = 2 / x67**2
    x321 = x28 * x304 + x281 * x320 - x283 * x320 + x68 * (x278 * x320 - x280 * x320)
    x322 = x28 * x305 + x321
    x323 = x114 * x256 - x16 * x173
    x324 = -x287 * x69 + x323 * x65
    x325 = x26 * x292 + x26 * (x26 * x324 + x292) + x302
    x326 = x156 * x256 - x16 * x181
    x327 = -x308 * x69 + x326 * x65
    x328 = x27 * x324 + x327
    x329 = x26 * x328 + x314
    x330 = x288 * x68 - x290 * x68
    x331 = x28 * x324 + x330
    x332 = x26 * x331 + x317
    x333 = -x16 * x191 + x192 * x256
    x334 = x190 * x256 - x195 * x259
    x335 = x27 * x327 + x27 * x328 + x333 * x65 - x334 * x69
    x336 = x309 * x68 - x311 * x68
    x337 = x27 * x331 + x28 * x327 + x336
    x338 = x28 * x330 + x296 * x320 - x298 * x320
    x339 = x28 * x331 + x338
    x340 = x270 * x68 - x271 * x68
    x341 = x26 * x304 + x26 * (x26 * x340 + x304) + x306
    x342 = x27 * x340 + x330
    x343 = x26 * x342 + x27 * x304 + x316
    x344 = x261 * x320 - x263 * x320
    x345 = x28 * x340 + x344
    x346 = x26 * x345 + x321
    x347 = x27 * x330 + x27 * x342 + x336
    x348 = x27 * x345 + x338
    x349 = 6 / x67**3
    x350 = x278 * x349 + x28 * x344 + x28 * x345 - x280 * x349
    x351 = x208 * x26
    x352 = x199 * x26 + x211 + x26 * (x199 + x351)
    x353 = x208 * x27
    x354 = x220 + x353
    x355 = x199 * x27 + x224 + x26 * x354
    x356 = x199 * x28 + x28 * x351
    x357 = x220 * x27 + x233
    x358 = x27 * x354 + x357
    x359 = x220 * x28
    x360 = x28 * x353 + x359
    x361 = x241 * x26
    x362 = x220 * x26 + x224 + x26 * (x220 + x361)
    x363 = x241 * x27
    x364 = x246 + x363
    x365 = x26 * x364 + x357
    x366 = x28 * x361 + x359
    x367 = x246 * x27 + x251 + x27 * x364
    x368 = x246 * x28 + x28 * x363
    x369 = x198 * x199 - x200 * x201 + x87
    x370 = x103 + x198 * x208 - x201 * x204
    x371 = x26 * x370
    x372 = x27 * x370
    x373 = x137 + x198 * x220 - x201 * x221 + x68 * (x198 * x204 - x201 * x205 + x92)
    x374 = x372 + x373
    x375 = x141 + x198 * x224 - x201 * x227 + x68 * (x198 * x200 - x201 * x212 + x95)
    x376 = (
        x163
        + x198 * x233
        - x201 * x234
        + x27 * x373
        + x73
        * (x142 + x198 * x221 - x201 * x226 + x68 * (x198 * x205 - x201 * x214 + x96))
    )
    x377 = x28 * x373
    x378 = x177 + x198 * x241 - x201 * x218 + x68 * (x104 + x198 * x207 - x201 * x202)
    x379 = x26 * x378
    x380 = x27 * x378
    x381 = (
        x186
        + x198 * x246
        - x201 * x231
        + x73
        * (x138 + x198 * x218 - x201 * x219 + x68 * (x198 * x202 - x201 * x203 + x93))
    )
    x382 = x380 + x381
    x383 = x198 * x257 - x201 * x258
    x384 = x198 * x272 - x201 * x264
    x385 = x198 * x274 - x201 * x284 + x26 * x383 + x26 * (x26 * x384 + x383)
    x386 = x198 * x264
    x387 = x201 * x266
    x388 = x198 * x286 - x201 * x291 + x68 * (x386 - x387)
    x389 = x27 * x384 + x388
    x390 = x198 * x258
    x391 = x201 * x276
    x392 = x198 * x294 - x201 * x301 + x68 * (x390 - x391)
    x393 = x26 * x389 + x27 * x383 + x392
    x394 = x386 * x68 - x387 * x68
    x395 = x28 * x384 + x394
    x396 = x390 * x68 - x391 * x68
    x397 = x26 * x395 + x28 * x383 + x396
    x398 = x198 * x291
    x399 = x198 * x266
    x400 = x201 * x282
    x401 = x201 * x299
    x402 = (
        x198 * x312 - x201 * x313 + x27 * x388 + x73 * (x398 - x401 + x68 * (x399 - x400))
    )
    x403 = x27 * x389 + x402
    x404 = x398 * x68 - x401 * x68 + x68 * (x399 * x68 - x400 * x68)
    x405 = x28 * x388 + x404
    x406 = x27 * x395 + x405
    x407 = x28 * x394 + x320 * x399 - x320 * x400
    x408 = x28 * x395 + x407
    x409 = x198 * x269
    x410 = x201 * x260
    x411 = x198 * x323 - x201 * x287 + x68 * (x409 - x410)
    x412 = x26 * x388 + x26 * (x26 * x411 + x388) + x392
    x413 = x198 * x260
    x414 = x201 * x262
    x415 = x198 * x287
    x416 = x201 * x289
    x417 = x198 * x326 - x201 * x308 + x73 * (x415 - x416 + x68 * (x413 - x414))
    x418 = x27 * x411 + x417
    x419 = x26 * x418 + x402
    x420 = x415 * x68 - x416 * x68 + x68 * (x413 * x68 - x414 * x68)
    x421 = x28 * x411 + x420
    x422 = x26 * x421 + x405
    x423 = x198 * x308
    x424 = x201 * x310
    x425 = x198 * x262
    x426 = x201 * x279
    x427 = x198 * x289
    x428 = x201 * x297
    x429 = (
        x198 * x333
        - x201 * x334
        + x27 * x417
        + x27 * x418
        + x75 * (x423 - x424 + x73 * (x427 - x428 + x68 * (x425 - x426)))
    )
    x430 = (
        x423 * x68
        - x424 * x68
        + x73 * (x427 * x68 - x428 * x68 + x68 * (x425 * x68 - x426 * x68))
    )
    x431 = x27 * x421 + x28 * x417 + x430
    x432 = x28 * x420 + x320 * x427 - x320 * x428 + x68 * (x320 * x425 - x320 * x426)
    x433 = x28 * x421 + x432
    x434 = x409 * x68 - x410 * x68
    x435 = x26 * x394 + x26 * (x26 * x434 + x394) + x396
    x436 = x27 * x434 + x420
    x437 = x26 * x436 + x27 * x394 + x404
    x438 = x320 * x413 - x320 * x414
    x439 = x28 * x434 + x438
    x440 = x26 * x439 + x407
    x441 = x27 * x420 + x27 * x436 + x430
    x442 = x27 * x439 + x432
    x443 = x28 * x438 + x28 * x439 + x349 * x425 - x349 * x426
    x444 = x257 * x26 + x26 * (x257 + x26 * x272) + x274
    x445 = x27 * x272 + x286
    x446 = x257 * x27 + x26 * x445 + x294
    x447 = x264 * x68
    x448 = x272 * x28 + x447
    x449 = x258 * x68
    x450 = x257 * x28 + x26 * x448 + x449
    x451 = x27 * x286 + x312
    x452 = x27 * x445 + x451
    x453 = x291 * x68
    x454 = x28 * x286 + x453
    x455 = x27 * x448 + x454
    x456 = x266 * x320 + x28 * x447
    x457 = x28 * x448 + x456
    x458 = x26 * x286 + x26 * (x26 * x323 + x286) + x294
    x459 = x27 * x323 + x326
    x460 = x26 * x459 + x451
    x461 = x287 * x68
    x462 = x28 * x323 + x461
    x463 = x26 * x462 + x454
    x464 = x27 * x326 + x27 * x459 + x333
    x465 = x308 * x68
    x466 = x27 * x462 + x28 * x326 + x465
    x467 = x28 * x461 + x289 * x320
    x468 = x28 * x462 + x467
    x469 = x269 * x68
    x470 = x26 * x447 + x26 * (x26 * x469 + x447) + x449
    x471 = x27 * x469 + x461
    x472 = x26 * x471 + x27 * x447 + x453
    x473 = x260 * x320
    x474 = x28 * x469 + x473
    x475 = x26 * x474 + x456
    x476 = x27 * x461 + x27 * x471 + x465
    x477 = x27 * x474 + x467
    x478 = x262 * x349 + x28 * x473 + x28 * x474
    x479 = x256 * x257 - x258 * x259 + x87
    x480 = x103 + x256 * x272 - x259 * x264
    x481 = x137 + x256 * x286 - x259 * x291
    x482 = x27 * x480 + x481
    x483 = x141 + x256 * x294 - x259 * x301
    x484 = x259 * x266
    x485 = x256 * x447 - x484 * x68 + x68 * (x256 * x264 - x484 + x92)
    x486 = x28 * x480 + x485
    x487 = x259 * x276
    x488 = x256 * x449 - x487 * x68 + x68 * (x256 * x258 - x487 + x95)
    x489 = x163 + x256 * x312 - x259 * x313 + x27 * x481
    x490 = x259 * x299
    x491 = x256 * x453 - x490 * x68 + x68 * (x142 + x256 * x291 - x490)
    x492 = x28 * x481 + x491
    x493 = x256 * x266
    x494 = x259 * x282
    x495 = (
        x28 * x485
        + x320 * x493
        - x320 * x494
        + x73 * (x493 * x68 - x494 * x68 + x68 * (x493 - x494 + x96))
    )
    x496 = x177 + x256 * x323 - x259 * x287
    x497 = x186 + x256 * x326 - x259 * x308
    x498 = x27 * x496 + x497
    x499 = x259 * x289
    x500 = x256 * x461 - x499 * x68 + x68 * (x138 + x256 * x287 - x499)
    x501 = x28 * x496 + x500
    x502 = x259 * x310
    x503 = x256 * x465 - x502 * x68 + x68 * (x164 + x256 * x308 - x502)
    x504 = x256 * x289
    x505 = x259 * x297
    x506 = (
        x28 * x500
        + x320 * x504
        - x320 * x505
        + x73 * (x504 * x68 - x505 * x68 + x68 * (x143 + x504 - x505))
    )
    x507 = x256 * x269
    x508 = x259 * x260
    x509 = x507 * x68 - x508 * x68 + x68 * (x104 + x507 - x508)
    x510 = x27 * x509 + x500
    x511 = x256 * x260
    x512 = x259 * x262
    x513 = (
        x320 * x511
        - x320 * x512
        + x73 * (x511 * x68 - x512 * x68 + x68 * (x511 - x512 + x93))
    )
    x514 = x28 * x509 + x513
    x515 = x256 * x262
    x516 = x259 * x279

    # 162 item(s)
    S = numpy.array(
        [
            x102 * x22
            + x26 * x94
            + x26 * (x106 + x94)
            + x64
            + x65 * x76
            - x69 * (x54 * x65 - x69 * x82 + x75 * x85)
            + x75
            * (
                x65 * x74
                - x69 * x85
                + x73
                * (x65 * x72 + x68 * (x65 * x70 - x69 * x83 + x97) - x69 * x84 + x96)
                + x95
            ),
            x135 * x22 + x140 * x26 + x150 + x27 * x94,
            x106 * x28 + x151 * x22 + x28 * x94,
            x140 * x27 + x162 * x22 + x168,
            x136 * x28 + x170 * x22 + x171,
            x100 * x172 + x105 * x29,
            x139 * x26 + x150 + x176 * x22 + x26 * (x139 + x179),
            x168 + x184 * x22 + x188 * x26,
            x171 + x179 * x28 + x189 * x22,
            x187 * x27
            + x188 * x27
            + x193
            + x194 * x65
            + x196 * x22
            - x69 * (x190 * x65 - x195 * x69),
            x185 * x28 + x187 * x28 + x197 * x22,
            x172 * x174 + x178 * x29,
            0,
            0,
            0,
            0,
            0,
            0,
            x102 * x23 + x216,
            x135 * x23 + x229,
            x151 * x23 + x230,
            x162 * x23 + x236,
            x170 * x23 + x238,
            x100 * x239 + x240,
            x176 * x23 + x244,
            x184 * x23 + x249,
            x189 * x23 + x250,
            x196 * x23 + x253,
            x197 * x23 + x254,
            x174 * x239 + x255,
            0,
            0,
            0,
            0,
            0,
            0,
            x102 * x24 + x285,
            x135 * x24 + x303,
            x151 * x24 + x307,
            x162 * x24 + x315,
            x170 * x24 + x318,
            x100 * x319 + x322,
            x176 * x24 + x325,
            x184 * x24 + x329,
            x189 * x24 + x332,
            x196 * x24 + x335,
            x197 * x24 + x337,
            x174 * x319 + x339,
            x341,
            x343,
            x346,
            x347,
            x348,
            x350,
            x216 + x22 * x352,
            x22 * x355 + x229,
            x22 * x356 + x230,
            x22 * x358 + x236,
            x22 * x360 + x238,
            x172 * x208 + x240,
            x22 * x362 + x244,
            x22 * x365 + x249,
            x22 * x366 + x250,
            x22 * x367 + x253,
            x22 * x368 + x254,
            x172 * x241 + x255,
            0,
            0,
            0,
            0,
            0,
            0,
            x198 * x211
            - x201 * x215
            + x23 * x352
            + x26 * x369
            + x26 * (x369 + x371)
            + x64,
            x23 * x355 + x26 * x374 + x27 * x369 + x375,
            x23 * x356 + x28 * x369 + x28 * x371,
            x23 * x358 + x27 * x374 + x376,
            x23 * x360 + x28 * x372 + x377,
            x208 * x239 + x29 * x370,
            x23 * x362 + x26 * x373 + x26 * (x373 + x379) + x375,
            x23 * x365 + x26 * x382 + x376,
            x23 * x366 + x28 * x379 + x377,
            x193
            + x198 * x251
            - x201 * x252
            + x23 * x367
            + x27 * x381
            + x27 * x382
            + x75
            * (
                x164
                + x198 * x231
                - x201 * x232
                + x73
                * (
                    x143
                    + x198 * x219
                    - x201 * x225
                    + x68 * (x198 * x203 - x201 * x213 + x97)
                )
            ),
            x23 * x368 + x28 * x380 + x28 * x381,
            x239 * x241 + x29 * x378,
            0,
            0,
            0,
            0,
            0,
            0,
            x24 * x352 + x385,
            x24 * x355 + x393,
            x24 * x356 + x397,
            x24 * x358 + x403,
            x24 * x360 + x406,
            x208 * x319 + x408,
            x24 * x362 + x412,
            x24 * x365 + x419,
            x24 * x366 + x422,
            x24 * x367 + x429,
            x24 * x368 + x431,
            x241 * x319 + x433,
            x435,
            x437,
            x440,
            x441,
            x442,
            x443,
            x22 * x444 + x285,
            x22 * x446 + x303,
            x22 * x450 + x307,
            x22 * x452 + x315,
            x22 * x455 + x318,
            x22 * x457 + x322,
            x22 * x458 + x325,
            x22 * x460 + x329,
            x22 * x463 + x332,
            x22 * x464 + x335,
            x22 * x466 + x337,
            x22 * x468 + x339,
            x22 * x470 + x341,
            x22 * x472 + x343,
            x22 * x475 + x346,
            x22 * x476 + x347,
            x22 * x477 + x348,
            x22 * x478 + x350,
            x23 * x444 + x385,
            x23 * x446 + x393,
            x23 * x450 + x397,
            x23 * x452 + x403,
            x23 * x455 + x406,
            x23 * x457 + x408,
            x23 * x458 + x412,
            x23 * x460 + x419,
            x23 * x463 + x422,
            x23 * x464 + x429,
            x23 * x466 + x431,
            x23 * x468 + x433,
            x23 * x470 + x435,
            x23 * x472 + x437,
            x23 * x475 + x440,
            x23 * x476 + x441,
            x23 * x477 + x442,
            x23 * x478 + x443,
            x24 * x444
            + x256 * x274
            - x259 * x284
            + x26 * x479
            + x26 * (x26 * x480 + x479)
            + x64,
            x24 * x446 + x26 * x482 + x27 * x479 + x483,
            x24 * x450 + x26 * x486 + x28 * x479 + x488,
            x24 * x452 + x27 * x482 + x489,
            x24 * x455 + x27 * x486 + x492,
            x24 * x457 + x28 * x486 + x495,
            x24 * x458 + x26 * x481 + x26 * (x26 * x496 + x481) + x483,
            x24 * x460 + x26 * x498 + x489,
            x24 * x463 + x26 * x501 + x492,
            x193 + x24 * x464 + x256 * x333 - x259 * x334 + x27 * x497 + x27 * x498,
            x24 * x466 + x27 * x501 + x28 * x497 + x503,
            x24 * x468 + x28 * x501 + x506,
            x24 * x470 + x26 * x485 + x26 * (x26 * x509 + x485) + x488,
            x24 * x472 + x26 * x510 + x27 * x485 + x491,
            x24 * x475 + x26 * x514 + x495,
            x24 * x476 + x27 * x500 + x27 * x510 + x503,
            x24 * x477 + x27 * x514 + x506,
            x24 * x478
            + x28 * x513
            + x28 * x514
            + x349 * x515
            - x349 * x516
            + x75
            * (
                x320 * x515
                - x320 * x516
                + x73 * (x515 * x68 - x516 * x68 + x68 * (x515 - x516 + x97))
            ),
        ]
    )
    return S


def eri_1120(a, A, b, B, c, C, d, D):
    """Cartesian [pp|ds] 2-electron electron repulsion integral.

    Generated code; DO NOT modify by hand!"""

    x0 = 2 * a + 2 * b
    x1 = x0 ** (-1.0)
    x2 = 2 * c + 2 * d
    x3 = x2 ** (-1.0)
    x4 = numpy.pi**2.5
    x5 = a + b
    x6 = c + d
    x7 = x5 * x6
    x8 = x5 + x6
    x9 = (x7 + numpy.sqrt(x8)) ** (-1.0)
    x10 = x5 ** (-1.0)
    x11 = A[0] - B[0]
    x12 = A[1] - B[1]
    x13 = A[2] - B[2]
    x14 = numpy.exp(-a * b * x10 * (x11**2 + x12**2 + x13**2))
    x15 = x6 ** (-1.0)
    x16 = numpy.exp(
        -c * d * x15 * ((C[0] - D[0]) ** 2 + (C[1] - D[1]) ** 2 + (C[2] - D[2]) ** 2)
    )
    x17 = x8 ** (-1.0)
    x18 = x15 * (c * C[0] + d * D[0])
    x19 = -x10 * (a * A[0] + b * B[0])
    x20 = -x18 - x19
    x21 = x15 * (c * C[1] + d * D[1])
    x22 = -x10 * (a * A[1] + b * B[1])
    x23 = -x21 - x22
    x24 = -x10 * (a * A[2] + b * B[2])
    x25 = -x15 * (c * C[2] + d * D[2]) - x24
    x26 = x17 * x7 * (x20**2 + x23**2 + x25**2)
    x27 = boys(1, x26)
    x28 = x17 * x5
    x29 = boys(2, x26)
    x30 = 2 * x14 * x16 * x4 * x9
    x31 = x29 * x30
    x32 = x3 * (2 * x14 * x16 * x27 * x4 * x9 - x28 * x31)
    x33 = x18 - C[0]
    x34 = x27 * x30
    x35 = x20 * x28
    x36 = x31 * x35 + x33 * x34
    x37 = x30 * boys(3, x26)
    x38 = x31 * x33 + x35 * x37
    x39 = x32 + x33 * x36 + x35 * x38
    x40 = x17 * x6
    x41 = x39 * x40
    x42 = boys(0, x26)
    x43 = x3 * (2 * x14 * x16 * x4 * x42 * x9 - x28 * x34)
    x44 = x30 * x42
    x45 = x33 * (x33 * x44 + x34 * x35) + x35 * x36 + x43
    x46 = x1 * (-x41 + x45)
    x47 = -x19 - A[0]
    x48 = x0 + x2
    x49 = x48 ** (-1.0)
    x50 = x20 * x40
    x51 = x31 * x47 - x37 * x50
    x52 = x38 * x40
    x53 = -x20 * x52 + x36 * x47 + x49 * x51
    x54 = 2 * x49
    x55 = -x20 * x41 + x45 * x47 + x53 * x54
    x56 = -2 * x14 * x16 * x29 * x4 * x9
    x57 = x3 * (-x28 * x37 - x56)
    x58 = x30 * boys(4, x26)
    x59 = x33 * x37 + x35 * x58
    x60 = x33 * x38 + x35 * x59 + x57
    x61 = x37 * x47 - x50 * x58
    x62 = x38 * x47 + x49 * x61 - x50 * x59
    x63 = x1 * (x36 - x52)
    x64 = x1 * (-x37 * x40 - x56)
    x65 = x21 - C[1]
    x66 = x23 * x28
    x67 = x31 * x66 + x34 * x65
    x68 = x31 * x65 + x37 * x66
    x69 = x33 * x67 + x35 * x68
    x70 = x40 * x69
    x71 = x34 * x66 + x44 * x65
    x72 = x33 * x71 + x35 * x67
    x73 = x1 * (-x70 + x72)
    x74 = x40 * x68
    x75 = x1 * (x67 - x74)
    x76 = -x20 * x74 + x47 * x67
    x77 = x37 * x65 + x58 * x66
    x78 = x47 * x68 - x50 * x77
    x79 = -x20 * x70 + x47 * x72 + x49 * x76
    x80 = x33 * x68 + x35 * x77
    x81 = x32 + x65 * x67 + x66 * x68
    x82 = x40 * x81
    x83 = x43 + x65 * x71 + x66 * x67
    x84 = x1 * (-x82 + x83)
    x85 = -x20 * x82 + x47 * x83
    x86 = x57 + x65 * x68 + x66 * x77
    x87 = -x22 - A[1]
    x88 = -x23 * x41 + x45 * x87
    x89 = x23 * x40
    x90 = x31 * x87 - x37 * x89
    x91 = x37 * x87 - x58 * x89
    x92 = -x23 * x52 + x36 * x87
    x93 = x38 * x87 - x59 * x89
    x94 = x39 * x87 - x60 * x89
    x95 = (
        x47 * x88
        - x50 * x94
        + x54 * (x47 * x92 + x49 * (x47 * x90 - x50 * x91) - x50 * x93)
    )
    x96 = -x23 * x74 + x49 * x90 + x67 * x87
    x97 = x49 * x91 + x68 * x87 - x77 * x89
    x98 = -x23 * x70 + x49 * x92 + x72 * x87
    x99 = x49 * x93 + x69 * x87 - x80 * x89
    x100 = x47 * x98 + x49 * (x47 * x96 - x50 * x97) - x50 * x99
    x101 = -x23 * x82 + x54 * x96 + x83 * x87
    x102 = x54 * x97 + x81 * x87 - x86 * x89
    x103 = x101 * x47 - x102 * x50
    x104 = -x24 - A[2]
    x105 = x104 * x45 - x25 * x41
    x106 = x25 * x40
    x107 = x104 * x31 - x106 * x37
    x108 = x107 * x47
    x109 = x104 * x37 - x106 * x58
    x110 = x109 * x50
    x111 = x104 * x36 - x25 * x52
    x112 = x111 * x47
    x113 = x104 * x38 - x106 * x59
    x114 = x113 * x50
    x115 = x104 * x39 - x106 * x60
    x116 = x105 * x47 - x115 * x50 + x54 * (x112 - x114 + x49 * (x108 - x110))
    x117 = x104 * x67 - x25 * x74
    x118 = x117 * x47
    x119 = x104 * x68 - x106 * x77
    x120 = x119 * x50
    x121 = x104 * x72 - x25 * x70
    x122 = x104 * x69 - x106 * x80
    x123 = x121 * x47 - x122 * x50 + x49 * (x118 - x120)
    x124 = x112 * x49 - x114 * x49 + x49 * (x108 * x49 - x110 * x49)
    x125 = x104 * x83 - x25 * x82
    x126 = x104 * x81 - x106 * x86
    x127 = x125 * x47 - x126 * x50
    x128 = x118 * x49 - x120 * x49
    x129 = 2 / x48**2
    x130 = x108 * x129 - x110 * x129
    x131 = x105 * x87 - x115 * x89
    x132 = x111 * x87
    x133 = x113 * x89
    x134 = x121 * x87 - x122 * x89 + x49 * (x132 - x133)
    x135 = x132 * x49 - x133 * x49
    x136 = x107 * x87
    x137 = x109 * x89
    x138 = x117 * x87
    x139 = x119 * x89
    x140 = x125 * x87 - x126 * x89 + x54 * (x138 - x139 + x49 * (x136 - x137))
    x141 = x138 * x49 - x139 * x49 + x49 * (x136 * x49 - x137 * x49)
    x142 = x129 * x136 - x129 * x137
    x143 = x11 * x49
    x144 = x107 * x129
    x145 = x12 * x49
    x146 = x13 * x49
    x147 = x104 * x111
    x148 = x106 * x113
    x149 = x104 * x117
    x150 = x106 * x119
    x151 = x104 * x107
    x152 = x106 * x109

    # 54 item(s)
    S = numpy.array(
        [
            x11 * x55
            + x46
            + x47 * x55
            - x50 * (x39 * x47 - x50 * x60 + x54 * x62)
            + x54 * (x47 * x53 + x49 * (x47 * x51 - x50 * x61 + x64) - x50 * x62 + x63),
            x11 * x79
            + x47 * x79
            + x49 * (x47 * x76 - x50 * x78 + x75)
            - x50 * (x47 * x69 + x49 * x78 - x50 * x80)
            + x73,
            0,
            x11 * x85 + x47 * x85 - x50 * (x47 * x81 - x50 * x86) + x84,
            0,
            0,
            x12 * x55 + x95,
            x100 + x12 * x79,
            0,
            x103 + x12 * x85,
            0,
            0,
            x116 + x13 * x55,
            x123 + x13 * x79,
            x124,
            x127 + x13 * x85,
            x128,
            x130,
            x11 * x88 + x95,
            x100 + x11 * x98,
            0,
            x101 * x11 + x103,
            0,
            0,
            x12 * x88 + x46 + x87 * x88 - x89 * x94,
            x12 * x98 + x49 * (x63 + x87 * x92 - x89 * x93) + x73 + x87 * x98 - x89 * x99,
            0,
            x101 * x12
            + x101 * x87
            - x102 * x89
            + x54 * (x49 * (x64 + x87 * x90 - x89 * x91) + x75 + x87 * x96 - x89 * x97)
            + x84,
            0,
            0,
            x13 * x88 + x131,
            x13 * x98 + x134,
            x135,
            x101 * x13 + x140,
            x141,
            x142,
            x105 * x11 + x116,
            x11 * x121 + x123,
            x111 * x143 + x124,
            x11 * x125 + x127,
            x117 * x143 + x128,
            x11 * x144 + x130,
            x105 * x12 + x131,
            x12 * x121 + x134,
            x111 * x145 + x135,
            x12 * x125 + x140,
            x117 * x145 + x141,
            x12 * x144 + x142,
            x104 * x105 + x105 * x13 - x106 * x115 + x46,
            x104 * x121 - x106 * x122 + x121 * x13 + x73,
            x111 * x146 + x147 * x49 - x148 * x49 + x49 * (x147 - x148 + x63),
            x104 * x125 - x106 * x126 + x125 * x13 + x84,
            x117 * x146 + x149 * x49 - x150 * x49 + x49 * (x149 - x150 + x75),
            x129 * x151
            - x129 * x152
            + x13 * x144
            + x54 * (x151 * x49 - x152 * x49 + x49 * (x151 - x152 + x64)),
        ]
    )
    return S


def eri_1121(a, A, b, B, c, C, d, D):
    """Cartesian [pp|dp] 2-electron electron repulsion integral.

    Generated code; DO NOT modify by hand!"""

    x0 = 2 * a + 2 * b
    x1 = x0 ** (-1.0)
    x2 = c + d
    x3 = x2 ** (-1.0)
    x4 = x3 * (c * C[0] + d * D[0])
    x5 = x4 - C[0]
    x6 = a + b
    x7 = x2 + x6
    x8 = x7 ** (-1.0)
    x9 = x6 ** (-1.0)
    x10 = -x9 * (a * A[0] + b * B[0])
    x11 = -x10 - x4
    x12 = x3 * (c * C[1] + d * D[1])
    x13 = -x9 * (a * A[1] + b * B[1])
    x14 = -x12 - x13
    x15 = -x9 * (a * A[2] + b * B[2])
    x16 = -x15 - x3 * (c * C[2] + d * D[2])
    x17 = x2 * x6
    x18 = x17 * x8 * (x11**2 + x14**2 + x16**2)
    x19 = boys(2, x18)
    x20 = numpy.pi**2.5
    x21 = (x17 + numpy.sqrt(x7)) ** (-1.0)
    x22 = A[0] - B[0]
    x23 = A[1] - B[1]
    x24 = A[2] - B[2]
    x25 = numpy.exp(-a * b * x9 * (x22**2 + x23**2 + x24**2))
    x26 = C[0] - D[0]
    x27 = C[1] - D[1]
    x28 = C[2] - D[2]
    x29 = numpy.exp(-c * d * x3 * (x26**2 + x27**2 + x28**2))
    x30 = 2 * x20 * x21 * x25 * x29
    x31 = x19 * x30
    x32 = x6 * x8
    x33 = x11 * x32
    x34 = boys(3, x18)
    x35 = x30 * x34
    x36 = x31 * x5 + x33 * x35
    x37 = x32 * x36
    x38 = boys(1, x18)
    x39 = x30 * x38
    x40 = x31 * x33 + x39 * x5
    x41 = 2 * c + 2 * d
    x42 = x41 ** (-1.0)
    x43 = 2 * x42
    x44 = x42 * (2 * x20 * x21 * x25 * x29 * x38 - x31 * x32)
    x45 = x11 * x37 + x40 * x5 + x44
    x46 = -2 * x19 * x20 * x21 * x25 * x29
    x47 = x42 * (-x32 * x35 - x46)
    x48 = x30 * boys(4, x18)
    x49 = x33 * x48 + x35 * x5
    x50 = x32 * x49
    x51 = x11 * x50 + x36 * x5 + x47
    x52 = x33 * x51 + x43 * (-x37 + x40) + x45 * x5
    x53 = x2 * x8
    x54 = x52 * x53
    x55 = x32 * x40
    x56 = boys(0, x18)
    x57 = x30 * x56
    x58 = x33 * x39 + x5 * x57
    x59 = x42 * (2 * x20 * x21 * x25 * x29 * x56 - x32 * x39)
    x60 = x11 * x55 + x5 * x58 + x59
    x61 = x33 * x45 + x43 * (-x55 + x58) + x5 * x60
    x62 = x1 * (-x54 + x61)
    x63 = -x10 - A[0]
    x64 = x51 * x53
    x65 = x0 + x41
    x66 = x65 ** (-1.0)
    x67 = x11 * x53
    x68 = x35 * x63 - x48 * x67
    x69 = x49 * x53
    x70 = -x11 * x69 + x36 * x63 + x66 * x68
    x71 = 2 * x66
    x72 = -x11 * x64 + x45 * x63 + x70 * x71
    x73 = 3 * x66
    x74 = -x11 * x54 + x61 * x63 + x72 * x73
    x75 = -2 * x20 * x21 * x25 * x29 * x34
    x76 = x42 * (-x32 * x48 - x75)
    x77 = x30 * boys(5, x18)
    x78 = x33 * x77 + x48 * x5
    x79 = x33 * x78 + x49 * x5 + x76
    x80 = x33 * x79 + x43 * (x36 - x50) + x5 * x51
    x81 = x48 * x63 - x67 * x77
    x82 = x49 * x63 + x66 * x81 - x67 * x78
    x83 = x51 * x63 - x67 * x79 + x71 * x82
    x84 = x45 * x53
    x85 = x31 * x63 - x35 * x67
    x86 = x36 * x53
    x87 = -x11 * x86 + x40 * x63 + x66 * x85
    x88 = -x11 * x84 + x60 * x63 + x71 * x87
    x89 = x26 * x88 + x74
    x90 = x1 * (x60 - x84)
    x91 = x1 * (x40 - x86)
    x92 = x1 * (-x35 * x53 - x46)
    x93 = (
        x63 * x88
        - x67 * x72
        + x71 * (x63 * x87 + x66 * (x63 * x85 - x67 * x68 + x92) - x67 * x70 + x91)
        + x90
    )
    x94 = x1 * (x45 - x64)
    x95 = x1 * (x36 - x69)
    x96 = x1 * (-x48 * x53 - x75)
    x97 = x12 - C[1]
    x98 = x14 * x32
    x99 = x31 * x98 + x39 * x97
    x100 = x32 * x99
    x101 = x39 * x98 + x57 * x97
    x102 = x42 * (-x100 + x101)
    x103 = x100 * x11 + x101 * x5
    x104 = x31 * x97 + x35 * x98
    x105 = x104 * x32
    x106 = x105 * x11 + x5 * x99
    x107 = x102 + x103 * x5 + x106 * x33
    x108 = x42 * (-x105 + x99)
    x109 = x35 * x97 + x48 * x98
    x110 = x109 * x32
    x111 = x104 * x5 + x11 * x110
    x112 = x106 * x5 + x108 + x111 * x33
    x113 = x112 * x53
    x114 = x109 * x53
    x115 = x104 * x63 - x11 * x114
    x116 = x111 * x53
    x117 = x106 * x63 - x11 * x116 + x115 * x66
    x118 = x107 * x63 - x11 * x113 + x117 * x71
    x119 = x118 + x27 * x88
    x120 = x1 * (x107 - x113)
    x121 = x1 * (x106 - x116)
    x122 = x1 * (x104 - x114)
    x123 = x48 * x97 + x77 * x98
    x124 = x109 * x63 - x123 * x67
    x125 = x109 * x5 + x123 * x33
    x126 = x111 * x63 + x124 * x66 - x125 * x67
    x127 = x42 * (x104 - x110)
    x128 = x111 * x5 + x125 * x33 + x127
    x129 = (
        x118 * x63
        + x120
        - x67 * (x112 * x63 + x126 * x71 - x128 * x67)
        + x71 * (x117 * x63 + x121 - x126 * x67 + x66 * (x115 * x63 + x122 - x124 * x67))
    )
    x130 = x22 * x28
    x131 = x104 * x53
    x132 = -x11 * x131 + x63 * x99
    x133 = x106 * x53
    x134 = x103 * x63 - x11 * x133 + x132 * x66
    x135 = x118 + x134 * x26
    x136 = x1 * (x103 - x133)
    x137 = x1 * (-x131 + x99)
    x138 = -x117 * x67 + x134 * x63 + x136 + x66 * (-x115 * x67 + x132 * x63 + x137)
    x139 = x105 * x14 + x44 + x97 * x99
    x140 = x104 * x97 + x110 * x14 + x47
    x141 = x140 * x53
    x142 = -x11 * x141 + x139 * x63
    x143 = x100 * x14 + x101 * x97 + x59
    x144 = x139 * x33 + x143 * x5
    x145 = x139 * x5 + x140 * x33
    x146 = x145 * x53
    x147 = -x11 * x146 + x142 * x66 + x144 * x63
    x148 = x134 * x27 + x147
    x149 = x1 * (x144 - x146)
    x150 = x1 * (x139 - x141)
    x151 = x109 * x97 + x123 * x98 + x76
    x152 = x140 * x63 - x151 * x67
    x153 = x140 * x5 + x151 * x33
    x154 = (
        x147 * x63
        + x149
        + x66 * (x142 * x63 + x150 - x152 * x67)
        - x67 * (x145 * x63 + x152 * x66 - x153 * x67)
    )
    x155 = x139 * x53
    x156 = -x11 * x155 + x143 * x63
    x157 = x147 + x156 * x26
    x158 = x1 * (x143 - x155)
    x159 = -x142 * x67 + x156 * x63 + x158
    x160 = 2 * x108 + x139 * x97 + x140 * x98
    x161 = x160 * x53
    x162 = 2 * x102 + x139 * x98 + x143 * x97
    x163 = x1 * (-x161 + x162)
    x164 = -x11 * x161 + x162 * x63
    x165 = 2 * x127 + x140 * x97 + x151 * x98
    x166 = x156 * x27 + x164
    x167 = -x13 - A[1]
    x168 = -x14 * x84 + x167 * x60
    x169 = -x14 * x64 + x167 * x45
    x170 = x14 * x53
    x171 = x167 * x31 - x170 * x35
    x172 = x167 * x35 - x170 * x48
    x173 = -x14 * x86 + x167 * x40
    x174 = -x14 * x69 + x167 * x36
    x175 = (
        x168 * x63
        - x169 * x67
        + x71 * (x173 * x63 - x174 * x67 + x66 * (x171 * x63 - x172 * x67))
    )
    x176 = -x14 * x54 + x167 * x61
    x177 = x167 * x51 - x170 * x79
    x178 = x167 * x48 - x170 * x77
    x179 = x167 * x49 - x170 * x78
    x180 = x167 * x52 - x170 * x80
    x181 = (
        x175 * x26
        + x176 * x63
        - x180 * x67
        + x73
        * (
            x169 * x63
            - x177 * x67
            + x71 * (x174 * x63 - x179 * x67 + x66 * (x172 * x63 - x178 * x67))
        )
    )
    x182 = x107 * x167 - x113 * x14 + x169 * x66
    x183 = x104 * x167 - x114 * x14 + x172 * x66
    x184 = x109 * x167 - x123 * x170 + x178 * x66
    x185 = x106 * x167 - x116 * x14 + x174 * x66
    x186 = x111 * x167 - x125 * x170 + x179 * x66
    x187 = x112 * x167 - x128 * x170 + x177 * x66
    x188 = (
        x182 * x63
        - x187 * x67
        + x71 * (x185 * x63 - x186 * x67 + x66 * (x183 * x63 - x184 * x67))
    )
    x189 = x175 * x27 + x188
    x190 = x23 * x28
    x191 = x175 * x28
    x192 = -x131 * x14 + x167 * x99 + x171 * x66
    x193 = x103 * x167 - x133 * x14 + x173 * x66
    x194 = -x185 * x67 + x193 * x63 + x66 * (-x183 * x67 + x192 * x63)
    x195 = x188 + x194 * x26
    x196 = x139 * x167 - x14 * x141 + x183 * x71
    x197 = x140 * x167 - x151 * x170 + x184 * x71
    x198 = -x14 * x146 + x144 * x167 + x185 * x71
    x199 = x145 * x167 - x153 * x170 + x186 * x71
    x200 = x198 * x63 - x199 * x67 + x66 * (x196 * x63 - x197 * x67)
    x201 = x194 * x27 + x200
    x202 = x194 * x28
    x203 = -x14 * x155 + x143 * x167 + x192 * x71
    x204 = -x196 * x67 + x203 * x63
    x205 = x200 + x204 * x26
    x206 = -x14 * x161 + x162 * x167 + x196 * x73
    x207 = x160 * x167 - x165 * x170 + x197 * x73
    x208 = x204 * x27 + x206 * x63 - x207 * x67
    x209 = x204 * x28
    x210 = -x15 - A[2]
    x211 = -x16 * x84 + x210 * x60
    x212 = -x16 * x64 + x210 * x45
    x213 = x16 * x53
    x214 = x210 * x31 - x213 * x35
    x215 = x214 * x63
    x216 = x210 * x35 - x213 * x48
    x217 = x216 * x67
    x218 = -x16 * x86 + x210 * x40
    x219 = x218 * x63
    x220 = -x16 * x69 + x210 * x36
    x221 = x220 * x67
    x222 = x211 * x63 - x212 * x67 + x71 * (x219 - x221 + x66 * (x215 - x217))
    x223 = -x16 * x54 + x210 * x61
    x224 = x212 * x63
    x225 = x210 * x51 - x213 * x79
    x226 = x225 * x67
    x227 = x216 * x63
    x228 = x210 * x48 - x213 * x77
    x229 = x228 * x67
    x230 = x220 * x63
    x231 = x210 * x49 - x213 * x78
    x232 = x231 * x67
    x233 = x210 * x52 - x213 * x80
    x234 = (
        x222 * x26
        + x223 * x63
        - x233 * x67
        + x73 * (x224 - x226 + x71 * (x230 - x232 + x66 * (x227 - x229)))
    )
    x235 = x107 * x210 - x113 * x16
    x236 = x106 * x210 - x116 * x16
    x237 = x236 * x63
    x238 = x104 * x210 - x114 * x16
    x239 = x238 * x63
    x240 = x109 * x210 - x123 * x213
    x241 = x240 * x67
    x242 = x111 * x210 - x125 * x213
    x243 = x242 * x67
    x244 = x112 * x210 - x128 * x213
    x245 = x235 * x63 - x244 * x67 + x71 * (x237 - x243 + x66 * (x239 - x241))
    x246 = x222 * x27 + x245
    x247 = x24 * x28
    x248 = (
        x224 * x66
        - x226 * x66
        + x71 * (x230 * x66 - x232 * x66 + x66 * (x227 * x66 - x229 * x66))
    )
    x249 = x222 * x28 + x248
    x250 = x103 * x210 - x133 * x16
    x251 = -x131 * x16 + x210 * x99
    x252 = x251 * x63
    x253 = x238 * x67
    x254 = -x236 * x67 + x250 * x63 + x66 * (x252 - x253)
    x255 = x245 + x254 * x26
    x256 = x139 * x210 - x141 * x16
    x257 = x256 * x63
    x258 = x140 * x210 - x151 * x213
    x259 = x258 * x67
    x260 = x144 * x210 - x146 * x16
    x261 = x145 * x210 - x153 * x213
    x262 = x260 * x63 - x261 * x67 + x66 * (x257 - x259)
    x263 = x254 * x27 + x262
    x264 = x237 * x66 - x243 * x66 + x66 * (x239 * x66 - x241 * x66)
    x265 = x254 * x28 + x264
    x266 = x219 * x66 - x221 * x66 + x66 * (x215 * x66 - x217 * x66)
    x267 = x248 + x26 * x266
    x268 = x264 + x266 * x27
    x269 = 2 / x65**2
    x270 = x230 * x269 - x232 * x269 + x66 * (x227 * x269 - x229 * x269)
    x271 = x266 * x28 + x270
    x272 = x143 * x210 - x155 * x16
    x273 = -x256 * x67 + x272 * x63
    x274 = x26 * x273 + x262
    x275 = -x16 * x161 + x162 * x210
    x276 = x160 * x210 - x165 * x213
    x277 = x27 * x273 + x275 * x63 - x276 * x67
    x278 = x257 * x66 - x259 * x66
    x279 = x273 * x28 + x278
    x280 = x252 * x66 - x253 * x66
    x281 = x26 * x280 + x264
    x282 = x27 * x280 + x278
    x283 = x239 * x269 - x241 * x269
    x284 = x28 * x280 + x283
    x285 = x215 * x269 - x217 * x269
    x286 = x26 * x285 + x270
    x287 = x27 * x285 + x283
    x288 = 6 / x65**3
    x289 = x227 * x288 - x229 * x288 + x28 * x285
    x290 = x168 * x26 + x176
    x291 = x168 * x27 + x182
    x292 = x182 + x193 * x26
    x293 = x193 * x27 + x198
    x294 = x198 + x203 * x26
    x295 = x203 * x27 + x206
    x296 = x167 * x168 - x169 * x170 + x90
    x297 = x120 + x167 * x182 - x170 * x187 + x66 * (x167 * x169 - x170 * x177 + x94)
    x298 = x136 + x167 * x193 - x170 * x185 + x66 * (x167 * x173 - x170 * x174 + x91)
    x299 = (
        x149
        + x167 * x198
        - x170 * x199
        + x71
        * (x121 + x167 * x185 - x170 * x186 + x66 * (x167 * x174 - x170 * x179 + x95))
    )
    x300 = (
        x158
        + x167 * x203
        - x170 * x196
        + x71
        * (x137 + x167 * x192 - x170 * x183 + x66 * (x167 * x171 - x170 * x172 + x92))
    )
    x301 = x167 * x211 - x170 * x212
    x302 = x167 * x223 - x170 * x233 + x26 * x301
    x303 = x167 * x212
    x304 = x170 * x225
    x305 = x167 * x235 - x170 * x244 + x66 * (x303 - x304)
    x306 = x27 * x301 + x305
    x307 = x303 * x66 - x304 * x66
    x308 = x28 * x301 + x307
    x309 = x167 * x218
    x310 = x170 * x220
    x311 = x167 * x250 - x170 * x236 + x66 * (x309 - x310)
    x312 = x26 * x311 + x305
    x313 = x167 * x236
    x314 = x167 * x220
    x315 = x170 * x231
    x316 = x170 * x242
    x317 = x167 * x260 - x170 * x261 + x71 * (x313 - x316 + x66 * (x314 - x315))
    x318 = x27 * x311 + x317
    x319 = x313 * x66 - x316 * x66 + x66 * (x314 * x66 - x315 * x66)
    x320 = x28 * x311 + x319
    x321 = x309 * x66 - x310 * x66
    x322 = x26 * x321 + x307
    x323 = x27 * x321 + x319
    x324 = x269 * x314 - x269 * x315
    x325 = x28 * x321 + x324
    x326 = x167 * x214
    x327 = x170 * x216
    x328 = x167 * x251
    x329 = x170 * x238
    x330 = x167 * x272 - x170 * x256 + x71 * (x328 - x329 + x66 * (x326 - x327))
    x331 = x26 * x330 + x317
    x332 = x167 * x256
    x333 = x170 * x258
    x334 = x167 * x216
    x335 = x170 * x228
    x336 = x167 * x238
    x337 = x170 * x240
    x338 = (
        x167 * x275
        - x170 * x276
        + x27 * x330
        + x73 * (x332 - x333 + x71 * (x336 - x337 + x66 * (x334 - x335)))
    )
    x339 = (
        x332 * x66
        - x333 * x66
        + x71 * (x336 * x66 - x337 * x66 + x66 * (x334 * x66 - x335 * x66))
    )
    x340 = x28 * x330 + x339
    x341 = x328 * x66 - x329 * x66 + x66 * (x326 * x66 - x327 * x66)
    x342 = x26 * x341 + x319
    x343 = x27 * x341 + x339
    x344 = x269 * x336 - x269 * x337 + x66 * (x269 * x334 - x269 * x335)
    x345 = x28 * x341 + x344
    x346 = x269 * x326 - x269 * x327
    x347 = x26 * x346 + x324
    x348 = x27 * x346 + x344
    x349 = x28 * x346 + x288 * x334 - x288 * x335
    x350 = x211 * x26 + x223
    x351 = x211 * x27 + x235
    x352 = x212 * x66
    x353 = x211 * x28 + x352
    x354 = x235 + x250 * x26
    x355 = x250 * x27 + x260
    x356 = x236 * x66
    x357 = x250 * x28 + x356
    x358 = x218 * x66
    x359 = x26 * x358 + x352
    x360 = x27 * x358 + x356
    x361 = x220 * x269
    x362 = x28 * x358 + x361
    x363 = x26 * x272 + x260
    x364 = x27 * x272 + x275
    x365 = x256 * x66
    x366 = x272 * x28 + x365
    x367 = x251 * x66
    x368 = x26 * x367 + x356
    x369 = x27 * x367 + x365
    x370 = x238 * x269
    x371 = x28 * x367 + x370
    x372 = x214 * x269
    x373 = x26 * x372 + x361
    x374 = x27 * x372 + x370
    x375 = x216 * x288 + x28 * x372
    x376 = x210 * x211 - x212 * x213 + x90
    x377 = x120 + x210 * x235 - x213 * x244
    x378 = x213 * x225
    x379 = x210 * x352 - x378 * x66 + x66 * (x210 * x212 - x378 + x94)
    x380 = x136 + x210 * x250 - x213 * x236
    x381 = x149 + x210 * x260 - x213 * x261
    x382 = x213 * x242
    x383 = x210 * x356 - x382 * x66 + x66 * (x121 + x210 * x236 - x382)
    x384 = x210 * x218
    x385 = x213 * x220
    x386 = x384 * x66 - x385 * x66 + x66 * (x384 - x385 + x91)
    x387 = x210 * x220
    x388 = x213 * x231
    x389 = (
        x269 * x387
        - x269 * x388
        + x71 * (x387 * x66 - x388 * x66 + x66 * (x387 - x388 + x95))
    )
    x390 = x158 + x210 * x272 - x213 * x256
    x391 = x213 * x258
    x392 = x210 * x365 - x391 * x66 + x66 * (x150 + x210 * x256 - x391)
    x393 = x210 * x251
    x394 = x213 * x238
    x395 = x393 * x66 - x394 * x66 + x66 * (x137 + x393 - x394)
    x396 = x210 * x238
    x397 = x213 * x240
    x398 = (
        x269 * x396
        - x269 * x397
        + x71 * (x396 * x66 - x397 * x66 + x66 * (x122 + x396 - x397))
    )
    x399 = x210 * x214
    x400 = x213 * x216
    x401 = (
        x269 * x399
        - x269 * x400
        + x71 * (x399 * x66 - x400 * x66 + x66 * (x399 - x400 + x92))
    )
    x402 = x210 * x216
    x403 = x213 * x228

    # 162 item(s)
    S = numpy.array(
        [
            x22 * x89
            + x26 * x93
            + x62
            + x63 * x74
            - x67 * (x52 * x63 - x67 * x80 + x73 * x83)
            + x73
            * (
                x63 * x72
                - x67 * x83
                + x71
                * (x63 * x70 + x66 * (x63 * x68 - x67 * x81 + x96) - x67 * x82 + x95)
                + x94
            ),
            x119 * x22 + x129 + x27 * x93,
            x130 * x88 + x28 * x93,
            x129 + x135 * x22 + x138 * x26,
            x138 * x27 + x148 * x22 + x154,
            x130 * x134 + x138 * x28,
            0,
            0,
            0,
            x154 + x157 * x22 + x159 * x26,
            x159 * x27 + x163 + x164 * x63 + x166 * x22 - x67 * (x160 * x63 - x165 * x67),
            x130 * x156 + x159 * x28,
            0,
            0,
            0,
            0,
            0,
            0,
            x181 + x23 * x89,
            x119 * x23 + x189,
            x190 * x88 + x191,
            x135 * x23 + x195,
            x148 * x23 + x201,
            x134 * x190 + x202,
            0,
            0,
            0,
            x157 * x23 + x205,
            x166 * x23 + x208,
            x156 * x190 + x209,
            0,
            0,
            0,
            0,
            0,
            0,
            x234 + x24 * x89,
            x119 * x24 + x246,
            x247 * x88 + x249,
            x135 * x24 + x255,
            x148 * x24 + x263,
            x134 * x247 + x265,
            x267,
            x268,
            x271,
            x157 * x24 + x274,
            x166 * x24 + x277,
            x156 * x247 + x279,
            x281,
            x282,
            x284,
            x286,
            x287,
            x289,
            x181 + x22 * x290,
            x189 + x22 * x291,
            x130 * x168 + x191,
            x195 + x22 * x292,
            x201 + x22 * x293,
            x130 * x193 + x202,
            0,
            0,
            0,
            x205 + x22 * x294,
            x208 + x22 * x295,
            x130 * x203 + x209,
            0,
            0,
            0,
            0,
            0,
            0,
            x167 * x176 - x170 * x180 + x23 * x290 + x26 * x296 + x62,
            x23 * x291 + x27 * x296 + x297,
            x168 * x190 + x28 * x296,
            x23 * x292 + x26 * x298 + x297,
            x23 * x293 + x27 * x298 + x299,
            x190 * x193 + x28 * x298,
            0,
            0,
            0,
            x23 * x294 + x26 * x300 + x299,
            x163
            + x167 * x206
            - x170 * x207
            + x23 * x295
            + x27 * x300
            + x73
            * (
                x150
                + x167 * x196
                - x170 * x197
                + x71
                * (
                    x122
                    + x167 * x183
                    - x170 * x184
                    + x66 * (x167 * x172 - x170 * x178 + x96)
                )
            ),
            x190 * x203 + x28 * x300,
            0,
            0,
            0,
            0,
            0,
            0,
            x24 * x290 + x302,
            x24 * x291 + x306,
            x168 * x247 + x308,
            x24 * x292 + x312,
            x24 * x293 + x318,
            x193 * x247 + x320,
            x322,
            x323,
            x325,
            x24 * x294 + x331,
            x24 * x295 + x338,
            x203 * x247 + x340,
            x342,
            x343,
            x345,
            x347,
            x348,
            x349,
            x22 * x350 + x234,
            x22 * x351 + x246,
            x22 * x353 + x249,
            x22 * x354 + x255,
            x22 * x355 + x263,
            x22 * x357 + x265,
            x22 * x359 + x267,
            x22 * x360 + x268,
            x22 * x362 + x271,
            x22 * x363 + x274,
            x22 * x364 + x277,
            x22 * x366 + x279,
            x22 * x368 + x281,
            x22 * x369 + x282,
            x22 * x371 + x284,
            x22 * x373 + x286,
            x22 * x374 + x287,
            x22 * x375 + x289,
            x23 * x350 + x302,
            x23 * x351 + x306,
            x23 * x353 + x308,
            x23 * x354 + x312,
            x23 * x355 + x318,
            x23 * x357 + x320,
            x23 * x359 + x322,
            x23 * x360 + x323,
            x23 * x362 + x325,
            x23 * x363 + x331,
            x23 * x364 + x338,
            x23 * x366 + x340,
            x23 * x368 + x342,
            x23 * x369 + x343,
            x23 * x371 + x345,
            x23 * x373 + x347,
            x23 * x374 + x348,
            x23 * x375 + x349,
            x210 * x223 - x213 * x233 + x24 * x350 + x26 * x376 + x62,
            x24 * x351 + x27 * x376 + x377,
            x24 * x353 + x28 * x376 + x379,
            x24 * x354 + x26 * x380 + x377,
            x24 * x355 + x27 * x380 + x381,
            x24 * x357 + x28 * x380 + x383,
            x24 * x359 + x26 * x386 + x379,
            x24 * x360 + x27 * x386 + x383,
            x24 * x362 + x28 * x386 + x389,
            x24 * x363 + x26 * x390 + x381,
            x163 + x210 * x275 - x213 * x276 + x24 * x364 + x27 * x390,
            x24 * x366 + x28 * x390 + x392,
            x24 * x368 + x26 * x395 + x383,
            x24 * x369 + x27 * x395 + x392,
            x24 * x371 + x28 * x395 + x398,
            x24 * x373 + x26 * x401 + x389,
            x24 * x374 + x27 * x401 + x398,
            x24 * x375
            + x28 * x401
            + x288 * x402
            - x288 * x403
            + x73
            * (
                x269 * x402
                - x269 * x403
                + x71 * (x402 * x66 - x403 * x66 + x66 * (x402 - x403 + x96))
            ),
        ]
    )
    return S


def eri_1122(a, A, b, B, c, C, d, D):
    """Cartesian [pp|dd] 2-electron electron repulsion integral.

    Generated code; DO NOT modify by hand!"""

    x0 = 2 * a + 2 * b
    x1 = x0 ** (-1.0)
    x2 = 2 * c + 2 * d
    x3 = x2 ** (-1.0)
    x4 = numpy.pi**2.5
    x5 = a + b
    x6 = c + d
    x7 = x5 * x6
    x8 = x5 + x6
    x9 = (x7 + numpy.sqrt(x8)) ** (-1.0)
    x10 = x5 ** (-1.0)
    x11 = A[0] - B[0]
    x12 = A[1] - B[1]
    x13 = A[2] - B[2]
    x14 = numpy.exp(-a * b * x10 * (x11**2 + x12**2 + x13**2))
    x15 = x6 ** (-1.0)
    x16 = C[0] - D[0]
    x17 = C[1] - D[1]
    x18 = C[2] - D[2]
    x19 = x18**2
    x20 = numpy.exp(-c * d * x15 * (x16**2 + x17**2 + x19))
    x21 = x8 ** (-1.0)
    x22 = x15 * (c * C[0] + d * D[0])
    x23 = -x10 * (a * A[0] + b * B[0])
    x24 = -x22 - x23
    x25 = x15 * (c * C[1] + d * D[1])
    x26 = -x10 * (a * A[1] + b * B[1])
    x27 = -x25 - x26
    x28 = -x10 * (a * A[2] + b * B[2])
    x29 = -x15 * (c * C[2] + d * D[2]) - x28
    x30 = x21 * x7 * (x24**2 + x27**2 + x29**2)
    x31 = boys(2, x30)
    x32 = -2 * x14 * x20 * x31 * x4 * x9
    x33 = x21 * x5
    x34 = boys(3, x30)
    x35 = 2 * x14 * x20 * x4 * x9
    x36 = x34 * x35
    x37 = x3 * (-x32 - x33 * x36)
    x38 = x22 - C[0]
    x39 = x31 * x35
    x40 = x24 * x33
    x41 = x36 * x40 + x38 * x39
    x42 = boys(4, x30)
    x43 = x35 * x42
    x44 = x36 * x38 + x40 * x43
    x45 = x33 * x44
    x46 = x24 * x45 + x37 + x38 * x41
    x47 = x33 * x46
    x48 = boys(1, x30)
    x49 = x3 * (2 * x14 * x20 * x4 * x48 * x9 - x33 * x39)
    x50 = x35 * x48
    x51 = x38 * x50 + x39 * x40
    x52 = x33 * x41
    x53 = x24 * x52 + x38 * x51 + x49
    x54 = 3 * x3
    x55 = 2 * x3
    x56 = x24 * x47 + x38 * x53 + x55 * (x51 - x52)
    x57 = -2 * x14 * x20 * x34 * x4 * x9
    x58 = x3 * (-x33 * x43 - x57)
    x59 = x35 * boys(5, x30)
    x60 = x38 * x43 + x40 * x59
    x61 = x33 * x60
    x62 = x24 * x61 + x38 * x44 + x58
    x63 = x33 * x62
    x64 = x24 * x63 + x38 * x46 + x55 * (x41 - x45)
    x65 = x38 * x56 + x40 * x64 + x54 * (-x47 + x53)
    x66 = x21 * x6
    x67 = x65 * x66
    x68 = x33 * x53
    x69 = boys(0, x30)
    x70 = x3 * (2 * x14 * x20 * x4 * x69 * x9 - x33 * x50)
    x71 = x35 * x69
    x72 = x38 * x71 + x40 * x50
    x73 = x33 * x51
    x74 = x24 * x73 + x38 * x72 + x70
    x75 = x24 * x68 + x38 * x74 + x55 * (x72 - x73)
    x76 = x38 * x75 + x40 * x56 + x54 * (-x68 + x74)
    x77 = x1 * (-x67 + x76)
    x78 = -x23 - A[0]
    x79 = x64 * x66
    x80 = x62 * x66
    x81 = x0 + x2
    x82 = x81 ** (-1.0)
    x83 = x24 * x66
    x84 = x43 * x78 - x59 * x83
    x85 = x60 * x66
    x86 = -x24 * x85 + x44 * x78 + x82 * x84
    x87 = 2 * x82
    x88 = -x24 * x80 + x46 * x78 + x86 * x87
    x89 = 3 * x82
    x90 = -x24 * x79 + x56 * x78 + x88 * x89
    x91 = 4 * x82
    x92 = -x24 * x67 + x76 * x78 + x90 * x91
    x93 = -2 * x14 * x20 * x4 * x42 * x9
    x94 = x3 * (-x33 * x59 - x93)
    x95 = x35 * boys(6, x30)
    x96 = x38 * x59 + x40 * x95
    x97 = x38 * x60 + x40 * x96 + x94
    x98 = x38 * x62 + x40 * x97 + x55 * (x44 - x61)
    x99 = x38 * x64 + x40 * x98 + x54 * (x46 - x63)
    x100 = x59 * x78 - x83 * x95
    x101 = x100 * x82 + x60 * x78 - x83 * x96
    x102 = x101 * x87 + x62 * x78 - x83 * x97
    x103 = x102 * x89 + x64 * x78 - x83 * x98
    x104 = x56 * x66
    x105 = x1 * (-x104 + x75)
    x106 = x46 * x66
    x107 = x36 * x78 - x43 * x83
    x108 = x44 * x66
    x109 = x107 * x82 - x108 * x24 + x41 * x78
    x110 = -x106 * x24 + x109 * x87 + x53 * x78
    x111 = -x104 * x24 + x110 * x89 + x75 * x78
    x112 = x1 * (-x106 + x53)
    x113 = x1 * (-x108 + x41)
    x114 = x1 * (-x43 * x66 - x57)
    x115 = (
        x105
        + x111 * x78
        - x83 * x90
        + x89
        * (
            x110 * x78
            + x112
            - x83 * x88
            + x87
            * (x109 * x78 + x113 + x82 * (x107 * x78 + x114 - x83 * x84) - x83 * x86)
        )
    )
    x116 = x1 * (x56 - x79)
    x117 = x1 * (x46 - x80)
    x118 = x1 * (x44 - x85)
    x119 = x1 * (-x59 * x66 - x93)
    x120 = x53 * x66
    x121 = -x36 * x83 + x39 * x78
    x122 = x41 * x66
    x123 = x121 * x82 - x122 * x24 + x51 * x78
    x124 = -x120 * x24 + x123 * x87 + x74 * x78
    x125 = x124 * x16
    x126 = x111 * x16 + x16 * (x111 + x125) + x92
    x127 = x1 * (-x120 + x74)
    x128 = x1 * (-x122 + x51)
    x129 = x1 * (-x32 - x36 * x66)
    x130 = (
        -x110 * x83
        + x124 * x78
        + x127
        + x87
        * (-x109 * x83 + x123 * x78 + x128 + x82 * (-x107 * x83 + x121 * x78 + x129))
    )
    x131 = x130 * x16
    x132 = x124 * x17
    x133 = x25 - C[1]
    x134 = x27 * x33
    x135 = x133 * x50 + x134 * x39
    x136 = x135 * x33
    x137 = x133 * x71 + x134 * x50
    x138 = x3 * (-x136 + x137)
    x139 = x136 * x24 + x137 * x38
    x140 = x133 * x39 + x134 * x36
    x141 = x140 * x33
    x142 = x135 * x38 + x141 * x24
    x143 = x142 * x33
    x144 = x138 + x139 * x38 + x143 * x24
    x145 = x3 * (x135 - x141)
    x146 = x133 * x36 + x134 * x43
    x147 = x146 * x33
    x148 = x140 * x38 + x147 * x24
    x149 = x148 * x33
    x150 = x142 * x38 + x145 + x149 * x24
    x151 = x150 * x66
    x152 = x146 * x66
    x153 = x140 * x78 - x152 * x24
    x154 = x148 * x66
    x155 = x142 * x78 + x153 * x82 - x154 * x24
    x156 = x144 * x78 - x151 * x24 + x155 * x87
    x157 = x132 + x156
    x158 = x144 * x38 + x150 * x40 + x55 * (x139 - x143)
    x159 = x3 * (x140 - x147)
    x160 = x133 * x43 + x134 * x59
    x161 = x160 * x33
    x162 = x146 * x38 + x161 * x24
    x163 = x162 * x33
    x164 = x148 * x38 + x159 + x163 * x24
    x165 = x150 * x38 + x164 * x40 + x55 * (x142 - x149)
    x166 = x165 * x66
    x167 = x164 * x66
    x168 = x160 * x66
    x169 = x146 * x78 - x168 * x24
    x170 = x162 * x66
    x171 = x148 * x78 + x169 * x82 - x170 * x24
    x172 = x150 * x78 - x167 * x24 + x171 * x87
    x173 = x158 * x78 - x166 * x24 + x172 * x89
    x174 = x111 * x17 + x157 * x16 + x173
    x175 = x130 * x17
    x176 = x1 * (x144 - x151)
    x177 = x1 * (x142 - x154)
    x178 = x1 * (x140 - x152)
    x179 = (
        x156 * x78
        - x172 * x83
        + x176
        + x87 * (x155 * x78 - x171 * x83 + x177 + x82 * (x153 * x78 - x169 * x83 + x178))
    )
    x180 = x175 + x179
    x181 = x1 * (x158 - x166)
    x182 = x1 * (x150 - x167)
    x183 = x3 * (x146 - x161)
    x184 = x133 * x59 + x134 * x95
    x185 = x160 * x38 + x184 * x40
    x186 = x162 * x38 + x183 + x185 * x40
    x187 = x160 * x78 - x184 * x83
    x188 = x162 * x78 - x185 * x83 + x187 * x82
    x189 = x164 * x78 - x186 * x83 + x188 * x87
    x190 = x1 * (x148 - x170)
    x191 = x1 * (x146 - x168)
    x192 = x164 * x38 + x186 * x40 + x55 * (x148 - x163)
    x193 = (
        x173 * x78
        + x181
        - x83 * (x165 * x78 + x189 * x89 - x192 * x83)
        + x89
        * (
            x172 * x78
            + x182
            - x189 * x83
            + x87
            * (x171 * x78 - x188 * x83 + x190 + x82 * (x169 * x78 - x187 * x83 + x191))
        )
    )
    x194 = x111 * x18 + x125 * x18
    x195 = x133 * x135 + x141 * x27 + x49
    x196 = x195 * x33
    x197 = x133 * x137 + x136 * x27 + x70
    x198 = x3 * (-x196 + x197)
    x199 = x196 * x24 + x197 * x38
    x200 = x133 * x140 + x147 * x27 + x37
    x201 = x200 * x33
    x202 = x195 * x38 + x201 * x24
    x203 = x198 + x199 * x38 + x202 * x40
    x204 = x3 * (x195 - x201)
    x205 = x133 * x146 + x161 * x27 + x58
    x206 = x205 * x33
    x207 = x200 * x38 + x206 * x24
    x208 = x202 * x38 + x204 + x207 * x40
    x209 = x208 * x66
    x210 = x205 * x66
    x211 = x200 * x78 - x210 * x24
    x212 = x207 * x66
    x213 = x202 * x78 + x211 * x82 - x212 * x24
    x214 = x203 * x78 - x209 * x24 + x213 * x87
    x215 = x156 * x17 + x214
    x216 = x157 * x17 + x215
    x217 = x1 * (x203 - x209)
    x218 = x1 * (x202 - x212)
    x219 = x1 * (x200 - x210)
    x220 = x133 * x160 + x134 * x184 + x94
    x221 = x205 * x78 - x220 * x83
    x222 = x205 * x38 + x220 * x40
    x223 = x207 * x78 + x221 * x82 - x222 * x83
    x224 = x3 * (x200 - x206)
    x225 = x207 * x38 + x222 * x40 + x224
    x226 = (
        x214 * x78
        + x217
        - x83 * (x208 * x78 + x223 * x87 - x225 * x83)
        + x87 * (x213 * x78 + x218 - x223 * x83 + x82 * (x211 * x78 + x219 - x221 * x83))
    )
    x227 = x17 * x179 + x226
    x228 = x156 * x18
    x229 = x132 * x18 + x228
    x230 = x179 * x18
    x231 = x11 * x19
    x232 = x140 * x66
    x233 = x135 * x78 - x232 * x24
    x234 = x142 * x66
    x235 = x139 * x78 + x233 * x82 - x234 * x24
    x236 = x16 * x235
    x237 = x156 * x16 + x16 * (x156 + x236) + x173
    x238 = x1 * (x139 - x234)
    x239 = x1 * (x135 - x232)
    x240 = -x155 * x83 + x235 * x78 + x238 + x82 * (-x153 * x83 + x233 * x78 + x239)
    x241 = x16 * x240
    x242 = x17 * x235
    x243 = x200 * x66
    x244 = x195 * x78 - x24 * x243
    x245 = x202 * x66
    x246 = x199 * x78 - x24 * x245 + x244 * x82
    x247 = x242 + x246
    x248 = x16 * x247 + x215
    x249 = x17 * x240
    x250 = x1 * (x199 - x245)
    x251 = x1 * (x195 - x243)
    x252 = -x213 * x83 + x246 * x78 + x250 + x82 * (-x211 * x83 + x244 * x78 + x251)
    x253 = x249 + x252
    x254 = x18 * x236 + x228
    x255 = x133 * x195 + 2 * x145 + x201 * x27
    x256 = x133 * x200 + 2 * x159 + x206 * x27
    x257 = x256 * x66
    x258 = -x24 * x257 + x255 * x78
    x259 = x133 * x197 + 2 * x138 + x196 * x27
    x260 = x255 * x40 + x259 * x38
    x261 = x255 * x38 + x256 * x40
    x262 = x261 * x66
    x263 = -x24 * x262 + x258 * x82 + x260 * x78
    x264 = x17 * x246 + x263
    x265 = x17 * x247 + x264
    x266 = x1 * (x260 - x262)
    x267 = x1 * (x255 - x257)
    x268 = x133 * x205 + x134 * x220 + 2 * x183
    x269 = x256 * x78 - x268 * x83
    x270 = x256 * x38 + x268 * x40
    x271 = (
        x17 * x252
        + x263 * x78
        + x266
        + x82 * (x258 * x78 + x267 - x269 * x83)
        - x83 * (x261 * x78 + x269 * x82 - x270 * x83)
    )
    x272 = x18 * x246
    x273 = x18 * x242 + x272
    x274 = x18 * x252
    x275 = x195 * x66
    x276 = x197 * x78 - x24 * x275
    x277 = x16 * x276
    x278 = x16 * x246 + x16 * (x246 + x277) + x214
    x279 = x1 * (x197 - x275)
    x280 = -x244 * x83 + x276 * x78 + x279
    x281 = x16 * x280
    x282 = x17 * x276
    x283 = x255 * x66
    x284 = -x24 * x283 + x259 * x78
    x285 = x282 + x284
    x286 = x16 * x285 + x264
    x287 = x17 * x280
    x288 = x1 * (x259 - x283)
    x289 = -x258 * x83 + x284 * x78 + x288
    x290 = x287 + x289
    x291 = x18 * x277 + x272
    x292 = x133 * x255 + x134 * x256 + 3 * x204
    x293 = x292 * x66
    x294 = x133 * x259 + x134 * x255 + 3 * x198
    x295 = x1 * (-x293 + x294)
    x296 = -x24 * x293 + x294 * x78
    x297 = x133 * x256 + x134 * x268 + 3 * x224
    x298 = x17 * x284 + x17 * x285 + x296
    x299 = x18 * x282 + x18 * x284
    x300 = -x26 - A[1]
    x301 = -x104 * x27 + x300 * x75
    x302 = -x27 * x79 + x300 * x56
    x303 = -x106 * x27 + x300 * x53
    x304 = -x27 * x80 + x300 * x46
    x305 = x27 * x66
    x306 = x300 * x36 - x305 * x43
    x307 = x300 * x43 - x305 * x59
    x308 = -x108 * x27 + x300 * x41
    x309 = -x27 * x85 + x300 * x44
    x310 = (
        x301 * x78
        - x302 * x83
        + x89
        * (
            x303 * x78
            - x304 * x83
            + x87 * (x308 * x78 - x309 * x83 + x82 * (x306 * x78 - x307 * x83))
        )
    )
    x311 = -x120 * x27 + x300 * x74
    x312 = x300 * x39 - x305 * x36
    x313 = -x122 * x27 + x300 * x51
    x314 = (
        -x303 * x83
        + x311 * x78
        + x87 * (-x308 * x83 + x313 * x78 + x82 * (-x306 * x83 + x312 * x78))
    )
    x315 = x16 * x314
    x316 = -x27 * x67 + x300 * x76
    x317 = x300 * x64 - x305 * x98
    x318 = x300 * x62 - x305 * x97
    x319 = x300 * x59 - x305 * x95
    x320 = x300 * x60 - x305 * x96
    x321 = x300 * x65 - x305 * x99
    x322 = (
        x16 * x310
        + x16 * (x310 + x315)
        + x316 * x78
        - x321 * x83
        + x91
        * (
            x302 * x78
            - x317 * x83
            + x89
            * (
                x304 * x78
                - x318 * x83
                + x87 * (x309 * x78 - x320 * x83 + x82 * (x307 * x78 - x319 * x83))
            )
        )
    )
    x323 = x17 * x314
    x324 = x144 * x300 - x151 * x27 + x303 * x82
    x325 = x150 * x300 - x167 * x27 + x304 * x82
    x326 = x140 * x300 - x152 * x27 + x306 * x82
    x327 = x146 * x300 - x168 * x27 + x307 * x82
    x328 = x142 * x300 - x154 * x27 + x308 * x82
    x329 = x148 * x300 - x170 * x27 + x309 * x82
    x330 = (
        x324 * x78
        - x325 * x83
        + x87 * (x328 * x78 - x329 * x83 + x82 * (x326 * x78 - x327 * x83))
    )
    x331 = x323 + x330
    x332 = x158 * x300 - x166 * x27 + x302 * x82
    x333 = x164 * x300 - x186 * x305 + x318 * x82
    x334 = x160 * x300 - x184 * x305 + x319 * x82
    x335 = x162 * x300 - x185 * x305 + x320 * x82
    x336 = x165 * x300 - x192 * x305 + x317 * x82
    x337 = (
        x332 * x78
        - x336 * x83
        + x89
        * (
            x325 * x78
            - x333 * x83
            + x87 * (x329 * x78 - x335 * x83 + x82 * (x327 * x78 - x334 * x83))
        )
    )
    x338 = x16 * x331 + x17 * x310 + x337
    x339 = x18 * x310 + x18 * x315
    x340 = x203 * x300 - x209 * x27 + x325 * x87
    x341 = x200 * x300 - x210 * x27 + x327 * x87
    x342 = x205 * x300 - x220 * x305 + x334 * x87
    x343 = x202 * x300 - x212 * x27 + x329 * x87
    x344 = x207 * x300 - x222 * x305 + x335 * x87
    x345 = x208 * x300 - x225 * x305 + x333 * x87
    x346 = (
        x340 * x78
        - x345 * x83
        + x87 * (x343 * x78 - x344 * x83 + x82 * (x341 * x78 - x342 * x83))
    )
    x347 = x17 * x330 + x346
    x348 = x17 * x331 + x347
    x349 = x18 * x330
    x350 = x18 * x323 + x349
    x351 = x12 * x19
    x352 = x19 * x314
    x353 = x135 * x300 - x232 * x27 + x312 * x82
    x354 = x139 * x300 - x234 * x27 + x313 * x82
    x355 = -x328 * x83 + x354 * x78 + x82 * (-x326 * x83 + x353 * x78)
    x356 = x16 * x355
    x357 = x16 * x330 + x16 * (x330 + x356) + x337
    x358 = x17 * x355
    x359 = x195 * x300 - x243 * x27 + x326 * x87
    x360 = x199 * x300 - x245 * x27 + x328 * x87
    x361 = -x343 * x83 + x360 * x78 + x82 * (-x341 * x83 + x359 * x78)
    x362 = x358 + x361
    x363 = x16 * x362 + x347
    x364 = x18 * x356 + x349
    x365 = x255 * x300 - x257 * x27 + x341 * x89
    x366 = x256 * x300 - x268 * x305 + x342 * x89
    x367 = x260 * x300 - x262 * x27 + x343 * x89
    x368 = x261 * x300 - x270 * x305 + x344 * x89
    x369 = x17 * x361 + x367 * x78 - x368 * x83 + x82 * (x365 * x78 - x366 * x83)
    x370 = x17 * x362 + x369
    x371 = x18 * x361
    x372 = x18 * x358 + x371
    x373 = x19 * x355
    x374 = x197 * x300 - x27 * x275 + x353 * x87
    x375 = -x359 * x83 + x374 * x78
    x376 = x16 * x375
    x377 = x16 * x361 + x16 * (x361 + x376) + x346
    x378 = x17 * x375
    x379 = x259 * x300 - x27 * x283 + x359 * x89
    x380 = -x365 * x83 + x379 * x78
    x381 = x378 + x380
    x382 = x16 * x381 + x369
    x383 = x18 * x376 + x371
    x384 = -x27 * x293 + x294 * x300 + x365 * x91
    x385 = x292 * x300 - x297 * x305 + x366 * x91
    x386 = x17 * x380 + x17 * x381 + x384 * x78 - x385 * x83
    x387 = x18 * x378 + x18 * x380
    x388 = x19 * x375
    x389 = -x28 - A[2]
    x390 = -x104 * x29 + x389 * x75
    x391 = -x29 * x79 + x389 * x56
    x392 = -x106 * x29 + x389 * x53
    x393 = x392 * x78
    x394 = -x29 * x80 + x389 * x46
    x395 = x394 * x83
    x396 = x29 * x66
    x397 = x36 * x389 - x396 * x43
    x398 = x397 * x78
    x399 = x389 * x43 - x396 * x59
    x400 = x399 * x83
    x401 = -x108 * x29 + x389 * x41
    x402 = x401 * x78
    x403 = -x29 * x85 + x389 * x44
    x404 = x403 * x83
    x405 = (
        x390 * x78
        - x391 * x83
        + x89 * (x393 - x395 + x87 * (x402 - x404 + x82 * (x398 - x400)))
    )
    x406 = -x120 * x29 + x389 * x74
    x407 = -x36 * x396 + x389 * x39
    x408 = x407 * x78
    x409 = x397 * x83
    x410 = -x122 * x29 + x389 * x51
    x411 = x410 * x78
    x412 = x401 * x83
    x413 = -x392 * x83 + x406 * x78 + x87 * (x411 - x412 + x82 * (x408 - x409))
    x414 = -x29 * x67 + x389 * x76
    x415 = x391 * x78
    x416 = x389 * x64 - x396 * x98
    x417 = x416 * x83
    x418 = x394 * x78
    x419 = x389 * x62 - x396 * x97
    x420 = x419 * x83
    x421 = x399 * x78
    x422 = x389 * x59 - x396 * x95
    x423 = x422 * x83
    x424 = x403 * x78
    x425 = x389 * x60 - x396 * x96
    x426 = x425 * x83
    x427 = x389 * x65 - x396 * x99
    x428 = (
        x16 * x405
        + x16 * (x16 * x413 + x405)
        + x414 * x78
        - x427 * x83
        + x91
        * (x415 - x417 + x89 * (x418 - x420 + x87 * (x424 - x426 + x82 * (x421 - x423))))
    )
    x429 = x144 * x389 - x151 * x29
    x430 = x150 * x389 - x167 * x29
    x431 = x142 * x389 - x154 * x29
    x432 = x431 * x78
    x433 = x140 * x389 - x152 * x29
    x434 = x433 * x78
    x435 = x146 * x389 - x168 * x29
    x436 = x435 * x83
    x437 = x148 * x389 - x170 * x29
    x438 = x437 * x83
    x439 = x429 * x78 - x430 * x83 + x87 * (x432 - x438 + x82 * (x434 - x436))
    x440 = x17 * x413 + x439
    x441 = x158 * x389 - x166 * x29
    x442 = x430 * x78
    x443 = x164 * x389 - x186 * x396
    x444 = x443 * x83
    x445 = x437 * x78
    x446 = x435 * x78
    x447 = x160 * x389 - x184 * x396
    x448 = x447 * x83
    x449 = x162 * x389 - x185 * x396
    x450 = x449 * x83
    x451 = x165 * x389 - x192 * x396
    x452 = (
        x441 * x78
        - x451 * x83
        + x89 * (x442 - x444 + x87 * (x445 - x450 + x82 * (x446 - x448)))
    )
    x453 = x16 * x440 + x17 * x405 + x452
    x454 = (
        x393 * x82
        - x395 * x82
        + x87 * (x402 * x82 - x404 * x82 + x82 * (x398 * x82 - x400 * x82))
    )
    x455 = x18 * x413 + x454
    x456 = (
        x415 * x82
        - x417 * x82
        + x89
        * (
            x418 * x82
            - x420 * x82
            + x87 * (x424 * x82 - x426 * x82 + x82 * (x421 * x82 - x423 * x82))
        )
    )
    x457 = x16 * x455 + x18 * x405 + x456
    x458 = x203 * x389 - x209 * x29
    x459 = x202 * x389 - x212 * x29
    x460 = x459 * x78
    x461 = x200 * x389 - x210 * x29
    x462 = x461 * x78
    x463 = x205 * x389 - x220 * x396
    x464 = x463 * x83
    x465 = x207 * x389 - x222 * x396
    x466 = x465 * x83
    x467 = x208 * x389 - x225 * x396
    x468 = x458 * x78 - x467 * x83 + x87 * (x460 - x466 + x82 * (x462 - x464))
    x469 = x17 * x439 + x468
    x470 = x17 * x440 + x469
    x471 = (
        x442 * x82
        - x444 * x82
        + x87 * (x445 * x82 - x450 * x82 + x82 * (x446 * x82 - x448 * x82))
    )
    x472 = x18 * x439 + x471
    x473 = x17 * x455 + x472
    x474 = x13 * x19
    x475 = 2 / x81**2
    x476 = (
        x418 * x475
        - x420 * x475
        + x87 * (x424 * x475 - x426 * x475 + x82 * (x421 * x475 - x423 * x475))
    )
    x477 = x18 * x454 + x476
    x478 = x18 * x455 + x477
    x479 = x139 * x389 - x234 * x29
    x480 = x135 * x389 - x232 * x29
    x481 = x480 * x78
    x482 = x433 * x83
    x483 = -x431 * x83 + x479 * x78 + x82 * (x481 - x482)
    x484 = x16 * x439 + x16 * (x16 * x483 + x439) + x452
    x485 = x199 * x389 - x245 * x29
    x486 = x195 * x389 - x243 * x29
    x487 = x486 * x78
    x488 = x461 * x83
    x489 = -x459 * x83 + x485 * x78 + x82 * (x487 - x488)
    x490 = x17 * x483 + x489
    x491 = x16 * x490 + x469
    x492 = x432 * x82 - x438 * x82 + x82 * (x434 * x82 - x436 * x82)
    x493 = x18 * x483 + x492
    x494 = x16 * x493 + x472
    x495 = x255 * x389 - x257 * x29
    x496 = x495 * x78
    x497 = x256 * x389 - x268 * x396
    x498 = x497 * x83
    x499 = x260 * x389 - x262 * x29
    x500 = x261 * x389 - x270 * x396
    x501 = x17 * x489 + x499 * x78 - x500 * x83 + x82 * (x496 - x498)
    x502 = x17 * x490 + x501
    x503 = x460 * x82 - x466 * x82 + x82 * (x462 * x82 - x464 * x82)
    x504 = x18 * x489 + x503
    x505 = x17 * x493 + x504
    x506 = x445 * x475 - x450 * x475 + x82 * (x446 * x475 - x448 * x475)
    x507 = x18 * x492 + x506
    x508 = x18 * x493 + x507
    x509 = x411 * x82 - x412 * x82 + x82 * (x408 * x82 - x409 * x82)
    x510 = x16 * x454 + x16 * (x16 * x509 + x454) + x456
    x511 = x17 * x509 + x492
    x512 = x16 * x511 + x17 * x454 + x471
    x513 = x402 * x475 - x404 * x475 + x82 * (x398 * x475 - x400 * x475)
    x514 = x18 * x509 + x513
    x515 = x16 * x514 + x477
    x516 = x17 * x492 + x503
    x517 = x17 * x511 + x516
    x518 = x17 * x514 + x507
    x519 = 6 / x81**3
    x520 = x18 * x513 + x424 * x519 - x426 * x519 + x82 * (x421 * x519 - x423 * x519)
    x521 = x18 * x514 + x520
    x522 = x197 * x389 - x275 * x29
    x523 = -x486 * x83 + x522 * x78
    x524 = x16 * x489 + x16 * (x16 * x523 + x489) + x468
    x525 = x259 * x389 - x283 * x29
    x526 = -x495 * x83 + x525 * x78
    x527 = x17 * x523 + x526
    x528 = x16 * x527 + x501
    x529 = x487 * x82 - x488 * x82
    x530 = x18 * x523 + x529
    x531 = x16 * x530 + x504
    x532 = -x29 * x293 + x294 * x389
    x533 = x292 * x389 - x297 * x396
    x534 = x17 * x526 + x17 * x527 + x532 * x78 - x533 * x83
    x535 = x496 * x82 - x498 * x82
    x536 = x17 * x530 + x18 * x526 + x535
    x537 = x462 * x475 - x464 * x475
    x538 = x18 * x529 + x537
    x539 = x18 * x530 + x538
    x540 = x481 * x82 - x482 * x82
    x541 = x16 * x492 + x16 * (x16 * x540 + x492) + x471
    x542 = x17 * x540 + x529
    x543 = x16 * x542 + x516
    x544 = x434 * x475 - x436 * x475
    x545 = x18 * x540 + x544
    x546 = x16 * x545 + x507
    x547 = x17 * x529 + x17 * x542 + x535
    x548 = x17 * x545 + x538
    x549 = x18 * x544 + x446 * x519 - x448 * x519
    x550 = x18 * x545 + x549
    x551 = x408 * x475 - x409 * x475
    x552 = x16 * x513 + x16 * (x16 * x551 + x513) + x476
    x553 = x17 * x551 + x544
    x554 = x16 * x553 + x17 * x513 + x506
    x555 = x398 * x519 - x400 * x519
    x556 = x18 * x551 + x555
    x557 = x16 * x556 + x520
    x558 = x17 * x544 + x17 * x553 + x537
    x559 = x17 * x556 + x549
    x560 = 24 / x81**4
    x561 = x18 * x555 + x18 * x556 + x421 * x560 - x423 * x560
    x562 = x16 * x311
    x563 = x16 * x301 + x16 * (x301 + x562) + x316
    x564 = x17 * x311
    x565 = x324 + x564
    x566 = x16 * x565 + x17 * x301 + x332
    x567 = x18 * x301 + x18 * x562
    x568 = x17 * x324 + x340
    x569 = x17 * x565 + x568
    x570 = x18 * x324
    x571 = x18 * x564 + x570
    x572 = x16 * x354
    x573 = x16 * x324 + x16 * (x324 + x572) + x332
    x574 = x17 * x354
    x575 = x360 + x574
    x576 = x16 * x575 + x568
    x577 = x18 * x572 + x570
    x578 = x17 * x360 + x367
    x579 = x17 * x575 + x578
    x580 = x18 * x360
    x581 = x18 * x574 + x580
    x582 = x16 * x374
    x583 = x16 * x360 + x16 * (x360 + x582) + x340
    x584 = x17 * x374
    x585 = x379 + x584
    x586 = x16 * x585 + x578
    x587 = x18 * x582 + x580
    x588 = x17 * x379 + x17 * x585 + x384
    x589 = x18 * x379 + x18 * x584
    x590 = x105 + x300 * x301 - x302 * x305
    x591 = x127 + x300 * x311 - x303 * x305
    x592 = x16 * x591
    x593 = x17 * x591
    x594 = x176 + x300 * x324 - x305 * x325 + x82 * (x112 + x300 * x303 - x304 * x305)
    x595 = x593 + x594
    x596 = x181 + x300 * x332 - x305 * x336 + x82 * (x116 + x300 * x302 - x305 * x317)
    x597 = (
        x217
        + x300 * x340
        - x305 * x345
        + x87
        * (x182 + x300 * x325 - x305 * x333 + x82 * (x117 + x300 * x304 - x305 * x318))
    )
    x598 = x17 * x594 + x597
    x599 = x18 * x594
    x600 = x238 + x300 * x354 - x305 * x328 + x82 * (x128 + x300 * x313 - x305 * x308)
    x601 = x16 * x600
    x602 = x17 * x600
    x603 = (
        x250
        + x300 * x360
        - x305 * x343
        + x87
        * (x177 + x300 * x328 - x305 * x329 + x82 * (x113 + x300 * x308 - x305 * x309))
    )
    x604 = x602 + x603
    x605 = (
        x17 * x603
        + x266
        + x300 * x367
        - x305 * x368
        + x89
        * (
            x218
            + x300 * x343
            - x305 * x344
            + x87
            * (
                x190
                + x300 * x329
                - x305 * x335
                + x82 * (x118 + x300 * x309 - x305 * x320)
            )
        )
    )
    x606 = x18 * x603
    x607 = (
        x279
        + x300 * x374
        - x305 * x359
        + x87
        * (x239 + x300 * x353 - x305 * x326 + x82 * (x129 + x300 * x312 - x305 * x306))
    )
    x608 = x16 * x607
    x609 = x17 * x607
    x610 = (
        x288
        + x300 * x379
        - x305 * x365
        + x89
        * (
            x251
            + x300 * x359
            - x305 * x341
            + x87
            * (
                x178
                + x300 * x326
                - x305 * x327
                + x82 * (x114 + x300 * x306 - x305 * x307)
            )
        )
    )
    x611 = x609 + x610
    x612 = x300 * x390 - x305 * x391
    x613 = x300 * x406 - x305 * x392
    x614 = x16 * x612 + x16 * (x16 * x613 + x612) + x300 * x414 - x305 * x427
    x615 = x300 * x392
    x616 = x305 * x394
    x617 = x300 * x429 - x305 * x430 + x82 * (x615 - x616)
    x618 = x17 * x613 + x617
    x619 = x300 * x391
    x620 = x305 * x416
    x621 = x300 * x441 - x305 * x451 + x82 * (x619 - x620)
    x622 = x16 * x618 + x17 * x612 + x621
    x623 = x615 * x82 - x616 * x82
    x624 = x18 * x613 + x623
    x625 = x619 * x82 - x620 * x82
    x626 = x16 * x624 + x18 * x612 + x625
    x627 = x300 * x394
    x628 = x305 * x419
    x629 = x300 * x430
    x630 = x305 * x443
    x631 = x300 * x458 - x305 * x467 + x87 * (x629 - x630 + x82 * (x627 - x628))
    x632 = x17 * x617 + x631
    x633 = x17 * x618 + x632
    x634 = x629 * x82 - x630 * x82 + x82 * (x627 * x82 - x628 * x82)
    x635 = x18 * x617 + x634
    x636 = x17 * x624 + x635
    x637 = x475 * x627 - x475 * x628
    x638 = x18 * x623 + x637
    x639 = x18 * x624 + x638
    x640 = x300 * x410
    x641 = x305 * x401
    x642 = x300 * x479 - x305 * x431 + x82 * (x640 - x641)
    x643 = x16 * x617 + x16 * (x16 * x642 + x617) + x621
    x644 = x300 * x431
    x645 = x300 * x401
    x646 = x305 * x403
    x647 = x305 * x437
    x648 = x300 * x485 - x305 * x459 + x87 * (x644 - x647 + x82 * (x645 - x646))
    x649 = x17 * x642 + x648
    x650 = x16 * x649 + x632
    x651 = x644 * x82 - x647 * x82 + x82 * (x645 * x82 - x646 * x82)
    x652 = x18 * x642 + x651
    x653 = x16 * x652 + x635
    x654 = x300 * x459
    x655 = x305 * x465
    x656 = x300 * x437
    x657 = x300 * x403
    x658 = x305 * x425
    x659 = x305 * x449
    x660 = (
        x17 * x648
        + x300 * x499
        - x305 * x500
        + x89 * (x654 - x655 + x87 * (x656 - x659 + x82 * (x657 - x658)))
    )
    x661 = x17 * x649 + x660
    x662 = (
        x654 * x82
        - x655 * x82
        + x87 * (x656 * x82 - x659 * x82 + x82 * (x657 * x82 - x658 * x82))
    )
    x663 = x18 * x648 + x662
    x664 = x17 * x652 + x663
    x665 = x475 * x656 - x475 * x659 + x82 * (x475 * x657 - x475 * x658)
    x666 = x18 * x651 + x665
    x667 = x18 * x652 + x666
    x668 = x640 * x82 - x641 * x82
    x669 = x16 * x623 + x16 * (x16 * x668 + x623) + x625
    x670 = x17 * x668 + x651
    x671 = x16 * x670 + x17 * x623 + x634
    x672 = x475 * x645 - x475 * x646
    x673 = x18 * x668 + x672
    x674 = x16 * x673 + x638
    x675 = x17 * x651 + x662
    x676 = x17 * x670 + x675
    x677 = x17 * x673 + x666
    x678 = x18 * x672 + x519 * x657 - x519 * x658
    x679 = x18 * x673 + x678
    x680 = x300 * x407
    x681 = x305 * x397
    x682 = x300 * x480
    x683 = x305 * x433
    x684 = x300 * x522 - x305 * x486 + x87 * (x682 - x683 + x82 * (x680 - x681))
    x685 = x16 * x648 + x16 * (x16 * x684 + x648) + x631
    x686 = x300 * x486
    x687 = x305 * x461
    x688 = x300 * x397
    x689 = x305 * x399
    x690 = x300 * x433
    x691 = x305 * x435
    x692 = (
        x300 * x525
        - x305 * x495
        + x89 * (x686 - x687 + x87 * (x690 - x691 + x82 * (x688 - x689)))
    )
    x693 = x17 * x684 + x692
    x694 = x16 * x693 + x660
    x695 = (
        x686 * x82
        - x687 * x82
        + x87 * (x690 * x82 - x691 * x82 + x82 * (x688 * x82 - x689 * x82))
    )
    x696 = x18 * x684 + x695
    x697 = x16 * x696 + x663
    x698 = x300 * x495
    x699 = x305 * x497
    x700 = x300 * x461
    x701 = x305 * x463
    x702 = x300 * x399
    x703 = x305 * x422
    x704 = x300 * x435
    x705 = x305 * x447
    x706 = (
        x17 * x692
        + x17 * x693
        + x300 * x532
        - x305 * x533
        + x91
        * (x698 - x699 + x89 * (x700 - x701 + x87 * (x704 - x705 + x82 * (x702 - x703))))
    )
    x707 = (
        x698 * x82
        - x699 * x82
        + x89
        * (
            x700 * x82
            - x701 * x82
            + x87 * (x704 * x82 - x705 * x82 + x82 * (x702 * x82 - x703 * x82))
        )
    )
    x708 = x17 * x696 + x18 * x692 + x707
    x709 = (
        x475 * x700
        - x475 * x701
        + x87 * (x475 * x704 - x475 * x705 + x82 * (x475 * x702 - x475 * x703))
    )
    x710 = x18 * x695 + x709
    x711 = x18 * x696 + x710
    x712 = x682 * x82 - x683 * x82 + x82 * (x680 * x82 - x681 * x82)
    x713 = x16 * x651 + x16 * (x16 * x712 + x651) + x634
    x714 = x17 * x712 + x695
    x715 = x16 * x714 + x675
    x716 = x475 * x690 - x475 * x691 + x82 * (x475 * x688 - x475 * x689)
    x717 = x18 * x712 + x716
    x718 = x16 * x717 + x666
    x719 = x17 * x695 + x17 * x714 + x707
    x720 = x17 * x717 + x710
    x721 = x18 * x716 + x519 * x704 - x519 * x705 + x82 * (x519 * x702 - x519 * x703)
    x722 = x18 * x717 + x721
    x723 = x475 * x680 - x475 * x681
    x724 = x16 * x672 + x16 * (x16 * x723 + x672) + x637
    x725 = x17 * x723 + x716
    x726 = x16 * x725 + x17 * x672 + x665
    x727 = x519 * x688 - x519 * x689
    x728 = x18 * x723 + x727
    x729 = x16 * x728 + x678
    x730 = x17 * x716 + x17 * x725 + x709
    x731 = x17 * x728 + x721
    x732 = x18 * x727 + x18 * x728 + x560 * x702 - x560 * x703
    x733 = x16 * x390 + x16 * (x16 * x406 + x390) + x414
    x734 = x17 * x406 + x429
    x735 = x16 * x734 + x17 * x390 + x441
    x736 = x392 * x82
    x737 = x18 * x406 + x736
    x738 = x391 * x82
    x739 = x16 * x737 + x18 * x390 + x738
    x740 = x17 * x429 + x458
    x741 = x17 * x734 + x740
    x742 = x430 * x82
    x743 = x18 * x429 + x742
    x744 = x17 * x737 + x743
    x745 = x394 * x475
    x746 = x18 * x736 + x745
    x747 = x18 * x737 + x746
    x748 = x16 * x429 + x16 * (x16 * x479 + x429) + x441
    x749 = x17 * x479 + x485
    x750 = x16 * x749 + x740
    x751 = x431 * x82
    x752 = x18 * x479 + x751
    x753 = x16 * x752 + x743
    x754 = x17 * x485 + x499
    x755 = x17 * x749 + x754
    x756 = x459 * x82
    x757 = x18 * x485 + x756
    x758 = x17 * x752 + x757
    x759 = x437 * x475
    x760 = x18 * x751 + x759
    x761 = x18 * x752 + x760
    x762 = x410 * x82
    x763 = x16 * x736 + x16 * (x16 * x762 + x736) + x738
    x764 = x17 * x762 + x751
    x765 = x16 * x764 + x17 * x736 + x742
    x766 = x401 * x475
    x767 = x18 * x762 + x766
    x768 = x16 * x767 + x746
    x769 = x17 * x751 + x756
    x770 = x17 * x764 + x769
    x771 = x17 * x767 + x760
    x772 = x18 * x766 + x403 * x519
    x773 = x18 * x767 + x772
    x774 = x16 * x485 + x16 * (x16 * x522 + x485) + x458
    x775 = x17 * x522 + x525
    x776 = x16 * x775 + x754
    x777 = x486 * x82
    x778 = x18 * x522 + x777
    x779 = x16 * x778 + x757
    x780 = x17 * x525 + x17 * x775 + x532
    x781 = x495 * x82
    x782 = x17 * x778 + x18 * x525 + x781
    x783 = x461 * x475
    x784 = x18 * x777 + x783
    x785 = x18 * x778 + x784
    x786 = x480 * x82
    x787 = x16 * x751 + x16 * (x16 * x786 + x751) + x742
    x788 = x17 * x786 + x777
    x789 = x16 * x788 + x769
    x790 = x433 * x475
    x791 = x18 * x786 + x790
    x792 = x16 * x791 + x760
    x793 = x17 * x777 + x17 * x788 + x781
    x794 = x17 * x791 + x784
    x795 = x18 * x790 + x435 * x519
    x796 = x18 * x791 + x795
    x797 = x407 * x475
    x798 = x16 * x766 + x16 * (x16 * x797 + x766) + x745
    x799 = x17 * x797 + x790
    x800 = x16 * x799 + x17 * x766 + x759
    x801 = x397 * x519
    x802 = x18 * x797 + x801
    x803 = x16 * x802 + x772
    x804 = x17 * x790 + x17 * x799 + x783
    x805 = x17 * x802 + x795
    x806 = x18 * x801 + x18 * x802 + x399 * x560
    x807 = x105 + x389 * x390 - x391 * x396
    x808 = x127 + x389 * x406 - x392 * x396
    x809 = x176 + x389 * x429 - x396 * x430
    x810 = x17 * x808 + x809
    x811 = x181 + x389 * x441 - x396 * x451
    x812 = x394 * x396
    x813 = x389 * x736 - x812 * x82 + x82 * (x112 + x389 * x392 - x812)
    x814 = x18 * x808 + x813
    x815 = x396 * x416
    x816 = x389 * x738 - x815 * x82 + x82 * (x116 + x389 * x391 - x815)
    x817 = x217 + x389 * x458 - x396 * x467
    x818 = x17 * x809 + x817
    x819 = x396 * x443
    x820 = x389 * x742 - x819 * x82 + x82 * (x182 + x389 * x430 - x819)
    x821 = x18 * x809 + x820
    x822 = x389 * x394
    x823 = x396 * x419
    x824 = (
        x475 * x822
        - x475 * x823
        + x87 * (x82 * x822 - x82 * x823 + x82 * (x117 + x822 - x823))
    )
    x825 = x18 * x813 + x824
    x826 = x238 + x389 * x479 - x396 * x431
    x827 = x250 + x389 * x485 - x396 * x459
    x828 = x17 * x826 + x827
    x829 = x396 * x437
    x830 = x389 * x751 - x82 * x829 + x82 * (x177 + x389 * x431 - x829)
    x831 = x18 * x826 + x830
    x832 = x17 * x827 + x266 + x389 * x499 - x396 * x500
    x833 = x396 * x465
    x834 = x389 * x756 - x82 * x833 + x82 * (x218 + x389 * x459 - x833)
    x835 = x18 * x827 + x834
    x836 = x389 * x437
    x837 = x396 * x449
    x838 = (
        x475 * x836
        - x475 * x837
        + x87 * (x82 * x836 - x82 * x837 + x82 * (x190 + x836 - x837))
    )
    x839 = x18 * x830 + x838
    x840 = x389 * x410
    x841 = x396 * x401
    x842 = x82 * x840 - x82 * x841 + x82 * (x128 + x840 - x841)
    x843 = x17 * x842 + x830
    x844 = x389 * x401
    x845 = x396 * x403
    x846 = (
        x475 * x844
        - x475 * x845
        + x87 * (x82 * x844 - x82 * x845 + x82 * (x113 + x844 - x845))
    )
    x847 = x18 * x842 + x846
    x848 = x17 * x830 + x834
    x849 = x389 * x403
    x850 = x396 * x425
    x851 = (
        x18 * x846
        + x519 * x849
        - x519 * x850
        + x89
        * (
            x475 * x849
            - x475 * x850
            + x87 * (x82 * x849 - x82 * x850 + x82 * (x118 + x849 - x850))
        )
    )
    x852 = x279 + x389 * x522 - x396 * x486
    x853 = x288 + x389 * x525 - x396 * x495
    x854 = x17 * x852 + x853
    x855 = x396 * x461
    x856 = x389 * x777 - x82 * x855 + x82 * (x251 + x389 * x486 - x855)
    x857 = x18 * x852 + x856
    x858 = x396 * x497
    x859 = x389 * x781 - x82 * x858 + x82 * (x267 + x389 * x495 - x858)
    x860 = x389 * x461
    x861 = x396 * x463
    x862 = (
        x475 * x860
        - x475 * x861
        + x87 * (x82 * x860 - x82 * x861 + x82 * (x219 + x860 - x861))
    )
    x863 = x18 * x856 + x862
    x864 = x389 * x480
    x865 = x396 * x433
    x866 = x82 * x864 - x82 * x865 + x82 * (x239 + x864 - x865)
    x867 = x17 * x866 + x856
    x868 = x389 * x433
    x869 = x396 * x435
    x870 = (
        x475 * x868
        - x475 * x869
        + x87 * (x82 * x868 - x82 * x869 + x82 * (x178 + x868 - x869))
    )
    x871 = x18 * x866 + x870
    x872 = x389 * x435
    x873 = x396 * x447
    x874 = (
        x18 * x870
        + x519 * x872
        - x519 * x873
        + x89
        * (
            x475 * x872
            - x475 * x873
            + x87 * (x82 * x872 - x82 * x873 + x82 * (x191 + x872 - x873))
        )
    )
    x875 = x389 * x407
    x876 = x396 * x397
    x877 = (
        x475 * x875
        - x475 * x876
        + x87 * (x82 * x875 - x82 * x876 + x82 * (x129 + x875 - x876))
    )
    x878 = x17 * x877 + x870
    x879 = x389 * x397
    x880 = x396 * x399
    x881 = (
        x519 * x879
        - x519 * x880
        + x89
        * (
            x475 * x879
            - x475 * x880
            + x87 * (x82 * x879 - x82 * x880 + x82 * (x114 + x879 - x880))
        )
    )
    x882 = x18 * x877 + x881
    x883 = x389 * x399
    x884 = x396 * x422

    # 324 item(s)
    S = numpy.array(
        [
            x11 * x126
            + x115 * x16
            + x16 * (x115 + x131)
            + x77
            + x78 * x92
            - x83 * (x103 * x91 + x65 * x78 - x83 * x99)
            + x91
            * (
                -x103 * x83
                + x116
                + x78 * x90
                + x89
                * (
                    -x102 * x83
                    + x117
                    + x78 * x88
                    + x87
                    * (
                        -x101 * x83
                        + x118
                        + x78 * x86
                        + x82 * (-x100 * x83 + x119 + x78 * x84)
                    )
                )
            ),
            x11 * x174 + x115 * x17 + x16 * x180 + x193,
            x11 * x194 + x115 * x18 + x131 * x18,
            x11 * x216 + x17 * x180 + x227,
            x11 * x229 + x175 * x18 + x230,
            x124 * x231 + x130 * x19,
            x11 * x237 + x16 * x179 + x16 * (x179 + x241) + x193,
            x11 * x248 + x16 * x253 + x227,
            x11 * x254 + x18 * x241 + x230,
            x11 * x265 + x17 * x253 + x271,
            x11 * x273 + x18 * x249 + x274,
            x19 * x240 + x231 * x235,
            0,
            0,
            0,
            0,
            0,
            0,
            x11 * x278 + x16 * x252 + x16 * (x252 + x281) + x226,
            x11 * x286 + x16 * x290 + x271,
            x11 * x291 + x18 * x281 + x274,
            x11 * x298
            + x17 * x289
            + x17 * x290
            + x295
            + x296 * x78
            - x83 * (x292 * x78 - x297 * x83),
            x11 * x299 + x18 * x287 + x18 * x289,
            x19 * x280 + x231 * x276,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            x12 * x126 + x322,
            x12 * x174 + x338,
            x12 * x194 + x339,
            x12 * x216 + x348,
            x12 * x229 + x350,
            x124 * x351 + x352,
            x12 * x237 + x357,
            x12 * x248 + x363,
            x12 * x254 + x364,
            x12 * x265 + x370,
            x12 * x273 + x372,
            x235 * x351 + x373,
            0,
            0,
            0,
            0,
            0,
            0,
            x12 * x278 + x377,
            x12 * x286 + x382,
            x12 * x291 + x383,
            x12 * x298 + x386,
            x12 * x299 + x387,
            x276 * x351 + x388,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            x126 * x13 + x428,
            x13 * x174 + x453,
            x13 * x194 + x457,
            x13 * x216 + x470,
            x13 * x229 + x473,
            x124 * x474 + x478,
            x13 * x237 + x484,
            x13 * x248 + x491,
            x13 * x254 + x494,
            x13 * x265 + x502,
            x13 * x273 + x505,
            x235 * x474 + x508,
            x510,
            x512,
            x515,
            x517,
            x518,
            x521,
            x13 * x278 + x524,
            x13 * x286 + x528,
            x13 * x291 + x531,
            x13 * x298 + x534,
            x13 * x299 + x536,
            x276 * x474 + x539,
            x541,
            x543,
            x546,
            x547,
            x548,
            x550,
            x552,
            x554,
            x557,
            x558,
            x559,
            x561,
            x11 * x563 + x322,
            x11 * x566 + x338,
            x11 * x567 + x339,
            x11 * x569 + x348,
            x11 * x571 + x350,
            x231 * x311 + x352,
            x11 * x573 + x357,
            x11 * x576 + x363,
            x11 * x577 + x364,
            x11 * x579 + x370,
            x11 * x581 + x372,
            x231 * x354 + x373,
            0,
            0,
            0,
            0,
            0,
            0,
            x11 * x583 + x377,
            x11 * x586 + x382,
            x11 * x587 + x383,
            x11 * x588 + x386,
            x11 * x589 + x387,
            x231 * x374 + x388,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            x12 * x563
            + x16 * x590
            + x16 * (x590 + x592)
            + x300 * x316
            - x305 * x321
            + x77,
            x12 * x566 + x16 * x595 + x17 * x590 + x596,
            x12 * x567 + x18 * x590 + x18 * x592,
            x12 * x569 + x17 * x595 + x598,
            x12 * x571 + x18 * x593 + x599,
            x19 * x591 + x311 * x351,
            x12 * x573 + x16 * x594 + x16 * (x594 + x601) + x596,
            x12 * x576 + x16 * x604 + x598,
            x12 * x577 + x18 * x601 + x599,
            x12 * x579 + x17 * x604 + x605,
            x12 * x581 + x18 * x602 + x606,
            x19 * x600 + x351 * x354,
            0,
            0,
            0,
            0,
            0,
            0,
            x12 * x583 + x16 * x603 + x16 * (x603 + x608) + x597,
            x12 * x586 + x16 * x611 + x605,
            x12 * x587 + x18 * x608 + x606,
            x12 * x588
            + x17 * x610
            + x17 * x611
            + x295
            + x300 * x384
            - x305 * x385
            + x91
            * (
                x267
                + x300 * x365
                - x305 * x366
                + x89
                * (
                    x219
                    + x300 * x341
                    - x305 * x342
                    + x87
                    * (
                        x191
                        + x300 * x327
                        - x305 * x334
                        + x82 * (x119 + x300 * x307 - x305 * x319)
                    )
                )
            ),
            x12 * x589 + x18 * x609 + x18 * x610,
            x19 * x607 + x351 * x374,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            x13 * x563 + x614,
            x13 * x566 + x622,
            x13 * x567 + x626,
            x13 * x569 + x633,
            x13 * x571 + x636,
            x311 * x474 + x639,
            x13 * x573 + x643,
            x13 * x576 + x650,
            x13 * x577 + x653,
            x13 * x579 + x661,
            x13 * x581 + x664,
            x354 * x474 + x667,
            x669,
            x671,
            x674,
            x676,
            x677,
            x679,
            x13 * x583 + x685,
            x13 * x586 + x694,
            x13 * x587 + x697,
            x13 * x588 + x706,
            x13 * x589 + x708,
            x374 * x474 + x711,
            x713,
            x715,
            x718,
            x719,
            x720,
            x722,
            x724,
            x726,
            x729,
            x730,
            x731,
            x732,
            x11 * x733 + x428,
            x11 * x735 + x453,
            x11 * x739 + x457,
            x11 * x741 + x470,
            x11 * x744 + x473,
            x11 * x747 + x478,
            x11 * x748 + x484,
            x11 * x750 + x491,
            x11 * x753 + x494,
            x11 * x755 + x502,
            x11 * x758 + x505,
            x11 * x761 + x508,
            x11 * x763 + x510,
            x11 * x765 + x512,
            x11 * x768 + x515,
            x11 * x770 + x517,
            x11 * x771 + x518,
            x11 * x773 + x521,
            x11 * x774 + x524,
            x11 * x776 + x528,
            x11 * x779 + x531,
            x11 * x780 + x534,
            x11 * x782 + x536,
            x11 * x785 + x539,
            x11 * x787 + x541,
            x11 * x789 + x543,
            x11 * x792 + x546,
            x11 * x793 + x547,
            x11 * x794 + x548,
            x11 * x796 + x550,
            x11 * x798 + x552,
            x11 * x800 + x554,
            x11 * x803 + x557,
            x11 * x804 + x558,
            x11 * x805 + x559,
            x11 * x806 + x561,
            x12 * x733 + x614,
            x12 * x735 + x622,
            x12 * x739 + x626,
            x12 * x741 + x633,
            x12 * x744 + x636,
            x12 * x747 + x639,
            x12 * x748 + x643,
            x12 * x750 + x650,
            x12 * x753 + x653,
            x12 * x755 + x661,
            x12 * x758 + x664,
            x12 * x761 + x667,
            x12 * x763 + x669,
            x12 * x765 + x671,
            x12 * x768 + x674,
            x12 * x770 + x676,
            x12 * x771 + x677,
            x12 * x773 + x679,
            x12 * x774 + x685,
            x12 * x776 + x694,
            x12 * x779 + x697,
            x12 * x780 + x706,
            x12 * x782 + x708,
            x12 * x785 + x711,
            x12 * x787 + x713,
            x12 * x789 + x715,
            x12 * x792 + x718,
            x12 * x793 + x719,
            x12 * x794 + x720,
            x12 * x796 + x722,
            x12 * x798 + x724,
            x12 * x800 + x726,
            x12 * x803 + x729,
            x12 * x804 + x730,
            x12 * x805 + x731,
            x12 * x806 + x732,
            x13 * x733
            + x16 * x807
            + x16 * (x16 * x808 + x807)
            + x389 * x414
            - x396 * x427
            + x77,
            x13 * x735 + x16 * x810 + x17 * x807 + x811,
            x13 * x739 + x16 * x814 + x18 * x807 + x816,
            x13 * x741 + x17 * x810 + x818,
            x13 * x744 + x17 * x814 + x821,
            x13 * x747 + x18 * x814 + x825,
            x13 * x748 + x16 * x809 + x16 * (x16 * x826 + x809) + x811,
            x13 * x750 + x16 * x828 + x818,
            x13 * x753 + x16 * x831 + x821,
            x13 * x755 + x17 * x828 + x832,
            x13 * x758 + x17 * x831 + x835,
            x13 * x761 + x18 * x831 + x839,
            x13 * x763 + x16 * x813 + x16 * (x16 * x842 + x813) + x816,
            x13 * x765 + x16 * x843 + x17 * x813 + x820,
            x13 * x768 + x16 * x847 + x825,
            x13 * x770 + x17 * x843 + x848,
            x13 * x771 + x17 * x847 + x839,
            x13 * x773 + x18 * x847 + x851,
            x13 * x774 + x16 * x827 + x16 * (x16 * x852 + x827) + x817,
            x13 * x776 + x16 * x854 + x832,
            x13 * x779 + x16 * x857 + x835,
            x13 * x780 + x17 * x853 + x17 * x854 + x295 + x389 * x532 - x396 * x533,
            x13 * x782 + x17 * x857 + x18 * x853 + x859,
            x13 * x785 + x18 * x857 + x863,
            x13 * x787 + x16 * x830 + x16 * (x16 * x866 + x830) + x820,
            x13 * x789 + x16 * x867 + x848,
            x13 * x792 + x16 * x871 + x839,
            x13 * x793 + x17 * x856 + x17 * x867 + x859,
            x13 * x794 + x17 * x871 + x863,
            x13 * x796 + x18 * x871 + x874,
            x13 * x798 + x16 * x846 + x16 * (x16 * x877 + x846) + x824,
            x13 * x800 + x16 * x878 + x17 * x846 + x838,
            x13 * x803 + x16 * x882 + x851,
            x13 * x804 + x17 * x870 + x17 * x878 + x862,
            x13 * x805 + x17 * x882 + x874,
            x13 * x806
            + x18 * x881
            + x18 * x882
            + x560 * x883
            - x560 * x884
            + x91
            * (
                x519 * x883
                - x519 * x884
                + x89
                * (
                    x475 * x883
                    - x475 * x884
                    + x87 * (x82 * x883 - x82 * x884 + x82 * (x119 + x883 - x884))
                )
            ),
        ]
    )
    return S


def eri_1200(a, A, b, B, c, C, d, D):
    """Cartesian [pd|ss] 2-electron electron repulsion integral.

    Generated code; DO NOT modify by hand!"""

    x0 = (2 * a + 2 * b) ** (-1.0)
    x1 = numpy.pi**2.5
    x2 = a + b
    x3 = x2 ** (-1.0)
    x4 = -x3 * (a * A[0] + b * B[0])
    x5 = -x4 - A[0]
    x6 = c + d
    x7 = x2 * x6
    x8 = x2 + x6
    x9 = (x7 + numpy.sqrt(x8)) ** (-1.0)
    x10 = A[0] - B[0]
    x11 = A[1] - B[1]
    x12 = A[2] - B[2]
    x13 = numpy.exp(-a * b * x3 * (x10**2 + x11**2 + x12**2))
    x14 = x6 ** (-1.0)
    x15 = numpy.exp(
        -c * d * x14 * ((C[0] - D[0]) ** 2 + (C[1] - D[1]) ** 2 + (C[2] - D[2]) ** 2)
    )
    x16 = x8 ** (-1.0)
    x17 = -x14 * (c * C[0] + d * D[0]) - x4
    x18 = -x3 * (a * A[1] + b * B[1])
    x19 = -x14 * (c * C[1] + d * D[1]) - x18
    x20 = -x3 * (a * A[2] + b * B[2])
    x21 = -x14 * (c * C[2] + d * D[2]) - x20
    x22 = x16 * x7 * (x17**2 + x19**2 + x21**2)
    x23 = boys(0, x22)
    x24 = x16 * x6
    x25 = x17 * x24
    x26 = boys(1, x22)
    x27 = 2 * x1 * x13 * x15 * x9
    x28 = x26 * x27
    x29 = x25 * x28
    x30 = x27 * boys(2, x22)
    x31 = -x25 * x30 + x28 * x5
    x32 = x24 * x31
    x33 = x0 * (2 * x1 * x13 * x15 * x23 * x9 - x24 * x28)
    x34 = x23 * x27
    x35 = -x29 + x34 * x5
    x36 = -x17 * x32 + x33 + x35 * x5
    x37 = x0 * (2 * x1 * x13 * x15 * x26 * x9 - x24 * x30)
    x38 = x27 * boys(3, x22)
    x39 = -x18 - A[1]
    x40 = x19 * x24
    x41 = x28 * x40
    x42 = x34 * x39 - x41
    x43 = x28 * x39 - x30 * x40
    x44 = x24 * x43
    x45 = -x17 * x44 + x42 * x5
    x46 = x11 * x35 + x45
    x47 = x0 * (2 * x1 * x13 * x15 * x23 * x39 * x9 - x41 - x44)
    x48 = x30 * x39 - x38 * x40
    x49 = -x25 * (-x25 * x48 + x43 * x5) + x45 * x5 + x47
    x50 = -x20 - A[2]
    x51 = x21 * x24
    x52 = x28 * x51
    x53 = x34 * x50 - x52
    x54 = x28 * x50 - x30 * x51
    x55 = x24 * x54
    x56 = -x17 * x55 + x5 * x53
    x57 = x12 * x35 + x56
    x58 = x0 * (2 * x1 * x13 * x15 * x23 * x50 * x9 - x52 - x55)
    x59 = x30 * x50 - x38 * x51
    x60 = -x25 * (-x25 * x59 + x5 * x54) + x5 * x56 + x58
    x61 = -x19 * x44 + x33 + x39 * x42
    x62 = x37 + x39 * x43 - x40 * x48
    x63 = x11 * x45 - x25 * x62 + x5 * x61
    x64 = -x19 * x55 + x39 * x53
    x65 = x39 * x54 - x40 * x59
    x66 = -x25 * x65 + x5 * x64
    x67 = x12 * x45 + x66
    x68 = -x21 * x55 + x33 + x50 * x53
    x69 = x37 + x50 * x54 - x51 * x59
    x70 = x12 * x56 - x25 * x69 + x5 * x68
    x71 = x11 * x42 + x61
    x72 = x12 * x42 + x64
    x73 = x39 * x64 - x40 * x65 + x58
    x74 = x12 * x64 + x39 * x68 - x40 * x69
    x75 = x11 * x53 + x64
    x76 = x12 * x53 + x68

    # 18 item(s)
    S = numpy.array(
        [
            2 * x0 * (2 * x1 * x13 * x15 * x23 * x5 * x9 - x29 - x32)
            + x10 * x36
            + x10 * (x10 * x35 + x36)
            - x25 * (-x25 * (-x25 * x38 + x30 * x5) + x31 * x5 + x37)
            + x36 * x5,
            x10 * x46 + x11 * x36 + x49,
            x10 * x57 + x12 * x36 + x60,
            x11 * x46 + x63,
            x11 * x57 + x67,
            x12 * x57 + x70,
            x10 * x45 + x10 * (x10 * x42 + x45) + x49,
            x10 * x71 + x63,
            x10 * x72 + x67,
            x11 * x61 + x11 * x71 + x39 * x61 - x40 * x62 + 2 * x47,
            x11 * x72 + x12 * x61 + x73,
            x12 * x72 + x74,
            x10 * x56 + x10 * (x10 * x53 + x56) + x60,
            x10 * x75 + x11 * x56 + x66,
            x10 * x76 + x70,
            x11 * x64 + x11 * x75 + x73,
            x11 * x76 + x74,
            x12 * x68 + x12 * x76 + x50 * x68 - x51 * x69 + 2 * x58,
        ]
    )
    return S


def eri_1201(a, A, b, B, c, C, d, D):
    """Cartesian [pd|sp] 2-electron electron repulsion integral.

    Generated code; DO NOT modify by hand!"""

    x0 = 2 * a + 2 * b
    x1 = (2 * c + 2 * d + x0) ** (-1.0)
    x2 = a + b
    x3 = x2 ** (-1.0)
    x4 = -x3 * (a * A[0] + b * B[0])
    x5 = -x4 - A[0]
    x6 = c + d
    x7 = x2 + x6
    x8 = x7 ** (-1.0)
    x9 = x6 ** (-1.0)
    x10 = x9 * (c * C[0] + d * D[0])
    x11 = -x10 - x4
    x12 = x9 * (c * C[1] + d * D[1])
    x13 = -x3 * (a * A[1] + b * B[1])
    x14 = -x12 - x13
    x15 = -x3 * (a * A[2] + b * B[2])
    x16 = -x15 - x9 * (c * C[2] + d * D[2])
    x17 = x2 * x6
    x18 = x17 * x8 * (x11**2 + x14**2 + x16**2)
    x19 = boys(2, x18)
    x20 = numpy.pi**2.5
    x21 = (x17 + numpy.sqrt(x7)) ** (-1.0)
    x22 = A[0] - B[0]
    x23 = A[1] - B[1]
    x24 = A[2] - B[2]
    x25 = numpy.exp(-a * b * x3 * (x22**2 + x23**2 + x24**2))
    x26 = C[0] - D[0]
    x27 = C[1] - D[1]
    x28 = C[2] - D[2]
    x29 = numpy.exp(-c * d * x9 * (x26**2 + x27**2 + x28**2))
    x30 = 2 * x20 * x21 * x25 * x29
    x31 = x19 * x30
    x32 = x6 * x8
    x33 = x11 * x32
    x34 = x30 * boys(3, x18)
    x35 = x31 * x5 - x33 * x34
    x36 = x10 - C[0]
    x37 = boys(1, x18)
    x38 = x30 * x37
    x39 = x2 * x8
    x40 = x11 * x39
    x41 = x31 * x40 + x36 * x38
    x42 = x31 * x36 + x34 * x40
    x43 = x32 * x42
    x44 = x1 * x35 - x11 * x43 + x41 * x5
    x45 = x32 * x44
    x46 = x31 * x33
    x47 = x38 * x5 - x46
    x48 = boys(0, x18)
    x49 = x30 * x48
    x50 = x36 * x49 + x38 * x40
    x51 = x32 * x41
    x52 = x1 * x47 - x11 * x51 + x5 * x50
    x53 = x0 ** (-1.0)
    x54 = 2 * x53
    x55 = x33 * x38
    x56 = x32 * x47
    x57 = x53 * (2 * x20 * x21 * x25 * x29 * x48 - x32 * x38)
    x58 = x49 * x5 - x55
    x59 = -x11 * x56 + x5 * x58 + x57
    x60 = x53 * (2 * x20 * x21 * x25 * x29 * x37 - x31 * x32)
    x61 = x32 * x35
    x62 = -x11 * x61 + x47 * x5 + x60
    x63 = -x33 * x62 + x5 * x59 + x54 * (2 * x20 * x21 * x25 * x29 * x48 * x5 - x55 - x56)
    x64 = x53 * (2 * x19 * x20 * x21 * x25 * x29 - x32 * x34)
    x65 = x30 * boys(4, x18)
    x66 = -x33 * x65 + x34 * x5
    x67 = -x33 * x66 + x35 * x5 + x64
    x68 = x53 * (x50 - x51)
    x69 = x1 * x62 - x11 * x45 + x5 * x52 + x68
    x70 = x53 * (x41 - x43)
    x71 = x34 * x36 + x40 * x65
    x72 = x26 * x59 + x69
    x73 = x26 * x58 + x52
    x74 = x12 - C[1]
    x75 = x14 * x39
    x76 = x38 * x75 + x49 * x74
    x77 = x31 * x75 + x38 * x74
    x78 = x32 * x77
    x79 = x11 * x78
    x80 = x31 * x74 + x34 * x75
    x81 = x32 * x80
    x82 = -x11 * x81 + x5 * x77
    x83 = x32 * x82
    x84 = x53 * (x76 - x78)
    x85 = x5 * x76 - x79
    x86 = -x11 * x83 + x5 * x85 + x84
    x87 = x53 * (x77 - x81)
    x88 = x34 * x74 + x65 * x75
    x89 = x27 * x59 + x86
    x90 = x27 * x58 + x85
    x91 = x28 * x59
    x92 = x28 * x58
    x93 = -x13 - A[1]
    x94 = x14 * x32
    x95 = x38 * x94
    x96 = x49 * x93 - x95
    x97 = x31 * x94
    x98 = x38 * x93 - x97
    x99 = x32 * x98
    x100 = -x11 * x99 + x5 * x96
    x101 = x31 * x93 - x34 * x94
    x102 = x101 * x32
    x103 = -x102 * x11 + x5 * x98
    x104 = x14 * x51
    x105 = -x104 + x50 * x93
    x106 = -x14 * x43 + x41 * x93
    x107 = x106 * x32
    x108 = x1 * x103 + x105 * x5 - x107 * x11
    x109 = x100 * x26 + x108
    x110 = x109 + x23 * x73
    x111 = x53 * (-x104 - x107 + x50 * x93)
    x112 = x53 * (-x102 + 2 * x20 * x21 * x25 * x29 * x37 * x93 - x97)
    x113 = x34 * x93 - x65 * x94
    x114 = x101 * x5 - x113 * x33
    x115 = x53 * (2 * x20 * x21 * x25 * x29 * x48 * x93 - x95 - x99)
    x116 = x100 * x5 - x103 * x33 + x115
    x117 = x42 * x93 - x71 * x94
    x118 = (
        x1 * (x103 * x5 + x112 - x114 * x33)
        + x108 * x5
        + x111
        + x116 * x26
        - x33 * (x1 * x114 + x106 * x5 - x117 * x33)
    )
    x119 = x1 * x98 - x14 * x78 + x76 * x93
    x120 = x1 * x101 - x14 * x81 + x77 * x93
    x121 = x120 * x32
    x122 = -x11 * x121 + x119 * x5
    x123 = x100 * x27 + x122
    x124 = x123 + x23 * x90
    x125 = x53 * (x119 - x121)
    x126 = x1 * x113 + x80 * x93 - x88 * x94
    x127 = x116 * x27 + x122 * x5 + x125 - x33 * (x120 * x5 - x126 * x33)
    x128 = x100 * x28
    x129 = x128 + x23 * x92
    x130 = x116 * x28
    x131 = -x15 - A[2]
    x132 = x16 * x32
    x133 = x132 * x38
    x134 = x131 * x49 - x133
    x135 = x132 * x31
    x136 = x131 * x38 - x135
    x137 = x136 * x32
    x138 = -x11 * x137 + x134 * x5
    x139 = x136 * x5
    x140 = x131 * x31 - x132 * x34
    x141 = x140 * x32
    x142 = x11 * x141
    x143 = x139 - x142
    x144 = x16 * x51
    x145 = x131 * x50 - x144
    x146 = x131 * x41 - x16 * x43
    x147 = x146 * x32
    x148 = x1 * x143 - x11 * x147 + x145 * x5
    x149 = x138 * x26 + x148
    x150 = x149 + x24 * x73
    x151 = x53 * (x131 * x50 - x144 - x147)
    x152 = x53 * (2 * x131 * x20 * x21 * x25 * x29 * x37 - x135 - x141)
    x153 = x140 * x5
    x154 = x131 * x34 - x132 * x65
    x155 = x154 * x33
    x156 = x153 - x155
    x157 = x53 * (2 * x131 * x20 * x21 * x25 * x29 * x48 - x133 - x137)
    x158 = x138 * x5 - x143 * x33 + x157
    x159 = x131 * x42 - x132 * x71
    x160 = (
        x1 * (x143 * x5 + x152 - x156 * x33)
        + x148 * x5
        + x151
        + x158 * x26
        - x33 * (x1 * x156 + x146 * x5 - x159 * x33)
    )
    x161 = x16 * x78
    x162 = x131 * x76 - x161
    x163 = x131 * x77 - x16 * x81
    x164 = x163 * x32
    x165 = -x11 * x164 + x162 * x5
    x166 = x138 * x27 + x165
    x167 = x166 + x24 * x90
    x168 = x53 * (x131 * x76 - x161 - x164)
    x169 = x131 * x80 - x132 * x88
    x170 = x158 * x27 + x165 * x5 + x168 - x33 * (x163 * x5 - x169 * x33)
    x171 = x1 * x139 - x1 * x142
    x172 = x138 * x28 + x171
    x173 = x172 + x24 * x92
    x174 = x1 * x141
    x175 = x53 * (x1 * x136 - x174)
    x176 = x158 * x28 + x171 * x5 + x175 - x33 * (x1 * x153 - x1 * x155)
    x177 = -x102 * x14 + x60 + x93 * x98
    x178 = x101 * x93 - x113 * x94 + x64
    x179 = -x14 * x99 + x57 + x93 * x96
    x180 = -x177 * x33 + x179 * x5
    x181 = x105 * x93 - x107 * x14 + x68
    x182 = x106 * x93 - x117 * x94 + x70
    x183 = (
        x1 * (x177 * x5 - x178 * x33) + x109 * x23 + x180 * x26 + x181 * x5 - x182 * x33
    )
    x184 = x1 * x177 + x119 * x93 - x121 * x14 + x84
    x185 = x1 * x178 + x120 * x93 - x126 * x94 + x87
    x186 = x123 * x23 + x180 * x27 + x184 * x5 - x185 * x33
    x187 = x128 * x23 + x180 * x28
    x188 = x136 * x93 - x14 * x141
    x189 = x140 * x93
    x190 = x154 * x94
    x191 = x189 - x190
    x192 = x134 * x93 - x137 * x14
    x193 = -x188 * x33 + x192 * x5
    x194 = -x14 * x147 + x145 * x93
    x195 = x146 * x93 - x159 * x94
    x196 = x1 * (x188 * x5 - x191 * x33) + x193 * x26 + x194 * x5 - x195 * x33
    x197 = x109 * x24 + x196
    x198 = x1 * x188 - x14 * x164 + x162 * x93
    x199 = x1 * x191 + x163 * x93 - x169 * x94
    x200 = x193 * x27 + x198 * x5 - x199 * x33
    x201 = x123 * x24 + x200
    x202 = x1 * x136
    x203 = -x14 * x174 + x202 * x93
    x204 = x1 * x189 - x1 * x190
    x205 = x193 * x28 + x203 * x5 - x204 * x33
    x206 = x128 * x24 + x205
    x207 = x131 * x136 - x141 * x16 + x60
    x208 = x131 * x140
    x209 = x132 * x154
    x210 = x208 - x209 + x64
    x211 = x131 * x134 - x137 * x16 + x57
    x212 = -x207 * x33 + x211 * x5
    x213 = x131 * x145 - x147 * x16 + x68
    x214 = x131 * x146 - x132 * x159 + x70
    x215 = (
        x1 * (x207 * x5 - x210 * x33) + x149 * x24 + x212 * x26 + x213 * x5 - x214 * x33
    )
    x216 = x131 * x162 - x16 * x164 + x84
    x217 = x131 * x163 - x132 * x169 + x87
    x218 = x166 * x24 + x212 * x27 + x216 * x5 - x217 * x33
    x219 = x1 * x207 + x131 * x202 - x16 * x174
    x220 = x1 * x208 - x1 * x209 + x1 * x210
    x221 = x172 * x24 + x212 * x28 + x219 * x5 - x220 * x33
    x222 = x105 + x26 * x96
    x223 = x119 + x27 * x96
    x224 = x28 * x96
    x225 = x179 * x26 + x181
    x226 = x222 * x23 + x225
    x227 = x179 * x27 + x184
    x228 = x223 * x23 + x227
    x229 = x179 * x28
    x230 = x224 * x23 + x229
    x231 = x192 * x26 + x194
    x232 = x222 * x24 + x231
    x233 = x192 * x27 + x198
    x234 = x223 * x24 + x233
    x235 = x192 * x28 + x203
    x236 = x224 * x24 + x235
    x237 = 2 * x115 - x177 * x94 + x179 * x93
    x238 = x157 - x188 * x94 + x192 * x93
    x239 = x151 + x194 * x93 - x195 * x94 + x238 * x26
    x240 = (
        x1 * (x152 + x188 * x93 - x191 * x94)
        + x168
        + x198 * x93
        - x199 * x94
        + x238 * x27
    )
    x241 = x175 + x203 * x93 - x204 * x94 + x238 * x28
    x242 = -x207 * x94 + x211 * x93
    x243 = x213 * x93 - x214 * x94 + x231 * x24 + x242 * x26
    x244 = (
        x1 * (x207 * x93 - x210 * x94) + x216 * x93 - x217 * x94 + x233 * x24 + x242 * x27
    )
    x245 = x219 * x93 - x220 * x94 + x235 * x24 + x242 * x28
    x246 = x134 * x26 + x145
    x247 = x134 * x27 + x162
    x248 = x134 * x28 + x202
    x249 = x23 * x246 + x231
    x250 = x23 * x247 + x233
    x251 = x23 * x248 + x235
    x252 = x211 * x26 + x213
    x253 = x24 * x246 + x252
    x254 = x211 * x27 + x216
    x255 = x24 * x247 + x254
    x256 = x211 * x28 + x219
    x257 = x24 * x248 + x256
    x258 = x131 * x211 - x132 * x207 + 2 * x157

    # 54 item(s)
    S = numpy.array(
        [
            x1
            * (
                -x33 * x67
                + x5 * x62
                + x54 * (2 * x20 * x21 * x25 * x29 * x37 * x5 - x46 - x61)
            )
            + x22 * x72
            + x22 * (x22 * x73 + x72)
            + x26 * x63
            - x33 * (x1 * x67 - x33 * (x1 * x66 - x33 * x71 + x42 * x5) + x44 * x5 + x70)
            + x5 * x69
            + x54 * (-x45 + x52),
            x22 * x89
            + x22 * (x22 * x90 + x89)
            + x27 * x63
            - x33 * (-x33 * (-x33 * x88 + x5 * x80) + x5 * x82 + x87)
            + x5 * x86
            + x54 * (x5 * x76 - x79 - x83),
            x22 * x91 + x22 * (x22 * x92 + x91) + x28 * x63,
            x110 * x22 + x118 + x23 * x72,
            x124 * x22 + x127 + x23 * x89,
            x129 * x22 + x130 + x23 * x91,
            x150 * x22 + x160 + x24 * x72,
            x167 * x22 + x170 + x24 * x89,
            x173 * x22 + x176 + x24 * x91,
            x110 * x23 + x183,
            x124 * x23 + x186,
            x129 * x23 + x187,
            x150 * x23 + x197,
            x167 * x23 + x201,
            x173 * x23 + x206,
            x150 * x24 + x215,
            x167 * x24 + x218,
            x173 * x24 + x221,
            x109 * x22 + x118 + x22 * (x109 + x22 * x222),
            x123 * x22 + x127 + x22 * (x123 + x22 * x223),
            x128 * x22 + x130 + x22 * (x128 + x22 * x224),
            x183 + x22 * x226,
            x186 + x22 * x228,
            x187 + x22 * x230,
            x197 + x22 * x232,
            x201 + x22 * x234,
            x206 + x22 * x236,
            2 * x111 + x181 * x93 - x182 * x94 + x225 * x23 + x226 * x23 + x237 * x26,
            x1 * (2 * x112 + x177 * x93 - x178 * x94)
            + 2 * x125
            + x184 * x93
            - x185 * x94
            + x227 * x23
            + x228 * x23
            + x237 * x27,
            x229 * x23 + x23 * x230 + x237 * x28,
            x225 * x24 + x23 * x232 + x239,
            x227 * x24 + x23 * x234 + x240,
            x229 * x24 + x23 * x236 + x241,
            x232 * x24 + x243,
            x234 * x24 + x244,
            x236 * x24 + x245,
            x149 * x22 + x160 + x22 * (x149 + x22 * x246),
            x166 * x22 + x170 + x22 * (x166 + x22 * x247),
            x172 * x22 + x176 + x22 * (x172 + x22 * x248),
            x149 * x23 + x196 + x22 * x249,
            x166 * x23 + x200 + x22 * x250,
            x172 * x23 + x205 + x22 * x251,
            x215 + x22 * x253,
            x218 + x22 * x255,
            x22 * x257 + x221,
            x23 * x231 + x23 * x249 + x239,
            x23 * x233 + x23 * x250 + x240,
            x23 * x235 + x23 * x251 + x241,
            x23 * x253 + x243,
            x23 * x255 + x244,
            x23 * x257 + x245,
            x131 * x213 - x132 * x214 + 2 * x151 + x24 * x252 + x24 * x253 + x258 * x26,
            x131 * x216 - x132 * x217 + 2 * x168 + x24 * x254 + x24 * x255 + x258 * x27,
            x1 * (x131 * x207 - x132 * x210 + 2 * x152)
            + x131 * x219
            - x132 * x220
            + 2 * x175
            + x24 * x256
            + x24 * x257
            + x258 * x28,
        ]
    )
    return S


def eri_1202(a, A, b, B, c, C, d, D):
    """Cartesian [pd|sd] 2-electron electron repulsion integral.

    Generated code; DO NOT modify by hand!"""

    x0 = a + b
    x1 = x0 ** (-1.0)
    x2 = -x1 * (a * A[0] + b * B[0])
    x3 = -x2 - A[0]
    x4 = 2 * c + 2 * d
    x5 = x4 ** (-1.0)
    x6 = numpy.pi**2.5
    x7 = c + d
    x8 = x0 * x7
    x9 = x0 + x7
    x10 = (x8 + numpy.sqrt(x9)) ** (-1.0)
    x11 = A[0] - B[0]
    x12 = A[1] - B[1]
    x13 = A[2] - B[2]
    x14 = numpy.exp(-a * b * x1 * (x11**2 + x12**2 + x13**2))
    x15 = x7 ** (-1.0)
    x16 = C[0] - D[0]
    x17 = C[1] - D[1]
    x18 = C[2] - D[2]
    x19 = x18**2
    x20 = numpy.exp(-c * d * x15 * (x16**2 + x17**2 + x19))
    x21 = x9 ** (-1.0)
    x22 = x15 * (c * C[0] + d * D[0])
    x23 = -x2 - x22
    x24 = x15 * (c * C[1] + d * D[1])
    x25 = -x1 * (a * A[1] + b * B[1])
    x26 = -x24 - x25
    x27 = -x1 * (a * A[2] + b * B[2])
    x28 = -x15 * (c * C[2] + d * D[2]) - x27
    x29 = x21 * x8 * (x23**2 + x26**2 + x28**2)
    x30 = boys(1, x29)
    x31 = -2 * x10 * x14 * x20 * x30 * x6
    x32 = x0 * x21
    x33 = boys(2, x29)
    x34 = 2 * x10 * x14 * x20 * x6
    x35 = x33 * x34
    x36 = x5 * (-x31 - x32 * x35)
    x37 = x22 - C[0]
    x38 = x30 * x34
    x39 = x23 * x32
    x40 = x35 * x39 + x37 * x38
    x41 = boys(3, x29)
    x42 = x34 * x41
    x43 = x35 * x37 + x39 * x42
    x44 = x36 + x37 * x40 + x39 * x43
    x45 = -2 * x10 * x14 * x20 * x33 * x6
    x46 = x5 * (-x32 * x42 - x45)
    x47 = x34 * boys(4, x29)
    x48 = x37 * x42 + x39 * x47
    x49 = x37 * x43 + x39 * x48 + x46
    x50 = x21 * x7
    x51 = x49 * x50
    x52 = 2 * a + 2 * b
    x53 = x4 + x52
    x54 = x53 ** (-1.0)
    x55 = x23 * x50
    x56 = x3 * x42 - x47 * x55
    x57 = x48 * x50
    x58 = -x23 * x57 + x3 * x43 + x54 * x56
    x59 = 2 * x54
    x60 = -x23 * x51 + x3 * x44 + x58 * x59
    x61 = x50 * x60
    x62 = boys(0, x29)
    x63 = -2 * x10 * x14 * x20 * x6 * x62
    x64 = x5 * (-x32 * x38 - x63)
    x65 = x34 * x62
    x66 = x37 * x65 + x38 * x39
    x67 = x37 * x66 + x39 * x40 + x64
    x68 = x44 * x50
    x69 = x42 * x55
    x70 = x3 * x35 - x69
    x71 = x43 * x50
    x72 = -x23 * x71 + x3 * x40 + x54 * x70
    x73 = -x23 * x68 + x3 * x67 + x59 * x72
    x74 = x52 ** (-1.0)
    x75 = 2 * x74
    x76 = x74 * (x67 - x68)
    x77 = x74 * (x40 - x71)
    x78 = x74 * (-x42 * x50 - x45)
    x79 = x50 * x56
    x80 = -x23 * x79 + x3 * x70 + x78
    x81 = x50 * x58
    x82 = -x23 * x81 + x3 * x72 + x54 * x80 + x77
    x83 = -x23 * x61 + x3 * x73 + x59 * x82 + x76
    x84 = x74 * (x44 - x51)
    x85 = -2 * x10 * x14 * x20 * x41 * x6
    x86 = x5 * (-x32 * x47 - x85)
    x87 = x34 * boys(5, x29)
    x88 = x37 * x47 + x39 * x87
    x89 = x37 * x48 + x39 * x88 + x86
    x90 = x3 * x47 - x55 * x87
    x91 = x3 * x48 + x54 * x90 - x55 * x88
    x92 = x74 * (x43 - x57)
    x93 = x74 * (-x47 * x50 - x85)
    x94 = x3 * x56 - x55 * x90 + x93
    x95 = x3 * x58 + x54 * x94 - x55 * x91 + x92
    x96 = x50 * x72
    x97 = x35 * x55
    x98 = x3 * x38 - x97
    x99 = x40 * x50
    x100 = -x23 * x99 + x3 * x66 + x54 * x98
    x101 = x50 * x70
    x102 = x74 * (-x31 - x35 * x50)
    x103 = -x101 * x23 + x102 + x3 * x98
    x104 = x74 * (x66 - x99)
    x105 = x100 * x3 + x103 * x54 + x104 - x23 * x96
    x106 = (
        x105 * x3
        + x54
        * (
            x103 * x3
            - x55 * x80
            + x75 * (2 * x10 * x14 * x20 * x3 * x30 * x6 - x101 - x97)
        )
        - x55 * x82
        + x75 * (x100 - x96)
    )
    x107 = x38 * x55
    x108 = x50 * x98
    x109 = x74 * (-x38 * x50 - x63)
    x110 = -x107 + x3 * x65
    x111 = -x108 * x23 + x109 + x110 * x3
    x112 = (
        -x103 * x55
        + x111 * x3
        + x75 * (2 * x10 * x14 * x20 * x3 * x6 * x62 - x107 - x108)
    )
    x113 = x112 * x16
    x114 = x111 * x16
    x115 = x105 * x16 + x16 * (x105 + x114) + x83
    x116 = x110 * x16
    x117 = x100 * x16 + x16 * (x100 + x116) + x73
    x118 = x24 - C[1]
    x119 = x26 * x32
    x120 = x118 * x35 + x119 * x42
    x121 = x118 * x42 + x119 * x47
    x122 = x121 * x50
    x123 = x120 * x3 - x122 * x23
    x124 = x118 * x38 + x119 * x35
    x125 = x120 * x39 + x124 * x37
    x126 = x120 * x37 + x121 * x39
    x127 = x126 * x50
    x128 = x123 * x54 + x125 * x3 - x127 * x23
    x129 = x128 * x50
    x130 = x120 * x50
    x131 = x130 * x23
    x132 = x124 * x3 - x131
    x133 = x118 * x65 + x119 * x38
    x134 = x124 * x39 + x133 * x37
    x135 = x125 * x50
    x136 = x132 * x54 + x134 * x3 - x135 * x23
    x137 = x123 * x50
    x138 = x74 * (x124 - x130)
    x139 = x132 * x3 - x137 * x23 + x138
    x140 = x74 * (x120 - x122)
    x141 = x118 * x47 + x119 * x87
    x142 = x121 * x3 - x141 * x55
    x143 = x123 * x3 + x140 - x142 * x55
    x144 = x74 * (x134 - x135)
    x145 = -x129 * x23 + x136 * x3 + x139 * x54 + x144
    x146 = x74 * (x125 - x127)
    x147 = x121 * x37 + x141 * x39
    x148 = x112 * x17
    x149 = x124 * x50
    x150 = x149 * x23
    x151 = x132 * x50
    x152 = x74 * (x133 - x149)
    x153 = x133 * x3 - x150
    x154 = -x151 * x23 + x152 + x153 * x3
    x155 = -x139 * x55 + x154 * x3 + x75 * (x133 * x3 - x150 - x151)
    x156 = x148 + x155
    x157 = x111 * x17
    x158 = x154 + x157
    x159 = x105 * x17 + x145 + x158 * x16
    x160 = x110 * x17
    x161 = x153 + x160
    x162 = x100 * x17 + x136 + x16 * x161
    x163 = x105 * x18 + x114 * x18
    x164 = x100 * x18 + x116 * x18
    x165 = x118 * x133 + x119 * x124 + x64
    x166 = x118 * x124 + x119 * x120 + x36
    x167 = x166 * x50
    x168 = x167 * x23
    x169 = x118 * x120 + x119 * x121 + x46
    x170 = x169 * x50
    x171 = x166 * x3 - x170 * x23
    x172 = x171 * x50
    x173 = x74 * (x165 - x167)
    x174 = x165 * x3 - x168
    x175 = -x172 * x23 + x173 + x174 * x3
    x176 = x74 * (x166 - x170)
    x177 = x118 * x121 + x119 * x141 + x86
    x178 = x154 * x17 + x158 * x17 + x175
    x179 = x153 * x17 + x161 * x17 + x174
    x180 = x154 * x18 + x157 * x18
    x181 = x153 * x18 + x160 * x18
    x182 = x111 * x19
    x183 = x110 * x19
    x184 = -x25 - A[1]
    x185 = x26 * x50
    x186 = x185 * x35
    x187 = x184 * x38 - x186
    x188 = x185 * x42
    x189 = x184 * x35 - x188
    x190 = x189 * x50
    x191 = x187 * x3 - x190 * x23
    x192 = x26 * x99
    x193 = x184 * x66 - x192
    x194 = x26 * x71
    x195 = x184 * x40 - x194
    x196 = x195 * x50
    x197 = x191 * x54 + x193 * x3 - x196 * x23
    x198 = x185 * x38
    x199 = x184 * x65 - x198
    x200 = x187 * x50
    x201 = x199 * x3 - x200 * x23
    x202 = x16 * x201
    x203 = x26 * x68
    x204 = x184 * x67 - x203
    x205 = x184 * x44 - x26 * x51
    x206 = x205 * x50
    x207 = x184 * x42 - x185 * x47
    x208 = x207 * x50
    x209 = x189 * x3 - x208 * x23
    x210 = x184 * x43 - x26 * x57
    x211 = x210 * x50
    x212 = x195 * x3 + x209 * x54 - x211 * x23
    x213 = x204 * x3 - x206 * x23 + x212 * x59
    x214 = x16 * x197 + x16 * (x197 + x202) + x213
    x215 = x117 * x12 + x214
    x216 = x74 * (x184 * x67 - x203 - x206)
    x217 = x74 * (x184 * x66 - x192 - x196)
    x218 = x74 * (2 * x10 * x14 * x184 * x20 * x30 * x6 - x186 - x190)
    x219 = x197 * x3 - x212 * x55 + x217 + x54 * (x191 * x3 - x209 * x55 + x218)
    x220 = x74 * (2 * x10 * x14 * x184 * x20 * x6 * x62 - x198 - x200)
    x221 = -x191 * x55 + x201 * x3 + x220
    x222 = x16 * x221
    x223 = x74 * (x184 * x40 - x194 - x211)
    x224 = x74 * (2 * x10 * x14 * x184 * x20 * x33 * x6 - x188 - x208)
    x225 = x184 * x47 - x185 * x87
    x226 = x207 * x3 - x225 * x55
    x227 = x184 * x48 - x185 * x88
    x228 = x210 * x3 + x226 * x54 - x227 * x55
    x229 = x184 * x49 - x185 * x89
    x230 = (
        x16 * x219
        + x16 * (x219 + x222)
        + x213 * x3
        + x216
        - x55 * (x205 * x3 + x228 * x59 - x229 * x55)
        + x59 * (x212 * x3 + x223 - x228 * x55 + x54 * (x209 * x3 + x224 - x226 * x55))
    )
    x231 = x17 * x201
    x232 = x133 * x184 - x149 * x26 + x187 * x54
    x233 = x124 * x184 - x130 * x26 + x189 * x54
    x234 = x233 * x50
    x235 = -x23 * x234 + x232 * x3
    x236 = x231 + x235
    x237 = x120 * x184 - x122 * x26 + x207 * x54
    x238 = x237 * x50
    x239 = -x23 * x238 + x233 * x3
    x240 = x134 * x184 - x135 * x26 + x195 * x54
    x241 = x125 * x184 - x127 * x26 + x210 * x54
    x242 = x241 * x50
    x243 = -x23 * x242 + x239 * x54 + x240 * x3
    x244 = x16 * x236 + x17 * x197 + x243
    x245 = x12 * x162 + x244
    x246 = x74 * (x240 - x242)
    x247 = x74 * (x233 - x238)
    x248 = x121 * x184 - x141 * x185 + x225 * x54
    x249 = x237 * x3 - x248 * x55
    x250 = x17 * x221
    x251 = x74 * (x232 - x234)
    x252 = x235 * x3 - x239 * x55 + x251
    x253 = x250 + x252
    x254 = x126 * x184 - x147 * x185 + x227 * x54
    x255 = (
        x16 * x253
        + x17 * x219
        + x243 * x3
        + x246
        + x54 * (x239 * x3 + x247 - x249 * x55)
        - x55 * (x241 * x3 + x249 * x54 - x254 * x55)
    )
    x256 = x18 * x197 + x18 * x202
    x257 = x12 * x164 + x256
    x258 = x18 * x219 + x18 * x222
    x259 = x165 * x184 - x167 * x26 + x233 * x59
    x260 = x166 * x184 - x170 * x26 + x237 * x59
    x261 = x260 * x50
    x262 = -x23 * x261 + x259 * x3
    x263 = x17 * x235 + x17 * x236 + x262
    x264 = x12 * x179 + x263
    x265 = x74 * (x259 - x261)
    x266 = x169 * x184 - x177 * x185 + x248 * x59
    x267 = x17 * x252 + x17 * x253 + x262 * x3 + x265 - x55 * (x260 * x3 - x266 * x55)
    x268 = x18 * x231 + x18 * x235
    x269 = x12 * x181 + x268
    x270 = x18 * x250 + x18 * x252
    x271 = x19 * x201
    x272 = x12 * x183 + x271
    x273 = x19 * x221
    x274 = -x27 - A[2]
    x275 = x28 * x50
    x276 = x275 * x35
    x277 = x274 * x38 - x276
    x278 = x277 * x3
    x279 = x275 * x42
    x280 = x274 * x35 - x279
    x281 = x280 * x50
    x282 = -x23 * x281 + x278
    x283 = x28 * x99
    x284 = x274 * x66 - x283
    x285 = x28 * x71
    x286 = x274 * x40 - x285
    x287 = x286 * x50
    x288 = -x23 * x287 + x282 * x54 + x284 * x3
    x289 = x275 * x38
    x290 = x274 * x65 - x289
    x291 = x277 * x50
    x292 = -x23 * x291 + x290 * x3
    x293 = x28 * x68
    x294 = x274 * x67 - x293
    x295 = x274 * x44 - x28 * x51
    x296 = x295 * x50
    x297 = x280 * x3
    x298 = x274 * x42 - x275 * x47
    x299 = x298 * x50
    x300 = x23 * x299
    x301 = x297 - x300
    x302 = x286 * x3
    x303 = x274 * x43 - x28 * x57
    x304 = x303 * x50
    x305 = x23 * x304
    x306 = x301 * x54 + x302 - x305
    x307 = -x23 * x296 + x294 * x3 + x306 * x59
    x308 = x16 * x288 + x16 * (x16 * x292 + x288) + x307
    x309 = x117 * x13 + x308
    x310 = x74 * (x274 * x67 - x293 - x296)
    x311 = x74 * (x274 * x66 - x283 - x287)
    x312 = x74 * (2 * x10 * x14 * x20 * x274 * x30 * x6 - x276 - x281)
    x313 = x288 * x3 - x306 * x55 + x311 + x54 * (x282 * x3 - x301 * x55 + x312)
    x314 = x74 * (2 * x10 * x14 * x20 * x274 * x6 * x62 - x289 - x291)
    x315 = -x282 * x55 + x292 * x3 + x314
    x316 = x74 * (x274 * x40 - x285 - x304)
    x317 = x74 * (2 * x10 * x14 * x20 * x274 * x33 * x6 - x279 - x299)
    x318 = x298 * x3
    x319 = x274 * x47 - x275 * x87
    x320 = x319 * x55
    x321 = x318 - x320
    x322 = x3 * x303
    x323 = x274 * x48 - x275 * x88
    x324 = x323 * x55
    x325 = x321 * x54 + x322 - x324
    x326 = x274 * x49 - x275 * x89
    x327 = (
        x16 * x313
        + x16 * (x16 * x315 + x313)
        + x3 * x307
        + x310
        - x55 * (x295 * x3 + x325 * x59 - x326 * x55)
        + x59 * (x3 * x306 + x316 - x325 * x55 + x54 * (x3 * x301 + x317 - x321 * x55))
    )
    x328 = x149 * x28
    x329 = x133 * x274 - x328
    x330 = x130 * x28
    x331 = x124 * x274 - x330
    x332 = x331 * x50
    x333 = -x23 * x332 + x3 * x329
    x334 = x17 * x292 + x333
    x335 = x135 * x28
    x336 = x134 * x274 - x335
    x337 = x3 * x331
    x338 = x120 * x274 - x122 * x28
    x339 = x338 * x50
    x340 = x23 * x339
    x341 = x337 - x340
    x342 = x125 * x274 - x127 * x28
    x343 = x342 * x50
    x344 = -x23 * x343 + x3 * x336 + x341 * x54
    x345 = x16 * x334 + x17 * x288 + x344
    x346 = x13 * x162 + x345
    x347 = x74 * (x134 * x274 - x335 - x343)
    x348 = x74 * (x124 * x274 - x330 - x339)
    x349 = x3 * x338
    x350 = x121 * x274 - x141 * x275
    x351 = x350 * x55
    x352 = x349 - x351
    x353 = x74 * (x133 * x274 - x328 - x332)
    x354 = x3 * x333 - x341 * x55 + x353
    x355 = x17 * x315 + x354
    x356 = x126 * x274 - x147 * x275
    x357 = (
        x16 * x355
        + x17 * x313
        + x3 * x344
        + x347
        + x54 * (x3 * x341 + x348 - x352 * x55)
        - x55 * (x3 * x342 + x352 * x54 - x356 * x55)
    )
    x358 = x280 * x54
    x359 = x278 * x54 - x358 * x55
    x360 = x18 * x292 + x359
    x361 = x297 * x54 - x300 * x54
    x362 = x302 * x54 - x305 * x54 + x361 * x54
    x363 = x16 * x360 + x18 * x288 + x362
    x364 = x13 * x164 + x363
    x365 = x304 * x54
    x366 = x74 * (x286 * x54 - x365)
    x367 = x299 * x54
    x368 = x74 * (x280 * x54 - x367)
    x369 = x318 * x54 - x320 * x54
    x370 = x74 * (x277 * x54 - x358 * x50)
    x371 = x3 * x359 - x361 * x55 + x370
    x372 = x18 * x315 + x371
    x373 = (
        x16 * x372
        + x18 * x313
        + x3 * x362
        + x366
        + x54 * (x3 * x361 + x368 - x369 * x55)
        - x55 * (x322 * x54 - x324 * x54 + x369 * x54)
    )
    x374 = x167 * x28
    x375 = x165 * x274 - x374
    x376 = x166 * x274 - x170 * x28
    x377 = x376 * x50
    x378 = -x23 * x377 + x3 * x375
    x379 = x17 * x333 + x17 * x334 + x378
    x380 = x13 * x179 + x379
    x381 = x74 * (x165 * x274 - x374 - x377)
    x382 = x169 * x274 - x177 * x275
    x383 = x17 * x354 + x17 * x355 + x3 * x378 + x381 - x55 * (x3 * x376 - x382 * x55)
    x384 = x337 * x54 - x340 * x54
    x385 = x17 * x360 + x18 * x333 + x384
    x386 = x13 * x181 + x385
    x387 = x339 * x54
    x388 = x74 * (x331 * x54 - x387)
    x389 = x17 * x372 + x18 * x354 + x3 * x384 + x388 - x55 * (x349 * x54 - x351 * x54)
    x390 = x53 ** (-2.0)
    x391 = 2 * x390
    x392 = x297 * x391 - x300 * x391
    x393 = x18 * x359 + x18 * x360 + x392
    x394 = x13 * x183 + x393
    x395 = x74 * (2 * x280 * x390 - x299 * x391)
    x396 = x18 * x371 + x18 * x372 + x3 * x392 + x395 - x55 * (x318 * x391 - x320 * x391)
    x397 = x102 + x184 * x187 - x190 * x26
    x398 = x184 * x189 - x208 * x26 + x78
    x399 = x104 + x184 * x193 - x196 * x26
    x400 = x184 * x195 - x211 * x26 + x77
    x401 = x3 * x399 - x400 * x55 + x54 * (x3 * x397 - x398 * x55)
    x402 = x109 + x184 * x199 - x200 * x26
    x403 = x3 * x402 - x397 * x55
    x404 = x16 * x403
    x405 = x184 * x204 - x206 * x26 + x76
    x406 = x184 * x207 - x185 * x225 + x93
    x407 = x184 * x210 - x185 * x227 + x92
    x408 = x184 * x205 - x185 * x229 + x84
    x409 = (
        x12 * x214
        + x16 * x401
        + x16 * (x401 + x404)
        + x3 * x405
        - x408 * x55
        + x59 * (x3 * x400 - x407 * x55 + x54 * (x3 * x398 - x406 * x55))
    )
    x410 = x138 + x184 * x233 - x238 * x26 + x398 * x54
    x411 = x140 + x184 * x237 - x185 * x248 + x406 * x54
    x412 = x17 * x403
    x413 = x152 + x184 * x232 - x234 * x26 + x397 * x54
    x414 = x3 * x413 - x410 * x55
    x415 = x412 + x414
    x416 = x144 + x184 * x240 - x242 * x26 + x400 * x54
    x417 = x146 + x184 * x241 - x185 * x254 + x407 * x54
    x418 = (
        x12 * x244
        + x16 * x415
        + x17 * x401
        + x3 * x416
        - x417 * x55
        + x54 * (x3 * x410 - x411 * x55)
    )
    x419 = x12 * x256 + x18 * x401 + x18 * x404
    x420 = x173 + x184 * x259 - x26 * x261 + x410 * x59
    x421 = x176 + x184 * x260 - x185 * x266 + x411 * x59
    x422 = x12 * x263 + x17 * x414 + x17 * x415 + x3 * x420 - x421 * x55
    x423 = x12 * x268 + x18 * x412 + x18 * x414
    x424 = x12 * x271 + x19 * x403
    x425 = x184 * x277 - x26 * x281
    x426 = x184 * x280
    x427 = x26 * x299
    x428 = x426 - x427
    x429 = x184 * x284 - x26 * x287
    x430 = x184 * x286 - x26 * x304
    x431 = x3 * x429 - x430 * x55 + x54 * (x3 * x425 - x428 * x55)
    x432 = x184 * x290 - x26 * x291
    x433 = x3 * x432 - x425 * x55
    x434 = x184 * x294 - x26 * x296
    x435 = x184 * x298
    x436 = x185 * x319
    x437 = x435 - x436
    x438 = x184 * x303
    x439 = x185 * x323
    x440 = x438 - x439
    x441 = x184 * x295 - x185 * x326
    x442 = (
        x16 * x431
        + x16 * (x16 * x433 + x431)
        + x3 * x434
        - x441 * x55
        + x59 * (x3 * x430 - x440 * x55 + x54 * (x3 * x428 - x437 * x55))
    )
    x443 = x13 * x214 + x442
    x444 = x184 * x331 - x26 * x339 + x428 * x54
    x445 = x184 * x338
    x446 = x185 * x350
    x447 = x437 * x54 + x445 - x446
    x448 = x184 * x329 - x26 * x332 + x425 * x54
    x449 = x3 * x448 - x444 * x55
    x450 = x17 * x433 + x449
    x451 = x184 * x336 - x26 * x343 + x430 * x54
    x452 = x184 * x342 - x185 * x356 + x440 * x54
    x453 = (
        x16 * x450 + x17 * x431 + x3 * x451 - x452 * x55 + x54 * (x3 * x444 - x447 * x55)
    )
    x454 = x13 * x244 + x453
    x455 = x184 * x358 - x26 * x367
    x456 = x435 * x54 - x436 * x54
    x457 = x277 * x54
    x458 = x184 * x457 - x185 * x358
    x459 = x3 * x458 - x455 * x55
    x460 = x18 * x433 + x459
    x461 = x286 * x54
    x462 = x184 * x461 - x26 * x365
    x463 = x438 * x54 - x439 * x54
    x464 = (
        x16 * x460 + x18 * x431 + x3 * x462 - x463 * x55 + x54 * (x3 * x455 - x456 * x55)
    )
    x465 = x13 * x256 + x464
    x466 = x184 * x375 - x26 * x377 + x444 * x59
    x467 = x184 * x376 - x185 * x382 + x447 * x59
    x468 = x17 * x449 + x17 * x450 + x3 * x466 - x467 * x55
    x469 = x13 * x263 + x468
    x470 = x331 * x54
    x471 = x184 * x470 - x26 * x387 + x455 * x54
    x472 = x445 * x54 - x446 * x54 + x456 * x54
    x473 = x17 * x460 + x18 * x449 + x3 * x471 - x472 * x55
    x474 = x13 * x268 + x473
    x475 = x391 * x426 - x391 * x427
    x476 = x391 * x435 - x391 * x436
    x477 = x18 * x459 + x18 * x460 + x3 * x475 - x476 * x55
    x478 = x13 * x271 + x477
    x479 = x102 + x274 * x277 - x28 * x281
    x480 = x274 * x280
    x481 = x28 * x299
    x482 = x480 - x481 + x78
    x483 = x104 + x274 * x284 - x28 * x287
    x484 = x274 * x286 - x28 * x304 + x77
    x485 = x3 * x483 - x484 * x55 + x54 * (x3 * x479 - x482 * x55)
    x486 = x109 + x274 * x290 - x28 * x291
    x487 = x3 * x486 - x479 * x55
    x488 = x274 * x294 - x28 * x296 + x76
    x489 = x274 * x298
    x490 = x275 * x319
    x491 = x489 - x490 + x93
    x492 = x274 * x303
    x493 = x275 * x323
    x494 = x492 - x493 + x92
    x495 = x274 * x295 - x275 * x326 + x84
    x496 = (
        x13 * x308
        + x16 * x485
        + x16 * (x16 * x487 + x485)
        + x3 * x488
        - x495 * x55
        + x59 * (x3 * x484 - x494 * x55 + x54 * (x3 * x482 - x491 * x55))
    )
    x497 = x138 + x274 * x331 - x28 * x339
    x498 = x274 * x338
    x499 = x275 * x350
    x500 = x140 + x498 - x499
    x501 = x152 + x274 * x329 - x28 * x332
    x502 = x3 * x501 - x497 * x55
    x503 = x17 * x487 + x502
    x504 = x144 + x274 * x336 - x28 * x343
    x505 = x146 + x274 * x342 - x275 * x356
    x506 = (
        x13 * x345
        + x16 * x503
        + x17 * x485
        + x3 * x504
        - x505 * x55
        + x54 * (x3 * x497 - x500 * x55)
    )
    x507 = x274 * x358 - x28 * x367 + x482 * x54
    x508 = x489 * x54 - x490 * x54 + x491 * x54
    x509 = x274 * x457 - x275 * x358 + x479 * x54
    x510 = x3 * x509 - x507 * x55
    x511 = x18 * x487 + x510
    x512 = x274 * x461 - x28 * x365 + x484 * x54
    x513 = x492 * x54 - x493 * x54 + x494 * x54
    x514 = (
        x13 * x363
        + x16 * x511
        + x18 * x485
        + x3 * x512
        - x513 * x55
        + x54 * (x3 * x507 - x508 * x55)
    )
    x515 = x173 + x274 * x375 - x28 * x377
    x516 = x176 + x274 * x376 - x275 * x382
    x517 = x13 * x379 + x17 * x502 + x17 * x503 + x3 * x515 - x516 * x55
    x518 = x274 * x470 - x28 * x387 + x497 * x54
    x519 = x498 * x54 - x499 * x54 + x500 * x54
    x520 = x13 * x385 + x17 * x511 + x18 * x502 + x3 * x518 - x519 * x55
    x521 = x391 * x480 - x391 * x481 + x507 * x59
    x522 = x391 * x489 - x391 * x490 + x508 * x59
    x523 = x13 * x393 + x18 * x510 + x18 * x511 + x3 * x521 - x522 * x55
    x524 = x16 * x199
    x525 = x16 * x193 + x16 * (x193 + x524) + x204
    x526 = x17 * x199
    x527 = x232 + x526
    x528 = x16 * x527 + x17 * x193 + x240
    x529 = x18 * x193 + x18 * x524
    x530 = x17 * x232 + x17 * x527 + x259
    x531 = x18 * x232 + x18 * x526
    x532 = x19 * x199
    x533 = x16 * x402
    x534 = x16 * x399 + x16 * (x399 + x533) + x405
    x535 = x12 * x525 + x534
    x536 = x17 * x402
    x537 = x413 + x536
    x538 = x16 * x537 + x17 * x399 + x416
    x539 = x12 * x528 + x538
    x540 = x18 * x399 + x18 * x533
    x541 = x12 * x529 + x540
    x542 = x17 * x413 + x17 * x537 + x420
    x543 = x12 * x530 + x542
    x544 = x18 * x413 + x18 * x536
    x545 = x12 * x531 + x544
    x546 = x19 * x402
    x547 = x12 * x532 + x546
    x548 = x16 * x429 + x16 * (x16 * x432 + x429) + x434
    x549 = x13 * x525 + x548
    x550 = x17 * x432 + x448
    x551 = x16 * x550 + x17 * x429 + x451
    x552 = x13 * x528 + x551
    x553 = x18 * x432 + x458
    x554 = x16 * x553 + x18 * x429 + x462
    x555 = x13 * x529 + x554
    x556 = x17 * x448 + x17 * x550 + x466
    x557 = x13 * x530 + x556
    x558 = x17 * x553 + x18 * x448 + x471
    x559 = x13 * x531 + x558
    x560 = x18 * x458 + x18 * x553 + x475
    x561 = x13 * x532 + x560
    x562 = x184 * x399 - x185 * x400 + 2 * x217
    x563 = x184 * x402 - x185 * x397 + 2 * x220
    x564 = x16 * x563
    x565 = x17 * x563
    x566 = (
        x184 * x413
        - x185 * x410
        + 2 * x251
        + x54 * (x184 * x397 - x185 * x398 + 2 * x218)
    )
    x567 = x565 + x566
    x568 = x184 * x429 - x185 * x430 + x311
    x569 = x184 * x432 - x185 * x425 + x314
    x570 = x16 * x568 + x16 * (x16 * x569 + x568) + x184 * x434 - x185 * x441 + x310
    x571 = x184 * x448 - x185 * x444 + x353 + x54 * (x184 * x425 - x185 * x428 + x312)
    x572 = x17 * x569 + x571
    x573 = (
        x16 * x572
        + x17 * x568
        + x184 * x451
        - x185 * x452
        + x347
        + x54 * (x184 * x430 - x185 * x440 + x316)
    )
    x574 = x184 * x458 - x185 * x455 + x370
    x575 = x18 * x569 + x574
    x576 = x16 * x575 + x18 * x568 + x184 * x462 - x185 * x463 + x366
    x577 = (
        x17 * x571
        + x17 * x572
        + x184 * x466
        - x185 * x467
        + x381
        + x59
        * (x184 * x444 - x185 * x447 + x348 + x54 * (x184 * x428 - x185 * x437 + x317))
    )
    x578 = (
        x17 * x575
        + x18 * x571
        + x184 * x471
        - x185 * x472
        + x388
        + x54 * (x184 * x455 - x185 * x456 + x368)
    )
    x579 = x18 * x574 + x18 * x575 + x184 * x475 - x185 * x476 + x395
    x580 = x184 * x483 - x185 * x484
    x581 = x184 * x486 - x185 * x479
    x582 = x13 * x548 + x16 * x580 + x16 * (x16 * x581 + x580) + x184 * x488 - x185 * x495
    x583 = x184 * x501 - x185 * x497 + x54 * (x184 * x479 - x185 * x482)
    x584 = x17 * x581 + x583
    x585 = (
        x13 * x551
        + x16 * x584
        + x17 * x580
        + x184 * x504
        - x185 * x505
        + x54 * (x184 * x484 - x185 * x494)
    )
    x586 = x184 * x509 - x185 * x507
    x587 = x18 * x581 + x586
    x588 = x13 * x554 + x16 * x587 + x18 * x580 + x184 * x512 - x185 * x513
    x589 = (
        x13 * x556
        + x17 * x583
        + x17 * x584
        + x184 * x515
        - x185 * x516
        + x59 * (x184 * x497 - x185 * x500 + x54 * (x184 * x482 - x185 * x491))
    )
    x590 = (
        x13 * x558
        + x17 * x587
        + x18 * x583
        + x184 * x518
        - x185 * x519
        + x54 * (x184 * x507 - x185 * x508)
    )
    x591 = x13 * x560 + x18 * x586 + x18 * x587 + x184 * x521 - x185 * x522
    x592 = x16 * x284 + x16 * (x16 * x290 + x284) + x294
    x593 = x17 * x290 + x329
    x594 = x16 * x593 + x17 * x284 + x336
    x595 = x18 * x290 + x457
    x596 = x16 * x595 + x18 * x284 + x461
    x597 = x17 * x329 + x17 * x593 + x375
    x598 = x17 * x595 + x18 * x329 + x470
    x599 = x18 * x457 + x18 * x595 + x280 * x391
    x600 = x12 * x592 + x548
    x601 = x12 * x594 + x551
    x602 = x12 * x596 + x554
    x603 = x12 * x597 + x556
    x604 = x12 * x598 + x558
    x605 = x12 * x599 + x560
    x606 = x16 * x483 + x16 * (x16 * x486 + x483) + x488
    x607 = x13 * x592 + x606
    x608 = x17 * x486 + x501
    x609 = x16 * x608 + x17 * x483 + x504
    x610 = x13 * x594 + x609
    x611 = x18 * x486 + x509
    x612 = x16 * x611 + x18 * x483 + x512
    x613 = x13 * x596 + x612
    x614 = x17 * x501 + x17 * x608 + x515
    x615 = x13 * x597 + x614
    x616 = x17 * x611 + x18 * x501 + x518
    x617 = x13 * x598 + x616
    x618 = x18 * x509 + x18 * x611 + x521
    x619 = x13 * x599 + x618
    x620 = x274 * x483 - x275 * x484 + 2 * x311
    x621 = x274 * x486 - x275 * x479 + 2 * x314
    x622 = x274 * x501 - x275 * x497 + 2 * x353
    x623 = x17 * x621 + x622
    x624 = (
        x274 * x509
        - x275 * x507
        + 2 * x370
        + x54 * (x274 * x479 - x275 * x482 + 2 * x312)
    )
    x625 = x18 * x621 + x624

    # 108 item(s)
    S = numpy.array(
        [
            x106 * x16
            + x11 * x115
            + x11 * (x11 * x117 + x115)
            + x16 * (x106 + x113)
            + x3 * x83
            - x55
            * (x3 * x60 - x55 * (x3 * x49 - x55 * x89 + x59 * x91) + x59 * x95 + x84)
            + x59
            * (
                x3 * x82
                + x54
                * (
                    x3 * x80
                    - x55 * x94
                    + x75 * (2 * x10 * x14 * x20 * x3 * x33 * x6 - x69 - x79)
                )
                - x55 * x95
                + x75 * (x72 - x81)
            )
            + x75 * (-x61 + x73),
            x106 * x17
            + x11 * x159
            + x11 * (x11 * x162 + x159)
            + x145 * x3
            + x156 * x16
            + x54 * (x139 * x3 - x143 * x55 + x75 * (x124 * x3 - x131 - x137))
            - x55
            * (
                x128 * x3
                + x143 * x54
                + x146
                - x55 * (x126 * x3 + x142 * x54 - x147 * x55)
            )
            + x75 * (-x129 + x136),
            x106 * x18 + x11 * x163 + x11 * (x11 * x164 + x163) + x113 * x18,
            x11 * x178
            + x11 * (x11 * x179 + x178)
            + x155 * x17
            + x156 * x17
            + x175 * x3
            - x55 * (x171 * x3 + x176 - x55 * (x169 * x3 - x177 * x55))
            + x75 * (x165 * x3 - x168 - x172),
            x11 * x180 + x11 * (x11 * x181 + x180) + x148 * x18 + x155 * x18,
            x11 * x182 + x11 * (x11 * x183 + x182) + x112 * x19,
            x11 * x215 + x115 * x12 + x230,
            x11 * x245 + x12 * x159 + x255,
            x11 * x257 + x12 * x163 + x258,
            x11 * x264 + x12 * x178 + x267,
            x11 * x269 + x12 * x180 + x270,
            x11 * x272 + x12 * x182 + x273,
            x11 * x309 + x115 * x13 + x327,
            x11 * x346 + x13 * x159 + x357,
            x11 * x364 + x13 * x163 + x373,
            x11 * x380 + x13 * x178 + x383,
            x11 * x386 + x13 * x180 + x389,
            x11 * x394 + x13 * x182 + x396,
            x12 * x215 + x409,
            x12 * x245 + x418,
            x12 * x257 + x419,
            x12 * x264 + x422,
            x12 * x269 + x423,
            x12 * x272 + x424,
            x12 * x309 + x443,
            x12 * x346 + x454,
            x12 * x364 + x465,
            x12 * x380 + x469,
            x12 * x386 + x474,
            x12 * x394 + x478,
            x13 * x309 + x496,
            x13 * x346 + x506,
            x13 * x364 + x514,
            x13 * x380 + x517,
            x13 * x386 + x520,
            x13 * x394 + x523,
            x11 * x214 + x11 * (x11 * x525 + x214) + x230,
            x11 * x244 + x11 * (x11 * x528 + x244) + x255,
            x11 * x256 + x11 * (x11 * x529 + x256) + x258,
            x11 * x263 + x11 * (x11 * x530 + x263) + x267,
            x11 * x268 + x11 * (x11 * x531 + x268) + x270,
            x11 * x271 + x11 * (x11 * x532 + x271) + x273,
            x11 * x535 + x409,
            x11 * x539 + x418,
            x11 * x541 + x419,
            x11 * x543 + x422,
            x11 * x545 + x423,
            x11 * x547 + x424,
            x11 * x549 + x443,
            x11 * x552 + x454,
            x11 * x555 + x465,
            x11 * x557 + x469,
            x11 * x559 + x474,
            x11 * x561 + x478,
            x12 * x534
            + x12 * x535
            + x16 * x562
            + x16 * (x562 + x564)
            + x184 * x405
            - x185 * x408
            + 2 * x216,
            x12 * x538
            + x12 * x539
            + x16 * x567
            + x17 * x562
            + x184 * x416
            - x185 * x417
            + 2 * x246
            + x54 * (x184 * x400 - x185 * x407 + 2 * x223),
            x12 * x540 + x12 * x541 + x18 * x562 + x18 * x564,
            x12 * x542
            + x12 * x543
            + x17 * x566
            + x17 * x567
            + x184 * x420
            - x185 * x421
            + 2 * x265
            + x59
            * (
                x184 * x410
                - x185 * x411
                + 2 * x247
                + x54 * (x184 * x398 - x185 * x406 + 2 * x224)
            ),
            x12 * x544 + x12 * x545 + x18 * x565 + x18 * x566,
            x12 * x546 + x12 * x547 + x19 * x563,
            x12 * x549 + x13 * x534 + x570,
            x12 * x552 + x13 * x538 + x573,
            x12 * x555 + x13 * x540 + x576,
            x12 * x557 + x13 * x542 + x577,
            x12 * x559 + x13 * x544 + x578,
            x12 * x561 + x13 * x546 + x579,
            x13 * x549 + x582,
            x13 * x552 + x585,
            x13 * x555 + x588,
            x13 * x557 + x589,
            x13 * x559 + x590,
            x13 * x561 + x591,
            x11 * x308 + x11 * (x11 * x592 + x308) + x327,
            x11 * x345 + x11 * (x11 * x594 + x345) + x357,
            x11 * x363 + x11 * (x11 * x596 + x363) + x373,
            x11 * x379 + x11 * (x11 * x597 + x379) + x383,
            x11 * x385 + x11 * (x11 * x598 + x385) + x389,
            x11 * x393 + x11 * (x11 * x599 + x393) + x396,
            x11 * x600 + x12 * x308 + x442,
            x11 * x601 + x12 * x345 + x453,
            x11 * x602 + x12 * x363 + x464,
            x11 * x603 + x12 * x379 + x468,
            x11 * x604 + x12 * x385 + x473,
            x11 * x605 + x12 * x393 + x477,
            x11 * x607 + x496,
            x11 * x610 + x506,
            x11 * x613 + x514,
            x11 * x615 + x517,
            x11 * x617 + x520,
            x11 * x619 + x523,
            x12 * x548 + x12 * x600 + x570,
            x12 * x551 + x12 * x601 + x573,
            x12 * x554 + x12 * x602 + x576,
            x12 * x556 + x12 * x603 + x577,
            x12 * x558 + x12 * x604 + x578,
            x12 * x560 + x12 * x605 + x579,
            x12 * x607 + x582,
            x12 * x610 + x585,
            x12 * x613 + x588,
            x12 * x615 + x589,
            x12 * x617 + x590,
            x12 * x619 + x591,
            x13 * x606
            + x13 * x607
            + x16 * x620
            + x16 * (x16 * x621 + x620)
            + x274 * x488
            - x275 * x495
            + 2 * x310,
            x13 * x609
            + x13 * x610
            + x16 * x623
            + x17 * x620
            + x274 * x504
            - x275 * x505
            + 2 * x347,
            x13 * x612
            + x13 * x613
            + x16 * x625
            + x18 * x620
            + x274 * x512
            - x275 * x513
            + 2 * x366
            + x54 * (x274 * x484 - x275 * x494 + 2 * x316),
            x13 * x614
            + x13 * x615
            + x17 * x622
            + x17 * x623
            + x274 * x515
            - x275 * x516
            + 2 * x381,
            x13 * x616
            + x13 * x617
            + x17 * x625
            + x18 * x622
            + x274 * x518
            - x275 * x519
            + 2 * x388
            + x54 * (x274 * x497 - x275 * x500 + 2 * x348),
            x13 * x618
            + x13 * x619
            + x18 * x624
            + x18 * x625
            + x274 * x521
            - x275 * x522
            + 2 * x395
            + x59
            * (
                x274 * x507
                - x275 * x508
                + 2 * x368
                + x54 * (x274 * x482 - x275 * x491 + 2 * x317)
            ),
        ]
    )
    return S


def eri_1210(a, A, b, B, c, C, d, D):
    """Cartesian [pd|ps] 2-electron electron repulsion integral.

    Generated code; DO NOT modify by hand!"""

    x0 = 2 * a + 2 * b
    x1 = (2 * c + 2 * d + x0) ** (-1.0)
    x2 = a + b
    x3 = x2 ** (-1.0)
    x4 = -x3 * (a * A[0] + b * B[0])
    x5 = -x4 - A[0]
    x6 = c + d
    x7 = x2 + x6
    x8 = x7 ** (-1.0)
    x9 = x6 ** (-1.0)
    x10 = x9 * (c * C[0] + d * D[0])
    x11 = -x10 - x4
    x12 = x9 * (c * C[1] + d * D[1])
    x13 = -x3 * (a * A[1] + b * B[1])
    x14 = -x12 - x13
    x15 = -x3 * (a * A[2] + b * B[2])
    x16 = -x15 - x9 * (c * C[2] + d * D[2])
    x17 = x2 * x6
    x18 = x17 * x8 * (x11**2 + x14**2 + x16**2)
    x19 = boys(2, x18)
    x20 = numpy.pi**2.5
    x21 = (x17 + numpy.sqrt(x7)) ** (-1.0)
    x22 = A[0] - B[0]
    x23 = A[1] - B[1]
    x24 = A[2] - B[2]
    x25 = numpy.exp(-a * b * x3 * (x22**2 + x23**2 + x24**2))
    x26 = numpy.exp(
        -c * d * x9 * ((C[0] - D[0]) ** 2 + (C[1] - D[1]) ** 2 + (C[2] - D[2]) ** 2)
    )
    x27 = 2 * x20 * x21 * x25 * x26
    x28 = x19 * x27
    x29 = x6 * x8
    x30 = x11 * x29
    x31 = x27 * boys(3, x18)
    x32 = x28 * x5 - x30 * x31
    x33 = x10 - C[0]
    x34 = boys(1, x18)
    x35 = x27 * x34
    x36 = x2 * x8
    x37 = x11 * x36
    x38 = x28 * x37 + x33 * x35
    x39 = x28 * x33 + x31 * x37
    x40 = x29 * x39
    x41 = x1 * x32 - x11 * x40 + x38 * x5
    x42 = x29 * x41
    x43 = x28 * x30
    x44 = x35 * x5 - x43
    x45 = x27 * boys(0, x18)
    x46 = x33 * x45 + x35 * x37
    x47 = x29 * x38
    x48 = x1 * x44 - x11 * x47 + x46 * x5
    x49 = x0 ** (-1.0)
    x50 = 2 * x49
    x51 = x29 * x32
    x52 = x49 * (2 * x20 * x21 * x25 * x26 * x34 - x28 * x29)
    x53 = -x11 * x51 + x44 * x5 + x52
    x54 = x49 * (2 * x19 * x20 * x21 * x25 * x26 - x29 * x31)
    x55 = x27 * boys(4, x18)
    x56 = -x30 * x55 + x31 * x5
    x57 = -x30 * x56 + x32 * x5 + x54
    x58 = x49 * (x46 - x47)
    x59 = x1 * x53 - x11 * x42 + x48 * x5 + x58
    x60 = x49 * (x38 - x40)
    x61 = x31 * x33 + x37 * x55
    x62 = x12 - C[1]
    x63 = x14 * x36
    x64 = x35 * x63 + x45 * x62
    x65 = x28 * x63 + x35 * x62
    x66 = x29 * x65
    x67 = x11 * x66
    x68 = x28 * x62 + x31 * x63
    x69 = x29 * x68
    x70 = -x11 * x69 + x5 * x65
    x71 = x29 * x70
    x72 = x49 * (x64 - x66)
    x73 = x5 * x64 - x67
    x74 = -x11 * x71 + x5 * x73 + x72
    x75 = x49 * (x65 - x69)
    x76 = x31 * x62 + x55 * x63
    x77 = -x13 - A[1]
    x78 = x14 * x29
    x79 = x28 * x78
    x80 = x35 * x77 - x79
    x81 = x28 * x77 - x31 * x78
    x82 = x29 * x81
    x83 = -x11 * x82 + x5 * x80
    x84 = x14 * x47
    x85 = x46 * x77 - x84
    x86 = -x14 * x40 + x38 * x77
    x87 = x29 * x86
    x88 = x1 * x83 - x11 * x87 + x5 * x85
    x89 = x23 * x48 + x88
    x90 = x49 * (x46 * x77 - x84 - x87)
    x91 = x49 * (2 * x20 * x21 * x25 * x26 * x34 * x77 - x79 - x82)
    x92 = x31 * x77 - x55 * x78
    x93 = -x30 * x92 + x5 * x81
    x94 = x39 * x77 - x61 * x78
    x95 = (
        x1 * (-x30 * x93 + x5 * x83 + x91)
        - x30 * (x1 * x93 - x30 * x94 + x5 * x86)
        + x5 * x88
        + x90
    )
    x96 = x1 * x80 - x14 * x66 + x64 * x77
    x97 = x1 * x81 - x14 * x69 + x65 * x77
    x98 = x29 * x97
    x99 = -x11 * x98 + x5 * x96
    x100 = x23 * x73 + x99
    x101 = x49 * (x96 - x98)
    x102 = x1 * x92 + x68 * x77 - x76 * x78
    x103 = x101 - x30 * (-x102 * x30 + x5 * x97) + x5 * x99
    x104 = -x15 - A[2]
    x105 = x16 * x29
    x106 = x105 * x28
    x107 = x104 * x35 - x106
    x108 = x107 * x5
    x109 = x104 * x28 - x105 * x31
    x110 = x109 * x29
    x111 = x11 * x110
    x112 = x108 - x111
    x113 = x16 * x47
    x114 = x104 * x46 - x113
    x115 = x104 * x38 - x16 * x40
    x116 = x115 * x29
    x117 = x1 * x112 - x11 * x116 + x114 * x5
    x118 = x117 + x24 * x48
    x119 = x49 * (x104 * x46 - x113 - x116)
    x120 = x49 * (2 * x104 * x20 * x21 * x25 * x26 * x34 - x106 - x110)
    x121 = x109 * x5
    x122 = x104 * x31 - x105 * x55
    x123 = x122 * x30
    x124 = x121 - x123
    x125 = x104 * x39 - x105 * x61
    x126 = (
        x1 * (x112 * x5 + x120 - x124 * x30)
        + x117 * x5
        + x119
        - x30 * (x1 * x124 + x115 * x5 - x125 * x30)
    )
    x127 = x16 * x66
    x128 = x104 * x64 - x127
    x129 = x104 * x65 - x16 * x69
    x130 = x129 * x29
    x131 = -x11 * x130 + x128 * x5
    x132 = x131 + x24 * x73
    x133 = x49 * (x104 * x64 - x127 - x130)
    x134 = x104 * x68 - x105 * x76
    x135 = x131 * x5 + x133 - x30 * (x129 * x5 - x134 * x30)
    x136 = x1 * x110
    x137 = x49 * (x1 * x107 - x136)
    x138 = x1 * x108 - x1 * x111
    x139 = x137 + x138 * x22 + x138 * x5 - x30 * (x1 * x121 - x1 * x123)
    x140 = -x14 * x82 + x52 + x77 * x80
    x141 = x54 + x77 * x81 - x78 * x92
    x142 = -x14 * x87 + x58 + x77 * x85
    x143 = x60 + x77 * x86 - x78 * x94
    x144 = x1 * (x140 * x5 - x141 * x30) + x142 * x5 - x143 * x30 + x23 * x88
    x145 = x1 * x140 - x14 * x98 + x72 + x77 * x96
    x146 = x1 * x141 - x102 * x78 + x75 + x77 * x97
    x147 = x145 * x5 - x146 * x30 + x23 * x99
    x148 = x107 * x77 - x110 * x14
    x149 = x109 * x77
    x150 = x122 * x78
    x151 = x149 - x150
    x152 = x114 * x77 - x116 * x14
    x153 = x115 * x77 - x125 * x78
    x154 = x1 * (x148 * x5 - x151 * x30) + x152 * x5 - x153 * x30
    x155 = x154 + x24 * x88
    x156 = x1 * x148 + x128 * x77 - x130 * x14
    x157 = x1 * x151 + x129 * x77 - x134 * x78
    x158 = x156 * x5 - x157 * x30
    x159 = x158 + x24 * x99
    x160 = x1 * x107
    x161 = -x136 * x14 + x160 * x77
    x162 = x1 * x149 - x1 * x150
    x163 = x161 * x5 - x162 * x30
    x164 = x138 * x23 + x163
    x165 = x104 * x107 - x110 * x16 + x52
    x166 = x104 * x109
    x167 = x105 * x122
    x168 = x166 - x167 + x54
    x169 = x104 * x114 - x116 * x16 + x58
    x170 = x104 * x115 - x105 * x125 + x60
    x171 = x1 * (x165 * x5 - x168 * x30) + x117 * x24 + x169 * x5 - x170 * x30
    x172 = x104 * x128 - x130 * x16 + x72
    x173 = x104 * x129 - x105 * x134 + x75
    x174 = x131 * x24 + x172 * x5 - x173 * x30
    x175 = x138 * x24
    x176 = x1 * x165 + x104 * x160 - x136 * x16
    x177 = x1 * x166 - x1 * x167 + x1 * x168
    x178 = x176 * x5 - x177 * x30
    x179 = x142 + x23 * x85
    x180 = x145 + x23 * x96
    x181 = x152 + x24 * x85
    x182 = x156 + x24 * x96
    x183 = x119 + x152 * x77 - x153 * x78
    x184 = x1 * (x120 + x148 * x77 - x151 * x78) + x133 + x156 * x77 - x157 * x78
    x185 = x137 + x161 * x23 + x161 * x77 - x162 * x78
    x186 = x152 * x24 + x169 * x77 - x170 * x78
    x187 = x1 * (x165 * x77 - x168 * x78) + x156 * x24 + x172 * x77 - x173 * x78
    x188 = x161 * x24
    x189 = x176 * x77 - x177 * x78
    x190 = x114 * x23 + x152
    x191 = x128 * x23 + x156
    x192 = x160 * x23 + x161
    x193 = x114 * x24 + x169
    x194 = x128 * x24 + x172
    x195 = x160 * x24 + x176

    # 54 item(s)
    S = numpy.array(
        [
            x1
            * (
                -x30 * x57
                + x5 * x53
                + x50 * (2 * x20 * x21 * x25 * x26 * x34 * x5 - x43 - x51)
            )
            + x22 * x59
            + x22 * (x22 * x48 + x59)
            - x30 * (x1 * x57 - x30 * (x1 * x56 - x30 * x61 + x39 * x5) + x41 * x5 + x60)
            + x5 * x59
            + x50 * (-x42 + x48),
            x22 * x74
            + x22 * (x22 * x73 + x74)
            - x30 * (-x30 * (-x30 * x76 + x5 * x68) + x5 * x70 + x75)
            + x5 * x74
            + x50 * (x5 * x64 - x67 - x71),
            0,
            x22 * x89 + x23 * x59 + x95,
            x100 * x22 + x103 + x23 * x74,
            0,
            x118 * x22 + x126 + x24 * x59,
            x132 * x22 + x135 + x24 * x74,
            x139,
            x144 + x23 * x89,
            x100 * x23 + x147,
            0,
            x118 * x23 + x155,
            x132 * x23 + x159,
            x164,
            x118 * x24 + x171,
            x132 * x24 + x174,
            2 * x175 + x178,
            x22 * x88 + x22 * (x22 * x85 + x88) + x95,
            x103 + x22 * x99 + x22 * (x22 * x96 + x99),
            0,
            x144 + x179 * x22,
            x147 + x180 * x22,
            0,
            x155 + x181 * x22,
            x159 + x182 * x22,
            x161 * x22 + x163,
            x142 * x23 + x142 * x77 - x143 * x78 + x179 * x23 + 2 * x90,
            x1 * (x140 * x77 - x141 * x78 + 2 * x91)
            + 2 * x101
            + x145 * x23
            + x145 * x77
            - x146 * x78
            + x180 * x23,
            0,
            x142 * x24 + x181 * x23 + x183,
            x145 * x24 + x182 * x23 + x184,
            x185,
            x181 * x24 + x186,
            x182 * x24 + x187,
            2 * x188 + x189,
            x117 * x22 + x126 + x22 * (x114 * x22 + x117),
            x131 * x22 + x135 + x22 * (x128 * x22 + x131),
            x139 + x22 * (x138 + x160 * x22),
            x117 * x23 + x154 + x190 * x22,
            x131 * x23 + x158 + x191 * x22,
            x164 + x192 * x22,
            x171 + x193 * x22,
            x174 + x194 * x22,
            x175 + x178 + x195 * x22,
            x152 * x23 + x183 + x190 * x23,
            x156 * x23 + x184 + x191 * x23,
            x185 + x192 * x23,
            x186 + x193 * x23,
            x187 + x194 * x23,
            x188 + x189 + x195 * x23,
            x104 * x169 - x105 * x170 + 2 * x119 + x169 * x24 + x193 * x24,
            x104 * x172 - x105 * x173 + 2 * x133 + x172 * x24 + x194 * x24,
            x1 * (x104 * x165 - x105 * x168 + 2 * x120)
            + x104 * x176
            - x105 * x177
            + 2 * x137
            + x176 * x24
            + x195 * x24,
        ]
    )
    return S


def eri_1211(a, A, b, B, c, C, d, D):
    """Cartesian [pd|pp] 2-electron electron repulsion integral.

    Generated code; DO NOT modify by hand!"""

    x0 = a + b
    x1 = x0 ** (-1.0)
    x2 = -x1 * (a * A[0] + b * B[0])
    x3 = -x2 - A[0]
    x4 = 2 * c + 2 * d
    x5 = x4 ** (-1.0)
    x6 = numpy.pi**2.5
    x7 = c + d
    x8 = x0 * x7
    x9 = x0 + x7
    x10 = (x8 + numpy.sqrt(x9)) ** (-1.0)
    x11 = A[0] - B[0]
    x12 = A[1] - B[1]
    x13 = A[2] - B[2]
    x14 = numpy.exp(-a * b * x1 * (x11**2 + x12**2 + x13**2))
    x15 = x7 ** (-1.0)
    x16 = C[0] - D[0]
    x17 = C[1] - D[1]
    x18 = C[2] - D[2]
    x19 = numpy.exp(-c * d * x15 * (x16**2 + x17**2 + x18**2))
    x20 = x9 ** (-1.0)
    x21 = x15 * (c * C[0] + d * D[0])
    x22 = -x2 - x21
    x23 = x15 * (c * C[1] + d * D[1])
    x24 = -x1 * (a * A[1] + b * B[1])
    x25 = -x23 - x24
    x26 = -x1 * (a * A[2] + b * B[2])
    x27 = -x15 * (c * C[2] + d * D[2]) - x26
    x28 = x20 * x8 * (x22**2 + x25**2 + x27**2)
    x29 = boys(1, x28)
    x30 = -2 * x10 * x14 * x19 * x29 * x6
    x31 = x0 * x20
    x32 = boys(2, x28)
    x33 = 2 * x10 * x14 * x19 * x6
    x34 = x32 * x33
    x35 = x5 * (-x30 - x31 * x34)
    x36 = x21 - C[0]
    x37 = x29 * x33
    x38 = x22 * x31
    x39 = x34 * x38 + x36 * x37
    x40 = boys(3, x28)
    x41 = x33 * x40
    x42 = x34 * x36 + x38 * x41
    x43 = x35 + x36 * x39 + x38 * x42
    x44 = -2 * x10 * x14 * x19 * x32 * x6
    x45 = x5 * (-x31 * x41 - x44)
    x46 = x33 * boys(4, x28)
    x47 = x36 * x41 + x38 * x46
    x48 = x36 * x42 + x38 * x47 + x45
    x49 = x20 * x7
    x50 = x48 * x49
    x51 = 2 * a + 2 * b
    x52 = x4 + x51
    x53 = x52 ** (-1.0)
    x54 = x22 * x49
    x55 = x3 * x41 - x46 * x54
    x56 = x47 * x49
    x57 = -x22 * x56 + x3 * x42 + x53 * x55
    x58 = 2 * x53
    x59 = -x22 * x50 + x3 * x43 + x57 * x58
    x60 = x49 * x59
    x61 = boys(0, x28)
    x62 = x5 * (2 * x10 * x14 * x19 * x6 * x61 - x31 * x37)
    x63 = x33 * x61
    x64 = x36 * x63 + x37 * x38
    x65 = x36 * x64 + x38 * x39 + x62
    x66 = x43 * x49
    x67 = x41 * x54
    x68 = x3 * x34 - x67
    x69 = x42 * x49
    x70 = -x22 * x69 + x3 * x39 + x53 * x68
    x71 = -x22 * x66 + x3 * x65 + x58 * x70
    x72 = x51 ** (-1.0)
    x73 = 2 * x72
    x74 = x72 * (x65 - x66)
    x75 = x72 * (x39 - x69)
    x76 = x72 * (-x41 * x49 - x44)
    x77 = x49 * x55
    x78 = -x22 * x77 + x3 * x68 + x76
    x79 = x49 * x57
    x80 = -x22 * x79 + x3 * x70 + x53 * x78 + x75
    x81 = -x22 * x60 + x3 * x71 + x58 * x80 + x74
    x82 = x72 * (x43 - x50)
    x83 = -2 * x10 * x14 * x19 * x40 * x6
    x84 = x5 * (-x31 * x46 - x83)
    x85 = x33 * boys(5, x28)
    x86 = x36 * x46 + x38 * x85
    x87 = x36 * x47 + x38 * x86 + x84
    x88 = x3 * x46 - x54 * x85
    x89 = x3 * x47 + x53 * x88 - x54 * x86
    x90 = x72 * (x42 - x56)
    x91 = x72 * (-x46 * x49 - x83)
    x92 = x3 * x55 - x54 * x88 + x91
    x93 = x3 * x57 + x53 * x92 - x54 * x89 + x90
    x94 = x49 * x70
    x95 = x34 * x54
    x96 = x3 * x37 - x95
    x97 = x39 * x49
    x98 = -x22 * x97 + x3 * x64 + x53 * x96
    x99 = x49 * x68
    x100 = x72 * (-x30 - x34 * x49)
    x101 = x100 - x22 * x99 + x3 * x96
    x102 = x72 * (x64 - x97)
    x103 = x101 * x53 + x102 - x22 * x94 + x3 * x98
    x104 = (
        x103 * x3
        + x53
        * (
            x101 * x3
            - x54 * x78
            + x73 * (2 * x10 * x14 * x19 * x29 * x3 * x6 - x95 - x99)
        )
        - x54 * x80
        + x73 * (-x94 + x98)
    )
    x105 = x103 * x16 + x81
    x106 = x16 * x98 + x71
    x107 = x23 - C[1]
    x108 = x25 * x31
    x109 = x107 * x37 + x108 * x34
    x110 = x107 * x34 + x108 * x41
    x111 = x109 * x36 + x110 * x38
    x112 = x111 * x49
    x113 = x107 * x63 + x108 * x37
    x114 = x109 * x38 + x113 * x36
    x115 = x72 * (-x112 + x114)
    x116 = x110 * x49
    x117 = x72 * (x109 - x116)
    x118 = x116 * x22
    x119 = x109 * x3 - x118
    x120 = x107 * x41 + x108 * x46
    x121 = x120 * x49
    x122 = x110 * x3 - x121 * x22
    x123 = x122 * x49
    x124 = x117 + x119 * x3 - x123 * x22
    x125 = -x112 * x22 + x114 * x3 + x119 * x53
    x126 = x110 * x36 + x120 * x38
    x127 = x126 * x49
    x128 = x111 * x3 + x122 * x53 - x127 * x22
    x129 = x128 * x49
    x130 = x115 + x124 * x53 + x125 * x3 - x129 * x22
    x131 = x103 * x17 + x130
    x132 = x125 + x17 * x98
    x133 = x72 * (x110 - x121)
    x134 = x107 * x46 + x108 * x85
    x135 = x120 * x3 - x134 * x54
    x136 = x122 * x3 + x133 - x135 * x54
    x137 = x72 * (x111 - x127)
    x138 = x120 * x36 + x134 * x38
    x139 = (
        x130 * x3
        + x53 * (x124 * x3 - x136 * x54 + x73 * (x109 * x3 - x118 - x123))
        - x54
        * (x128 * x3 + x136 * x53 + x137 - x54 * (x126 * x3 + x135 * x53 - x138 * x54))
        + x73 * (x125 - x129)
    )
    x140 = x103 * x18
    x141 = x11 * x18
    x142 = x109 * x49
    x143 = x72 * (x113 - x142)
    x144 = x142 * x22
    x145 = x113 * x3 - x144
    x146 = x119 * x49
    x147 = x143 + x145 * x3 - x146 * x22
    x148 = x130 + x147 * x16
    x149 = x125 + x145 * x16
    x150 = -x124 * x54 + x147 * x3 + x73 * (x113 * x3 - x144 - x146)
    x151 = x107 * x113 + x108 * x109 + x62
    x152 = x107 * x109 + x108 * x110 + x35
    x153 = x152 * x49
    x154 = x153 * x22
    x155 = x107 * x110 + x108 * x120 + x45
    x156 = x155 * x49
    x157 = x152 * x3 - x156 * x22
    x158 = x157 * x49
    x159 = x72 * (x151 - x153)
    x160 = x151 * x3 - x154
    x161 = -x158 * x22 + x159 + x160 * x3
    x162 = x72 * (x152 - x156)
    x163 = x107 * x120 + x108 * x134 + x84
    x164 = x147 * x17 + x161
    x165 = x145 * x17 + x160
    x166 = x147 * x18
    x167 = -x24 - A[1]
    x168 = x25 * x49
    x169 = x168 * x34
    x170 = x167 * x37 - x169
    x171 = x168 * x41
    x172 = x167 * x34 - x171
    x173 = x172 * x49
    x174 = x170 * x3 - x173 * x22
    x175 = x25 * x97
    x176 = x167 * x64 - x175
    x177 = x25 * x69
    x178 = x167 * x39 - x177
    x179 = x178 * x49
    x180 = x174 * x53 + x176 * x3 - x179 * x22
    x181 = x25 * x66
    x182 = x167 * x65 - x181
    x183 = x167 * x43 - x25 * x50
    x184 = x183 * x49
    x185 = x167 * x41 - x168 * x46
    x186 = x185 * x49
    x187 = x172 * x3 - x186 * x22
    x188 = x167 * x42 - x25 * x56
    x189 = x188 * x49
    x190 = x178 * x3 + x187 * x53 - x189 * x22
    x191 = x182 * x3 - x184 * x22 + x190 * x58
    x192 = x16 * x180 + x191
    x193 = x106 * x12 + x192
    x194 = x72 * (x167 * x65 - x181 - x184)
    x195 = x72 * (x167 * x64 - x175 - x179)
    x196 = x72 * (2 * x10 * x14 * x167 * x19 * x29 * x6 - x169 - x173)
    x197 = x180 * x3 - x190 * x54 + x195 + x53 * (x174 * x3 - x187 * x54 + x196)
    x198 = x72 * (x167 * x39 - x177 - x189)
    x199 = x72 * (2 * x10 * x14 * x167 * x19 * x32 * x6 - x171 - x186)
    x200 = x167 * x46 - x168 * x85
    x201 = x185 * x3 - x200 * x54
    x202 = x167 * x47 - x168 * x86
    x203 = x188 * x3 + x201 * x53 - x202 * x54
    x204 = x167 * x48 - x168 * x87
    x205 = (
        x16 * x197
        + x191 * x3
        + x194
        - x54 * (x183 * x3 + x203 * x58 - x204 * x54)
        + x58 * (x190 * x3 + x198 - x203 * x54 + x53 * (x187 * x3 + x199 - x201 * x54))
    )
    x206 = x109 * x167 - x116 * x25 + x172 * x53
    x207 = x110 * x167 - x121 * x25 + x185 * x53
    x208 = x207 * x49
    x209 = x206 * x3 - x208 * x22
    x210 = -x112 * x25 + x114 * x167 + x178 * x53
    x211 = x111 * x167 - x127 * x25 + x188 * x53
    x212 = x211 * x49
    x213 = x209 * x53 + x210 * x3 - x212 * x22
    x214 = x17 * x180 + x213
    x215 = x12 * x132 + x214
    x216 = x72 * (x210 - x212)
    x217 = x72 * (x206 - x208)
    x218 = x120 * x167 - x134 * x168 + x200 * x53
    x219 = x207 * x3 - x218 * x54
    x220 = x126 * x167 - x138 * x168 + x202 * x53
    x221 = (
        x213 * x3
        + x216
        + x53 * (x209 * x3 + x217 - x219 * x54)
        - x54 * (x211 * x3 + x219 * x53 - x220 * x54)
    )
    x222 = x17 * x197 + x221
    x223 = x12 * x18
    x224 = x18 * x180
    x225 = x223 * x98 + x224
    x226 = x18 * x197
    x227 = x113 * x167 - x142 * x25 + x170 * x53
    x228 = x206 * x49
    x229 = -x22 * x228 + x227 * x3
    x230 = x16 * x229 + x213
    x231 = x12 * x149 + x230
    x232 = x72 * (x227 - x228)
    x233 = -x209 * x54 + x229 * x3 + x232
    x234 = x16 * x233 + x221
    x235 = x151 * x167 - x153 * x25 + x206 * x58
    x236 = x152 * x167 - x156 * x25 + x207 * x58
    x237 = x236 * x49
    x238 = -x22 * x237 + x235 * x3
    x239 = x17 * x229 + x238
    x240 = x12 * x165 + x239
    x241 = x72 * (x235 - x237)
    x242 = x155 * x167 - x163 * x168 + x218 * x58
    x243 = x17 * x233 + x238 * x3 + x241 - x54 * (x236 * x3 - x242 * x54)
    x244 = x18 * x229
    x245 = x145 * x223 + x244
    x246 = x18 * x233
    x247 = -x26 - A[2]
    x248 = x27 * x49
    x249 = x248 * x34
    x250 = x247 * x37 - x249
    x251 = x250 * x3
    x252 = x248 * x41
    x253 = x247 * x34 - x252
    x254 = x253 * x49
    x255 = -x22 * x254 + x251
    x256 = x27 * x97
    x257 = x247 * x64 - x256
    x258 = x27 * x69
    x259 = x247 * x39 - x258
    x260 = x259 * x49
    x261 = -x22 * x260 + x255 * x53 + x257 * x3
    x262 = x27 * x66
    x263 = x247 * x65 - x262
    x264 = x247 * x43 - x27 * x50
    x265 = x264 * x49
    x266 = x253 * x3
    x267 = x247 * x41 - x248 * x46
    x268 = x267 * x49
    x269 = x22 * x268
    x270 = x266 - x269
    x271 = x259 * x3
    x272 = x247 * x42 - x27 * x56
    x273 = x272 * x49
    x274 = x22 * x273
    x275 = x270 * x53 + x271 - x274
    x276 = -x22 * x265 + x263 * x3 + x275 * x58
    x277 = x16 * x261 + x276
    x278 = x106 * x13 + x277
    x279 = x72 * (x247 * x65 - x262 - x265)
    x280 = x72 * (x247 * x64 - x256 - x260)
    x281 = x72 * (2 * x10 * x14 * x19 * x247 * x29 * x6 - x249 - x254)
    x282 = x261 * x3 - x275 * x54 + x280 + x53 * (x255 * x3 - x270 * x54 + x281)
    x283 = x72 * (x247 * x39 - x258 - x273)
    x284 = x72 * (2 * x10 * x14 * x19 * x247 * x32 * x6 - x252 - x268)
    x285 = x267 * x3
    x286 = x247 * x46 - x248 * x85
    x287 = x286 * x54
    x288 = x285 - x287
    x289 = x272 * x3
    x290 = x247 * x47 - x248 * x86
    x291 = x290 * x54
    x292 = x288 * x53 + x289 - x291
    x293 = x247 * x48 - x248 * x87
    x294 = (
        x16 * x282
        + x276 * x3
        + x279
        - x54 * (x264 * x3 + x292 * x58 - x293 * x54)
        + x58 * (x275 * x3 + x283 - x292 * x54 + x53 * (x270 * x3 + x284 - x288 * x54))
    )
    x295 = x112 * x27
    x296 = x114 * x247 - x295
    x297 = x116 * x27
    x298 = x109 * x247 - x297
    x299 = x298 * x3
    x300 = x110 * x247 - x121 * x27
    x301 = x300 * x49
    x302 = x22 * x301
    x303 = x299 - x302
    x304 = x111 * x247 - x127 * x27
    x305 = x304 * x49
    x306 = -x22 * x305 + x296 * x3 + x303 * x53
    x307 = x17 * x261 + x306
    x308 = x13 * x132 + x307
    x309 = x72 * (x114 * x247 - x295 - x305)
    x310 = x72 * (x109 * x247 - x297 - x301)
    x311 = x3 * x300
    x312 = x120 * x247 - x134 * x248
    x313 = x312 * x54
    x314 = x311 - x313
    x315 = x126 * x247 - x138 * x248
    x316 = (
        x3 * x306
        + x309
        + x53 * (x3 * x303 + x310 - x314 * x54)
        - x54 * (x3 * x304 + x314 * x53 - x315 * x54)
    )
    x317 = x17 * x282 + x316
    x318 = x13 * x18
    x319 = x266 * x53 - x269 * x53
    x320 = x271 * x53 - x274 * x53 + x319 * x53
    x321 = x18 * x261 + x320
    x322 = x318 * x98 + x321
    x323 = x273 * x53
    x324 = x72 * (x259 * x53 - x323)
    x325 = x268 * x53
    x326 = x72 * (x253 * x53 - x325)
    x327 = x285 * x53 - x287 * x53
    x328 = (
        x3 * x320
        + x324
        + x53 * (x3 * x319 + x326 - x327 * x54)
        - x54 * (x289 * x53 - x291 * x53 + x327 * x53)
    )
    x329 = x18 * x282 + x328
    x330 = x142 * x27
    x331 = x113 * x247 - x330
    x332 = x298 * x49
    x333 = -x22 * x332 + x3 * x331
    x334 = x16 * x333 + x306
    x335 = x13 * x149 + x334
    x336 = x72 * (x113 * x247 - x330 - x332)
    x337 = x3 * x333 - x303 * x54 + x336
    x338 = x16 * x337 + x316
    x339 = x153 * x27
    x340 = x151 * x247 - x339
    x341 = x152 * x247 - x156 * x27
    x342 = x341 * x49
    x343 = -x22 * x342 + x3 * x340
    x344 = x17 * x333 + x343
    x345 = x13 * x165 + x344
    x346 = x72 * (x151 * x247 - x339 - x342)
    x347 = x155 * x247 - x163 * x248
    x348 = x17 * x337 + x3 * x343 + x346 - x54 * (x3 * x341 - x347 * x54)
    x349 = x299 * x53 - x302 * x53
    x350 = x18 * x333 + x349
    x351 = x145 * x318 + x350
    x352 = x301 * x53
    x353 = x72 * (x298 * x53 - x352)
    x354 = x3 * x349 + x353 - x54 * (x311 * x53 - x313 * x53)
    x355 = x18 * x337 + x354
    x356 = x253 * x53
    x357 = x251 * x53 - x356 * x54
    x358 = x16 * x357 + x320
    x359 = x72 * (x250 * x53 - x356 * x49)
    x360 = x3 * x357 - x319 * x54 + x359
    x361 = x11 * x358 + x16 * x360 + x328
    x362 = x17 * x357 + x349
    x363 = x11 * x362 + x17 * x360 + x354
    x364 = x52 ** (-2.0)
    x365 = 2 * x364
    x366 = x72 * (2 * x253 * x364 - x268 * x365)
    x367 = x266 * x365 - x269 * x365
    x368 = x18 * x357 + x367
    x369 = x11 * x368 + x18 * x360 + x3 * x367 + x366 - x54 * (x285 * x365 - x287 * x365)
    x370 = x100 + x167 * x170 - x173 * x25
    x371 = x167 * x172 - x186 * x25 + x76
    x372 = x102 + x167 * x176 - x179 * x25
    x373 = x167 * x178 - x189 * x25 + x75
    x374 = x3 * x372 - x373 * x54 + x53 * (x3 * x370 - x371 * x54)
    x375 = x167 * x182 - x184 * x25 + x74
    x376 = x167 * x185 - x168 * x200 + x91
    x377 = x167 * x188 - x168 * x202 + x90
    x378 = x167 * x183 - x168 * x204 + x82
    x379 = (
        x12 * x192
        + x16 * x374
        + x3 * x375
        - x378 * x54
        + x58 * (x3 * x373 - x377 * x54 + x53 * (x3 * x371 - x376 * x54))
    )
    x380 = x117 + x167 * x206 - x208 * x25 + x371 * x53
    x381 = x133 + x167 * x207 - x168 * x218 + x376 * x53
    x382 = x115 + x167 * x210 - x212 * x25 + x373 * x53
    x383 = x137 + x167 * x211 - x168 * x220 + x377 * x53
    x384 = x3 * x382 - x383 * x54 + x53 * (x3 * x380 - x381 * x54)
    x385 = x12 * x214 + x17 * x374 + x384
    x386 = x12 * x224 + x18 * x374
    x387 = x143 + x167 * x227 - x228 * x25 + x370 * x53
    x388 = x3 * x387 - x380 * x54
    x389 = x12 * x230 + x16 * x388 + x384
    x390 = x159 + x167 * x235 - x237 * x25 + x380 * x58
    x391 = x162 + x167 * x236 - x168 * x242 + x381 * x58
    x392 = x12 * x239 + x17 * x388 + x3 * x390 - x391 * x54
    x393 = x12 * x244 + x18 * x388
    x394 = x167 * x250 - x25 * x254
    x395 = x167 * x253
    x396 = x25 * x268
    x397 = x395 - x396
    x398 = x167 * x257 - x25 * x260
    x399 = x167 * x259 - x25 * x273
    x400 = x3 * x398 - x399 * x54 + x53 * (x3 * x394 - x397 * x54)
    x401 = x167 * x263 - x25 * x265
    x402 = x167 * x267
    x403 = x168 * x286
    x404 = x402 - x403
    x405 = x167 * x272
    x406 = x168 * x290
    x407 = x405 - x406
    x408 = x167 * x264 - x168 * x293
    x409 = (
        x16 * x400
        + x3 * x401
        - x408 * x54
        + x58 * (x3 * x399 - x407 * x54 + x53 * (x3 * x397 - x404 * x54))
    )
    x410 = x13 * x192 + x409
    x411 = x167 * x298 - x25 * x301 + x397 * x53
    x412 = x167 * x300
    x413 = x168 * x312
    x414 = x404 * x53 + x412 - x413
    x415 = x167 * x296 - x25 * x305 + x399 * x53
    x416 = x167 * x304 - x168 * x315 + x407 * x53
    x417 = x3 * x415 - x416 * x54 + x53 * (x3 * x411 - x414 * x54)
    x418 = x17 * x400 + x417
    x419 = x13 * x214 + x418
    x420 = x167 * x356 - x25 * x325
    x421 = x402 * x53 - x403 * x53
    x422 = x259 * x53
    x423 = x167 * x422 - x25 * x323
    x424 = x405 * x53 - x406 * x53
    x425 = x3 * x423 - x424 * x54 + x53 * (x3 * x420 - x421 * x54)
    x426 = x18 * x400 + x425
    x427 = x13 * x224 + x426
    x428 = x167 * x331 - x25 * x332 + x394 * x53
    x429 = x3 * x428 - x411 * x54
    x430 = x16 * x429 + x417
    x431 = x13 * x230 + x430
    x432 = x167 * x340 - x25 * x342 + x411 * x58
    x433 = x167 * x341 - x168 * x347 + x414 * x58
    x434 = x17 * x429 + x3 * x432 - x433 * x54
    x435 = x13 * x239 + x434
    x436 = x298 * x53
    x437 = x167 * x436 - x25 * x352 + x420 * x53
    x438 = x412 * x53 - x413 * x53 + x421 * x53
    x439 = x3 * x437 - x438 * x54
    x440 = x18 * x429 + x439
    x441 = x13 * x244 + x440
    x442 = x250 * x53
    x443 = x167 * x442 - x168 * x356
    x444 = x3 * x443 - x420 * x54
    x445 = x16 * x444 + x425
    x446 = x12 * x358 + x445
    x447 = x17 * x444 + x439
    x448 = x12 * x362 + x447
    x449 = x365 * x395 - x365 * x396
    x450 = x365 * x402 - x365 * x403
    x451 = x18 * x444 + x3 * x449 - x450 * x54
    x452 = x12 * x368 + x451
    x453 = x100 + x247 * x250 - x254 * x27
    x454 = x247 * x253
    x455 = x268 * x27
    x456 = x454 - x455 + x76
    x457 = x102 + x247 * x257 - x260 * x27
    x458 = x247 * x259 - x27 * x273 + x75
    x459 = x3 * x457 - x458 * x54 + x53 * (x3 * x453 - x456 * x54)
    x460 = x247 * x263 - x265 * x27 + x74
    x461 = x247 * x267
    x462 = x248 * x286
    x463 = x461 - x462 + x91
    x464 = x247 * x272
    x465 = x248 * x290
    x466 = x464 - x465 + x90
    x467 = x247 * x264 - x248 * x293 + x82
    x468 = (
        x13 * x277
        + x16 * x459
        + x3 * x460
        - x467 * x54
        + x58 * (x3 * x458 - x466 * x54 + x53 * (x3 * x456 - x463 * x54))
    )
    x469 = x117 + x247 * x298 - x27 * x301
    x470 = x247 * x300
    x471 = x248 * x312
    x472 = x133 + x470 - x471
    x473 = x115 + x247 * x296 - x27 * x305
    x474 = x137 + x247 * x304 - x248 * x315
    x475 = x3 * x473 - x474 * x54 + x53 * (x3 * x469 - x472 * x54)
    x476 = x13 * x307 + x17 * x459 + x475
    x477 = x247 * x356 - x27 * x325 + x456 * x53
    x478 = x461 * x53 - x462 * x53 + x463 * x53
    x479 = x247 * x422 - x27 * x323 + x458 * x53
    x480 = x464 * x53 - x465 * x53 + x466 * x53
    x481 = x3 * x479 - x480 * x54 + x53 * (x3 * x477 - x478 * x54)
    x482 = x13 * x321 + x18 * x459 + x481
    x483 = x143 + x247 * x331 - x27 * x332
    x484 = x3 * x483 - x469 * x54
    x485 = x13 * x334 + x16 * x484 + x475
    x486 = x159 + x247 * x340 - x27 * x342
    x487 = x162 + x247 * x341 - x248 * x347
    x488 = x13 * x344 + x17 * x484 + x3 * x486 - x487 * x54
    x489 = x247 * x436 - x27 * x352 + x469 * x53
    x490 = x470 * x53 - x471 * x53 + x472 * x53
    x491 = x3 * x489 - x490 * x54
    x492 = x13 * x350 + x18 * x484 + x491
    x493 = x13 * x358
    x494 = x247 * x442 - x248 * x356 + x453 * x53
    x495 = x3 * x494 - x477 * x54
    x496 = x16 * x495 + x481
    x497 = x13 * x362
    x498 = x17 * x495 + x491
    x499 = x13 * x368
    x500 = x365 * x454 - x365 * x455 + x477 * x58
    x501 = x365 * x461 - x365 * x462 + x478 * x58
    x502 = x18 * x495 + x3 * x500 - x501 * x54
    x503 = x16 * x176 + x182
    x504 = x17 * x176 + x210
    x505 = x16 * x227 + x210
    x506 = x17 * x227 + x235
    x507 = x16 * x372 + x375
    x508 = x12 * x503 + x507
    x509 = x17 * x372 + x382
    x510 = x12 * x504 + x509
    x511 = x18 * x372
    x512 = x176 * x223 + x511
    x513 = x16 * x387 + x382
    x514 = x12 * x505 + x513
    x515 = x17 * x387 + x390
    x516 = x12 * x506 + x515
    x517 = x18 * x387
    x518 = x223 * x227 + x517
    x519 = x16 * x398 + x401
    x520 = x13 * x503 + x519
    x521 = x17 * x398 + x415
    x522 = x13 * x504 + x521
    x523 = x18 * x398 + x423
    x524 = x176 * x318 + x523
    x525 = x16 * x428 + x415
    x526 = x13 * x505 + x525
    x527 = x17 * x428 + x432
    x528 = x13 * x506 + x527
    x529 = x18 * x428 + x437
    x530 = x227 * x318 + x529
    x531 = x16 * x443 + x423
    x532 = x17 * x443 + x437
    x533 = x18 * x443 + x449
    x534 = x167 * x372 - x168 * x373 + 2 * x195
    x535 = (
        x167 * x382
        - x168 * x383
        + 2 * x216
        + x53 * (x167 * x373 - x168 * x377 + 2 * x198)
    )
    x536 = (
        x167 * x387
        - x168 * x380
        + 2 * x232
        + x53 * (x167 * x370 - x168 * x371 + 2 * x196)
    )
    x537 = x167 * x398 - x168 * x399 + x280
    x538 = x16 * x537 + x167 * x401 - x168 * x408 + x279
    x539 = x167 * x415 - x168 * x416 + x309 + x53 * (x167 * x399 - x168 * x407 + x283)
    x540 = x17 * x537 + x539
    x541 = x167 * x423 - x168 * x424 + x324
    x542 = x18 * x537 + x541
    x543 = x167 * x428 - x168 * x411 + x336 + x53 * (x167 * x394 - x168 * x397 + x281)
    x544 = x16 * x543 + x539
    x545 = (
        x167 * x432
        - x168 * x433
        + x17 * x543
        + x346
        + x58
        * (x167 * x411 - x168 * x414 + x310 + x53 * (x167 * x397 - x168 * x404 + x284))
    )
    x546 = x167 * x437 - x168 * x438 + x353 + x53 * (x167 * x420 - x168 * x421 + x326)
    x547 = x18 * x543 + x546
    x548 = x167 * x443 - x168 * x420 + x359
    x549 = x12 * x531 + x16 * x548 + x541
    x550 = x12 * x532 + x17 * x548 + x546
    x551 = x12 * x533 + x167 * x449 - x168 * x450 + x18 * x548 + x366
    x552 = x167 * x457 - x168 * x458
    x553 = x13 * x519 + x16 * x552 + x167 * x460 - x168 * x467
    x554 = x167 * x473 - x168 * x474 + x53 * (x167 * x458 - x168 * x466)
    x555 = x13 * x521 + x17 * x552 + x554
    x556 = x167 * x479 - x168 * x480
    x557 = x13 * x523 + x18 * x552 + x556
    x558 = x167 * x483 - x168 * x469 + x53 * (x167 * x453 - x168 * x456)
    x559 = x13 * x525 + x16 * x558 + x554
    x560 = (
        x13 * x527
        + x167 * x486
        - x168 * x487
        + x17 * x558
        + x58 * (x167 * x469 - x168 * x472 + x53 * (x167 * x456 - x168 * x463))
    )
    x561 = x167 * x489 - x168 * x490 + x53 * (x167 * x477 - x168 * x478)
    x562 = x13 * x529 + x18 * x558 + x561
    x563 = x13 * x531
    x564 = x167 * x494 - x168 * x477
    x565 = x16 * x564 + x556
    x566 = x13 * x532
    x567 = x17 * x564 + x561
    x568 = x13 * x533
    x569 = x167 * x500 - x168 * x501 + x18 * x564
    x570 = x16 * x257 + x263
    x571 = x17 * x257 + x296
    x572 = x18 * x257 + x422
    x573 = x16 * x331 + x296
    x574 = x17 * x331 + x340
    x575 = x18 * x331 + x436
    x576 = x16 * x442 + x422
    x577 = x17 * x442 + x436
    x578 = x18 * x442 + x253 * x365
    x579 = x12 * x570 + x519
    x580 = x12 * x571 + x521
    x581 = x12 * x572 + x523
    x582 = x12 * x573 + x525
    x583 = x12 * x574 + x527
    x584 = x12 * x575 + x529
    x585 = x12 * x576 + x531
    x586 = x12 * x577 + x532
    x587 = x12 * x578 + x533
    x588 = x16 * x457 + x460
    x589 = x13 * x570 + x588
    x590 = x17 * x457 + x473
    x591 = x13 * x571 + x590
    x592 = x18 * x457 + x479
    x593 = x13 * x572 + x592
    x594 = x16 * x483 + x473
    x595 = x13 * x573 + x594
    x596 = x17 * x483 + x486
    x597 = x13 * x574 + x596
    x598 = x18 * x483 + x489
    x599 = x13 * x575 + x598
    x600 = x16 * x494 + x479
    x601 = x13 * x576 + x600
    x602 = x17 * x494 + x489
    x603 = x13 * x577 + x602
    x604 = x18 * x494 + x500
    x605 = x13 * x578 + x604
    x606 = x247 * x457 - x248 * x458 + 2 * x280
    x607 = x247 * x473 - x248 * x474 + 2 * x309
    x608 = (
        x247 * x479
        - x248 * x480
        + 2 * x324
        + x53 * (x247 * x458 - x248 * x466 + 2 * x283)
    )
    x609 = x247 * x483 - x248 * x469 + 2 * x336
    x610 = (
        x247 * x489
        - x248 * x490
        + 2 * x353
        + x53 * (x247 * x469 - x248 * x472 + 2 * x310)
    )
    x611 = (
        x247 * x494
        - x248 * x477
        + 2 * x359
        + x53 * (x247 * x453 - x248 * x456 + 2 * x281)
    )

    # 162 item(s)
    S = numpy.array(
        [
            x104 * x16
            + x105 * x11
            + x11 * (x105 + x106 * x11)
            + x3 * x81
            - x54
            * (x3 * x59 - x54 * (x3 * x48 - x54 * x87 + x58 * x89) + x58 * x93 + x82)
            + x58
            * (
                x3 * x80
                + x53
                * (
                    x3 * x78
                    - x54 * x92
                    + x73 * (2 * x10 * x14 * x19 * x3 * x32 * x6 - x67 - x77)
                )
                - x54 * x93
                + x73 * (x70 - x79)
            )
            + x73 * (-x60 + x71),
            x104 * x17 + x11 * x131 + x11 * (x11 * x132 + x131) + x139,
            x104 * x18 + x11 * x140 + x11 * (x140 + x141 * x98),
            x11 * x148 + x11 * (x11 * x149 + x148) + x139 + x150 * x16,
            x11 * x164
            + x11 * (x11 * x165 + x164)
            + x150 * x17
            + x161 * x3
            - x54 * (x157 * x3 + x162 - x54 * (x155 * x3 - x163 * x54))
            + x73 * (x151 * x3 - x154 - x158),
            x11 * x166 + x11 * (x141 * x145 + x166) + x150 * x18,
            0,
            0,
            0,
            x105 * x12 + x11 * x193 + x205,
            x11 * x215 + x12 * x131 + x222,
            x11 * x225 + x12 * x140 + x226,
            x11 * x231 + x12 * x148 + x234,
            x11 * x240 + x12 * x164 + x243,
            x11 * x245 + x12 * x166 + x246,
            0,
            0,
            0,
            x105 * x13 + x11 * x278 + x294,
            x11 * x308 + x13 * x131 + x317,
            x11 * x322 + x13 * x140 + x329,
            x11 * x335 + x13 * x148 + x338,
            x11 * x345 + x13 * x164 + x348,
            x11 * x351 + x13 * x166 + x355,
            x361,
            x363,
            x369,
            x12 * x193 + x379,
            x12 * x215 + x385,
            x12 * x225 + x386,
            x12 * x231 + x389,
            x12 * x240 + x392,
            x12 * x245 + x393,
            0,
            0,
            0,
            x12 * x278 + x410,
            x12 * x308 + x419,
            x12 * x322 + x427,
            x12 * x335 + x431,
            x12 * x345 + x435,
            x12 * x351 + x441,
            x446,
            x448,
            x452,
            x13 * x278 + x468,
            x13 * x308 + x476,
            x13 * x322 + x482,
            x13 * x335 + x485,
            x13 * x345 + x488,
            x13 * x351 + x492,
            2 * x493 + x496,
            2 * x497 + x498,
            2 * x499 + x502,
            x11 * x192 + x11 * (x11 * x503 + x192) + x205,
            x11 * x214 + x11 * (x11 * x504 + x214) + x222,
            x11 * x224 + x11 * (x141 * x176 + x224) + x226,
            x11 * x230 + x11 * (x11 * x505 + x230) + x234,
            x11 * x239 + x11 * (x11 * x506 + x239) + x243,
            x11 * x244 + x11 * (x141 * x227 + x244) + x246,
            0,
            0,
            0,
            x11 * x508 + x379,
            x11 * x510 + x385,
            x11 * x512 + x386,
            x11 * x514 + x389,
            x11 * x516 + x392,
            x11 * x518 + x393,
            0,
            0,
            0,
            x11 * x520 + x410,
            x11 * x522 + x419,
            x11 * x524 + x427,
            x11 * x526 + x431,
            x11 * x528 + x435,
            x11 * x530 + x441,
            x11 * x531 + x445,
            x11 * x532 + x447,
            x11 * x533 + x451,
            x12 * x507 + x12 * x508 + x16 * x534 + x167 * x375 - x168 * x378 + 2 * x194,
            x12 * x509 + x12 * x510 + x17 * x534 + x535,
            x12 * x511 + x12 * x512 + x18 * x534,
            x12 * x513 + x12 * x514 + x16 * x536 + x535,
            x12 * x515
            + x12 * x516
            + x167 * x390
            - x168 * x391
            + x17 * x536
            + 2 * x241
            + x58
            * (
                x167 * x380
                - x168 * x381
                + 2 * x217
                + x53 * (x167 * x371 - x168 * x376 + 2 * x199)
            ),
            x12 * x517 + x12 * x518 + x18 * x536,
            0,
            0,
            0,
            x12 * x520 + x13 * x507 + x538,
            x12 * x522 + x13 * x509 + x540,
            x12 * x524 + x13 * x511 + x542,
            x12 * x526 + x13 * x513 + x544,
            x12 * x528 + x13 * x515 + x545,
            x12 * x530 + x13 * x517 + x547,
            x549,
            x550,
            x551,
            x13 * x520 + x553,
            x13 * x522 + x555,
            x13 * x524 + x557,
            x13 * x526 + x559,
            x13 * x528 + x560,
            x13 * x530 + x562,
            2 * x563 + x565,
            2 * x566 + x567,
            2 * x568 + x569,
            x11 * x277 + x11 * (x11 * x570 + x277) + x294,
            x11 * x307 + x11 * (x11 * x571 + x307) + x317,
            x11 * x321 + x11 * (x11 * x572 + x321) + x329,
            x11 * x334 + x11 * (x11 * x573 + x334) + x338,
            x11 * x344 + x11 * (x11 * x574 + x344) + x348,
            x11 * x350 + x11 * (x11 * x575 + x350) + x355,
            x11 * (x11 * x576 + x358) + x361,
            x11 * (x11 * x577 + x362) + x363,
            x11 * (x11 * x578 + x368) + x369,
            x11 * x579 + x12 * x277 + x409,
            x11 * x580 + x12 * x307 + x418,
            x11 * x581 + x12 * x321 + x426,
            x11 * x582 + x12 * x334 + x430,
            x11 * x583 + x12 * x344 + x434,
            x11 * x584 + x12 * x350 + x440,
            x11 * x585 + x446,
            x11 * x586 + x448,
            x11 * x587 + x452,
            x11 * x589 + x468,
            x11 * x591 + x476,
            x11 * x593 + x482,
            x11 * x595 + x485,
            x11 * x597 + x488,
            x11 * x599 + x492,
            x11 * x601 + x493 + x496,
            x11 * x603 + x497 + x498,
            x11 * x605 + x499 + x502,
            x12 * x519 + x12 * x579 + x538,
            x12 * x521 + x12 * x580 + x540,
            x12 * x523 + x12 * x581 + x542,
            x12 * x525 + x12 * x582 + x544,
            x12 * x527 + x12 * x583 + x545,
            x12 * x529 + x12 * x584 + x547,
            x12 * x585 + x549,
            x12 * x586 + x550,
            x12 * x587 + x551,
            x12 * x589 + x553,
            x12 * x591 + x555,
            x12 * x593 + x557,
            x12 * x595 + x559,
            x12 * x597 + x560,
            x12 * x599 + x562,
            x12 * x601 + x563 + x565,
            x12 * x603 + x566 + x567,
            x12 * x605 + x568 + x569,
            x13 * x588 + x13 * x589 + x16 * x606 + x247 * x460 - x248 * x467 + 2 * x279,
            x13 * x590 + x13 * x591 + x17 * x606 + x607,
            x13 * x592 + x13 * x593 + x18 * x606 + x608,
            x13 * x594 + x13 * x595 + x16 * x609 + x607,
            x13 * x596 + x13 * x597 + x17 * x609 + x247 * x486 - x248 * x487 + 2 * x346,
            x13 * x598 + x13 * x599 + x18 * x609 + x610,
            x13 * x600 + x13 * x601 + x16 * x611 + x608,
            x13 * x602 + x13 * x603 + x17 * x611 + x610,
            x13 * x604
            + x13 * x605
            + x18 * x611
            + x247 * x500
            - x248 * x501
            + 2 * x366
            + x58
            * (
                x247 * x477
                - x248 * x478
                + 2 * x326
                + x53 * (x247 * x456 - x248 * x463 + 2 * x284)
            ),
        ]
    )
    return S


def eri_1212(a, A, b, B, c, C, d, D):
    """Cartesian [pd|pd] 2-electron electron repulsion integral.

    Generated code; DO NOT modify by hand!"""

    x0 = a + b
    x1 = x0 ** (-1.0)
    x2 = -x1 * (a * A[0] + b * B[0])
    x3 = -x2 - A[0]
    x4 = c + d
    x5 = x4 ** (-1.0)
    x6 = x5 * (c * C[0] + d * D[0])
    x7 = x6 - C[0]
    x8 = x0 + x4
    x9 = x8 ** (-1.0)
    x10 = -x2 - x6
    x11 = x5 * (c * C[1] + d * D[1])
    x12 = -x1 * (a * A[1] + b * B[1])
    x13 = -x11 - x12
    x14 = -x1 * (a * A[2] + b * B[2])
    x15 = -x14 - x5 * (c * C[2] + d * D[2])
    x16 = x0 * x4
    x17 = x16 * x9 * (x10**2 + x13**2 + x15**2)
    x18 = boys(2, x17)
    x19 = numpy.pi**2.5
    x20 = (x16 + numpy.sqrt(x8)) ** (-1.0)
    x21 = A[0] - B[0]
    x22 = A[1] - B[1]
    x23 = A[2] - B[2]
    x24 = numpy.exp(-a * b * x1 * (x21**2 + x22**2 + x23**2))
    x25 = C[0] - D[0]
    x26 = C[1] - D[1]
    x27 = C[2] - D[2]
    x28 = x27**2
    x29 = numpy.exp(-c * d * x5 * (x25**2 + x26**2 + x28))
    x30 = 2 * x19 * x20 * x24 * x29
    x31 = x18 * x30
    x32 = x0 * x9
    x33 = x10 * x32
    x34 = boys(3, x17)
    x35 = x30 * x34
    x36 = x31 * x7 + x33 * x35
    x37 = x32 * x36
    x38 = boys(1, x17)
    x39 = x30 * x38
    x40 = x31 * x33 + x39 * x7
    x41 = 2 * c + 2 * d
    x42 = x41 ** (-1.0)
    x43 = 2 * x42
    x44 = -2 * x19 * x20 * x24 * x29 * x38
    x45 = x42 * (-x31 * x32 - x44)
    x46 = x10 * x37 + x40 * x7 + x45
    x47 = -2 * x18 * x19 * x20 * x24 * x29
    x48 = x42 * (-x32 * x35 - x47)
    x49 = boys(4, x17)
    x50 = x30 * x49
    x51 = x33 * x50 + x35 * x7
    x52 = x32 * x51
    x53 = x10 * x52 + x36 * x7 + x48
    x54 = x33 * x53 + x43 * (-x37 + x40) + x46 * x7
    x55 = -2 * x19 * x20 * x24 * x29 * x34
    x56 = x42 * (-x32 * x50 - x55)
    x57 = x30 * boys(5, x17)
    x58 = x33 * x57 + x50 * x7
    x59 = x32 * x58
    x60 = x10 * x59 + x51 * x7 + x56
    x61 = x33 * x60 + x43 * (x36 - x52) + x53 * x7
    x62 = x4 * x9
    x63 = x61 * x62
    x64 = x60 * x62
    x65 = 2 * a + 2 * b
    x66 = x41 + x65
    x67 = x66 ** (-1.0)
    x68 = x10 * x62
    x69 = x3 * x50 - x57 * x68
    x70 = x58 * x62
    x71 = -x10 * x70 + x3 * x51 + x67 * x69
    x72 = 2 * x67
    x73 = -x10 * x64 + x3 * x53 + x71 * x72
    x74 = 3 * x67
    x75 = -x10 * x63 + x3 * x54 + x73 * x74
    x76 = x62 * x75
    x77 = x32 * x40
    x78 = boys(0, x17)
    x79 = x30 * x78
    x80 = x33 * x39 + x7 * x79
    x81 = x42 * (2 * x19 * x20 * x24 * x29 * x78 - x32 * x39)
    x82 = x10 * x77 + x7 * x80 + x81
    x83 = x33 * x46 + x43 * (-x77 + x80) + x7 * x82
    x84 = x54 * x62
    x85 = x53 * x62
    x86 = x50 * x68
    x87 = x3 * x35 - x86
    x88 = x51 * x62
    x89 = -x10 * x88 + x3 * x36 + x67 * x87
    x90 = -x10 * x85 + x3 * x46 + x72 * x89
    x91 = -x10 * x84 + x3 * x83 + x74 * x90
    x92 = x65 ** (-1.0)
    x93 = 2 * x92
    x94 = x92 * (x83 - x84)
    x95 = x92 * (x46 - x85)
    x96 = x62 * x73
    x97 = x92 * (x36 - x88)
    x98 = x92 * (-x50 * x62 - x55)
    x99 = x62 * x69
    x100 = -x10 * x99 + x3 * x87 + x98
    x101 = x62 * x71
    x102 = -x10 * x101 + x100 * x67 + x3 * x89 + x97
    x103 = -x10 * x96 + x102 * x72 + x3 * x90 + x95
    x104 = -x10 * x76 + x103 * x74 + x3 * x91 + x94
    x105 = x92 * (x54 - x63)
    x106 = -2 * x19 * x20 * x24 * x29 * x49
    x107 = x42 * (-x106 - x32 * x57)
    x108 = x30 * boys(6, x17)
    x109 = x108 * x33 + x57 * x7
    x110 = x107 + x109 * x33 + x58 * x7
    x111 = x110 * x33 + x43 * (x51 - x59) + x60 * x7
    x112 = -x108 * x68 + x3 * x57
    x113 = -x109 * x68 + x112 * x67 + x3 * x58
    x114 = -x110 * x68 + x113 * x72 + x3 * x60
    x115 = x92 * (x53 - x64)
    x116 = x92 * (x51 - x70)
    x117 = x92 * (-x106 - x57 * x62)
    x118 = -x112 * x68 + x117 + x3 * x69
    x119 = -x113 * x68 + x116 + x118 * x67 + x3 * x71
    x120 = -x114 * x68 + x115 + x119 * x72 + x3 * x73
    x121 = x62 * x90
    x122 = x46 * x62
    x123 = x35 * x68
    x124 = -x123 + x3 * x31
    x125 = x36 * x62
    x126 = -x10 * x125 + x124 * x67 + x3 * x40
    x127 = -x10 * x122 + x126 * x72 + x3 * x82
    x128 = x92 * (-x122 + x82)
    x129 = x92 * (-x125 + x40)
    x130 = x92 * (-x35 * x62 - x47)
    x131 = x62 * x87
    x132 = -x10 * x131 + x124 * x3 + x130
    x133 = x62 * x89
    x134 = -x10 * x133 + x126 * x3 + x129 + x132 * x67
    x135 = -x10 * x121 + x127 * x3 + x128 + x134 * x72
    x136 = (
        -x103 * x68
        + x135 * x3
        + x72
        * (
            -x102 * x68
            + x134 * x3
            + x67
            * (
                -x100 * x68
                + x132 * x3
                + x93 * (-x123 - x131 + 2 * x18 * x19 * x20 * x24 * x29 * x3)
            )
            + x93 * (x126 - x133)
        )
        + x93 * (-x121 + x127)
    )
    x137 = x126 * x62
    x138 = x31 * x68
    x139 = -x138 + x3 * x39
    x140 = x40 * x62
    x141 = -x10 * x140 + x139 * x67 + x3 * x80
    x142 = x124 * x62
    x143 = x92 * (-x31 * x62 - x44)
    x144 = -x10 * x142 + x139 * x3 + x143
    x145 = x92 * (-x140 + x80)
    x146 = -x10 * x137 + x141 * x3 + x144 * x67 + x145
    x147 = (
        -x134 * x68
        + x146 * x3
        + x67
        * (
            -x132 * x68
            + x144 * x3
            + x93 * (-x138 - x142 + 2 * x19 * x20 * x24 * x29 * x3 * x38)
        )
        + x93 * (-x137 + x141)
    )
    x148 = x147 * x25
    x149 = x146 * x25
    x150 = x104 + x135 * x25 + x25 * (x135 + x149)
    x151 = x141 * x25
    x152 = x127 * x25 + x25 * (x127 + x151) + x91
    x153 = x146 * x26
    x154 = x11 - C[1]
    x155 = x13 * x32
    x156 = x154 * x39 + x155 * x31
    x157 = x154 * x31 + x155 * x35
    x158 = x157 * x32
    x159 = x10 * x158 + x156 * x7
    x160 = x159 * x62
    x161 = x154 * x79 + x155 * x39
    x162 = x156 * x32
    x163 = x10 * x162 + x161 * x7
    x164 = x92 * (-x160 + x163)
    x165 = x157 * x62
    x166 = x92 * (x156 - x165)
    x167 = x10 * x165
    x168 = x156 * x3 - x167
    x169 = x154 * x35 + x155 * x50
    x170 = x169 * x62
    x171 = x10 * x170
    x172 = x157 * x3 - x171
    x173 = x172 * x62
    x174 = -x10 * x173 + x166 + x168 * x3
    x175 = -x10 * x160 + x163 * x3 + x168 * x67
    x176 = x169 * x32
    x177 = x10 * x176 + x157 * x7
    x178 = x177 * x62
    x179 = -x10 * x178 + x159 * x3 + x172 * x67
    x180 = x179 * x62
    x181 = -x10 * x180 + x164 + x174 * x67 + x175 * x3
    x182 = x153 + x181
    x183 = x42 * (x156 - x158)
    x184 = x159 * x7 + x177 * x33 + x183
    x185 = x184 * x62
    x186 = x42 * (x161 - x162)
    x187 = x159 * x33 + x163 * x7 + x186
    x188 = x92 * (-x185 + x187)
    x189 = -x10 * x185 + x179 * x72 + x187 * x3
    x190 = x42 * (x157 - x176)
    x191 = x154 * x50 + x155 * x57
    x192 = x191 * x32
    x193 = x10 * x192 + x169 * x7
    x194 = x177 * x7 + x190 + x193 * x33
    x195 = x194 * x62
    x196 = x191 * x62
    x197 = -x10 * x196 + x169 * x3
    x198 = x193 * x62
    x199 = -x10 * x198 + x177 * x3 + x197 * x67
    x200 = -x10 * x195 + x184 * x3 + x199 * x72
    x201 = x200 * x62
    x202 = x92 * (x159 - x178)
    x203 = x92 * (x157 - x170)
    x204 = x197 * x62
    x205 = -x10 * x204 + x172 * x3 + x203
    x206 = x199 * x62
    x207 = -x10 * x206 + x179 * x3 + x202 + x205 * x67
    x208 = -x10 * x201 + x188 + x189 * x3 + x207 * x72
    x209 = x135 * x26 + x182 * x25 + x208
    x210 = x141 * x26
    x211 = x175 + x210
    x212 = x127 * x26 + x189 + x211 * x25
    x213 = x147 * x26
    x214 = (
        x181 * x3
        - x207 * x68
        + x67 * (x174 * x3 - x205 * x68 + x93 * (x156 * x3 - x167 - x173))
        + x93 * (x175 - x180)
    )
    x215 = x213 + x214
    x216 = x92 * (x169 - x196)
    x217 = x108 * x155 + x154 * x57
    x218 = x191 * x3 - x217 * x68
    x219 = x197 * x3 + x216 - x218 * x68
    x220 = x92 * (x177 - x198)
    x221 = x191 * x7 + x217 * x33
    x222 = x193 * x3 + x218 * x67 - x221 * x68
    x223 = x199 * x3 + x219 * x67 + x220 - x222 * x68
    x224 = x92 * (x184 - x195)
    x225 = x42 * (x169 - x192)
    x226 = x193 * x7 + x221 * x33 + x225
    x227 = (
        x208 * x3
        - x68
        * (x200 * x3 + x223 * x72 + x224 - x68 * (x194 * x3 + x222 * x72 - x226 * x68))
        + x72
        * (
            x207 * x3
            - x223 * x68
            + x67 * (x205 * x3 - x219 * x68 + x93 * (x157 * x3 - x171 - x204))
            + x93 * (x179 - x206)
        )
        + x93 * (x189 - x201)
    )
    x228 = x135 * x27 + x149 * x27
    x229 = x127 * x27 + x151 * x27
    x230 = x13 * x158 + x154 * x156 + x45
    x231 = x13 * x176 + x154 * x157 + x48
    x232 = x230 * x7 + x231 * x33
    x233 = x232 * x62
    x234 = x13 * x162 + x154 * x161 + x81
    x235 = x230 * x33 + x234 * x7
    x236 = x92 * (-x233 + x235)
    x237 = x231 * x62
    x238 = x92 * (x230 - x237)
    x239 = x10 * x237
    x240 = x230 * x3 - x239
    x241 = x13 * x192 + x154 * x169 + x56
    x242 = x241 * x62
    x243 = -x10 * x242 + x231 * x3
    x244 = x243 * x62
    x245 = -x10 * x244 + x238 + x240 * x3
    x246 = -x10 * x233 + x235 * x3 + x240 * x67
    x247 = x231 * x7 + x241 * x33
    x248 = x247 * x62
    x249 = -x10 * x248 + x232 * x3 + x243 * x67
    x250 = x249 * x62
    x251 = -x10 * x250 + x236 + x245 * x67 + x246 * x3
    x252 = x181 * x26 + x251
    x253 = x182 * x26 + x252
    x254 = x175 * x26 + x246
    x255 = x211 * x26 + x254
    x256 = x92 * (x231 - x242)
    x257 = x107 + x154 * x191 + x155 * x217
    x258 = x241 * x3 - x257 * x68
    x259 = x243 * x3 + x256 - x258 * x68
    x260 = x92 * (x232 - x248)
    x261 = x241 * x7 + x257 * x33
    x262 = (
        x214 * x26
        + x251 * x3
        + x67 * (x245 * x3 - x259 * x68 + x93 * (x230 * x3 - x239 - x244))
        - x68
        * (x249 * x3 + x259 * x67 + x260 - x68 * (x247 * x3 + x258 * x67 - x261 * x68))
        + x93 * (x246 - x250)
    )
    x263 = x181 * x27
    x264 = x153 * x27 + x263
    x265 = x175 * x27
    x266 = x210 * x27 + x265
    x267 = x214 * x27
    x268 = x146 * x28
    x269 = x21 * x28
    x270 = x156 * x62
    x271 = x92 * (x161 - x270)
    x272 = x10 * x270
    x273 = x161 * x3 - x272
    x274 = x168 * x62
    x275 = -x10 * x274 + x271 + x273 * x3
    x276 = x25 * x275
    x277 = x181 * x25 + x208 + x25 * (x181 + x276)
    x278 = x25 * x273
    x279 = x175 * x25 + x189 + x25 * (x175 + x278)
    x280 = -x174 * x68 + x275 * x3 + x93 * (x161 * x3 - x272 - x274)
    x281 = x25 * x280
    x282 = x26 * x275
    x283 = x230 * x62
    x284 = x92 * (x234 - x283)
    x285 = x10 * x283
    x286 = x234 * x3 - x285
    x287 = x240 * x62
    x288 = -x10 * x287 + x284 + x286 * x3
    x289 = x282 + x288
    x290 = x25 * x289 + x252
    x291 = x26 * x273
    x292 = x286 + x291
    x293 = x25 * x292 + x254
    x294 = x26 * x280
    x295 = -x245 * x68 + x288 * x3 + x93 * (x234 * x3 - x285 - x287)
    x296 = x294 + x295
    x297 = x263 + x27 * x276
    x298 = x265 + x27 * x278
    x299 = x154 * x234 + x155 * x230 + 2 * x186
    x300 = x154 * x230 + x155 * x231 + 2 * x183
    x301 = x300 * x62
    x302 = x10 * x301
    x303 = x154 * x231 + x155 * x241 + 2 * x190
    x304 = x303 * x62
    x305 = -x10 * x304 + x3 * x300
    x306 = x305 * x62
    x307 = x92 * (x299 - x301)
    x308 = x299 * x3 - x302
    x309 = -x10 * x306 + x3 * x308 + x307
    x310 = x92 * (x300 - x304)
    x311 = x154 * x241 + x155 * x257 + 2 * x225
    x312 = x26 * x288 + x26 * x289 + x309
    x313 = x26 * x286 + x26 * x292 + x308
    x314 = x27 * x282 + x27 * x288
    x315 = x27 * x286 + x27 * x291
    x316 = x275 * x28
    x317 = -x12 - A[1]
    x318 = x122 * x13
    x319 = x317 * x82 - x318
    x320 = x13 * x85
    x321 = x317 * x46 - x320
    x322 = x321 * x62
    x323 = x13 * x62
    x324 = x323 * x35
    x325 = x31 * x317 - x324
    x326 = x323 * x50
    x327 = x317 * x35 - x326
    x328 = x327 * x62
    x329 = -x10 * x328 + x3 * x325
    x330 = x125 * x13
    x331 = x317 * x40 - x330
    x332 = x13 * x88
    x333 = x317 * x36 - x332
    x334 = x333 * x62
    x335 = -x10 * x334 + x3 * x331 + x329 * x67
    x336 = -x10 * x322 + x3 * x319 + x335 * x72
    x337 = x31 * x323
    x338 = x317 * x39 - x337
    x339 = x325 * x62
    x340 = -x10 * x339 + x3 * x338
    x341 = x13 * x140
    x342 = x317 * x80 - x341
    x343 = x331 * x62
    x344 = -x10 * x343 + x3 * x342 + x340 * x67
    x345 = x25 * x344
    x346 = x13 * x84
    x347 = x317 * x83 - x346
    x348 = -x13 * x63 + x317 * x54
    x349 = x348 * x62
    x350 = -x13 * x64 + x317 * x53
    x351 = x350 * x62
    x352 = x317 * x50 - x323 * x57
    x353 = x352 * x62
    x354 = -x10 * x353 + x3 * x327
    x355 = -x13 * x70 + x317 * x51
    x356 = x355 * x62
    x357 = -x10 * x356 + x3 * x333 + x354 * x67
    x358 = -x10 * x351 + x3 * x321 + x357 * x72
    x359 = -x10 * x349 + x3 * x347 + x358 * x74
    x360 = x25 * x336 + x25 * (x336 + x345) + x359
    x361 = x152 * x22 + x360
    x362 = x92 * (x317 * x83 - x346 - x349)
    x363 = x92 * (x317 * x82 - x318 - x322)
    x364 = x92 * (x317 * x40 - x330 - x334)
    x365 = x92 * (2 * x18 * x19 * x20 * x24 * x29 * x317 - x324 - x328)
    x366 = (
        x3 * x336
        - x358 * x68
        + x363
        + x72 * (x3 * x335 - x357 * x68 + x364 + x67 * (x3 * x329 - x354 * x68 + x365))
    )
    x367 = x92 * (x317 * x80 - x341 - x343)
    x368 = x92 * (2 * x19 * x20 * x24 * x29 * x317 * x38 - x337 - x339)
    x369 = x3 * x344 - x335 * x68 + x367 + x67 * (x3 * x340 - x329 * x68 + x368)
    x370 = x25 * x369
    x371 = x92 * (x317 * x46 - x320 - x351)
    x372 = -x110 * x323 + x317 * x60
    x373 = -x108 * x323 + x317 * x57
    x374 = x3 * x352 - x373 * x68
    x375 = -x109 * x323 + x317 * x58
    x376 = x3 * x355 + x374 * x67 - x375 * x68
    x377 = x3 * x350 - x372 * x68 + x376 * x72
    x378 = x92 * (x317 * x36 - x332 - x356)
    x379 = x92 * (2 * x19 * x20 * x24 * x29 * x317 * x34 - x326 - x353)
    x380 = -x111 * x323 + x317 * x61
    x381 = (
        x25 * x366
        + x25 * (x366 + x370)
        + x3 * x359
        + x362
        - x68 * (x3 * x348 + x377 * x74 - x380 * x68)
        + x74
        * (
            x3 * x358
            + x371
            - x377 * x68
            + x72
            * (x3 * x357 - x376 * x68 + x378 + x67 * (x3 * x354 - x374 * x68 + x379))
        )
    )
    x382 = x26 * x344
    x383 = -x13 * x165 + x156 * x317 + x325 * x67
    x384 = -x13 * x170 + x157 * x317 + x327 * x67
    x385 = x384 * x62
    x386 = -x10 * x385 + x3 * x383
    x387 = -x13 * x160 + x163 * x317 + x331 * x67
    x388 = -x13 * x178 + x159 * x317 + x333 * x67
    x389 = x388 * x62
    x390 = -x10 * x389 + x3 * x387 + x386 * x67
    x391 = x382 + x390
    x392 = -x13 * x185 + x187 * x317 + x321 * x67
    x393 = -x13 * x195 + x184 * x317 + x350 * x67
    x394 = x393 * x62
    x395 = -x13 * x196 + x169 * x317 + x352 * x67
    x396 = x395 * x62
    x397 = -x10 * x396 + x3 * x384
    x398 = -x13 * x198 + x177 * x317 + x355 * x67
    x399 = x398 * x62
    x400 = -x10 * x399 + x3 * x388 + x397 * x67
    x401 = -x10 * x394 + x3 * x392 + x400 * x72
    x402 = x25 * x391 + x26 * x336 + x401
    x403 = x212 * x22 + x402
    x404 = x26 * x369
    x405 = x92 * (x387 - x389)
    x406 = x92 * (x383 - x385)
    x407 = x3 * x390 - x400 * x68 + x405 + x67 * (x3 * x386 - x397 * x68 + x406)
    x408 = x404 + x407
    x409 = x92 * (x392 - x394)
    x410 = x92 * (x388 - x399)
    x411 = x92 * (x384 - x396)
    x412 = x191 * x317 - x217 * x323 + x373 * x67
    x413 = x3 * x395 - x412 * x68
    x414 = x193 * x317 - x221 * x323 + x375 * x67
    x415 = x3 * x398 + x413 * x67 - x414 * x68
    x416 = x194 * x317 - x226 * x323 + x372 * x67
    x417 = (
        x3 * x401
        + x409
        - x68 * (x3 * x393 + x415 * x72 - x416 * x68)
        + x72 * (x3 * x400 + x410 - x415 * x68 + x67 * (x3 * x397 + x411 - x413 * x68))
    )
    x418 = x25 * x408 + x26 * x366 + x417
    x419 = x27 * x336 + x27 * x345
    x420 = x22 * x229 + x419
    x421 = x27 * x366 + x27 * x370
    x422 = -x13 * x237 + x230 * x317 + x384 * x72
    x423 = -x13 * x242 + x231 * x317 + x395 * x72
    x424 = x423 * x62
    x425 = -x10 * x424 + x3 * x422
    x426 = -x13 * x233 + x235 * x317 + x388 * x72
    x427 = -x13 * x248 + x232 * x317 + x398 * x72
    x428 = x427 * x62
    x429 = -x10 * x428 + x3 * x426 + x425 * x67
    x430 = x26 * x390 + x429
    x431 = x26 * x391 + x430
    x432 = x22 * x255 + x431
    x433 = x92 * (x426 - x428)
    x434 = x92 * (x422 - x424)
    x435 = x241 * x317 - x257 * x323 + x412 * x72
    x436 = x3 * x423 - x435 * x68
    x437 = x247 * x317 - x261 * x323 + x414 * x72
    x438 = (
        x26 * x407
        + x3 * x429
        + x433
        + x67 * (x3 * x425 + x434 - x436 * x68)
        - x68 * (x3 * x427 + x436 * x67 - x437 * x68)
    )
    x439 = x26 * x408 + x438
    x440 = x27 * x390
    x441 = x27 * x382 + x440
    x442 = x22 * x266 + x441
    x443 = x27 * x407
    x444 = x27 * x404 + x443
    x445 = x22 * x28
    x446 = x28 * x344
    x447 = x141 * x445 + x446
    x448 = x28 * x369
    x449 = -x13 * x270 + x161 * x317 + x338 * x67
    x450 = x383 * x62
    x451 = -x10 * x450 + x3 * x449
    x452 = x25 * x451
    x453 = x25 * x390 + x25 * (x390 + x452) + x401
    x454 = x22 * x279 + x453
    x455 = x92 * (x449 - x450)
    x456 = x3 * x451 - x386 * x68 + x455
    x457 = x25 * x456
    x458 = x25 * x407 + x25 * (x407 + x457) + x417
    x459 = x26 * x451
    x460 = -x13 * x283 + x234 * x317 + x383 * x72
    x461 = x422 * x62
    x462 = -x10 * x461 + x3 * x460
    x463 = x459 + x462
    x464 = x25 * x463 + x430
    x465 = x22 * x293 + x464
    x466 = x26 * x456
    x467 = x92 * (x460 - x461)
    x468 = x3 * x462 - x425 * x68 + x467
    x469 = x466 + x468
    x470 = x25 * x469 + x438
    x471 = x27 * x452 + x440
    x472 = x22 * x298 + x471
    x473 = x27 * x457 + x443
    x474 = -x13 * x301 + x299 * x317 + x422 * x74
    x475 = -x13 * x304 + x300 * x317 + x423 * x74
    x476 = x475 * x62
    x477 = -x10 * x476 + x3 * x474
    x478 = x26 * x462 + x26 * x463 + x477
    x479 = x22 * x313 + x478
    x480 = x92 * (x474 - x476)
    x481 = x303 * x317 - x311 * x323 + x435 * x74
    x482 = x26 * x468 + x26 * x469 + x3 * x477 + x480 - x68 * (x3 * x475 - x481 * x68)
    x483 = x27 * x459 + x27 * x462
    x484 = x22 * x315 + x483
    x485 = x27 * x466 + x27 * x468
    x486 = x28 * x451
    x487 = x273 * x445 + x486
    x488 = x28 * x456
    x489 = -x14 - A[2]
    x490 = x122 * x15
    x491 = x489 * x82 - x490
    x492 = x15 * x85
    x493 = x46 * x489 - x492
    x494 = x493 * x62
    x495 = x15 * x62
    x496 = x35 * x495
    x497 = x31 * x489 - x496
    x498 = x3 * x497
    x499 = x495 * x50
    x500 = x35 * x489 - x499
    x501 = x500 * x62
    x502 = x10 * x501
    x503 = x498 - x502
    x504 = x125 * x15
    x505 = x40 * x489 - x504
    x506 = x3 * x505
    x507 = x15 * x88
    x508 = x36 * x489 - x507
    x509 = x508 * x62
    x510 = -x10 * x509 + x503 * x67 + x506
    x511 = -x10 * x494 + x3 * x491 + x510 * x72
    x512 = x31 * x495
    x513 = x39 * x489 - x512
    x514 = x3 * x513
    x515 = x497 * x62
    x516 = -x10 * x515 + x514
    x517 = x140 * x15
    x518 = x489 * x80 - x517
    x519 = x505 * x62
    x520 = -x10 * x519 + x3 * x518 + x516 * x67
    x521 = x15 * x84
    x522 = x489 * x83 - x521
    x523 = -x15 * x63 + x489 * x54
    x524 = x523 * x62
    x525 = x3 * x493
    x526 = -x15 * x64 + x489 * x53
    x527 = x526 * x62
    x528 = x10 * x527
    x529 = x3 * x500
    x530 = x489 * x50 - x495 * x57
    x531 = x530 * x62
    x532 = x10 * x531
    x533 = x529 - x532
    x534 = x3 * x508
    x535 = -x15 * x70 + x489 * x51
    x536 = x535 * x62
    x537 = x10 * x536
    x538 = x533 * x67 + x534 - x537
    x539 = x525 - x528 + x538 * x72
    x540 = -x10 * x524 + x3 * x522 + x539 * x74
    x541 = x25 * x511 + x25 * (x25 * x520 + x511) + x540
    x542 = x152 * x23 + x541
    x543 = x92 * (x489 * x83 - x521 - x524)
    x544 = x92 * (x489 * x82 - x490 - x494)
    x545 = x92 * (x40 * x489 - x504 - x509)
    x546 = x92 * (2 * x18 * x19 * x20 * x24 * x29 * x489 - x496 - x501)
    x547 = (
        x3 * x511
        - x539 * x68
        + x544
        + x72 * (x3 * x510 - x538 * x68 + x545 + x67 * (x3 * x503 - x533 * x68 + x546))
    )
    x548 = x92 * (x489 * x80 - x517 - x519)
    x549 = x92 * (2 * x19 * x20 * x24 * x29 * x38 * x489 - x512 - x515)
    x550 = x3 * x520 - x510 * x68 + x548 + x67 * (x3 * x516 - x503 * x68 + x549)
    x551 = x92 * (x46 * x489 - x492 - x527)
    x552 = x3 * x526
    x553 = -x110 * x495 + x489 * x60
    x554 = x553 * x68
    x555 = x3 * x530
    x556 = -x108 * x495 + x489 * x57
    x557 = x556 * x68
    x558 = x555 - x557
    x559 = x3 * x535
    x560 = -x109 * x495 + x489 * x58
    x561 = x560 * x68
    x562 = x558 * x67 + x559 - x561
    x563 = x552 - x554 + x562 * x72
    x564 = x92 * (x36 * x489 - x507 - x536)
    x565 = x92 * (2 * x19 * x20 * x24 * x29 * x34 * x489 - x499 - x531)
    x566 = -x111 * x495 + x489 * x61
    x567 = (
        x25 * x547
        + x25 * (x25 * x550 + x547)
        + x3 * x540
        + x543
        - x68 * (x3 * x523 + x563 * x74 - x566 * x68)
        + x74
        * (
            x3 * x539
            + x551
            - x563 * x68
            + x72
            * (x3 * x538 - x562 * x68 + x564 + x67 * (x3 * x533 - x558 * x68 + x565))
        )
    )
    x568 = x15 * x160
    x569 = x163 * x489 - x568
    x570 = x15 * x165
    x571 = x156 * x489 - x570
    x572 = x3 * x571
    x573 = x15 * x170
    x574 = x157 * x489 - x573
    x575 = x574 * x62
    x576 = -x10 * x575 + x572
    x577 = x15 * x178
    x578 = x159 * x489 - x577
    x579 = x578 * x62
    x580 = -x10 * x579 + x3 * x569 + x576 * x67
    x581 = x26 * x520 + x580
    x582 = x15 * x185
    x583 = x187 * x489 - x582
    x584 = -x15 * x195 + x184 * x489
    x585 = x584 * x62
    x586 = x3 * x578
    x587 = x3 * x574
    x588 = -x15 * x196 + x169 * x489
    x589 = x588 * x62
    x590 = x10 * x589
    x591 = x587 - x590
    x592 = -x15 * x198 + x177 * x489
    x593 = x592 * x62
    x594 = x10 * x593
    x595 = x586 + x591 * x67 - x594
    x596 = -x10 * x585 + x3 * x583 + x595 * x72
    x597 = x25 * x581 + x26 * x511 + x596
    x598 = x212 * x23 + x597
    x599 = x92 * (x163 * x489 - x568 - x579)
    x600 = x92 * (x156 * x489 - x570 - x575)
    x601 = x3 * x580 - x595 * x68 + x599 + x67 * (x3 * x576 - x591 * x68 + x600)
    x602 = x26 * x550 + x601
    x603 = x92 * (x187 * x489 - x582 - x585)
    x604 = x92 * (x159 * x489 - x577 - x593)
    x605 = x92 * (x157 * x489 - x573 - x589)
    x606 = x3 * x588
    x607 = x191 * x489 - x217 * x495
    x608 = x607 * x68
    x609 = x606 - x608
    x610 = x3 * x592
    x611 = x193 * x489 - x221 * x495
    x612 = x611 * x68
    x613 = x609 * x67 + x610 - x612
    x614 = x194 * x489 - x226 * x495
    x615 = (
        x3 * x596
        + x603
        - x68 * (x3 * x584 + x613 * x72 - x614 * x68)
        + x72 * (x3 * x595 + x604 - x613 * x68 + x67 * (x3 * x591 + x605 - x609 * x68))
    )
    x616 = x25 * x602 + x26 * x547 + x615
    x617 = x500 * x67
    x618 = x498 * x67 - x617 * x68
    x619 = x508 * x67
    x620 = x506 * x67 + x618 * x67 - x619 * x68
    x621 = x27 * x520 + x620
    x622 = x529 * x67 - x532 * x67
    x623 = x534 * x67 - x537 * x67 + x622 * x67
    x624 = x525 * x67 - x528 * x67 + x623 * x72
    x625 = x25 * x621 + x27 * x511 + x624
    x626 = x229 * x23 + x625
    x627 = x92 * (x505 * x67 - x619 * x62)
    x628 = x92 * (x497 * x67 - x617 * x62)
    x629 = x3 * x620 - x623 * x68 + x627 + x67 * (x3 * x618 - x622 * x68 + x628)
    x630 = x27 * x550 + x629
    x631 = x527 * x67
    x632 = x92 * (x493 * x67 - x631)
    x633 = x536 * x67
    x634 = x92 * (x508 * x67 - x633)
    x635 = x531 * x67
    x636 = x92 * (x500 * x67 - x635)
    x637 = x555 * x67 - x557 * x67
    x638 = x559 * x67 - x561 * x67 + x637 * x67
    x639 = (
        x3 * x624
        + x632
        - x68 * (x552 * x67 - x554 * x67 + x638 * x72)
        + x72 * (x3 * x623 + x634 - x638 * x68 + x67 * (x3 * x622 + x636 - x637 * x68))
    )
    x640 = x25 * x630 + x27 * x547 + x639
    x641 = x15 * x233
    x642 = x235 * x489 - x641
    x643 = x15 * x237
    x644 = x230 * x489 - x643
    x645 = x3 * x644
    x646 = -x15 * x242 + x231 * x489
    x647 = x62 * x646
    x648 = x10 * x647
    x649 = x645 - x648
    x650 = -x15 * x248 + x232 * x489
    x651 = x62 * x650
    x652 = -x10 * x651 + x3 * x642 + x649 * x67
    x653 = x26 * x580 + x652
    x654 = x26 * x581 + x653
    x655 = x23 * x255 + x654
    x656 = x92 * (x235 * x489 - x641 - x651)
    x657 = x92 * (x230 * x489 - x643 - x647)
    x658 = x3 * x646
    x659 = x241 * x489 - x257 * x495
    x660 = x659 * x68
    x661 = x658 - x660
    x662 = x247 * x489 - x261 * x495
    x663 = (
        x26 * x601
        + x3 * x652
        + x656
        + x67 * (x3 * x649 + x657 - x661 * x68)
        - x68 * (x3 * x650 + x661 * x67 - x662 * x68)
    )
    x664 = x26 * x602 + x663
    x665 = x587 * x67 - x590 * x67
    x666 = x586 * x67 - x594 * x67 + x665 * x67
    x667 = x27 * x580 + x666
    x668 = x26 * x621 + x667
    x669 = x23 * x266 + x668
    x670 = x593 * x67
    x671 = x92 * (x578 * x67 - x670)
    x672 = x589 * x67
    x673 = x92 * (x574 * x67 - x672)
    x674 = x606 * x67 - x608 * x67
    x675 = (
        x3 * x666
        + x67 * (x3 * x665 + x673 - x674 * x68)
        + x671
        - x68 * (x610 * x67 - x612 * x67 + x67 * x674)
    )
    x676 = x27 * x601 + x675
    x677 = x26 * x630 + x676
    x678 = x23 * x28
    x679 = x66 ** (-2.0)
    x680 = 2 * x679
    x681 = x529 * x680 - x532 * x680
    x682 = x534 * x680 - x537 * x680 + x67 * x681
    x683 = x27 * x620 + x682
    x684 = x27 * x621 + x683
    x685 = x141 * x678 + x684
    x686 = x92 * (2 * x508 * x679 - x536 * x680)
    x687 = x92 * (2 * x500 * x679 - x531 * x680)
    x688 = x555 * x680 - x557 * x680
    x689 = (
        x27 * x629
        + x3 * x682
        + x67 * (x3 * x681 - x68 * x688 + x687)
        - x68 * (x559 * x680 - x561 * x680 + x67 * x688)
        + x686
    )
    x690 = x27 * x630 + x689
    x691 = x15 * x270
    x692 = x161 * x489 - x691
    x693 = x571 * x62
    x694 = -x10 * x693 + x3 * x692
    x695 = x25 * x580 + x25 * (x25 * x694 + x580) + x596
    x696 = x23 * x279 + x695
    x697 = x92 * (x161 * x489 - x691 - x693)
    x698 = x3 * x694 - x576 * x68 + x697
    x699 = x25 * x601 + x25 * (x25 * x698 + x601) + x615
    x700 = x15 * x283
    x701 = x234 * x489 - x700
    x702 = x62 * x644
    x703 = -x10 * x702 + x3 * x701
    x704 = x26 * x694 + x703
    x705 = x25 * x704 + x653
    x706 = x23 * x293 + x705
    x707 = x92 * (x234 * x489 - x700 - x702)
    x708 = x3 * x703 - x649 * x68 + x707
    x709 = x26 * x698 + x708
    x710 = x25 * x709 + x663
    x711 = x574 * x67
    x712 = x572 * x67 - x68 * x711
    x713 = x27 * x694 + x712
    x714 = x25 * x713 + x667
    x715 = x23 * x298 + x714
    x716 = x92 * (x571 * x67 - x62 * x711)
    x717 = x3 * x712 - x665 * x68 + x716
    x718 = x27 * x698 + x717
    x719 = x25 * x718 + x676
    x720 = x15 * x301
    x721 = x299 * x489 - x720
    x722 = -x15 * x304 + x300 * x489
    x723 = x62 * x722
    x724 = -x10 * x723 + x3 * x721
    x725 = x26 * x703 + x26 * x704 + x724
    x726 = x23 * x313 + x725
    x727 = x92 * (x299 * x489 - x720 - x723)
    x728 = x303 * x489 - x311 * x495
    x729 = x26 * x708 + x26 * x709 + x3 * x724 - x68 * (x3 * x722 - x68 * x728) + x727
    x730 = x645 * x67 - x648 * x67
    x731 = x26 * x713 + x27 * x703 + x730
    x732 = x23 * x315 + x731
    x733 = x647 * x67
    x734 = x92 * (x644 * x67 - x733)
    x735 = x3 * x730 - x68 * (x658 * x67 - x660 * x67) + x734
    x736 = x26 * x718 + x27 * x708 + x735
    x737 = x587 * x680 - x590 * x680
    x738 = x27 * x712 + x737
    x739 = x27 * x713 + x738
    x740 = x273 * x678 + x739
    x741 = x92 * (2 * x574 * x679 - x589 * x680)
    x742 = x27 * x717 + x3 * x737 - x68 * (x606 * x680 - x608 * x680) + x741
    x743 = x27 * x718 + x742
    x744 = x497 * x67
    x745 = x514 * x67 - x68 * x744
    x746 = x25 * x620 + x25 * (x25 * x745 + x620) + x624
    x747 = x92 * (x513 * x67 - x62 * x744)
    x748 = x3 * x745 - x618 * x68 + x747
    x749 = x21 * x746 + x25 * x629 + x25 * (x25 * x748 + x629) + x639
    x750 = x26 * x745 + x712
    x751 = x25 * x750 + x26 * x620 + x666
    x752 = x26 * x748 + x717
    x753 = x21 * x751 + x25 * x752 + x26 * x629 + x675
    x754 = x498 * x680 - x502 * x680
    x755 = x27 * x745 + x754
    x756 = x25 * x755 + x683
    x757 = x92 * (2 * x497 * x679 - x501 * x680)
    x758 = x3 * x754 - x68 * x681 + x757
    x759 = x27 * x748 + x758
    x760 = x21 * x756 + x25 * x759 + x689
    x761 = x26 * x712 + x26 * x750 + x730
    x762 = x21 * x761 + x26 * x717 + x26 * x752 + x735
    x763 = x26 * x755 + x738
    x764 = x21 * x763 + x26 * x759 + x742
    x765 = x66 ** (-3.0)
    x766 = 6 * x765
    x767 = x92 * (6 * x500 * x765 - x531 * x766)
    x768 = x529 * x766 - x532 * x766
    x769 = x27 * x754 + x27 * x755 + x768
    x770 = (
        x21 * x769
        + x27 * x758
        + x27 * x759
        + x3 * x768
        - x68 * (x555 * x766 - x557 * x766)
        + x767
    )
    x771 = x128 - x13 * x322 + x317 * x319
    x772 = -x13 * x351 + x317 * x321 + x95
    x773 = -x13 * x328 + x130 + x317 * x325
    x774 = -x13 * x353 + x317 * x327 + x98
    x775 = x129 - x13 * x334 + x317 * x331
    x776 = -x13 * x356 + x317 * x333 + x97
    x777 = (
        x3 * x771
        - x68 * x772
        + x72 * (x3 * x775 + x67 * (x3 * x773 - x68 * x774) - x68 * x776)
    )
    x778 = -x13 * x339 + x143 + x317 * x338
    x779 = -x13 * x343 + x145 + x317 * x342
    x780 = x3 * x779 + x67 * (x3 * x778 - x68 * x773) - x68 * x775
    x781 = x25 * x780
    x782 = -x13 * x349 + x317 * x347 + x94
    x783 = x115 + x317 * x350 - x323 * x372
    x784 = x117 + x317 * x352 - x323 * x373
    x785 = x116 + x317 * x355 - x323 * x375
    x786 = x105 + x317 * x348 - x323 * x380
    x787 = (
        x22 * x360
        + x25 * x777
        + x25 * (x777 + x781)
        + x3 * x782
        - x68 * x786
        + x74
        * (
            x3 * x772
            - x68 * x783
            + x72 * (x3 * x776 + x67 * (x3 * x774 - x68 * x784) - x68 * x785)
        )
    )
    x788 = x26 * x780
    x789 = -x13 * x385 + x166 + x317 * x383 + x67 * x773
    x790 = -x13 * x396 + x203 + x317 * x384 + x67 * x774
    x791 = -x13 * x389 + x164 + x317 * x387 + x67 * x775
    x792 = -x13 * x399 + x202 + x317 * x388 + x67 * x776
    x793 = x3 * x791 + x67 * (x3 * x789 - x68 * x790) - x68 * x792
    x794 = x788 + x793
    x795 = -x13 * x394 + x188 + x317 * x392 + x67 * x772
    x796 = x216 + x317 * x395 - x323 * x412 + x67 * x784
    x797 = x220 + x317 * x398 - x323 * x414 + x67 * x785
    x798 = x224 + x317 * x393 - x323 * x416 + x67 * x783
    x799 = (
        x3 * x795
        - x68 * x798
        + x72 * (x3 * x792 + x67 * (x3 * x790 - x68 * x796) - x68 * x797)
    )
    x800 = x22 * x402 + x25 * x794 + x26 * x777 + x799
    x801 = x22 * x419 + x27 * x777 + x27 * x781
    x802 = -x13 * x424 + x238 + x317 * x422 + x72 * x790
    x803 = x256 + x317 * x423 - x323 * x435 + x72 * x796
    x804 = -x13 * x428 + x236 + x317 * x426 + x72 * x792
    x805 = x260 + x317 * x427 - x323 * x437 + x72 * x797
    x806 = x26 * x793 + x3 * x804 + x67 * (x3 * x802 - x68 * x803) - x68 * x805
    x807 = x22 * x431 + x26 * x794 + x806
    x808 = x27 * x793
    x809 = x22 * x441 + x27 * x788 + x808
    x810 = x22 * x446 + x28 * x780
    x811 = -x13 * x450 + x271 + x317 * x449 + x67 * x778
    x812 = x3 * x811 - x68 * x789
    x813 = x25 * x812
    x814 = x22 * x453 + x25 * x793 + x25 * (x793 + x813) + x799
    x815 = x26 * x812
    x816 = -x13 * x461 + x284 + x317 * x460 + x72 * x789
    x817 = x3 * x816 - x68 * x802
    x818 = x815 + x817
    x819 = x22 * x464 + x25 * x818 + x806
    x820 = x22 * x471 + x27 * x813 + x808
    x821 = -x13 * x476 + x307 + x317 * x474 + x74 * x802
    x822 = x310 + x317 * x475 - x323 * x481 + x74 * x803
    x823 = x22 * x478 + x26 * x817 + x26 * x818 + x3 * x821 - x68 * x822
    x824 = x22 * x483 + x27 * x815 + x27 * x817
    x825 = x22 * x486 + x28 * x812
    x826 = -x13 * x494 + x317 * x491
    x827 = -x13 * x527 + x317 * x493
    x828 = x317 * x497
    x829 = x13 * x501
    x830 = x828 - x829
    x831 = x317 * x500
    x832 = x13 * x531
    x833 = x831 - x832
    x834 = -x13 * x509 + x317 * x505
    x835 = x317 * x508
    x836 = x13 * x536
    x837 = x835 - x836
    x838 = (
        x3 * x826
        - x68 * x827
        + x72 * (x3 * x834 + x67 * (x3 * x830 - x68 * x833) - x68 * x837)
    )
    x839 = -x13 * x515 + x317 * x513
    x840 = -x13 * x519 + x317 * x518
    x841 = x3 * x840 + x67 * (x3 * x839 - x68 * x830) - x68 * x834
    x842 = -x13 * x524 + x317 * x522
    x843 = x317 * x526
    x844 = x323 * x553
    x845 = x843 - x844
    x846 = x317 * x530
    x847 = x323 * x556
    x848 = x846 - x847
    x849 = x317 * x535
    x850 = x323 * x560
    x851 = x849 - x850
    x852 = x317 * x523 - x323 * x566
    x853 = (
        x25 * x838
        + x25 * (x25 * x841 + x838)
        + x3 * x842
        - x68 * x852
        + x74
        * (
            x3 * x827
            - x68 * x845
            + x72 * (x3 * x837 + x67 * (x3 * x833 - x68 * x848) - x68 * x851)
        )
    )
    x854 = x23 * x360 + x853
    x855 = -x13 * x575 + x317 * x571 + x67 * x830
    x856 = x317 * x574
    x857 = x13 * x589
    x858 = x67 * x833 + x856 - x857
    x859 = -x13 * x579 + x317 * x569 + x67 * x834
    x860 = -x13 * x593 + x317 * x578 + x67 * x837
    x861 = x3 * x859 + x67 * (x3 * x855 - x68 * x858) - x68 * x860
    x862 = x26 * x841 + x861
    x863 = -x13 * x585 + x317 * x583 + x67 * x827
    x864 = x317 * x588
    x865 = x323 * x607
    x866 = x67 * x848 + x864 - x865
    x867 = x317 * x592
    x868 = x323 * x611
    x869 = x67 * x851 + x867 - x868
    x870 = x317 * x584 - x323 * x614 + x67 * x845
    x871 = (
        x3 * x863
        - x68 * x870
        + x72 * (x3 * x860 + x67 * (x3 * x858 - x68 * x866) - x68 * x869)
    )
    x872 = x25 * x862 + x26 * x838 + x871
    x873 = x23 * x402 + x872
    x874 = x505 * x67
    x875 = x317 * x874 - x323 * x619
    x876 = -x13 * x633 + x317 * x619
    x877 = x317 * x744 - x323 * x617
    x878 = -x13 * x635 + x317 * x617
    x879 = x3 * x875 + x67 * (x3 * x877 - x68 * x878) - x68 * x876
    x880 = x27 * x841 + x879
    x881 = x493 * x67
    x882 = -x13 * x631 + x317 * x881
    x883 = x67 * x849 - x67 * x850
    x884 = x67 * x846 - x67 * x847
    x885 = x67 * x843 - x67 * x844
    x886 = (
        x3 * x882
        - x68 * x885
        + x72 * (x3 * x876 + x67 * (x3 * x878 - x68 * x884) - x68 * x883)
    )
    x887 = x25 * x880 + x27 * x838 + x886
    x888 = x23 * x419 + x887
    x889 = -x13 * x647 + x317 * x644 + x72 * x858
    x890 = x317 * x646
    x891 = x323 * x659
    x892 = x72 * x866 + x890 - x891
    x893 = -x13 * x651 + x317 * x642 + x72 * x860
    x894 = x317 * x650 - x323 * x662 + x72 * x869
    x895 = x26 * x861 + x3 * x893 + x67 * (x3 * x889 - x68 * x892) - x68 * x894
    x896 = x26 * x862 + x895
    x897 = x23 * x431 + x896
    x898 = -x13 * x672 + x317 * x711 + x67 * x878
    x899 = x67 * x864 - x67 * x865 + x67 * x884
    x900 = x578 * x67
    x901 = -x13 * x670 + x317 * x900 + x67 * x876
    x902 = x67 * x867 - x67 * x868 + x67 * x883
    x903 = x3 * x901 + x67 * (x3 * x898 - x68 * x899) - x68 * x902
    x904 = x27 * x861 + x903
    x905 = x26 * x880 + x904
    x906 = x23 * x441 + x905
    x907 = x680 * x831 - x680 * x832
    x908 = x680 * x846 - x680 * x847
    x909 = x680 * x835 - x680 * x836
    x910 = x680 * x849 - x680 * x850
    x911 = x27 * x879 + x3 * x909 + x67 * (x3 * x907 - x68 * x908) - x68 * x910
    x912 = x27 * x880 + x911
    x913 = x23 * x446 + x912
    x914 = -x13 * x693 + x317 * x692 + x67 * x839
    x915 = x3 * x914 - x68 * x855
    x916 = x25 * x861 + x25 * (x25 * x915 + x861) + x871
    x917 = x23 * x453 + x916
    x918 = -x13 * x702 + x317 * x701 + x72 * x855
    x919 = x3 * x918 - x68 * x889
    x920 = x26 * x915 + x919
    x921 = x25 * x920 + x895
    x922 = x23 * x464 + x921
    x923 = x571 * x67
    x924 = x317 * x923 - x323 * x711 + x67 * x877
    x925 = x3 * x924 - x68 * x898
    x926 = x27 * x915 + x925
    x927 = x25 * x926 + x904
    x928 = x23 * x471 + x927
    x929 = -x13 * x723 + x317 * x721 + x74 * x889
    x930 = x317 * x722 - x323 * x728 + x74 * x892
    x931 = x26 * x919 + x26 * x920 + x3 * x929 - x68 * x930
    x932 = x23 * x478 + x931
    x933 = x644 * x67
    x934 = -x13 * x733 + x317 * x933 + x72 * x898
    x935 = x67 * x890 - x67 * x891 + x72 * x899
    x936 = x3 * x934 - x68 * x935
    x937 = x26 * x926 + x27 * x919 + x936
    x938 = x23 * x483 + x937
    x939 = x67 * x907 + x680 * x856 - x680 * x857
    x940 = x67 * x908 + x680 * x864 - x680 * x865
    x941 = x27 * x925 + x3 * x939 - x68 * x940
    x942 = x27 * x926 + x941
    x943 = x23 * x486 + x942
    x944 = x513 * x67
    x945 = x317 * x944 - x323 * x744
    x946 = x3 * x945 - x68 * x877
    x947 = x25 * x879 + x25 * (x25 * x946 + x879) + x886
    x948 = x22 * x746 + x947
    x949 = x26 * x946 + x925
    x950 = x25 * x949 + x26 * x879 + x903
    x951 = x22 * x751 + x950
    x952 = x680 * x828 - x680 * x829
    x953 = x3 * x952 - x68 * x907
    x954 = x27 * x946 + x953
    x955 = x25 * x954 + x911
    x956 = x22 * x756 + x955
    x957 = x26 * x925 + x26 * x949 + x936
    x958 = x22 * x761 + x957
    x959 = x26 * x954 + x941
    x960 = x22 * x763 + x959
    x961 = x766 * x831 - x766 * x832
    x962 = x766 * x846 - x766 * x847
    x963 = x27 * x953 + x27 * x954 + x3 * x961 - x68 * x962
    x964 = x22 * x769 + x963
    x965 = x128 - x15 * x494 + x489 * x491
    x966 = -x15 * x527 + x489 * x493 + x95
    x967 = x489 * x497
    x968 = x15 * x501
    x969 = x130 + x967 - x968
    x970 = x489 * x500
    x971 = x15 * x531
    x972 = x970 - x971 + x98
    x973 = x129 - x15 * x509 + x489 * x505
    x974 = x489 * x508
    x975 = x15 * x536
    x976 = x97 + x974 - x975
    x977 = (
        x3 * x965
        - x68 * x966
        + x72 * (x3 * x973 + x67 * (x3 * x969 - x68 * x972) - x68 * x976)
    )
    x978 = x143 - x15 * x515 + x489 * x513
    x979 = x145 - x15 * x519 + x489 * x518
    x980 = x3 * x979 + x67 * (x3 * x978 - x68 * x969) - x68 * x973
    x981 = -x15 * x524 + x489 * x522 + x94
    x982 = x489 * x526
    x983 = x495 * x553
    x984 = x115 + x982 - x983
    x985 = x489 * x530
    x986 = x495 * x556
    x987 = x117 + x985 - x986
    x988 = x489 * x535
    x989 = x495 * x560
    x990 = x116 + x988 - x989
    x991 = x105 + x489 * x523 - x495 * x566
    x992 = (
        x23 * x541
        + x25 * x977
        + x25 * (x25 * x980 + x977)
        + x3 * x981
        - x68 * x991
        + x74
        * (
            x3 * x966
            - x68 * x984
            + x72 * (x3 * x976 + x67 * (x3 * x972 - x68 * x987) - x68 * x990)
        )
    )
    x993 = -x15 * x575 + x166 + x489 * x571
    x994 = x489 * x574
    x995 = x15 * x589
    x996 = x203 + x994 - x995
    x997 = -x15 * x579 + x164 + x489 * x569
    x998 = -x15 * x593 + x202 + x489 * x578
    x999 = x3 * x997 + x67 * (x3 * x993 - x68 * x996) - x68 * x998
    x1000 = x26 * x980 + x999
    x1001 = -x15 * x585 + x188 + x489 * x583
    x1002 = x489 * x588
    x1003 = x495 * x607
    x1004 = x1002 - x1003 + x216
    x1005 = x489 * x592
    x1006 = x495 * x611
    x1007 = x1005 - x1006 + x220
    x1008 = x224 + x489 * x584 - x495 * x614
    x1009 = (
        x1001 * x3
        - x1008 * x68
        + x72 * (-x1007 * x68 + x3 * x998 + x67 * (-x1004 * x68 + x3 * x996))
    )
    x1010 = x1000 * x25 + x1009 + x23 * x597 + x26 * x977
    x1011 = x489 * x744 - x495 * x617 + x67 * x969
    x1012 = -x15 * x635 + x489 * x617 + x67 * x972
    x1013 = x489 * x874 - x495 * x619 + x67 * x973
    x1014 = -x15 * x633 + x489 * x619 + x67 * x976
    x1015 = x1013 * x3 - x1014 * x68 + x67 * (x1011 * x3 - x1012 * x68)
    x1016 = x1015 + x27 * x980
    x1017 = -x15 * x631 + x489 * x881 + x67 * x966
    x1018 = x67 * x985 - x67 * x986 + x67 * x987
    x1019 = x67 * x988 - x67 * x989 + x67 * x990
    x1020 = x67 * x982 - x67 * x983 + x67 * x984
    x1021 = (
        x1017 * x3
        - x1020 * x68
        + x72 * (x1014 * x3 - x1019 * x68 + x67 * (x1012 * x3 - x1018 * x68))
    )
    x1022 = x1016 * x25 + x1021 + x23 * x625 + x27 * x977
    x1023 = -x15 * x647 + x238 + x489 * x644
    x1024 = x489 * x646
    x1025 = x495 * x659
    x1026 = x1024 - x1025 + x256
    x1027 = -x15 * x651 + x236 + x489 * x642
    x1028 = x260 + x489 * x650 - x495 * x662
    x1029 = x1027 * x3 - x1028 * x68 + x26 * x999 + x67 * (x1023 * x3 - x1026 * x68)
    x1030 = x1000 * x26 + x1029 + x23 * x654
    x1031 = -x15 * x672 + x489 * x711 + x67 * x996
    x1032 = x1002 * x67 - x1003 * x67 + x1004 * x67
    x1033 = -x15 * x670 + x489 * x900 + x67 * x998
    x1034 = x1005 * x67 - x1006 * x67 + x1007 * x67
    x1035 = x1033 * x3 - x1034 * x68 + x67 * (x1031 * x3 - x1032 * x68)
    x1036 = x1035 + x27 * x999
    x1037 = x1016 * x26 + x1036 + x23 * x668
    x1038 = x1012 * x72 + x680 * x970 - x680 * x971
    x1039 = x1018 * x72 + x680 * x985 - x680 * x986
    x1040 = x1014 * x72 + x680 * x974 - x680 * x975
    x1041 = x1019 * x72 + x680 * x988 - x680 * x989
    x1042 = x1015 * x27 + x1040 * x3 - x1041 * x68 + x67 * (x1038 * x3 - x1039 * x68)
    x1043 = x1016 * x27 + x1042 + x23 * x684
    x1044 = -x15 * x693 + x271 + x489 * x692
    x1045 = x1044 * x3 - x68 * x993
    x1046 = x1009 + x23 * x695 + x25 * x999 + x25 * (x1045 * x25 + x999)
    x1047 = -x15 * x702 + x284 + x489 * x701
    x1048 = -x1023 * x68 + x1047 * x3
    x1049 = x1045 * x26 + x1048
    x1050 = x1029 + x1049 * x25 + x23 * x705
    x1051 = x489 * x923 - x495 * x711 + x67 * x993
    x1052 = -x1031 * x68 + x1051 * x3
    x1053 = x1045 * x27 + x1052
    x1054 = x1036 + x1053 * x25 + x23 * x714
    x1055 = -x15 * x723 + x307 + x489 * x721
    x1056 = x310 + x489 * x722 - x495 * x728
    x1057 = x1048 * x26 + x1049 * x26 + x1055 * x3 - x1056 * x68 + x23 * x725
    x1058 = x1023 * x67 - x15 * x733 + x489 * x933
    x1059 = x1024 * x67 - x1025 * x67 + x1026 * x67
    x1060 = x1058 * x3 - x1059 * x68
    x1061 = x1048 * x27 + x1053 * x26 + x1060 + x23 * x731
    x1062 = x1031 * x72 + x680 * x994 - x680 * x995
    x1063 = x1002 * x680 - x1003 * x680 + x1032 * x72
    x1064 = x1052 * x27 + x1062 * x3 - x1063 * x68
    x1065 = x1053 * x27 + x1064 + x23 * x739
    x1066 = x23 * x746
    x1067 = x489 * x944 - x495 * x744 + x67 * x978
    x1068 = -x1011 * x68 + x1067 * x3
    x1069 = x1015 * x25 + x1021 + x25 * (x1015 + x1068 * x25)
    x1070 = x23 * x751
    x1071 = x1052 + x1068 * x26
    x1072 = x1015 * x26 + x1035 + x1071 * x25
    x1073 = x23 * x756
    x1074 = x1011 * x72 + x680 * x967 - x680 * x968
    x1075 = -x1038 * x68 + x1074 * x3
    x1076 = x1068 * x27 + x1075
    x1077 = x1042 + x1076 * x25
    x1078 = x23 * x761
    x1079 = x1052 * x26 + x1060 + x1071 * x26
    x1080 = x23 * x763
    x1081 = x1064 + x1076 * x26
    x1082 = x23 * x769
    x1083 = x1038 * x74 + x766 * x970 - x766 * x971
    x1084 = x1039 * x74 + x766 * x985 - x766 * x986
    x1085 = x1075 * x27 + x1076 * x27 + x1083 * x3 - x1084 * x68
    x1086 = x25 * x342
    x1087 = x25 * x319 + x25 * (x1086 + x319) + x347
    x1088 = x26 * x342
    x1089 = x1088 + x387
    x1090 = x1089 * x25 + x26 * x319 + x392
    x1091 = x1086 * x27 + x27 * x319
    x1092 = x26 * x387 + x426
    x1093 = x1089 * x26 + x1092
    x1094 = x27 * x387
    x1095 = x1088 * x27 + x1094
    x1096 = x25 * x449
    x1097 = x25 * x387 + x25 * (x1096 + x387) + x392
    x1098 = x26 * x449
    x1099 = x1098 + x460
    x1100 = x1092 + x1099 * x25
    x1101 = x1094 + x1096 * x27
    x1102 = x1099 * x26 + x26 * x460 + x474
    x1103 = x1098 * x27 + x27 * x460
    x1104 = x25 * x779
    x1105 = x25 * x771 + x25 * (x1104 + x771) + x782
    x1106 = x1087 * x22 + x1105
    x1107 = x26 * x779
    x1108 = x1107 + x791
    x1109 = x1108 * x25 + x26 * x771 + x795
    x1110 = x1090 * x22 + x1109
    x1111 = x1104 * x27 + x27 * x771
    x1112 = x1091 * x22 + x1111
    x1113 = x26 * x791 + x804
    x1114 = x1108 * x26 + x1113
    x1115 = x1093 * x22 + x1114
    x1116 = x27 * x791
    x1117 = x1107 * x27 + x1116
    x1118 = x1095 * x22 + x1117
    x1119 = x28 * x779
    x1120 = x1119 + x342 * x445
    x1121 = x25 * x811
    x1122 = x25 * x791 + x25 * (x1121 + x791) + x795
    x1123 = x1097 * x22 + x1122
    x1124 = x26 * x811
    x1125 = x1124 + x816
    x1126 = x1113 + x1125 * x25
    x1127 = x1100 * x22 + x1126
    x1128 = x1116 + x1121 * x27
    x1129 = x1101 * x22 + x1128
    x1130 = x1125 * x26 + x26 * x816 + x821
    x1131 = x1102 * x22 + x1130
    x1132 = x1124 * x27 + x27 * x816
    x1133 = x1103 * x22 + x1132
    x1134 = x28 * x811
    x1135 = x1134 + x445 * x449
    x1136 = x25 * x826 + x25 * (x25 * x840 + x826) + x842
    x1137 = x1087 * x23 + x1136
    x1138 = x26 * x840 + x859
    x1139 = x1138 * x25 + x26 * x826 + x863
    x1140 = x1090 * x23 + x1139
    x1141 = x27 * x840 + x875
    x1142 = x1141 * x25 + x27 * x826 + x882
    x1143 = x1091 * x23 + x1142
    x1144 = x26 * x859 + x893
    x1145 = x1138 * x26 + x1144
    x1146 = x1093 * x23 + x1145
    x1147 = x27 * x859 + x901
    x1148 = x1141 * x26 + x1147
    x1149 = x1095 * x23 + x1148
    x1150 = x27 * x875 + x909
    x1151 = x1141 * x27 + x1150
    x1152 = x1151 + x342 * x678
    x1153 = x25 * x859 + x25 * (x25 * x914 + x859) + x863
    x1154 = x1097 * x23 + x1153
    x1155 = x26 * x914 + x918
    x1156 = x1144 + x1155 * x25
    x1157 = x1100 * x23 + x1156
    x1158 = x27 * x914 + x924
    x1159 = x1147 + x1158 * x25
    x1160 = x1101 * x23 + x1159
    x1161 = x1155 * x26 + x26 * x918 + x929
    x1162 = x1102 * x23 + x1161
    x1163 = x1158 * x26 + x27 * x918 + x934
    x1164 = x1103 * x23 + x1163
    x1165 = x27 * x924 + x939
    x1166 = x1158 * x27 + x1165
    x1167 = x1166 + x449 * x678
    x1168 = x25 * x875 + x25 * (x25 * x945 + x875) + x882
    x1169 = x26 * x945 + x924
    x1170 = x1169 * x25 + x26 * x875 + x901
    x1171 = x27 * x945 + x952
    x1172 = x1150 + x1171 * x25
    x1173 = x1169 * x26 + x26 * x924 + x934
    x1174 = x1165 + x1171 * x26
    x1175 = x1171 * x27 + x27 * x952 + x961
    x1176 = x317 * x771 - x323 * x772 + 2 * x363
    x1177 = x317 * x779 - x323 * x775 + 2 * x367
    x1178 = x1177 * x25
    x1179 = x1177 * x26
    x1180 = (
        x317 * x791
        - x323 * x792
        + 2 * x405
        + x67 * (x317 * x775 - x323 * x776 + 2 * x364)
    )
    x1181 = x1179 + x1180
    x1182 = (
        x317 * x795
        - x323 * x798
        + 2 * x409
        + x67 * (x317 * x772 - x323 * x783 + 2 * x371)
    )
    x1183 = (
        x1180 * x26
        + x317 * x804
        - x323 * x805
        + 2 * x433
        + x72
        * (
            x317 * x792
            - x323 * x797
            + 2 * x410
            + x67 * (x317 * x776 - x323 * x785 + 2 * x378)
        )
    )
    x1184 = x1180 * x27
    x1185 = (
        x317 * x811
        - x323 * x789
        + 2 * x455
        + x67 * (x317 * x778 - x323 * x773 + 2 * x368)
    )
    x1186 = x1185 * x25
    x1187 = x1185 * x26
    x1188 = (
        x317 * x816
        - x323 * x802
        + 2 * x467
        + x72
        * (
            x317 * x789
            - x323 * x790
            + 2 * x406
            + x67 * (x317 * x773 - x323 * x774 + 2 * x365)
        )
    )
    x1189 = x1187 + x1188
    x1190 = x317 * x826 - x323 * x827 + x544
    x1191 = x317 * x840 - x323 * x834 + x548
    x1192 = x1190 * x25 + x25 * (x1190 + x1191 * x25) + x317 * x842 - x323 * x852 + x543
    x1193 = x317 * x859 - x323 * x860 + x599 + x67 * (x317 * x834 - x323 * x837 + x545)
    x1194 = x1191 * x26 + x1193
    x1195 = x317 * x863 - x323 * x870 + x603 + x67 * (x317 * x827 - x323 * x845 + x551)
    x1196 = x1190 * x26 + x1194 * x25 + x1195
    x1197 = x317 * x875 - x323 * x876 + x627
    x1198 = x1191 * x27 + x1197
    x1199 = x317 * x882 - x323 * x885 + x632
    x1200 = x1190 * x27 + x1198 * x25 + x1199
    x1201 = (
        x1193 * x26
        + x317 * x893
        - x323 * x894
        + x656
        + x72
        * (x317 * x860 - x323 * x869 + x604 + x67 * (x317 * x837 - x323 * x851 + x564))
    )
    x1202 = x1194 * x26 + x1201
    x1203 = x317 * x901 - x323 * x902 + x67 * (x317 * x876 - x323 * x883 + x634) + x671
    x1204 = x1193 * x27 + x1203
    x1205 = x1198 * x26 + x1204
    x1206 = x1197 * x27 + x317 * x909 - x323 * x910 + x686
    x1207 = x1198 * x27 + x1206
    x1208 = x317 * x914 - x323 * x855 + x67 * (x317 * x839 - x323 * x830 + x549) + x697
    x1209 = x1193 * x25 + x1195 + x25 * (x1193 + x1208 * x25)
    x1210 = (
        x317 * x918
        - x323 * x889
        + x707
        + x72
        * (x317 * x855 - x323 * x858 + x600 + x67 * (x317 * x830 - x323 * x833 + x546))
    )
    x1211 = x1208 * x26 + x1210
    x1212 = x1201 + x1211 * x25
    x1213 = x317 * x924 - x323 * x898 + x67 * (x317 * x877 - x323 * x878 + x628) + x716
    x1214 = x1208 * x27 + x1213
    x1215 = x1204 + x1214 * x25
    x1216 = (
        x1210 * x26
        + x1211 * x26
        + x317 * x929
        - x323 * x930
        + x727
        + x74
        * (
            x317 * x889
            - x323 * x892
            + x657
            + x72
            * (
                x317 * x858
                - x323 * x866
                + x605
                + x67 * (x317 * x833 - x323 * x848 + x565)
            )
        )
    )
    x1217 = (
        x317 * x934
        - x323 * x935
        + x72
        * (x317 * x898 - x323 * x899 + x67 * (x317 * x878 - x323 * x884 + x636) + x673)
        + x734
    )
    x1218 = x1210 * x27 + x1214 * x26 + x1217
    x1219 = (
        x1213 * x27
        + x317 * x939
        - x323 * x940
        + x67 * (x317 * x907 - x323 * x908 + x687)
        + x741
    )
    x1220 = x1214 * x27 + x1219
    x1221 = x317 * x945 - x323 * x877 + x747
    x1222 = x1168 * x22 + x1197 * x25 + x1199 + x25 * (x1197 + x1221 * x25)
    x1223 = x1213 + x1221 * x26
    x1224 = x1170 * x22 + x1197 * x26 + x1203 + x1223 * x25
    x1225 = x317 * x952 - x323 * x907 + x757
    x1226 = x1221 * x27 + x1225
    x1227 = x1172 * x22 + x1206 + x1226 * x25
    x1228 = x1173 * x22 + x1213 * x26 + x1217 + x1223 * x26
    x1229 = x1174 * x22 + x1219 + x1226 * x26
    x1230 = x1175 * x22 + x1225 * x27 + x1226 * x27 + x317 * x961 - x323 * x962 + x767
    x1231 = x317 * x965 - x323 * x966
    x1232 = x317 * x979 - x323 * x973
    x1233 = (
        x1136 * x23
        + x1231 * x25
        + x25 * (x1231 + x1232 * x25)
        + x317 * x981
        - x323 * x991
    )
    x1234 = x317 * x997 - x323 * x998 + x67 * (x317 * x973 - x323 * x976)
    x1235 = x1232 * x26 + x1234
    x1236 = x1001 * x317 - x1008 * x323 + x67 * (x317 * x966 - x323 * x984)
    x1237 = x1139 * x23 + x1231 * x26 + x1235 * x25 + x1236
    x1238 = x1013 * x317 - x1014 * x323
    x1239 = x1232 * x27 + x1238
    x1240 = x1017 * x317 - x1020 * x323
    x1241 = x1142 * x23 + x1231 * x27 + x1239 * x25 + x1240
    x1242 = (
        x1027 * x317
        - x1028 * x323
        + x1234 * x26
        + x72 * (-x1007 * x323 + x317 * x998 + x67 * (x317 * x976 - x323 * x990))
    )
    x1243 = x1145 * x23 + x1235 * x26 + x1242
    x1244 = x1033 * x317 - x1034 * x323 + x67 * (x1014 * x317 - x1019 * x323)
    x1245 = x1234 * x27 + x1244
    x1246 = x1148 * x23 + x1239 * x26 + x1245
    x1247 = x1040 * x317 - x1041 * x323 + x1238 * x27
    x1248 = x1151 * x23 + x1239 * x27 + x1247
    x1249 = x1044 * x317 - x323 * x993 + x67 * (x317 * x978 - x323 * x969)
    x1250 = x1153 * x23 + x1234 * x25 + x1236 + x25 * (x1234 + x1249 * x25)
    x1251 = (
        -x1023 * x323
        + x1047 * x317
        + x72 * (x317 * x993 - x323 * x996 + x67 * (x317 * x969 - x323 * x972))
    )
    x1252 = x1249 * x26 + x1251
    x1253 = x1156 * x23 + x1242 + x1252 * x25
    x1254 = -x1031 * x323 + x1051 * x317 + x67 * (x1011 * x317 - x1012 * x323)
    x1255 = x1249 * x27 + x1254
    x1256 = x1159 * x23 + x1245 + x1255 * x25
    x1257 = (
        x1055 * x317
        - x1056 * x323
        + x1161 * x23
        + x1251 * x26
        + x1252 * x26
        + x74
        * (
            x1023 * x317
            - x1026 * x323
            + x72 * (-x1004 * x323 + x317 * x996 + x67 * (x317 * x972 - x323 * x987))
        )
    )
    x1258 = (
        x1058 * x317
        - x1059 * x323
        + x72 * (x1031 * x317 - x1032 * x323 + x67 * (x1012 * x317 - x1018 * x323))
    )
    x1259 = x1163 * x23 + x1251 * x27 + x1255 * x26 + x1258
    x1260 = (
        x1062 * x317 - x1063 * x323 + x1254 * x27 + x67 * (x1038 * x317 - x1039 * x323)
    )
    x1261 = x1166 * x23 + x1255 * x27 + x1260
    x1262 = x1168 * x23
    x1263 = -x1011 * x323 + x1067 * x317
    x1264 = x1238 * x25 + x1240 + x25 * (x1238 + x1263 * x25)
    x1265 = x1170 * x23
    x1266 = x1254 + x1263 * x26
    x1267 = x1238 * x26 + x1244 + x1266 * x25
    x1268 = x1172 * x23
    x1269 = -x1038 * x323 + x1074 * x317
    x1270 = x1263 * x27 + x1269
    x1271 = x1247 + x1270 * x25
    x1272 = x1173 * x23
    x1273 = x1254 * x26 + x1258 + x1266 * x26
    x1274 = x1174 * x23
    x1275 = x1260 + x1270 * x26
    x1276 = x1175 * x23
    x1277 = x1083 * x317 - x1084 * x323 + x1269 * x27 + x1270 * x27
    x1278 = x25 * x491 + x25 * (x25 * x518 + x491) + x522
    x1279 = x26 * x518 + x569
    x1280 = x1279 * x25 + x26 * x491 + x583
    x1281 = x27 * x518 + x874
    x1282 = x1281 * x25 + x27 * x491 + x881
    x1283 = x26 * x569 + x642
    x1284 = x1279 * x26 + x1283
    x1285 = x27 * x569 + x900
    x1286 = x1281 * x26 + x1285
    x1287 = x27 * x874 + x508 * x680
    x1288 = x1281 * x27 + x1287
    x1289 = x25 * x569 + x25 * (x25 * x692 + x569) + x583
    x1290 = x26 * x692 + x701
    x1291 = x1283 + x1290 * x25
    x1292 = x27 * x692 + x923
    x1293 = x1285 + x1292 * x25
    x1294 = x1290 * x26 + x26 * x701 + x721
    x1295 = x1292 * x26 + x27 * x701 + x933
    x1296 = x27 * x923 + x574 * x680
    x1297 = x1292 * x27 + x1296
    x1298 = x25 * x874 + x25 * (x25 * x944 + x874) + x881
    x1299 = x26 * x944 + x923
    x1300 = x1299 * x25 + x26 * x874 + x900
    x1301 = x497 * x680
    x1302 = x1301 + x27 * x944
    x1303 = x1287 + x1302 * x25
    x1304 = x1299 * x26 + x26 * x923 + x933
    x1305 = x1296 + x1302 * x26
    x1306 = x1301 * x27 + x1302 * x27 + x500 * x766
    x1307 = x1136 + x1278 * x22
    x1308 = x1139 + x1280 * x22
    x1309 = x1142 + x1282 * x22
    x1310 = x1145 + x1284 * x22
    x1311 = x1148 + x1286 * x22
    x1312 = x1151 + x1288 * x22
    x1313 = x1153 + x1289 * x22
    x1314 = x1156 + x1291 * x22
    x1315 = x1159 + x1293 * x22
    x1316 = x1161 + x1294 * x22
    x1317 = x1163 + x1295 * x22
    x1318 = x1166 + x1297 * x22
    x1319 = x1168 + x1298 * x22
    x1320 = x1170 + x1300 * x22
    x1321 = x1172 + x1303 * x22
    x1322 = x1173 + x1304 * x22
    x1323 = x1174 + x1305 * x22
    x1324 = x1175 + x1306 * x22
    x1325 = x25 * x965 + x25 * (x25 * x979 + x965) + x981
    x1326 = x1278 * x23 + x1325
    x1327 = x26 * x979 + x997
    x1328 = x1001 + x1327 * x25 + x26 * x965
    x1329 = x1280 * x23 + x1328
    x1330 = x1013 + x27 * x979
    x1331 = x1017 + x1330 * x25 + x27 * x965
    x1332 = x1282 * x23 + x1331
    x1333 = x1027 + x26 * x997
    x1334 = x1327 * x26 + x1333
    x1335 = x1284 * x23 + x1334
    x1336 = x1033 + x27 * x997
    x1337 = x1330 * x26 + x1336
    x1338 = x1286 * x23 + x1337
    x1339 = x1013 * x27 + x1040
    x1340 = x1330 * x27 + x1339
    x1341 = x1288 * x23 + x1340
    x1342 = x1001 + x25 * x997 + x25 * (x1044 * x25 + x997)
    x1343 = x1289 * x23 + x1342
    x1344 = x1044 * x26 + x1047
    x1345 = x1333 + x1344 * x25
    x1346 = x1291 * x23 + x1345
    x1347 = x1044 * x27 + x1051
    x1348 = x1336 + x1347 * x25
    x1349 = x1293 * x23 + x1348
    x1350 = x1047 * x26 + x1055 + x1344 * x26
    x1351 = x1294 * x23 + x1350
    x1352 = x1047 * x27 + x1058 + x1347 * x26
    x1353 = x1295 * x23 + x1352
    x1354 = x1051 * x27 + x1062
    x1355 = x1347 * x27 + x1354
    x1356 = x1297 * x23 + x1355
    x1357 = x1013 * x25 + x1017 + x25 * (x1013 + x1067 * x25)
    x1358 = x1298 * x23 + x1357
    x1359 = x1051 + x1067 * x26
    x1360 = x1013 * x26 + x1033 + x1359 * x25
    x1361 = x1300 * x23 + x1360
    x1362 = x1067 * x27 + x1074
    x1363 = x1339 + x1362 * x25
    x1364 = x1303 * x23 + x1363
    x1365 = x1051 * x26 + x1058 + x1359 * x26
    x1366 = x1304 * x23 + x1365
    x1367 = x1354 + x1362 * x26
    x1368 = x1305 * x23 + x1367
    x1369 = x1074 * x27 + x1083 + x1362 * x27
    x1370 = x1306 * x23 + x1369
    x1371 = x489 * x965 - x495 * x966 + 2 * x544
    x1372 = x489 * x979 - x495 * x973 + 2 * x548
    x1373 = x489 * x997 - x495 * x998 + 2 * x599
    x1374 = x1372 * x26 + x1373
    x1375 = x1001 * x489 - x1008 * x495 + 2 * x603
    x1376 = (
        x1013 * x489
        - x1014 * x495
        + 2 * x627
        + x67 * (x489 * x973 - x495 * x976 + 2 * x545)
    )
    x1377 = x1372 * x27 + x1376
    x1378 = (
        x1017 * x489
        - x1020 * x495
        + 2 * x632
        + x67 * (x489 * x966 - x495 * x984 + 2 * x551)
    )
    x1379 = x1027 * x489 - x1028 * x495 + x1373 * x26 + 2 * x656
    x1380 = (
        x1033 * x489
        - x1034 * x495
        + x67 * (-x1007 * x495 + x489 * x998 + 2 * x604)
        + 2 * x671
    )
    x1381 = x1373 * x27 + x1380
    x1382 = (
        x1040 * x489
        - x1041 * x495
        + x1376 * x27
        + 2 * x686
        + x72
        * (
            x1014 * x489
            - x1019 * x495
            + 2 * x634
            + x67 * (x489 * x976 - x495 * x990 + 2 * x564)
        )
    )
    x1383 = x1044 * x489 - x495 * x993 + 2 * x697
    x1384 = -x1023 * x495 + x1047 * x489 + 2 * x707
    x1385 = x1383 * x26 + x1384
    x1386 = (
        -x1031 * x495
        + x1051 * x489
        + x67 * (x489 * x993 - x495 * x996 + 2 * x600)
        + 2 * x716
    )
    x1387 = x1383 * x27 + x1386
    x1388 = (
        x1058 * x489
        - x1059 * x495
        + x67 * (x1023 * x489 - x1026 * x495 + 2 * x657)
        + 2 * x734
    )
    x1389 = (
        x1062 * x489
        - x1063 * x495
        + x1386 * x27
        + x72
        * (
            x1031 * x489
            - x1032 * x495
            + x67 * (-x1004 * x495 + x489 * x996 + 2 * x605)
            + 2 * x673
        )
        + 2 * x741
    )
    x1390 = (
        -x1011 * x495
        + x1067 * x489
        + x67 * (x489 * x978 - x495 * x969 + 2 * x549)
        + 2 * x747
    )
    x1391 = x1386 + x1390 * x26
    x1392 = (
        -x1038 * x495
        + x1074 * x489
        + x72
        * (
            x1011 * x489
            - x1012 * x495
            + 2 * x628
            + x67 * (x489 * x969 - x495 * x972 + 2 * x546)
        )
        + 2 * x757
    )
    x1393 = x1390 * x27 + x1392

    # 324 item(s)
    S = numpy.array(
        [
            x104 * x3
            + x136 * x25
            + x150 * x21
            + x21 * (x150 + x152 * x21)
            + x25 * (x136 + x148)
            - x68
            * (x105 + x120 * x74 + x3 * x75 - x68 * (-x111 * x68 + x114 * x74 + x3 * x61))
            + x74
            * (
                x103 * x3
                - x120 * x68
                + x72
                * (
                    x102 * x3
                    - x119 * x68
                    + x67
                    * (
                        x100 * x3
                        - x118 * x68
                        + x93 * (2 * x19 * x20 * x24 * x29 * x3 * x34 - x86 - x99)
                    )
                    + x93 * (-x101 + x89)
                )
                + x93 * (x90 - x96)
            )
            + x93 * (-x76 + x91),
            x136 * x26 + x209 * x21 + x21 * (x209 + x21 * x212) + x215 * x25 + x227,
            x136 * x27 + x148 * x27 + x21 * x228 + x21 * (x21 * x229 + x228),
            x21 * x253 + x21 * (x21 * x255 + x253) + x215 * x26 + x262,
            x21 * x264 + x21 * (x21 * x266 + x264) + x213 * x27 + x267,
            x147 * x28 + x21 * x268 + x21 * (x141 * x269 + x268),
            x21 * x277
            + x21 * (x21 * x279 + x277)
            + x214 * x25
            + x227
            + x25 * (x214 + x281),
            x21 * x290 + x21 * (x21 * x293 + x290) + x25 * x296 + x262,
            x21 * x297 + x21 * (x21 * x298 + x297) + x267 + x27 * x281,
            x21 * x312
            + x21 * (x21 * x313 + x312)
            + x26 * x295
            + x26 * x296
            + x3 * x309
            - x68 * (x3 * x305 + x310 - x68 * (x3 * x303 - x311 * x68))
            + x93 * (x299 * x3 - x302 - x306),
            x21 * x314 + x21 * (x21 * x315 + x314) + x27 * x294 + x27 * x295,
            x21 * x316 + x21 * (x269 * x273 + x316) + x28 * x280,
            0,
            0,
            0,
            0,
            0,
            0,
            x150 * x22 + x21 * x361 + x381,
            x209 * x22 + x21 * x403 + x418,
            x21 * x420 + x22 * x228 + x421,
            x21 * x432 + x22 * x253 + x439,
            x21 * x442 + x22 * x264 + x444,
            x21 * x447 + x22 * x268 + x448,
            x21 * x454 + x22 * x277 + x458,
            x21 * x465 + x22 * x290 + x470,
            x21 * x472 + x22 * x297 + x473,
            x21 * x479 + x22 * x312 + x482,
            x21 * x484 + x22 * x314 + x485,
            x21 * x487 + x22 * x316 + x488,
            0,
            0,
            0,
            0,
            0,
            0,
            x150 * x23 + x21 * x542 + x567,
            x209 * x23 + x21 * x598 + x616,
            x21 * x626 + x228 * x23 + x640,
            x21 * x655 + x23 * x253 + x664,
            x21 * x669 + x23 * x264 + x677,
            x21 * x685 + x23 * x268 + x690,
            x21 * x696 + x23 * x277 + x699,
            x21 * x706 + x23 * x290 + x710,
            x21 * x715 + x23 * x297 + x719,
            x21 * x726 + x23 * x312 + x729,
            x21 * x732 + x23 * x314 + x736,
            x21 * x740 + x23 * x316 + x743,
            x749,
            x753,
            x760,
            x762,
            x764,
            x770,
            x22 * x361 + x787,
            x22 * x403 + x800,
            x22 * x420 + x801,
            x22 * x432 + x807,
            x22 * x442 + x809,
            x22 * x447 + x810,
            x22 * x454 + x814,
            x22 * x465 + x819,
            x22 * x472 + x820,
            x22 * x479 + x823,
            x22 * x484 + x824,
            x22 * x487 + x825,
            0,
            0,
            0,
            0,
            0,
            0,
            x22 * x542 + x854,
            x22 * x598 + x873,
            x22 * x626 + x888,
            x22 * x655 + x897,
            x22 * x669 + x906,
            x22 * x685 + x913,
            x22 * x696 + x917,
            x22 * x706 + x922,
            x22 * x715 + x928,
            x22 * x726 + x932,
            x22 * x732 + x938,
            x22 * x740 + x943,
            x948,
            x951,
            x956,
            x958,
            x960,
            x964,
            x23 * x542 + x992,
            x1010 + x23 * x598,
            x1022 + x23 * x626,
            x1030 + x23 * x655,
            x1037 + x23 * x669,
            x1043 + x23 * x685,
            x1046 + x23 * x696,
            x1050 + x23 * x706,
            x1054 + x23 * x715,
            x1057 + x23 * x726,
            x1061 + x23 * x732,
            x1065 + x23 * x740,
            2 * x1066 + x1069,
            2 * x1070 + x1072,
            2 * x1073 + x1077,
            2 * x1078 + x1079,
            2 * x1080 + x1081,
            2 * x1082 + x1085,
            x21 * x360 + x21 * (x1087 * x21 + x360) + x381,
            x21 * x402 + x21 * (x1090 * x21 + x402) + x418,
            x21 * x419 + x21 * (x1091 * x21 + x419) + x421,
            x21 * x431 + x21 * (x1093 * x21 + x431) + x439,
            x21 * x441 + x21 * (x1095 * x21 + x441) + x444,
            x21 * x446 + x21 * (x269 * x342 + x446) + x448,
            x21 * x453 + x21 * (x1097 * x21 + x453) + x458,
            x21 * x464 + x21 * (x1100 * x21 + x464) + x470,
            x21 * x471 + x21 * (x1101 * x21 + x471) + x473,
            x21 * x478 + x21 * (x1102 * x21 + x478) + x482,
            x21 * x483 + x21 * (x1103 * x21 + x483) + x485,
            x21 * x486 + x21 * (x269 * x449 + x486) + x488,
            0,
            0,
            0,
            0,
            0,
            0,
            x1106 * x21 + x787,
            x1110 * x21 + x800,
            x1112 * x21 + x801,
            x1115 * x21 + x807,
            x1118 * x21 + x809,
            x1120 * x21 + x810,
            x1123 * x21 + x814,
            x1127 * x21 + x819,
            x1129 * x21 + x820,
            x1131 * x21 + x823,
            x1133 * x21 + x824,
            x1135 * x21 + x825,
            0,
            0,
            0,
            0,
            0,
            0,
            x1137 * x21 + x854,
            x1140 * x21 + x873,
            x1143 * x21 + x888,
            x1146 * x21 + x897,
            x1149 * x21 + x906,
            x1152 * x21 + x913,
            x1154 * x21 + x917,
            x1157 * x21 + x922,
            x1160 * x21 + x928,
            x1162 * x21 + x932,
            x1164 * x21 + x938,
            x1167 * x21 + x943,
            x1168 * x21 + x947,
            x1170 * x21 + x950,
            x1172 * x21 + x955,
            x1173 * x21 + x957,
            x1174 * x21 + x959,
            x1175 * x21 + x963,
            x1105 * x22
            + x1106 * x22
            + x1176 * x25
            + x25 * (x1176 + x1178)
            + x317 * x782
            - x323 * x786
            + 2 * x362,
            x1109 * x22 + x1110 * x22 + x1176 * x26 + x1181 * x25 + x1182,
            x1111 * x22 + x1112 * x22 + x1176 * x27 + x1178 * x27,
            x1114 * x22 + x1115 * x22 + x1181 * x26 + x1183,
            x1117 * x22 + x1118 * x22 + x1179 * x27 + x1184,
            x1119 * x22 + x1120 * x22 + x1177 * x28,
            x1122 * x22 + x1123 * x22 + x1180 * x25 + x1182 + x25 * (x1180 + x1186),
            x1126 * x22 + x1127 * x22 + x1183 + x1189 * x25,
            x1128 * x22 + x1129 * x22 + x1184 + x1186 * x27,
            x1130 * x22
            + x1131 * x22
            + x1188 * x26
            + x1189 * x26
            + x317 * x821
            - x323 * x822
            + 2 * x480
            + x74
            * (
                x317 * x802
                - x323 * x803
                + 2 * x434
                + x72
                * (
                    x317 * x790
                    - x323 * x796
                    + 2 * x411
                    + x67 * (x317 * x774 - x323 * x784 + 2 * x379)
                )
            ),
            x1132 * x22 + x1133 * x22 + x1187 * x27 + x1188 * x27,
            x1134 * x22 + x1135 * x22 + x1185 * x28,
            0,
            0,
            0,
            0,
            0,
            0,
            x1105 * x23 + x1137 * x22 + x1192,
            x1109 * x23 + x1140 * x22 + x1196,
            x1111 * x23 + x1143 * x22 + x1200,
            x1114 * x23 + x1146 * x22 + x1202,
            x1117 * x23 + x1149 * x22 + x1205,
            x1119 * x23 + x1152 * x22 + x1207,
            x1122 * x23 + x1154 * x22 + x1209,
            x1126 * x23 + x1157 * x22 + x1212,
            x1128 * x23 + x1160 * x22 + x1215,
            x1130 * x23 + x1162 * x22 + x1216,
            x1132 * x23 + x1164 * x22 + x1218,
            x1134 * x23 + x1167 * x22 + x1220,
            x1222,
            x1224,
            x1227,
            x1228,
            x1229,
            x1230,
            x1137 * x23 + x1233,
            x1140 * x23 + x1237,
            x1143 * x23 + x1241,
            x1146 * x23 + x1243,
            x1149 * x23 + x1246,
            x1152 * x23 + x1248,
            x1154 * x23 + x1250,
            x1157 * x23 + x1253,
            x1160 * x23 + x1256,
            x1162 * x23 + x1257,
            x1164 * x23 + x1259,
            x1167 * x23 + x1261,
            2 * x1262 + x1264,
            2 * x1265 + x1267,
            2 * x1268 + x1271,
            2 * x1272 + x1273,
            2 * x1274 + x1275,
            2 * x1276 + x1277,
            x21 * x541 + x21 * (x1278 * x21 + x541) + x567,
            x21 * x597 + x21 * (x1280 * x21 + x597) + x616,
            x21 * x625 + x21 * (x1282 * x21 + x625) + x640,
            x21 * x654 + x21 * (x1284 * x21 + x654) + x664,
            x21 * x668 + x21 * (x1286 * x21 + x668) + x677,
            x21 * x684 + x21 * (x1288 * x21 + x684) + x690,
            x21 * x695 + x21 * (x1289 * x21 + x695) + x699,
            x21 * x705 + x21 * (x1291 * x21 + x705) + x710,
            x21 * x714 + x21 * (x1293 * x21 + x714) + x719,
            x21 * x725 + x21 * (x1294 * x21 + x725) + x729,
            x21 * x731 + x21 * (x1295 * x21 + x731) + x736,
            x21 * x739 + x21 * (x1297 * x21 + x739) + x743,
            x21 * (x1298 * x21 + x746) + x749,
            x21 * (x1300 * x21 + x751) + x753,
            x21 * (x1303 * x21 + x756) + x760,
            x21 * (x1304 * x21 + x761) + x762,
            x21 * (x1305 * x21 + x763) + x764,
            x21 * (x1306 * x21 + x769) + x770,
            x1307 * x21 + x22 * x541 + x853,
            x1308 * x21 + x22 * x597 + x872,
            x1309 * x21 + x22 * x625 + x887,
            x1310 * x21 + x22 * x654 + x896,
            x1311 * x21 + x22 * x668 + x905,
            x1312 * x21 + x22 * x684 + x912,
            x1313 * x21 + x22 * x695 + x916,
            x1314 * x21 + x22 * x705 + x921,
            x1315 * x21 + x22 * x714 + x927,
            x1316 * x21 + x22 * x725 + x931,
            x1317 * x21 + x22 * x731 + x937,
            x1318 * x21 + x22 * x739 + x942,
            x1319 * x21 + x948,
            x1320 * x21 + x951,
            x1321 * x21 + x956,
            x1322 * x21 + x958,
            x1323 * x21 + x960,
            x1324 * x21 + x964,
            x1326 * x21 + x992,
            x1010 + x1329 * x21,
            x1022 + x1332 * x21,
            x1030 + x1335 * x21,
            x1037 + x1338 * x21,
            x1043 + x1341 * x21,
            x1046 + x1343 * x21,
            x1050 + x1346 * x21,
            x1054 + x1349 * x21,
            x1057 + x1351 * x21,
            x1061 + x1353 * x21,
            x1065 + x1356 * x21,
            x1066 + x1069 + x1358 * x21,
            x1070 + x1072 + x1361 * x21,
            x1073 + x1077 + x1364 * x21,
            x1078 + x1079 + x1366 * x21,
            x1080 + x1081 + x1368 * x21,
            x1082 + x1085 + x1370 * x21,
            x1136 * x22 + x1192 + x1307 * x22,
            x1139 * x22 + x1196 + x1308 * x22,
            x1142 * x22 + x1200 + x1309 * x22,
            x1145 * x22 + x1202 + x1310 * x22,
            x1148 * x22 + x1205 + x1311 * x22,
            x1151 * x22 + x1207 + x1312 * x22,
            x1153 * x22 + x1209 + x1313 * x22,
            x1156 * x22 + x1212 + x1314 * x22,
            x1159 * x22 + x1215 + x1315 * x22,
            x1161 * x22 + x1216 + x1316 * x22,
            x1163 * x22 + x1218 + x1317 * x22,
            x1166 * x22 + x1220 + x1318 * x22,
            x1222 + x1319 * x22,
            x1224 + x1320 * x22,
            x1227 + x1321 * x22,
            x1228 + x1322 * x22,
            x1229 + x1323 * x22,
            x1230 + x1324 * x22,
            x1233 + x1326 * x22,
            x1237 + x1329 * x22,
            x1241 + x1332 * x22,
            x1243 + x1335 * x22,
            x1246 + x1338 * x22,
            x1248 + x1341 * x22,
            x1250 + x1343 * x22,
            x1253 + x1346 * x22,
            x1256 + x1349 * x22,
            x1257 + x1351 * x22,
            x1259 + x1353 * x22,
            x1261 + x1356 * x22,
            x1262 + x1264 + x1358 * x22,
            x1265 + x1267 + x1361 * x22,
            x1268 + x1271 + x1364 * x22,
            x1272 + x1273 + x1366 * x22,
            x1274 + x1275 + x1368 * x22,
            x1276 + x1277 + x1370 * x22,
            x1325 * x23
            + x1326 * x23
            + x1371 * x25
            + x25 * (x1371 + x1372 * x25)
            + x489 * x981
            - x495 * x991
            + 2 * x543,
            x1328 * x23 + x1329 * x23 + x1371 * x26 + x1374 * x25 + x1375,
            x1331 * x23 + x1332 * x23 + x1371 * x27 + x1377 * x25 + x1378,
            x1334 * x23 + x1335 * x23 + x1374 * x26 + x1379,
            x1337 * x23 + x1338 * x23 + x1377 * x26 + x1381,
            x1340 * x23 + x1341 * x23 + x1377 * x27 + x1382,
            x1342 * x23 + x1343 * x23 + x1373 * x25 + x1375 + x25 * (x1373 + x1383 * x25),
            x1345 * x23 + x1346 * x23 + x1379 + x1385 * x25,
            x1348 * x23 + x1349 * x23 + x1381 + x1387 * x25,
            x1055 * x489
            - x1056 * x495
            + x1350 * x23
            + x1351 * x23
            + x1384 * x26
            + x1385 * x26
            + 2 * x727,
            x1352 * x23 + x1353 * x23 + x1384 * x27 + x1387 * x26 + x1388,
            x1355 * x23 + x1356 * x23 + x1387 * x27 + x1389,
            x1357 * x23 + x1358 * x23 + x1376 * x25 + x1378 + x25 * (x1376 + x1390 * x25),
            x1360 * x23 + x1361 * x23 + x1376 * x26 + x1380 + x1391 * x25,
            x1363 * x23 + x1364 * x23 + x1382 + x1393 * x25,
            x1365 * x23 + x1366 * x23 + x1386 * x26 + x1388 + x1391 * x26,
            x1367 * x23 + x1368 * x23 + x1389 + x1393 * x26,
            x1083 * x489
            - x1084 * x495
            + x1369 * x23
            + x1370 * x23
            + x1392 * x27
            + x1393 * x27
            + x74
            * (
                x1038 * x489
                - x1039 * x495
                + 2 * x687
                + x72
                * (
                    x1012 * x489
                    - x1018 * x495
                    + 2 * x636
                    + x67 * (x489 * x972 - x495 * x987 + 2 * x565)
                )
            )
            + 2 * x767,
        ]
    )
    return S


def eri_1220(a, A, b, B, c, C, d, D):
    """Cartesian [pd|ds] 2-electron electron repulsion integral.

    Generated code; DO NOT modify by hand!"""

    x0 = a + b
    x1 = x0 ** (-1.0)
    x2 = -x1 * (a * A[0] + b * B[0])
    x3 = -x2 - A[0]
    x4 = 2 * c + 2 * d
    x5 = x4 ** (-1.0)
    x6 = numpy.pi**2.5
    x7 = c + d
    x8 = x0 * x7
    x9 = x0 + x7
    x10 = (x8 + numpy.sqrt(x9)) ** (-1.0)
    x11 = A[0] - B[0]
    x12 = A[1] - B[1]
    x13 = A[2] - B[2]
    x14 = numpy.exp(-a * b * x1 * (x11**2 + x12**2 + x13**2))
    x15 = x7 ** (-1.0)
    x16 = numpy.exp(
        -c * d * x15 * ((C[0] - D[0]) ** 2 + (C[1] - D[1]) ** 2 + (C[2] - D[2]) ** 2)
    )
    x17 = x9 ** (-1.0)
    x18 = x15 * (c * C[0] + d * D[0])
    x19 = -x18 - x2
    x20 = x15 * (c * C[1] + d * D[1])
    x21 = -x1 * (a * A[1] + b * B[1])
    x22 = -x20 - x21
    x23 = -x1 * (a * A[2] + b * B[2])
    x24 = -x15 * (c * C[2] + d * D[2]) - x23
    x25 = x17 * x8 * (x19**2 + x22**2 + x24**2)
    x26 = boys(1, x25)
    x27 = x0 * x17
    x28 = boys(2, x25)
    x29 = 2 * x10 * x14 * x16 * x6
    x30 = x28 * x29
    x31 = x5 * (2 * x10 * x14 * x16 * x26 * x6 - x27 * x30)
    x32 = x18 - C[0]
    x33 = x26 * x29
    x34 = x19 * x27
    x35 = x30 * x34 + x32 * x33
    x36 = boys(3, x25)
    x37 = x29 * x36
    x38 = x30 * x32 + x34 * x37
    x39 = x31 + x32 * x35 + x34 * x38
    x40 = -2 * x10 * x14 * x16 * x28 * x6
    x41 = x5 * (-x27 * x37 - x40)
    x42 = x29 * boys(4, x25)
    x43 = x32 * x37 + x34 * x42
    x44 = x32 * x38 + x34 * x43 + x41
    x45 = x17 * x7
    x46 = x44 * x45
    x47 = 2 * a + 2 * b
    x48 = x4 + x47
    x49 = x48 ** (-1.0)
    x50 = x19 * x45
    x51 = x3 * x37 - x42 * x50
    x52 = x43 * x45
    x53 = -x19 * x52 + x3 * x38 + x49 * x51
    x54 = 2 * x49
    x55 = -x19 * x46 + x3 * x39 + x53 * x54
    x56 = x45 * x55
    x57 = boys(0, x25)
    x58 = x5 * (2 * x10 * x14 * x16 * x57 * x6 - x27 * x33)
    x59 = x29 * x57
    x60 = x32 * (x32 * x59 + x33 * x34) + x34 * x35 + x58
    x61 = x39 * x45
    x62 = x37 * x50
    x63 = x3 * x30 - x62
    x64 = x38 * x45
    x65 = -x19 * x64 + x3 * x35 + x49 * x63
    x66 = -x19 * x61 + x3 * x60 + x54 * x65
    x67 = x47 ** (-1.0)
    x68 = 2 * x67
    x69 = x67 * (x60 - x61)
    x70 = x67 * (x35 - x64)
    x71 = x67 * (-x37 * x45 - x40)
    x72 = x45 * x51
    x73 = -x19 * x72 + x3 * x63 + x71
    x74 = x45 * x53
    x75 = -x19 * x74 + x3 * x65 + x49 * x73 + x70
    x76 = -x19 * x56 + x3 * x66 + x54 * x75 + x69
    x77 = x67 * (x39 - x46)
    x78 = -2 * x10 * x14 * x16 * x36 * x6
    x79 = x5 * (-x27 * x42 - x78)
    x80 = x29 * boys(5, x25)
    x81 = x32 * x42 + x34 * x80
    x82 = x32 * x43 + x34 * x81 + x79
    x83 = x3 * x42 - x50 * x80
    x84 = x3 * x43 + x49 * x83 - x50 * x81
    x85 = x67 * (x38 - x52)
    x86 = x67 * (-x42 * x45 - x78)
    x87 = x3 * x51 - x50 * x83 + x86
    x88 = x3 * x53 + x49 * x87 - x50 * x84 + x85
    x89 = x20 - C[1]
    x90 = x22 * x27
    x91 = x30 * x89 + x37 * x90
    x92 = x37 * x89 + x42 * x90
    x93 = x45 * x92
    x94 = -x19 * x93 + x3 * x91
    x95 = x30 * x90 + x33 * x89
    x96 = x32 * x95 + x34 * x91
    x97 = x32 * x91 + x34 * x92
    x98 = x45 * x97
    x99 = -x19 * x98 + x3 * x96 + x49 * x94
    x100 = x45 * x99
    x101 = x45 * x91
    x102 = x101 * x19
    x103 = -x102 + x3 * x95
    x104 = x33 * x90 + x59 * x89
    x105 = x104 * x32 + x34 * x95
    x106 = x45 * x96
    x107 = x103 * x49 + x105 * x3 - x106 * x19
    x108 = x45 * x94
    x109 = x67 * (-x101 + x95)
    x110 = x103 * x3 - x108 * x19 + x109
    x111 = x67 * (x91 - x93)
    x112 = x42 * x89 + x80 * x90
    x113 = -x112 * x50 + x3 * x92
    x114 = x111 - x113 * x50 + x3 * x94
    x115 = x67 * (x105 - x106)
    x116 = -x100 * x19 + x107 * x3 + x110 * x49 + x115
    x117 = x67 * (x96 - x98)
    x118 = x112 * x34 + x32 * x92
    x119 = x104 * x89 + x58 + x90 * x95
    x120 = x31 + x89 * x95 + x90 * x91
    x121 = x120 * x45
    x122 = x121 * x19
    x123 = x41 + x89 * x91 + x90 * x92
    x124 = x123 * x45
    x125 = x120 * x3 - x124 * x19
    x126 = x125 * x45
    x127 = x67 * (x119 - x121)
    x128 = x119 * x3 - x122
    x129 = -x126 * x19 + x127 + x128 * x3
    x130 = x67 * (x120 - x124)
    x131 = x112 * x90 + x79 + x89 * x92
    x132 = -x21 - A[1]
    x133 = x22 * x61
    x134 = x132 * x60 - x133
    x135 = x132 * x39 - x22 * x46
    x136 = x135 * x45
    x137 = x22 * x45
    x138 = x137 * x37
    x139 = x132 * x30 - x138
    x140 = x132 * x37 - x137 * x42
    x141 = x140 * x45
    x142 = x139 * x3 - x141 * x19
    x143 = x22 * x64
    x144 = x132 * x35 - x143
    x145 = x132 * x38 - x22 * x52
    x146 = x145 * x45
    x147 = x142 * x49 + x144 * x3 - x146 * x19
    x148 = x134 * x3 - x136 * x19 + x147 * x54
    x149 = x12 * x66 + x148
    x150 = x67 * (x132 * x60 - x133 - x136)
    x151 = x67 * (x132 * x35 - x143 - x146)
    x152 = x67 * (2 * x10 * x132 * x14 * x16 * x28 * x6 - x138 - x141)
    x153 = x132 * x42 - x137 * x80
    x154 = x140 * x3 - x153 * x50
    x155 = x132 * x43 - x137 * x81
    x156 = x145 * x3 + x154 * x49 - x155 * x50
    x157 = x132 * x44 - x137 * x82
    x158 = (
        x148 * x3
        + x150
        - x50 * (x135 * x3 + x156 * x54 - x157 * x50)
        + x54 * (x147 * x3 + x151 - x156 * x50 + x49 * (x142 * x3 + x152 - x154 * x50))
    )
    x159 = -x101 * x22 + x132 * x95 + x139 * x49
    x160 = x132 * x91 + x140 * x49 - x22 * x93
    x161 = x160 * x45
    x162 = x159 * x3 - x161 * x19
    x163 = x105 * x132 - x106 * x22 + x144 * x49
    x164 = x132 * x96 + x145 * x49 - x22 * x98
    x165 = x164 * x45
    x166 = x162 * x49 + x163 * x3 - x165 * x19
    x167 = x107 * x12 + x166
    x168 = x67 * (x163 - x165)
    x169 = x67 * (x159 - x161)
    x170 = -x112 * x137 + x132 * x92 + x153 * x49
    x171 = x160 * x3 - x170 * x50
    x172 = -x118 * x137 + x132 * x97 + x155 * x49
    x173 = (
        x166 * x3
        + x168
        + x49 * (x162 * x3 + x169 - x171 * x50)
        - x50 * (x164 * x3 + x171 * x49 - x172 * x50)
    )
    x174 = x119 * x132 - x121 * x22 + x159 * x54
    x175 = x120 * x132 - x124 * x22 + x160 * x54
    x176 = x175 * x45
    x177 = x174 * x3 - x176 * x19
    x178 = x12 * x128 + x177
    x179 = x67 * (x174 - x176)
    x180 = x123 * x132 - x131 * x137 + x170 * x54
    x181 = x177 * x3 + x179 - x50 * (x175 * x3 - x180 * x50)
    x182 = -x23 - A[2]
    x183 = x24 * x61
    x184 = x182 * x60 - x183
    x185 = x182 * x39 - x24 * x46
    x186 = x185 * x45
    x187 = x24 * x45
    x188 = x187 * x37
    x189 = x182 * x30 - x188
    x190 = x189 * x3
    x191 = x182 * x37 - x187 * x42
    x192 = x191 * x45
    x193 = x19 * x192
    x194 = x190 - x193
    x195 = x24 * x64
    x196 = x182 * x35 - x195
    x197 = x196 * x3
    x198 = x182 * x38 - x24 * x52
    x199 = x198 * x45
    x200 = x19 * x199
    x201 = x194 * x49 + x197 - x200
    x202 = x184 * x3 - x186 * x19 + x201 * x54
    x203 = x13 * x66 + x202
    x204 = x67 * (x182 * x60 - x183 - x186)
    x205 = x67 * (x182 * x35 - x195 - x199)
    x206 = x67 * (2 * x10 * x14 * x16 * x182 * x28 * x6 - x188 - x192)
    x207 = x191 * x3
    x208 = x182 * x42 - x187 * x80
    x209 = x208 * x50
    x210 = x207 - x209
    x211 = x198 * x3
    x212 = x182 * x43 - x187 * x81
    x213 = x212 * x50
    x214 = x210 * x49 + x211 - x213
    x215 = x182 * x44 - x187 * x82
    x216 = (
        x202 * x3
        + x204
        - x50 * (x185 * x3 + x214 * x54 - x215 * x50)
        + x54 * (x201 * x3 + x205 - x214 * x50 + x49 * (x194 * x3 + x206 - x210 * x50))
    )
    x217 = x106 * x24
    x218 = x105 * x182 - x217
    x219 = x101 * x24
    x220 = x182 * x95 - x219
    x221 = x220 * x3
    x222 = x182 * x91 - x24 * x93
    x223 = x222 * x45
    x224 = x19 * x223
    x225 = x221 - x224
    x226 = x182 * x96 - x24 * x98
    x227 = x226 * x45
    x228 = -x19 * x227 + x218 * x3 + x225 * x49
    x229 = x107 * x13 + x228
    x230 = x67 * (x105 * x182 - x217 - x227)
    x231 = x67 * (x182 * x95 - x219 - x223)
    x232 = x222 * x3
    x233 = -x112 * x187 + x182 * x92
    x234 = x233 * x50
    x235 = x232 - x234
    x236 = -x118 * x187 + x182 * x97
    x237 = (
        x228 * x3
        + x230
        + x49 * (x225 * x3 + x231 - x235 * x50)
        - x50 * (x226 * x3 + x235 * x49 - x236 * x50)
    )
    x238 = x199 * x49
    x239 = x67 * (x196 * x49 - x238)
    x240 = x192 * x49
    x241 = x67 * (x189 * x49 - x240)
    x242 = x190 * x49 - x193 * x49
    x243 = x207 * x49 - x209 * x49
    x244 = x197 * x49 - x200 * x49 + x242 * x49
    x245 = (
        x11 * x244
        + x239
        + x244 * x3
        + x49 * (x241 + x242 * x3 - x243 * x50)
        - x50 * (x211 * x49 - x213 * x49 + x243 * x49)
    )
    x246 = x121 * x24
    x247 = x119 * x182 - x246
    x248 = x120 * x182 - x124 * x24
    x249 = x248 * x45
    x250 = -x19 * x249 + x247 * x3
    x251 = x128 * x13 + x250
    x252 = x67 * (x119 * x182 - x246 - x249)
    x253 = x123 * x182 - x131 * x187
    x254 = x250 * x3 + x252 - x50 * (x248 * x3 - x253 * x50)
    x255 = x223 * x49
    x256 = x67 * (x220 * x49 - x255)
    x257 = x221 * x49 - x224 * x49
    x258 = x11 * x257 + x256 + x257 * x3 - x50 * (x232 * x49 - x234 * x49)
    x259 = x48 ** (-2.0)
    x260 = 2 * x259
    x261 = x67 * (2 * x189 * x259 - x192 * x260)
    x262 = x190 * x260 - x193 * x260
    x263 = x11 * x262 + x261 + x262 * x3 - x50 * (x207 * x260 - x209 * x260)
    x264 = x132 * x134 - x136 * x22 + x69
    x265 = x132 * x139 - x141 * x22 + x71
    x266 = x132 * x140 - x137 * x153 + x86
    x267 = x132 * x144 - x146 * x22 + x70
    x268 = x132 * x145 - x137 * x155 + x85
    x269 = x132 * x135 - x137 * x157 + x77
    x270 = (
        x12 * x148
        + x264 * x3
        - x269 * x50
        + x54 * (x267 * x3 - x268 * x50 + x49 * (x265 * x3 - x266 * x50))
    )
    x271 = x109 + x132 * x159 - x161 * x22 + x265 * x49
    x272 = x111 + x132 * x160 - x137 * x170 + x266 * x49
    x273 = x115 + x132 * x163 - x165 * x22 + x267 * x49
    x274 = x117 + x132 * x164 - x137 * x172 + x268 * x49
    x275 = x12 * x166 + x273 * x3 - x274 * x50 + x49 * (x271 * x3 - x272 * x50)
    x276 = x127 + x132 * x174 - x176 * x22 + x271 * x54
    x277 = x130 + x132 * x175 - x137 * x180 + x272 * x54
    x278 = x12 * x177 + x276 * x3 - x277 * x50
    x279 = x132 * x184 - x186 * x22
    x280 = x132 * x189
    x281 = x192 * x22
    x282 = x280 - x281
    x283 = x132 * x191
    x284 = x137 * x208
    x285 = x283 - x284
    x286 = x132 * x196 - x199 * x22
    x287 = x132 * x198
    x288 = x137 * x212
    x289 = x287 - x288
    x290 = x132 * x185 - x137 * x215
    x291 = (
        x279 * x3
        - x290 * x50
        + x54 * (x286 * x3 - x289 * x50 + x49 * (x282 * x3 - x285 * x50))
    )
    x292 = x13 * x148 + x291
    x293 = x132 * x220 - x22 * x223 + x282 * x49
    x294 = x132 * x222
    x295 = x137 * x233
    x296 = x285 * x49 + x294 - x295
    x297 = x132 * x218 - x22 * x227 + x286 * x49
    x298 = x132 * x226 - x137 * x236 + x289 * x49
    x299 = x297 * x3 - x298 * x50 + x49 * (x293 * x3 - x296 * x50)
    x300 = x13 * x166 + x299
    x301 = x189 * x49
    x302 = x132 * x301 - x22 * x240
    x303 = x283 * x49 - x284 * x49
    x304 = x196 * x49
    x305 = x132 * x304 - x22 * x238
    x306 = x287 * x49 - x288 * x49
    x307 = x3 * x305 - x306 * x50 + x49 * (x3 * x302 - x303 * x50)
    x308 = x12 * x244 + x307
    x309 = x132 * x247 - x22 * x249 + x293 * x54
    x310 = x132 * x248 - x137 * x253 + x296 * x54
    x311 = x3 * x309 - x310 * x50
    x312 = x13 * x177 + x311
    x313 = x220 * x49
    x314 = x132 * x313 - x22 * x255 + x302 * x49
    x315 = x294 * x49 - x295 * x49 + x303 * x49
    x316 = x3 * x314 - x315 * x50
    x317 = x12 * x257 + x316
    x318 = x260 * x280 - x260 * x281
    x319 = x260 * x283 - x260 * x284
    x320 = x3 * x318 - x319 * x50
    x321 = x12 * x262 + x320
    x322 = x182 * x184 - x186 * x24 + x69
    x323 = x182 * x189
    x324 = x192 * x24
    x325 = x323 - x324 + x71
    x326 = x182 * x191
    x327 = x187 * x208
    x328 = x326 - x327 + x86
    x329 = x182 * x196 - x199 * x24 + x70
    x330 = x182 * x198
    x331 = x187 * x212
    x332 = x330 - x331 + x85
    x333 = x182 * x185 - x187 * x215 + x77
    x334 = (
        x13 * x202
        + x3 * x322
        - x333 * x50
        + x54 * (x3 * x329 - x332 * x50 + x49 * (x3 * x325 - x328 * x50))
    )
    x335 = x109 + x182 * x220 - x223 * x24
    x336 = x182 * x222
    x337 = x187 * x233
    x338 = x111 + x336 - x337
    x339 = x115 + x182 * x218 - x227 * x24
    x340 = x117 + x182 * x226 - x187 * x236
    x341 = x13 * x228 + x3 * x339 - x340 * x50 + x49 * (x3 * x335 - x338 * x50)
    x342 = x13 * x244
    x343 = x182 * x301 - x24 * x240 + x325 * x49
    x344 = x326 * x49 - x327 * x49 + x328 * x49
    x345 = x182 * x304 - x238 * x24 + x329 * x49
    x346 = x330 * x49 - x331 * x49 + x332 * x49
    x347 = x3 * x345 - x346 * x50 + x49 * (x3 * x343 - x344 * x50)
    x348 = x127 + x182 * x247 - x24 * x249
    x349 = x130 + x182 * x248 - x187 * x253
    x350 = x13 * x250 + x3 * x348 - x349 * x50
    x351 = x13 * x257
    x352 = x182 * x313 - x24 * x255 + x335 * x49
    x353 = x336 * x49 - x337 * x49 + x338 * x49
    x354 = x3 * x352 - x353 * x50
    x355 = x13 * x262
    x356 = x260 * x323 - x260 * x324 + x343 * x54
    x357 = x260 * x326 - x260 * x327 + x344 * x54
    x358 = x3 * x356 - x357 * x50
    x359 = x12 * x134 + x264
    x360 = x12 * x163 + x273
    x361 = x12 * x174 + x276
    x362 = x13 * x134 + x279
    x363 = x13 * x163 + x297
    x364 = x13 * x174 + x309
    x365 = x132 * x279 - x137 * x290 + x204
    x366 = x132 * x297 - x137 * x298 + x230 + x49 * (x132 * x286 - x137 * x289 + x205)
    x367 = x12 * x305 + x132 * x305 - x137 * x306 + x239
    x368 = (
        x132 * x309
        - x137 * x310
        + x252
        + x54
        * (x132 * x293 - x137 * x296 + x231 + x49 * (x132 * x282 - x137 * x285 + x206))
    )
    x369 = (
        x12 * x314
        + x132 * x314
        - x137 * x315
        + x256
        + x49 * (x132 * x302 - x137 * x303 + x241)
    )
    x370 = x12 * x318 + x132 * x318 - x137 * x319 + x261
    x371 = x13 * x279 + x132 * x322 - x137 * x333
    x372 = x13 * x297 + x132 * x339 - x137 * x340 + x49 * (x132 * x329 - x137 * x332)
    x373 = x13 * x305
    x374 = x132 * x345 - x137 * x346
    x375 = (
        x13 * x309
        + x132 * x348
        - x137 * x349
        + x54 * (x132 * x335 - x137 * x338 + x49 * (x132 * x325 - x137 * x328))
    )
    x376 = x13 * x314
    x377 = x132 * x352 - x137 * x353 + x49 * (x132 * x343 - x137 * x344)
    x378 = x13 * x318
    x379 = x132 * x356 - x137 * x357
    x380 = x189 * x260
    x381 = x12 * x184 + x279
    x382 = x12 * x218 + x297
    x383 = x12 * x304 + x305
    x384 = x12 * x247 + x309
    x385 = x12 * x313 + x314
    x386 = x12 * x380 + x318
    x387 = x13 * x184 + x322
    x388 = x13 * x218 + x339
    x389 = x13 * x304 + x345
    x390 = x13 * x247 + x348
    x391 = x13 * x313 + x352
    x392 = x13 * x380 + x356

    # 108 item(s)
    S = numpy.array(
        [
            x11 * x76
            + x11 * (x11 * x66 + x76)
            + x3 * x76
            - x50
            * (x3 * x55 - x50 * (x3 * x44 - x50 * x82 + x54 * x84) + x54 * x88 + x77)
            + x54
            * (
                x3 * x75
                + x49
                * (
                    x3 * x73
                    - x50 * x87
                    + x68 * (2 * x10 * x14 * x16 * x28 * x3 * x6 - x62 - x72)
                )
                - x50 * x88
                + x68 * (x65 - x74)
            )
            + x68 * (-x56 + x66),
            x11 * x116
            + x11 * (x107 * x11 + x116)
            + x116 * x3
            + x49 * (x110 * x3 - x114 * x50 + x68 * (-x102 - x108 + x3 * x95))
            - x50
            * (x114 * x49 + x117 + x3 * x99 - x50 * (x113 * x49 - x118 * x50 + x3 * x97))
            + x68 * (-x100 + x107),
            0,
            x11 * x129
            + x11 * (x11 * x128 + x129)
            + x129 * x3
            - x50 * (x125 * x3 + x130 - x50 * (x123 * x3 - x131 * x50))
            + x68 * (x119 * x3 - x122 - x126),
            0,
            0,
            x11 * x149 + x12 * x76 + x158,
            x11 * x167 + x116 * x12 + x173,
            0,
            x11 * x178 + x12 * x129 + x181,
            0,
            0,
            x11 * x203 + x13 * x76 + x216,
            x11 * x229 + x116 * x13 + x237,
            x245,
            x11 * x251 + x129 * x13 + x254,
            x258,
            x263,
            x12 * x149 + x270,
            x12 * x167 + x275,
            0,
            x12 * x178 + x278,
            0,
            0,
            x12 * x203 + x292,
            x12 * x229 + x300,
            x308,
            x12 * x251 + x312,
            x317,
            x321,
            x13 * x203 + x334,
            x13 * x229 + x341,
            2 * x342 + x347,
            x13 * x251 + x350,
            2 * x351 + x354,
            2 * x355 + x358,
            x11 * x148 + x11 * (x11 * x134 + x148) + x158,
            x11 * x166 + x11 * (x11 * x163 + x166) + x173,
            0,
            x11 * x177 + x11 * (x11 * x174 + x177) + x181,
            0,
            0,
            x11 * x359 + x270,
            x11 * x360 + x275,
            0,
            x11 * x361 + x278,
            0,
            0,
            x11 * x362 + x292,
            x11 * x363 + x300,
            x11 * x305 + x307,
            x11 * x364 + x312,
            x11 * x314 + x316,
            x11 * x318 + x320,
            x12 * x264 + x12 * x359 + x132 * x264 - x137 * x269 + 2 * x150,
            x12 * x273
            + x12 * x360
            + x132 * x273
            - x137 * x274
            + 2 * x168
            + x49 * (x132 * x267 - x137 * x268 + 2 * x151),
            0,
            x12 * x276
            + x12 * x361
            + x132 * x276
            - x137 * x277
            + 2 * x179
            + x54
            * (
                x132 * x271
                - x137 * x272
                + 2 * x169
                + x49 * (x132 * x265 - x137 * x266 + 2 * x152)
            ),
            0,
            0,
            x12 * x362 + x13 * x264 + x365,
            x12 * x363 + x13 * x273 + x366,
            x367,
            x12 * x364 + x13 * x276 + x368,
            x369,
            x370,
            x13 * x362 + x371,
            x13 * x363 + x372,
            2 * x373 + x374,
            x13 * x364 + x375,
            2 * x376 + x377,
            2 * x378 + x379,
            x11 * x202 + x11 * (x11 * x184 + x202) + x216,
            x11 * x228 + x11 * (x11 * x218 + x228) + x237,
            x11 * (x11 * x304 + x244) + x245,
            x11 * x250 + x11 * (x11 * x247 + x250) + x254,
            x11 * (x11 * x313 + x257) + x258,
            x11 * (x11 * x380 + x262) + x263,
            x11 * x381 + x12 * x202 + x291,
            x11 * x382 + x12 * x228 + x299,
            x11 * x383 + x308,
            x11 * x384 + x12 * x250 + x311,
            x11 * x385 + x317,
            x11 * x386 + x321,
            x11 * x387 + x334,
            x11 * x388 + x341,
            x11 * x389 + x342 + x347,
            x11 * x390 + x350,
            x11 * x391 + x351 + x354,
            x11 * x392 + x355 + x358,
            x12 * x279 + x12 * x381 + x365,
            x12 * x297 + x12 * x382 + x366,
            x12 * x383 + x367,
            x12 * x309 + x12 * x384 + x368,
            x12 * x385 + x369,
            x12 * x386 + x370,
            x12 * x387 + x371,
            x12 * x388 + x372,
            x12 * x389 + x373 + x374,
            x12 * x390 + x375,
            x12 * x391 + x376 + x377,
            x12 * x392 + x378 + x379,
            x13 * x322 + x13 * x387 + x182 * x322 - x187 * x333 + 2 * x204,
            x13 * x339 + x13 * x388 + x182 * x339 - x187 * x340 + 2 * x230,
            x13 * x345
            + x13 * x389
            + x182 * x345
            - x187 * x346
            + 2 * x239
            + x49 * (x182 * x329 - x187 * x332 + 2 * x205),
            x13 * x348 + x13 * x390 + x182 * x348 - x187 * x349 + 2 * x252,
            x13 * x352
            + x13 * x391
            + x182 * x352
            - x187 * x353
            + 2 * x256
            + x49 * (x182 * x335 - x187 * x338 + 2 * x231),
            x13 * x356
            + x13 * x392
            + x182 * x356
            - x187 * x357
            + 2 * x261
            + x54
            * (
                x182 * x343
                - x187 * x344
                + 2 * x241
                + x49 * (x182 * x325 - x187 * x328 + 2 * x206)
            ),
        ]
    )
    return S


def eri_1221(a, A, b, B, c, C, d, D):
    """Cartesian [pd|dp] 2-electron electron repulsion integral.

    Generated code; DO NOT modify by hand!"""

    x0 = a + b
    x1 = x0 ** (-1.0)
    x2 = -x1 * (a * A[0] + b * B[0])
    x3 = -x2 - A[0]
    x4 = c + d
    x5 = x4 ** (-1.0)
    x6 = x5 * (c * C[0] + d * D[0])
    x7 = x6 - C[0]
    x8 = x0 + x4
    x9 = x8 ** (-1.0)
    x10 = -x2 - x6
    x11 = x5 * (c * C[1] + d * D[1])
    x12 = -x1 * (a * A[1] + b * B[1])
    x13 = -x11 - x12
    x14 = -x1 * (a * A[2] + b * B[2])
    x15 = -x14 - x5 * (c * C[2] + d * D[2])
    x16 = x0 * x4
    x17 = x16 * x9 * (x10**2 + x13**2 + x15**2)
    x18 = boys(2, x17)
    x19 = numpy.pi**2.5
    x20 = (x16 + numpy.sqrt(x8)) ** (-1.0)
    x21 = A[0] - B[0]
    x22 = A[1] - B[1]
    x23 = A[2] - B[2]
    x24 = numpy.exp(-a * b * x1 * (x21**2 + x22**2 + x23**2))
    x25 = C[0] - D[0]
    x26 = C[1] - D[1]
    x27 = C[2] - D[2]
    x28 = numpy.exp(-c * d * x5 * (x25**2 + x26**2 + x27**2))
    x29 = 2 * x19 * x20 * x24 * x28
    x30 = x18 * x29
    x31 = x0 * x9
    x32 = x10 * x31
    x33 = boys(3, x17)
    x34 = x29 * x33
    x35 = x30 * x7 + x32 * x34
    x36 = x31 * x35
    x37 = boys(1, x17)
    x38 = x29 * x37
    x39 = x30 * x32 + x38 * x7
    x40 = 2 * c + 2 * d
    x41 = x40 ** (-1.0)
    x42 = 2 * x41
    x43 = x41 * (2 * x19 * x20 * x24 * x28 * x37 - x30 * x31)
    x44 = x10 * x36 + x39 * x7 + x43
    x45 = -2 * x18 * x19 * x20 * x24 * x28
    x46 = x41 * (-x31 * x34 - x45)
    x47 = boys(4, x17)
    x48 = x29 * x47
    x49 = x32 * x48 + x34 * x7
    x50 = x31 * x49
    x51 = x10 * x50 + x35 * x7 + x46
    x52 = x32 * x51 + x42 * (-x36 + x39) + x44 * x7
    x53 = -2 * x19 * x20 * x24 * x28 * x33
    x54 = x41 * (-x31 * x48 - x53)
    x55 = x29 * boys(5, x17)
    x56 = x32 * x55 + x48 * x7
    x57 = x31 * x56
    x58 = x10 * x57 + x49 * x7 + x54
    x59 = x32 * x58 + x42 * (x35 - x50) + x51 * x7
    x60 = x4 * x9
    x61 = x59 * x60
    x62 = x58 * x60
    x63 = 2 * a + 2 * b
    x64 = x40 + x63
    x65 = x64 ** (-1.0)
    x66 = x10 * x60
    x67 = x3 * x48 - x55 * x66
    x68 = x56 * x60
    x69 = -x10 * x68 + x3 * x49 + x65 * x67
    x70 = 2 * x65
    x71 = -x10 * x62 + x3 * x51 + x69 * x70
    x72 = 3 * x65
    x73 = -x10 * x61 + x3 * x52 + x71 * x72
    x74 = x60 * x73
    x75 = x31 * x39
    x76 = boys(0, x17)
    x77 = x29 * x76
    x78 = x32 * x38 + x7 * x77
    x79 = x41 * (2 * x19 * x20 * x24 * x28 * x76 - x31 * x38)
    x80 = x10 * x75 + x7 * x78 + x79
    x81 = x32 * x44 + x42 * (-x75 + x78) + x7 * x80
    x82 = x52 * x60
    x83 = x51 * x60
    x84 = x48 * x66
    x85 = x3 * x34 - x84
    x86 = x49 * x60
    x87 = -x10 * x86 + x3 * x35 + x65 * x85
    x88 = -x10 * x83 + x3 * x44 + x70 * x87
    x89 = -x10 * x82 + x3 * x81 + x72 * x88
    x90 = x63 ** (-1.0)
    x91 = 2 * x90
    x92 = x90 * (x81 - x82)
    x93 = x90 * (x44 - x83)
    x94 = x60 * x71
    x95 = x90 * (x35 - x86)
    x96 = x90 * (-x48 * x60 - x53)
    x97 = x60 * x67
    x98 = -x10 * x97 + x3 * x85 + x96
    x99 = x60 * x69
    x100 = -x10 * x99 + x3 * x87 + x65 * x98 + x95
    x101 = -x10 * x94 + x100 * x70 + x3 * x88 + x93
    x102 = -x10 * x74 + x101 * x72 + x3 * x89 + x92
    x103 = x90 * (x52 - x61)
    x104 = -2 * x19 * x20 * x24 * x28 * x47
    x105 = x41 * (-x104 - x31 * x55)
    x106 = x29 * boys(6, x17)
    x107 = x106 * x32 + x55 * x7
    x108 = x105 + x107 * x32 + x56 * x7
    x109 = x108 * x32 + x42 * (x49 - x57) + x58 * x7
    x110 = -x106 * x66 + x3 * x55
    x111 = -x107 * x66 + x110 * x65 + x3 * x56
    x112 = -x108 * x66 + x111 * x70 + x3 * x58
    x113 = x90 * (x51 - x62)
    x114 = x90 * (x49 - x68)
    x115 = x90 * (-x104 - x55 * x60)
    x116 = -x110 * x66 + x115 + x3 * x67
    x117 = -x111 * x66 + x114 + x116 * x65 + x3 * x69
    x118 = -x112 * x66 + x113 + x117 * x70 + x3 * x71
    x119 = x60 * x88
    x120 = x44 * x60
    x121 = x34 * x66
    x122 = -x121 + x3 * x30
    x123 = x35 * x60
    x124 = -x10 * x123 + x122 * x65 + x3 * x39
    x125 = -x10 * x120 + x124 * x70 + x3 * x80
    x126 = x90 * (-x120 + x80)
    x127 = x90 * (-x123 + x39)
    x128 = x90 * (-x34 * x60 - x45)
    x129 = x60 * x85
    x130 = -x10 * x129 + x122 * x3 + x128
    x131 = x60 * x87
    x132 = -x10 * x131 + x124 * x3 + x127 + x130 * x65
    x133 = -x10 * x119 + x125 * x3 + x126 + x132 * x70
    x134 = (
        -x101 * x66
        + x133 * x3
        + x70
        * (
            -x100 * x66
            + x132 * x3
            + x65
            * (
                x130 * x3
                - x66 * x98
                + x91 * (-x121 - x129 + 2 * x18 * x19 * x20 * x24 * x28 * x3)
            )
            + x91 * (x124 - x131)
        )
        + x91 * (-x119 + x125)
    )
    x135 = x102 + x133 * x25
    x136 = x125 * x25 + x89
    x137 = x11 - C[1]
    x138 = x13 * x31
    x139 = x137 * x30 + x138 * x34
    x140 = x139 * x31
    x141 = x137 * x38 + x138 * x30
    x142 = x41 * (-x140 + x141)
    x143 = x10 * x140 + x141 * x7
    x144 = x137 * x34 + x138 * x48
    x145 = x144 * x31
    x146 = x10 * x145 + x139 * x7
    x147 = x142 + x143 * x7 + x146 * x32
    x148 = x147 * x60
    x149 = x141 * x31
    x150 = x137 * x77 + x138 * x38
    x151 = x41 * (-x149 + x150)
    x152 = x10 * x149 + x150 * x7
    x153 = x143 * x32 + x151 + x152 * x7
    x154 = x90 * (-x148 + x153)
    x155 = x144 * x60
    x156 = x10 * x155
    x157 = x139 * x3 - x156
    x158 = x146 * x60
    x159 = -x10 * x158 + x143 * x3 + x157 * x65
    x160 = -x10 * x148 + x153 * x3 + x159 * x70
    x161 = x41 * (x139 - x145)
    x162 = x137 * x48 + x138 * x55
    x163 = x162 * x31
    x164 = x10 * x163 + x144 * x7
    x165 = x146 * x7 + x161 + x164 * x32
    x166 = x165 * x60
    x167 = x162 * x60
    x168 = -x10 * x167 + x144 * x3
    x169 = x164 * x60
    x170 = -x10 * x169 + x146 * x3 + x168 * x65
    x171 = -x10 * x166 + x147 * x3 + x170 * x70
    x172 = x171 * x60
    x173 = x90 * (x143 - x158)
    x174 = x90 * (x139 - x155)
    x175 = x168 * x60
    x176 = -x10 * x175 + x157 * x3 + x174
    x177 = x170 * x60
    x178 = -x10 * x177 + x159 * x3 + x173 + x176 * x65
    x179 = -x10 * x172 + x154 + x160 * x3 + x178 * x70
    x180 = x133 * x26 + x179
    x181 = x125 * x26 + x160
    x182 = x90 * (x144 - x167)
    x183 = x106 * x138 + x137 * x55
    x184 = x162 * x3 - x183 * x66
    x185 = x168 * x3 + x182 - x184 * x66
    x186 = x90 * (x146 - x169)
    x187 = x162 * x7 + x183 * x32
    x188 = x164 * x3 + x184 * x65 - x187 * x66
    x189 = x170 * x3 + x185 * x65 + x186 - x188 * x66
    x190 = x90 * (x147 - x166)
    x191 = x41 * (x144 - x163)
    x192 = x164 * x7 + x187 * x32 + x191
    x193 = (
        x179 * x3
        - x66
        * (x171 * x3 + x189 * x70 + x190 - x66 * (x165 * x3 + x188 * x70 - x192 * x66))
        + x70
        * (
            x178 * x3
            - x189 * x66
            + x65 * (x176 * x3 - x185 * x66 + x91 * (x139 * x3 - x156 - x175))
            + x91 * (x159 - x177)
        )
        + x91 * (x160 - x172)
    )
    x194 = x133 * x27
    x195 = x21 * x27
    x196 = x143 * x60
    x197 = x90 * (x152 - x196)
    x198 = x139 * x60
    x199 = x90 * (x141 - x198)
    x200 = x10 * x198
    x201 = x141 * x3 - x200
    x202 = x157 * x60
    x203 = -x10 * x202 + x199 + x201 * x3
    x204 = -x10 * x196 + x152 * x3 + x201 * x65
    x205 = x159 * x60
    x206 = -x10 * x205 + x197 + x203 * x65 + x204 * x3
    x207 = x179 + x206 * x25
    x208 = x160 + x204 * x25
    x209 = (
        -x178 * x66
        + x206 * x3
        + x65 * (-x176 * x66 + x203 * x3 + x91 * (x141 * x3 - x200 - x202))
        + x91 * (x204 - x205)
    )
    x210 = x13 * x140 + x137 * x141 + x43
    x211 = x13 * x145 + x137 * x139 + x46
    x212 = x210 * x7 + x211 * x32
    x213 = x212 * x60
    x214 = x13 * x149 + x137 * x150 + x79
    x215 = x210 * x32 + x214 * x7
    x216 = x90 * (-x213 + x215)
    x217 = x211 * x60
    x218 = x90 * (x210 - x217)
    x219 = x10 * x217
    x220 = x210 * x3 - x219
    x221 = x13 * x163 + x137 * x144 + x54
    x222 = x221 * x60
    x223 = -x10 * x222 + x211 * x3
    x224 = x223 * x60
    x225 = -x10 * x224 + x218 + x220 * x3
    x226 = -x10 * x213 + x215 * x3 + x220 * x65
    x227 = x211 * x7 + x221 * x32
    x228 = x227 * x60
    x229 = -x10 * x228 + x212 * x3 + x223 * x65
    x230 = x229 * x60
    x231 = -x10 * x230 + x216 + x225 * x65 + x226 * x3
    x232 = x206 * x26 + x231
    x233 = x204 * x26 + x226
    x234 = x90 * (x211 - x222)
    x235 = x105 + x137 * x162 + x138 * x183
    x236 = x221 * x3 - x235 * x66
    x237 = x223 * x3 + x234 - x236 * x66
    x238 = x90 * (x212 - x228)
    x239 = x221 * x7 + x235 * x32
    x240 = (
        x231 * x3
        + x65 * (x225 * x3 - x237 * x66 + x91 * (x210 * x3 - x219 - x224))
        - x66
        * (x229 * x3 + x237 * x65 + x238 - x66 * (x227 * x3 + x236 * x65 - x239 * x66))
        + x91 * (x226 - x230)
    )
    x241 = x206 * x27
    x242 = x210 * x60
    x243 = x90 * (x214 - x242)
    x244 = x10 * x242
    x245 = x214 * x3 - x244
    x246 = x220 * x60
    x247 = -x10 * x246 + x243 + x245 * x3
    x248 = x231 + x247 * x25
    x249 = x226 + x245 * x25
    x250 = -x225 * x66 + x247 * x3 + x91 * (x214 * x3 - x244 - x246)
    x251 = x137 * x214 + x138 * x210 + 2 * x151
    x252 = x137 * x210 + x138 * x211 + 2 * x142
    x253 = x252 * x60
    x254 = x10 * x253
    x255 = x137 * x211 + x138 * x221 + 2 * x161
    x256 = x255 * x60
    x257 = -x10 * x256 + x252 * x3
    x258 = x257 * x60
    x259 = x90 * (x251 - x253)
    x260 = x251 * x3 - x254
    x261 = -x10 * x258 + x259 + x260 * x3
    x262 = x90 * (x252 - x256)
    x263 = x137 * x221 + x138 * x235 + 2 * x191
    x264 = x247 * x26 + x261
    x265 = x245 * x26 + x260
    x266 = x247 * x27
    x267 = -x12 - A[1]
    x268 = x120 * x13
    x269 = x267 * x80 - x268
    x270 = x13 * x83
    x271 = x267 * x44 - x270
    x272 = x271 * x60
    x273 = x13 * x60
    x274 = x273 * x34
    x275 = x267 * x30 - x274
    x276 = x273 * x48
    x277 = x267 * x34 - x276
    x278 = x277 * x60
    x279 = -x10 * x278 + x275 * x3
    x280 = x123 * x13
    x281 = x267 * x39 - x280
    x282 = x13 * x86
    x283 = x267 * x35 - x282
    x284 = x283 * x60
    x285 = -x10 * x284 + x279 * x65 + x281 * x3
    x286 = -x10 * x272 + x269 * x3 + x285 * x70
    x287 = x13 * x82
    x288 = x267 * x81 - x287
    x289 = -x13 * x61 + x267 * x52
    x290 = x289 * x60
    x291 = -x13 * x62 + x267 * x51
    x292 = x291 * x60
    x293 = x267 * x48 - x273 * x55
    x294 = x293 * x60
    x295 = -x10 * x294 + x277 * x3
    x296 = -x13 * x68 + x267 * x49
    x297 = x296 * x60
    x298 = -x10 * x297 + x283 * x3 + x295 * x65
    x299 = -x10 * x292 + x271 * x3 + x298 * x70
    x300 = -x10 * x290 + x288 * x3 + x299 * x72
    x301 = x25 * x286 + x300
    x302 = x136 * x22 + x301
    x303 = x90 * (x267 * x81 - x287 - x290)
    x304 = x90 * (x267 * x80 - x268 - x272)
    x305 = x90 * (x267 * x39 - x280 - x284)
    x306 = x90 * (2 * x18 * x19 * x20 * x24 * x267 * x28 - x274 - x278)
    x307 = (
        x286 * x3
        - x299 * x66
        + x304
        + x70 * (x285 * x3 - x298 * x66 + x305 + x65 * (x279 * x3 - x295 * x66 + x306))
    )
    x308 = x90 * (x267 * x44 - x270 - x292)
    x309 = -x108 * x273 + x267 * x58
    x310 = -x106 * x273 + x267 * x55
    x311 = x293 * x3 - x310 * x66
    x312 = -x107 * x273 + x267 * x56
    x313 = x296 * x3 + x311 * x65 - x312 * x66
    x314 = x291 * x3 - x309 * x66 + x313 * x70
    x315 = x90 * (x267 * x35 - x282 - x297)
    x316 = x90 * (2 * x19 * x20 * x24 * x267 * x28 * x33 - x276 - x294)
    x317 = -x109 * x273 + x267 * x59
    x318 = (
        x25 * x307
        + x3 * x300
        + x303
        - x66 * (x289 * x3 + x314 * x72 - x317 * x66)
        + x72
        * (
            x299 * x3
            + x308
            - x314 * x66
            + x70
            * (x298 * x3 - x313 * x66 + x315 + x65 * (x295 * x3 - x311 * x66 + x316))
        )
    )
    x319 = -x13 * x148 + x153 * x267 + x271 * x65
    x320 = -x13 * x166 + x147 * x267 + x291 * x65
    x321 = x320 * x60
    x322 = -x13 * x155 + x139 * x267 + x277 * x65
    x323 = -x13 * x167 + x144 * x267 + x293 * x65
    x324 = x323 * x60
    x325 = -x10 * x324 + x3 * x322
    x326 = -x13 * x158 + x143 * x267 + x283 * x65
    x327 = -x13 * x169 + x146 * x267 + x296 * x65
    x328 = x327 * x60
    x329 = -x10 * x328 + x3 * x326 + x325 * x65
    x330 = -x10 * x321 + x3 * x319 + x329 * x70
    x331 = x26 * x286 + x330
    x332 = x181 * x22 + x331
    x333 = x90 * (x319 - x321)
    x334 = x90 * (x326 - x328)
    x335 = x90 * (x322 - x324)
    x336 = x162 * x267 - x183 * x273 + x310 * x65
    x337 = x3 * x323 - x336 * x66
    x338 = x164 * x267 - x187 * x273 + x312 * x65
    x339 = x3 * x327 + x337 * x65 - x338 * x66
    x340 = x165 * x267 - x192 * x273 + x309 * x65
    x341 = (
        x3 * x330
        + x333
        - x66 * (x3 * x320 + x339 * x70 - x340 * x66)
        + x70 * (x3 * x329 + x334 - x339 * x66 + x65 * (x3 * x325 + x335 - x337 * x66))
    )
    x342 = x26 * x307 + x341
    x343 = x22 * x27
    x344 = x27 * x286
    x345 = x125 * x343 + x344
    x346 = x27 * x307
    x347 = -x13 * x198 + x141 * x267 + x275 * x65
    x348 = x322 * x60
    x349 = -x10 * x348 + x3 * x347
    x350 = -x13 * x196 + x152 * x267 + x281 * x65
    x351 = x326 * x60
    x352 = -x10 * x351 + x3 * x350 + x349 * x65
    x353 = x25 * x352 + x330
    x354 = x208 * x22 + x353
    x355 = x90 * (x350 - x351)
    x356 = x90 * (x347 - x348)
    x357 = x3 * x352 - x329 * x66 + x355 + x65 * (x3 * x349 - x325 * x66 + x356)
    x358 = x25 * x357 + x341
    x359 = -x13 * x217 + x210 * x267 + x322 * x70
    x360 = -x13 * x222 + x211 * x267 + x323 * x70
    x361 = x360 * x60
    x362 = -x10 * x361 + x3 * x359
    x363 = -x13 * x213 + x215 * x267 + x326 * x70
    x364 = -x13 * x228 + x212 * x267 + x327 * x70
    x365 = x364 * x60
    x366 = -x10 * x365 + x3 * x363 + x362 * x65
    x367 = x26 * x352 + x366
    x368 = x22 * x233 + x367
    x369 = x90 * (x363 - x365)
    x370 = x90 * (x359 - x361)
    x371 = x221 * x267 - x235 * x273 + x336 * x70
    x372 = x3 * x360 - x371 * x66
    x373 = x227 * x267 - x239 * x273 + x338 * x70
    x374 = (
        x3 * x366
        + x369
        + x65 * (x3 * x362 + x370 - x372 * x66)
        - x66 * (x3 * x364 + x372 * x65 - x373 * x66)
    )
    x375 = x26 * x357 + x374
    x376 = x27 * x352
    x377 = x204 * x343 + x376
    x378 = x27 * x357
    x379 = -x13 * x242 + x214 * x267 + x347 * x70
    x380 = x359 * x60
    x381 = -x10 * x380 + x3 * x379
    x382 = x25 * x381 + x366
    x383 = x22 * x249 + x382
    x384 = x90 * (x379 - x380)
    x385 = x3 * x381 - x362 * x66 + x384
    x386 = x25 * x385 + x374
    x387 = -x13 * x253 + x251 * x267 + x359 * x72
    x388 = -x13 * x256 + x252 * x267 + x360 * x72
    x389 = x388 * x60
    x390 = -x10 * x389 + x3 * x387
    x391 = x26 * x381 + x390
    x392 = x22 * x265 + x391
    x393 = x90 * (x387 - x389)
    x394 = x255 * x267 - x263 * x273 + x371 * x72
    x395 = x26 * x385 + x3 * x390 + x393 - x66 * (x3 * x388 - x394 * x66)
    x396 = x27 * x381
    x397 = x245 * x343 + x396
    x398 = x27 * x385
    x399 = -x14 - A[2]
    x400 = x120 * x15
    x401 = x399 * x80 - x400
    x402 = x15 * x83
    x403 = x399 * x44 - x402
    x404 = x403 * x60
    x405 = x15 * x60
    x406 = x34 * x405
    x407 = x30 * x399 - x406
    x408 = x3 * x407
    x409 = x405 * x48
    x410 = x34 * x399 - x409
    x411 = x410 * x60
    x412 = x10 * x411
    x413 = x408 - x412
    x414 = x123 * x15
    x415 = x39 * x399 - x414
    x416 = x3 * x415
    x417 = x15 * x86
    x418 = x35 * x399 - x417
    x419 = x418 * x60
    x420 = -x10 * x419 + x413 * x65 + x416
    x421 = -x10 * x404 + x3 * x401 + x420 * x70
    x422 = x15 * x82
    x423 = x399 * x81 - x422
    x424 = -x15 * x61 + x399 * x52
    x425 = x424 * x60
    x426 = x3 * x403
    x427 = -x15 * x62 + x399 * x51
    x428 = x427 * x60
    x429 = x10 * x428
    x430 = x3 * x410
    x431 = x399 * x48 - x405 * x55
    x432 = x431 * x60
    x433 = x10 * x432
    x434 = x430 - x433
    x435 = x3 * x418
    x436 = -x15 * x68 + x399 * x49
    x437 = x436 * x60
    x438 = x10 * x437
    x439 = x434 * x65 + x435 - x438
    x440 = x426 - x429 + x439 * x70
    x441 = -x10 * x425 + x3 * x423 + x440 * x72
    x442 = x25 * x421 + x441
    x443 = x136 * x23 + x442
    x444 = x90 * (x399 * x81 - x422 - x425)
    x445 = x90 * (x399 * x80 - x400 - x404)
    x446 = x90 * (x39 * x399 - x414 - x419)
    x447 = x90 * (2 * x18 * x19 * x20 * x24 * x28 * x399 - x406 - x411)
    x448 = (
        x3 * x421
        - x440 * x66
        + x445
        + x70 * (x3 * x420 - x439 * x66 + x446 + x65 * (x3 * x413 - x434 * x66 + x447))
    )
    x449 = x90 * (x399 * x44 - x402 - x428)
    x450 = x3 * x427
    x451 = -x108 * x405 + x399 * x58
    x452 = x451 * x66
    x453 = x3 * x431
    x454 = -x106 * x405 + x399 * x55
    x455 = x454 * x66
    x456 = x453 - x455
    x457 = x3 * x436
    x458 = -x107 * x405 + x399 * x56
    x459 = x458 * x66
    x460 = x456 * x65 + x457 - x459
    x461 = x450 - x452 + x460 * x70
    x462 = x90 * (x35 * x399 - x417 - x437)
    x463 = x90 * (2 * x19 * x20 * x24 * x28 * x33 * x399 - x409 - x432)
    x464 = -x109 * x405 + x399 * x59
    x465 = (
        x25 * x448
        + x3 * x441
        + x444
        - x66 * (x3 * x424 + x461 * x72 - x464 * x66)
        + x72
        * (
            x3 * x440
            + x449
            - x461 * x66
            + x70
            * (x3 * x439 - x460 * x66 + x462 + x65 * (x3 * x434 - x456 * x66 + x463))
        )
    )
    x466 = x148 * x15
    x467 = x153 * x399 - x466
    x468 = x147 * x399 - x15 * x166
    x469 = x468 * x60
    x470 = x15 * x158
    x471 = x143 * x399 - x470
    x472 = x3 * x471
    x473 = x15 * x155
    x474 = x139 * x399 - x473
    x475 = x3 * x474
    x476 = x144 * x399 - x15 * x167
    x477 = x476 * x60
    x478 = x10 * x477
    x479 = x475 - x478
    x480 = x146 * x399 - x15 * x169
    x481 = x480 * x60
    x482 = x10 * x481
    x483 = x472 + x479 * x65 - x482
    x484 = -x10 * x469 + x3 * x467 + x483 * x70
    x485 = x26 * x421 + x484
    x486 = x181 * x23 + x485
    x487 = x90 * (x153 * x399 - x466 - x469)
    x488 = x90 * (x143 * x399 - x470 - x481)
    x489 = x90 * (x139 * x399 - x473 - x477)
    x490 = x3 * x476
    x491 = x162 * x399 - x183 * x405
    x492 = x491 * x66
    x493 = x490 - x492
    x494 = x3 * x480
    x495 = x164 * x399 - x187 * x405
    x496 = x495 * x66
    x497 = x493 * x65 + x494 - x496
    x498 = x165 * x399 - x192 * x405
    x499 = (
        x3 * x484
        + x487
        - x66 * (x3 * x468 + x497 * x70 - x498 * x66)
        + x70 * (x3 * x483 + x488 - x497 * x66 + x65 * (x3 * x479 + x489 - x493 * x66))
    )
    x500 = x26 * x448 + x499
    x501 = x23 * x27
    x502 = x430 * x65 - x433 * x65
    x503 = x435 * x65 - x438 * x65 + x502 * x65
    x504 = x426 * x65 - x429 * x65 + x503 * x70
    x505 = x27 * x421 + x504
    x506 = x125 * x501 + x505
    x507 = x428 * x65
    x508 = x90 * (x403 * x65 - x507)
    x509 = x437 * x65
    x510 = x90 * (x418 * x65 - x509)
    x511 = x432 * x65
    x512 = x90 * (x410 * x65 - x511)
    x513 = x453 * x65 - x455 * x65
    x514 = x457 * x65 - x459 * x65 + x513 * x65
    x515 = (
        x3 * x504
        + x508
        - x66 * (x450 * x65 - x452 * x65 + x514 * x70)
        + x70 * (x3 * x503 + x510 - x514 * x66 + x65 * (x3 * x502 + x512 - x513 * x66))
    )
    x516 = x27 * x448 + x515
    x517 = x15 * x196
    x518 = x152 * x399 - x517
    x519 = x15 * x198
    x520 = x141 * x399 - x519
    x521 = x3 * x520
    x522 = x474 * x60
    x523 = -x10 * x522 + x521
    x524 = x471 * x60
    x525 = -x10 * x524 + x3 * x518 + x523 * x65
    x526 = x25 * x525 + x484
    x527 = x208 * x23 + x526
    x528 = x90 * (x152 * x399 - x517 - x524)
    x529 = x90 * (x141 * x399 - x519 - x522)
    x530 = x3 * x525 - x483 * x66 + x528 + x65 * (x3 * x523 - x479 * x66 + x529)
    x531 = x25 * x530 + x499
    x532 = x15 * x213
    x533 = x215 * x399 - x532
    x534 = x15 * x217
    x535 = x210 * x399 - x534
    x536 = x3 * x535
    x537 = -x15 * x222 + x211 * x399
    x538 = x537 * x60
    x539 = x10 * x538
    x540 = x536 - x539
    x541 = -x15 * x228 + x212 * x399
    x542 = x541 * x60
    x543 = -x10 * x542 + x3 * x533 + x540 * x65
    x544 = x26 * x525 + x543
    x545 = x23 * x233 + x544
    x546 = x90 * (x215 * x399 - x532 - x542)
    x547 = x90 * (x210 * x399 - x534 - x538)
    x548 = x3 * x537
    x549 = x221 * x399 - x235 * x405
    x550 = x549 * x66
    x551 = x548 - x550
    x552 = x227 * x399 - x239 * x405
    x553 = (
        x3 * x543
        + x546
        + x65 * (x3 * x540 + x547 - x551 * x66)
        - x66 * (x3 * x541 + x551 * x65 - x552 * x66)
    )
    x554 = x26 * x530 + x553
    x555 = x475 * x65 - x478 * x65
    x556 = x472 * x65 - x482 * x65 + x555 * x65
    x557 = x27 * x525 + x556
    x558 = x204 * x501 + x557
    x559 = x481 * x65
    x560 = x90 * (x471 * x65 - x559)
    x561 = x477 * x65
    x562 = x90 * (x474 * x65 - x561)
    x563 = x490 * x65 - x492 * x65
    x564 = (
        x3 * x556
        + x560
        + x65 * (x3 * x555 + x562 - x563 * x66)
        - x66 * (x494 * x65 - x496 * x65 + x563 * x65)
    )
    x565 = x27 * x530 + x564
    x566 = x410 * x65
    x567 = x408 * x65 - x566 * x66
    x568 = x418 * x65
    x569 = x416 * x65 + x567 * x65 - x568 * x66
    x570 = x25 * x569 + x504
    x571 = x90 * (x415 * x65 - x568 * x60)
    x572 = x90 * (x407 * x65 - x566 * x60)
    x573 = x3 * x569 - x503 * x66 + x571 + x65 * (x3 * x567 - x502 * x66 + x572)
    x574 = x21 * x570 + x25 * x573 + x515
    x575 = x26 * x569 + x556
    x576 = x21 * x575 + x26 * x573 + x564
    x577 = x64 ** (-2.0)
    x578 = 2 * x577
    x579 = x430 * x578 - x433 * x578
    x580 = x435 * x578 - x438 * x578 + x579 * x65
    x581 = x27 * x569 + x580
    x582 = x90 * (2 * x418 * x577 - x437 * x578)
    x583 = x90 * (2 * x410 * x577 - x432 * x578)
    x584 = x453 * x578 - x455 * x578
    x585 = (
        x3 * x580
        + x582
        + x65 * (x3 * x579 + x583 - x584 * x66)
        - x66 * (x457 * x578 - x459 * x578 + x584 * x65)
    )
    x586 = x21 * x581 + x27 * x573 + x585
    x587 = x15 * x242
    x588 = x214 * x399 - x587
    x589 = x535 * x60
    x590 = -x10 * x589 + x3 * x588
    x591 = x25 * x590 + x543
    x592 = x23 * x249 + x591
    x593 = x90 * (x214 * x399 - x587 - x589)
    x594 = x3 * x590 - x540 * x66 + x593
    x595 = x25 * x594 + x553
    x596 = x15 * x253
    x597 = x251 * x399 - x596
    x598 = -x15 * x256 + x252 * x399
    x599 = x598 * x60
    x600 = -x10 * x599 + x3 * x597
    x601 = x26 * x590 + x600
    x602 = x23 * x265 + x601
    x603 = x90 * (x251 * x399 - x596 - x599)
    x604 = x255 * x399 - x263 * x405
    x605 = x26 * x594 + x3 * x600 + x603 - x66 * (x3 * x598 - x604 * x66)
    x606 = x536 * x65 - x539 * x65
    x607 = x27 * x590 + x606
    x608 = x245 * x501 + x607
    x609 = x538 * x65
    x610 = x90 * (x535 * x65 - x609)
    x611 = x3 * x606 + x610 - x66 * (x548 * x65 - x550 * x65)
    x612 = x27 * x594 + x611
    x613 = x474 * x65
    x614 = x521 * x65 - x613 * x66
    x615 = x25 * x614 + x556
    x616 = x90 * (x520 * x65 - x60 * x613)
    x617 = x3 * x614 - x555 * x66 + x616
    x618 = x21 * x615 + x25 * x617 + x564
    x619 = x26 * x614 + x606
    x620 = x21 * x619 + x26 * x617 + x611
    x621 = x475 * x578 - x478 * x578
    x622 = x27 * x614 + x621
    x623 = x90 * (2 * x474 * x577 - x477 * x578)
    x624 = x3 * x621 + x623 - x66 * (x490 * x578 - x492 * x578)
    x625 = x21 * x622 + x27 * x617 + x624
    x626 = x408 * x578 - x412 * x578
    x627 = x25 * x626 + x580
    x628 = x90 * (2 * x407 * x577 - x411 * x578)
    x629 = x3 * x626 - x579 * x66 + x628
    x630 = x21 * x627 + x25 * x629 + x585
    x631 = x26 * x626 + x621
    x632 = x21 * x631 + x26 * x629 + x624
    x633 = x64 ** (-3.0)
    x634 = 6 * x633
    x635 = x90 * (6 * x410 * x633 - x432 * x634)
    x636 = x430 * x634 - x433 * x634
    x637 = x27 * x626 + x636
    x638 = x21 * x637 + x27 * x629 + x3 * x636 + x635 - x66 * (x453 * x634 - x455 * x634)
    x639 = x126 - x13 * x272 + x267 * x269
    x640 = -x13 * x292 + x267 * x271 + x93
    x641 = x128 - x13 * x278 + x267 * x275
    x642 = -x13 * x294 + x267 * x277 + x96
    x643 = x127 - x13 * x284 + x267 * x281
    x644 = -x13 * x297 + x267 * x283 + x95
    x645 = (
        x3 * x639
        - x640 * x66
        + x70 * (x3 * x643 - x644 * x66 + x65 * (x3 * x641 - x642 * x66))
    )
    x646 = -x13 * x290 + x267 * x288 + x92
    x647 = x113 + x267 * x291 - x273 * x309
    x648 = x115 + x267 * x293 - x273 * x310
    x649 = x114 + x267 * x296 - x273 * x312
    x650 = x103 + x267 * x289 - x273 * x317
    x651 = (
        x22 * x301
        + x25 * x645
        + x3 * x646
        - x650 * x66
        + x72
        * (
            x3 * x640
            - x647 * x66
            + x70 * (x3 * x644 - x649 * x66 + x65 * (x3 * x642 - x648 * x66))
        )
    )
    x652 = -x13 * x321 + x154 + x267 * x319 + x640 * x65
    x653 = -x13 * x324 + x174 + x267 * x322 + x642 * x65
    x654 = x182 + x267 * x323 - x273 * x336 + x648 * x65
    x655 = -x13 * x328 + x173 + x267 * x326 + x644 * x65
    x656 = x186 + x267 * x327 - x273 * x338 + x649 * x65
    x657 = x190 + x267 * x320 - x273 * x340 + x647 * x65
    x658 = (
        x3 * x652
        - x657 * x66
        + x70 * (x3 * x655 + x65 * (x3 * x653 - x654 * x66) - x656 * x66)
    )
    x659 = x22 * x331 + x26 * x645 + x658
    x660 = x22 * x344 + x27 * x645
    x661 = -x13 * x348 + x199 + x267 * x347 + x641 * x65
    x662 = -x13 * x351 + x197 + x267 * x350 + x643 * x65
    x663 = x3 * x662 + x65 * (x3 * x661 - x653 * x66) - x655 * x66
    x664 = x22 * x353 + x25 * x663 + x658
    x665 = -x13 * x361 + x218 + x267 * x359 + x653 * x70
    x666 = x234 + x267 * x360 - x273 * x371 + x654 * x70
    x667 = -x13 * x365 + x216 + x267 * x363 + x655 * x70
    x668 = x238 + x267 * x364 - x273 * x373 + x656 * x70
    x669 = x3 * x667 + x65 * (x3 * x665 - x66 * x666) - x66 * x668
    x670 = x22 * x367 + x26 * x663 + x669
    x671 = x22 * x376 + x27 * x663
    x672 = -x13 * x380 + x243 + x267 * x379 + x661 * x70
    x673 = x3 * x672 - x66 * x665
    x674 = x22 * x382 + x25 * x673 + x669
    x675 = -x13 * x389 + x259 + x267 * x387 + x665 * x72
    x676 = x262 + x267 * x388 - x273 * x394 + x666 * x72
    x677 = x22 * x391 + x26 * x673 + x3 * x675 - x66 * x676
    x678 = x22 * x396 + x27 * x673
    x679 = -x13 * x404 + x267 * x401
    x680 = -x13 * x428 + x267 * x403
    x681 = x267 * x407
    x682 = x13 * x411
    x683 = x681 - x682
    x684 = x267 * x410
    x685 = x13 * x432
    x686 = x684 - x685
    x687 = -x13 * x419 + x267 * x415
    x688 = x267 * x418
    x689 = x13 * x437
    x690 = x688 - x689
    x691 = (
        x3 * x679
        - x66 * x680
        + x70 * (x3 * x687 + x65 * (x3 * x683 - x66 * x686) - x66 * x690)
    )
    x692 = -x13 * x425 + x267 * x423
    x693 = x267 * x427
    x694 = x273 * x451
    x695 = x693 - x694
    x696 = x267 * x431
    x697 = x273 * x454
    x698 = x696 - x697
    x699 = x267 * x436
    x700 = x273 * x458
    x701 = x699 - x700
    x702 = x267 * x424 - x273 * x464
    x703 = (
        x25 * x691
        + x3 * x692
        - x66 * x702
        + x72
        * (
            x3 * x680
            - x66 * x695
            + x70 * (x3 * x690 + x65 * (x3 * x686 - x66 * x698) - x66 * x701)
        )
    )
    x704 = x23 * x301 + x703
    x705 = -x13 * x469 + x267 * x467 + x65 * x680
    x706 = x267 * x474
    x707 = x13 * x477
    x708 = x65 * x686 + x706 - x707
    x709 = x267 * x476
    x710 = x273 * x491
    x711 = x65 * x698 + x709 - x710
    x712 = -x13 * x481 + x267 * x471 + x65 * x690
    x713 = x267 * x480
    x714 = x273 * x495
    x715 = x65 * x701 + x713 - x714
    x716 = x267 * x468 - x273 * x498 + x65 * x695
    x717 = (
        x3 * x705
        - x66 * x716
        + x70 * (x3 * x712 + x65 * (x3 * x708 - x66 * x711) - x66 * x715)
    )
    x718 = x26 * x691 + x717
    x719 = x23 * x331 + x718
    x720 = x403 * x65
    x721 = -x13 * x507 + x267 * x720
    x722 = -x13 * x509 + x267 * x568
    x723 = x65 * x699 - x65 * x700
    x724 = -x13 * x511 + x267 * x566
    x725 = x65 * x696 - x65 * x697
    x726 = x65 * x693 - x65 * x694
    x727 = (
        x3 * x721
        - x66 * x726
        + x70 * (x3 * x722 + x65 * (x3 * x724 - x66 * x725) - x66 * x723)
    )
    x728 = x27 * x691 + x727
    x729 = x23 * x344 + x728
    x730 = -x13 * x522 + x267 * x520 + x65 * x683
    x731 = -x13 * x524 + x267 * x518 + x65 * x687
    x732 = x3 * x731 + x65 * (x3 * x730 - x66 * x708) - x66 * x712
    x733 = x25 * x732 + x717
    x734 = x23 * x353 + x733
    x735 = -x13 * x538 + x267 * x535 + x70 * x708
    x736 = x267 * x537
    x737 = x273 * x549
    x738 = x70 * x711 + x736 - x737
    x739 = -x13 * x542 + x267 * x533 + x70 * x712
    x740 = x267 * x541 - x273 * x552 + x70 * x715
    x741 = x3 * x739 + x65 * (x3 * x735 - x66 * x738) - x66 * x740
    x742 = x26 * x732 + x741
    x743 = x23 * x367 + x742
    x744 = -x13 * x561 + x267 * x613 + x65 * x724
    x745 = x65 * x709 - x65 * x710 + x65 * x725
    x746 = x471 * x65
    x747 = -x13 * x559 + x267 * x746 + x65 * x722
    x748 = x65 * x713 - x65 * x714 + x65 * x723
    x749 = x3 * x747 + x65 * (x3 * x744 - x66 * x745) - x66 * x748
    x750 = x27 * x732 + x749
    x751 = x23 * x376 + x750
    x752 = x415 * x65
    x753 = x267 * x752 - x273 * x568
    x754 = x407 * x65
    x755 = x267 * x754 - x273 * x566
    x756 = x3 * x753 + x65 * (x3 * x755 - x66 * x724) - x66 * x722
    x757 = x25 * x756 + x727
    x758 = x22 * x570 + x757
    x759 = x26 * x756 + x749
    x760 = x22 * x575 + x759
    x761 = x578 * x684 - x578 * x685
    x762 = x578 * x696 - x578 * x697
    x763 = x578 * x688 - x578 * x689
    x764 = x578 * x699 - x578 * x700
    x765 = x3 * x763 + x65 * (x3 * x761 - x66 * x762) - x66 * x764
    x766 = x27 * x756 + x765
    x767 = x22 * x581 + x766
    x768 = -x13 * x589 + x267 * x588 + x70 * x730
    x769 = x3 * x768 - x66 * x735
    x770 = x25 * x769 + x741
    x771 = x23 * x382 + x770
    x772 = -x13 * x599 + x267 * x597 + x72 * x735
    x773 = x267 * x598 - x273 * x604 + x72 * x738
    x774 = x26 * x769 + x3 * x772 - x66 * x773
    x775 = x23 * x391 + x774
    x776 = x535 * x65
    x777 = -x13 * x609 + x267 * x776 + x70 * x744
    x778 = x65 * x736 - x65 * x737 + x70 * x745
    x779 = x3 * x777 - x66 * x778
    x780 = x27 * x769 + x779
    x781 = x23 * x396 + x780
    x782 = x520 * x65
    x783 = x267 * x782 - x273 * x613 + x65 * x755
    x784 = x3 * x783 - x66 * x744
    x785 = x25 * x784 + x749
    x786 = x22 * x615 + x785
    x787 = x26 * x784 + x779
    x788 = x22 * x619 + x787
    x789 = x578 * x706 - x578 * x707 + x65 * x761
    x790 = x578 * x709 - x578 * x710 + x65 * x762
    x791 = x3 * x789 - x66 * x790
    x792 = x27 * x784 + x791
    x793 = x22 * x622 + x792
    x794 = x578 * x681 - x578 * x682
    x795 = x3 * x794 - x66 * x761
    x796 = x25 * x795 + x765
    x797 = x22 * x627 + x796
    x798 = x26 * x795 + x791
    x799 = x22 * x631 + x798
    x800 = x634 * x684 - x634 * x685
    x801 = x634 * x696 - x634 * x697
    x802 = x27 * x795 + x3 * x800 - x66 * x801
    x803 = x22 * x637 + x802
    x804 = x126 - x15 * x404 + x399 * x401
    x805 = -x15 * x428 + x399 * x403 + x93
    x806 = x399 * x407
    x807 = x15 * x411
    x808 = x128 + x806 - x807
    x809 = x399 * x410
    x810 = x15 * x432
    x811 = x809 - x810 + x96
    x812 = x127 - x15 * x419 + x399 * x415
    x813 = x399 * x418
    x814 = x15 * x437
    x815 = x813 - x814 + x95
    x816 = (
        x3 * x804
        - x66 * x805
        + x70 * (x3 * x812 + x65 * (x3 * x808 - x66 * x811) - x66 * x815)
    )
    x817 = -x15 * x425 + x399 * x423 + x92
    x818 = x399 * x427
    x819 = x405 * x451
    x820 = x113 + x818 - x819
    x821 = x399 * x431
    x822 = x405 * x454
    x823 = x115 + x821 - x822
    x824 = x399 * x436
    x825 = x405 * x458
    x826 = x114 + x824 - x825
    x827 = x103 + x399 * x424 - x405 * x464
    x828 = (
        x23 * x442
        + x25 * x816
        + x3 * x817
        - x66 * x827
        + x72
        * (
            x3 * x805
            - x66 * x820
            + x70 * (x3 * x815 + x65 * (x3 * x811 - x66 * x823) - x66 * x826)
        )
    )
    x829 = -x15 * x469 + x154 + x399 * x467
    x830 = x399 * x474
    x831 = x15 * x477
    x832 = x174 + x830 - x831
    x833 = x399 * x476
    x834 = x405 * x491
    x835 = x182 + x833 - x834
    x836 = -x15 * x481 + x173 + x399 * x471
    x837 = x399 * x480
    x838 = x405 * x495
    x839 = x186 + x837 - x838
    x840 = x190 + x399 * x468 - x405 * x498
    x841 = (
        x3 * x829
        - x66 * x840
        + x70 * (x3 * x836 + x65 * (x3 * x832 - x66 * x835) - x66 * x839)
    )
    x842 = x23 * x485 + x26 * x816 + x841
    x843 = -x15 * x507 + x399 * x720 + x65 * x805
    x844 = -x15 * x511 + x399 * x566 + x65 * x811
    x845 = x65 * x821 - x65 * x822 + x65 * x823
    x846 = -x15 * x509 + x399 * x568 + x65 * x815
    x847 = x65 * x824 - x65 * x825 + x65 * x826
    x848 = x65 * x818 - x65 * x819 + x65 * x820
    x849 = (
        x3 * x843
        - x66 * x848
        + x70 * (x3 * x846 + x65 * (x3 * x844 - x66 * x845) - x66 * x847)
    )
    x850 = x23 * x505 + x27 * x816 + x849
    x851 = -x15 * x522 + x199 + x399 * x520
    x852 = -x15 * x524 + x197 + x399 * x518
    x853 = x3 * x852 + x65 * (x3 * x851 - x66 * x832) - x66 * x836
    x854 = x23 * x526 + x25 * x853 + x841
    x855 = -x15 * x538 + x218 + x399 * x535
    x856 = x399 * x537
    x857 = x405 * x549
    x858 = x234 + x856 - x857
    x859 = -x15 * x542 + x216 + x399 * x533
    x860 = x238 + x399 * x541 - x405 * x552
    x861 = x3 * x859 + x65 * (x3 * x855 - x66 * x858) - x66 * x860
    x862 = x23 * x544 + x26 * x853 + x861
    x863 = -x15 * x561 + x399 * x613 + x65 * x832
    x864 = x65 * x833 - x65 * x834 + x65 * x835
    x865 = -x15 * x559 + x399 * x746 + x65 * x836
    x866 = x65 * x837 - x65 * x838 + x65 * x839
    x867 = x3 * x865 + x65 * (x3 * x863 - x66 * x864) - x66 * x866
    x868 = x23 * x557 + x27 * x853 + x867
    x869 = x23 * x570
    x870 = x399 * x754 - x405 * x566 + x65 * x808
    x871 = x399 * x752 - x405 * x568 + x65 * x812
    x872 = x3 * x871 + x65 * (x3 * x870 - x66 * x844) - x66 * x846
    x873 = x25 * x872 + x849
    x874 = x23 * x575
    x875 = x26 * x872 + x867
    x876 = x23 * x581
    x877 = x578 * x809 - x578 * x810 + x70 * x844
    x878 = x578 * x821 - x578 * x822 + x70 * x845
    x879 = x578 * x813 - x578 * x814 + x70 * x846
    x880 = x578 * x824 - x578 * x825 + x70 * x847
    x881 = x3 * x879 + x65 * (x3 * x877 - x66 * x878) - x66 * x880
    x882 = x27 * x872 + x881
    x883 = -x15 * x589 + x243 + x399 * x588
    x884 = x3 * x883 - x66 * x855
    x885 = x23 * x591 + x25 * x884 + x861
    x886 = -x15 * x599 + x259 + x399 * x597
    x887 = x262 + x399 * x598 - x405 * x604
    x888 = x23 * x601 + x26 * x884 + x3 * x886 - x66 * x887
    x889 = -x15 * x609 + x399 * x776 + x65 * x855
    x890 = x65 * x856 - x65 * x857 + x65 * x858
    x891 = x3 * x889 - x66 * x890
    x892 = x23 * x607 + x27 * x884 + x891
    x893 = x23 * x615
    x894 = x399 * x782 - x405 * x613 + x65 * x851
    x895 = x3 * x894 - x66 * x863
    x896 = x25 * x895 + x867
    x897 = x23 * x619
    x898 = x26 * x895 + x891
    x899 = x23 * x622
    x900 = x578 * x830 - x578 * x831 + x70 * x863
    x901 = x578 * x833 - x578 * x834 + x70 * x864
    x902 = x3 * x900 - x66 * x901
    x903 = x27 * x895 + x902
    x904 = x23 * x627
    x905 = x578 * x806 - x578 * x807 + x70 * x870
    x906 = x3 * x905 - x66 * x877
    x907 = x25 * x906 + x881
    x908 = x23 * x631
    x909 = x26 * x906 + x902
    x910 = x23 * x637
    x911 = x634 * x809 - x634 * x810 + x72 * x877
    x912 = x634 * x821 - x634 * x822 + x72 * x878
    x913 = x27 * x906 + x3 * x911 - x66 * x912
    x914 = x25 * x269 + x288
    x915 = x26 * x269 + x319
    x916 = x25 * x350 + x319
    x917 = x26 * x350 + x363
    x918 = x25 * x379 + x363
    x919 = x26 * x379 + x387
    x920 = x25 * x639 + x646
    x921 = x22 * x914 + x920
    x922 = x26 * x639 + x652
    x923 = x22 * x915 + x922
    x924 = x27 * x639
    x925 = x269 * x343 + x924
    x926 = x25 * x662 + x652
    x927 = x22 * x916 + x926
    x928 = x26 * x662 + x667
    x929 = x22 * x917 + x928
    x930 = x27 * x662
    x931 = x343 * x350 + x930
    x932 = x25 * x672 + x667
    x933 = x22 * x918 + x932
    x934 = x26 * x672 + x675
    x935 = x22 * x919 + x934
    x936 = x27 * x672
    x937 = x343 * x379 + x936
    x938 = x25 * x679 + x692
    x939 = x23 * x914 + x938
    x940 = x26 * x679 + x705
    x941 = x23 * x915 + x940
    x942 = x27 * x679 + x721
    x943 = x269 * x501 + x942
    x944 = x25 * x731 + x705
    x945 = x23 * x916 + x944
    x946 = x26 * x731 + x739
    x947 = x23 * x917 + x946
    x948 = x27 * x731 + x747
    x949 = x350 * x501 + x948
    x950 = x25 * x753 + x721
    x951 = x26 * x753 + x747
    x952 = x27 * x753 + x763
    x953 = x25 * x768 + x739
    x954 = x23 * x918 + x953
    x955 = x26 * x768 + x772
    x956 = x23 * x919 + x955
    x957 = x27 * x768 + x777
    x958 = x379 * x501 + x957
    x959 = x25 * x783 + x747
    x960 = x26 * x783 + x777
    x961 = x27 * x783 + x789
    x962 = x25 * x794 + x763
    x963 = x26 * x794 + x789
    x964 = x27 * x794 + x800
    x965 = x267 * x639 - x273 * x640 + 2 * x304
    x966 = (
        x267 * x652
        - x273 * x657
        + 2 * x333
        + x65 * (x267 * x640 - x273 * x647 + 2 * x308)
    )
    x967 = (
        x267 * x662
        - x273 * x655
        + 2 * x355
        + x65 * (x267 * x643 - x273 * x644 + 2 * x305)
    )
    x968 = (
        x267 * x667
        - x273 * x668
        + 2 * x369
        + x70
        * (
            x267 * x655
            - x273 * x656
            + 2 * x334
            + x65 * (x267 * x644 - x273 * x649 + 2 * x315)
        )
    )
    x969 = (
        x267 * x672
        - x273 * x665
        + 2 * x384
        + x70
        * (
            x267 * x661
            - x273 * x653
            + 2 * x356
            + x65 * (x267 * x641 - x273 * x642 + 2 * x306)
        )
    )
    x970 = x267 * x679 - x273 * x680 + x445
    x971 = x25 * x970 + x267 * x692 - x273 * x702 + x444
    x972 = x267 * x705 - x273 * x716 + x487 + x65 * (x267 * x680 - x273 * x695 + x449)
    x973 = x26 * x970 + x972
    x974 = x267 * x721 - x273 * x726 + x508
    x975 = x27 * x970 + x974
    x976 = x267 * x731 - x273 * x712 + x528 + x65 * (x267 * x687 - x273 * x690 + x446)
    x977 = x25 * x976 + x972
    x978 = (
        x267 * x739
        - x273 * x740
        + x546
        + x70
        * (x267 * x712 - x273 * x715 + x488 + x65 * (x267 * x690 - x273 * x701 + x462))
    )
    x979 = x26 * x976 + x978
    x980 = x267 * x747 - x273 * x748 + x560 + x65 * (x267 * x722 - x273 * x723 + x510)
    x981 = x27 * x976 + x980
    x982 = x267 * x753 - x273 * x722 + x571
    x983 = x22 * x950 + x25 * x982 + x974
    x984 = x22 * x951 + x26 * x982 + x980
    x985 = x267 * x763 - x273 * x764 + x582
    x986 = x22 * x952 + x27 * x982 + x985
    x987 = (
        x267 * x768
        - x273 * x735
        + x593
        + x70
        * (x267 * x730 - x273 * x708 + x529 + x65 * (x267 * x683 - x273 * x686 + x447))
    )
    x988 = x25 * x987 + x978
    x989 = (
        x26 * x987
        + x267 * x772
        - x273 * x773
        + x603
        + x72
        * (
            x267 * x735
            - x273 * x738
            + x547
            + x70
            * (
                x267 * x708
                - x273 * x711
                + x489
                + x65 * (x267 * x686 - x273 * x698 + x463)
            )
        )
    )
    x990 = (
        x267 * x777
        - x273 * x778
        + x610
        + x70
        * (x267 * x744 - x273 * x745 + x562 + x65 * (x267 * x724 - x273 * x725 + x512))
    )
    x991 = x27 * x987 + x990
    x992 = x267 * x783 - x273 * x744 + x616 + x65 * (x267 * x755 - x273 * x724 + x572)
    x993 = x22 * x959 + x25 * x992 + x980
    x994 = x22 * x960 + x26 * x992 + x990
    x995 = x267 * x789 - x273 * x790 + x623 + x65 * (x267 * x761 - x273 * x762 + x583)
    x996 = x22 * x961 + x27 * x992 + x995
    x997 = x267 * x794 - x273 * x761 + x628
    x998 = x22 * x962 + x25 * x997 + x985
    x999 = x22 * x963 + x26 * x997 + x995
    x1000 = x22 * x964 + x267 * x800 + x27 * x997 - x273 * x801 + x635
    x1001 = x267 * x804 - x273 * x805
    x1002 = x1001 * x25 + x23 * x938 + x267 * x817 - x273 * x827
    x1003 = x267 * x829 - x273 * x840 + x65 * (x267 * x805 - x273 * x820)
    x1004 = x1001 * x26 + x1003 + x23 * x940
    x1005 = x267 * x843 - x273 * x848
    x1006 = x1001 * x27 + x1005 + x23 * x942
    x1007 = x267 * x852 - x273 * x836 + x65 * (x267 * x812 - x273 * x815)
    x1008 = x1003 + x1007 * x25 + x23 * x944
    x1009 = (
        x267 * x859
        - x273 * x860
        + x70 * (x267 * x836 - x273 * x839 + x65 * (x267 * x815 - x273 * x826))
    )
    x1010 = x1007 * x26 + x1009 + x23 * x946
    x1011 = x267 * x865 - x273 * x866 + x65 * (x267 * x846 - x273 * x847)
    x1012 = x1007 * x27 + x1011 + x23 * x948
    x1013 = x23 * x950
    x1014 = x267 * x871 - x273 * x846
    x1015 = x1005 + x1014 * x25
    x1016 = x23 * x951
    x1017 = x1011 + x1014 * x26
    x1018 = x23 * x952
    x1019 = x267 * x879 - x273 * x880
    x1020 = x1014 * x27 + x1019
    x1021 = (
        x267 * x883
        - x273 * x855
        + x70 * (x267 * x851 - x273 * x832 + x65 * (x267 * x808 - x273 * x811))
    )
    x1022 = x1009 + x1021 * x25 + x23 * x953
    x1023 = (
        x1021 * x26
        + x23 * x955
        + x267 * x886
        - x273 * x887
        + x72
        * (
            x267 * x855
            - x273 * x858
            + x70 * (x267 * x832 - x273 * x835 + x65 * (x267 * x811 - x273 * x823))
        )
    )
    x1024 = (
        x267 * x889
        - x273 * x890
        + x70 * (x267 * x863 - x273 * x864 + x65 * (x267 * x844 - x273 * x845))
    )
    x1025 = x1021 * x27 + x1024 + x23 * x957
    x1026 = x23 * x959
    x1027 = x267 * x894 - x273 * x863 + x65 * (x267 * x870 - x273 * x844)
    x1028 = x1011 + x1027 * x25
    x1029 = x23 * x960
    x1030 = x1024 + x1027 * x26
    x1031 = x23 * x961
    x1032 = x267 * x900 - x273 * x901 + x65 * (x267 * x877 - x273 * x878)
    x1033 = x1027 * x27 + x1032
    x1034 = x23 * x962
    x1035 = x267 * x905 - x273 * x877
    x1036 = x1019 + x1035 * x25
    x1037 = x23 * x963
    x1038 = x1032 + x1035 * x26
    x1039 = x23 * x964
    x1040 = x1035 * x27 + x267 * x911 - x273 * x912
    x1041 = x25 * x401 + x423
    x1042 = x26 * x401 + x467
    x1043 = x27 * x401 + x720
    x1044 = x25 * x518 + x467
    x1045 = x26 * x518 + x533
    x1046 = x27 * x518 + x746
    x1047 = x25 * x752 + x720
    x1048 = x26 * x752 + x746
    x1049 = x418 * x578
    x1050 = x1049 + x27 * x752
    x1051 = x25 * x588 + x533
    x1052 = x26 * x588 + x597
    x1053 = x27 * x588 + x776
    x1054 = x25 * x782 + x746
    x1055 = x26 * x782 + x776
    x1056 = x474 * x578
    x1057 = x1056 + x27 * x782
    x1058 = x407 * x578
    x1059 = x1049 + x1058 * x25
    x1060 = x1056 + x1058 * x26
    x1061 = x1058 * x27 + x410 * x634
    x1062 = x1041 * x22 + x938
    x1063 = x1042 * x22 + x940
    x1064 = x1043 * x22 + x942
    x1065 = x1044 * x22 + x944
    x1066 = x1045 * x22 + x946
    x1067 = x1046 * x22 + x948
    x1068 = x1047 * x22 + x950
    x1069 = x1048 * x22 + x951
    x1070 = x1050 * x22 + x952
    x1071 = x1051 * x22 + x953
    x1072 = x1052 * x22 + x955
    x1073 = x1053 * x22 + x957
    x1074 = x1054 * x22 + x959
    x1075 = x1055 * x22 + x960
    x1076 = x1057 * x22 + x961
    x1077 = x1059 * x22 + x962
    x1078 = x1060 * x22 + x963
    x1079 = x1061 * x22 + x964
    x1080 = x25 * x804 + x817
    x1081 = x1041 * x23 + x1080
    x1082 = x26 * x804 + x829
    x1083 = x1042 * x23 + x1082
    x1084 = x27 * x804 + x843
    x1085 = x1043 * x23 + x1084
    x1086 = x25 * x852 + x829
    x1087 = x1044 * x23 + x1086
    x1088 = x26 * x852 + x859
    x1089 = x1045 * x23 + x1088
    x1090 = x27 * x852 + x865
    x1091 = x1046 * x23 + x1090
    x1092 = x25 * x871 + x843
    x1093 = x1047 * x23 + x1092
    x1094 = x26 * x871 + x865
    x1095 = x1048 * x23 + x1094
    x1096 = x27 * x871 + x879
    x1097 = x1050 * x23 + x1096
    x1098 = x25 * x883 + x859
    x1099 = x1051 * x23 + x1098
    x1100 = x26 * x883 + x886
    x1101 = x1052 * x23 + x1100
    x1102 = x27 * x883 + x889
    x1103 = x1053 * x23 + x1102
    x1104 = x25 * x894 + x865
    x1105 = x1054 * x23 + x1104
    x1106 = x26 * x894 + x889
    x1107 = x1055 * x23 + x1106
    x1108 = x27 * x894 + x900
    x1109 = x1057 * x23 + x1108
    x1110 = x25 * x905 + x879
    x1111 = x1059 * x23 + x1110
    x1112 = x26 * x905 + x900
    x1113 = x1060 * x23 + x1112
    x1114 = x27 * x905 + x911
    x1115 = x1061 * x23 + x1114
    x1116 = x399 * x804 - x405 * x805 + 2 * x445
    x1117 = x399 * x829 - x405 * x840 + 2 * x487
    x1118 = (
        x399 * x843
        - x405 * x848
        + 2 * x508
        + x65 * (x399 * x805 - x405 * x820 + 2 * x449)
    )
    x1119 = x399 * x852 - x405 * x836 + 2 * x528
    x1120 = x399 * x859 - x405 * x860 + 2 * x546
    x1121 = (
        x399 * x865
        - x405 * x866
        + 2 * x560
        + x65 * (x399 * x836 - x405 * x839 + 2 * x488)
    )
    x1122 = (
        x399 * x871
        - x405 * x846
        + 2 * x571
        + x65 * (x399 * x812 - x405 * x815 + 2 * x446)
    )
    x1123 = (
        x399 * x879
        - x405 * x880
        + 2 * x582
        + x70
        * (
            x399 * x846
            - x405 * x847
            + 2 * x510
            + x65 * (x399 * x815 - x405 * x826 + 2 * x462)
        )
    )
    x1124 = x399 * x883 - x405 * x855 + 2 * x593
    x1125 = (
        x399 * x889
        - x405 * x890
        + 2 * x610
        + x65 * (x399 * x855 - x405 * x858 + 2 * x547)
    )
    x1126 = (
        x399 * x894
        - x405 * x863
        + 2 * x616
        + x65 * (x399 * x851 - x405 * x832 + 2 * x529)
    )
    x1127 = (
        x399 * x900
        - x405 * x901
        + 2 * x623
        + x70
        * (
            x399 * x863
            - x405 * x864
            + 2 * x562
            + x65 * (x399 * x832 - x405 * x835 + 2 * x489)
        )
    )
    x1128 = (
        x399 * x905
        - x405 * x877
        + 2 * x628
        + x70
        * (
            x399 * x870
            - x405 * x844
            + 2 * x572
            + x65 * (x399 * x808 - x405 * x811 + 2 * x447)
        )
    )

    # 324 item(s)
    S = numpy.array(
        [
            x102 * x3
            + x134 * x25
            + x135 * x21
            + x21 * (x135 + x136 * x21)
            - x66
            * (x103 + x118 * x72 + x3 * x73 - x66 * (-x109 * x66 + x112 * x72 + x3 * x59))
            + x72
            * (
                x101 * x3
                - x118 * x66
                + x70
                * (
                    x100 * x3
                    - x117 * x66
                    + x65
                    * (
                        -x116 * x66
                        + x3 * x98
                        + x91 * (2 * x19 * x20 * x24 * x28 * x3 * x33 - x84 - x97)
                    )
                    + x91 * (x87 - x99)
                )
                + x91 * (x88 - x94)
            )
            + x91 * (-x74 + x89),
            x134 * x26 + x180 * x21 + x193 + x21 * (x180 + x181 * x21),
            x134 * x27 + x194 * x21 + x21 * (x125 * x195 + x194),
            x193 + x207 * x21 + x209 * x25 + x21 * (x207 + x208 * x21),
            x209 * x26 + x21 * x232 + x21 * (x21 * x233 + x232) + x240,
            x209 * x27 + x21 * x241 + x21 * (x195 * x204 + x241),
            0,
            0,
            0,
            x21 * x248 + x21 * (x21 * x249 + x248) + x240 + x25 * x250,
            x21 * x264
            + x21 * (x21 * x265 + x264)
            + x250 * x26
            + x261 * x3
            - x66 * (x257 * x3 + x262 - x66 * (x255 * x3 - x263 * x66))
            + x91 * (x251 * x3 - x254 - x258),
            x21 * x266 + x21 * (x195 * x245 + x266) + x250 * x27,
            0,
            0,
            0,
            0,
            0,
            0,
            x135 * x22 + x21 * x302 + x318,
            x180 * x22 + x21 * x332 + x342,
            x194 * x22 + x21 * x345 + x346,
            x207 * x22 + x21 * x354 + x358,
            x21 * x368 + x22 * x232 + x375,
            x21 * x377 + x22 * x241 + x378,
            0,
            0,
            0,
            x21 * x383 + x22 * x248 + x386,
            x21 * x392 + x22 * x264 + x395,
            x21 * x397 + x22 * x266 + x398,
            0,
            0,
            0,
            0,
            0,
            0,
            x135 * x23 + x21 * x443 + x465,
            x180 * x23 + x21 * x486 + x500,
            x194 * x23 + x21 * x506 + x516,
            x207 * x23 + x21 * x527 + x531,
            x21 * x545 + x23 * x232 + x554,
            x21 * x558 + x23 * x241 + x565,
            x574,
            x576,
            x586,
            x21 * x592 + x23 * x248 + x595,
            x21 * x602 + x23 * x264 + x605,
            x21 * x608 + x23 * x266 + x612,
            x618,
            x620,
            x625,
            x630,
            x632,
            x638,
            x22 * x302 + x651,
            x22 * x332 + x659,
            x22 * x345 + x660,
            x22 * x354 + x664,
            x22 * x368 + x670,
            x22 * x377 + x671,
            0,
            0,
            0,
            x22 * x383 + x674,
            x22 * x392 + x677,
            x22 * x397 + x678,
            0,
            0,
            0,
            0,
            0,
            0,
            x22 * x443 + x704,
            x22 * x486 + x719,
            x22 * x506 + x729,
            x22 * x527 + x734,
            x22 * x545 + x743,
            x22 * x558 + x751,
            x758,
            x760,
            x767,
            x22 * x592 + x771,
            x22 * x602 + x775,
            x22 * x608 + x781,
            x786,
            x788,
            x793,
            x797,
            x799,
            x803,
            x23 * x443 + x828,
            x23 * x486 + x842,
            x23 * x506 + x850,
            x23 * x527 + x854,
            x23 * x545 + x862,
            x23 * x558 + x868,
            2 * x869 + x873,
            2 * x874 + x875,
            2 * x876 + x882,
            x23 * x592 + x885,
            x23 * x602 + x888,
            x23 * x608 + x892,
            2 * x893 + x896,
            2 * x897 + x898,
            2 * x899 + x903,
            2 * x904 + x907,
            2 * x908 + x909,
            2 * x910 + x913,
            x21 * x301 + x21 * (x21 * x914 + x301) + x318,
            x21 * x331 + x21 * (x21 * x915 + x331) + x342,
            x21 * x344 + x21 * (x195 * x269 + x344) + x346,
            x21 * x353 + x21 * (x21 * x916 + x353) + x358,
            x21 * x367 + x21 * (x21 * x917 + x367) + x375,
            x21 * x376 + x21 * (x195 * x350 + x376) + x378,
            0,
            0,
            0,
            x21 * x382 + x21 * (x21 * x918 + x382) + x386,
            x21 * x391 + x21 * (x21 * x919 + x391) + x395,
            x21 * x396 + x21 * (x195 * x379 + x396) + x398,
            0,
            0,
            0,
            0,
            0,
            0,
            x21 * x921 + x651,
            x21 * x923 + x659,
            x21 * x925 + x660,
            x21 * x927 + x664,
            x21 * x929 + x670,
            x21 * x931 + x671,
            0,
            0,
            0,
            x21 * x933 + x674,
            x21 * x935 + x677,
            x21 * x937 + x678,
            0,
            0,
            0,
            0,
            0,
            0,
            x21 * x939 + x704,
            x21 * x941 + x719,
            x21 * x943 + x729,
            x21 * x945 + x734,
            x21 * x947 + x743,
            x21 * x949 + x751,
            x21 * x950 + x757,
            x21 * x951 + x759,
            x21 * x952 + x766,
            x21 * x954 + x771,
            x21 * x956 + x775,
            x21 * x958 + x781,
            x21 * x959 + x785,
            x21 * x960 + x787,
            x21 * x961 + x792,
            x21 * x962 + x796,
            x21 * x963 + x798,
            x21 * x964 + x802,
            x22 * x920 + x22 * x921 + x25 * x965 + x267 * x646 - x273 * x650 + 2 * x303,
            x22 * x922 + x22 * x923 + x26 * x965 + x966,
            x22 * x924 + x22 * x925 + x27 * x965,
            x22 * x926 + x22 * x927 + x25 * x967 + x966,
            x22 * x928 + x22 * x929 + x26 * x967 + x968,
            x22 * x930 + x22 * x931 + x27 * x967,
            0,
            0,
            0,
            x22 * x932 + x22 * x933 + x25 * x969 + x968,
            x22 * x934
            + x22 * x935
            + x26 * x969
            + x267 * x675
            - x273 * x676
            + 2 * x393
            + x72
            * (
                x267 * x665
                - x273 * x666
                + 2 * x370
                + x70
                * (
                    x267 * x653
                    - x273 * x654
                    + 2 * x335
                    + x65 * (x267 * x642 - x273 * x648 + 2 * x316)
                )
            ),
            x22 * x936 + x22 * x937 + x27 * x969,
            0,
            0,
            0,
            0,
            0,
            0,
            x22 * x939 + x23 * x920 + x971,
            x22 * x941 + x23 * x922 + x973,
            x22 * x943 + x23 * x924 + x975,
            x22 * x945 + x23 * x926 + x977,
            x22 * x947 + x23 * x928 + x979,
            x22 * x949 + x23 * x930 + x981,
            x983,
            x984,
            x986,
            x22 * x954 + x23 * x932 + x988,
            x22 * x956 + x23 * x934 + x989,
            x22 * x958 + x23 * x936 + x991,
            x993,
            x994,
            x996,
            x998,
            x999,
            x1000,
            x1002 + x23 * x939,
            x1004 + x23 * x941,
            x1006 + x23 * x943,
            x1008 + x23 * x945,
            x1010 + x23 * x947,
            x1012 + x23 * x949,
            2 * x1013 + x1015,
            2 * x1016 + x1017,
            2 * x1018 + x1020,
            x1022 + x23 * x954,
            x1023 + x23 * x956,
            x1025 + x23 * x958,
            2 * x1026 + x1028,
            2 * x1029 + x1030,
            2 * x1031 + x1033,
            2 * x1034 + x1036,
            2 * x1037 + x1038,
            2 * x1039 + x1040,
            x21 * x442 + x21 * (x1041 * x21 + x442) + x465,
            x21 * x485 + x21 * (x1042 * x21 + x485) + x500,
            x21 * x505 + x21 * (x1043 * x21 + x505) + x516,
            x21 * x526 + x21 * (x1044 * x21 + x526) + x531,
            x21 * x544 + x21 * (x1045 * x21 + x544) + x554,
            x21 * x557 + x21 * (x1046 * x21 + x557) + x565,
            x21 * (x1047 * x21 + x570) + x574,
            x21 * (x1048 * x21 + x575) + x576,
            x21 * (x1050 * x21 + x581) + x586,
            x21 * x591 + x21 * (x1051 * x21 + x591) + x595,
            x21 * x601 + x21 * (x1052 * x21 + x601) + x605,
            x21 * x607 + x21 * (x1053 * x21 + x607) + x612,
            x21 * (x1054 * x21 + x615) + x618,
            x21 * (x1055 * x21 + x619) + x620,
            x21 * (x1057 * x21 + x622) + x625,
            x21 * (x1059 * x21 + x627) + x630,
            x21 * (x1060 * x21 + x631) + x632,
            x21 * (x1061 * x21 + x637) + x638,
            x1062 * x21 + x22 * x442 + x703,
            x1063 * x21 + x22 * x485 + x718,
            x1064 * x21 + x22 * x505 + x728,
            x1065 * x21 + x22 * x526 + x733,
            x1066 * x21 + x22 * x544 + x742,
            x1067 * x21 + x22 * x557 + x750,
            x1068 * x21 + x758,
            x1069 * x21 + x760,
            x1070 * x21 + x767,
            x1071 * x21 + x22 * x591 + x770,
            x1072 * x21 + x22 * x601 + x774,
            x1073 * x21 + x22 * x607 + x780,
            x1074 * x21 + x786,
            x1075 * x21 + x788,
            x1076 * x21 + x793,
            x1077 * x21 + x797,
            x1078 * x21 + x799,
            x1079 * x21 + x803,
            x1081 * x21 + x828,
            x1083 * x21 + x842,
            x1085 * x21 + x850,
            x1087 * x21 + x854,
            x1089 * x21 + x862,
            x1091 * x21 + x868,
            x1093 * x21 + x869 + x873,
            x1095 * x21 + x874 + x875,
            x1097 * x21 + x876 + x882,
            x1099 * x21 + x885,
            x1101 * x21 + x888,
            x1103 * x21 + x892,
            x1105 * x21 + x893 + x896,
            x1107 * x21 + x897 + x898,
            x1109 * x21 + x899 + x903,
            x1111 * x21 + x904 + x907,
            x1113 * x21 + x908 + x909,
            x1115 * x21 + x910 + x913,
            x1062 * x22 + x22 * x938 + x971,
            x1063 * x22 + x22 * x940 + x973,
            x1064 * x22 + x22 * x942 + x975,
            x1065 * x22 + x22 * x944 + x977,
            x1066 * x22 + x22 * x946 + x979,
            x1067 * x22 + x22 * x948 + x981,
            x1068 * x22 + x983,
            x1069 * x22 + x984,
            x1070 * x22 + x986,
            x1071 * x22 + x22 * x953 + x988,
            x1072 * x22 + x22 * x955 + x989,
            x1073 * x22 + x22 * x957 + x991,
            x1074 * x22 + x993,
            x1075 * x22 + x994,
            x1076 * x22 + x996,
            x1077 * x22 + x998,
            x1078 * x22 + x999,
            x1000 + x1079 * x22,
            x1002 + x1081 * x22,
            x1004 + x1083 * x22,
            x1006 + x1085 * x22,
            x1008 + x1087 * x22,
            x1010 + x1089 * x22,
            x1012 + x1091 * x22,
            x1013 + x1015 + x1093 * x22,
            x1016 + x1017 + x1095 * x22,
            x1018 + x1020 + x1097 * x22,
            x1022 + x1099 * x22,
            x1023 + x1101 * x22,
            x1025 + x1103 * x22,
            x1026 + x1028 + x1105 * x22,
            x1029 + x1030 + x1107 * x22,
            x1031 + x1033 + x1109 * x22,
            x1034 + x1036 + x1111 * x22,
            x1037 + x1038 + x1113 * x22,
            x1039 + x1040 + x1115 * x22,
            x1080 * x23
            + x1081 * x23
            + x1116 * x25
            + x399 * x817
            - x405 * x827
            + 2 * x444,
            x1082 * x23 + x1083 * x23 + x1116 * x26 + x1117,
            x1084 * x23 + x1085 * x23 + x1116 * x27 + x1118,
            x1086 * x23 + x1087 * x23 + x1117 + x1119 * x25,
            x1088 * x23 + x1089 * x23 + x1119 * x26 + x1120,
            x1090 * x23 + x1091 * x23 + x1119 * x27 + x1121,
            x1092 * x23 + x1093 * x23 + x1118 + x1122 * x25,
            x1094 * x23 + x1095 * x23 + x1121 + x1122 * x26,
            x1096 * x23 + x1097 * x23 + x1122 * x27 + x1123,
            x1098 * x23 + x1099 * x23 + x1120 + x1124 * x25,
            x1100 * x23
            + x1101 * x23
            + x1124 * x26
            + x399 * x886
            - x405 * x887
            + 2 * x603,
            x1102 * x23 + x1103 * x23 + x1124 * x27 + x1125,
            x1104 * x23 + x1105 * x23 + x1121 + x1126 * x25,
            x1106 * x23 + x1107 * x23 + x1125 + x1126 * x26,
            x1108 * x23 + x1109 * x23 + x1126 * x27 + x1127,
            x1110 * x23 + x1111 * x23 + x1123 + x1128 * x25,
            x1112 * x23 + x1113 * x23 + x1127 + x1128 * x26,
            x1114 * x23
            + x1115 * x23
            + x1128 * x27
            + x399 * x911
            - x405 * x912
            + 2 * x635
            + x72
            * (
                x399 * x877
                - x405 * x878
                + 2 * x583
                + x70
                * (
                    x399 * x844
                    - x405 * x845
                    + 2 * x512
                    + x65 * (x399 * x811 - x405 * x823 + 2 * x463)
                )
            ),
        ]
    )
    return S


def eri_1222(a, A, b, B, c, C, d, D):
    """Cartesian [pd|dd] 2-electron electron repulsion integral.

    Generated code; DO NOT modify by hand!"""

    x0 = a + b
    x1 = x0 ** (-1.0)
    x2 = -x1 * (a * A[0] + b * B[0])
    x3 = -x2 - A[0]
    x4 = 2 * c + 2 * d
    x5 = x4 ** (-1.0)
    x6 = numpy.pi**2.5
    x7 = c + d
    x8 = x0 * x7
    x9 = x0 + x7
    x10 = (x8 + numpy.sqrt(x9)) ** (-1.0)
    x11 = A[0] - B[0]
    x12 = A[1] - B[1]
    x13 = A[2] - B[2]
    x14 = numpy.exp(-a * b * x1 * (x11**2 + x12**2 + x13**2))
    x15 = x7 ** (-1.0)
    x16 = C[0] - D[0]
    x17 = C[1] - D[1]
    x18 = C[2] - D[2]
    x19 = x18**2
    x20 = numpy.exp(-c * d * x15 * (x16**2 + x17**2 + x19))
    x21 = x9 ** (-1.0)
    x22 = x15 * (c * C[0] + d * D[0])
    x23 = -x2 - x22
    x24 = x15 * (c * C[1] + d * D[1])
    x25 = -x1 * (a * A[1] + b * B[1])
    x26 = -x24 - x25
    x27 = -x1 * (a * A[2] + b * B[2])
    x28 = -x15 * (c * C[2] + d * D[2]) - x27
    x29 = x21 * x8 * (x23**2 + x26**2 + x28**2)
    x30 = boys(2, x29)
    x31 = -2 * x10 * x14 * x20 * x30 * x6
    x32 = x0 * x21
    x33 = boys(3, x29)
    x34 = 2 * x10 * x14 * x20 * x6
    x35 = x33 * x34
    x36 = x5 * (-x31 - x32 * x35)
    x37 = x22 - C[0]
    x38 = x30 * x34
    x39 = x23 * x32
    x40 = x35 * x39 + x37 * x38
    x41 = boys(4, x29)
    x42 = x34 * x41
    x43 = x35 * x37 + x39 * x42
    x44 = x32 * x43
    x45 = x23 * x44 + x36 + x37 * x40
    x46 = x32 * x45
    x47 = boys(1, x29)
    x48 = x5 * (2 * x10 * x14 * x20 * x47 * x6 - x32 * x38)
    x49 = x34 * x47
    x50 = x37 * x49 + x38 * x39
    x51 = x32 * x40
    x52 = x23 * x51 + x37 * x50 + x48
    x53 = 3 * x5
    x54 = 2 * x5
    x55 = x23 * x46 + x37 * x52 + x54 * (x50 - x51)
    x56 = -2 * x10 * x14 * x20 * x33 * x6
    x57 = x5 * (-x32 * x42 - x56)
    x58 = boys(5, x29)
    x59 = x34 * x58
    x60 = x37 * x42 + x39 * x59
    x61 = x32 * x60
    x62 = x23 * x61 + x37 * x43 + x57
    x63 = x32 * x62
    x64 = x23 * x63 + x37 * x45 + x54 * (x40 - x44)
    x65 = x37 * x55 + x39 * x64 + x53 * (-x46 + x52)
    x66 = -2 * x10 * x14 * x20 * x41 * x6
    x67 = x5 * (-x32 * x59 - x66)
    x68 = x34 * boys(6, x29)
    x69 = x37 * x59 + x39 * x68
    x70 = x32 * x69
    x71 = x23 * x70 + x37 * x60 + x67
    x72 = x32 * x71
    x73 = x23 * x72 + x37 * x62 + x54 * (x43 - x61)
    x74 = x37 * x64 + x39 * x73 + x53 * (x45 - x63)
    x75 = x21 * x7
    x76 = x74 * x75
    x77 = x73 * x75
    x78 = x71 * x75
    x79 = 2 * a + 2 * b
    x80 = x4 + x79
    x81 = x80 ** (-1.0)
    x82 = x23 * x75
    x83 = x3 * x59 - x68 * x82
    x84 = x69 * x75
    x85 = -x23 * x84 + x3 * x60 + x81 * x83
    x86 = 2 * x81
    x87 = -x23 * x78 + x3 * x62 + x85 * x86
    x88 = 3 * x81
    x89 = -x23 * x77 + x3 * x64 + x87 * x88
    x90 = 4 * x81
    x91 = -x23 * x76 + x3 * x65 + x89 * x90
    x92 = x75 * x91
    x93 = x32 * x52
    x94 = boys(0, x29)
    x95 = x5 * (2 * x10 * x14 * x20 * x6 * x94 - x32 * x49)
    x96 = x34 * x94
    x97 = x37 * x96 + x39 * x49
    x98 = x32 * x50
    x99 = x23 * x98 + x37 * x97 + x95
    x100 = x23 * x93 + x37 * x99 + x54 * (x97 - x98)
    x101 = x100 * x37 + x39 * x55 + x53 * (-x93 + x99)
    x102 = x65 * x75
    x103 = x64 * x75
    x104 = x62 * x75
    x105 = x59 * x82
    x106 = -x105 + x3 * x42
    x107 = x60 * x75
    x108 = x106 * x81 - x107 * x23 + x3 * x43
    x109 = -x104 * x23 + x108 * x86 + x3 * x45
    x110 = -x103 * x23 + x109 * x88 + x3 * x55
    x111 = x101 * x3 - x102 * x23 + x110 * x90
    x112 = x79 ** (-1.0)
    x113 = 2 * x112
    x114 = x112 * (x101 - x102)
    x115 = x112 * (-x103 + x55)
    x116 = x75 * x89
    x117 = x112 * (-x104 + x45)
    x118 = x75 * x87
    x119 = x112 * (-x107 + x43)
    x120 = x112 * (-x59 * x75 - x66)
    x121 = x75 * x83
    x122 = x106 * x3 + x120 - x121 * x23
    x123 = x75 * x85
    x124 = x108 * x3 + x119 + x122 * x81 - x123 * x23
    x125 = x109 * x3 + x117 - x118 * x23 + x124 * x86
    x126 = x110 * x3 + x115 - x116 * x23 + x125 * x88
    x127 = x111 * x3 + x114 + x126 * x90 - x23 * x92
    x128 = x112 * (x65 - x76)
    x129 = -2 * x10 * x14 * x20 * x58 * x6
    x130 = x5 * (-x129 - x32 * x68)
    x131 = x34 * boys(7, x29)
    x132 = x131 * x39 + x37 * x68
    x133 = x130 + x132 * x39 + x37 * x69
    x134 = x133 * x39 + x37 * x71 + x54 * (x60 - x70)
    x135 = x134 * x39 + x37 * x73 + x53 * (x62 - x72)
    x136 = -x131 * x82 + x3 * x68
    x137 = -x132 * x82 + x136 * x81 + x3 * x69
    x138 = -x133 * x82 + x137 * x86 + x3 * x71
    x139 = -x134 * x82 + x138 * x88 + x3 * x73
    x140 = x112 * (x64 - x77)
    x141 = x112 * (x62 - x78)
    x142 = x112 * (x60 - x84)
    x143 = x112 * (-x129 - x68 * x75)
    x144 = -x136 * x82 + x143 + x3 * x83
    x145 = -x137 * x82 + x142 + x144 * x81 + x3 * x85
    x146 = -x138 * x82 + x141 + x145 * x86 + x3 * x87
    x147 = -x139 * x82 + x140 + x146 * x88 + x3 * x89
    x148 = x110 * x75
    x149 = x55 * x75
    x150 = x45 * x75
    x151 = x42 * x82
    x152 = -x151 + x3 * x35
    x153 = x43 * x75
    x154 = x152 * x81 - x153 * x23 + x3 * x40
    x155 = -x150 * x23 + x154 * x86 + x3 * x52
    x156 = x100 * x3 - x149 * x23 + x155 * x88
    x157 = x112 * (x100 - x149)
    x158 = x112 * (-x150 + x52)
    x159 = x109 * x75
    x160 = x112 * (-x153 + x40)
    x161 = x112 * (-x42 * x75 - x56)
    x162 = x106 * x75
    x163 = x152 * x3 + x161 - x162 * x23
    x164 = x108 * x75
    x165 = x154 * x3 + x160 + x163 * x81 - x164 * x23
    x166 = x155 * x3 + x158 - x159 * x23 + x165 * x86
    x167 = -x148 * x23 + x156 * x3 + x157 + x166 * x88
    x168 = (
        x113 * (-x148 + x156)
        - x126 * x82
        + x167 * x3
        + x88
        * (
            x113 * (x155 - x159)
            - x125 * x82
            + x166 * x3
            + x86
            * (
                x113 * (x154 - x164)
                - x124 * x82
                + x165 * x3
                + x81
                * (
                    x113 * (2 * x10 * x14 * x20 * x3 * x33 * x6 - x151 - x162)
                    - x122 * x82
                    + x163 * x3
                )
            )
        )
    )
    x169 = x155 * x75
    x170 = x52 * x75
    x171 = x35 * x82
    x172 = -x171 + x3 * x38
    x173 = x40 * x75
    x174 = x172 * x81 - x173 * x23 + x3 * x50
    x175 = -x170 * x23 + x174 * x86 + x3 * x99
    x176 = x112 * (-x170 + x99)
    x177 = x112 * (-x173 + x50)
    x178 = x112 * (-x31 - x35 * x75)
    x179 = x152 * x75
    x180 = x172 * x3 + x178 - x179 * x23
    x181 = x154 * x75
    x182 = x174 * x3 + x177 + x180 * x81 - x181 * x23
    x183 = -x169 * x23 + x175 * x3 + x176 + x182 * x86
    x184 = (
        x113 * (-x169 + x175)
        - x166 * x82
        + x183 * x3
        + x86
        * (
            x113 * (x174 - x181)
            - x165 * x82
            + x182 * x3
            + x81
            * (
                x113 * (2 * x10 * x14 * x20 * x3 * x30 * x6 - x171 - x179)
                - x163 * x82
                + x180 * x3
            )
        )
    )
    x185 = x16 * x184
    x186 = x16 * x183
    x187 = x127 + x16 * x167 + x16 * (x167 + x186)
    x188 = x16 * x175
    x189 = x111 + x156 * x16 + x16 * (x156 + x188)
    x190 = x17 * x183
    x191 = x24 - C[1]
    x192 = x26 * x32
    x193 = x191 * x38 + x192 * x35
    x194 = x193 * x32
    x195 = x191 * x49 + x192 * x38
    x196 = x5 * (-x194 + x195)
    x197 = x194 * x23 + x195 * x37
    x198 = x191 * x35 + x192 * x42
    x199 = x198 * x32
    x200 = x193 * x37 + x199 * x23
    x201 = x200 * x32
    x202 = x196 + x197 * x37 + x201 * x23
    x203 = x202 * x75
    x204 = x195 * x32
    x205 = x191 * x96 + x192 * x49
    x206 = x5 * (-x204 + x205)
    x207 = x204 * x23 + x205 * x37
    x208 = x197 * x32
    x209 = x206 + x207 * x37 + x208 * x23
    x210 = x112 * (-x203 + x209)
    x211 = x198 * x75
    x212 = x211 * x23
    x213 = x193 * x3 - x212
    x214 = x200 * x75
    x215 = x197 * x3 + x213 * x81 - x214 * x23
    x216 = -x203 * x23 + x209 * x3 + x215 * x86
    x217 = x5 * (x193 - x199)
    x218 = x191 * x42 + x192 * x59
    x219 = x218 * x32
    x220 = x198 * x37 + x219 * x23
    x221 = x220 * x32
    x222 = x200 * x37 + x217 + x221 * x23
    x223 = x222 * x75
    x224 = x218 * x75
    x225 = x224 * x23
    x226 = x198 * x3 - x225
    x227 = x220 * x75
    x228 = x200 * x3 + x226 * x81 - x227 * x23
    x229 = x202 * x3 - x223 * x23 + x228 * x86
    x230 = x229 * x75
    x231 = x112 * (x197 - x214)
    x232 = x112 * (x193 - x211)
    x233 = x226 * x75
    x234 = x213 * x3 - x23 * x233 + x232
    x235 = x228 * x75
    x236 = x215 * x3 - x23 * x235 + x231 + x234 * x81
    x237 = x210 + x216 * x3 - x23 * x230 + x236 * x86
    x238 = x190 + x237
    x239 = x202 * x37 + x222 * x39 + x54 * (x197 - x201)
    x240 = x239 * x75
    x241 = x202 * x39 + x209 * x37 + x54 * (x207 - x208)
    x242 = x112 * (-x240 + x241)
    x243 = x229 * x88 - x23 * x240 + x241 * x3
    x244 = x5 * (x198 - x219)
    x245 = x191 * x59 + x192 * x68
    x246 = x245 * x32
    x247 = x218 * x37 + x23 * x246
    x248 = x247 * x32
    x249 = x220 * x37 + x23 * x248 + x244
    x250 = x222 * x37 + x249 * x39 + x54 * (x200 - x221)
    x251 = x250 * x75
    x252 = x249 * x75
    x253 = x245 * x75
    x254 = x218 * x3 - x23 * x253
    x255 = x247 * x75
    x256 = x220 * x3 - x23 * x255 + x254 * x81
    x257 = x222 * x3 - x23 * x252 + x256 * x86
    x258 = -x23 * x251 + x239 * x3 + x257 * x88
    x259 = x258 * x75
    x260 = x112 * (x202 - x223)
    x261 = x257 * x75
    x262 = x112 * (x200 - x227)
    x263 = x112 * (x198 - x224)
    x264 = x254 * x75
    x265 = x226 * x3 - x23 * x264 + x263
    x266 = x256 * x75
    x267 = x228 * x3 - x23 * x266 + x262 + x265 * x81
    x268 = x229 * x3 - x23 * x261 + x260 + x267 * x86
    x269 = -x23 * x259 + x242 + x243 * x3 + x268 * x88
    x270 = x16 * x238 + x167 * x17 + x269
    x271 = x17 * x175
    x272 = x216 + x271
    x273 = x156 * x17 + x16 * x272 + x243
    x274 = x17 * x184
    x275 = (
        x113 * (x216 - x230)
        + x237 * x3
        - x268 * x82
        + x86
        * (
            x113 * (x215 - x235)
            + x236 * x3
            - x267 * x82
            + x81 * (x113 * (x193 * x3 - x212 - x233) + x234 * x3 - x265 * x82)
        )
    )
    x276 = x274 + x275
    x277 = x112 * (x222 - x252)
    x278 = x5 * (x218 - x246)
    x279 = x131 * x192 + x191 * x68
    x280 = x245 * x37 + x279 * x39
    x281 = x247 * x37 + x278 + x280 * x39
    x282 = x245 * x3 - x279 * x82
    x283 = x247 * x3 - x280 * x82 + x282 * x81
    x284 = x249 * x3 - x281 * x82 + x283 * x86
    x285 = x112 * (x220 - x255)
    x286 = x112 * (x218 - x253)
    x287 = x254 * x3 - x282 * x82 + x286
    x288 = x256 * x3 - x283 * x82 + x285 + x287 * x81
    x289 = x257 * x3 + x277 - x284 * x82 + x288 * x86
    x290 = x112 * (x239 - x251)
    x291 = x249 * x37 + x281 * x39 + x54 * (x220 - x248)
    x292 = (
        x113 * (x243 - x259)
        + x269 * x3
        - x82
        * (x258 * x3 + x289 * x88 + x290 - x82 * (x250 * x3 + x284 * x88 - x291 * x82))
        + x88
        * (
            x113 * (x229 - x261)
            + x268 * x3
            - x289 * x82
            + x86
            * (
                x113 * (x228 - x266)
                + x267 * x3
                - x288 * x82
                + x81 * (x113 * (x198 * x3 - x225 - x264) + x265 * x3 - x287 * x82)
            )
        )
    )
    x293 = x167 * x18 + x18 * x186
    x294 = x156 * x18 + x18 * x188
    x295 = x191 * x193 + x199 * x26 + x36
    x296 = x295 * x32
    x297 = x191 * x195 + x194 * x26 + x48
    x298 = x5 * (-x296 + x297)
    x299 = x23 * x296 + x297 * x37
    x300 = x191 * x198 + x219 * x26 + x57
    x301 = x300 * x32
    x302 = x23 * x301 + x295 * x37
    x303 = x298 + x299 * x37 + x302 * x39
    x304 = x303 * x75
    x305 = x297 * x32
    x306 = x191 * x205 + x204 * x26 + x95
    x307 = x5 * (-x305 + x306)
    x308 = x23 * x305 + x306 * x37
    x309 = x299 * x39 + x307 + x308 * x37
    x310 = x112 * (-x304 + x309)
    x311 = x300 * x75
    x312 = x23 * x311
    x313 = x295 * x3 - x312
    x314 = x302 * x75
    x315 = -x23 * x314 + x299 * x3 + x313 * x81
    x316 = -x23 * x304 + x3 * x309 + x315 * x86
    x317 = x5 * (x295 - x301)
    x318 = x191 * x218 + x246 * x26 + x67
    x319 = x318 * x32
    x320 = x23 * x319 + x300 * x37
    x321 = x302 * x37 + x317 + x320 * x39
    x322 = x321 * x75
    x323 = x318 * x75
    x324 = -x23 * x323 + x3 * x300
    x325 = x320 * x75
    x326 = -x23 * x325 + x3 * x302 + x324 * x81
    x327 = -x23 * x322 + x3 * x303 + x326 * x86
    x328 = x327 * x75
    x329 = x112 * (x299 - x314)
    x330 = x112 * (x295 - x311)
    x331 = x324 * x75
    x332 = -x23 * x331 + x3 * x313 + x330
    x333 = x326 * x75
    x334 = -x23 * x333 + x3 * x315 + x329 + x332 * x81
    x335 = -x23 * x328 + x3 * x316 + x310 + x334 * x86
    x336 = x17 * x237 + x335
    x337 = x17 * x238 + x336
    x338 = x17 * x216 + x316
    x339 = x17 * x272 + x338
    x340 = x112 * (x300 - x323)
    x341 = x130 + x191 * x245 + x192 * x279
    x342 = x3 * x318 - x341 * x82
    x343 = x3 * x324 + x340 - x342 * x82
    x344 = x112 * (x302 - x325)
    x345 = x318 * x37 + x341 * x39
    x346 = x3 * x320 + x342 * x81 - x345 * x82
    x347 = x3 * x326 + x343 * x81 + x344 - x346 * x82
    x348 = x112 * (x303 - x322)
    x349 = x5 * (x300 - x319)
    x350 = x320 * x37 + x345 * x39 + x349
    x351 = (
        x113 * (x316 - x328)
        + x3 * x335
        - x82
        * (x3 * x327 + x347 * x86 + x348 - x82 * (x3 * x321 + x346 * x86 - x350 * x82))
        + x86
        * (
            x113 * (x315 - x333)
            + x3 * x334
            - x347 * x82
            + x81 * (x113 * (x295 * x3 - x312 - x331) + x3 * x332 - x343 * x82)
        )
    )
    x352 = x17 * x275 + x351
    x353 = x18 * x237
    x354 = x18 * x190 + x353
    x355 = x18 * x216
    x356 = x18 * x271 + x355
    x357 = x18 * x275
    x358 = x183 * x19
    x359 = x11 * x19
    x360 = x197 * x75
    x361 = x112 * (x207 - x360)
    x362 = x193 * x75
    x363 = x112 * (x195 - x362)
    x364 = x23 * x362
    x365 = x195 * x3 - x364
    x366 = x213 * x75
    x367 = -x23 * x366 + x3 * x365 + x363
    x368 = x207 * x3 - x23 * x360 + x365 * x81
    x369 = x215 * x75
    x370 = -x23 * x369 + x3 * x368 + x361 + x367 * x81
    x371 = x16 * x370
    x372 = x16 * x237 + x16 * (x237 + x371) + x269
    x373 = x16 * x368
    x374 = x16 * x216 + x16 * (x216 + x373) + x243
    x375 = (
        x113 * (x368 - x369)
        - x236 * x82
        + x3 * x370
        + x81 * (x113 * (x195 * x3 - x364 - x366) - x234 * x82 + x3 * x367)
    )
    x376 = x16 * x375
    x377 = x17 * x370
    x378 = x299 * x75
    x379 = x112 * (x308 - x378)
    x380 = x295 * x75
    x381 = x112 * (x297 - x380)
    x382 = x23 * x380
    x383 = x297 * x3 - x382
    x384 = x313 * x75
    x385 = -x23 * x384 + x3 * x383 + x381
    x386 = -x23 * x378 + x3 * x308 + x383 * x81
    x387 = x315 * x75
    x388 = -x23 * x387 + x3 * x386 + x379 + x385 * x81
    x389 = x377 + x388
    x390 = x16 * x389 + x336
    x391 = x17 * x368
    x392 = x386 + x391
    x393 = x16 * x392 + x338
    x394 = x17 * x375
    x395 = (
        x113 * (x386 - x387)
        + x3 * x388
        - x334 * x82
        + x81 * (x113 * (x297 * x3 - x382 - x384) + x3 * x385 - x332 * x82)
    )
    x396 = x394 + x395
    x397 = x18 * x371 + x353
    x398 = x18 * x373 + x355
    x399 = x191 * x297 + 2 * x196 + x26 * x296
    x400 = x191 * x295 + 2 * x217 + x26 * x301
    x401 = x37 * x399 + x39 * x400
    x402 = x401 * x75
    x403 = x191 * x306 + 2 * x206 + x26 * x305
    x404 = x37 * x403 + x39 * x399
    x405 = x112 * (-x402 + x404)
    x406 = x400 * x75
    x407 = x112 * (x399 - x406)
    x408 = x23 * x406
    x409 = x3 * x399 - x408
    x410 = x191 * x300 + 2 * x244 + x26 * x319
    x411 = x410 * x75
    x412 = -x23 * x411 + x3 * x400
    x413 = x412 * x75
    x414 = -x23 * x413 + x3 * x409 + x407
    x415 = -x23 * x402 + x3 * x404 + x409 * x81
    x416 = x37 * x400 + x39 * x410
    x417 = x416 * x75
    x418 = -x23 * x417 + x3 * x401 + x412 * x81
    x419 = x418 * x75
    x420 = -x23 * x419 + x3 * x415 + x405 + x414 * x81
    x421 = x17 * x388 + x420
    x422 = x17 * x389 + x421
    x423 = x17 * x386 + x415
    x424 = x17 * x392 + x423
    x425 = x112 * (x400 - x411)
    x426 = x191 * x318 + x192 * x341 + 2 * x278
    x427 = x3 * x410 - x426 * x82
    x428 = x3 * x412 + x425 - x427 * x82
    x429 = x112 * (x401 - x417)
    x430 = x37 * x410 + x39 * x426
    x431 = (
        x113 * (x415 - x419)
        + x17 * x395
        + x3 * x420
        + x81 * (x113 * (x3 * x399 - x408 - x413) + x3 * x414 - x428 * x82)
        - x82
        * (x3 * x418 + x428 * x81 + x429 - x82 * (x3 * x416 + x427 * x81 - x430 * x82))
    )
    x432 = x18 * x388
    x433 = x18 * x377 + x432
    x434 = x18 * x386
    x435 = x18 * x391 + x434
    x436 = x18 * x395
    x437 = x19 * x370
    x438 = x297 * x75
    x439 = x112 * (x306 - x438)
    x440 = x23 * x438
    x441 = x3 * x306 - x440
    x442 = x383 * x75
    x443 = -x23 * x442 + x3 * x441 + x439
    x444 = x16 * x443
    x445 = x16 * x388 + x16 * (x388 + x444) + x335
    x446 = x16 * x441
    x447 = x16 * x386 + x16 * (x386 + x446) + x316
    x448 = x113 * (x3 * x306 - x440 - x442) + x3 * x443 - x385 * x82
    x449 = x16 * x448
    x450 = x17 * x443
    x451 = x399 * x75
    x452 = x112 * (x403 - x451)
    x453 = x23 * x451
    x454 = x3 * x403 - x453
    x455 = x409 * x75
    x456 = -x23 * x455 + x3 * x454 + x452
    x457 = x450 + x456
    x458 = x16 * x457 + x421
    x459 = x17 * x441
    x460 = x454 + x459
    x461 = x16 * x460 + x423
    x462 = x17 * x448
    x463 = x113 * (x3 * x403 - x453 - x455) + x3 * x456 - x414 * x82
    x464 = x462 + x463
    x465 = x18 * x444 + x432
    x466 = x18 * x446 + x434
    x467 = x191 * x403 + x192 * x399 + 3 * x307
    x468 = x191 * x399 + x192 * x400 + 3 * x298
    x469 = x468 * x75
    x470 = x23 * x469
    x471 = x191 * x400 + x192 * x410 + 3 * x317
    x472 = x471 * x75
    x473 = -x23 * x472 + x3 * x468
    x474 = x473 * x75
    x475 = x112 * (x467 - x469)
    x476 = x3 * x467 - x470
    x477 = -x23 * x474 + x3 * x476 + x475
    x478 = x112 * (x468 - x472)
    x479 = x191 * x410 + x192 * x426 + 3 * x349
    x480 = x17 * x456 + x17 * x457 + x477
    x481 = x17 * x454 + x17 * x460 + x476
    x482 = x18 * x450 + x18 * x456
    x483 = x18 * x454 + x18 * x459
    x484 = x19 * x443
    x485 = -x25 - A[1]
    x486 = x149 * x26
    x487 = x100 * x485 - x486
    x488 = x103 * x26
    x489 = x485 * x55 - x488
    x490 = x489 * x75
    x491 = x150 * x26
    x492 = x485 * x52 - x491
    x493 = x104 * x26
    x494 = x45 * x485 - x493
    x495 = x494 * x75
    x496 = x26 * x75
    x497 = x42 * x496
    x498 = x35 * x485 - x497
    x499 = x496 * x59
    x500 = x42 * x485 - x499
    x501 = x500 * x75
    x502 = -x23 * x501 + x3 * x498
    x503 = x153 * x26
    x504 = x40 * x485 - x503
    x505 = x107 * x26
    x506 = x43 * x485 - x505
    x507 = x506 * x75
    x508 = -x23 * x507 + x3 * x504 + x502 * x81
    x509 = -x23 * x495 + x3 * x492 + x508 * x86
    x510 = -x23 * x490 + x3 * x487 + x509 * x88
    x511 = x170 * x26
    x512 = x485 * x99 - x511
    x513 = x492 * x75
    x514 = x35 * x496
    x515 = x38 * x485 - x514
    x516 = x498 * x75
    x517 = -x23 * x516 + x3 * x515
    x518 = x173 * x26
    x519 = x485 * x50 - x518
    x520 = x504 * x75
    x521 = -x23 * x520 + x3 * x519 + x517 * x81
    x522 = -x23 * x513 + x3 * x512 + x521 * x86
    x523 = x16 * x522
    x524 = x102 * x26
    x525 = x101 * x485 - x524
    x526 = -x26 * x76 + x485 * x65
    x527 = x526 * x75
    x528 = -x26 * x77 + x485 * x64
    x529 = x528 * x75
    x530 = -x26 * x78 + x485 * x62
    x531 = x530 * x75
    x532 = x485 * x59 - x496 * x68
    x533 = x532 * x75
    x534 = -x23 * x533 + x3 * x500
    x535 = -x26 * x84 + x485 * x60
    x536 = x535 * x75
    x537 = -x23 * x536 + x3 * x506 + x534 * x81
    x538 = -x23 * x531 + x3 * x494 + x537 * x86
    x539 = -x23 * x529 + x3 * x489 + x538 * x88
    x540 = -x23 * x527 + x3 * x525 + x539 * x90
    x541 = x16 * x510 + x16 * (x510 + x523) + x540
    x542 = x12 * x189 + x541
    x543 = x112 * (x101 * x485 - x524 - x527)
    x544 = x112 * (x100 * x485 - x486 - x490)
    x545 = x112 * (x485 * x52 - x491 - x495)
    x546 = x112 * (x40 * x485 - x503 - x507)
    x547 = x112 * (2 * x10 * x14 * x20 * x33 * x485 * x6 - x497 - x501)
    x548 = (
        x3 * x510
        - x539 * x82
        + x544
        + x88
        * (
            x3 * x509
            - x538 * x82
            + x545
            + x86
            * (x3 * x508 - x537 * x82 + x546 + x81 * (x3 * x502 - x534 * x82 + x547))
        )
    )
    x549 = x112 * (x485 * x99 - x511 - x513)
    x550 = x112 * (x485 * x50 - x518 - x520)
    x551 = x112 * (2 * x10 * x14 * x20 * x30 * x485 * x6 - x514 - x516)
    x552 = (
        x3 * x522
        - x509 * x82
        + x549
        + x86 * (x3 * x521 - x508 * x82 + x550 + x81 * (x3 * x517 - x502 * x82 + x551))
    )
    x553 = x16 * x552
    x554 = x112 * (x485 * x55 - x488 - x529)
    x555 = -x134 * x496 + x485 * x73
    x556 = -x133 * x496 + x485 * x71
    x557 = -x131 * x496 + x485 * x68
    x558 = x3 * x532 - x557 * x82
    x559 = -x132 * x496 + x485 * x69
    x560 = x3 * x535 + x558 * x81 - x559 * x82
    x561 = x3 * x530 - x556 * x82 + x560 * x86
    x562 = x3 * x528 - x555 * x82 + x561 * x88
    x563 = x112 * (x45 * x485 - x493 - x531)
    x564 = x112 * (x43 * x485 - x505 - x536)
    x565 = x112 * (2 * x10 * x14 * x20 * x41 * x485 * x6 - x499 - x533)
    x566 = -x135 * x496 + x485 * x74
    x567 = (
        x16 * x548
        + x16 * (x548 + x553)
        + x3 * x540
        + x543
        - x82 * (x3 * x526 + x562 * x90 - x566 * x82)
        + x90
        * (
            x3 * x539
            + x554
            - x562 * x82
            + x88
            * (
                x3 * x538
                - x561 * x82
                + x563
                + x86
                * (x3 * x537 - x560 * x82 + x564 + x81 * (x3 * x534 - x558 * x82 + x565))
            )
        )
    )
    x568 = x17 * x522
    x569 = -x203 * x26 + x209 * x485 + x492 * x81
    x570 = x202 * x485 - x223 * x26 + x494 * x81
    x571 = x570 * x75
    x572 = x193 * x485 - x211 * x26 + x498 * x81
    x573 = x198 * x485 - x224 * x26 + x500 * x81
    x574 = x573 * x75
    x575 = -x23 * x574 + x3 * x572
    x576 = x197 * x485 - x214 * x26 + x504 * x81
    x577 = x200 * x485 - x227 * x26 + x506 * x81
    x578 = x577 * x75
    x579 = -x23 * x578 + x3 * x576 + x575 * x81
    x580 = -x23 * x571 + x3 * x569 + x579 * x86
    x581 = x568 + x580
    x582 = -x240 * x26 + x241 * x485 + x489 * x81
    x583 = x239 * x485 - x251 * x26 + x528 * x81
    x584 = x583 * x75
    x585 = x222 * x485 - x252 * x26 + x530 * x81
    x586 = x585 * x75
    x587 = x218 * x485 - x253 * x26 + x532 * x81
    x588 = x587 * x75
    x589 = -x23 * x588 + x3 * x573
    x590 = x220 * x485 - x255 * x26 + x535 * x81
    x591 = x590 * x75
    x592 = -x23 * x591 + x3 * x577 + x589 * x81
    x593 = -x23 * x586 + x3 * x570 + x592 * x86
    x594 = -x23 * x584 + x3 * x582 + x593 * x88
    x595 = x16 * x581 + x17 * x510 + x594
    x596 = x12 * x273 + x595
    x597 = x17 * x552
    x598 = x112 * (x569 - x571)
    x599 = x112 * (x576 - x578)
    x600 = x112 * (x572 - x574)
    x601 = (
        x3 * x580
        - x593 * x82
        + x598
        + x86 * (x3 * x579 - x592 * x82 + x599 + x81 * (x3 * x575 - x589 * x82 + x600))
    )
    x602 = x597 + x601
    x603 = x112 * (x582 - x584)
    x604 = x112 * (x570 - x586)
    x605 = x249 * x485 - x281 * x496 + x556 * x81
    x606 = x245 * x485 - x279 * x496 + x557 * x81
    x607 = x3 * x587 - x606 * x82
    x608 = x247 * x485 - x280 * x496 + x559 * x81
    x609 = x3 * x590 + x607 * x81 - x608 * x82
    x610 = x3 * x585 - x605 * x82 + x609 * x86
    x611 = x112 * (x577 - x591)
    x612 = x112 * (x573 - x588)
    x613 = x250 * x485 - x291 * x496 + x555 * x81
    x614 = (
        x3 * x594
        + x603
        - x82 * (x3 * x583 + x610 * x88 - x613 * x82)
        + x88
        * (
            x3 * x593
            + x604
            - x610 * x82
            + x86
            * (x3 * x592 - x609 * x82 + x611 + x81 * (x3 * x589 - x607 * x82 + x612))
        )
    )
    x615 = x16 * x602 + x17 * x548 + x614
    x616 = x18 * x510 + x18 * x523
    x617 = x12 * x294 + x616
    x618 = x18 * x548 + x18 * x553
    x619 = -x26 * x304 + x309 * x485 + x570 * x86
    x620 = -x26 * x322 + x303 * x485 + x585 * x86
    x621 = x620 * x75
    x622 = -x26 * x311 + x295 * x485 + x573 * x86
    x623 = -x26 * x323 + x300 * x485 + x587 * x86
    x624 = x623 * x75
    x625 = -x23 * x624 + x3 * x622
    x626 = -x26 * x314 + x299 * x485 + x577 * x86
    x627 = -x26 * x325 + x302 * x485 + x590 * x86
    x628 = x627 * x75
    x629 = -x23 * x628 + x3 * x626 + x625 * x81
    x630 = -x23 * x621 + x3 * x619 + x629 * x86
    x631 = x17 * x580 + x630
    x632 = x17 * x581 + x631
    x633 = x12 * x339 + x632
    x634 = x112 * (x619 - x621)
    x635 = x112 * (x626 - x628)
    x636 = x112 * (x622 - x624)
    x637 = x318 * x485 - x341 * x496 + x606 * x86
    x638 = x3 * x623 - x637 * x82
    x639 = x320 * x485 - x345 * x496 + x608 * x86
    x640 = x3 * x627 + x638 * x81 - x639 * x82
    x641 = x321 * x485 - x350 * x496 + x605 * x86
    x642 = (
        x3 * x630
        + x634
        - x82 * (x3 * x620 + x640 * x86 - x641 * x82)
        + x86 * (x3 * x629 + x635 - x640 * x82 + x81 * (x3 * x625 + x636 - x638 * x82))
    )
    x643 = x17 * x601 + x642
    x644 = x17 * x602 + x643
    x645 = x18 * x580
    x646 = x18 * x568 + x645
    x647 = x12 * x356 + x646
    x648 = x18 * x601
    x649 = x18 * x597 + x648
    x650 = x12 * x19
    x651 = x19 * x522
    x652 = x175 * x650 + x651
    x653 = x19 * x552
    x654 = x195 * x485 - x26 * x362 + x515 * x81
    x655 = x572 * x75
    x656 = -x23 * x655 + x3 * x654
    x657 = x207 * x485 - x26 * x360 + x519 * x81
    x658 = x576 * x75
    x659 = -x23 * x658 + x3 * x657 + x656 * x81
    x660 = x16 * x659
    x661 = x16 * x580 + x16 * (x580 + x660) + x594
    x662 = x12 * x374 + x661
    x663 = x112 * (x657 - x658)
    x664 = x112 * (x654 - x655)
    x665 = x3 * x659 - x579 * x82 + x663 + x81 * (x3 * x656 - x575 * x82 + x664)
    x666 = x16 * x665
    x667 = x16 * x601 + x16 * (x601 + x666) + x614
    x668 = x17 * x659
    x669 = -x26 * x380 + x297 * x485 + x572 * x86
    x670 = x622 * x75
    x671 = -x23 * x670 + x3 * x669
    x672 = -x26 * x378 + x308 * x485 + x576 * x86
    x673 = x626 * x75
    x674 = -x23 * x673 + x3 * x672 + x671 * x81
    x675 = x668 + x674
    x676 = x16 * x675 + x631
    x677 = x12 * x393 + x676
    x678 = x17 * x665
    x679 = x112 * (x672 - x673)
    x680 = x112 * (x669 - x670)
    x681 = x3 * x674 - x629 * x82 + x679 + x81 * (x3 * x671 - x625 * x82 + x680)
    x682 = x678 + x681
    x683 = x16 * x682 + x643
    x684 = x18 * x660 + x645
    x685 = x12 * x398 + x684
    x686 = x18 * x666 + x648
    x687 = -x26 * x406 + x399 * x485 + x622 * x88
    x688 = -x26 * x411 + x400 * x485 + x623 * x88
    x689 = x688 * x75
    x690 = -x23 * x689 + x3 * x687
    x691 = -x26 * x402 + x404 * x485 + x626 * x88
    x692 = -x26 * x417 + x401 * x485 + x627 * x88
    x693 = x692 * x75
    x694 = -x23 * x693 + x3 * x691 + x690 * x81
    x695 = x17 * x674 + x694
    x696 = x17 * x675 + x695
    x697 = x12 * x424 + x696
    x698 = x112 * (x691 - x693)
    x699 = x112 * (x687 - x689)
    x700 = x410 * x485 - x426 * x496 + x637 * x88
    x701 = x3 * x688 - x700 * x82
    x702 = x416 * x485 - x430 * x496 + x639 * x88
    x703 = (
        x17 * x681
        + x3 * x694
        + x698
        + x81 * (x3 * x690 + x699 - x701 * x82)
        - x82 * (x3 * x692 + x701 * x81 - x702 * x82)
    )
    x704 = x17 * x682 + x703
    x705 = x18 * x674
    x706 = x18 * x668 + x705
    x707 = x12 * x435 + x706
    x708 = x18 * x681
    x709 = x18 * x678 + x708
    x710 = x19 * x659
    x711 = x368 * x650 + x710
    x712 = x19 * x665
    x713 = -x26 * x438 + x306 * x485 + x654 * x86
    x714 = x669 * x75
    x715 = -x23 * x714 + x3 * x713
    x716 = x16 * x715
    x717 = x16 * x674 + x16 * (x674 + x716) + x630
    x718 = x12 * x447 + x717
    x719 = x112 * (x713 - x714)
    x720 = x3 * x715 - x671 * x82 + x719
    x721 = x16 * x720
    x722 = x16 * x681 + x16 * (x681 + x721) + x642
    x723 = x17 * x715
    x724 = -x26 * x451 + x403 * x485 + x669 * x88
    x725 = x687 * x75
    x726 = -x23 * x725 + x3 * x724
    x727 = x723 + x726
    x728 = x16 * x727 + x695
    x729 = x12 * x461 + x728
    x730 = x17 * x720
    x731 = x112 * (x724 - x725)
    x732 = x3 * x726 - x690 * x82 + x731
    x733 = x730 + x732
    x734 = x16 * x733 + x703
    x735 = x18 * x716 + x705
    x736 = x12 * x466 + x735
    x737 = x18 * x721 + x708
    x738 = -x26 * x469 + x467 * x485 + x687 * x90
    x739 = -x26 * x472 + x468 * x485 + x688 * x90
    x740 = x739 * x75
    x741 = -x23 * x740 + x3 * x738
    x742 = x17 * x726 + x17 * x727 + x741
    x743 = x12 * x481 + x742
    x744 = x112 * (x738 - x740)
    x745 = x471 * x485 - x479 * x496 + x700 * x90
    x746 = x17 * x732 + x17 * x733 + x3 * x741 + x744 - x82 * (x3 * x739 - x745 * x82)
    x747 = x18 * x723 + x18 * x726
    x748 = x12 * x483 + x747
    x749 = x18 * x730 + x18 * x732
    x750 = x19 * x715
    x751 = x441 * x650 + x750
    x752 = x19 * x720
    x753 = -x27 - A[2]
    x754 = x149 * x28
    x755 = x100 * x753 - x754
    x756 = x103 * x28
    x757 = x55 * x753 - x756
    x758 = x75 * x757
    x759 = x150 * x28
    x760 = x52 * x753 - x759
    x761 = x3 * x760
    x762 = x104 * x28
    x763 = x45 * x753 - x762
    x764 = x75 * x763
    x765 = x28 * x75
    x766 = x42 * x765
    x767 = x35 * x753 - x766
    x768 = x3 * x767
    x769 = x59 * x765
    x770 = x42 * x753 - x769
    x771 = x75 * x770
    x772 = x23 * x771
    x773 = x768 - x772
    x774 = x153 * x28
    x775 = x40 * x753 - x774
    x776 = x3 * x775
    x777 = x107 * x28
    x778 = x43 * x753 - x777
    x779 = x75 * x778
    x780 = x23 * x779
    x781 = x773 * x81 + x776 - x780
    x782 = -x23 * x764 + x761 + x781 * x86
    x783 = -x23 * x758 + x3 * x755 + x782 * x88
    x784 = x170 * x28
    x785 = x753 * x99 - x784
    x786 = x75 * x760
    x787 = x35 * x765
    x788 = x38 * x753 - x787
    x789 = x3 * x788
    x790 = x75 * x767
    x791 = x23 * x790
    x792 = x789 - x791
    x793 = x173 * x28
    x794 = x50 * x753 - x793
    x795 = x3 * x794
    x796 = x75 * x775
    x797 = -x23 * x796 + x792 * x81 + x795
    x798 = -x23 * x786 + x3 * x785 + x797 * x86
    x799 = x102 * x28
    x800 = x101 * x753 - x799
    x801 = -x28 * x76 + x65 * x753
    x802 = x75 * x801
    x803 = x3 * x757
    x804 = -x28 * x77 + x64 * x753
    x805 = x75 * x804
    x806 = x23 * x805
    x807 = x3 * x763
    x808 = -x28 * x78 + x62 * x753
    x809 = x75 * x808
    x810 = x23 * x809
    x811 = x3 * x770
    x812 = x59 * x753 - x68 * x765
    x813 = x75 * x812
    x814 = x23 * x813
    x815 = x811 - x814
    x816 = x3 * x778
    x817 = -x28 * x84 + x60 * x753
    x818 = x75 * x817
    x819 = x23 * x818
    x820 = x81 * x815 + x816 - x819
    x821 = x807 - x810 + x820 * x86
    x822 = x803 - x806 + x821 * x88
    x823 = -x23 * x802 + x3 * x800 + x822 * x90
    x824 = x16 * x783 + x16 * (x16 * x798 + x783) + x823
    x825 = x13 * x189 + x824
    x826 = x112 * (x101 * x753 - x799 - x802)
    x827 = x112 * (x100 * x753 - x754 - x758)
    x828 = x112 * (x52 * x753 - x759 - x764)
    x829 = x112 * (x40 * x753 - x774 - x779)
    x830 = x112 * (2 * x10 * x14 * x20 * x33 * x6 * x753 - x766 - x771)
    x831 = (
        x3 * x783
        - x82 * x822
        + x827
        + x88
        * (
            x3 * x782
            - x82 * x821
            + x828
            + x86
            * (x3 * x781 + x81 * (x3 * x773 - x815 * x82 + x830) - x82 * x820 + x829)
        )
    )
    x832 = x112 * (x753 * x99 - x784 - x786)
    x833 = x112 * (x50 * x753 - x793 - x796)
    x834 = x112 * (2 * x10 * x14 * x20 * x30 * x6 * x753 - x787 - x790)
    x835 = (
        x3 * x798
        - x782 * x82
        + x832
        + x86 * (x3 * x797 - x781 * x82 + x81 * (x3 * x792 - x773 * x82 + x834) + x833)
    )
    x836 = x112 * (x55 * x753 - x756 - x805)
    x837 = x3 * x804
    x838 = -x134 * x765 + x73 * x753
    x839 = x82 * x838
    x840 = x3 * x808
    x841 = -x133 * x765 + x71 * x753
    x842 = x82 * x841
    x843 = x3 * x812
    x844 = -x131 * x765 + x68 * x753
    x845 = x82 * x844
    x846 = x843 - x845
    x847 = x3 * x817
    x848 = -x132 * x765 + x69 * x753
    x849 = x82 * x848
    x850 = x81 * x846 + x847 - x849
    x851 = x840 - x842 + x850 * x86
    x852 = x837 - x839 + x851 * x88
    x853 = x112 * (x45 * x753 - x762 - x809)
    x854 = x112 * (x43 * x753 - x777 - x818)
    x855 = x112 * (2 * x10 * x14 * x20 * x41 * x6 * x753 - x769 - x813)
    x856 = -x135 * x765 + x74 * x753
    x857 = (
        x16 * x831
        + x16 * (x16 * x835 + x831)
        + x3 * x823
        - x82 * (x3 * x801 - x82 * x856 + x852 * x90)
        + x826
        + x90
        * (
            x3 * x822
            - x82 * x852
            + x836
            + x88
            * (
                x3 * x821
                - x82 * x851
                + x853
                + x86
                * (x3 * x820 + x81 * (x3 * x815 - x82 * x846 + x855) - x82 * x850 + x854)
            )
        )
    )
    x858 = x203 * x28
    x859 = x209 * x753 - x858
    x860 = x223 * x28
    x861 = x202 * x753 - x860
    x862 = x75 * x861
    x863 = x214 * x28
    x864 = x197 * x753 - x863
    x865 = x3 * x864
    x866 = x211 * x28
    x867 = x193 * x753 - x866
    x868 = x3 * x867
    x869 = x224 * x28
    x870 = x198 * x753 - x869
    x871 = x75 * x870
    x872 = x23 * x871
    x873 = x868 - x872
    x874 = x227 * x28
    x875 = x200 * x753 - x874
    x876 = x75 * x875
    x877 = -x23 * x876 + x81 * x873 + x865
    x878 = -x23 * x862 + x3 * x859 + x86 * x877
    x879 = x17 * x798 + x878
    x880 = x240 * x28
    x881 = x241 * x753 - x880
    x882 = x239 * x753 - x251 * x28
    x883 = x75 * x882
    x884 = x3 * x861
    x885 = x222 * x753 - x252 * x28
    x886 = x75 * x885
    x887 = x23 * x886
    x888 = x3 * x875
    x889 = x3 * x870
    x890 = x218 * x753 - x253 * x28
    x891 = x75 * x890
    x892 = x23 * x891
    x893 = x889 - x892
    x894 = x220 * x753 - x255 * x28
    x895 = x75 * x894
    x896 = x23 * x895
    x897 = x81 * x893 + x888 - x896
    x898 = x86 * x897 + x884 - x887
    x899 = -x23 * x883 + x3 * x881 + x88 * x898
    x900 = x16 * x879 + x17 * x783 + x899
    x901 = x13 * x273 + x900
    x902 = x112 * (x209 * x753 - x858 - x862)
    x903 = x112 * (x197 * x753 - x863 - x876)
    x904 = x112 * (x193 * x753 - x866 - x871)
    x905 = (
        x3 * x878
        - x82 * x898
        + x86 * (x3 * x877 + x81 * (x3 * x873 - x82 * x893 + x904) - x82 * x897 + x903)
        + x902
    )
    x906 = x17 * x835 + x905
    x907 = x112 * (x241 * x753 - x880 - x883)
    x908 = x112 * (x202 * x753 - x860 - x886)
    x909 = x3 * x885
    x910 = x249 * x753 - x281 * x765
    x911 = x82 * x910
    x912 = x3 * x894
    x913 = x3 * x890
    x914 = x245 * x753 - x279 * x765
    x915 = x82 * x914
    x916 = x913 - x915
    x917 = x247 * x753 - x280 * x765
    x918 = x82 * x917
    x919 = x81 * x916 + x912 - x918
    x920 = x86 * x919 + x909 - x911
    x921 = x112 * (x200 * x753 - x874 - x895)
    x922 = x112 * (x198 * x753 - x869 - x891)
    x923 = x250 * x753 - x291 * x765
    x924 = (
        x3 * x899
        - x82 * (x3 * x882 - x82 * x923 + x88 * x920)
        + x88
        * (
            x3 * x898
            - x82 * x920
            + x86
            * (x3 * x897 + x81 * (x3 * x893 - x82 * x916 + x922) - x82 * x919 + x921)
            + x908
        )
        + x907
    )
    x925 = x16 * x906 + x17 * x831 + x924
    x926 = x763 * x81
    x927 = x770 * x81
    x928 = x768 * x81 - x82 * x927
    x929 = x778 * x81
    x930 = x776 * x81 + x81 * x928 - x82 * x929
    x931 = x761 * x81 - x82 * x926 + x86 * x930
    x932 = x18 * x798 + x931
    x933 = x81 * x811 - x81 * x814
    x934 = x81 * x816 - x81 * x819 + x81 * x933
    x935 = x807 * x81 - x81 * x810 + x86 * x934
    x936 = x803 * x81 - x806 * x81 + x88 * x935
    x937 = x16 * x932 + x18 * x783 + x936
    x938 = x13 * x294 + x937
    x939 = x112 * (-x75 * x926 + x760 * x81)
    x940 = x112 * (-x75 * x929 + x775 * x81)
    x941 = x112 * (-x75 * x927 + x767 * x81)
    x942 = (
        x3 * x931
        - x82 * x935
        + x86 * (x3 * x930 + x81 * (x3 * x928 - x82 * x933 + x941) - x82 * x934 + x940)
        + x939
    )
    x943 = x18 * x835 + x942
    x944 = x805 * x81
    x945 = x112 * (x757 * x81 - x944)
    x946 = x809 * x81
    x947 = x112 * (x763 * x81 - x946)
    x948 = x81 * x843 - x81 * x845
    x949 = x81 * x847 - x81 * x849 + x81 * x948
    x950 = x81 * x840 - x81 * x842 + x86 * x949
    x951 = x81 * x818
    x952 = x112 * (x778 * x81 - x951)
    x953 = x81 * x813
    x954 = x112 * (x770 * x81 - x953)
    x955 = (
        x3 * x936
        - x82 * (x81 * x837 - x81 * x839 + x88 * x950)
        + x88
        * (
            x3 * x935
            - x82 * x950
            + x86
            * (x3 * x934 + x81 * (x3 * x933 - x82 * x948 + x954) - x82 * x949 + x952)
            + x947
        )
        + x945
    )
    x956 = x16 * x943 + x18 * x831 + x955
    x957 = x28 * x304
    x958 = x309 * x753 - x957
    x959 = -x28 * x322 + x303 * x753
    x960 = x75 * x959
    x961 = x28 * x314
    x962 = x299 * x753 - x961
    x963 = x3 * x962
    x964 = x28 * x311
    x965 = x295 * x753 - x964
    x966 = x3 * x965
    x967 = -x28 * x323 + x300 * x753
    x968 = x75 * x967
    x969 = x23 * x968
    x970 = x966 - x969
    x971 = -x28 * x325 + x302 * x753
    x972 = x75 * x971
    x973 = x23 * x972
    x974 = x81 * x970 + x963 - x973
    x975 = -x23 * x960 + x3 * x958 + x86 * x974
    x976 = x17 * x878 + x975
    x977 = x17 * x879 + x976
    x978 = x13 * x339 + x977
    x979 = x112 * (x309 * x753 - x957 - x960)
    x980 = x112 * (x299 * x753 - x961 - x972)
    x981 = x112 * (x295 * x753 - x964 - x968)
    x982 = x3 * x967
    x983 = x318 * x753 - x341 * x765
    x984 = x82 * x983
    x985 = x982 - x984
    x986 = x3 * x971
    x987 = x320 * x753 - x345 * x765
    x988 = x82 * x987
    x989 = x81 * x985 + x986 - x988
    x990 = x321 * x753 - x350 * x765
    x991 = (
        x3 * x975
        - x82 * (x3 * x959 - x82 * x990 + x86 * x989)
        + x86 * (x3 * x974 + x81 * (x3 * x970 - x82 * x985 + x981) - x82 * x989 + x980)
        + x979
    )
    x992 = x17 * x905 + x991
    x993 = x17 * x906 + x992
    x994 = x81 * x889 - x81 * x892
    x995 = x81 * x888 - x81 * x896 + x81 * x994
    x996 = x81 * x884 - x81 * x887 + x86 * x995
    x997 = x18 * x878 + x996
    x998 = x17 * x932 + x997
    x999 = x13 * x356 + x998
    x1000 = x81 * x886
    x1001 = x112 * (-x1000 + x81 * x861)
    x1002 = x81 * x895
    x1003 = x112 * (-x1002 + x81 * x875)
    x1004 = x81 * x891
    x1005 = x112 * (-x1004 + x81 * x870)
    x1006 = x81 * x913 - x81 * x915
    x1007 = x1006 * x81 + x81 * x912 - x81 * x918
    x1008 = (
        x1001
        + x3 * x996
        - x82 * (x1007 * x86 + x81 * x909 - x81 * x911)
        + x86
        * (x1003 - x1007 * x82 + x3 * x995 + x81 * (x1005 - x1006 * x82 + x3 * x994))
    )
    x1009 = x1008 + x18 * x905
    x1010 = x1009 + x17 * x943
    x1011 = x13 * x19
    x1012 = x80 ** (-2.0)
    x1013 = 2 * x1012
    x1014 = x1013 * x811 - x1013 * x814
    x1015 = x1013 * x816 - x1013 * x819 + x1014 * x81
    x1016 = x1013 * x807 - x1013 * x810 + x1015 * x86
    x1017 = x1016 + x18 * x931
    x1018 = x1017 + x18 * x932
    x1019 = x1011 * x175 + x1018
    x1020 = x112 * (2 * x1012 * x763 - x1013 * x809)
    x1021 = x112 * (2 * x1012 * x778 - x1013 * x818)
    x1022 = x112 * (2 * x1012 * x770 - x1013 * x813)
    x1023 = x1013 * x843 - x1013 * x845
    x1024 = x1013 * x847 - x1013 * x849 + x1023 * x81
    x1025 = (
        x1016 * x3
        + x1020
        - x82 * (x1013 * x840 - x1013 * x842 + x1024 * x86)
        + x86
        * (x1015 * x3 + x1021 - x1024 * x82 + x81 * (x1014 * x3 + x1022 - x1023 * x82))
    )
    x1026 = x1025 + x18 * x942
    x1027 = x1026 + x18 * x943
    x1028 = x28 * x360
    x1029 = -x1028 + x207 * x753
    x1030 = x28 * x362
    x1031 = -x1030 + x195 * x753
    x1032 = x1031 * x3
    x1033 = x75 * x867
    x1034 = x1032 - x1033 * x23
    x1035 = x75 * x864
    x1036 = x1029 * x3 + x1034 * x81 - x1035 * x23
    x1037 = x16 * x878 + x16 * (x1036 * x16 + x878) + x899
    x1038 = x1037 + x13 * x374
    x1039 = x112 * (-x1028 - x1035 + x207 * x753)
    x1040 = x112 * (-x1030 - x1033 + x195 * x753)
    x1041 = x1036 * x3 + x1039 + x81 * (x1034 * x3 + x1040 - x82 * x873) - x82 * x877
    x1042 = x16 * x905 + x16 * (x1041 * x16 + x905) + x924
    x1043 = x28 * x378
    x1044 = -x1043 + x308 * x753
    x1045 = x28 * x380
    x1046 = -x1045 + x297 * x753
    x1047 = x1046 * x3
    x1048 = x75 * x965
    x1049 = x1047 - x1048 * x23
    x1050 = x75 * x962
    x1051 = x1044 * x3 + x1049 * x81 - x1050 * x23
    x1052 = x1036 * x17 + x1051
    x1053 = x1052 * x16 + x976
    x1054 = x1053 + x13 * x393
    x1055 = x112 * (-x1043 - x1050 + x308 * x753)
    x1056 = x112 * (-x1045 - x1048 + x297 * x753)
    x1057 = x1051 * x3 + x1055 + x81 * (x1049 * x3 + x1056 - x82 * x970) - x82 * x974
    x1058 = x1041 * x17 + x1057
    x1059 = x1058 * x16 + x992
    x1060 = x81 * x870
    x1061 = -x1060 * x82 + x81 * x868
    x1062 = x81 * x875
    x1063 = x1061 * x81 - x1062 * x82 + x81 * x865
    x1064 = x1036 * x18 + x1063
    x1065 = x1064 * x16 + x997
    x1066 = x1065 + x13 * x398
    x1067 = x112 * (-x1062 * x75 + x81 * x864)
    x1068 = x112 * (-x1060 * x75 + x81 * x867)
    x1069 = x1063 * x3 + x1067 + x81 * (x1061 * x3 + x1068 - x82 * x994) - x82 * x995
    x1070 = x1041 * x18 + x1069
    x1071 = x1009 + x1070 * x16
    x1072 = x28 * x402
    x1073 = -x1072 + x404 * x753
    x1074 = x28 * x406
    x1075 = -x1074 + x399 * x753
    x1076 = x1075 * x3
    x1077 = -x28 * x411 + x400 * x753
    x1078 = x1077 * x75
    x1079 = x1078 * x23
    x1080 = x1076 - x1079
    x1081 = -x28 * x417 + x401 * x753
    x1082 = x1081 * x75
    x1083 = x1073 * x3 + x1080 * x81 - x1082 * x23
    x1084 = x1051 * x17 + x1083
    x1085 = x1052 * x17 + x1084
    x1086 = x1085 + x13 * x424
    x1087 = x112 * (-x1072 - x1082 + x404 * x753)
    x1088 = x112 * (-x1074 - x1078 + x399 * x753)
    x1089 = x1077 * x3
    x1090 = x410 * x753 - x426 * x765
    x1091 = x1090 * x82
    x1092 = x1089 - x1091
    x1093 = x416 * x753 - x430 * x765
    x1094 = (
        x1057 * x17
        + x1083 * x3
        + x1087
        + x81 * (x1080 * x3 + x1088 - x1092 * x82)
        - x82 * (x1081 * x3 + x1092 * x81 - x1093 * x82)
    )
    x1095 = x1058 * x17 + x1094
    x1096 = x81 * x966 - x81 * x969
    x1097 = x1096 * x81 + x81 * x963 - x81 * x973
    x1098 = x1051 * x18 + x1097
    x1099 = x1064 * x17 + x1098
    x1100 = x1099 + x13 * x435
    x1101 = x81 * x972
    x1102 = x112 * (-x1101 + x81 * x962)
    x1103 = x81 * x968
    x1104 = x112 * (-x1103 + x81 * x965)
    x1105 = x81 * x982 - x81 * x984
    x1106 = (
        x1097 * x3
        + x1102
        + x81 * (x1096 * x3 + x1104 - x1105 * x82)
        - x82 * (x1105 * x81 + x81 * x986 - x81 * x988)
    )
    x1107 = x1057 * x18 + x1106
    x1108 = x1070 * x17 + x1107
    x1109 = x1013 * x889 - x1013 * x892
    x1110 = x1013 * x888 - x1013 * x896 + x1109 * x81
    x1111 = x1063 * x18 + x1110
    x1112 = x1064 * x18 + x1111
    x1113 = x1011 * x368 + x1112
    x1114 = x112 * (2 * x1012 * x875 - x1013 * x895)
    x1115 = x112 * (2 * x1012 * x870 - x1013 * x891)
    x1116 = x1013 * x913 - x1013 * x915
    x1117 = (
        x1110 * x3
        + x1114
        + x81 * (x1109 * x3 + x1115 - x1116 * x82)
        - x82 * (x1013 * x912 - x1013 * x918 + x1116 * x81)
    )
    x1118 = x1069 * x18 + x1117
    x1119 = x1070 * x18 + x1118
    x1120 = x767 * x81
    x1121 = -x1120 * x82 + x789 * x81
    x1122 = x775 * x81
    x1123 = x1121 * x81 - x1122 * x82 + x795 * x81
    x1124 = x16 * x931 + x16 * (x1123 * x16 + x931) + x936
    x1125 = x112 * (-x1122 * x75 + x794 * x81)
    x1126 = x112 * (-x1120 * x75 + x788 * x81)
    x1127 = x1123 * x3 + x1125 + x81 * (x1121 * x3 + x1126 - x82 * x928) - x82 * x930
    x1128 = x11 * x1124 + x16 * x942 + x16 * (x1127 * x16 + x942) + x955
    x1129 = x1063 + x1123 * x17
    x1130 = x1129 * x16 + x17 * x931 + x996
    x1131 = x1069 + x1127 * x17
    x1132 = x1008 + x11 * x1130 + x1131 * x16 + x17 * x942
    x1133 = x1013 * x768 - x1013 * x772
    x1134 = x1013 * x776 - x1013 * x780 + x1133 * x81
    x1135 = x1123 * x18 + x1134
    x1136 = x1017 + x1135 * x16
    x1137 = x112 * (2 * x1012 * x775 - x1013 * x779)
    x1138 = x112 * (2 * x1012 * x767 - x1013 * x771)
    x1139 = -x1015 * x82 + x1134 * x3 + x1137 + x81 * (-x1014 * x82 + x1133 * x3 + x1138)
    x1140 = x1127 * x18 + x1139
    x1141 = x1026 + x11 * x1136 + x1140 * x16
    x1142 = x1063 * x17 + x1097
    x1143 = x1129 * x17 + x1142
    x1144 = x1069 * x17 + x1106
    x1145 = x11 * x1143 + x1131 * x17 + x1144
    x1146 = x1111 + x1135 * x17
    x1147 = x11 * x1146 + x1118 + x1140 * x17
    x1148 = x80 ** (-3.0)
    x1149 = 6 * x1148
    x1150 = x1149 * x811 - x1149 * x814
    x1151 = x1149 * x816 - x1149 * x819 + x1150 * x81
    x1152 = x1134 * x18 + x1151
    x1153 = x1135 * x18 + x1152
    x1154 = x112 * (6 * x1148 * x778 - x1149 * x818)
    x1155 = x112 * (6 * x1148 * x770 - x1149 * x813)
    x1156 = x1149 * x843 - x1149 * x845
    x1157 = (
        x1139 * x18
        + x1151 * x3
        + x1154
        + x81 * (x1150 * x3 + x1155 - x1156 * x82)
        - x82 * (x1149 * x847 - x1149 * x849 + x1156 * x81)
    )
    x1158 = x11 * x1153 + x1140 * x18 + x1157
    x1159 = x28 * x438
    x1160 = -x1159 + x306 * x753
    x1161 = x1046 * x75
    x1162 = x1160 * x3 - x1161 * x23
    x1163 = x1051 * x16 + x16 * (x1051 + x1162 * x16) + x975
    x1164 = x1163 + x13 * x447
    x1165 = x112 * (-x1159 - x1161 + x306 * x753)
    x1166 = -x1049 * x82 + x1162 * x3 + x1165
    x1167 = x1057 * x16 + x16 * (x1057 + x1166 * x16) + x991
    x1168 = x28 * x451
    x1169 = -x1168 + x403 * x753
    x1170 = x1075 * x75
    x1171 = x1169 * x3 - x1170 * x23
    x1172 = x1162 * x17 + x1171
    x1173 = x1084 + x1172 * x16
    x1174 = x1173 + x13 * x461
    x1175 = x112 * (-x1168 - x1170 + x403 * x753)
    x1176 = -x1080 * x82 + x1171 * x3 + x1175
    x1177 = x1166 * x17 + x1176
    x1178 = x1094 + x1177 * x16
    x1179 = x81 * x965
    x1180 = x1047 * x81 - x1179 * x82
    x1181 = x1162 * x18 + x1180
    x1182 = x1098 + x1181 * x16
    x1183 = x1182 + x13 * x466
    x1184 = x112 * (x1046 * x81 - x1179 * x75)
    x1185 = -x1096 * x82 + x1180 * x3 + x1184
    x1186 = x1166 * x18 + x1185
    x1187 = x1107 + x1186 * x16
    x1188 = x28 * x469
    x1189 = -x1188 + x467 * x753
    x1190 = -x28 * x472 + x468 * x753
    x1191 = x1190 * x75
    x1192 = x1189 * x3 - x1191 * x23
    x1193 = x1171 * x17 + x1172 * x17 + x1192
    x1194 = x1193 + x13 * x481
    x1195 = x112 * (-x1188 - x1191 + x467 * x753)
    x1196 = x471 * x753 - x479 * x765
    x1197 = (
        x1176 * x17 + x1177 * x17 + x1192 * x3 + x1195 - x82 * (x1190 * x3 - x1196 * x82)
    )
    x1198 = x1076 * x81 - x1079 * x81
    x1199 = x1171 * x18 + x1181 * x17 + x1198
    x1200 = x1199 + x13 * x483
    x1201 = x1078 * x81
    x1202 = x112 * (x1075 * x81 - x1201)
    x1203 = x1198 * x3 + x1202 - x82 * (x1089 * x81 - x1091 * x81)
    x1204 = x1176 * x18 + x1186 * x17 + x1203
    x1205 = x1013 * x966 - x1013 * x969
    x1206 = x1180 * x18 + x1205
    x1207 = x1181 * x18 + x1206
    x1208 = x1011 * x441 + x1207
    x1209 = x112 * (2 * x1012 * x965 - x1013 * x968)
    x1210 = x1205 * x3 + x1209 - x82 * (x1013 * x982 - x1013 * x984)
    x1211 = x1185 * x18 + x1210
    x1212 = x1186 * x18 + x1211
    x1213 = x81 * x867
    x1214 = x1032 * x81 - x1213 * x82
    x1215 = x1063 * x16 + x16 * (x1063 + x1214 * x16) + x996
    x1216 = x112 * (x1031 * x81 - x1213 * x75)
    x1217 = -x1061 * x82 + x1214 * x3 + x1216
    x1218 = x1008 + x1069 * x16 + x11 * x1215 + x16 * (x1069 + x1217 * x16)
    x1219 = x1180 + x1214 * x17
    x1220 = x1142 + x1219 * x16
    x1221 = x1185 + x1217 * x17
    x1222 = x11 * x1220 + x1144 + x1221 * x16
    x1223 = x1013 * x868 - x1013 * x872
    x1224 = x1214 * x18 + x1223
    x1225 = x1111 + x1224 * x16
    x1226 = x112 * (2 * x1012 * x867 - x1013 * x871)
    x1227 = -x1109 * x82 + x1223 * x3 + x1226
    x1228 = x1217 * x18 + x1227
    x1229 = x11 * x1225 + x1118 + x1228 * x16
    x1230 = x1180 * x17 + x1198 + x1219 * x17
    x1231 = x11 * x1230 + x1185 * x17 + x1203 + x1221 * x17
    x1232 = x1206 + x1224 * x17
    x1233 = x11 * x1232 + x1211 + x1228 * x17
    x1234 = x1149 * x889 - x1149 * x892
    x1235 = x1223 * x18 + x1234
    x1236 = x1224 * x18 + x1235
    x1237 = x112 * (6 * x1148 * x870 - x1149 * x891)
    x1238 = x1227 * x18 + x1234 * x3 + x1237 - x82 * (x1149 * x913 - x1149 * x915)
    x1239 = x11 * x1236 + x1228 * x18 + x1238
    x1240 = x1013 * x789 - x1013 * x791
    x1241 = x1016 + x1134 * x16 + x16 * (x1134 + x1240 * x16)
    x1242 = x112 * (2 * x1012 * x788 - x1013 * x790)
    x1243 = -x1133 * x82 + x1240 * x3 + x1242
    x1244 = x1025 + x11 * x1241 + x1139 * x16 + x16 * (x1139 + x1243 * x16)
    x1245 = x1223 + x1240 * x17
    x1246 = x1110 + x1134 * x17 + x1245 * x16
    x1247 = x1227 + x1243 * x17
    x1248 = x11 * x1246 + x1117 + x1139 * x17 + x1247 * x16
    x1249 = x1149 * x768 - x1149 * x772
    x1250 = x1240 * x18 + x1249
    x1251 = x1152 + x1250 * x16
    x1252 = x112 * (6 * x1148 * x767 - x1149 * x771)
    x1253 = -x1150 * x82 + x1249 * x3 + x1252
    x1254 = x1243 * x18 + x1253
    x1255 = x11 * x1251 + x1157 + x1254 * x16
    x1256 = x1205 + x1223 * x17 + x1245 * x17
    x1257 = x11 * x1256 + x1210 + x1227 * x17 + x1247 * x17
    x1258 = x1235 + x1250 * x17
    x1259 = x11 * x1258 + x1238 + x1254 * x17
    x1260 = x80 ** (-4.0)
    x1261 = 24 * x1260
    x1262 = x112 * (24 * x1260 * x770 - x1261 * x813)
    x1263 = x1261 * x811 - x1261 * x814
    x1264 = x1249 * x18 + x1250 * x18 + x1263
    x1265 = (
        x11 * x1264
        + x1253 * x18
        + x1254 * x18
        + x1262
        + x1263 * x3
        - x82 * (x1261 * x843 - x1261 * x845)
    )
    x1266 = x157 - x26 * x490 + x485 * x487
    x1267 = x115 - x26 * x529 + x485 * x489
    x1268 = x158 - x26 * x495 + x485 * x492
    x1269 = x117 - x26 * x531 + x485 * x494
    x1270 = x161 - x26 * x501 + x485 * x498
    x1271 = x120 - x26 * x533 + x485 * x500
    x1272 = x160 - x26 * x507 + x485 * x504
    x1273 = x119 - x26 * x536 + x485 * x506
    x1274 = (
        x1266 * x3
        - x1267 * x82
        + x88
        * (
            x1268 * x3
            - x1269 * x82
            + x86 * (x1272 * x3 - x1273 * x82 + x81 * (x1270 * x3 - x1271 * x82))
        )
    )
    x1275 = x176 - x26 * x513 + x485 * x512
    x1276 = x178 - x26 * x516 + x485 * x515
    x1277 = x177 - x26 * x520 + x485 * x519
    x1278 = (
        -x1268 * x82
        + x1275 * x3
        + x86 * (-x1272 * x82 + x1277 * x3 + x81 * (-x1270 * x82 + x1276 * x3))
    )
    x1279 = x1278 * x16
    x1280 = x114 - x26 * x527 + x485 * x525
    x1281 = x140 + x485 * x528 - x496 * x555
    x1282 = x141 + x485 * x530 - x496 * x556
    x1283 = x143 + x485 * x532 - x496 * x557
    x1284 = x142 + x485 * x535 - x496 * x559
    x1285 = x128 + x485 * x526 - x496 * x566
    x1286 = (
        x12 * x541
        + x1274 * x16
        + x1280 * x3
        - x1285 * x82
        + x16 * (x1274 + x1279)
        + x90
        * (
            x1267 * x3
            - x1281 * x82
            + x88
            * (
                x1269 * x3
                - x1282 * x82
                + x86 * (x1273 * x3 - x1284 * x82 + x81 * (x1271 * x3 - x1283 * x82))
            )
        )
    )
    x1287 = x1278 * x17
    x1288 = x1268 * x81 + x210 - x26 * x571 + x485 * x569
    x1289 = x1269 * x81 - x26 * x586 + x260 + x485 * x570
    x1290 = x1270 * x81 + x232 - x26 * x574 + x485 * x572
    x1291 = x1271 * x81 - x26 * x588 + x263 + x485 * x573
    x1292 = x1272 * x81 + x231 - x26 * x578 + x485 * x576
    x1293 = x1273 * x81 - x26 * x591 + x262 + x485 * x577
    x1294 = (
        x1288 * x3
        - x1289 * x82
        + x86 * (x1292 * x3 - x1293 * x82 + x81 * (x1290 * x3 - x1291 * x82))
    )
    x1295 = x1287 + x1294
    x1296 = x1267 * x81 + x242 - x26 * x584 + x485 * x582
    x1297 = x1282 * x81 + x277 + x485 * x585 - x496 * x605
    x1298 = x1283 * x81 + x286 + x485 * x587 - x496 * x606
    x1299 = x1284 * x81 + x285 + x485 * x590 - x496 * x608
    x1300 = x1281 * x81 + x290 + x485 * x583 - x496 * x613
    x1301 = (
        x1296 * x3
        - x1300 * x82
        + x88
        * (
            x1289 * x3
            - x1297 * x82
            + x86 * (x1293 * x3 - x1299 * x82 + x81 * (x1291 * x3 - x1298 * x82))
        )
    )
    x1302 = x12 * x595 + x1274 * x17 + x1295 * x16 + x1301
    x1303 = x12 * x616 + x1274 * x18 + x1279 * x18
    x1304 = x1289 * x86 - x26 * x621 + x310 + x485 * x619
    x1305 = x1291 * x86 - x26 * x624 + x330 + x485 * x622
    x1306 = x1298 * x86 + x340 + x485 * x623 - x496 * x637
    x1307 = x1293 * x86 - x26 * x628 + x329 + x485 * x626
    x1308 = x1299 * x86 + x344 + x485 * x627 - x496 * x639
    x1309 = x1297 * x86 + x348 + x485 * x620 - x496 * x641
    x1310 = (
        x1304 * x3
        - x1309 * x82
        + x86 * (x1307 * x3 - x1308 * x82 + x81 * (x1305 * x3 - x1306 * x82))
    )
    x1311 = x1294 * x17 + x1310
    x1312 = x12 * x632 + x1295 * x17 + x1311
    x1313 = x1294 * x18
    x1314 = x12 * x646 + x1287 * x18 + x1313
    x1315 = x12 * x651 + x1278 * x19
    x1316 = x1276 * x81 - x26 * x655 + x363 + x485 * x654
    x1317 = x1277 * x81 - x26 * x658 + x361 + x485 * x657
    x1318 = -x1292 * x82 + x1317 * x3 + x81 * (-x1290 * x82 + x1316 * x3)
    x1319 = x1318 * x16
    x1320 = x12 * x661 + x1294 * x16 + x1301 + x16 * (x1294 + x1319)
    x1321 = x1318 * x17
    x1322 = x1290 * x86 - x26 * x670 + x381 + x485 * x669
    x1323 = x1292 * x86 - x26 * x673 + x379 + x485 * x672
    x1324 = -x1307 * x82 + x1323 * x3 + x81 * (-x1305 * x82 + x1322 * x3)
    x1325 = x1321 + x1324
    x1326 = x12 * x676 + x1311 + x1325 * x16
    x1327 = x12 * x684 + x1313 + x1319 * x18
    x1328 = x1305 * x88 - x26 * x689 + x407 + x485 * x687
    x1329 = x1306 * x88 + x425 + x485 * x688 - x496 * x700
    x1330 = x1307 * x88 - x26 * x693 + x405 + x485 * x691
    x1331 = x1308 * x88 + x429 + x485 * x692 - x496 * x702
    x1332 = x1324 * x17 + x1330 * x3 - x1331 * x82 + x81 * (x1328 * x3 - x1329 * x82)
    x1333 = x12 * x696 + x1325 * x17 + x1332
    x1334 = x1324 * x18
    x1335 = x12 * x706 + x1321 * x18 + x1334
    x1336 = x12 * x710 + x1318 * x19
    x1337 = x1316 * x86 - x26 * x714 + x439 + x485 * x713
    x1338 = -x1322 * x82 + x1337 * x3
    x1339 = x1338 * x16
    x1340 = x12 * x717 + x1310 + x1324 * x16 + x16 * (x1324 + x1339)
    x1341 = x1338 * x17
    x1342 = x1322 * x88 - x26 * x725 + x452 + x485 * x724
    x1343 = -x1328 * x82 + x1342 * x3
    x1344 = x1341 + x1343
    x1345 = x12 * x728 + x1332 + x1344 * x16
    x1346 = x12 * x735 + x1334 + x1339 * x18
    x1347 = x1328 * x90 - x26 * x740 + x475 + x485 * x738
    x1348 = x1329 * x90 + x478 + x485 * x739 - x496 * x745
    x1349 = x12 * x742 + x1343 * x17 + x1344 * x17 + x1347 * x3 - x1348 * x82
    x1350 = x12 * x747 + x1341 * x18 + x1343 * x18
    x1351 = x12 * x750 + x1338 * x19
    x1352 = -x26 * x758 + x485 * x755
    x1353 = -x26 * x805 + x485 * x757
    x1354 = -x26 * x764 + x485 * x760
    x1355 = x485 * x763
    x1356 = x26 * x809
    x1357 = x1355 - x1356
    x1358 = x485 * x767
    x1359 = x26 * x771
    x1360 = x1358 - x1359
    x1361 = x485 * x770
    x1362 = x26 * x813
    x1363 = x1361 - x1362
    x1364 = x485 * x775
    x1365 = x26 * x779
    x1366 = x1364 - x1365
    x1367 = x485 * x778
    x1368 = x26 * x818
    x1369 = x1367 - x1368
    x1370 = (
        x1352 * x3
        - x1353 * x82
        + x88
        * (
            x1354 * x3
            - x1357 * x82
            + x86 * (x1366 * x3 - x1369 * x82 + x81 * (x1360 * x3 - x1363 * x82))
        )
    )
    x1371 = -x26 * x786 + x485 * x785
    x1372 = x485 * x788
    x1373 = x26 * x790
    x1374 = x1372 - x1373
    x1375 = -x26 * x796 + x485 * x794
    x1376 = (
        -x1354 * x82
        + x1371 * x3
        + x86 * (-x1366 * x82 + x1375 * x3 + x81 * (-x1360 * x82 + x1374 * x3))
    )
    x1377 = -x26 * x802 + x485 * x800
    x1378 = x485 * x804
    x1379 = x496 * x838
    x1380 = x1378 - x1379
    x1381 = x485 * x808
    x1382 = x496 * x841
    x1383 = x1381 - x1382
    x1384 = x485 * x812
    x1385 = x496 * x844
    x1386 = x1384 - x1385
    x1387 = x485 * x817
    x1388 = x496 * x848
    x1389 = x1387 - x1388
    x1390 = x485 * x801 - x496 * x856
    x1391 = (
        x1370 * x16
        + x1377 * x3
        - x1390 * x82
        + x16 * (x1370 + x1376 * x16)
        + x90
        * (
            x1353 * x3
            - x1380 * x82
            + x88
            * (
                x1357 * x3
                - x1383 * x82
                + x86 * (x1369 * x3 - x1389 * x82 + x81 * (x1363 * x3 - x1386 * x82))
            )
        )
    )
    x1392 = x13 * x541 + x1391
    x1393 = x1354 * x81 - x26 * x862 + x485 * x859
    x1394 = x1357 * x81 - x26 * x886 + x485 * x861
    x1395 = x485 * x867
    x1396 = x26 * x871
    x1397 = x1360 * x81 + x1395 - x1396
    x1398 = x485 * x870
    x1399 = x26 * x891
    x1400 = x1363 * x81 + x1398 - x1399
    x1401 = x1366 * x81 - x26 * x876 + x485 * x864
    x1402 = x485 * x875
    x1403 = x26 * x895
    x1404 = x1369 * x81 + x1402 - x1403
    x1405 = (
        x1393 * x3
        - x1394 * x82
        + x86 * (x1401 * x3 - x1404 * x82 + x81 * (x1397 * x3 - x1400 * x82))
    )
    x1406 = x1376 * x17 + x1405
    x1407 = x1353 * x81 - x26 * x883 + x485 * x881
    x1408 = x485 * x885
    x1409 = x496 * x910
    x1410 = x1383 * x81 + x1408 - x1409
    x1411 = x485 * x890
    x1412 = x496 * x914
    x1413 = x1386 * x81 + x1411 - x1412
    x1414 = x485 * x894
    x1415 = x496 * x917
    x1416 = x1389 * x81 + x1414 - x1415
    x1417 = x1380 * x81 + x485 * x882 - x496 * x923
    x1418 = (
        x1407 * x3
        - x1417 * x82
        + x88
        * (
            x1394 * x3
            - x1410 * x82
            + x86 * (x1404 * x3 - x1416 * x82 + x81 * (x1400 * x3 - x1413 * x82))
        )
    )
    x1419 = x1370 * x17 + x1406 * x16 + x1418
    x1420 = x13 * x595 + x1419
    x1421 = x760 * x81
    x1422 = x1421 * x485 - x496 * x926
    x1423 = -x26 * x946 + x485 * x926
    x1424 = x1122 * x485 - x496 * x929
    x1425 = -x26 * x951 + x485 * x929
    x1426 = x1120 * x485 - x496 * x927
    x1427 = -x26 * x953 + x485 * x927
    x1428 = (
        x1422 * x3
        - x1423 * x82
        + x86 * (x1424 * x3 - x1425 * x82 + x81 * (x1426 * x3 - x1427 * x82))
    )
    x1429 = x1376 * x18 + x1428
    x1430 = x757 * x81
    x1431 = x1430 * x485 - x26 * x944
    x1432 = x1381 * x81 - x1382 * x81
    x1433 = x1387 * x81 - x1388 * x81
    x1434 = x1384 * x81 - x1385 * x81
    x1435 = x1378 * x81 - x1379 * x81
    x1436 = (
        x1431 * x3
        - x1435 * x82
        + x88
        * (
            x1423 * x3
            - x1432 * x82
            + x86 * (x1425 * x3 - x1433 * x82 + x81 * (x1427 * x3 - x1434 * x82))
        )
    )
    x1437 = x1370 * x18 + x1429 * x16 + x1436
    x1438 = x13 * x616 + x1437
    x1439 = x1394 * x86 - x26 * x960 + x485 * x958
    x1440 = x485 * x965
    x1441 = x26 * x968
    x1442 = x1400 * x86 + x1440 - x1441
    x1443 = x485 * x967
    x1444 = x496 * x983
    x1445 = x1413 * x86 + x1443 - x1444
    x1446 = x1404 * x86 - x26 * x972 + x485 * x962
    x1447 = x485 * x971
    x1448 = x496 * x987
    x1449 = x1416 * x86 + x1447 - x1448
    x1450 = x1410 * x86 + x485 * x959 - x496 * x990
    x1451 = (
        x1439 * x3
        - x1450 * x82
        + x86 * (x1446 * x3 - x1449 * x82 + x81 * (x1442 * x3 - x1445 * x82))
    )
    x1452 = x1405 * x17 + x1451
    x1453 = x1406 * x17 + x1452
    x1454 = x13 * x632 + x1453
    x1455 = x81 * x861
    x1456 = -x1000 * x26 + x1423 * x81 + x1455 * x485
    x1457 = -x1002 * x26 + x1062 * x485 + x1425 * x81
    x1458 = -x1004 * x26 + x1060 * x485 + x1427 * x81
    x1459 = x1411 * x81 - x1412 * x81 + x1434 * x81
    x1460 = x1414 * x81 - x1415 * x81 + x1433 * x81
    x1461 = x1408 * x81 - x1409 * x81 + x1432 * x81
    x1462 = (
        x1456 * x3
        - x1461 * x82
        + x86 * (x1457 * x3 - x1460 * x82 + x81 * (x1458 * x3 - x1459 * x82))
    )
    x1463 = x1405 * x18 + x1462
    x1464 = x1429 * x17 + x1463
    x1465 = x13 * x646 + x1464
    x1466 = x1013 * x1355 - x1013 * x1356
    x1467 = x1013 * x1367 - x1013 * x1368
    x1468 = x1013 * x1387 - x1013 * x1388
    x1469 = x1013 * x1361 - x1013 * x1362
    x1470 = x1013 * x1384 - x1013 * x1385
    x1471 = x1013 * x1381 - x1013 * x1382
    x1472 = (
        x1466 * x3
        - x1471 * x82
        + x86 * (x1467 * x3 - x1468 * x82 + x81 * (x1469 * x3 - x1470 * x82))
    )
    x1473 = x1428 * x18 + x1472
    x1474 = x1429 * x18 + x1473
    x1475 = x13 * x651 + x1474
    x1476 = x1031 * x485 - x1033 * x26 + x1374 * x81
    x1477 = x1029 * x485 - x1035 * x26 + x1375 * x81
    x1478 = -x1401 * x82 + x1477 * x3 + x81 * (-x1397 * x82 + x1476 * x3)
    x1479 = x1405 * x16 + x1418 + x16 * (x1405 + x1478 * x16)
    x1480 = x13 * x661 + x1479
    x1481 = x1046 * x485 - x1048 * x26 + x1397 * x86
    x1482 = x1044 * x485 - x1050 * x26 + x1401 * x86
    x1483 = -x1446 * x82 + x1482 * x3 + x81 * (-x1442 * x82 + x1481 * x3)
    x1484 = x1478 * x17 + x1483
    x1485 = x1452 + x1484 * x16
    x1486 = x13 * x676 + x1485
    x1487 = x81 * x864
    x1488 = -x1062 * x496 + x1424 * x81 + x1487 * x485
    x1489 = -x1060 * x496 + x1213 * x485 + x1426 * x81
    x1490 = -x1457 * x82 + x1488 * x3 + x81 * (-x1458 * x82 + x1489 * x3)
    x1491 = x1478 * x18 + x1490
    x1492 = x1463 + x1491 * x16
    x1493 = x13 * x684 + x1492
    x1494 = x1075 * x485 - x1078 * x26 + x1442 * x88
    x1495 = x1077 * x485
    x1496 = x1090 * x496
    x1497 = x1445 * x88 + x1495 - x1496
    x1498 = x1073 * x485 - x1082 * x26 + x1446 * x88
    x1499 = x1081 * x485 - x1093 * x496 + x1449 * x88
    x1500 = x1483 * x17 + x1498 * x3 - x1499 * x82 + x81 * (x1494 * x3 - x1497 * x82)
    x1501 = x1484 * x17 + x1500
    x1502 = x13 * x696 + x1501
    x1503 = -x1103 * x26 + x1179 * x485 + x1458 * x86
    x1504 = x1443 * x81 - x1444 * x81 + x1459 * x86
    x1505 = x81 * x962
    x1506 = -x1101 * x26 + x1457 * x86 + x1505 * x485
    x1507 = x1447 * x81 - x1448 * x81 + x1460 * x86
    x1508 = x1506 * x3 - x1507 * x82 + x81 * (x1503 * x3 - x1504 * x82)
    x1509 = x1483 * x18 + x1508
    x1510 = x1491 * x17 + x1509
    x1511 = x13 * x706 + x1510
    x1512 = x1013 * x1398 - x1013 * x1399 + x1469 * x81
    x1513 = x1013 * x1411 - x1013 * x1412 + x1470 * x81
    x1514 = x1013 * x1402 - x1013 * x1403 + x1467 * x81
    x1515 = x1013 * x1414 - x1013 * x1415 + x1468 * x81
    x1516 = x1514 * x3 - x1515 * x82 + x81 * (x1512 * x3 - x1513 * x82)
    x1517 = x1490 * x18 + x1516
    x1518 = x1491 * x18 + x1517
    x1519 = x13 * x710 + x1518
    x1520 = x794 * x81
    x1521 = -x1122 * x496 + x1520 * x485
    x1522 = x788 * x81
    x1523 = -x1120 * x496 + x1522 * x485
    x1524 = -x1424 * x82 + x1521 * x3 + x81 * (-x1426 * x82 + x1523 * x3)
    x1525 = x1428 * x16 + x1436 + x16 * (x1428 + x1524 * x16)
    x1526 = x1124 * x12 + x1525
    x1527 = x1490 + x1524 * x17
    x1528 = x1428 * x17 + x1462 + x1527 * x16
    x1529 = x1130 * x12 + x1528
    x1530 = x1013 * x1364 - x1013 * x1365
    x1531 = x1013 * x1358 - x1013 * x1359
    x1532 = -x1467 * x82 + x1530 * x3 + x81 * (-x1469 * x82 + x1531 * x3)
    x1533 = x1524 * x18 + x1532
    x1534 = x1473 + x1533 * x16
    x1535 = x1136 * x12 + x1534
    x1536 = x1490 * x17 + x1508
    x1537 = x1527 * x17 + x1536
    x1538 = x1143 * x12 + x1537
    x1539 = x1517 + x1533 * x17
    x1540 = x1146 * x12 + x1539
    x1541 = x1149 * x1361 - x1149 * x1362
    x1542 = x1149 * x1384 - x1149 * x1385
    x1543 = x1149 * x1367 - x1149 * x1368
    x1544 = x1149 * x1387 - x1149 * x1388
    x1545 = x1532 * x18 + x1543 * x3 - x1544 * x82 + x81 * (x1541 * x3 - x1542 * x82)
    x1546 = x1533 * x18 + x1545
    x1547 = x1153 * x12 + x1546
    x1548 = x1160 * x485 - x1161 * x26 + x1476 * x86
    x1549 = -x1481 * x82 + x1548 * x3
    x1550 = x1451 + x1483 * x16 + x16 * (x1483 + x1549 * x16)
    x1551 = x13 * x717 + x1550
    x1552 = x1169 * x485 - x1170 * x26 + x1481 * x88
    x1553 = -x1494 * x82 + x1552 * x3
    x1554 = x1549 * x17 + x1553
    x1555 = x1500 + x1554 * x16
    x1556 = x13 * x728 + x1555
    x1557 = x1046 * x81
    x1558 = -x1179 * x496 + x1489 * x86 + x1557 * x485
    x1559 = -x1503 * x82 + x1558 * x3
    x1560 = x1549 * x18 + x1559
    x1561 = x1509 + x1560 * x16
    x1562 = x13 * x735 + x1561
    x1563 = x1189 * x485 - x1191 * x26 + x1494 * x90
    x1564 = x1190 * x485 - x1196 * x496 + x1497 * x90
    x1565 = x1553 * x17 + x1554 * x17 + x1563 * x3 - x1564 * x82
    x1566 = x13 * x742 + x1565
    x1567 = x1075 * x81
    x1568 = -x1201 * x26 + x1503 * x88 + x1567 * x485
    x1569 = x1495 * x81 - x1496 * x81 + x1504 * x88
    x1570 = x1568 * x3 - x1569 * x82
    x1571 = x1553 * x18 + x1560 * x17 + x1570
    x1572 = x13 * x747 + x1571
    x1573 = x1013 * x1440 - x1013 * x1441 + x1512 * x86
    x1574 = x1013 * x1443 - x1013 * x1444 + x1513 * x86
    x1575 = x1573 * x3 - x1574 * x82
    x1576 = x1559 * x18 + x1575
    x1577 = x1560 * x18 + x1576
    x1578 = x13 * x750 + x1577
    x1579 = x1031 * x81
    x1580 = -x1213 * x496 + x1523 * x81 + x1579 * x485
    x1581 = -x1489 * x82 + x1580 * x3
    x1582 = x1462 + x1490 * x16 + x16 * (x1490 + x1581 * x16)
    x1583 = x12 * x1215 + x1582
    x1584 = x1559 + x1581 * x17
    x1585 = x1536 + x1584 * x16
    x1586 = x12 * x1220 + x1585
    x1587 = x1013 * x1395 - x1013 * x1396 + x1531 * x81
    x1588 = -x1512 * x82 + x1587 * x3
    x1589 = x1581 * x18 + x1588
    x1590 = x1517 + x1589 * x16
    x1591 = x12 * x1225 + x1590
    x1592 = x1559 * x17 + x1570 + x1584 * x17
    x1593 = x12 * x1230 + x1592
    x1594 = x1576 + x1589 * x17
    x1595 = x12 * x1232 + x1594
    x1596 = x1149 * x1398 - x1149 * x1399 + x1541 * x81
    x1597 = x1149 * x1411 - x1149 * x1412 + x1542 * x81
    x1598 = x1588 * x18 + x1596 * x3 - x1597 * x82
    x1599 = x1589 * x18 + x1598
    x1600 = x12 * x1236 + x1599
    x1601 = x1013 * x1372 - x1013 * x1373
    x1602 = -x1531 * x82 + x1601 * x3
    x1603 = x1472 + x1532 * x16 + x16 * (x1532 + x16 * x1602)
    x1604 = x12 * x1241 + x1603
    x1605 = x1588 + x1602 * x17
    x1606 = x1516 + x1532 * x17 + x16 * x1605
    x1607 = x12 * x1246 + x1606
    x1608 = x1149 * x1358 - x1149 * x1359
    x1609 = -x1541 * x82 + x1608 * x3
    x1610 = x1602 * x18 + x1609
    x1611 = x1545 + x16 * x1610
    x1612 = x12 * x1251 + x1611
    x1613 = x1575 + x1588 * x17 + x1605 * x17
    x1614 = x12 * x1256 + x1613
    x1615 = x1598 + x1610 * x17
    x1616 = x12 * x1258 + x1615
    x1617 = x1261 * x1361 - x1261 * x1362
    x1618 = x1261 * x1384 - x1261 * x1385
    x1619 = x1609 * x18 + x1610 * x18 + x1617 * x3 - x1618 * x82
    x1620 = x12 * x1264 + x1619
    x1621 = x157 - x28 * x758 + x753 * x755
    x1622 = x115 - x28 * x805 + x753 * x757
    x1623 = x158 - x28 * x764 + x753 * x760
    x1624 = x753 * x763
    x1625 = x28 * x809
    x1626 = x117 + x1624 - x1625
    x1627 = x753 * x767
    x1628 = x28 * x771
    x1629 = x161 + x1627 - x1628
    x1630 = x753 * x770
    x1631 = x28 * x813
    x1632 = x120 + x1630 - x1631
    x1633 = x753 * x775
    x1634 = x28 * x779
    x1635 = x160 + x1633 - x1634
    x1636 = x753 * x778
    x1637 = x28 * x818
    x1638 = x119 + x1636 - x1637
    x1639 = (
        x1621 * x3
        - x1622 * x82
        + x88
        * (
            x1623 * x3
            - x1626 * x82
            + x86 * (x1635 * x3 - x1638 * x82 + x81 * (x1629 * x3 - x1632 * x82))
        )
    )
    x1640 = x176 - x28 * x786 + x753 * x785
    x1641 = x753 * x788
    x1642 = x28 * x790
    x1643 = x1641 - x1642 + x178
    x1644 = x177 - x28 * x796 + x753 * x794
    x1645 = (
        -x1623 * x82
        + x1640 * x3
        + x86 * (-x1635 * x82 + x1644 * x3 + x81 * (-x1629 * x82 + x1643 * x3))
    )
    x1646 = x114 - x28 * x802 + x753 * x800
    x1647 = x753 * x804
    x1648 = x765 * x838
    x1649 = x140 + x1647 - x1648
    x1650 = x753 * x808
    x1651 = x765 * x841
    x1652 = x141 + x1650 - x1651
    x1653 = x753 * x812
    x1654 = x765 * x844
    x1655 = x143 + x1653 - x1654
    x1656 = x753 * x817
    x1657 = x765 * x848
    x1658 = x142 + x1656 - x1657
    x1659 = x128 + x753 * x801 - x765 * x856
    x1660 = (
        x13 * x824
        + x16 * x1639
        + x16 * (x16 * x1645 + x1639)
        + x1646 * x3
        - x1659 * x82
        + x90
        * (
            x1622 * x3
            - x1649 * x82
            + x88
            * (
                x1626 * x3
                - x1652 * x82
                + x86 * (x1638 * x3 - x1658 * x82 + x81 * (x1632 * x3 - x1655 * x82))
            )
        )
    )
    x1661 = x210 - x28 * x862 + x753 * x859
    x1662 = x260 - x28 * x886 + x753 * x861
    x1663 = x753 * x867
    x1664 = x28 * x871
    x1665 = x1663 - x1664 + x232
    x1666 = x753 * x870
    x1667 = x28 * x891
    x1668 = x1666 - x1667 + x263
    x1669 = x231 - x28 * x876 + x753 * x864
    x1670 = x753 * x875
    x1671 = x28 * x895
    x1672 = x1670 - x1671 + x262
    x1673 = (
        x1661 * x3
        - x1662 * x82
        + x86 * (x1669 * x3 - x1672 * x82 + x81 * (x1665 * x3 - x1668 * x82))
    )
    x1674 = x1645 * x17 + x1673
    x1675 = x242 - x28 * x883 + x753 * x881
    x1676 = x753 * x885
    x1677 = x765 * x910
    x1678 = x1676 - x1677 + x277
    x1679 = x753 * x890
    x1680 = x765 * x914
    x1681 = x1679 - x1680 + x286
    x1682 = x753 * x894
    x1683 = x765 * x917
    x1684 = x1682 - x1683 + x285
    x1685 = x290 + x753 * x882 - x765 * x923
    x1686 = (
        x1675 * x3
        - x1685 * x82
        + x88
        * (
            x1662 * x3
            - x1678 * x82
            + x86 * (x1672 * x3 - x1684 * x82 + x81 * (x1668 * x3 - x1681 * x82))
        )
    )
    x1687 = x13 * x900 + x16 * x1674 + x1639 * x17 + x1686
    x1688 = x1421 * x753 + x1623 * x81 - x765 * x926
    x1689 = x1626 * x81 - x28 * x946 + x753 * x926
    x1690 = x1120 * x753 + x1629 * x81 - x765 * x927
    x1691 = x1632 * x81 - x28 * x953 + x753 * x927
    x1692 = x1122 * x753 + x1635 * x81 - x765 * x929
    x1693 = x1638 * x81 - x28 * x951 + x753 * x929
    x1694 = (
        x1688 * x3
        - x1689 * x82
        + x86 * (x1692 * x3 - x1693 * x82 + x81 * (x1690 * x3 - x1691 * x82))
    )
    x1695 = x1645 * x18 + x1694
    x1696 = x1430 * x753 + x1622 * x81 - x28 * x944
    x1697 = x1650 * x81 - x1651 * x81 + x1652 * x81
    x1698 = x1653 * x81 - x1654 * x81 + x1655 * x81
    x1699 = x1656 * x81 - x1657 * x81 + x1658 * x81
    x1700 = x1647 * x81 - x1648 * x81 + x1649 * x81
    x1701 = (
        x1696 * x3
        - x1700 * x82
        + x88
        * (
            x1689 * x3
            - x1697 * x82
            + x86 * (x1693 * x3 - x1699 * x82 + x81 * (x1691 * x3 - x1698 * x82))
        )
    )
    x1702 = x13 * x937 + x16 * x1695 + x1639 * x18 + x1701
    x1703 = -x28 * x960 + x310 + x753 * x958
    x1704 = x753 * x965
    x1705 = x28 * x968
    x1706 = x1704 - x1705 + x330
    x1707 = x753 * x967
    x1708 = x765 * x983
    x1709 = x1707 - x1708 + x340
    x1710 = -x28 * x972 + x329 + x753 * x962
    x1711 = x753 * x971
    x1712 = x765 * x987
    x1713 = x1711 - x1712 + x344
    x1714 = x348 + x753 * x959 - x765 * x990
    x1715 = (
        x1703 * x3
        - x1714 * x82
        + x86 * (x1710 * x3 - x1713 * x82 + x81 * (x1706 * x3 - x1709 * x82))
    )
    x1716 = x1673 * x17 + x1715
    x1717 = x13 * x977 + x1674 * x17 + x1716
    x1718 = -x1000 * x28 + x1455 * x753 + x1662 * x81
    x1719 = -x1004 * x28 + x1060 * x753 + x1668 * x81
    x1720 = x1679 * x81 - x1680 * x81 + x1681 * x81
    x1721 = -x1002 * x28 + x1062 * x753 + x1672 * x81
    x1722 = x1682 * x81 - x1683 * x81 + x1684 * x81
    x1723 = x1676 * x81 - x1677 * x81 + x1678 * x81
    x1724 = (
        x1718 * x3
        - x1723 * x82
        + x86 * (x1721 * x3 - x1722 * x82 + x81 * (x1719 * x3 - x1720 * x82))
    )
    x1725 = x1673 * x18 + x1724
    x1726 = x13 * x998 + x1695 * x17 + x1725
    x1727 = x1013 * x1624 - x1013 * x1625 + x1689 * x86
    x1728 = x1013 * x1630 - x1013 * x1631 + x1691 * x86
    x1729 = x1013 * x1653 - x1013 * x1654 + x1698 * x86
    x1730 = x1013 * x1636 - x1013 * x1637 + x1693 * x86
    x1731 = x1013 * x1656 - x1013 * x1657 + x1699 * x86
    x1732 = x1013 * x1650 - x1013 * x1651 + x1697 * x86
    x1733 = (
        x1727 * x3
        - x1732 * x82
        + x86 * (x1730 * x3 - x1731 * x82 + x81 * (x1728 * x3 - x1729 * x82))
    )
    x1734 = x1694 * x18 + x1733
    x1735 = x1018 * x13 + x1695 * x18 + x1734
    x1736 = x1031 * x753 - x1033 * x28 + x363
    x1737 = x1029 * x753 - x1035 * x28 + x361
    x1738 = -x1669 * x82 + x1737 * x3 + x81 * (-x1665 * x82 + x1736 * x3)
    x1739 = x1037 * x13 + x16 * x1673 + x16 * (x16 * x1738 + x1673) + x1686
    x1740 = x1046 * x753 - x1048 * x28 + x381
    x1741 = x1044 * x753 - x1050 * x28 + x379
    x1742 = -x1710 * x82 + x1741 * x3 + x81 * (-x1706 * x82 + x1740 * x3)
    x1743 = x17 * x1738 + x1742
    x1744 = x1053 * x13 + x16 * x1743 + x1716
    x1745 = -x1060 * x765 + x1213 * x753 + x1665 * x81
    x1746 = -x1062 * x765 + x1487 * x753 + x1669 * x81
    x1747 = -x1721 * x82 + x1746 * x3 + x81 * (-x1719 * x82 + x1745 * x3)
    x1748 = x1738 * x18 + x1747
    x1749 = x1065 * x13 + x16 * x1748 + x1725
    x1750 = x1075 * x753 - x1078 * x28 + x407
    x1751 = x1077 * x753
    x1752 = x1090 * x765
    x1753 = x1751 - x1752 + x425
    x1754 = x1073 * x753 - x1082 * x28 + x405
    x1755 = x1081 * x753 - x1093 * x765 + x429
    x1756 = x17 * x1742 + x1754 * x3 - x1755 * x82 + x81 * (x1750 * x3 - x1753 * x82)
    x1757 = x1085 * x13 + x17 * x1743 + x1756
    x1758 = -x1103 * x28 + x1179 * x753 + x1706 * x81
    x1759 = x1707 * x81 - x1708 * x81 + x1709 * x81
    x1760 = -x1101 * x28 + x1505 * x753 + x1710 * x81
    x1761 = x1711 * x81 - x1712 * x81 + x1713 * x81
    x1762 = x1760 * x3 - x1761 * x82 + x81 * (x1758 * x3 - x1759 * x82)
    x1763 = x1742 * x18 + x1762
    x1764 = x1099 * x13 + x17 * x1748 + x1763
    x1765 = x1013 * x1666 - x1013 * x1667 + x1719 * x86
    x1766 = x1013 * x1679 - x1013 * x1680 + x1720 * x86
    x1767 = x1013 * x1670 - x1013 * x1671 + x1721 * x86
    x1768 = x1013 * x1682 - x1013 * x1683 + x1722 * x86
    x1769 = x1767 * x3 - x1768 * x82 + x81 * (x1765 * x3 - x1766 * x82)
    x1770 = x1747 * x18 + x1769
    x1771 = x1112 * x13 + x1748 * x18 + x1770
    x1772 = x1124 * x13
    x1773 = -x1120 * x765 + x1522 * x753 + x1643 * x81
    x1774 = -x1122 * x765 + x1520 * x753 + x1644 * x81
    x1775 = -x1692 * x82 + x1774 * x3 + x81 * (-x1690 * x82 + x1773 * x3)
    x1776 = x16 * x1694 + x16 * (x16 * x1775 + x1694) + x1701
    x1777 = x1130 * x13
    x1778 = x17 * x1775 + x1747
    x1779 = x16 * x1778 + x1694 * x17 + x1724
    x1780 = x1136 * x13
    x1781 = x1013 * x1627 - x1013 * x1628 + x1690 * x86
    x1782 = x1013 * x1633 - x1013 * x1634 + x1692 * x86
    x1783 = -x1730 * x82 + x1782 * x3 + x81 * (-x1728 * x82 + x1781 * x3)
    x1784 = x1775 * x18 + x1783
    x1785 = x16 * x1784 + x1734
    x1786 = x1143 * x13
    x1787 = x17 * x1747 + x1762
    x1788 = x17 * x1778 + x1787
    x1789 = x1146 * x13
    x1790 = x17 * x1784 + x1770
    x1791 = x1153 * x13
    x1792 = x1149 * x1630 - x1149 * x1631 + x1728 * x88
    x1793 = x1149 * x1653 - x1149 * x1654 + x1729 * x88
    x1794 = x1149 * x1636 - x1149 * x1637 + x1730 * x88
    x1795 = x1149 * x1656 - x1149 * x1657 + x1731 * x88
    x1796 = x1783 * x18 + x1794 * x3 - x1795 * x82 + x81 * (x1792 * x3 - x1793 * x82)
    x1797 = x1784 * x18 + x1796
    x1798 = x1160 * x753 - x1161 * x28 + x439
    x1799 = -x1740 * x82 + x1798 * x3
    x1800 = x1163 * x13 + x16 * x1742 + x16 * (x16 * x1799 + x1742) + x1715
    x1801 = x1169 * x753 - x1170 * x28 + x452
    x1802 = -x1750 * x82 + x1801 * x3
    x1803 = x17 * x1799 + x1802
    x1804 = x1173 * x13 + x16 * x1803 + x1756
    x1805 = -x1179 * x765 + x1557 * x753 + x1740 * x81
    x1806 = -x1758 * x82 + x1805 * x3
    x1807 = x1799 * x18 + x1806
    x1808 = x1182 * x13 + x16 * x1807 + x1763
    x1809 = x1189 * x753 - x1191 * x28 + x475
    x1810 = x1190 * x753 - x1196 * x765 + x478
    x1811 = x1193 * x13 + x17 * x1802 + x17 * x1803 + x1809 * x3 - x1810 * x82
    x1812 = -x1201 * x28 + x1567 * x753 + x1750 * x81
    x1813 = x1751 * x81 - x1752 * x81 + x1753 * x81
    x1814 = x1812 * x3 - x1813 * x82
    x1815 = x1199 * x13 + x17 * x1807 + x18 * x1802 + x1814
    x1816 = x1013 * x1704 - x1013 * x1705 + x1758 * x86
    x1817 = x1013 * x1707 - x1013 * x1708 + x1759 * x86
    x1818 = x1816 * x3 - x1817 * x82
    x1819 = x18 * x1806 + x1818
    x1820 = x1207 * x13 + x18 * x1807 + x1819
    x1821 = x1215 * x13
    x1822 = -x1213 * x765 + x1579 * x753 + x1736 * x81
    x1823 = -x1745 * x82 + x1822 * x3
    x1824 = x16 * x1747 + x16 * (x16 * x1823 + x1747) + x1724
    x1825 = x1220 * x13
    x1826 = x17 * x1823 + x1806
    x1827 = x16 * x1826 + x1787
    x1828 = x1225 * x13
    x1829 = x1013 * x1663 - x1013 * x1664 + x1745 * x86
    x1830 = -x1765 * x82 + x1829 * x3
    x1831 = x18 * x1823 + x1830
    x1832 = x16 * x1831 + x1770
    x1833 = x1230 * x13
    x1834 = x17 * x1806 + x17 * x1826 + x1814
    x1835 = x1232 * x13
    x1836 = x17 * x1831 + x1819
    x1837 = x1236 * x13
    x1838 = x1149 * x1666 - x1149 * x1667 + x1765 * x88
    x1839 = x1149 * x1679 - x1149 * x1680 + x1766 * x88
    x1840 = x18 * x1830 + x1838 * x3 - x1839 * x82
    x1841 = x18 * x1831 + x1840
    x1842 = x1241 * x13
    x1843 = x1013 * x1641 - x1013 * x1642 + x1773 * x86
    x1844 = -x1781 * x82 + x1843 * x3
    x1845 = x16 * x1783 + x16 * (x16 * x1844 + x1783) + x1733
    x1846 = x1246 * x13
    x1847 = x17 * x1844 + x1830
    x1848 = x16 * x1847 + x17 * x1783 + x1769
    x1849 = x1251 * x13
    x1850 = x1149 * x1627 - x1149 * x1628 + x1781 * x88
    x1851 = -x1792 * x82 + x1850 * x3
    x1852 = x18 * x1844 + x1851
    x1853 = x16 * x1852 + x1796
    x1854 = x1256 * x13
    x1855 = x17 * x1830 + x17 * x1847 + x1818
    x1856 = x1258 * x13
    x1857 = x17 * x1852 + x1840
    x1858 = x1264 * x13
    x1859 = x1261 * x1630 - x1261 * x1631 + x1792 * x90
    x1860 = x1261 * x1653 - x1261 * x1654 + x1793 * x90
    x1861 = x18 * x1851 + x18 * x1852 + x1859 * x3 - x1860 * x82
    x1862 = x16 * x512
    x1863 = x16 * x487 + x16 * (x1862 + x487) + x525
    x1864 = x17 * x512
    x1865 = x1864 + x569
    x1866 = x16 * x1865 + x17 * x487 + x582
    x1867 = x18 * x1862 + x18 * x487
    x1868 = x17 * x569 + x619
    x1869 = x17 * x1865 + x1868
    x1870 = x18 * x569
    x1871 = x18 * x1864 + x1870
    x1872 = x16 * x657
    x1873 = x16 * x569 + x16 * (x1872 + x569) + x582
    x1874 = x17 * x657
    x1875 = x1874 + x672
    x1876 = x16 * x1875 + x1868
    x1877 = x18 * x1872 + x1870
    x1878 = x17 * x672 + x691
    x1879 = x17 * x1875 + x1878
    x1880 = x18 * x672
    x1881 = x18 * x1874 + x1880
    x1882 = x16 * x713
    x1883 = x16 * x672 + x16 * (x1882 + x672) + x619
    x1884 = x17 * x713
    x1885 = x1884 + x724
    x1886 = x16 * x1885 + x1878
    x1887 = x18 * x1882 + x1880
    x1888 = x17 * x1885 + x17 * x724 + x738
    x1889 = x18 * x1884 + x18 * x724
    x1890 = x1275 * x16
    x1891 = x1266 * x16 + x1280 + x16 * (x1266 + x1890)
    x1892 = x12 * x1863 + x1891
    x1893 = x1275 * x17
    x1894 = x1288 + x1893
    x1895 = x1266 * x17 + x1296 + x16 * x1894
    x1896 = x12 * x1866 + x1895
    x1897 = x1266 * x18 + x18 * x1890
    x1898 = x12 * x1867 + x1897
    x1899 = x1288 * x17 + x1304
    x1900 = x17 * x1894 + x1899
    x1901 = x12 * x1869 + x1900
    x1902 = x1288 * x18
    x1903 = x18 * x1893 + x1902
    x1904 = x12 * x1871 + x1903
    x1905 = x1275 * x19
    x1906 = x1905 + x512 * x650
    x1907 = x1317 * x16
    x1908 = x1288 * x16 + x1296 + x16 * (x1288 + x1907)
    x1909 = x12 * x1873 + x1908
    x1910 = x1317 * x17
    x1911 = x1323 + x1910
    x1912 = x16 * x1911 + x1899
    x1913 = x12 * x1876 + x1912
    x1914 = x18 * x1907 + x1902
    x1915 = x12 * x1877 + x1914
    x1916 = x1323 * x17 + x1330
    x1917 = x17 * x1911 + x1916
    x1918 = x12 * x1879 + x1917
    x1919 = x1323 * x18
    x1920 = x18 * x1910 + x1919
    x1921 = x12 * x1881 + x1920
    x1922 = x1317 * x19
    x1923 = x1922 + x650 * x657
    x1924 = x1337 * x16
    x1925 = x1304 + x1323 * x16 + x16 * (x1323 + x1924)
    x1926 = x12 * x1883 + x1925
    x1927 = x1337 * x17
    x1928 = x1342 + x1927
    x1929 = x16 * x1928 + x1916
    x1930 = x12 * x1886 + x1929
    x1931 = x18 * x1924 + x1919
    x1932 = x12 * x1887 + x1931
    x1933 = x1342 * x17 + x1347 + x17 * x1928
    x1934 = x12 * x1888 + x1933
    x1935 = x1342 * x18 + x18 * x1927
    x1936 = x12 * x1889 + x1935
    x1937 = x1337 * x19
    x1938 = x1937 + x650 * x713
    x1939 = x1352 * x16 + x1377 + x16 * (x1352 + x1371 * x16)
    x1940 = x13 * x1863 + x1939
    x1941 = x1371 * x17 + x1393
    x1942 = x1352 * x17 + x1407 + x16 * x1941
    x1943 = x13 * x1866 + x1942
    x1944 = x1371 * x18 + x1422
    x1945 = x1352 * x18 + x1431 + x16 * x1944
    x1946 = x13 * x1867 + x1945
    x1947 = x1393 * x17 + x1439
    x1948 = x17 * x1941 + x1947
    x1949 = x13 * x1869 + x1948
    x1950 = x1393 * x18 + x1456
    x1951 = x17 * x1944 + x1950
    x1952 = x13 * x1871 + x1951
    x1953 = x1422 * x18 + x1466
    x1954 = x18 * x1944 + x1953
    x1955 = x1011 * x512 + x1954
    x1956 = x1393 * x16 + x1407 + x16 * (x1393 + x1477 * x16)
    x1957 = x13 * x1873 + x1956
    x1958 = x1477 * x17 + x1482
    x1959 = x16 * x1958 + x1947
    x1960 = x13 * x1876 + x1959
    x1961 = x1477 * x18 + x1488
    x1962 = x16 * x1961 + x1950
    x1963 = x13 * x1877 + x1962
    x1964 = x1482 * x17 + x1498
    x1965 = x17 * x1958 + x1964
    x1966 = x13 * x1879 + x1965
    x1967 = x1482 * x18 + x1506
    x1968 = x17 * x1961 + x1967
    x1969 = x13 * x1881 + x1968
    x1970 = x1488 * x18 + x1514
    x1971 = x18 * x1961 + x1970
    x1972 = x1011 * x657 + x1971
    x1973 = x1422 * x16 + x1431 + x16 * (x1422 + x1521 * x16)
    x1974 = x1488 + x1521 * x17
    x1975 = x1422 * x17 + x1456 + x16 * x1974
    x1976 = x1521 * x18 + x1530
    x1977 = x16 * x1976 + x1953
    x1978 = x1488 * x17 + x1506
    x1979 = x17 * x1974 + x1978
    x1980 = x17 * x1976 + x1970
    x1981 = x1530 * x18 + x1543
    x1982 = x18 * x1976 + x1981
    x1983 = x1439 + x1482 * x16 + x16 * (x1482 + x1548 * x16)
    x1984 = x13 * x1883 + x1983
    x1985 = x1548 * x17 + x1552
    x1986 = x16 * x1985 + x1964
    x1987 = x13 * x1886 + x1986
    x1988 = x1548 * x18 + x1558
    x1989 = x16 * x1988 + x1967
    x1990 = x13 * x1887 + x1989
    x1991 = x1552 * x17 + x1563 + x17 * x1985
    x1992 = x13 * x1888 + x1991
    x1993 = x1552 * x18 + x1568 + x17 * x1988
    x1994 = x13 * x1889 + x1993
    x1995 = x1558 * x18 + x1573
    x1996 = x18 * x1988 + x1995
    x1997 = x1011 * x713 + x1996
    x1998 = x1456 + x1488 * x16 + x16 * (x1488 + x1580 * x16)
    x1999 = x1558 + x1580 * x17
    x2000 = x16 * x1999 + x1978
    x2001 = x1580 * x18 + x1587
    x2002 = x16 * x2001 + x1970
    x2003 = x1558 * x17 + x1568 + x17 * x1999
    x2004 = x17 * x2001 + x1995
    x2005 = x1587 * x18 + x1596
    x2006 = x18 * x2001 + x2005
    x2007 = x1466 + x1530 * x16 + x16 * (x1530 + x16 * x1601)
    x2008 = x1587 + x1601 * x17
    x2009 = x1514 + x1530 * x17 + x16 * x2008
    x2010 = x1601 * x18 + x1608
    x2011 = x16 * x2010 + x1981
    x2012 = x1573 + x1587 * x17 + x17 * x2008
    x2013 = x17 * x2010 + x2005
    x2014 = x1608 * x18 + x1617 + x18 * x2010
    x2015 = x1266 * x485 - x1267 * x496 + 2 * x544
    x2016 = -x1268 * x496 + x1275 * x485 + 2 * x549
    x2017 = x16 * x2016
    x2018 = x17 * x2016
    x2019 = (
        x1288 * x485
        - x1289 * x496
        + 2 * x598
        + x81 * (x1268 * x485 - x1269 * x496 + 2 * x545)
    )
    x2020 = x2018 + x2019
    x2021 = (
        x1296 * x485
        - x1300 * x496
        + 2 * x603
        + x81 * (x1267 * x485 - x1281 * x496 + 2 * x554)
    )
    x2022 = (
        x1304 * x485
        - x1309 * x496
        + 2 * x634
        + x86
        * (
            x1289 * x485
            - x1297 * x496
            + 2 * x604
            + x81 * (x1269 * x485 - x1282 * x496 + 2 * x563)
        )
    )
    x2023 = x17 * x2019 + x2022
    x2024 = x18 * x2019
    x2025 = (
        -x1292 * x496
        + x1317 * x485
        + 2 * x663
        + x81 * (-x1272 * x496 + x1277 * x485 + 2 * x550)
    )
    x2026 = x16 * x2025
    x2027 = x17 * x2025
    x2028 = (
        -x1307 * x496
        + x1323 * x485
        + 2 * x679
        + x86
        * (
            x1292 * x485
            - x1293 * x496
            + 2 * x599
            + x81 * (x1272 * x485 - x1273 * x496 + 2 * x546)
        )
    )
    x2029 = x2027 + x2028
    x2030 = (
        x1330 * x485
        - x1331 * x496
        + x17 * x2028
        + 2 * x698
        + x88
        * (
            x1307 * x485
            - x1308 * x496
            + 2 * x635
            + x86
            * (
                x1293 * x485
                - x1299 * x496
                + 2 * x611
                + x81 * (x1273 * x485 - x1284 * x496 + 2 * x564)
            )
        )
    )
    x2031 = x18 * x2028
    x2032 = (
        -x1322 * x496
        + x1337 * x485
        + 2 * x719
        + x86
        * (
            -x1290 * x496
            + x1316 * x485
            + 2 * x664
            + x81 * (-x1270 * x496 + x1276 * x485 + 2 * x551)
        )
    )
    x2033 = x16 * x2032
    x2034 = x17 * x2032
    x2035 = (
        -x1328 * x496
        + x1342 * x485
        + 2 * x731
        + x88
        * (
            -x1305 * x496
            + x1322 * x485
            + 2 * x680
            + x86
            * (
                x1290 * x485
                - x1291 * x496
                + 2 * x600
                + x81 * (x1270 * x485 - x1271 * x496 + 2 * x547)
            )
        )
    )
    x2036 = x2034 + x2035
    x2037 = x1352 * x485 - x1353 * x496 + x827
    x2038 = -x1354 * x496 + x1371 * x485 + x832
    x2039 = x1377 * x485 - x1390 * x496 + x16 * x2037 + x16 * (x16 * x2038 + x2037) + x826
    x2040 = (
        x1393 * x485 - x1394 * x496 + x81 * (x1354 * x485 - x1357 * x496 + x828) + x902
    )
    x2041 = x17 * x2038 + x2040
    x2042 = (
        x1407 * x485 - x1417 * x496 + x81 * (x1353 * x485 - x1380 * x496 + x836) + x907
    )
    x2043 = x16 * x2041 + x17 * x2037 + x2042
    x2044 = x1422 * x485 - x1423 * x496 + x939
    x2045 = x18 * x2038 + x2044
    x2046 = x1431 * x485 - x1435 * x496 + x945
    x2047 = x16 * x2045 + x18 * x2037 + x2046
    x2048 = (
        x1439 * x485
        - x1450 * x496
        + x86
        * (
            x1394 * x485
            - x1410 * x496
            + x81 * (x1357 * x485 - x1383 * x496 + x853)
            + x908
        )
        + x979
    )
    x2049 = x17 * x2040 + x2048
    x2050 = x17 * x2041 + x2049
    x2051 = (
        x1001 + x1456 * x485 - x1461 * x496 + x81 * (x1423 * x485 - x1432 * x496 + x947)
    )
    x2052 = x18 * x2040 + x2051
    x2053 = x17 * x2045 + x2052
    x2054 = x1020 + x1466 * x485 - x1471 * x496
    x2055 = x18 * x2044 + x2054
    x2056 = x18 * x2045 + x2055
    x2057 = (
        x1039 - x1401 * x496 + x1477 * x485 + x81 * (-x1366 * x496 + x1375 * x485 + x833)
    )
    x2058 = x16 * x2040 + x16 * (x16 * x2057 + x2040) + x2042
    x2059 = (
        x1055
        - x1446 * x496
        + x1482 * x485
        + x86
        * (
            x1401 * x485
            - x1404 * x496
            + x81 * (x1366 * x485 - x1369 * x496 + x829)
            + x903
        )
    )
    x2060 = x17 * x2057 + x2059
    x2061 = x16 * x2060 + x2049
    x2062 = (
        x1067 - x1457 * x496 + x1488 * x485 + x81 * (x1424 * x485 - x1425 * x496 + x940)
    )
    x2063 = x18 * x2057 + x2062
    x2064 = x16 * x2063 + x2052
    x2065 = (
        x1087
        + x1498 * x485
        - x1499 * x496
        + x17 * x2059
        + x88
        * (
            x1446 * x485
            - x1449 * x496
            + x86
            * (
                x1404 * x485
                - x1416 * x496
                + x81 * (x1369 * x485 - x1389 * x496 + x854)
                + x921
            )
            + x980
        )
    )
    x2066 = x17 * x2060 + x2065
    x2067 = (
        x1102
        + x1506 * x485
        - x1507 * x496
        + x86
        * (
            x1003
            + x1457 * x485
            - x1460 * x496
            + x81 * (x1425 * x485 - x1433 * x496 + x952)
        )
    )
    x2068 = x18 * x2059 + x2067
    x2069 = x17 * x2063 + x2068
    x2070 = (
        x1114 + x1514 * x485 - x1515 * x496 + x81 * (x1021 + x1467 * x485 - x1468 * x496)
    )
    x2071 = x18 * x2062 + x2070
    x2072 = x18 * x2063 + x2071
    x2073 = x1125 - x1424 * x496 + x1521 * x485
    x2074 = x12 * x1973 + x16 * x2044 + x16 * (x16 * x2073 + x2044) + x2046
    x2075 = x17 * x2073 + x2062
    x2076 = x12 * x1975 + x16 * x2075 + x17 * x2044 + x2051
    x2077 = x1137 - x1467 * x496 + x1530 * x485
    x2078 = x18 * x2073 + x2077
    x2079 = x12 * x1977 + x16 * x2078 + x2055
    x2080 = x17 * x2062 + x2067
    x2081 = x12 * x1979 + x17 * x2075 + x2080
    x2082 = x12 * x1980 + x17 * x2078 + x2071
    x2083 = x1154 + x1543 * x485 - x1544 * x496 + x18 * x2077
    x2084 = x12 * x1982 + x18 * x2078 + x2083
    x2085 = (
        x1165
        - x1481 * x496
        + x1548 * x485
        + x86
        * (
            x1040
            - x1397 * x496
            + x1476 * x485
            + x81 * (-x1360 * x496 + x1374 * x485 + x834)
        )
    )
    x2086 = x16 * x2059 + x16 * (x16 * x2085 + x2059) + x2048
    x2087 = (
        x1175
        - x1494 * x496
        + x1552 * x485
        + x88
        * (
            x1056
            - x1442 * x496
            + x1481 * x485
            + x86
            * (
                x1397 * x485
                - x1400 * x496
                + x81 * (x1360 * x485 - x1363 * x496 + x830)
                + x904
            )
        )
    )
    x2088 = x17 * x2085 + x2087
    x2089 = x16 * x2088 + x2065
    x2090 = (
        x1184
        - x1503 * x496
        + x1558 * x485
        + x86
        * (
            x1068
            - x1458 * x496
            + x1489 * x485
            + x81 * (x1426 * x485 - x1427 * x496 + x941)
        )
    )
    x2091 = x18 * x2085 + x2090
    x2092 = x16 * x2091 + x2068
    x2093 = (
        x1195
        + x1563 * x485
        - x1564 * x496
        + x17 * x2087
        + x17 * x2088
        + x90
        * (
            x1088
            + x1494 * x485
            - x1497 * x496
            + x88
            * (
                x1442 * x485
                - x1445 * x496
                + x86
                * (
                    x1400 * x485
                    - x1413 * x496
                    + x81 * (x1363 * x485 - x1386 * x496 + x855)
                    + x922
                )
                + x981
            )
        )
    )
    x2094 = (
        x1202
        + x1568 * x485
        - x1569 * x496
        + x88
        * (
            x1104
            + x1503 * x485
            - x1504 * x496
            + x86
            * (
                x1005
                + x1458 * x485
                - x1459 * x496
                + x81 * (x1427 * x485 - x1434 * x496 + x954)
            )
        )
    )
    x2095 = x17 * x2091 + x18 * x2087 + x2094
    x2096 = (
        x1209
        + x1573 * x485
        - x1574 * x496
        + x86
        * (
            x1115
            + x1512 * x485
            - x1513 * x496
            + x81 * (x1022 + x1469 * x485 - x1470 * x496)
        )
    )
    x2097 = x18 * x2090 + x2096
    x2098 = x18 * x2091 + x2097
    x2099 = (
        x1216 - x1489 * x496 + x1580 * x485 + x81 * (x1126 - x1426 * x496 + x1523 * x485)
    )
    x2100 = x12 * x1998 + x16 * x2062 + x16 * (x16 * x2099 + x2062) + x2051
    x2101 = x17 * x2099 + x2090
    x2102 = x12 * x2000 + x16 * x2101 + x2080
    x2103 = (
        x1226 - x1512 * x496 + x1587 * x485 + x81 * (x1138 - x1469 * x496 + x1531 * x485)
    )
    x2104 = x18 * x2099 + x2103
    x2105 = x12 * x2002 + x16 * x2104 + x2071
    x2106 = x12 * x2003 + x17 * x2090 + x17 * x2101 + x2094
    x2107 = x12 * x2004 + x17 * x2104 + x2097
    x2108 = (
        x1237
        + x1596 * x485
        - x1597 * x496
        + x18 * x2103
        + x81 * (x1155 + x1541 * x485 - x1542 * x496)
    )
    x2109 = x12 * x2006 + x18 * x2104 + x2108
    x2110 = x1242 - x1531 * x496 + x1601 * x485
    x2111 = x12 * x2007 + x16 * x2077 + x16 * (x16 * x2110 + x2077) + x2054
    x2112 = x17 * x2110 + x2103
    x2113 = x12 * x2009 + x16 * x2112 + x17 * x2077 + x2070
    x2114 = x1252 - x1541 * x496 + x1608 * x485
    x2115 = x18 * x2110 + x2114
    x2116 = x12 * x2011 + x16 * x2115 + x2083
    x2117 = x12 * x2012 + x17 * x2103 + x17 * x2112 + x2096
    x2118 = x12 * x2013 + x17 * x2115 + x2108
    x2119 = x12 * x2014 + x1262 + x1617 * x485 - x1618 * x496 + x18 * x2114 + x18 * x2115
    x2120 = x1621 * x485 - x1622 * x496
    x2121 = -x1623 * x496 + x1640 * x485
    x2122 = (
        x13 * x1939
        + x16 * x2120
        + x16 * (x16 * x2121 + x2120)
        + x1646 * x485
        - x1659 * x496
    )
    x2123 = x1661 * x485 - x1662 * x496 + x81 * (x1623 * x485 - x1626 * x496)
    x2124 = x17 * x2121 + x2123
    x2125 = x1675 * x485 - x1685 * x496 + x81 * (x1622 * x485 - x1649 * x496)
    x2126 = x13 * x1942 + x16 * x2124 + x17 * x2120 + x2125
    x2127 = x1688 * x485 - x1689 * x496
    x2128 = x18 * x2121 + x2127
    x2129 = x1696 * x485 - x1700 * x496
    x2130 = x13 * x1945 + x16 * x2128 + x18 * x2120 + x2129
    x2131 = (
        x1703 * x485
        - x1714 * x496
        + x86 * (x1662 * x485 - x1678 * x496 + x81 * (x1626 * x485 - x1652 * x496))
    )
    x2132 = x17 * x2123 + x2131
    x2133 = x13 * x1948 + x17 * x2124 + x2132
    x2134 = x1718 * x485 - x1723 * x496 + x81 * (x1689 * x485 - x1697 * x496)
    x2135 = x18 * x2123 + x2134
    x2136 = x13 * x1951 + x17 * x2128 + x2135
    x2137 = x1727 * x485 - x1732 * x496
    x2138 = x18 * x2127 + x2137
    x2139 = x13 * x1954 + x18 * x2128 + x2138
    x2140 = -x1669 * x496 + x1737 * x485 + x81 * (-x1635 * x496 + x1644 * x485)
    x2141 = x13 * x1956 + x16 * x2123 + x16 * (x16 * x2140 + x2123) + x2125
    x2142 = (
        -x1710 * x496
        + x1741 * x485
        + x86 * (x1669 * x485 - x1672 * x496 + x81 * (x1635 * x485 - x1638 * x496))
    )
    x2143 = x17 * x2140 + x2142
    x2144 = x13 * x1959 + x16 * x2143 + x2132
    x2145 = -x1721 * x496 + x1746 * x485 + x81 * (x1692 * x485 - x1693 * x496)
    x2146 = x18 * x2140 + x2145
    x2147 = x13 * x1962 + x16 * x2146 + x2135
    x2148 = (
        x17 * x2142
        + x1754 * x485
        - x1755 * x496
        + x88
        * (
            x1710 * x485
            - x1713 * x496
            + x86 * (x1672 * x485 - x1684 * x496 + x81 * (x1638 * x485 - x1658 * x496))
        )
    )
    x2149 = x13 * x1965 + x17 * x2143 + x2148
    x2150 = (
        x1760 * x485
        - x1761 * x496
        + x86 * (x1721 * x485 - x1722 * x496 + x81 * (x1693 * x485 - x1699 * x496))
    )
    x2151 = x18 * x2142 + x2150
    x2152 = x13 * x1968 + x17 * x2146 + x2151
    x2153 = x1767 * x485 - x1768 * x496 + x81 * (x1730 * x485 - x1731 * x496)
    x2154 = x18 * x2145 + x2153
    x2155 = x13 * x1971 + x18 * x2146 + x2154
    x2156 = x13 * x1973
    x2157 = -x1692 * x496 + x1774 * x485
    x2158 = x16 * x2127 + x16 * (x16 * x2157 + x2127) + x2129
    x2159 = x13 * x1975
    x2160 = x17 * x2157 + x2145
    x2161 = x16 * x2160 + x17 * x2127 + x2134
    x2162 = x13 * x1977
    x2163 = -x1730 * x496 + x1782 * x485
    x2164 = x18 * x2157 + x2163
    x2165 = x16 * x2164 + x2138
    x2166 = x13 * x1979
    x2167 = x17 * x2145 + x2150
    x2168 = x17 * x2160 + x2167
    x2169 = x13 * x1980
    x2170 = x17 * x2164 + x2154
    x2171 = x13 * x1982
    x2172 = x1794 * x485 - x1795 * x496 + x18 * x2163
    x2173 = x18 * x2164 + x2172
    x2174 = (
        -x1740 * x496
        + x1798 * x485
        + x86 * (-x1665 * x496 + x1736 * x485 + x81 * (-x1629 * x496 + x1643 * x485))
    )
    x2175 = x13 * x1983 + x16 * x2142 + x16 * (x16 * x2174 + x2142) + x2131
    x2176 = (
        -x1750 * x496
        + x1801 * x485
        + x88
        * (
            -x1706 * x496
            + x1740 * x485
            + x86 * (x1665 * x485 - x1668 * x496 + x81 * (x1629 * x485 - x1632 * x496))
        )
    )
    x2177 = x17 * x2174 + x2176
    x2178 = x13 * x1986 + x16 * x2177 + x2148
    x2179 = (
        -x1758 * x496
        + x1805 * x485
        + x86 * (-x1719 * x496 + x1745 * x485 + x81 * (x1690 * x485 - x1691 * x496))
    )
    x2180 = x18 * x2174 + x2179
    x2181 = x13 * x1989 + x16 * x2180 + x2151
    x2182 = (
        x13 * x1991
        + x17 * x2176
        + x17 * x2177
        + x1809 * x485
        - x1810 * x496
        + x90
        * (
            x1750 * x485
            - x1753 * x496
            + x88
            * (
                x1706 * x485
                - x1709 * x496
                + x86
                * (x1668 * x485 - x1681 * x496 + x81 * (x1632 * x485 - x1655 * x496))
            )
        )
    )
    x2183 = (
        x1812 * x485
        - x1813 * x496
        + x88
        * (
            x1758 * x485
            - x1759 * x496
            + x86 * (x1719 * x485 - x1720 * x496 + x81 * (x1691 * x485 - x1698 * x496))
        )
    )
    x2184 = x13 * x1993 + x17 * x2180 + x18 * x2176 + x2183
    x2185 = (
        x1816 * x485
        - x1817 * x496
        + x86 * (x1765 * x485 - x1766 * x496 + x81 * (x1728 * x485 - x1729 * x496))
    )
    x2186 = x18 * x2179 + x2185
    x2187 = x13 * x1996 + x18 * x2180 + x2186
    x2188 = x13 * x1998
    x2189 = -x1745 * x496 + x1822 * x485 + x81 * (-x1690 * x496 + x1773 * x485)
    x2190 = x16 * x2145 + x16 * (x16 * x2189 + x2145) + x2134
    x2191 = x13 * x2000
    x2192 = x17 * x2189 + x2179
    x2193 = x16 * x2192 + x2167
    x2194 = x13 * x2002
    x2195 = -x1765 * x496 + x1829 * x485 + x81 * (-x1728 * x496 + x1781 * x485)
    x2196 = x18 * x2189 + x2195
    x2197 = x16 * x2196 + x2154
    x2198 = x13 * x2003
    x2199 = x17 * x2179 + x17 * x2192 + x2183
    x2200 = x13 * x2004
    x2201 = x17 * x2196 + x2186
    x2202 = x13 * x2006
    x2203 = (
        x18 * x2195 + x1838 * x485 - x1839 * x496 + x81 * (x1792 * x485 - x1793 * x496)
    )
    x2204 = x18 * x2196 + x2203
    x2205 = x13 * x2007
    x2206 = -x1781 * x496 + x1843 * x485
    x2207 = x16 * x2163 + x16 * (x16 * x2206 + x2163) + x2137
    x2208 = x13 * x2009
    x2209 = x17 * x2206 + x2195
    x2210 = x16 * x2209 + x17 * x2163 + x2153
    x2211 = x13 * x2011
    x2212 = -x1792 * x496 + x1850 * x485
    x2213 = x18 * x2206 + x2212
    x2214 = x16 * x2213 + x2172
    x2215 = x13 * x2012
    x2216 = x17 * x2195 + x17 * x2209 + x2185
    x2217 = x13 * x2013
    x2218 = x17 * x2213 + x2203
    x2219 = x13 * x2014
    x2220 = x18 * x2212 + x18 * x2213 + x1859 * x485 - x1860 * x496
    x2221 = x16 * x755 + x16 * (x16 * x785 + x755) + x800
    x2222 = x17 * x785 + x859
    x2223 = x16 * x2222 + x17 * x755 + x881
    x2224 = x1421 + x18 * x785
    x2225 = x1430 + x16 * x2224 + x18 * x755
    x2226 = x17 * x859 + x958
    x2227 = x17 * x2222 + x2226
    x2228 = x1455 + x18 * x859
    x2229 = x17 * x2224 + x2228
    x2230 = x1013 * x763
    x2231 = x1421 * x18 + x2230
    x2232 = x18 * x2224 + x2231
    x2233 = x16 * x859 + x16 * (x1029 * x16 + x859) + x881
    x2234 = x1029 * x17 + x1044
    x2235 = x16 * x2234 + x2226
    x2236 = x1029 * x18 + x1487
    x2237 = x16 * x2236 + x2228
    x2238 = x1044 * x17 + x1073
    x2239 = x17 * x2234 + x2238
    x2240 = x1044 * x18 + x1505
    x2241 = x17 * x2236 + x2240
    x2242 = x1013 * x875
    x2243 = x1487 * x18 + x2242
    x2244 = x18 * x2236 + x2243
    x2245 = x1421 * x16 + x1430 + x16 * (x1421 + x1520 * x16)
    x2246 = x1487 + x1520 * x17
    x2247 = x1421 * x17 + x1455 + x16 * x2246
    x2248 = x1013 * x775
    x2249 = x1520 * x18 + x2248
    x2250 = x16 * x2249 + x2231
    x2251 = x1487 * x17 + x1505
    x2252 = x17 * x2246 + x2251
    x2253 = x17 * x2249 + x2243
    x2254 = x1149 * x778 + x18 * x2248
    x2255 = x18 * x2249 + x2254
    x2256 = x1044 * x16 + x16 * (x1044 + x1160 * x16) + x958
    x2257 = x1160 * x17 + x1169
    x2258 = x16 * x2257 + x2238
    x2259 = x1160 * x18 + x1557
    x2260 = x16 * x2259 + x2240
    x2261 = x1169 * x17 + x1189 + x17 * x2257
    x2262 = x1169 * x18 + x1567 + x17 * x2259
    x2263 = x1013 * x965
    x2264 = x1557 * x18 + x2263
    x2265 = x18 * x2259 + x2264
    x2266 = x1455 + x1487 * x16 + x16 * (x1487 + x1579 * x16)
    x2267 = x1557 + x1579 * x17
    x2268 = x16 * x2267 + x2251
    x2269 = x1013 * x867
    x2270 = x1579 * x18 + x2269
    x2271 = x16 * x2270 + x2243
    x2272 = x1557 * x17 + x1567 + x17 * x2267
    x2273 = x17 * x2270 + x2264
    x2274 = x1149 * x870 + x18 * x2269
    x2275 = x18 * x2270 + x2274
    x2276 = x1013 * x788
    x2277 = x16 * x2248 + x16 * (x16 * x2276 + x2248) + x2230
    x2278 = x17 * x2276 + x2269
    x2279 = x16 * x2278 + x17 * x2248 + x2242
    x2280 = x1149 * x767
    x2281 = x18 * x2276 + x2280
    x2282 = x16 * x2281 + x2254
    x2283 = x17 * x2269 + x17 * x2278 + x2263
    x2284 = x17 * x2281 + x2274
    x2285 = x1261 * x770 + x18 * x2280 + x18 * x2281
    x2286 = x12 * x2221 + x1939
    x2287 = x12 * x2223 + x1942
    x2288 = x12 * x2225 + x1945
    x2289 = x12 * x2227 + x1948
    x2290 = x12 * x2229 + x1951
    x2291 = x12 * x2232 + x1954
    x2292 = x12 * x2233 + x1956
    x2293 = x12 * x2235 + x1959
    x2294 = x12 * x2237 + x1962
    x2295 = x12 * x2239 + x1965
    x2296 = x12 * x2241 + x1968
    x2297 = x12 * x2244 + x1971
    x2298 = x12 * x2245 + x1973
    x2299 = x12 * x2247 + x1975
    x2300 = x12 * x2250 + x1977
    x2301 = x12 * x2252 + x1979
    x2302 = x12 * x2253 + x1980
    x2303 = x12 * x2255 + x1982
    x2304 = x12 * x2256 + x1983
    x2305 = x12 * x2258 + x1986
    x2306 = x12 * x2260 + x1989
    x2307 = x12 * x2261 + x1991
    x2308 = x12 * x2262 + x1993
    x2309 = x12 * x2265 + x1996
    x2310 = x12 * x2266 + x1998
    x2311 = x12 * x2268 + x2000
    x2312 = x12 * x2271 + x2002
    x2313 = x12 * x2272 + x2003
    x2314 = x12 * x2273 + x2004
    x2315 = x12 * x2275 + x2006
    x2316 = x12 * x2277 + x2007
    x2317 = x12 * x2279 + x2009
    x2318 = x12 * x2282 + x2011
    x2319 = x12 * x2283 + x2012
    x2320 = x12 * x2284 + x2013
    x2321 = x12 * x2285 + x2014
    x2322 = x16 * x1621 + x16 * (x16 * x1640 + x1621) + x1646
    x2323 = x13 * x2221 + x2322
    x2324 = x1640 * x17 + x1661
    x2325 = x16 * x2324 + x1621 * x17 + x1675
    x2326 = x13 * x2223 + x2325
    x2327 = x1640 * x18 + x1688
    x2328 = x16 * x2327 + x1621 * x18 + x1696
    x2329 = x13 * x2225 + x2328
    x2330 = x1661 * x17 + x1703
    x2331 = x17 * x2324 + x2330
    x2332 = x13 * x2227 + x2331
    x2333 = x1661 * x18 + x1718
    x2334 = x17 * x2327 + x2333
    x2335 = x13 * x2229 + x2334
    x2336 = x1688 * x18 + x1727
    x2337 = x18 * x2327 + x2336
    x2338 = x13 * x2232 + x2337
    x2339 = x16 * x1661 + x16 * (x16 * x1737 + x1661) + x1675
    x2340 = x13 * x2233 + x2339
    x2341 = x17 * x1737 + x1741
    x2342 = x16 * x2341 + x2330
    x2343 = x13 * x2235 + x2342
    x2344 = x1737 * x18 + x1746
    x2345 = x16 * x2344 + x2333
    x2346 = x13 * x2237 + x2345
    x2347 = x17 * x1741 + x1754
    x2348 = x17 * x2341 + x2347
    x2349 = x13 * x2239 + x2348
    x2350 = x1741 * x18 + x1760
    x2351 = x17 * x2344 + x2350
    x2352 = x13 * x2241 + x2351
    x2353 = x1746 * x18 + x1767
    x2354 = x18 * x2344 + x2353
    x2355 = x13 * x2244 + x2354
    x2356 = x16 * x1688 + x16 * (x16 * x1774 + x1688) + x1696
    x2357 = x13 * x2245 + x2356
    x2358 = x17 * x1774 + x1746
    x2359 = x16 * x2358 + x1688 * x17 + x1718
    x2360 = x13 * x2247 + x2359
    x2361 = x1774 * x18 + x1782
    x2362 = x16 * x2361 + x2336
    x2363 = x13 * x2250 + x2362
    x2364 = x17 * x1746 + x1760
    x2365 = x17 * x2358 + x2364
    x2366 = x13 * x2252 + x2365
    x2367 = x17 * x2361 + x2353
    x2368 = x13 * x2253 + x2367
    x2369 = x1782 * x18 + x1794
    x2370 = x18 * x2361 + x2369
    x2371 = x13 * x2255 + x2370
    x2372 = x16 * x1741 + x16 * (x16 * x1798 + x1741) + x1703
    x2373 = x13 * x2256 + x2372
    x2374 = x17 * x1798 + x1801
    x2375 = x16 * x2374 + x2347
    x2376 = x13 * x2258 + x2375
    x2377 = x1798 * x18 + x1805
    x2378 = x16 * x2377 + x2350
    x2379 = x13 * x2260 + x2378
    x2380 = x17 * x1801 + x17 * x2374 + x1809
    x2381 = x13 * x2261 + x2380
    x2382 = x17 * x2377 + x18 * x1801 + x1812
    x2383 = x13 * x2262 + x2382
    x2384 = x18 * x1805 + x1816
    x2385 = x18 * x2377 + x2384
    x2386 = x13 * x2265 + x2385
    x2387 = x16 * x1746 + x16 * (x16 * x1822 + x1746) + x1718
    x2388 = x13 * x2266 + x2387
    x2389 = x17 * x1822 + x1805
    x2390 = x16 * x2389 + x2364
    x2391 = x13 * x2268 + x2390
    x2392 = x18 * x1822 + x1829
    x2393 = x16 * x2392 + x2353
    x2394 = x13 * x2271 + x2393
    x2395 = x17 * x1805 + x17 * x2389 + x1812
    x2396 = x13 * x2272 + x2395
    x2397 = x17 * x2392 + x2384
    x2398 = x13 * x2273 + x2397
    x2399 = x18 * x1829 + x1838
    x2400 = x18 * x2392 + x2399
    x2401 = x13 * x2275 + x2400
    x2402 = x16 * x1782 + x16 * (x16 * x1843 + x1782) + x1727
    x2403 = x13 * x2277 + x2402
    x2404 = x17 * x1843 + x1829
    x2405 = x16 * x2404 + x17 * x1782 + x1767
    x2406 = x13 * x2279 + x2405
    x2407 = x18 * x1843 + x1850
    x2408 = x16 * x2407 + x2369
    x2409 = x13 * x2282 + x2408
    x2410 = x17 * x1829 + x17 * x2404 + x1816
    x2411 = x13 * x2283 + x2410
    x2412 = x17 * x2407 + x2399
    x2413 = x13 * x2284 + x2412
    x2414 = x18 * x1850 + x18 * x2407 + x1859
    x2415 = x13 * x2285 + x2414
    x2416 = x1621 * x753 - x1622 * x765 + 2 * x827
    x2417 = -x1623 * x765 + x1640 * x753 + 2 * x832
    x2418 = x1661 * x753 - x1662 * x765 + 2 * x902
    x2419 = x17 * x2417 + x2418
    x2420 = x1675 * x753 - x1685 * x765 + 2 * x907
    x2421 = (
        x1688 * x753
        - x1689 * x765
        + x81 * (x1623 * x753 - x1626 * x765 + 2 * x828)
        + 2 * x939
    )
    x2422 = x18 * x2417 + x2421
    x2423 = (
        x1696 * x753
        - x1700 * x765
        + x81 * (x1622 * x753 - x1649 * x765 + 2 * x836)
        + 2 * x945
    )
    x2424 = x1703 * x753 - x1714 * x765 + 2 * x979
    x2425 = x17 * x2418 + x2424
    x2426 = (
        2 * x1001
        + x1718 * x753
        - x1723 * x765
        + x81 * (x1662 * x753 - x1678 * x765 + 2 * x908)
    )
    x2427 = x18 * x2418 + x2426
    x2428 = (
        2 * x1020
        + x1727 * x753
        - x1732 * x765
        + x86
        * (
            x1689 * x753
            - x1697 * x765
            + x81 * (x1626 * x753 - x1652 * x765 + 2 * x853)
            + 2 * x947
        )
    )
    x2429 = x18 * x2421 + x2428
    x2430 = 2 * x1039 - x1669 * x765 + x1737 * x753
    x2431 = 2 * x1055 - x1710 * x765 + x1741 * x753
    x2432 = x17 * x2430 + x2431
    x2433 = (
        2 * x1067
        - x1721 * x765
        + x1746 * x753
        + x81 * (x1669 * x753 - x1672 * x765 + 2 * x903)
    )
    x2434 = x18 * x2430 + x2433
    x2435 = 2 * x1087 + x17 * x2431 + x1754 * x753 - x1755 * x765
    x2436 = (
        2 * x1102
        + x1760 * x753
        - x1761 * x765
        + x81 * (x1710 * x753 - x1713 * x765 + 2 * x980)
    )
    x2437 = x18 * x2431 + x2436
    x2438 = (
        2 * x1114
        + x1767 * x753
        - x1768 * x765
        + x86
        * (
            2 * x1003
            + x1721 * x753
            - x1722 * x765
            + x81 * (x1672 * x753 - x1684 * x765 + 2 * x921)
        )
    )
    x2439 = x18 * x2433 + x2438
    x2440 = (
        2 * x1125
        - x1692 * x765
        + x1774 * x753
        + x81 * (-x1635 * x765 + x1644 * x753 + 2 * x833)
    )
    x2441 = x17 * x2440 + x2433
    x2442 = (
        2 * x1137
        - x1730 * x765
        + x1782 * x753
        + x86
        * (
            x1692 * x753
            - x1693 * x765
            + x81 * (x1635 * x753 - x1638 * x765 + 2 * x829)
            + 2 * x940
        )
    )
    x2443 = x18 * x2440 + x2442
    x2444 = x17 * x2433 + x2436
    x2445 = (
        2 * x1154
        + x1794 * x753
        - x1795 * x765
        + x18 * x2442
        + x88
        * (
            2 * x1021
            + x1730 * x753
            - x1731 * x765
            + x86
            * (
                x1693 * x753
                - x1699 * x765
                + x81 * (x1638 * x753 - x1658 * x765 + 2 * x854)
                + 2 * x952
            )
        )
    )
    x2446 = 2 * x1165 - x1740 * x765 + x1798 * x753
    x2447 = 2 * x1175 - x1750 * x765 + x1801 * x753
    x2448 = x17 * x2446 + x2447
    x2449 = (
        2 * x1184
        - x1758 * x765
        + x1805 * x753
        + x81 * (2 * x1056 - x1706 * x765 + x1740 * x753)
    )
    x2450 = x18 * x2446 + x2449
    x2451 = (
        2 * x1202
        + x1812 * x753
        - x1813 * x765
        + x81 * (2 * x1088 + x1750 * x753 - x1753 * x765)
    )
    x2452 = (
        2 * x1209
        + x1816 * x753
        - x1817 * x765
        + x86
        * (
            2 * x1104
            + x1758 * x753
            - x1759 * x765
            + x81 * (x1706 * x753 - x1709 * x765 + 2 * x981)
        )
    )
    x2453 = x18 * x2449 + x2452
    x2454 = (
        2 * x1216
        - x1745 * x765
        + x1822 * x753
        + x81 * (2 * x1040 - x1665 * x765 + x1736 * x753)
    )
    x2455 = x17 * x2454 + x2449
    x2456 = (
        2 * x1226
        - x1765 * x765
        + x1829 * x753
        + x86
        * (
            2 * x1068
            - x1719 * x765
            + x1745 * x753
            + x81 * (x1665 * x753 - x1668 * x765 + 2 * x904)
        )
    )
    x2457 = x18 * x2454 + x2456
    x2458 = (
        2 * x1237
        + x18 * x2456
        + x1838 * x753
        - x1839 * x765
        + x88
        * (
            2 * x1115
            + x1765 * x753
            - x1766 * x765
            + x86
            * (
                2 * x1005
                + x1719 * x753
                - x1720 * x765
                + x81 * (x1668 * x753 - x1681 * x765 + 2 * x922)
            )
        )
    )
    x2459 = (
        2 * x1242
        - x1781 * x765
        + x1843 * x753
        + x86
        * (
            2 * x1126
            - x1690 * x765
            + x1773 * x753
            + x81 * (-x1629 * x765 + x1643 * x753 + 2 * x834)
        )
    )
    x2460 = x17 * x2459 + x2456
    x2461 = (
        2 * x1252
        - x1792 * x765
        + x1850 * x753
        + x88
        * (
            2 * x1138
            - x1728 * x765
            + x1781 * x753
            + x86
            * (
                x1690 * x753
                - x1691 * x765
                + x81 * (x1629 * x753 - x1632 * x765 + 2 * x830)
                + 2 * x941
            )
        )
    )
    x2462 = x18 * x2459 + x2461

    # 648 item(s)
    S = numpy.array(
        [
            x11 * x187
            + x11 * (x11 * x189 + x187)
            + x113 * (x111 - x92)
            + x127 * x3
            + x16 * x168
            + x16 * (x168 + x185)
            - x82
            * (x128 + x147 * x90 + x3 * x91 - x82 * (-x135 * x82 + x139 * x90 + x3 * x74))
            + x90
            * (
                x113 * (x110 - x116)
                + x126 * x3
                - x147 * x82
                + x88
                * (
                    x113 * (x109 - x118)
                    + x125 * x3
                    - x146 * x82
                    + x86
                    * (
                        x113 * (x108 - x123)
                        + x124 * x3
                        - x145 * x82
                        + x81
                        * (
                            x113 * (2 * x10 * x14 * x20 * x3 * x41 * x6 - x105 - x121)
                            + x122 * x3
                            - x144 * x82
                        )
                    )
                )
            ),
            x11 * x270 + x11 * (x11 * x273 + x270) + x16 * x276 + x168 * x17 + x292,
            x11 * x293 + x11 * (x11 * x294 + x293) + x168 * x18 + x18 * x185,
            x11 * x337 + x11 * (x11 * x339 + x337) + x17 * x276 + x352,
            x11 * x354 + x11 * (x11 * x356 + x354) + x18 * x274 + x357,
            x11 * x358 + x11 * (x175 * x359 + x358) + x184 * x19,
            x11 * x372
            + x11 * (x11 * x374 + x372)
            + x16 * x275
            + x16 * (x275 + x376)
            + x292,
            x11 * x390 + x11 * (x11 * x393 + x390) + x16 * x396 + x352,
            x11 * x397 + x11 * (x11 * x398 + x397) + x18 * x376 + x357,
            x11 * x422 + x11 * (x11 * x424 + x422) + x17 * x396 + x431,
            x11 * x433 + x11 * (x11 * x435 + x433) + x18 * x394 + x436,
            x11 * x437 + x11 * (x359 * x368 + x437) + x19 * x375,
            0,
            0,
            0,
            0,
            0,
            0,
            x11 * x445
            + x11 * (x11 * x447 + x445)
            + x16 * x395
            + x16 * (x395 + x449)
            + x351,
            x11 * x458 + x11 * (x11 * x461 + x458) + x16 * x464 + x431,
            x11 * x465 + x11 * (x11 * x466 + x465) + x18 * x449 + x436,
            x11 * x480
            + x11 * (x11 * x481 + x480)
            + x113 * (x3 * x467 - x470 - x474)
            + x17 * x463
            + x17 * x464
            + x3 * x477
            - x82 * (x3 * x473 + x478 - x82 * (x3 * x471 - x479 * x82)),
            x11 * x482 + x11 * (x11 * x483 + x482) + x18 * x462 + x18 * x463,
            x11 * x484 + x11 * (x359 * x441 + x484) + x19 * x448,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            x11 * x542 + x12 * x187 + x567,
            x11 * x596 + x12 * x270 + x615,
            x11 * x617 + x12 * x293 + x618,
            x11 * x633 + x12 * x337 + x644,
            x11 * x647 + x12 * x354 + x649,
            x11 * x652 + x12 * x358 + x653,
            x11 * x662 + x12 * x372 + x667,
            x11 * x677 + x12 * x390 + x683,
            x11 * x685 + x12 * x397 + x686,
            x11 * x697 + x12 * x422 + x704,
            x11 * x707 + x12 * x433 + x709,
            x11 * x711 + x12 * x437 + x712,
            0,
            0,
            0,
            0,
            0,
            0,
            x11 * x718 + x12 * x445 + x722,
            x11 * x729 + x12 * x458 + x734,
            x11 * x736 + x12 * x465 + x737,
            x11 * x743 + x12 * x480 + x746,
            x11 * x748 + x12 * x482 + x749,
            x11 * x751 + x12 * x484 + x752,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            x11 * x825 + x13 * x187 + x857,
            x11 * x901 + x13 * x270 + x925,
            x11 * x938 + x13 * x293 + x956,
            x11 * x978 + x13 * x337 + x993,
            x1010 + x11 * x999 + x13 * x354,
            x1019 * x11 + x1027 + x13 * x358,
            x1038 * x11 + x1042 + x13 * x372,
            x1054 * x11 + x1059 + x13 * x390,
            x1066 * x11 + x1071 + x13 * x397,
            x1086 * x11 + x1095 + x13 * x422,
            x11 * x1100 + x1108 + x13 * x433,
            x11 * x1113 + x1119 + x13 * x437,
            x1128,
            x1132,
            x1141,
            x1145,
            x1147,
            x1158,
            x11 * x1164 + x1167 + x13 * x445,
            x11 * x1174 + x1178 + x13 * x458,
            x11 * x1183 + x1187 + x13 * x465,
            x11 * x1194 + x1197 + x13 * x480,
            x11 * x1200 + x1204 + x13 * x482,
            x11 * x1208 + x1212 + x13 * x484,
            x1218,
            x1222,
            x1229,
            x1231,
            x1233,
            x1239,
            x1244,
            x1248,
            x1255,
            x1257,
            x1259,
            x1265,
            x12 * x542 + x1286,
            x12 * x596 + x1302,
            x12 * x617 + x1303,
            x12 * x633 + x1312,
            x12 * x647 + x1314,
            x12 * x652 + x1315,
            x12 * x662 + x1320,
            x12 * x677 + x1326,
            x12 * x685 + x1327,
            x12 * x697 + x1333,
            x12 * x707 + x1335,
            x12 * x711 + x1336,
            0,
            0,
            0,
            0,
            0,
            0,
            x12 * x718 + x1340,
            x12 * x729 + x1345,
            x12 * x736 + x1346,
            x12 * x743 + x1349,
            x12 * x748 + x1350,
            x12 * x751 + x1351,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            x12 * x825 + x1392,
            x12 * x901 + x1420,
            x12 * x938 + x1438,
            x12 * x978 + x1454,
            x12 * x999 + x1465,
            x1019 * x12 + x1475,
            x1038 * x12 + x1480,
            x1054 * x12 + x1486,
            x1066 * x12 + x1493,
            x1086 * x12 + x1502,
            x1100 * x12 + x1511,
            x1113 * x12 + x1519,
            x1526,
            x1529,
            x1535,
            x1538,
            x1540,
            x1547,
            x1164 * x12 + x1551,
            x1174 * x12 + x1556,
            x1183 * x12 + x1562,
            x1194 * x12 + x1566,
            x12 * x1200 + x1572,
            x12 * x1208 + x1578,
            x1583,
            x1586,
            x1591,
            x1593,
            x1595,
            x1600,
            x1604,
            x1607,
            x1612,
            x1614,
            x1616,
            x1620,
            x13 * x825 + x1660,
            x13 * x901 + x1687,
            x13 * x938 + x1702,
            x13 * x978 + x1717,
            x13 * x999 + x1726,
            x1019 * x13 + x1735,
            x1038 * x13 + x1739,
            x1054 * x13 + x1744,
            x1066 * x13 + x1749,
            x1086 * x13 + x1757,
            x1100 * x13 + x1764,
            x1113 * x13 + x1771,
            2 * x1772 + x1776,
            2 * x1777 + x1779,
            2 * x1780 + x1785,
            2 * x1786 + x1788,
            2 * x1789 + x1790,
            2 * x1791 + x1797,
            x1164 * x13 + x1800,
            x1174 * x13 + x1804,
            x1183 * x13 + x1808,
            x1194 * x13 + x1811,
            x1200 * x13 + x1815,
            x1208 * x13 + x1820,
            2 * x1821 + x1824,
            2 * x1825 + x1827,
            2 * x1828 + x1832,
            2 * x1833 + x1834,
            2 * x1835 + x1836,
            2 * x1837 + x1841,
            2 * x1842 + x1845,
            2 * x1846 + x1848,
            2 * x1849 + x1853,
            2 * x1854 + x1855,
            2 * x1856 + x1857,
            2 * x1858 + x1861,
            x11 * x541 + x11 * (x11 * x1863 + x541) + x567,
            x11 * x595 + x11 * (x11 * x1866 + x595) + x615,
            x11 * x616 + x11 * (x11 * x1867 + x616) + x618,
            x11 * x632 + x11 * (x11 * x1869 + x632) + x644,
            x11 * x646 + x11 * (x11 * x1871 + x646) + x649,
            x11 * x651 + x11 * (x359 * x512 + x651) + x653,
            x11 * x661 + x11 * (x11 * x1873 + x661) + x667,
            x11 * x676 + x11 * (x11 * x1876 + x676) + x683,
            x11 * x684 + x11 * (x11 * x1877 + x684) + x686,
            x11 * x696 + x11 * (x11 * x1879 + x696) + x704,
            x11 * x706 + x11 * (x11 * x1881 + x706) + x709,
            x11 * x710 + x11 * (x359 * x657 + x710) + x712,
            0,
            0,
            0,
            0,
            0,
            0,
            x11 * x717 + x11 * (x11 * x1883 + x717) + x722,
            x11 * x728 + x11 * (x11 * x1886 + x728) + x734,
            x11 * x735 + x11 * (x11 * x1887 + x735) + x737,
            x11 * x742 + x11 * (x11 * x1888 + x742) + x746,
            x11 * x747 + x11 * (x11 * x1889 + x747) + x749,
            x11 * x750 + x11 * (x359 * x713 + x750) + x752,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            x11 * x1892 + x1286,
            x11 * x1896 + x1302,
            x11 * x1898 + x1303,
            x11 * x1901 + x1312,
            x11 * x1904 + x1314,
            x11 * x1906 + x1315,
            x11 * x1909 + x1320,
            x11 * x1913 + x1326,
            x11 * x1915 + x1327,
            x11 * x1918 + x1333,
            x11 * x1921 + x1335,
            x11 * x1923 + x1336,
            0,
            0,
            0,
            0,
            0,
            0,
            x11 * x1926 + x1340,
            x11 * x1930 + x1345,
            x11 * x1932 + x1346,
            x11 * x1934 + x1349,
            x11 * x1936 + x1350,
            x11 * x1938 + x1351,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            x11 * x1940 + x1392,
            x11 * x1943 + x1420,
            x11 * x1946 + x1438,
            x11 * x1949 + x1454,
            x11 * x1952 + x1465,
            x11 * x1955 + x1475,
            x11 * x1957 + x1480,
            x11 * x1960 + x1486,
            x11 * x1963 + x1493,
            x11 * x1966 + x1502,
            x11 * x1969 + x1511,
            x11 * x1972 + x1519,
            x11 * x1973 + x1525,
            x11 * x1975 + x1528,
            x11 * x1977 + x1534,
            x11 * x1979 + x1537,
            x11 * x1980 + x1539,
            x11 * x1982 + x1546,
            x11 * x1984 + x1551,
            x11 * x1987 + x1556,
            x11 * x1990 + x1562,
            x11 * x1992 + x1566,
            x11 * x1994 + x1572,
            x11 * x1997 + x1578,
            x11 * x1998 + x1582,
            x11 * x2000 + x1585,
            x11 * x2002 + x1590,
            x11 * x2003 + x1592,
            x11 * x2004 + x1594,
            x11 * x2006 + x1599,
            x11 * x2007 + x1603,
            x11 * x2009 + x1606,
            x11 * x2011 + x1611,
            x11 * x2012 + x1613,
            x11 * x2013 + x1615,
            x11 * x2014 + x1619,
            x12 * x1891
            + x12 * x1892
            + x1280 * x485
            - x1285 * x496
            + x16 * x2015
            + x16 * (x2015 + x2017)
            + 2 * x543,
            x12 * x1895 + x12 * x1896 + x16 * x2020 + x17 * x2015 + x2021,
            x12 * x1897 + x12 * x1898 + x18 * x2015 + x18 * x2017,
            x12 * x1900 + x12 * x1901 + x17 * x2020 + x2023,
            x12 * x1903 + x12 * x1904 + x18 * x2018 + x2024,
            x12 * x1905 + x12 * x1906 + x19 * x2016,
            x12 * x1908 + x12 * x1909 + x16 * x2019 + x16 * (x2019 + x2026) + x2021,
            x12 * x1912 + x12 * x1913 + x16 * x2029 + x2023,
            x12 * x1914 + x12 * x1915 + x18 * x2026 + x2024,
            x12 * x1917 + x12 * x1918 + x17 * x2029 + x2030,
            x12 * x1920 + x12 * x1921 + x18 * x2027 + x2031,
            x12 * x1922 + x12 * x1923 + x19 * x2025,
            0,
            0,
            0,
            0,
            0,
            0,
            x12 * x1925 + x12 * x1926 + x16 * x2028 + x16 * (x2028 + x2033) + x2022,
            x12 * x1929 + x12 * x1930 + x16 * x2036 + x2030,
            x12 * x1931 + x12 * x1932 + x18 * x2033 + x2031,
            x12 * x1933
            + x12 * x1934
            + x1347 * x485
            - x1348 * x496
            + x17 * x2035
            + x17 * x2036
            + 2 * x744
            + x90
            * (
                x1328 * x485
                - x1329 * x496
                + 2 * x699
                + x88
                * (
                    x1305 * x485
                    - x1306 * x496
                    + 2 * x636
                    + x86
                    * (
                        x1291 * x485
                        - x1298 * x496
                        + 2 * x612
                        + x81 * (x1271 * x485 - x1283 * x496 + 2 * x565)
                    )
                )
            ),
            x12 * x1935 + x12 * x1936 + x18 * x2034 + x18 * x2035,
            x12 * x1937 + x12 * x1938 + x19 * x2032,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            x12 * x1940 + x13 * x1891 + x2039,
            x12 * x1943 + x13 * x1895 + x2043,
            x12 * x1946 + x13 * x1897 + x2047,
            x12 * x1949 + x13 * x1900 + x2050,
            x12 * x1952 + x13 * x1903 + x2053,
            x12 * x1955 + x13 * x1905 + x2056,
            x12 * x1957 + x13 * x1908 + x2058,
            x12 * x1960 + x13 * x1912 + x2061,
            x12 * x1963 + x13 * x1914 + x2064,
            x12 * x1966 + x13 * x1917 + x2066,
            x12 * x1969 + x13 * x1920 + x2069,
            x12 * x1972 + x13 * x1922 + x2072,
            x2074,
            x2076,
            x2079,
            x2081,
            x2082,
            x2084,
            x12 * x1984 + x13 * x1925 + x2086,
            x12 * x1987 + x13 * x1929 + x2089,
            x12 * x1990 + x13 * x1931 + x2092,
            x12 * x1992 + x13 * x1933 + x2093,
            x12 * x1994 + x13 * x1935 + x2095,
            x12 * x1997 + x13 * x1937 + x2098,
            x2100,
            x2102,
            x2105,
            x2106,
            x2107,
            x2109,
            x2111,
            x2113,
            x2116,
            x2117,
            x2118,
            x2119,
            x13 * x1940 + x2122,
            x13 * x1943 + x2126,
            x13 * x1946 + x2130,
            x13 * x1949 + x2133,
            x13 * x1952 + x2136,
            x13 * x1955 + x2139,
            x13 * x1957 + x2141,
            x13 * x1960 + x2144,
            x13 * x1963 + x2147,
            x13 * x1966 + x2149,
            x13 * x1969 + x2152,
            x13 * x1972 + x2155,
            2 * x2156 + x2158,
            2 * x2159 + x2161,
            2 * x2162 + x2165,
            2 * x2166 + x2168,
            2 * x2169 + x2170,
            2 * x2171 + x2173,
            x13 * x1984 + x2175,
            x13 * x1987 + x2178,
            x13 * x1990 + x2181,
            x13 * x1992 + x2182,
            x13 * x1994 + x2184,
            x13 * x1997 + x2187,
            2 * x2188 + x2190,
            2 * x2191 + x2193,
            2 * x2194 + x2197,
            2 * x2198 + x2199,
            2 * x2200 + x2201,
            2 * x2202 + x2204,
            2 * x2205 + x2207,
            2 * x2208 + x2210,
            2 * x2211 + x2214,
            2 * x2215 + x2216,
            2 * x2217 + x2218,
            2 * x2219 + x2220,
            x11 * x824 + x11 * (x11 * x2221 + x824) + x857,
            x11 * x900 + x11 * (x11 * x2223 + x900) + x925,
            x11 * x937 + x11 * (x11 * x2225 + x937) + x956,
            x11 * x977 + x11 * (x11 * x2227 + x977) + x993,
            x1010 + x11 * x998 + x11 * (x11 * x2229 + x998),
            x1018 * x11 + x1027 + x11 * (x1018 + x11 * x2232),
            x1037 * x11 + x1042 + x11 * (x1037 + x11 * x2233),
            x1053 * x11 + x1059 + x11 * (x1053 + x11 * x2235),
            x1065 * x11 + x1071 + x11 * (x1065 + x11 * x2237),
            x1085 * x11 + x1095 + x11 * (x1085 + x11 * x2239),
            x1099 * x11 + x11 * (x1099 + x11 * x2241) + x1108,
            x11 * x1112 + x11 * (x11 * x2244 + x1112) + x1119,
            x11 * (x11 * x2245 + x1124) + x1128,
            x11 * (x11 * x2247 + x1130) + x1132,
            x11 * (x11 * x2250 + x1136) + x1141,
            x11 * (x11 * x2252 + x1143) + x1145,
            x11 * (x11 * x2253 + x1146) + x1147,
            x11 * (x11 * x2255 + x1153) + x1158,
            x11 * x1163 + x11 * (x11 * x2256 + x1163) + x1167,
            x11 * x1173 + x11 * (x11 * x2258 + x1173) + x1178,
            x11 * x1182 + x11 * (x11 * x2260 + x1182) + x1187,
            x11 * x1193 + x11 * (x11 * x2261 + x1193) + x1197,
            x11 * x1199 + x11 * (x11 * x2262 + x1199) + x1204,
            x11 * x1207 + x11 * (x11 * x2265 + x1207) + x1212,
            x11 * (x11 * x2266 + x1215) + x1218,
            x11 * (x11 * x2268 + x1220) + x1222,
            x11 * (x11 * x2271 + x1225) + x1229,
            x11 * (x11 * x2272 + x1230) + x1231,
            x11 * (x11 * x2273 + x1232) + x1233,
            x11 * (x11 * x2275 + x1236) + x1239,
            x11 * (x11 * x2277 + x1241) + x1244,
            x11 * (x11 * x2279 + x1246) + x1248,
            x11 * (x11 * x2282 + x1251) + x1255,
            x11 * (x11 * x2283 + x1256) + x1257,
            x11 * (x11 * x2284 + x1258) + x1259,
            x11 * (x11 * x2285 + x1264) + x1265,
            x11 * x2286 + x12 * x824 + x1391,
            x11 * x2287 + x12 * x900 + x1419,
            x11 * x2288 + x12 * x937 + x1437,
            x11 * x2289 + x12 * x977 + x1453,
            x11 * x2290 + x12 * x998 + x1464,
            x1018 * x12 + x11 * x2291 + x1474,
            x1037 * x12 + x11 * x2292 + x1479,
            x1053 * x12 + x11 * x2293 + x1485,
            x1065 * x12 + x11 * x2294 + x1492,
            x1085 * x12 + x11 * x2295 + x1501,
            x1099 * x12 + x11 * x2296 + x1510,
            x11 * x2297 + x1112 * x12 + x1518,
            x11 * x2298 + x1526,
            x11 * x2299 + x1529,
            x11 * x2300 + x1535,
            x11 * x2301 + x1538,
            x11 * x2302 + x1540,
            x11 * x2303 + x1547,
            x11 * x2304 + x1163 * x12 + x1550,
            x11 * x2305 + x1173 * x12 + x1555,
            x11 * x2306 + x1182 * x12 + x1561,
            x11 * x2307 + x1193 * x12 + x1565,
            x11 * x2308 + x1199 * x12 + x1571,
            x11 * x2309 + x12 * x1207 + x1577,
            x11 * x2310 + x1583,
            x11 * x2311 + x1586,
            x11 * x2312 + x1591,
            x11 * x2313 + x1593,
            x11 * x2314 + x1595,
            x11 * x2315 + x1600,
            x11 * x2316 + x1604,
            x11 * x2317 + x1607,
            x11 * x2318 + x1612,
            x11 * x2319 + x1614,
            x11 * x2320 + x1616,
            x11 * x2321 + x1620,
            x11 * x2323 + x1660,
            x11 * x2326 + x1687,
            x11 * x2329 + x1702,
            x11 * x2332 + x1717,
            x11 * x2335 + x1726,
            x11 * x2338 + x1735,
            x11 * x2340 + x1739,
            x11 * x2343 + x1744,
            x11 * x2346 + x1749,
            x11 * x2349 + x1757,
            x11 * x2352 + x1764,
            x11 * x2355 + x1771,
            x11 * x2357 + x1772 + x1776,
            x11 * x2360 + x1777 + x1779,
            x11 * x2363 + x1780 + x1785,
            x11 * x2366 + x1786 + x1788,
            x11 * x2368 + x1789 + x1790,
            x11 * x2371 + x1791 + x1797,
            x11 * x2373 + x1800,
            x11 * x2376 + x1804,
            x11 * x2379 + x1808,
            x11 * x2381 + x1811,
            x11 * x2383 + x1815,
            x11 * x2386 + x1820,
            x11 * x2388 + x1821 + x1824,
            x11 * x2391 + x1825 + x1827,
            x11 * x2394 + x1828 + x1832,
            x11 * x2396 + x1833 + x1834,
            x11 * x2398 + x1835 + x1836,
            x11 * x2401 + x1837 + x1841,
            x11 * x2403 + x1842 + x1845,
            x11 * x2406 + x1846 + x1848,
            x11 * x2409 + x1849 + x1853,
            x11 * x2411 + x1854 + x1855,
            x11 * x2413 + x1856 + x1857,
            x11 * x2415 + x1858 + x1861,
            x12 * x1939 + x12 * x2286 + x2039,
            x12 * x1942 + x12 * x2287 + x2043,
            x12 * x1945 + x12 * x2288 + x2047,
            x12 * x1948 + x12 * x2289 + x2050,
            x12 * x1951 + x12 * x2290 + x2053,
            x12 * x1954 + x12 * x2291 + x2056,
            x12 * x1956 + x12 * x2292 + x2058,
            x12 * x1959 + x12 * x2293 + x2061,
            x12 * x1962 + x12 * x2294 + x2064,
            x12 * x1965 + x12 * x2295 + x2066,
            x12 * x1968 + x12 * x2296 + x2069,
            x12 * x1971 + x12 * x2297 + x2072,
            x12 * x2298 + x2074,
            x12 * x2299 + x2076,
            x12 * x2300 + x2079,
            x12 * x2301 + x2081,
            x12 * x2302 + x2082,
            x12 * x2303 + x2084,
            x12 * x1983 + x12 * x2304 + x2086,
            x12 * x1986 + x12 * x2305 + x2089,
            x12 * x1989 + x12 * x2306 + x2092,
            x12 * x1991 + x12 * x2307 + x2093,
            x12 * x1993 + x12 * x2308 + x2095,
            x12 * x1996 + x12 * x2309 + x2098,
            x12 * x2310 + x2100,
            x12 * x2311 + x2102,
            x12 * x2312 + x2105,
            x12 * x2313 + x2106,
            x12 * x2314 + x2107,
            x12 * x2315 + x2109,
            x12 * x2316 + x2111,
            x12 * x2317 + x2113,
            x12 * x2318 + x2116,
            x12 * x2319 + x2117,
            x12 * x2320 + x2118,
            x12 * x2321 + x2119,
            x12 * x2323 + x2122,
            x12 * x2326 + x2126,
            x12 * x2329 + x2130,
            x12 * x2332 + x2133,
            x12 * x2335 + x2136,
            x12 * x2338 + x2139,
            x12 * x2340 + x2141,
            x12 * x2343 + x2144,
            x12 * x2346 + x2147,
            x12 * x2349 + x2149,
            x12 * x2352 + x2152,
            x12 * x2355 + x2155,
            x12 * x2357 + x2156 + x2158,
            x12 * x2360 + x2159 + x2161,
            x12 * x2363 + x2162 + x2165,
            x12 * x2366 + x2166 + x2168,
            x12 * x2368 + x2169 + x2170,
            x12 * x2371 + x2171 + x2173,
            x12 * x2373 + x2175,
            x12 * x2376 + x2178,
            x12 * x2379 + x2181,
            x12 * x2381 + x2182,
            x12 * x2383 + x2184,
            x12 * x2386 + x2187,
            x12 * x2388 + x2188 + x2190,
            x12 * x2391 + x2191 + x2193,
            x12 * x2394 + x2194 + x2197,
            x12 * x2396 + x2198 + x2199,
            x12 * x2398 + x2200 + x2201,
            x12 * x2401 + x2202 + x2204,
            x12 * x2403 + x2205 + x2207,
            x12 * x2406 + x2208 + x2210,
            x12 * x2409 + x2211 + x2214,
            x12 * x2411 + x2215 + x2216,
            x12 * x2413 + x2217 + x2218,
            x12 * x2415 + x2219 + x2220,
            x13 * x2322
            + x13 * x2323
            + x16 * x2416
            + x16 * (x16 * x2417 + x2416)
            + x1646 * x753
            - x1659 * x765
            + 2 * x826,
            x13 * x2325 + x13 * x2326 + x16 * x2419 + x17 * x2416 + x2420,
            x13 * x2328 + x13 * x2329 + x16 * x2422 + x18 * x2416 + x2423,
            x13 * x2331 + x13 * x2332 + x17 * x2419 + x2425,
            x13 * x2334 + x13 * x2335 + x17 * x2422 + x2427,
            x13 * x2337 + x13 * x2338 + x18 * x2422 + x2429,
            x13 * x2339 + x13 * x2340 + x16 * x2418 + x16 * (x16 * x2430 + x2418) + x2420,
            x13 * x2342 + x13 * x2343 + x16 * x2432 + x2425,
            x13 * x2345 + x13 * x2346 + x16 * x2434 + x2427,
            x13 * x2348 + x13 * x2349 + x17 * x2432 + x2435,
            x13 * x2351 + x13 * x2352 + x17 * x2434 + x2437,
            x13 * x2354 + x13 * x2355 + x18 * x2434 + x2439,
            x13 * x2356 + x13 * x2357 + x16 * x2421 + x16 * (x16 * x2440 + x2421) + x2423,
            x13 * x2359 + x13 * x2360 + x16 * x2441 + x17 * x2421 + x2426,
            x13 * x2362 + x13 * x2363 + x16 * x2443 + x2429,
            x13 * x2365 + x13 * x2366 + x17 * x2441 + x2444,
            x13 * x2367 + x13 * x2368 + x17 * x2443 + x2439,
            x13 * x2370 + x13 * x2371 + x18 * x2443 + x2445,
            x13 * x2372 + x13 * x2373 + x16 * x2431 + x16 * (x16 * x2446 + x2431) + x2424,
            x13 * x2375 + x13 * x2376 + x16 * x2448 + x2435,
            x13 * x2378 + x13 * x2379 + x16 * x2450 + x2437,
            2 * x1195
            + x13 * x2380
            + x13 * x2381
            + x17 * x2447
            + x17 * x2448
            + x1809 * x753
            - x1810 * x765,
            x13 * x2382 + x13 * x2383 + x17 * x2450 + x18 * x2447 + x2451,
            x13 * x2385 + x13 * x2386 + x18 * x2450 + x2453,
            x13 * x2387 + x13 * x2388 + x16 * x2433 + x16 * (x16 * x2454 + x2433) + x2426,
            x13 * x2390 + x13 * x2391 + x16 * x2455 + x2444,
            x13 * x2393 + x13 * x2394 + x16 * x2457 + x2439,
            x13 * x2395 + x13 * x2396 + x17 * x2449 + x17 * x2455 + x2451,
            x13 * x2397 + x13 * x2398 + x17 * x2457 + x2453,
            x13 * x2400 + x13 * x2401 + x18 * x2457 + x2458,
            x13 * x2402 + x13 * x2403 + x16 * x2442 + x16 * (x16 * x2459 + x2442) + x2428,
            x13 * x2405 + x13 * x2406 + x16 * x2460 + x17 * x2442 + x2438,
            x13 * x2408 + x13 * x2409 + x16 * x2462 + x2445,
            x13 * x2410 + x13 * x2411 + x17 * x2456 + x17 * x2460 + x2452,
            x13 * x2412 + x13 * x2413 + x17 * x2462 + x2458,
            2 * x1262
            + x13 * x2414
            + x13 * x2415
            + x18 * x2461
            + x18 * x2462
            + x1859 * x753
            - x1860 * x765
            + x90
            * (
                2 * x1155
                + x1792 * x753
                - x1793 * x765
                + x88
                * (
                    2 * x1022
                    + x1728 * x753
                    - x1729 * x765
                    + x86
                    * (
                        x1691 * x753
                        - x1698 * x765
                        + x81 * (x1632 * x753 - x1655 * x765 + 2 * x855)
                        + 2 * x954
                    )
                )
            ),
        ]
    )
    return S


def eri_2000(a, A, b, B, c, C, d, D):
    """Cartesian [ds|ss] 2-electron electron repulsion integral.

    Generated code; DO NOT modify by hand!"""

    x0 = numpy.pi**2.5
    x1 = a + b
    x2 = c + d
    x3 = x1 * x2
    x4 = x1 + x2
    x5 = (x3 + numpy.sqrt(x4)) ** (-1.0)
    x6 = x1 ** (-1.0)
    x7 = numpy.exp(
        -a * b * x6 * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2)
    )
    x8 = x2 ** (-1.0)
    x9 = numpy.exp(
        -c * d * x8 * ((C[0] - D[0]) ** 2 + (C[1] - D[1]) ** 2 + (C[2] - D[2]) ** 2)
    )
    x10 = x4 ** (-1.0)
    x11 = -x6 * (a * A[0] + b * B[0])
    x12 = -x11 - x8 * (c * C[0] + d * D[0])
    x13 = -x6 * (a * A[1] + b * B[1])
    x14 = -x13 - x8 * (c * C[1] + d * D[1])
    x15 = -x6 * (a * A[2] + b * B[2])
    x16 = -x15 - x8 * (c * C[2] + d * D[2])
    x17 = x10 * x3 * (x12**2 + x14**2 + x16**2)
    x18 = boys(0, x17)
    x19 = x10 * x2
    x20 = 2 * x0 * x5 * x7 * x9
    x21 = x20 * boys(1, x17)
    x22 = (2 * x0 * x18 * x5 * x7 * x9 - x19 * x21) / (2 * a + 2 * b)
    x23 = -x11 - A[0]
    x24 = x18 * x20
    x25 = x12 * x19
    x26 = x20 * boys(2, x17)
    x27 = -x13 - A[1]
    x28 = x14 * x19
    x29 = -x21 * x28 + x24 * x27
    x30 = x21 * x27 - x26 * x28
    x31 = -x15 - A[2]
    x32 = x16 * x19
    x33 = -x21 * x32 + x24 * x31
    x34 = x21 * x31 - x26 * x32

    # 6 item(s)
    S = numpy.array(
        [
            x22 + x23 * (-x21 * x25 + x23 * x24) - x25 * (x21 * x23 - x25 * x26),
            x23 * x29 - x25 * x30,
            x23 * x33 - x25 * x34,
            x22 + x27 * x29 - x28 * x30,
            x27 * x33 - x28 * x34,
            x22 + x31 * x33 - x32 * x34,
        ]
    )
    return S


def eri_2001(a, A, b, B, c, C, d, D):
    """Cartesian [ds|sp] 2-electron electron repulsion integral.

    Generated code; DO NOT modify by hand!"""

    x0 = 2 * a + 2 * b
    x1 = x0 ** (-1.0)
    x2 = c + d
    x3 = x2 ** (-1.0)
    x4 = x3 * (c * C[0] + d * D[0])
    x5 = x4 - C[0]
    x6 = a + b
    x7 = x2 + x6
    x8 = x7 ** (-1.0)
    x9 = x6 ** (-1.0)
    x10 = -x9 * (a * A[0] + b * B[0])
    x11 = -x10 - x4
    x12 = x3 * (c * C[1] + d * D[1])
    x13 = -x9 * (a * A[1] + b * B[1])
    x14 = -x12 - x13
    x15 = -x9 * (a * A[2] + b * B[2])
    x16 = -x15 - x3 * (c * C[2] + d * D[2])
    x17 = x2 * x6
    x18 = x17 * x8 * (x11**2 + x14**2 + x16**2)
    x19 = boys(1, x18)
    x20 = numpy.pi**2.5
    x21 = (x17 + numpy.sqrt(x7)) ** (-1.0)
    x22 = numpy.exp(
        -a * b * x9 * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2)
    )
    x23 = C[0] - D[0]
    x24 = C[1] - D[1]
    x25 = C[2] - D[2]
    x26 = numpy.exp(-c * d * x3 * (x23**2 + x24**2 + x25**2))
    x27 = 2 * x20 * x21 * x22 * x26
    x28 = x19 * x27
    x29 = x27 * boys(2, x18)
    x30 = x6 * x8
    x31 = x11 * x30
    x32 = x28 * x5 + x29 * x31
    x33 = x2 * x8
    x34 = x32 * x33
    x35 = boys(0, x18)
    x36 = x27 * x35
    x37 = x28 * x31 + x36 * x5
    x38 = x1 * (-x34 + x37)
    x39 = x1 * (2 * x20 * x21 * x22 * x26 * x35 - x28 * x33)
    x40 = -x10 - A[0]
    x41 = x11 * x33
    x42 = x28 * x40 - x29 * x41
    x43 = x39 + x40 * (-x28 * x41 + x36 * x40) - x41 * x42
    x44 = (2 * c + 2 * d + x0) ** (-1.0)
    x45 = x1 * (2 * x19 * x20 * x21 * x22 * x26 - x29 * x33)
    x46 = x27 * boys(3, x18)
    x47 = x29 * x40 - x41 * x46
    x48 = x29 * x5 + x31 * x46
    x49 = x12 - C[1]
    x50 = x14 * x30
    x51 = x28 * x49 + x29 * x50
    x52 = x33 * x51
    x53 = x28 * x50 + x36 * x49
    x54 = x1 * (-x52 + x53)
    x55 = x29 * x49 + x46 * x50
    x56 = -x13 - A[1]
    x57 = x14 * x33
    x58 = -x28 * x57 + x36 * x56
    x59 = x28 * x56 - x29 * x57
    x60 = x40 * x58 - x41 * x59
    x61 = x29 * x56 - x46 * x57
    x62 = -x14 * x34 + x37 * x56
    x63 = x32 * x56 - x48 * x57
    x64 = -x14 * x52 + x44 * x59 + x53 * x56
    x65 = x44 * x61 + x51 * x56 - x55 * x57
    x66 = -x15 - A[2]
    x67 = x16 * x33
    x68 = -x28 * x67 + x36 * x66
    x69 = x28 * x66 - x29 * x67
    x70 = x40 * x68 - x41 * x69
    x71 = x40 * x69
    x72 = x29 * x66 - x46 * x67
    x73 = x41 * x72
    x74 = -x16 * x34 + x37 * x66
    x75 = x32 * x66 - x48 * x67
    x76 = -x16 * x52 + x53 * x66
    x77 = x51 * x66 - x55 * x67
    x78 = x39 + x56 * x58 - x57 * x59
    x79 = x56 * x68 - x57 * x69
    x80 = x56 * x69
    x81 = x57 * x72
    x82 = x39 + x66 * x68 - x67 * x69
    x83 = x66 * x69
    x84 = x67 * x72

    # 18 item(s)
    S = numpy.array(
        [
            x23 * x43
            + x38
            + x40 * (-x11 * x34 + x37 * x40 + x42 * x44)
            - x41 * (x32 * x40 - x41 * x48 + x44 * x47)
            + x44 * (x40 * x42 - x41 * x47 + x45),
            x24 * x43
            + x40 * (-x11 * x52 + x40 * x53)
            - x41 * (x40 * x51 - x41 * x55)
            + x54,
            x25 * x43,
            x23 * x60 + x40 * x62 - x41 * x63 + x44 * (x40 * x59 - x41 * x61),
            x24 * x60 + x40 * x64 - x41 * x65,
            x25 * x60,
            x23 * x70 + x40 * x74 - x41 * x75 + x44 * (x71 - x73),
            x24 * x70 + x40 * x76 - x41 * x77,
            x25 * x70 + x44 * x71 - x44 * x73,
            x23 * x78 + x38 + x56 * x62 - x57 * x63,
            x24 * x78 + x44 * (x45 + x56 * x59 - x57 * x61) + x54 + x56 * x64 - x57 * x65,
            x25 * x78,
            x23 * x79 + x56 * x74 - x57 * x75,
            x24 * x79 + x44 * (x80 - x81) + x56 * x76 - x57 * x77,
            x25 * x79 + x44 * x80 - x44 * x81,
            x23 * x82 + x38 + x66 * x74 - x67 * x75,
            x24 * x82 + x54 + x66 * x76 - x67 * x77,
            x25 * x82 + x44 * x83 - x44 * x84 + x44 * (x45 + x83 - x84),
        ]
    )
    return S


def eri_2002(a, A, b, B, c, C, d, D):
    """Cartesian [ds|sd] 2-electron electron repulsion integral.

    Generated code; DO NOT modify by hand!"""

    x0 = 2 * a + 2 * b
    x1 = x0 ** (-1.0)
    x2 = 2 * c + 2 * d
    x3 = x2 ** (-1.0)
    x4 = numpy.pi**2.5
    x5 = a + b
    x6 = c + d
    x7 = x5 * x6
    x8 = x5 + x6
    x9 = (x7 + numpy.sqrt(x8)) ** (-1.0)
    x10 = x5 ** (-1.0)
    x11 = numpy.exp(
        -a * b * x10 * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2)
    )
    x12 = x6 ** (-1.0)
    x13 = C[0] - D[0]
    x14 = C[1] - D[1]
    x15 = C[2] - D[2]
    x16 = x15**2
    x17 = numpy.exp(-c * d * x12 * (x13**2 + x14**2 + x16))
    x18 = x8 ** (-1.0)
    x19 = x12 * (c * C[0] + d * D[0])
    x20 = -x10 * (a * A[0] + b * B[0])
    x21 = -x19 - x20
    x22 = x12 * (c * C[1] + d * D[1])
    x23 = -x10 * (a * A[1] + b * B[1])
    x24 = -x22 - x23
    x25 = -x10 * (a * A[2] + b * B[2])
    x26 = -x12 * (c * C[2] + d * D[2]) - x25
    x27 = x18 * x7 * (x21**2 + x24**2 + x26**2)
    x28 = boys(1, x27)
    x29 = -2 * x11 * x17 * x28 * x4 * x9
    x30 = x18 * x5
    x31 = boys(2, x27)
    x32 = 2 * x11 * x17 * x4 * x9
    x33 = x31 * x32
    x34 = x3 * (-x29 - x30 * x33)
    x35 = x19 - C[0]
    x36 = x28 * x32
    x37 = x21 * x30
    x38 = x33 * x37 + x35 * x36
    x39 = x32 * boys(3, x27)
    x40 = x33 * x35 + x37 * x39
    x41 = x34 + x35 * x38 + x37 * x40
    x42 = x18 * x6
    x43 = x41 * x42
    x44 = boys(0, x27)
    x45 = -2 * x11 * x17 * x4 * x44 * x9
    x46 = x3 * (-x30 * x36 - x45)
    x47 = x32 * x44
    x48 = x35 * x47 + x36 * x37
    x49 = x35 * x48 + x37 * x38 + x46
    x50 = x1 * (-x43 + x49)
    x51 = -x20 - A[0]
    x52 = x0 + x2
    x53 = x52 ** (-1.0)
    x54 = x21 * x42
    x55 = x33 * x51 - x39 * x54
    x56 = x40 * x42
    x57 = -x21 * x56 + x38 * x51 + x53 * x55
    x58 = 2 * x53
    x59 = -2 * x11 * x17 * x31 * x4 * x9
    x60 = x3 * (-x30 * x39 - x59)
    x61 = x32 * boys(4, x27)
    x62 = x35 * x39 + x37 * x61
    x63 = x35 * x40 + x37 * x62 + x60
    x64 = x39 * x51 - x54 * x61
    x65 = x40 * x51 + x53 * x64 - x54 * x62
    x66 = x38 * x42
    x67 = x1 * (x48 - x66)
    x68 = x1 * (-x29 - x33 * x42)
    x69 = -x33 * x54 + x36 * x51
    x70 = (
        x51 * (-x21 * x66 + x48 * x51 + x53 * x69)
        + x53 * (x51 * x69 - x54 * x55 + x68)
        - x54 * x57
        + x67
    )
    x71 = x1 * (x38 - x56)
    x72 = x1 * (-x39 * x42 - x59)
    x73 = x1 * (-x36 * x42 - x45)
    x74 = x51 * (-x36 * x54 + x47 * x51) - x54 * x69 + x73
    x75 = x13 * x74
    x76 = x22 - C[1]
    x77 = x24 * x30
    x78 = x33 * x77 + x36 * x76
    x79 = x33 * x76 + x39 * x77
    x80 = x35 * x78 + x37 * x79
    x81 = x42 * x80
    x82 = x36 * x77 + x47 * x76
    x83 = x35 * x82 + x37 * x78
    x84 = x1 * (-x81 + x83)
    x85 = x42 * x79
    x86 = x1 * (x78 - x85)
    x87 = -x21 * x85 + x51 * x78
    x88 = x39 * x76 + x61 * x77
    x89 = x51 * x79 - x54 * x88
    x90 = x35 * x79 + x37 * x88
    x91 = x14 * x74
    x92 = x42 * x78
    x93 = x1 * (x82 - x92)
    x94 = x51 * (-x21 * x92 + x51 * x82) - x54 * x87 + x93
    x95 = x91 + x94
    x96 = x34 + x76 * x78 + x77 * x79
    x97 = x42 * x96
    x98 = x46 + x76 * x82 + x77 * x78
    x99 = x1 * (-x97 + x98)
    x100 = x60 + x76 * x79 + x77 * x88
    x101 = -x23 - A[1]
    x102 = x101 * x49 - x24 * x43
    x103 = x24 * x42
    x104 = x101 * x41 - x103 * x63
    x105 = x101 * x36 - x103 * x33
    x106 = x101 * x33 - x103 * x39
    x107 = x101 * x48 - x24 * x66
    x108 = x101 * x38 - x24 * x56
    x109 = x107 * x51 - x108 * x54 + x53 * (x105 * x51 - x106 * x54)
    x110 = x101 * x39 - x103 * x61
    x111 = x101 * x40 - x103 * x62
    x112 = x101 * x47 - x103 * x36
    x113 = -x105 * x54 + x112 * x51
    x114 = x113 * x13
    x115 = x101 * x78 + x106 * x53 - x24 * x85
    x116 = x101 * x79 - x103 * x88 + x110 * x53
    x117 = x101 * x83 + x108 * x53 - x24 * x81
    x118 = x101 * x80 - x103 * x90 + x111 * x53
    x119 = x113 * x14
    x120 = x101 * x82 + x105 * x53 - x24 * x92
    x121 = -x115 * x54 + x120 * x51
    x122 = x119 + x121
    x123 = x101 * x98 + x115 * x58 - x24 * x97
    x124 = -x100 * x103 + x101 * x96 + x116 * x58
    x125 = -x25 - A[2]
    x126 = x125 * x49 - x26 * x43
    x127 = x26 * x42
    x128 = x125 * x41 - x127 * x63
    x129 = x125 * x36 - x127 * x33
    x130 = x129 * x51
    x131 = x125 * x33 - x127 * x39
    x132 = x131 * x54
    x133 = x125 * x48 - x26 * x66
    x134 = x125 * x38 - x26 * x56
    x135 = x133 * x51 - x134 * x54 + x53 * (x130 - x132)
    x136 = x131 * x51
    x137 = x125 * x39 - x127 * x61
    x138 = x137 * x54
    x139 = x134 * x51
    x140 = x125 * x40 - x127 * x62
    x141 = x140 * x54
    x142 = x125 * x47 - x127 * x36
    x143 = -x129 * x54 + x142 * x51
    x144 = x125 * x83 - x26 * x81
    x145 = x125 * x78 - x26 * x85
    x146 = x145 * x51
    x147 = x125 * x79 - x127 * x88
    x148 = x147 * x54
    x149 = x125 * x80 - x127 * x90
    x150 = x125 * x82 - x26 * x92
    x151 = -x145 * x54 + x150 * x51
    x152 = x14 * x143 + x151
    x153 = x130 * x53 - x132 * x53
    x154 = x143 * x15 + x153
    x155 = x125 * x98 - x26 * x97
    x156 = -x100 * x127 + x125 * x96
    x157 = 2 / x52**2
    x158 = x101 * x107 - x103 * x108 + x67
    x159 = x101 * x112 - x103 * x105 + x73
    x160 = x13 * x159
    x161 = x14 * x159
    x162 = x101 * x120 - x103 * x115 + x53 * (x101 * x105 - x103 * x106 + x68) + x93
    x163 = x161 + x162
    x164 = x101 * x133 - x103 * x134
    x165 = x101 * x142 - x103 * x129
    x166 = x101 * x134
    x167 = x103 * x140
    x168 = x101 * x129
    x169 = x103 * x131
    x170 = x101 * x150 - x103 * x145 + x53 * (x168 - x169)
    x171 = x14 * x165 + x170
    x172 = x168 * x53 - x169 * x53
    x173 = x15 * x165 + x172
    x174 = x101 * x131
    x175 = x103 * x137
    x176 = x101 * x145
    x177 = x103 * x147
    x178 = x125 * x133 - x127 * x134 + x67
    x179 = x125 * x142 - x127 * x129 + x73
    x180 = x125 * x150 - x127 * x145 + x93
    x181 = x14 * x179 + x180
    x182 = x125 * x134
    x183 = x127 * x140
    x184 = x125 * x129
    x185 = x127 * x131
    x186 = x184 * x53 - x185 * x53 + x53 * (x184 - x185 + x68)
    x187 = x15 * x179 + x186
    x188 = x125 * x145
    x189 = x127 * x147
    x190 = x125 * x131
    x191 = x127 * x137

    # 36 item(s)
    S = numpy.array(
        [
            x13 * x70
            + x13 * (x70 + x75)
            + x50
            + x51 * (-x21 * x43 + x49 * x51 + x57 * x58)
            - x54 * (x41 * x51 - x54 * x63 + x58 * x65)
            + x58 * (x51 * x57 + x53 * (x51 * x55 - x54 * x64 + x72) - x54 * x65 + x71),
            x13 * x95
            + x14 * x70
            + x51 * (-x21 * x81 + x51 * x83 + x53 * x87)
            + x53 * (x51 * x87 - x54 * x89 + x86)
            - x54 * (x51 * x80 + x53 * x89 - x54 * x90)
            + x84,
            x15 * x70 + x15 * x75,
            x14 * x94
            + x14 * x95
            + x51 * (-x21 * x97 + x51 * x98)
            - x54 * (-x100 * x54 + x51 * x96)
            + x99,
            x15 * x91 + x15 * x94,
            x16 * x74,
            x102 * x51
            - x104 * x54
            + x109 * x13
            + x13 * (x109 + x114)
            + x58 * (x108 * x51 - x111 * x54 + x53 * (x106 * x51 - x110 * x54)),
            x109 * x14
            + x117 * x51
            - x118 * x54
            + x122 * x13
            + x53 * (x115 * x51 - x116 * x54),
            x109 * x15 + x114 * x15,
            x121 * x14 + x122 * x14 + x123 * x51 - x124 * x54,
            x119 * x15 + x121 * x15,
            x113 * x16,
            x126 * x51
            - x128 * x54
            + x13 * x135
            + x13 * (x13 * x143 + x135)
            + x58 * (x139 - x141 + x53 * (x136 - x138)),
            x13 * x152 + x135 * x14 + x144 * x51 - x149 * x54 + x53 * (x146 - x148),
            x13 * x154
            + x135 * x15
            + x139 * x53
            - x141 * x53
            + x53 * (x136 * x53 - x138 * x53),
            x14 * x151 + x14 * x152 + x155 * x51 - x156 * x54,
            x14 * x154 + x146 * x53 - x148 * x53 + x15 * x151,
            x136 * x157 - x138 * x157 + x15 * x153 + x15 * x154,
            x101 * x102 - x103 * x104 + x13 * x158 + x13 * (x158 + x160) + x50,
            x101 * x117
            - x103 * x118
            + x13 * x163
            + x14 * x158
            + x53 * (x101 * x108 - x103 * x111 + x71)
            + x84,
            x15 * x158 + x15 * x160,
            x101 * x123
            - x103 * x124
            + x14 * x162
            + x14 * x163
            + x58
            * (x101 * x115 - x103 * x116 + x53 * (x101 * x106 - x103 * x110 + x72) + x86)
            + x99,
            x15 * x161 + x15 * x162,
            x159 * x16,
            x101 * x126 - x103 * x128 + x13 * x164 + x13 * (x13 * x165 + x164),
            x101 * x144 - x103 * x149 + x13 * x171 + x14 * x164 + x53 * (x166 - x167),
            x13 * x173 + x15 * x164 + x166 * x53 - x167 * x53,
            x101 * x155
            - x103 * x156
            + x14 * x170
            + x14 * x171
            + x58 * (x176 - x177 + x53 * (x174 - x175)),
            x14 * x173
            + x15 * x170
            + x176 * x53
            - x177 * x53
            + x53 * (x174 * x53 - x175 * x53),
            x15 * x172 + x15 * x173 + x157 * x174 - x157 * x175,
            x125 * x126 - x127 * x128 + x13 * x178 + x13 * (x13 * x179 + x178) + x50,
            x125 * x144 - x127 * x149 + x13 * x181 + x14 * x178 + x84,
            x13 * x187 + x15 * x178 + x182 * x53 - x183 * x53 + x53 * (x182 - x183 + x71),
            x125 * x155 - x127 * x156 + x14 * x180 + x14 * x181 + x99,
            x14 * x187 + x15 * x180 + x188 * x53 - x189 * x53 + x53 * (x188 - x189 + x86),
            x15 * x186
            + x15 * x187
            + x157 * x190
            - x157 * x191
            + x58 * (x190 * x53 - x191 * x53 + x53 * (x190 - x191 + x72)),
        ]
    )
    return S


def eri_2010(a, A, b, B, c, C, d, D):
    """Cartesian [ds|ps] 2-electron electron repulsion integral.

    Generated code; DO NOT modify by hand!"""

    x0 = 2 * a + 2 * b
    x1 = x0 ** (-1.0)
    x2 = c + d
    x3 = x2 ** (-1.0)
    x4 = x3 * (c * C[0] + d * D[0])
    x5 = x4 - C[0]
    x6 = a + b
    x7 = x2 + x6
    x8 = x7 ** (-1.0)
    x9 = x6 ** (-1.0)
    x10 = -x9 * (a * A[0] + b * B[0])
    x11 = -x10 - x4
    x12 = x3 * (c * C[1] + d * D[1])
    x13 = -x9 * (a * A[1] + b * B[1])
    x14 = -x12 - x13
    x15 = -x9 * (a * A[2] + b * B[2])
    x16 = -x15 - x3 * (c * C[2] + d * D[2])
    x17 = x2 * x6
    x18 = x17 * x8 * (x11**2 + x14**2 + x16**2)
    x19 = boys(1, x18)
    x20 = numpy.pi**2.5
    x21 = (x17 + numpy.sqrt(x7)) ** (-1.0)
    x22 = numpy.exp(
        -a * b * x9 * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2)
    )
    x23 = numpy.exp(
        -c * d * x3 * ((C[0] - D[0]) ** 2 + (C[1] - D[1]) ** 2 + (C[2] - D[2]) ** 2)
    )
    x24 = 2 * x20 * x21 * x22 * x23
    x25 = x19 * x24
    x26 = boys(2, x18)
    x27 = x24 * x26
    x28 = x6 * x8
    x29 = x11 * x28
    x30 = x25 * x5 + x27 * x29
    x31 = x2 * x8
    x32 = x30 * x31
    x33 = boys(0, x18)
    x34 = x24 * x5
    x35 = x25 * x29 + x33 * x34
    x36 = x1 * (-x32 + x35)
    x37 = (2 * c + 2 * d + x0) ** (-1.0)
    x38 = x1 * (2 * x19 * x20 * x21 * x22 * x23 - x27 * x31)
    x39 = -x10 - A[0]
    x40 = x11 * x31
    x41 = x25 * x39 - x27 * x40
    x42 = x24 * boys(3, x18)
    x43 = x27 * x39 - x40 * x42
    x44 = x26 * x34 + x29 * x42
    x45 = x12 - C[1]
    x46 = x14 * x28
    x47 = x25 * x45 + x27 * x46
    x48 = x31 * x47
    x49 = x24 * x33 * x45 + x25 * x46
    x50 = x1 * (-x48 + x49)
    x51 = x27 * x45 + x42 * x46
    x52 = -x13 - A[1]
    x53 = x14 * x31
    x54 = x25 * x52 - x27 * x53
    x55 = x27 * x52 - x42 * x53
    x56 = -x14 * x32 + x35 * x52
    x57 = x30 * x52 - x44 * x53
    x58 = -x14 * x48 + x37 * x54 + x49 * x52
    x59 = x37 * x55 + x47 * x52 - x51 * x53
    x60 = -x15 - A[2]
    x61 = x16 * x31
    x62 = x25 * x60 - x27 * x61
    x63 = x39 * x62
    x64 = x27 * x60 - x42 * x61
    x65 = x40 * x64
    x66 = -x16 * x32 + x35 * x60
    x67 = x30 * x60 - x44 * x61
    x68 = -x16 * x48 + x49 * x60
    x69 = x47 * x60 - x51 * x61
    x70 = x52 * x62
    x71 = x53 * x64
    x72 = x60 * x62
    x73 = x61 * x64

    # 18 item(s)
    S = numpy.array(
        [
            x36
            + x37 * (x38 + x39 * x41 - x40 * x43)
            + x39 * (-x11 * x32 + x35 * x39 + x37 * x41)
            - x40 * (x30 * x39 + x37 * x43 - x40 * x44),
            x39 * (-x11 * x48 + x39 * x49) - x40 * (x39 * x47 - x40 * x51) + x50,
            0,
            x37 * (x39 * x54 - x40 * x55) + x39 * x56 - x40 * x57,
            x39 * x58 - x40 * x59,
            0,
            x37 * (x63 - x65) + x39 * x66 - x40 * x67,
            x39 * x68 - x40 * x69,
            x37 * x63 - x37 * x65,
            x36 + x52 * x56 - x53 * x57,
            x37 * (x38 + x52 * x54 - x53 * x55) + x50 + x52 * x58 - x53 * x59,
            0,
            x52 * x66 - x53 * x67,
            x37 * (x70 - x71) + x52 * x68 - x53 * x69,
            x37 * x70 - x37 * x71,
            x36 + x60 * x66 - x61 * x67,
            x50 + x60 * x68 - x61 * x69,
            x37 * x72 - x37 * x73 + x37 * (x38 + x72 - x73),
        ]
    )
    return S


def eri_2011(a, A, b, B, c, C, d, D):
    """Cartesian [ds|pp] 2-electron electron repulsion integral.

    Generated code; DO NOT modify by hand!"""

    x0 = 2 * a + 2 * b
    x1 = x0 ** (-1.0)
    x2 = 2 * c + 2 * d
    x3 = x2 ** (-1.0)
    x4 = numpy.pi**2.5
    x5 = a + b
    x6 = c + d
    x7 = x5 * x6
    x8 = x5 + x6
    x9 = (x7 + numpy.sqrt(x8)) ** (-1.0)
    x10 = x5 ** (-1.0)
    x11 = numpy.exp(
        -a * b * x10 * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2)
    )
    x12 = x6 ** (-1.0)
    x13 = C[0] - D[0]
    x14 = C[1] - D[1]
    x15 = C[2] - D[2]
    x16 = numpy.exp(-c * d * x12 * (x13**2 + x14**2 + x15**2))
    x17 = x8 ** (-1.0)
    x18 = x12 * (c * C[0] + d * D[0])
    x19 = -x10 * (a * A[0] + b * B[0])
    x20 = -x18 - x19
    x21 = x12 * (c * C[1] + d * D[1])
    x22 = -x10 * (a * A[1] + b * B[1])
    x23 = -x21 - x22
    x24 = -x10 * (a * A[2] + b * B[2])
    x25 = -x12 * (c * C[2] + d * D[2]) - x24
    x26 = x17 * x7 * (x20**2 + x23**2 + x25**2)
    x27 = boys(1, x26)
    x28 = -2 * x11 * x16 * x27 * x4 * x9
    x29 = x17 * x5
    x30 = boys(2, x26)
    x31 = 2 * x11 * x16 * x4 * x9
    x32 = x30 * x31
    x33 = x3 * (-x28 - x29 * x32)
    x34 = x18 - C[0]
    x35 = x27 * x31
    x36 = x20 * x29
    x37 = x32 * x36 + x34 * x35
    x38 = x31 * boys(3, x26)
    x39 = x32 * x34 + x36 * x38
    x40 = x33 + x34 * x37 + x36 * x39
    x41 = x17 * x6
    x42 = x40 * x41
    x43 = boys(0, x26)
    x44 = x3 * (2 * x11 * x16 * x4 * x43 * x9 - x29 * x35)
    x45 = x31 * x43
    x46 = x34 * x45 + x35 * x36
    x47 = x34 * x46 + x36 * x37 + x44
    x48 = x1 * (-x42 + x47)
    x49 = -x19 - A[0]
    x50 = x0 + x2
    x51 = x50 ** (-1.0)
    x52 = x20 * x41
    x53 = x32 * x49 - x38 * x52
    x54 = x39 * x41
    x55 = -x20 * x54 + x37 * x49 + x51 * x53
    x56 = 2 * x51
    x57 = -2 * x11 * x16 * x30 * x4 * x9
    x58 = x3 * (-x29 * x38 - x57)
    x59 = x31 * boys(4, x26)
    x60 = x34 * x38 + x36 * x59
    x61 = x34 * x39 + x36 * x60 + x58
    x62 = x38 * x49 - x52 * x59
    x63 = x39 * x49 + x51 * x62 - x52 * x60
    x64 = x37 * x41
    x65 = x1 * (x46 - x64)
    x66 = x1 * (-x28 - x32 * x41)
    x67 = -x32 * x52 + x35 * x49
    x68 = (
        x49 * (-x20 * x64 + x46 * x49 + x51 * x67)
        + x51 * (x49 * x67 - x52 * x53 + x66)
        - x52 * x55
        + x65
    )
    x69 = x1 * (x37 - x54)
    x70 = x1 * (-x38 * x41 - x57)
    x71 = x21 - C[1]
    x72 = x23 * x29
    x73 = x32 * x72 + x35 * x71
    x74 = x32 * x71 + x38 * x72
    x75 = x34 * x73 + x36 * x74
    x76 = x41 * x75
    x77 = x35 * x72 + x45 * x71
    x78 = x34 * x77 + x36 * x73
    x79 = x1 * (-x76 + x78)
    x80 = x41 * x74
    x81 = x1 * (x73 - x80)
    x82 = -x20 * x80 + x49 * x73
    x83 = x38 * x71 + x59 * x72
    x84 = x49 * x74 - x52 * x83
    x85 = x34 * x74 + x36 * x83
    x86 = (
        x49 * (-x20 * x76 + x49 * x78 + x51 * x82)
        + x51 * (x49 * x82 - x52 * x84 + x81)
        - x52 * (x49 * x75 + x51 * x84 - x52 * x85)
        + x79
    )
    x87 = x41 * x73
    x88 = x1 * (x77 - x87)
    x89 = x49 * (-x20 * x87 + x49 * x77) - x52 * x82 + x88
    x90 = x33 + x71 * x73 + x72 * x74
    x91 = x41 * x90
    x92 = x44 + x71 * x77 + x72 * x73
    x93 = x1 * (-x91 + x92)
    x94 = x58 + x71 * x74 + x72 * x83
    x95 = -x22 - A[1]
    x96 = -x23 * x42 + x47 * x95
    x97 = x23 * x41
    x98 = x40 * x95 - x61 * x97
    x99 = -x32 * x97 + x35 * x95
    x100 = x32 * x95 - x38 * x97
    x101 = -x23 * x64 + x46 * x95
    x102 = -x23 * x54 + x37 * x95
    x103 = x101 * x49 - x102 * x52 + x51 * (-x100 * x52 + x49 * x99)
    x104 = x38 * x95 - x59 * x97
    x105 = x39 * x95 - x60 * x97
    x106 = x100 * x51 - x23 * x80 + x73 * x95
    x107 = x104 * x51 + x74 * x95 - x83 * x97
    x108 = x102 * x51 - x23 * x76 + x78 * x95
    x109 = x105 * x51 + x75 * x95 - x85 * x97
    x110 = x108 * x49 - x109 * x52 + x51 * (x106 * x49 - x107 * x52)
    x111 = -x23 * x87 + x51 * x99 + x77 * x95
    x112 = -x106 * x52 + x111 * x49
    x113 = x106 * x56 - x23 * x91 + x92 * x95
    x114 = x107 * x56 + x90 * x95 - x94 * x97
    x115 = -x24 - A[2]
    x116 = x115 * x47 - x25 * x42
    x117 = x25 * x41
    x118 = x115 * x40 - x117 * x61
    x119 = x115 * x35 - x117 * x32
    x120 = x119 * x49
    x121 = x115 * x32 - x117 * x38
    x122 = x121 * x52
    x123 = x115 * x46 - x25 * x64
    x124 = x115 * x37 - x25 * x54
    x125 = x123 * x49 - x124 * x52 + x51 * (x120 - x122)
    x126 = x121 * x49
    x127 = x115 * x38 - x117 * x59
    x128 = x127 * x52
    x129 = x124 * x49
    x130 = x115 * x39 - x117 * x60
    x131 = x130 * x52
    x132 = x115 * x73 - x25 * x80
    x133 = x132 * x49
    x134 = x115 * x74 - x117 * x83
    x135 = x134 * x52
    x136 = x115 * x78 - x25 * x76
    x137 = x115 * x75 - x117 * x85
    x138 = x136 * x49 - x137 * x52 + x51 * (x133 - x135)
    x139 = x129 * x51 - x131 * x51 + x51 * (x126 * x51 - x128 * x51)
    x140 = x115 * x77 - x25 * x87
    x141 = -x132 * x52 + x140 * x49
    x142 = x115 * x92 - x25 * x91
    x143 = x115 * x90 - x117 * x94
    x144 = x133 * x51 - x135 * x51
    x145 = x120 * x51 - x122 * x51
    x146 = 2 / x50**2
    x147 = x101 * x95 - x102 * x97 + x65
    x148 = x108 * x95 - x109 * x97 + x51 * (x102 * x95 - x105 * x97 + x69) + x79
    x149 = -x106 * x97 + x111 * x95 + x51 * (-x100 * x97 + x66 + x95 * x99) + x88
    x150 = x123 * x95 - x124 * x97
    x151 = x124 * x95
    x152 = x130 * x97
    x153 = x136 * x95 - x137 * x97 + x51 * (x151 - x152)
    x154 = x151 * x51 - x152 * x51
    x155 = x119 * x95
    x156 = x121 * x97
    x157 = -x132 * x97 + x140 * x95 + x51 * (x155 - x156)
    x158 = x121 * x95
    x159 = x127 * x97
    x160 = x132 * x95
    x161 = x134 * x97
    x162 = x160 * x51 - x161 * x51 + x51 * (x158 * x51 - x159 * x51)
    x163 = x155 * x51 - x156 * x51
    x164 = x115 * x123 - x117 * x124 + x65
    x165 = x115 * x136 - x117 * x137 + x79
    x166 = x115 * x124
    x167 = x117 * x130
    x168 = x166 * x51 - x167 * x51 + x51 * (x166 - x167 + x69)
    x169 = x115 * x140 - x117 * x132 + x88
    x170 = x115 * x132
    x171 = x117 * x134
    x172 = x170 * x51 - x171 * x51 + x51 * (x170 - x171 + x81)
    x173 = x115 * x119
    x174 = x117 * x121
    x175 = x173 * x51 - x174 * x51 + x51 * (x173 - x174 + x66)
    x176 = x115 * x121
    x177 = x117 * x127

    # 54 item(s)
    S = numpy.array(
        [
            x13 * x68
            + x48
            + x49 * (-x20 * x42 + x47 * x49 + x55 * x56)
            - x52 * (x40 * x49 - x52 * x61 + x56 * x63)
            + x56 * (x49 * x55 + x51 * (x49 * x53 - x52 * x62 + x70) - x52 * x63 + x69),
            x14 * x68 + x86,
            x15 * x68,
            x13 * x89 + x86,
            x14 * x89
            + x49 * (-x20 * x91 + x49 * x92)
            - x52 * (x49 * x90 - x52 * x94)
            + x93,
            x15 * x89,
            0,
            0,
            0,
            x103 * x13
            + x49 * x96
            - x52 * x98
            + x56 * (x102 * x49 - x105 * x52 + x51 * (x100 * x49 - x104 * x52)),
            x103 * x14 + x110,
            x103 * x15,
            x110 + x112 * x13,
            x112 * x14 + x113 * x49 - x114 * x52,
            x112 * x15,
            0,
            0,
            0,
            x116 * x49
            - x118 * x52
            + x125 * x13
            + x56 * (x129 - x131 + x51 * (x126 - x128)),
            x125 * x14 + x138,
            x125 * x15 + x139,
            x13 * x141 + x138,
            x14 * x141 + x142 * x49 - x143 * x52,
            x141 * x15 + x144,
            x13 * x145 + x139,
            x14 * x145 + x144,
            x126 * x146 - x128 * x146 + x145 * x15,
            x13 * x147 + x48 + x95 * x96 - x97 * x98,
            x14 * x147 + x148,
            x147 * x15,
            x13 * x149 + x148,
            x113 * x95
            - x114 * x97
            + x14 * x149
            + x56
            * (x106 * x95 - x107 * x97 + x51 * (x100 * x95 - x104 * x97 + x70) + x81)
            + x93,
            x149 * x15,
            0,
            0,
            0,
            x116 * x95 - x118 * x97 + x13 * x150,
            x14 * x150 + x153,
            x15 * x150 + x154,
            x13 * x157 + x153,
            x14 * x157
            + x142 * x95
            - x143 * x97
            + x56 * (x160 - x161 + x51 * (x158 - x159)),
            x15 * x157 + x162,
            x13 * x163 + x154,
            x14 * x163 + x162,
            x146 * x158 - x146 * x159 + x15 * x163,
            x115 * x116 - x117 * x118 + x13 * x164 + x48,
            x14 * x164 + x165,
            x15 * x164 + x168,
            x13 * x169 + x165,
            x115 * x142 - x117 * x143 + x14 * x169 + x93,
            x15 * x169 + x172,
            x13 * x175 + x168,
            x14 * x175 + x172,
            x146 * x176
            - x146 * x177
            + x15 * x175
            + x56 * (x176 * x51 - x177 * x51 + x51 * (x176 - x177 + x70)),
        ]
    )
    return S


def eri_2012(a, A, b, B, c, C, d, D):
    """Cartesian [ds|pd] 2-electron electron repulsion integral.

    Generated code; DO NOT modify by hand!"""

    x0 = 2 * a + 2 * b
    x1 = x0 ** (-1.0)
    x2 = c + d
    x3 = x2 ** (-1.0)
    x4 = x3 * (c * C[0] + d * D[0])
    x5 = x4 - C[0]
    x6 = a + b
    x7 = x2 + x6
    x8 = x7 ** (-1.0)
    x9 = x6 ** (-1.0)
    x10 = -x9 * (a * A[0] + b * B[0])
    x11 = -x10 - x4
    x12 = x3 * (c * C[1] + d * D[1])
    x13 = -x9 * (a * A[1] + b * B[1])
    x14 = -x12 - x13
    x15 = -x9 * (a * A[2] + b * B[2])
    x16 = -x15 - x3 * (c * C[2] + d * D[2])
    x17 = x2 * x6
    x18 = x17 * x8 * (x11**2 + x14**2 + x16**2)
    x19 = boys(2, x18)
    x20 = numpy.pi**2.5
    x21 = (x17 + numpy.sqrt(x7)) ** (-1.0)
    x22 = numpy.exp(
        -a * b * x9 * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2)
    )
    x23 = C[0] - D[0]
    x24 = C[1] - D[1]
    x25 = C[2] - D[2]
    x26 = x25**2
    x27 = numpy.exp(-c * d * x3 * (x23**2 + x24**2 + x26))
    x28 = 2 * x20 * x21 * x22 * x27
    x29 = x19 * x28
    x30 = x6 * x8
    x31 = x11 * x30
    x32 = boys(3, x18)
    x33 = x28 * x32
    x34 = x29 * x5 + x31 * x33
    x35 = x30 * x34
    x36 = boys(1, x18)
    x37 = x28 * x36
    x38 = x29 * x31 + x37 * x5
    x39 = 2 * c + 2 * d
    x40 = x39 ** (-1.0)
    x41 = 2 * x40
    x42 = -2 * x20 * x21 * x22 * x27 * x36
    x43 = x40 * (-x29 * x30 - x42)
    x44 = x11 * x35 + x38 * x5 + x43
    x45 = -2 * x19 * x20 * x21 * x22 * x27
    x46 = x40 * (-x30 * x33 - x45)
    x47 = x28 * boys(4, x18)
    x48 = x31 * x47 + x33 * x5
    x49 = x30 * x48
    x50 = x11 * x49 + x34 * x5 + x46
    x51 = x31 * x50 + x41 * (-x35 + x38) + x44 * x5
    x52 = x2 * x8
    x53 = x51 * x52
    x54 = x30 * x38
    x55 = boys(0, x18)
    x56 = x28 * x55
    x57 = x31 * x37 + x5 * x56
    x58 = x40 * (2 * x20 * x21 * x22 * x27 * x55 - x30 * x37)
    x59 = x11 * x54 + x5 * x57 + x58
    x60 = x31 * x44 + x41 * (-x54 + x57) + x5 * x59
    x61 = x1 * (-x53 + x60)
    x62 = -x10 - A[0]
    x63 = x50 * x52
    x64 = x0 + x39
    x65 = x64 ** (-1.0)
    x66 = x11 * x52
    x67 = x33 * x62 - x47 * x66
    x68 = x48 * x52
    x69 = -x11 * x68 + x34 * x62 + x65 * x67
    x70 = 2 * x65
    x71 = -x11 * x63 + x44 * x62 + x69 * x70
    x72 = 3 * x65
    x73 = -2 * x20 * x21 * x22 * x27 * x32
    x74 = x40 * (-x30 * x47 - x73)
    x75 = x28 * boys(5, x18)
    x76 = x31 * x75 + x47 * x5
    x77 = x31 * x76 + x48 * x5 + x74
    x78 = x31 * x77 + x41 * (x34 - x49) + x5 * x50
    x79 = x47 * x62 - x66 * x75
    x80 = x48 * x62 + x65 * x79 - x66 * x76
    x81 = x50 * x62 - x66 * x77 + x70 * x80
    x82 = x44 * x52
    x83 = x1 * (x59 - x82)
    x84 = x29 * x62 - x33 * x66
    x85 = x34 * x52
    x86 = -x11 * x85 + x38 * x62 + x65 * x84
    x87 = x1 * (x38 - x85)
    x88 = x1 * (-x33 * x52 - x45)
    x89 = (
        x62 * (-x11 * x82 + x59 * x62 + x70 * x86)
        - x66 * x71
        + x70 * (x62 * x86 + x65 * (x62 * x84 - x66 * x67 + x88) - x66 * x69 + x87)
        + x83
    )
    x90 = x1 * (x44 - x63)
    x91 = x1 * (x34 - x68)
    x92 = x1 * (-x47 * x52 - x73)
    x93 = x38 * x52
    x94 = x1 * (x57 - x93)
    x95 = x1 * (-x29 * x52 - x42)
    x96 = -x29 * x66 + x37 * x62
    x97 = (
        x62 * (-x11 * x93 + x57 * x62 + x65 * x96)
        + x65 * (x62 * x96 - x66 * x84 + x95)
        - x66 * x86
        + x94
    )
    x98 = x23 * x97
    x99 = x24 * x97
    x100 = x12 - C[1]
    x101 = x14 * x30
    x102 = x100 * x37 + x101 * x29
    x103 = x100 * x29 + x101 * x33
    x104 = x103 * x30
    x105 = x102 * x5 + x104 * x11
    x106 = x105 * x52
    x107 = x100 * x56 + x101 * x37
    x108 = x102 * x30
    x109 = x107 * x5 + x108 * x11
    x110 = x1 * (-x106 + x109)
    x111 = x103 * x52
    x112 = x1 * (x102 - x111)
    x113 = x102 * x62 - x11 * x111
    x114 = x100 * x33 + x101 * x47
    x115 = x114 * x52
    x116 = x103 * x62 - x11 * x115
    x117 = x114 * x30
    x118 = x103 * x5 + x11 * x117
    x119 = x118 * x52
    x120 = x105 * x62 - x11 * x119 + x116 * x65
    x121 = (
        x110
        - x120 * x66
        + x62 * (-x106 * x11 + x109 * x62 + x113 * x65)
        + x65 * (x112 + x113 * x62 - x116 * x66)
    )
    x122 = x121 + x99
    x123 = x40 * (x102 - x104)
    x124 = x105 * x5 + x118 * x31 + x123
    x125 = x124 * x52
    x126 = x40 * (x107 - x108)
    x127 = x105 * x31 + x109 * x5 + x126
    x128 = x1 * (-x125 + x127)
    x129 = x1 * (x105 - x119)
    x130 = x1 * (x103 - x115)
    x131 = x100 * x47 + x101 * x75
    x132 = x114 * x62 - x131 * x66
    x133 = x114 * x5 + x131 * x31
    x134 = x118 * x62 + x132 * x65 - x133 * x66
    x135 = x40 * (x103 - x117)
    x136 = x118 * x5 + x133 * x31 + x135
    x137 = (
        x128
        + x62 * (-x11 * x125 + x120 * x70 + x127 * x62)
        - x66 * (x124 * x62 + x134 * x70 - x136 * x66)
        + x70 * (x120 * x62 + x129 - x134 * x66 + x65 * (x116 * x62 + x130 - x132 * x66))
    )
    x138 = x100 * x102 + x104 * x14 + x43
    x139 = x100 * x103 + x117 * x14 + x46
    x140 = x138 * x5 + x139 * x31
    x141 = x140 * x52
    x142 = x100 * x107 + x108 * x14 + x58
    x143 = x138 * x31 + x142 * x5
    x144 = x1 * (-x141 + x143)
    x145 = x139 * x52
    x146 = x1 * (x138 - x145)
    x147 = -x11 * x145 + x138 * x62
    x148 = x100 * x114 + x101 * x131 + x74
    x149 = x139 * x62 - x148 * x66
    x150 = x139 * x5 + x148 * x31
    x151 = (
        x121 * x24
        + x144
        + x62 * (-x11 * x141 + x143 * x62 + x147 * x65)
        + x65 * (x146 + x147 * x62 - x149 * x66)
        - x66 * (x140 * x62 + x149 * x65 - x150 * x66)
    )
    x152 = x121 * x25
    x153 = x102 * x52
    x154 = x1 * (x107 - x153)
    x155 = -x113 * x66 + x154 + x62 * (x107 * x62 - x11 * x153)
    x156 = x155 * x23
    x157 = x155 * x24
    x158 = x138 * x52
    x159 = x1 * (x142 - x158)
    x160 = -x147 * x66 + x159 + x62 * (-x11 * x158 + x142 * x62)
    x161 = x157 + x160
    x162 = x100 * x138 + x101 * x139 + 2 * x123
    x163 = x162 * x52
    x164 = x100 * x142 + x101 * x138 + 2 * x126
    x165 = x1 * (-x163 + x164)
    x166 = x100 * x139 + x101 * x148 + 2 * x135
    x167 = -x13 - A[1]
    x168 = -x14 * x53 + x167 * x60
    x169 = x14 * x52
    x170 = x167 * x51 - x169 * x78
    x171 = -x14 * x82 + x167 * x59
    x172 = -x14 * x63 + x167 * x44
    x173 = x167 * x29 - x169 * x33
    x174 = x167 * x33 - x169 * x47
    x175 = -x14 * x85 + x167 * x38
    x176 = -x14 * x68 + x167 * x34
    x177 = (
        x171 * x62
        - x172 * x66
        + x70 * (x175 * x62 - x176 * x66 + x65 * (x173 * x62 - x174 * x66))
    )
    x178 = x167 * x50 - x169 * x77
    x179 = x167 * x47 - x169 * x75
    x180 = x167 * x48 - x169 * x76
    x181 = x167 * x37 - x169 * x29
    x182 = -x14 * x93 + x167 * x57
    x183 = -x175 * x66 + x182 * x62 + x65 * (-x173 * x66 + x181 * x62)
    x184 = x183 * x23
    x185 = x183 * x24
    x186 = x102 * x167 - x111 * x14 + x173 * x65
    x187 = x103 * x167 - x115 * x14 + x174 * x65
    x188 = -x106 * x14 + x109 * x167 + x175 * x65
    x189 = x105 * x167 - x119 * x14 + x176 * x65
    x190 = x188 * x62 - x189 * x66 + x65 * (x186 * x62 - x187 * x66)
    x191 = x185 + x190
    x192 = -x125 * x14 + x127 * x167 + x172 * x65
    x193 = x114 * x167 - x131 * x169 + x179 * x65
    x194 = x118 * x167 - x133 * x169 + x180 * x65
    x195 = x124 * x167 - x136 * x169 + x178 * x65
    x196 = (
        x192 * x62
        - x195 * x66
        + x70 * (x189 * x62 - x194 * x66 + x65 * (x187 * x62 - x193 * x66))
    )
    x197 = x138 * x167 - x14 * x145 + x187 * x70
    x198 = x139 * x167 - x148 * x169 + x193 * x70
    x199 = -x14 * x141 + x143 * x167 + x189 * x70
    x200 = x140 * x167 - x150 * x169 + x194 * x70
    x201 = x190 * x24 + x199 * x62 - x200 * x66 + x65 * (x197 * x62 - x198 * x66)
    x202 = x190 * x25
    x203 = x107 * x167 - x14 * x153 + x181 * x65
    x204 = -x186 * x66 + x203 * x62
    x205 = x204 * x23
    x206 = x204 * x24
    x207 = -x14 * x158 + x142 * x167 + x186 * x70
    x208 = -x197 * x66 + x207 * x62
    x209 = x206 + x208
    x210 = -x14 * x163 + x164 * x167 + x197 * x72
    x211 = x162 * x167 - x166 * x169 + x198 * x72
    x212 = -x15 - A[2]
    x213 = -x16 * x53 + x212 * x60
    x214 = x16 * x52
    x215 = x212 * x51 - x214 * x78
    x216 = -x16 * x82 + x212 * x59
    x217 = -x16 * x63 + x212 * x44
    x218 = x212 * x29 - x214 * x33
    x219 = x218 * x62
    x220 = x212 * x33 - x214 * x47
    x221 = x220 * x66
    x222 = -x16 * x85 + x212 * x38
    x223 = x222 * x62
    x224 = -x16 * x68 + x212 * x34
    x225 = x224 * x66
    x226 = x216 * x62 - x217 * x66 + x70 * (x223 - x225 + x65 * (x219 - x221))
    x227 = x217 * x62
    x228 = x212 * x50 - x214 * x77
    x229 = x228 * x66
    x230 = x220 * x62
    x231 = x212 * x47 - x214 * x75
    x232 = x231 * x66
    x233 = x224 * x62
    x234 = x212 * x48 - x214 * x76
    x235 = x234 * x66
    x236 = x212 * x37 - x214 * x29
    x237 = x236 * x62
    x238 = x218 * x66
    x239 = -x16 * x93 + x212 * x57
    x240 = -x222 * x66 + x239 * x62 + x65 * (x237 - x238)
    x241 = -x106 * x16 + x109 * x212
    x242 = x102 * x212 - x111 * x16
    x243 = x242 * x62
    x244 = x103 * x212 - x115 * x16
    x245 = x244 * x66
    x246 = x105 * x212 - x119 * x16
    x247 = x241 * x62 - x246 * x66 + x65 * (x243 - x245)
    x248 = x24 * x240 + x247
    x249 = -x125 * x16 + x127 * x212
    x250 = x246 * x62
    x251 = x244 * x62
    x252 = x114 * x212 - x131 * x214
    x253 = x252 * x66
    x254 = x118 * x212 - x133 * x214
    x255 = x254 * x66
    x256 = x124 * x212 - x136 * x214
    x257 = x249 * x62 - x256 * x66 + x70 * (x250 - x255 + x65 * (x251 - x253))
    x258 = x223 * x65 - x225 * x65 + x65 * (x219 * x65 - x221 * x65)
    x259 = x240 * x25 + x258
    x260 = (
        x227 * x65
        - x229 * x65
        + x70 * (x233 * x65 - x235 * x65 + x65 * (x230 * x65 - x232 * x65))
    )
    x261 = x138 * x212 - x145 * x16
    x262 = x261 * x62
    x263 = x139 * x212 - x148 * x214
    x264 = x263 * x66
    x265 = -x141 * x16 + x143 * x212
    x266 = x140 * x212 - x150 * x214
    x267 = x24 * x247 + x265 * x62 - x266 * x66 + x65 * (x262 - x264)
    x268 = x250 * x65 - x255 * x65 + x65 * (x251 * x65 - x253 * x65)
    x269 = x247 * x25 + x268
    x270 = 2 / x64**2
    x271 = x233 * x270 - x235 * x270 + x25 * x258 + x65 * (x230 * x270 - x232 * x270)
    x272 = x107 * x212 - x153 * x16
    x273 = -x242 * x66 + x272 * x62
    x274 = x142 * x212 - x158 * x16
    x275 = -x261 * x66 + x274 * x62
    x276 = x24 * x273 + x275
    x277 = x243 * x65 - x245 * x65
    x278 = x25 * x273 + x277
    x279 = -x16 * x163 + x164 * x212
    x280 = x162 * x212 - x166 * x214
    x281 = x262 * x65 - x264 * x65
    x282 = x25 * x277 + x251 * x270 - x253 * x270
    x283 = x237 * x65 - x238 * x65
    x284 = x24 * x283 + x277
    x285 = x219 * x270 - x221 * x270
    x286 = x25 * x283 + x285
    x287 = 6 / x64**3
    x288 = x167 * x171 - x169 * x172 + x83
    x289 = x167 * x182 - x169 * x175 + x94
    x290 = x23 * x289
    x291 = x24 * x289
    x292 = x110 + x167 * x188 - x169 * x189 + x65 * (x167 * x175 - x169 * x176 + x87)
    x293 = x291 + x292
    x294 = x128 + x167 * x192 - x169 * x195 + x65 * (x167 * x172 - x169 * x178 + x90)
    x295 = (
        x144
        + x167 * x199
        - x169 * x200
        + x24 * x292
        + x70
        * (x129 + x167 * x189 - x169 * x194 + x65 * (x167 * x176 - x169 * x180 + x91))
    )
    x296 = x25 * x292
    x297 = x154 + x167 * x203 - x169 * x186 + x65 * (x167 * x181 - x169 * x173 + x95)
    x298 = x23 * x297
    x299 = x24 * x297
    x300 = (
        x159
        + x167 * x207
        - x169 * x197
        + x70
        * (x112 + x167 * x186 - x169 * x187 + x65 * (x167 * x173 - x169 * x174 + x88))
    )
    x301 = x299 + x300
    x302 = x167 * x216 - x169 * x217
    x303 = x167 * x239 - x169 * x222
    x304 = x167 * x222
    x305 = x169 * x224
    x306 = x167 * x241 - x169 * x246 + x65 * (x304 - x305)
    x307 = x24 * x303 + x306
    x308 = x167 * x217
    x309 = x169 * x228
    x310 = x167 * x249 - x169 * x256 + x65 * (x308 - x309)
    x311 = x304 * x65 - x305 * x65
    x312 = x25 * x303 + x311
    x313 = x308 * x65 - x309 * x65
    x314 = x167 * x246
    x315 = x167 * x224
    x316 = x169 * x234
    x317 = x169 * x254
    x318 = (
        x167 * x265 - x169 * x266 + x24 * x306 + x70 * (x314 - x317 + x65 * (x315 - x316))
    )
    x319 = x314 * x65 - x317 * x65 + x65 * (x315 * x65 - x316 * x65)
    x320 = x25 * x306 + x319
    x321 = x25 * x311 + x270 * x315 - x270 * x316
    x322 = x167 * x236
    x323 = x169 * x218
    x324 = x167 * x272 - x169 * x242 + x65 * (x322 - x323)
    x325 = x167 * x218
    x326 = x169 * x220
    x327 = x167 * x242
    x328 = x169 * x244
    x329 = x167 * x274 - x169 * x261 + x70 * (x327 - x328 + x65 * (x325 - x326))
    x330 = x24 * x324 + x329
    x331 = x327 * x65 - x328 * x65 + x65 * (x325 * x65 - x326 * x65)
    x332 = x25 * x324 + x331
    x333 = x167 * x261
    x334 = x169 * x263
    x335 = x167 * x220
    x336 = x169 * x231
    x337 = x167 * x244
    x338 = x169 * x252
    x339 = (
        x333 * x65
        - x334 * x65
        + x70 * (x337 * x65 - x338 * x65 + x65 * (x335 * x65 - x336 * x65))
    )
    x340 = x25 * x331 + x270 * x337 - x270 * x338 + x65 * (x270 * x335 - x270 * x336)
    x341 = x322 * x65 - x323 * x65
    x342 = x24 * x341 + x331
    x343 = x270 * x325 - x270 * x326
    x344 = x25 * x341 + x343
    x345 = x212 * x216 - x214 * x217 + x83
    x346 = x212 * x239 - x214 * x222 + x94
    x347 = x110 + x212 * x241 - x214 * x246
    x348 = x24 * x346 + x347
    x349 = x128 + x212 * x249 - x214 * x256
    x350 = x212 * x222
    x351 = x214 * x224
    x352 = x350 * x65 - x351 * x65 + x65 * (x350 - x351 + x87)
    x353 = x25 * x346 + x352
    x354 = x212 * x217
    x355 = x214 * x228
    x356 = x354 * x65 - x355 * x65 + x65 * (x354 - x355 + x90)
    x357 = x144 + x212 * x265 - x214 * x266 + x24 * x347
    x358 = x212 * x246
    x359 = x214 * x254
    x360 = x358 * x65 - x359 * x65 + x65 * (x129 + x358 - x359)
    x361 = x25 * x347 + x360
    x362 = x212 * x224
    x363 = x214 * x234
    x364 = (
        x25 * x352
        + x270 * x362
        - x270 * x363
        + x70 * (x362 * x65 - x363 * x65 + x65 * (x362 - x363 + x91))
    )
    x365 = x154 + x212 * x272 - x214 * x242
    x366 = x159 + x212 * x274 - x214 * x261
    x367 = x24 * x365 + x366
    x368 = x212 * x242
    x369 = x214 * x244
    x370 = x368 * x65 - x369 * x65 + x65 * (x112 + x368 - x369)
    x371 = x25 * x365 + x370
    x372 = x212 * x261
    x373 = x214 * x263
    x374 = x372 * x65 - x373 * x65 + x65 * (x146 + x372 - x373)
    x375 = x212 * x244
    x376 = x214 * x252
    x377 = (
        x25 * x370
        + x270 * x375
        - x270 * x376
        + x70 * (x375 * x65 - x376 * x65 + x65 * (x130 + x375 - x376))
    )
    x378 = x212 * x236
    x379 = x214 * x218
    x380 = x378 * x65 - x379 * x65 + x65 * (x378 - x379 + x95)
    x381 = x24 * x380 + x370
    x382 = x212 * x218
    x383 = x214 * x220
    x384 = (
        x270 * x382
        - x270 * x383
        + x70 * (x382 * x65 - x383 * x65 + x65 * (x382 - x383 + x88))
    )
    x385 = x25 * x380 + x384
    x386 = x212 * x220
    x387 = x214 * x231

    # 108 item(s)
    S = numpy.array(
        [
            x23 * x89
            + x23 * (x89 + x98)
            + x61
            + x62 * (-x11 * x53 + x60 * x62 + x71 * x72)
            - x66 * (x51 * x62 - x66 * x78 + x72 * x81)
            + x72
            * (
                x62 * x71
                - x66 * x81
                + x70
                * (x62 * x69 + x65 * (x62 * x67 - x66 * x79 + x92) - x66 * x80 + x91)
                + x90
            ),
            x122 * x23 + x137 + x24 * x89,
            x25 * x89 + x25 * x98,
            x122 * x24 + x151,
            x152 + x25 * x99,
            x26 * x97,
            x121 * x23 + x137 + x23 * (x121 + x156),
            x151 + x161 * x23,
            x152 + x156 * x25,
            x160 * x24
            + x161 * x24
            + x165
            + x62 * (-x11 * x163 + x164 * x62)
            - x66 * (x162 * x62 - x166 * x66),
            x157 * x25 + x160 * x25,
            x155 * x26,
            0,
            0,
            0,
            0,
            0,
            0,
            x168 * x62
            - x170 * x66
            + x177 * x23
            + x23 * (x177 + x184)
            + x72
            * (
                x172 * x62
                - x178 * x66
                + x70 * (x176 * x62 - x180 * x66 + x65 * (x174 * x62 - x179 * x66))
            ),
            x177 * x24 + x191 * x23 + x196,
            x177 * x25 + x184 * x25,
            x191 * x24 + x201,
            x185 * x25 + x202,
            x183 * x26,
            x190 * x23 + x196 + x23 * (x190 + x205),
            x201 + x209 * x23,
            x202 + x205 * x25,
            x208 * x24 + x209 * x24 + x210 * x62 - x211 * x66,
            x206 * x25 + x208 * x25,
            x204 * x26,
            0,
            0,
            0,
            0,
            0,
            0,
            x213 * x62
            - x215 * x66
            + x226 * x23
            + x23 * (x226 + x23 * x240)
            + x72 * (x227 - x229 + x70 * (x233 - x235 + x65 * (x230 - x232))),
            x226 * x24 + x23 * x248 + x257,
            x226 * x25 + x23 * x259 + x260,
            x24 * x248 + x267,
            x24 * x259 + x269,
            x25 * x259 + x271,
            x23 * x247 + x23 * (x23 * x273 + x247) + x257,
            x23 * x276 + x267,
            x23 * x278 + x269,
            x24 * x275 + x24 * x276 + x279 * x62 - x280 * x66,
            x24 * x278 + x25 * x275 + x281,
            x25 * x278 + x282,
            x23 * x258 + x23 * (x23 * x283 + x258) + x260,
            x23 * x284 + x24 * x258 + x268,
            x23 * x286 + x271,
            x24 * x277 + x24 * x284 + x281,
            x24 * x286 + x282,
            x230 * x287 - x232 * x287 + x25 * x285 + x25 * x286,
            x167 * x168 - x169 * x170 + x23 * x288 + x23 * (x288 + x290) + x61,
            x23 * x293 + x24 * x288 + x294,
            x25 * x288 + x25 * x290,
            x24 * x293 + x295,
            x25 * x291 + x296,
            x26 * x289,
            x23 * x292 + x23 * (x292 + x298) + x294,
            x23 * x301 + x295,
            x25 * x298 + x296,
            x165
            + x167 * x210
            - x169 * x211
            + x24 * x300
            + x24 * x301
            + x72
            * (
                x146
                + x167 * x197
                - x169 * x198
                + x70
                * (
                    x130
                    + x167 * x187
                    - x169 * x193
                    + x65 * (x167 * x174 - x169 * x179 + x92)
                )
            ),
            x25 * x299 + x25 * x300,
            x26 * x297,
            0,
            0,
            0,
            0,
            0,
            0,
            x167 * x213 - x169 * x215 + x23 * x302 + x23 * (x23 * x303 + x302),
            x23 * x307 + x24 * x302 + x310,
            x23 * x312 + x25 * x302 + x313,
            x24 * x307 + x318,
            x24 * x312 + x320,
            x25 * x312 + x321,
            x23 * x306 + x23 * (x23 * x324 + x306) + x310,
            x23 * x330 + x318,
            x23 * x332 + x320,
            x167 * x279
            - x169 * x280
            + x24 * x329
            + x24 * x330
            + x72 * (x333 - x334 + x70 * (x337 - x338 + x65 * (x335 - x336))),
            x24 * x332 + x25 * x329 + x339,
            x25 * x332 + x340,
            x23 * x311 + x23 * (x23 * x341 + x311) + x313,
            x23 * x342 + x24 * x311 + x319,
            x23 * x344 + x321,
            x24 * x331 + x24 * x342 + x339,
            x24 * x344 + x340,
            x25 * x343 + x25 * x344 + x287 * x335 - x287 * x336,
            x212 * x213 - x214 * x215 + x23 * x345 + x23 * (x23 * x346 + x345) + x61,
            x23 * x348 + x24 * x345 + x349,
            x23 * x353 + x25 * x345 + x356,
            x24 * x348 + x357,
            x24 * x353 + x361,
            x25 * x353 + x364,
            x23 * x347 + x23 * (x23 * x365 + x347) + x349,
            x23 * x367 + x357,
            x23 * x371 + x361,
            x165 + x212 * x279 - x214 * x280 + x24 * x366 + x24 * x367,
            x24 * x371 + x25 * x366 + x374,
            x25 * x371 + x377,
            x23 * x352 + x23 * (x23 * x380 + x352) + x356,
            x23 * x381 + x24 * x352 + x360,
            x23 * x385 + x364,
            x24 * x370 + x24 * x381 + x374,
            x24 * x385 + x377,
            x25 * x384
            + x25 * x385
            + x287 * x386
            - x287 * x387
            + x72
            * (
                x270 * x386
                - x270 * x387
                + x70 * (x386 * x65 - x387 * x65 + x65 * (x386 - x387 + x92))
            ),
        ]
    )
    return S


def eri_2020(a, A, b, B, c, C, d, D):
    """Cartesian [ds|ds] 2-electron electron repulsion integral.

    Generated code; DO NOT modify by hand!"""

    x0 = 2 * a + 2 * b
    x1 = x0 ** (-1.0)
    x2 = 2 * c + 2 * d
    x3 = x2 ** (-1.0)
    x4 = numpy.pi**2.5
    x5 = a + b
    x6 = c + d
    x7 = x5 * x6
    x8 = x5 + x6
    x9 = (x7 + numpy.sqrt(x8)) ** (-1.0)
    x10 = x5 ** (-1.0)
    x11 = numpy.exp(
        -a * b * x10 * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2)
    )
    x12 = x6 ** (-1.0)
    x13 = numpy.exp(
        -c * d * x12 * ((C[0] - D[0]) ** 2 + (C[1] - D[1]) ** 2 + (C[2] - D[2]) ** 2)
    )
    x14 = x8 ** (-1.0)
    x15 = x12 * (c * C[0] + d * D[0])
    x16 = -x10 * (a * A[0] + b * B[0])
    x17 = -x15 - x16
    x18 = x12 * (c * C[1] + d * D[1])
    x19 = -x10 * (a * A[1] + b * B[1])
    x20 = -x18 - x19
    x21 = -x10 * (a * A[2] + b * B[2])
    x22 = -x12 * (c * C[2] + d * D[2]) - x21
    x23 = x14 * x7 * (x17**2 + x20**2 + x22**2)
    x24 = boys(1, x23)
    x25 = x14 * x5
    x26 = boys(2, x23)
    x27 = 2 * x11 * x13 * x4 * x9
    x28 = x26 * x27
    x29 = x3 * (2 * x11 * x13 * x24 * x4 * x9 - x25 * x28)
    x30 = x15 - C[0]
    x31 = x24 * x27
    x32 = x17 * x25
    x33 = x28 * x32 + x30 * x31
    x34 = x27 * boys(3, x23)
    x35 = x28 * x30 + x32 * x34
    x36 = x29 + x30 * x33 + x32 * x35
    x37 = x14 * x6
    x38 = x36 * x37
    x39 = boys(0, x23)
    x40 = x3 * (2 * x11 * x13 * x39 * x4 * x9 - x25 * x31)
    x41 = x27 * x39
    x42 = x30 * (x30 * x41 + x31 * x32) + x32 * x33 + x40
    x43 = x1 * (-x38 + x42)
    x44 = -x16 - A[0]
    x45 = x0 + x2
    x46 = x45 ** (-1.0)
    x47 = x17 * x37
    x48 = x28 * x44 - x34 * x47
    x49 = x35 * x37
    x50 = -x17 * x49 + x33 * x44 + x46 * x48
    x51 = 2 * x46
    x52 = -2 * x11 * x13 * x26 * x4 * x9
    x53 = x3 * (-x25 * x34 - x52)
    x54 = x27 * boys(4, x23)
    x55 = x30 * x34 + x32 * x54
    x56 = x30 * x35 + x32 * x55 + x53
    x57 = x34 * x44 - x47 * x54
    x58 = x35 * x44 + x46 * x57 - x47 * x55
    x59 = x1 * (x33 - x49)
    x60 = x1 * (-x34 * x37 - x52)
    x61 = x18 - C[1]
    x62 = x20 * x25
    x63 = x28 * x62 + x31 * x61
    x64 = x28 * x61 + x34 * x62
    x65 = x30 * x63 + x32 * x64
    x66 = x37 * x65
    x67 = x31 * x62 + x41 * x61
    x68 = x30 * x67 + x32 * x63
    x69 = x1 * (-x66 + x68)
    x70 = x37 * x64
    x71 = x1 * (x63 - x70)
    x72 = -x17 * x70 + x44 * x63
    x73 = x34 * x61 + x54 * x62
    x74 = x44 * x64 - x47 * x73
    x75 = x30 * x64 + x32 * x73
    x76 = x29 + x61 * x63 + x62 * x64
    x77 = x37 * x76
    x78 = x40 + x61 * x67 + x62 * x63
    x79 = x1 * (-x77 + x78)
    x80 = x53 + x61 * x64 + x62 * x73
    x81 = -x19 - A[1]
    x82 = -x20 * x38 + x42 * x81
    x83 = x20 * x37
    x84 = x36 * x81 - x56 * x83
    x85 = x28 * x81 - x34 * x83
    x86 = x34 * x81 - x54 * x83
    x87 = -x20 * x49 + x33 * x81
    x88 = x35 * x81 - x55 * x83
    x89 = -x20 * x70 + x46 * x85 + x63 * x81
    x90 = x46 * x86 + x64 * x81 - x73 * x83
    x91 = -x20 * x66 + x46 * x87 + x68 * x81
    x92 = x46 * x88 + x65 * x81 - x75 * x83
    x93 = -x20 * x77 + x51 * x89 + x78 * x81
    x94 = x51 * x90 + x76 * x81 - x80 * x83
    x95 = -x21 - A[2]
    x96 = -x22 * x38 + x42 * x95
    x97 = x22 * x37
    x98 = x36 * x95 - x56 * x97
    x99 = x28 * x95 - x34 * x97
    x100 = x44 * x99
    x101 = x34 * x95 - x54 * x97
    x102 = x101 * x47
    x103 = -x22 * x49 + x33 * x95
    x104 = x103 * x44
    x105 = x35 * x95 - x55 * x97
    x106 = x105 * x47
    x107 = -x22 * x66 + x68 * x95
    x108 = -x22 * x70 + x63 * x95
    x109 = x108 * x44
    x110 = x64 * x95 - x73 * x97
    x111 = x110 * x47
    x112 = x65 * x95 - x75 * x97
    x113 = -x22 * x77 + x78 * x95
    x114 = x76 * x95 - x80 * x97
    x115 = 2 / x45**2
    x116 = x103 * x81
    x117 = x105 * x83
    x118 = x81 * x99
    x119 = x101 * x83
    x120 = x108 * x81
    x121 = x110 * x83
    x122 = x103 * x95
    x123 = x105 * x97
    x124 = x108 * x95
    x125 = x110 * x97
    x126 = x95 * x99
    x127 = x101 * x97

    # 36 item(s)
    S = numpy.array(
        [
            x43
            + x44 * (-x17 * x38 + x42 * x44 + x50 * x51)
            - x47 * (x36 * x44 - x47 * x56 + x51 * x58)
            + x51 * (x44 * x50 + x46 * (x44 * x48 - x47 * x57 + x60) - x47 * x58 + x59),
            x44 * (-x17 * x66 + x44 * x68 + x46 * x72)
            + x46 * (x44 * x72 - x47 * x74 + x71)
            - x47 * (x44 * x65 + x46 * x74 - x47 * x75)
            + x69,
            0,
            x44 * (-x17 * x77 + x44 * x78) - x47 * (x44 * x76 - x47 * x80) + x79,
            0,
            0,
            x44 * x82
            - x47 * x84
            + x51 * (x44 * x87 + x46 * (x44 * x85 - x47 * x86) - x47 * x88),
            x44 * x91 + x46 * (x44 * x89 - x47 * x90) - x47 * x92,
            0,
            x44 * x93 - x47 * x94,
            0,
            0,
            x44 * x96 - x47 * x98 + x51 * (x104 - x106 + x46 * (x100 - x102)),
            x107 * x44 - x112 * x47 + x46 * (x109 - x111),
            x104 * x46 - x106 * x46 + x46 * (x100 * x46 - x102 * x46),
            x113 * x44 - x114 * x47,
            x109 * x46 - x111 * x46,
            x100 * x115 - x102 * x115,
            x43 + x81 * x82 - x83 * x84,
            x46 * (x59 + x81 * x87 - x83 * x88) + x69 + x81 * x91 - x83 * x92,
            0,
            x51 * (x46 * (x60 + x81 * x85 - x83 * x86) + x71 + x81 * x89 - x83 * x90)
            + x79
            + x81 * x93
            - x83 * x94,
            0,
            0,
            x81 * x96 - x83 * x98,
            x107 * x81 - x112 * x83 + x46 * (x116 - x117),
            x116 * x46 - x117 * x46,
            x113 * x81 - x114 * x83 + x51 * (x120 - x121 + x46 * (x118 - x119)),
            x120 * x46 - x121 * x46 + x46 * (x118 * x46 - x119 * x46),
            x115 * x118 - x115 * x119,
            x43 + x95 * x96 - x97 * x98,
            x107 * x95 - x112 * x97 + x69,
            x122 * x46 - x123 * x46 + x46 * (x122 - x123 + x59),
            x113 * x95 - x114 * x97 + x79,
            x124 * x46 - x125 * x46 + x46 * (x124 - x125 + x71),
            x115 * x126
            - x115 * x127
            + x51 * (x126 * x46 - x127 * x46 + x46 * (x126 - x127 + x60)),
        ]
    )
    return S


def eri_2021(a, A, b, B, c, C, d, D):
    """Cartesian [ds|dp] 2-electron electron repulsion integral.

    Generated code; DO NOT modify by hand!"""

    x0 = 2 * a + 2 * b
    x1 = x0 ** (-1.0)
    x2 = c + d
    x3 = x2 ** (-1.0)
    x4 = x3 * (c * C[0] + d * D[0])
    x5 = x4 - C[0]
    x6 = a + b
    x7 = x2 + x6
    x8 = x7 ** (-1.0)
    x9 = x6 ** (-1.0)
    x10 = -x9 * (a * A[0] + b * B[0])
    x11 = -x10 - x4
    x12 = x3 * (c * C[1] + d * D[1])
    x13 = -x9 * (a * A[1] + b * B[1])
    x14 = -x12 - x13
    x15 = -x9 * (a * A[2] + b * B[2])
    x16 = -x15 - x3 * (c * C[2] + d * D[2])
    x17 = x2 * x6
    x18 = x17 * x8 * (x11**2 + x14**2 + x16**2)
    x19 = boys(2, x18)
    x20 = numpy.pi**2.5
    x21 = (x17 + numpy.sqrt(x7)) ** (-1.0)
    x22 = numpy.exp(
        -a * b * x9 * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2)
    )
    x23 = C[0] - D[0]
    x24 = C[1] - D[1]
    x25 = C[2] - D[2]
    x26 = numpy.exp(-c * d * x3 * (x23**2 + x24**2 + x25**2))
    x27 = 2 * x20 * x21 * x22 * x26
    x28 = x19 * x27
    x29 = x6 * x8
    x30 = x11 * x29
    x31 = boys(3, x18)
    x32 = x27 * x31
    x33 = x28 * x5 + x30 * x32
    x34 = x29 * x33
    x35 = boys(1, x18)
    x36 = x27 * x35
    x37 = x28 * x30 + x36 * x5
    x38 = 2 * c + 2 * d
    x39 = x38 ** (-1.0)
    x40 = 2 * x39
    x41 = x39 * (2 * x20 * x21 * x22 * x26 * x35 - x28 * x29)
    x42 = x11 * x34 + x37 * x5 + x41
    x43 = -2 * x19 * x20 * x21 * x22 * x26
    x44 = x39 * (-x29 * x32 - x43)
    x45 = x27 * boys(4, x18)
    x46 = x30 * x45 + x32 * x5
    x47 = x29 * x46
    x48 = x11 * x47 + x33 * x5 + x44
    x49 = x30 * x48 + x40 * (-x34 + x37) + x42 * x5
    x50 = x2 * x8
    x51 = x49 * x50
    x52 = x29 * x37
    x53 = boys(0, x18)
    x54 = x27 * x53
    x55 = x30 * x36 + x5 * x54
    x56 = x39 * (2 * x20 * x21 * x22 * x26 * x53 - x29 * x36)
    x57 = x11 * x52 + x5 * x55 + x56
    x58 = x30 * x42 + x40 * (-x52 + x55) + x5 * x57
    x59 = x1 * (-x51 + x58)
    x60 = -x10 - A[0]
    x61 = x48 * x50
    x62 = x0 + x38
    x63 = x62 ** (-1.0)
    x64 = x11 * x50
    x65 = x32 * x60 - x45 * x64
    x66 = x46 * x50
    x67 = -x11 * x66 + x33 * x60 + x63 * x65
    x68 = 2 * x63
    x69 = -x11 * x61 + x42 * x60 + x67 * x68
    x70 = 3 * x63
    x71 = -2 * x20 * x21 * x22 * x26 * x31
    x72 = x39 * (-x29 * x45 - x71)
    x73 = x27 * boys(5, x18)
    x74 = x30 * x73 + x45 * x5
    x75 = x30 * x74 + x46 * x5 + x72
    x76 = x30 * x75 + x40 * (x33 - x47) + x48 * x5
    x77 = x45 * x60 - x64 * x73
    x78 = x46 * x60 + x63 * x77 - x64 * x74
    x79 = x48 * x60 - x64 * x75 + x68 * x78
    x80 = x42 * x50
    x81 = x1 * (x57 - x80)
    x82 = x28 * x60 - x32 * x64
    x83 = x33 * x50
    x84 = -x11 * x83 + x37 * x60 + x63 * x82
    x85 = x1 * (x37 - x83)
    x86 = x1 * (-x32 * x50 - x43)
    x87 = (
        x60 * (-x11 * x80 + x57 * x60 + x68 * x84)
        - x64 * x69
        + x68 * (x60 * x84 + x63 * (x60 * x82 - x64 * x65 + x86) - x64 * x67 + x85)
        + x81
    )
    x88 = x1 * (x42 - x61)
    x89 = x1 * (x33 - x66)
    x90 = x1 * (-x45 * x50 - x71)
    x91 = x12 - C[1]
    x92 = x14 * x29
    x93 = x28 * x91 + x32 * x92
    x94 = x29 * x93
    x95 = x28 * x92 + x36 * x91
    x96 = x39 * (-x94 + x95)
    x97 = x11 * x94 + x5 * x95
    x98 = x32 * x91 + x45 * x92
    x99 = x29 * x98
    x100 = x11 * x99 + x5 * x93
    x101 = x100 * x30 + x5 * x97 + x96
    x102 = x101 * x50
    x103 = x29 * x95
    x104 = x36 * x92 + x54 * x91
    x105 = x39 * (-x103 + x104)
    x106 = x103 * x11 + x104 * x5
    x107 = x105 + x106 * x5 + x30 * x97
    x108 = x1 * (-x102 + x107)
    x109 = x50 * x98
    x110 = -x109 * x11 + x60 * x93
    x111 = x100 * x50
    x112 = -x11 * x111 + x110 * x63 + x60 * x97
    x113 = x1 * (-x111 + x97)
    x114 = x1 * (-x109 + x93)
    x115 = x45 * x91 + x73 * x92
    x116 = -x115 * x64 + x60 * x98
    x117 = x115 * x30 + x5 * x98
    x118 = x100 * x60 + x116 * x63 - x117 * x64
    x119 = x39 * (x93 - x99)
    x120 = x100 * x5 + x117 * x30 + x119
    x121 = (
        x108
        + x60 * (-x102 * x11 + x107 * x60 + x112 * x68)
        - x64 * (x101 * x60 + x118 * x68 - x120 * x64)
        + x68 * (x112 * x60 + x113 - x118 * x64 + x63 * (x110 * x60 + x114 - x116 * x64))
    )
    x122 = x50 * x97
    x123 = x1 * (x106 - x122)
    x124 = x50 * x93
    x125 = x1 * (-x124 + x95)
    x126 = -x11 * x124 + x60 * x95
    x127 = (
        -x112 * x64
        + x123
        + x60 * (x106 * x60 - x11 * x122 + x126 * x63)
        + x63 * (-x110 * x64 + x125 + x126 * x60)
    )
    x128 = x14 * x94 + x41 + x91 * x95
    x129 = x14 * x99 + x44 + x91 * x93
    x130 = x128 * x5 + x129 * x30
    x131 = x130 * x50
    x132 = x103 * x14 + x104 * x91 + x56
    x133 = x128 * x30 + x132 * x5
    x134 = x1 * (-x131 + x133)
    x135 = x129 * x50
    x136 = x1 * (x128 - x135)
    x137 = -x11 * x135 + x128 * x60
    x138 = x115 * x92 + x72 + x91 * x98
    x139 = x129 * x60 - x138 * x64
    x140 = x129 * x5 + x138 * x30
    x141 = (
        x134
        + x60 * (-x11 * x131 + x133 * x60 + x137 * x63)
        + x63 * (x136 + x137 * x60 - x139 * x64)
        - x64 * (x130 * x60 + x139 * x63 - x140 * x64)
    )
    x142 = x128 * x50
    x143 = x1 * (x132 - x142)
    x144 = -x137 * x64 + x143 + x60 * (-x11 * x142 + x132 * x60)
    x145 = x128 * x91 + x129 * x92 + 2 * x96
    x146 = x145 * x50
    x147 = 2 * x105 + x128 * x92 + x132 * x91
    x148 = x1 * (-x146 + x147)
    x149 = 2 * x119 + x129 * x91 + x138 * x92
    x150 = -x13 - A[1]
    x151 = -x14 * x51 + x150 * x58
    x152 = x14 * x50
    x153 = x150 * x49 - x152 * x76
    x154 = -x14 * x80 + x150 * x57
    x155 = -x14 * x61 + x150 * x42
    x156 = x150 * x28 - x152 * x32
    x157 = x150 * x32 - x152 * x45
    x158 = -x14 * x83 + x150 * x37
    x159 = -x14 * x66 + x150 * x33
    x160 = (
        x154 * x60
        - x155 * x64
        + x68 * (x158 * x60 - x159 * x64 + x63 * (x156 * x60 - x157 * x64))
    )
    x161 = x150 * x48 - x152 * x75
    x162 = x150 * x45 - x152 * x73
    x163 = x150 * x46 - x152 * x74
    x164 = -x102 * x14 + x107 * x150 + x155 * x63
    x165 = -x109 * x14 + x150 * x93 + x157 * x63
    x166 = -x115 * x152 + x150 * x98 + x162 * x63
    x167 = -x111 * x14 + x150 * x97 + x159 * x63
    x168 = x100 * x150 - x117 * x152 + x163 * x63
    x169 = x101 * x150 - x120 * x152 + x161 * x63
    x170 = (
        x164 * x60
        - x169 * x64
        + x68 * (x167 * x60 - x168 * x64 + x63 * (x165 * x60 - x166 * x64))
    )
    x171 = -x124 * x14 + x150 * x95 + x156 * x63
    x172 = x106 * x150 - x122 * x14 + x158 * x63
    x173 = -x167 * x64 + x172 * x60 + x63 * (-x165 * x64 + x171 * x60)
    x174 = x128 * x150 - x135 * x14 + x165 * x68
    x175 = x129 * x150 - x138 * x152 + x166 * x68
    x176 = -x131 * x14 + x133 * x150 + x167 * x68
    x177 = x130 * x150 - x140 * x152 + x168 * x68
    x178 = x176 * x60 - x177 * x64 + x63 * (x174 * x60 - x175 * x64)
    x179 = x132 * x150 - x14 * x142 + x171 * x68
    x180 = -x174 * x64 + x179 * x60
    x181 = -x14 * x146 + x147 * x150 + x174 * x70
    x182 = x145 * x150 - x149 * x152 + x175 * x70
    x183 = -x15 - A[2]
    x184 = -x16 * x51 + x183 * x58
    x185 = x16 * x50
    x186 = x183 * x49 - x185 * x76
    x187 = -x16 * x80 + x183 * x57
    x188 = -x16 * x61 + x183 * x42
    x189 = x183 * x28 - x185 * x32
    x190 = x189 * x60
    x191 = x183 * x32 - x185 * x45
    x192 = x191 * x64
    x193 = -x16 * x83 + x183 * x37
    x194 = x193 * x60
    x195 = -x16 * x66 + x183 * x33
    x196 = x195 * x64
    x197 = x187 * x60 - x188 * x64 + x68 * (x194 - x196 + x63 * (x190 - x192))
    x198 = x188 * x60
    x199 = x183 * x48 - x185 * x75
    x200 = x199 * x64
    x201 = x191 * x60
    x202 = x183 * x45 - x185 * x73
    x203 = x202 * x64
    x204 = x195 * x60
    x205 = x183 * x46 - x185 * x74
    x206 = x205 * x64
    x207 = -x102 * x16 + x107 * x183
    x208 = -x111 * x16 + x183 * x97
    x209 = x208 * x60
    x210 = -x109 * x16 + x183 * x93
    x211 = x210 * x60
    x212 = -x115 * x185 + x183 * x98
    x213 = x212 * x64
    x214 = x100 * x183 - x117 * x185
    x215 = x214 * x64
    x216 = x101 * x183 - x120 * x185
    x217 = x207 * x60 - x216 * x64 + x68 * (x209 - x215 + x63 * (x211 - x213))
    x218 = (
        x198 * x63
        - x200 * x63
        + x68 * (x204 * x63 - x206 * x63 + x63 * (x201 * x63 - x203 * x63))
    )
    x219 = x106 * x183 - x122 * x16
    x220 = -x124 * x16 + x183 * x95
    x221 = x220 * x60
    x222 = x210 * x64
    x223 = -x208 * x64 + x219 * x60 + x63 * (x221 - x222)
    x224 = x128 * x183 - x135 * x16
    x225 = x224 * x60
    x226 = x129 * x183 - x138 * x185
    x227 = x226 * x64
    x228 = -x131 * x16 + x133 * x183
    x229 = x130 * x183 - x140 * x185
    x230 = x228 * x60 - x229 * x64 + x63 * (x225 - x227)
    x231 = x209 * x63 - x215 * x63 + x63 * (x211 * x63 - x213 * x63)
    x232 = x194 * x63 - x196 * x63 + x63 * (x190 * x63 - x192 * x63)
    x233 = 2 / x62**2
    x234 = x204 * x233 - x206 * x233 + x63 * (x201 * x233 - x203 * x233)
    x235 = x132 * x183 - x142 * x16
    x236 = -x224 * x64 + x235 * x60
    x237 = -x146 * x16 + x147 * x183
    x238 = x145 * x183 - x149 * x185
    x239 = x225 * x63 - x227 * x63
    x240 = x221 * x63 - x222 * x63
    x241 = x211 * x233 - x213 * x233
    x242 = x190 * x233 - x192 * x233
    x243 = 6 / x62**3
    x244 = x150 * x154 - x152 * x155 + x81
    x245 = x108 + x150 * x164 - x152 * x169 + x63 * (x150 * x155 - x152 * x161 + x88)
    x246 = x123 + x150 * x172 - x152 * x167 + x63 * (x150 * x158 - x152 * x159 + x85)
    x247 = (
        x134
        + x150 * x176
        - x152 * x177
        + x68
        * (x113 + x150 * x167 - x152 * x168 + x63 * (x150 * x159 - x152 * x163 + x89))
    )
    x248 = (
        x143
        + x150 * x179
        - x152 * x174
        + x68
        * (x125 + x150 * x171 - x152 * x165 + x63 * (x150 * x156 - x152 * x157 + x86))
    )
    x249 = x150 * x187 - x152 * x188
    x250 = x150 * x188
    x251 = x152 * x199
    x252 = x150 * x207 - x152 * x216 + x63 * (x250 - x251)
    x253 = x250 * x63 - x251 * x63
    x254 = x150 * x193
    x255 = x152 * x195
    x256 = x150 * x219 - x152 * x208 + x63 * (x254 - x255)
    x257 = x150 * x208
    x258 = x150 * x195
    x259 = x152 * x205
    x260 = x152 * x214
    x261 = x150 * x228 - x152 * x229 + x68 * (x257 - x260 + x63 * (x258 - x259))
    x262 = x257 * x63 - x260 * x63 + x63 * (x258 * x63 - x259 * x63)
    x263 = x254 * x63 - x255 * x63
    x264 = x233 * x258 - x233 * x259
    x265 = x150 * x189
    x266 = x152 * x191
    x267 = x150 * x220
    x268 = x152 * x210
    x269 = x150 * x235 - x152 * x224 + x68 * (x267 - x268 + x63 * (x265 - x266))
    x270 = x150 * x224
    x271 = x152 * x226
    x272 = x150 * x191
    x273 = x152 * x202
    x274 = x150 * x210
    x275 = x152 * x212
    x276 = (
        x270 * x63
        - x271 * x63
        + x68 * (x274 * x63 - x275 * x63 + x63 * (x272 * x63 - x273 * x63))
    )
    x277 = x267 * x63 - x268 * x63 + x63 * (x265 * x63 - x266 * x63)
    x278 = x233 * x274 - x233 * x275 + x63 * (x233 * x272 - x233 * x273)
    x279 = x233 * x265 - x233 * x266
    x280 = x183 * x187 - x185 * x188 + x81
    x281 = x108 + x183 * x207 - x185 * x216
    x282 = x183 * x188
    x283 = x185 * x199
    x284 = x282 * x63 - x283 * x63 + x63 * (x282 - x283 + x88)
    x285 = x123 + x183 * x219 - x185 * x208
    x286 = x134 + x183 * x228 - x185 * x229
    x287 = x183 * x208
    x288 = x185 * x214
    x289 = x287 * x63 - x288 * x63 + x63 * (x113 + x287 - x288)
    x290 = x183 * x193
    x291 = x185 * x195
    x292 = x290 * x63 - x291 * x63 + x63 * (x290 - x291 + x85)
    x293 = x183 * x195
    x294 = x185 * x205
    x295 = (
        x233 * x293
        - x233 * x294
        + x68 * (x293 * x63 - x294 * x63 + x63 * (x293 - x294 + x89))
    )
    x296 = x143 + x183 * x235 - x185 * x224
    x297 = x183 * x224
    x298 = x185 * x226
    x299 = x297 * x63 - x298 * x63 + x63 * (x136 + x297 - x298)
    x300 = x183 * x220
    x301 = x185 * x210
    x302 = x300 * x63 - x301 * x63 + x63 * (x125 + x300 - x301)
    x303 = x183 * x210
    x304 = x185 * x212
    x305 = (
        x233 * x303
        - x233 * x304
        + x68 * (x303 * x63 - x304 * x63 + x63 * (x114 + x303 - x304))
    )
    x306 = x183 * x189
    x307 = x185 * x191
    x308 = (
        x233 * x306
        - x233 * x307
        + x68 * (x306 * x63 - x307 * x63 + x63 * (x306 - x307 + x86))
    )
    x309 = x183 * x191
    x310 = x185 * x202

    # 108 item(s)
    S = numpy.array(
        [
            x23 * x87
            + x59
            + x60 * (-x11 * x51 + x58 * x60 + x69 * x70)
            - x64 * (x49 * x60 - x64 * x76 + x70 * x79)
            + x70
            * (
                x60 * x69
                - x64 * x79
                + x68
                * (x60 * x67 + x63 * (x60 * x65 - x64 * x77 + x90) - x64 * x78 + x89)
                + x88
            ),
            x121 + x24 * x87,
            x25 * x87,
            x121 + x127 * x23,
            x127 * x24 + x141,
            x127 * x25,
            0,
            0,
            0,
            x141 + x144 * x23,
            x144 * x24
            + x148
            + x60 * (-x11 * x146 + x147 * x60)
            - x64 * (x145 * x60 - x149 * x64),
            x144 * x25,
            0,
            0,
            0,
            0,
            0,
            0,
            x151 * x60
            - x153 * x64
            + x160 * x23
            + x70
            * (
                x155 * x60
                - x161 * x64
                + x68 * (x159 * x60 - x163 * x64 + x63 * (x157 * x60 - x162 * x64))
            ),
            x160 * x24 + x170,
            x160 * x25,
            x170 + x173 * x23,
            x173 * x24 + x178,
            x173 * x25,
            0,
            0,
            0,
            x178 + x180 * x23,
            x180 * x24 + x181 * x60 - x182 * x64,
            x180 * x25,
            0,
            0,
            0,
            0,
            0,
            0,
            x184 * x60
            - x186 * x64
            + x197 * x23
            + x70 * (x198 - x200 + x68 * (x204 - x206 + x63 * (x201 - x203))),
            x197 * x24 + x217,
            x197 * x25 + x218,
            x217 + x223 * x23,
            x223 * x24 + x230,
            x223 * x25 + x231,
            x218 + x23 * x232,
            x231 + x232 * x24,
            x232 * x25 + x234,
            x23 * x236 + x230,
            x236 * x24 + x237 * x60 - x238 * x64,
            x236 * x25 + x239,
            x23 * x240 + x231,
            x239 + x24 * x240,
            x240 * x25 + x241,
            x23 * x242 + x234,
            x24 * x242 + x241,
            x201 * x243 - x203 * x243 + x242 * x25,
            x150 * x151 - x152 * x153 + x23 * x244 + x59,
            x24 * x244 + x245,
            x244 * x25,
            x23 * x246 + x245,
            x24 * x246 + x247,
            x246 * x25,
            0,
            0,
            0,
            x23 * x248 + x247,
            x148
            + x150 * x181
            - x152 * x182
            + x24 * x248
            + x70
            * (
                x136
                + x150 * x174
                - x152 * x175
                + x68
                * (
                    x114
                    + x150 * x165
                    - x152 * x166
                    + x63 * (x150 * x157 - x152 * x162 + x90)
                )
            ),
            x248 * x25,
            0,
            0,
            0,
            0,
            0,
            0,
            x150 * x184 - x152 * x186 + x23 * x249,
            x24 * x249 + x252,
            x249 * x25 + x253,
            x23 * x256 + x252,
            x24 * x256 + x261,
            x25 * x256 + x262,
            x23 * x263 + x253,
            x24 * x263 + x262,
            x25 * x263 + x264,
            x23 * x269 + x261,
            x150 * x237
            - x152 * x238
            + x24 * x269
            + x70 * (x270 - x271 + x68 * (x274 - x275 + x63 * (x272 - x273))),
            x25 * x269 + x276,
            x23 * x277 + x262,
            x24 * x277 + x276,
            x25 * x277 + x278,
            x23 * x279 + x264,
            x24 * x279 + x278,
            x243 * x272 - x243 * x273 + x25 * x279,
            x183 * x184 - x185 * x186 + x23 * x280 + x59,
            x24 * x280 + x281,
            x25 * x280 + x284,
            x23 * x285 + x281,
            x24 * x285 + x286,
            x25 * x285 + x289,
            x23 * x292 + x284,
            x24 * x292 + x289,
            x25 * x292 + x295,
            x23 * x296 + x286,
            x148 + x183 * x237 - x185 * x238 + x24 * x296,
            x25 * x296 + x299,
            x23 * x302 + x289,
            x24 * x302 + x299,
            x25 * x302 + x305,
            x23 * x308 + x295,
            x24 * x308 + x305,
            x243 * x309
            - x243 * x310
            + x25 * x308
            + x70
            * (
                x233 * x309
                - x233 * x310
                + x68 * (x309 * x63 - x310 * x63 + x63 * (x309 - x310 + x90))
            ),
        ]
    )
    return S


def eri_2022(a, A, b, B, c, C, d, D):
    """Cartesian [ds|dd] 2-electron electron repulsion integral.

    Generated code; DO NOT modify by hand!"""

    x0 = 2 * a + 2 * b
    x1 = x0 ** (-1.0)
    x2 = 2 * c + 2 * d
    x3 = x2 ** (-1.0)
    x4 = numpy.pi**2.5
    x5 = a + b
    x6 = c + d
    x7 = x5 * x6
    x8 = x5 + x6
    x9 = (x7 + numpy.sqrt(x8)) ** (-1.0)
    x10 = x5 ** (-1.0)
    x11 = numpy.exp(
        -a * b * x10 * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2)
    )
    x12 = x6 ** (-1.0)
    x13 = C[0] - D[0]
    x14 = C[1] - D[1]
    x15 = C[2] - D[2]
    x16 = x15**2
    x17 = numpy.exp(-c * d * x12 * (x13**2 + x14**2 + x16))
    x18 = x8 ** (-1.0)
    x19 = x12 * (c * C[0] + d * D[0])
    x20 = -x10 * (a * A[0] + b * B[0])
    x21 = -x19 - x20
    x22 = x12 * (c * C[1] + d * D[1])
    x23 = -x10 * (a * A[1] + b * B[1])
    x24 = -x22 - x23
    x25 = -x10 * (a * A[2] + b * B[2])
    x26 = -x12 * (c * C[2] + d * D[2]) - x25
    x27 = x18 * x7 * (x21**2 + x24**2 + x26**2)
    x28 = boys(2, x27)
    x29 = -2 * x11 * x17 * x28 * x4 * x9
    x30 = x18 * x5
    x31 = boys(3, x27)
    x32 = 2 * x11 * x17 * x4 * x9
    x33 = x31 * x32
    x34 = x3 * (-x29 - x30 * x33)
    x35 = x19 - C[0]
    x36 = x28 * x32
    x37 = x21 * x30
    x38 = x33 * x37 + x35 * x36
    x39 = boys(4, x27)
    x40 = x32 * x39
    x41 = x33 * x35 + x37 * x40
    x42 = x30 * x41
    x43 = x21 * x42 + x34 + x35 * x38
    x44 = x30 * x43
    x45 = boys(1, x27)
    x46 = x3 * (2 * x11 * x17 * x4 * x45 * x9 - x30 * x36)
    x47 = x32 * x45
    x48 = x35 * x47 + x36 * x37
    x49 = x30 * x38
    x50 = x21 * x49 + x35 * x48 + x46
    x51 = 3 * x3
    x52 = 2 * x3
    x53 = x21 * x44 + x35 * x50 + x52 * (x48 - x49)
    x54 = -2 * x11 * x17 * x31 * x4 * x9
    x55 = x3 * (-x30 * x40 - x54)
    x56 = x32 * boys(5, x27)
    x57 = x35 * x40 + x37 * x56
    x58 = x30 * x57
    x59 = x21 * x58 + x35 * x41 + x55
    x60 = x30 * x59
    x61 = x21 * x60 + x35 * x43 + x52 * (x38 - x42)
    x62 = x35 * x53 + x37 * x61 + x51 * (-x44 + x50)
    x63 = x18 * x6
    x64 = x62 * x63
    x65 = x30 * x50
    x66 = boys(0, x27)
    x67 = x3 * (2 * x11 * x17 * x4 * x66 * x9 - x30 * x47)
    x68 = x32 * x66
    x69 = x35 * x68 + x37 * x47
    x70 = x30 * x48
    x71 = x21 * x70 + x35 * x69 + x67
    x72 = x21 * x65 + x35 * x71 + x52 * (x69 - x70)
    x73 = x35 * x72 + x37 * x53 + x51 * (-x65 + x71)
    x74 = x1 * (-x64 + x73)
    x75 = -x20 - A[0]
    x76 = x61 * x63
    x77 = x59 * x63
    x78 = x0 + x2
    x79 = x78 ** (-1.0)
    x80 = x21 * x63
    x81 = x40 * x75 - x56 * x80
    x82 = x57 * x63
    x83 = -x21 * x82 + x41 * x75 + x79 * x81
    x84 = 2 * x79
    x85 = -x21 * x77 + x43 * x75 + x83 * x84
    x86 = 3 * x79
    x87 = -x21 * x76 + x53 * x75 + x85 * x86
    x88 = 4 * x79
    x89 = -2 * x11 * x17 * x39 * x4 * x9
    x90 = x3 * (-x30 * x56 - x89)
    x91 = x32 * boys(6, x27)
    x92 = x35 * x56 + x37 * x91
    x93 = x35 * x57 + x37 * x92 + x90
    x94 = x35 * x59 + x37 * x93 + x52 * (x41 - x58)
    x95 = x35 * x61 + x37 * x94 + x51 * (x43 - x60)
    x96 = x56 * x75 - x80 * x91
    x97 = x57 * x75 + x79 * x96 - x80 * x92
    x98 = x59 * x75 - x80 * x93 + x84 * x97
    x99 = x61 * x75 - x80 * x94 + x86 * x98
    x100 = x53 * x63
    x101 = x1 * (-x100 + x72)
    x102 = x43 * x63
    x103 = x33 * x75 - x40 * x80
    x104 = x41 * x63
    x105 = x103 * x79 - x104 * x21 + x38 * x75
    x106 = -x102 * x21 + x105 * x84 + x50 * x75
    x107 = x1 * (-x102 + x50)
    x108 = x1 * (-x104 + x38)
    x109 = x1 * (-x40 * x63 - x54)
    x110 = (
        x101
        + x75 * (-x100 * x21 + x106 * x86 + x72 * x75)
        - x80 * x87
        + x86
        * (
            x106 * x75
            + x107
            - x80 * x85
            + x84
            * (x105 * x75 + x108 + x79 * (x103 * x75 + x109 - x80 * x81) - x80 * x83)
        )
    )
    x111 = x1 * (x53 - x76)
    x112 = x1 * (x43 - x77)
    x113 = x1 * (x41 - x82)
    x114 = x1 * (-x56 * x63 - x89)
    x115 = x50 * x63
    x116 = x1 * (-x115 + x71)
    x117 = -x33 * x80 + x36 * x75
    x118 = x38 * x63
    x119 = x117 * x79 - x118 * x21 + x48 * x75
    x120 = x1 * (-x118 + x48)
    x121 = x1 * (-x29 - x33 * x63)
    x122 = (
        -x106 * x80
        + x116
        + x75 * (-x115 * x21 + x119 * x84 + x71 * x75)
        + x84
        * (-x105 * x80 + x119 * x75 + x120 + x79 * (-x103 * x80 + x117 * x75 + x121))
    )
    x123 = x122 * x13
    x124 = x122 * x14
    x125 = x22 - C[1]
    x126 = x24 * x30
    x127 = x125 * x36 + x126 * x33
    x128 = x127 * x30
    x129 = x125 * x47 + x126 * x36
    x130 = x3 * (-x128 + x129)
    x131 = x128 * x21 + x129 * x35
    x132 = x125 * x33 + x126 * x40
    x133 = x132 * x30
    x134 = x127 * x35 + x133 * x21
    x135 = x134 * x30
    x136 = x130 + x131 * x35 + x135 * x21
    x137 = x136 * x63
    x138 = x129 * x30
    x139 = x125 * x68 + x126 * x47
    x140 = x3 * (-x138 + x139)
    x141 = x138 * x21 + x139 * x35
    x142 = x131 * x30
    x143 = x140 + x141 * x35 + x142 * x21
    x144 = x1 * (-x137 + x143)
    x145 = x132 * x63
    x146 = x127 * x75 - x145 * x21
    x147 = x134 * x63
    x148 = x131 * x75 + x146 * x79 - x147 * x21
    x149 = x3 * (x127 - x133)
    x150 = x125 * x40 + x126 * x56
    x151 = x150 * x30
    x152 = x132 * x35 + x151 * x21
    x153 = x152 * x30
    x154 = x134 * x35 + x149 + x153 * x21
    x155 = x154 * x63
    x156 = x150 * x63
    x157 = x132 * x75 - x156 * x21
    x158 = x152 * x63
    x159 = x134 * x75 + x157 * x79 - x158 * x21
    x160 = x136 * x75 - x155 * x21 + x159 * x84
    x161 = x1 * (x131 - x147)
    x162 = x1 * (x127 - x145)
    x163 = (
        x144
        - x160 * x80
        + x75 * (-x137 * x21 + x143 * x75 + x148 * x84)
        + x84 * (x148 * x75 - x159 * x80 + x161 + x79 * (x146 * x75 - x157 * x80 + x162))
    )
    x164 = x124 + x163
    x165 = x136 * x35 + x154 * x37 + x52 * (x131 - x135)
    x166 = x165 * x63
    x167 = x136 * x37 + x143 * x35 + x52 * (x141 - x142)
    x168 = x1 * (-x166 + x167)
    x169 = x1 * (x136 - x155)
    x170 = x3 * (x132 - x151)
    x171 = x125 * x56 + x126 * x91
    x172 = x150 * x35 + x171 * x37
    x173 = x152 * x35 + x170 + x172 * x37
    x174 = x150 * x75 - x171 * x80
    x175 = x152 * x75 - x172 * x80 + x174 * x79
    x176 = x154 * x75 - x173 * x80 + x175 * x84
    x177 = x1 * (x134 - x158)
    x178 = x1 * (x132 - x156)
    x179 = x154 * x35 + x173 * x37 + x52 * (x134 - x153)
    x180 = (
        x168
        + x75 * (x160 * x86 - x166 * x21 + x167 * x75)
        - x80 * (x165 * x75 + x176 * x86 - x179 * x80)
        + x86
        * (
            x160 * x75
            + x169
            - x176 * x80
            + x84
            * (x159 * x75 - x175 * x80 + x177 + x79 * (x157 * x75 - x174 * x80 + x178))
        )
    )
    x181 = x125 * x127 + x133 * x24 + x34
    x182 = x181 * x30
    x183 = x125 * x129 + x128 * x24 + x46
    x184 = x3 * (-x182 + x183)
    x185 = x182 * x21 + x183 * x35
    x186 = x125 * x132 + x151 * x24 + x55
    x187 = x186 * x30
    x188 = x181 * x35 + x187 * x21
    x189 = x184 + x185 * x35 + x188 * x37
    x190 = x189 * x63
    x191 = x183 * x30
    x192 = x125 * x139 + x138 * x24 + x67
    x193 = x3 * (-x191 + x192)
    x194 = x191 * x21 + x192 * x35
    x195 = x185 * x37 + x193 + x194 * x35
    x196 = x1 * (-x190 + x195)
    x197 = x186 * x63
    x198 = x181 * x75 - x197 * x21
    x199 = x188 * x63
    x200 = x185 * x75 + x198 * x79 - x199 * x21
    x201 = x1 * (x185 - x199)
    x202 = x1 * (x181 - x197)
    x203 = x125 * x150 + x126 * x171 + x90
    x204 = x186 * x75 - x203 * x80
    x205 = x186 * x35 + x203 * x37
    x206 = x188 * x75 + x204 * x79 - x205 * x80
    x207 = x3 * (x181 - x187)
    x208 = x188 * x35 + x205 * x37 + x207
    x209 = (
        x196
        + x75 * (-x190 * x21 + x195 * x75 + x200 * x84)
        - x80 * (x189 * x75 + x206 * x84 - x208 * x80)
        + x84 * (x200 * x75 + x201 - x206 * x80 + x79 * (x198 * x75 + x202 - x204 * x80))
    )
    x210 = x14 * x163 + x209
    x211 = x15 * x163
    x212 = x131 * x63
    x213 = x1 * (x141 - x212)
    x214 = x127 * x63
    x215 = x1 * (x129 - x214)
    x216 = x129 * x75 - x21 * x214
    x217 = (
        -x148 * x80
        + x213
        + x75 * (x141 * x75 - x21 * x212 + x216 * x79)
        + x79 * (-x146 * x80 + x215 + x216 * x75)
    )
    x218 = x13 * x217
    x219 = x14 * x217
    x220 = x185 * x63
    x221 = x1 * (x194 - x220)
    x222 = x181 * x63
    x223 = x1 * (x183 - x222)
    x224 = x183 * x75 - x21 * x222
    x225 = (
        -x200 * x80
        + x221
        + x75 * (x194 * x75 - x21 * x220 + x224 * x79)
        + x79 * (-x198 * x80 + x223 + x224 * x75)
    )
    x226 = x219 + x225
    x227 = x125 * x183 + 2 * x130 + x182 * x24
    x228 = x125 * x181 + 2 * x149 + x187 * x24
    x229 = x227 * x35 + x228 * x37
    x230 = x229 * x63
    x231 = x125 * x192 + 2 * x140 + x191 * x24
    x232 = x227 * x37 + x231 * x35
    x233 = x1 * (-x230 + x232)
    x234 = x228 * x63
    x235 = x1 * (x227 - x234)
    x236 = -x21 * x234 + x227 * x75
    x237 = x125 * x186 + x126 * x203 + 2 * x170
    x238 = x228 * x75 - x237 * x80
    x239 = x228 * x35 + x237 * x37
    x240 = (
        x14 * x225
        + x233
        + x75 * (-x21 * x230 + x232 * x75 + x236 * x79)
        + x79 * (x235 + x236 * x75 - x238 * x80)
        - x80 * (x229 * x75 + x238 * x79 - x239 * x80)
    )
    x241 = x15 * x225
    x242 = x183 * x63
    x243 = x1 * (x192 - x242)
    x244 = -x224 * x80 + x243 + x75 * (x192 * x75 - x21 * x242)
    x245 = x13 * x244
    x246 = x14 * x244
    x247 = x227 * x63
    x248 = x1 * (x231 - x247)
    x249 = -x236 * x80 + x248 + x75 * (-x21 * x247 + x231 * x75)
    x250 = x246 + x249
    x251 = x125 * x227 + x126 * x228 + 3 * x184
    x252 = x251 * x63
    x253 = x125 * x231 + x126 * x227 + 3 * x193
    x254 = x1 * (-x252 + x253)
    x255 = x125 * x228 + x126 * x237 + 3 * x207
    x256 = -x23 - A[1]
    x257 = -x24 * x64 + x256 * x73
    x258 = x24 * x63
    x259 = x256 * x62 - x258 * x95
    x260 = -x100 * x24 + x256 * x72
    x261 = -x24 * x76 + x256 * x53
    x262 = -x102 * x24 + x256 * x50
    x263 = -x24 * x77 + x256 * x43
    x264 = x256 * x33 - x258 * x40
    x265 = x256 * x40 - x258 * x56
    x266 = -x104 * x24 + x256 * x38
    x267 = -x24 * x82 + x256 * x41
    x268 = (
        x260 * x75
        - x261 * x80
        + x86
        * (
            x262 * x75
            - x263 * x80
            + x84 * (x266 * x75 - x267 * x80 + x79 * (x264 * x75 - x265 * x80))
        )
    )
    x269 = x256 * x61 - x258 * x94
    x270 = x256 * x59 - x258 * x93
    x271 = x256 * x56 - x258 * x91
    x272 = x256 * x57 - x258 * x92
    x273 = -x115 * x24 + x256 * x71
    x274 = x256 * x36 - x258 * x33
    x275 = -x118 * x24 + x256 * x48
    x276 = (
        -x262 * x80
        + x273 * x75
        + x84 * (-x266 * x80 + x275 * x75 + x79 * (-x264 * x80 + x274 * x75))
    )
    x277 = x13 * x276
    x278 = x14 * x276
    x279 = -x137 * x24 + x143 * x256 + x262 * x79
    x280 = x136 * x256 - x155 * x24 + x263 * x79
    x281 = x127 * x256 - x145 * x24 + x264 * x79
    x282 = x132 * x256 - x156 * x24 + x265 * x79
    x283 = x131 * x256 - x147 * x24 + x266 * x79
    x284 = x134 * x256 - x158 * x24 + x267 * x79
    x285 = (
        x279 * x75
        - x280 * x80
        + x84 * (x283 * x75 - x284 * x80 + x79 * (x281 * x75 - x282 * x80))
    )
    x286 = x278 + x285
    x287 = -x166 * x24 + x167 * x256 + x261 * x79
    x288 = x154 * x256 - x173 * x258 + x270 * x79
    x289 = x150 * x256 - x171 * x258 + x271 * x79
    x290 = x152 * x256 - x172 * x258 + x272 * x79
    x291 = x165 * x256 - x179 * x258 + x269 * x79
    x292 = (
        x287 * x75
        - x291 * x80
        + x86
        * (
            x280 * x75
            - x288 * x80
            + x84 * (x284 * x75 - x290 * x80 + x79 * (x282 * x75 - x289 * x80))
        )
    )
    x293 = -x190 * x24 + x195 * x256 + x280 * x84
    x294 = x181 * x256 - x197 * x24 + x282 * x84
    x295 = x186 * x256 - x203 * x258 + x289 * x84
    x296 = x185 * x256 - x199 * x24 + x284 * x84
    x297 = x188 * x256 - x205 * x258 + x290 * x84
    x298 = x189 * x256 - x208 * x258 + x288 * x84
    x299 = (
        x293 * x75
        - x298 * x80
        + x84 * (x296 * x75 - x297 * x80 + x79 * (x294 * x75 - x295 * x80))
    )
    x300 = x14 * x285 + x299
    x301 = x15 * x285
    x302 = x129 * x256 - x214 * x24 + x274 * x79
    x303 = x141 * x256 - x212 * x24 + x275 * x79
    x304 = -x283 * x80 + x303 * x75 + x79 * (-x281 * x80 + x302 * x75)
    x305 = x13 * x304
    x306 = x14 * x304
    x307 = x183 * x256 - x222 * x24 + x281 * x84
    x308 = x194 * x256 - x220 * x24 + x283 * x84
    x309 = -x296 * x80 + x308 * x75 + x79 * (-x294 * x80 + x307 * x75)
    x310 = x306 + x309
    x311 = x227 * x256 - x234 * x24 + x294 * x86
    x312 = x228 * x256 - x237 * x258 + x295 * x86
    x313 = -x230 * x24 + x232 * x256 + x296 * x86
    x314 = x229 * x256 - x239 * x258 + x297 * x86
    x315 = x14 * x309 + x313 * x75 - x314 * x80 + x79 * (x311 * x75 - x312 * x80)
    x316 = x15 * x309
    x317 = x192 * x256 - x24 * x242 + x302 * x84
    x318 = -x307 * x80 + x317 * x75
    x319 = x13 * x318
    x320 = x14 * x318
    x321 = x231 * x256 - x24 * x247 + x307 * x86
    x322 = -x311 * x80 + x321 * x75
    x323 = x320 + x322
    x324 = -x24 * x252 + x253 * x256 + x311 * x88
    x325 = x251 * x256 - x255 * x258 + x312 * x88
    x326 = -x25 - A[2]
    x327 = -x26 * x64 + x326 * x73
    x328 = x26 * x63
    x329 = x326 * x62 - x328 * x95
    x330 = -x100 * x26 + x326 * x72
    x331 = -x26 * x76 + x326 * x53
    x332 = -x102 * x26 + x326 * x50
    x333 = x332 * x75
    x334 = -x26 * x77 + x326 * x43
    x335 = x334 * x80
    x336 = x326 * x33 - x328 * x40
    x337 = x336 * x75
    x338 = x326 * x40 - x328 * x56
    x339 = x338 * x80
    x340 = -x104 * x26 + x326 * x38
    x341 = x340 * x75
    x342 = -x26 * x82 + x326 * x41
    x343 = x342 * x80
    x344 = (
        x330 * x75
        - x331 * x80
        + x86 * (x333 - x335 + x84 * (x341 - x343 + x79 * (x337 - x339)))
    )
    x345 = x331 * x75
    x346 = x326 * x61 - x328 * x94
    x347 = x346 * x80
    x348 = x334 * x75
    x349 = x326 * x59 - x328 * x93
    x350 = x349 * x80
    x351 = x338 * x75
    x352 = x326 * x56 - x328 * x91
    x353 = x352 * x80
    x354 = x342 * x75
    x355 = x326 * x57 - x328 * x92
    x356 = x355 * x80
    x357 = -x115 * x26 + x326 * x71
    x358 = x326 * x36 - x328 * x33
    x359 = x358 * x75
    x360 = x336 * x80
    x361 = -x118 * x26 + x326 * x48
    x362 = x361 * x75
    x363 = x340 * x80
    x364 = -x332 * x80 + x357 * x75 + x84 * (x362 - x363 + x79 * (x359 - x360))
    x365 = -x137 * x26 + x143 * x326
    x366 = x136 * x326 - x155 * x26
    x367 = x131 * x326 - x147 * x26
    x368 = x367 * x75
    x369 = x127 * x326 - x145 * x26
    x370 = x369 * x75
    x371 = x132 * x326 - x156 * x26
    x372 = x371 * x80
    x373 = x134 * x326 - x158 * x26
    x374 = x373 * x80
    x375 = x365 * x75 - x366 * x80 + x84 * (x368 - x374 + x79 * (x370 - x372))
    x376 = x14 * x364 + x375
    x377 = -x166 * x26 + x167 * x326
    x378 = x366 * x75
    x379 = x154 * x326 - x173 * x328
    x380 = x379 * x80
    x381 = x373 * x75
    x382 = x371 * x75
    x383 = x150 * x326 - x171 * x328
    x384 = x383 * x80
    x385 = x152 * x326 - x172 * x328
    x386 = x385 * x80
    x387 = x165 * x326 - x179 * x328
    x388 = (
        x377 * x75
        - x387 * x80
        + x86 * (x378 - x380 + x84 * (x381 - x386 + x79 * (x382 - x384)))
    )
    x389 = (
        x333 * x79
        - x335 * x79
        + x84 * (x341 * x79 - x343 * x79 + x79 * (x337 * x79 - x339 * x79))
    )
    x390 = x15 * x364 + x389
    x391 = (
        x345 * x79
        - x347 * x79
        + x86
        * (
            x348 * x79
            - x350 * x79
            + x84 * (x354 * x79 - x356 * x79 + x79 * (x351 * x79 - x353 * x79))
        )
    )
    x392 = -x190 * x26 + x195 * x326
    x393 = x185 * x326 - x199 * x26
    x394 = x393 * x75
    x395 = x181 * x326 - x197 * x26
    x396 = x395 * x75
    x397 = x186 * x326 - x203 * x328
    x398 = x397 * x80
    x399 = x188 * x326 - x205 * x328
    x400 = x399 * x80
    x401 = x189 * x326 - x208 * x328
    x402 = x392 * x75 - x401 * x80 + x84 * (x394 - x400 + x79 * (x396 - x398))
    x403 = x14 * x375 + x402
    x404 = (
        x378 * x79
        - x380 * x79
        + x84 * (x381 * x79 - x386 * x79 + x79 * (x382 * x79 - x384 * x79))
    )
    x405 = x15 * x375 + x404
    x406 = 2 / x78**2
    x407 = (
        x348 * x406
        - x350 * x406
        + x84 * (x354 * x406 - x356 * x406 + x79 * (x351 * x406 - x353 * x406))
    )
    x408 = x15 * x389 + x407
    x409 = x141 * x326 - x212 * x26
    x410 = x129 * x326 - x214 * x26
    x411 = x410 * x75
    x412 = x369 * x80
    x413 = -x367 * x80 + x409 * x75 + x79 * (x411 - x412)
    x414 = x194 * x326 - x220 * x26
    x415 = x183 * x326 - x222 * x26
    x416 = x415 * x75
    x417 = x395 * x80
    x418 = -x393 * x80 + x414 * x75 + x79 * (x416 - x417)
    x419 = x14 * x413 + x418
    x420 = x368 * x79 - x374 * x79 + x79 * (x370 * x79 - x372 * x79)
    x421 = x15 * x413 + x420
    x422 = x227 * x326 - x234 * x26
    x423 = x422 * x75
    x424 = x228 * x326 - x237 * x328
    x425 = x424 * x80
    x426 = -x230 * x26 + x232 * x326
    x427 = x229 * x326 - x239 * x328
    x428 = x14 * x418 + x426 * x75 - x427 * x80 + x79 * (x423 - x425)
    x429 = x394 * x79 - x400 * x79 + x79 * (x396 * x79 - x398 * x79)
    x430 = x15 * x418 + x429
    x431 = x381 * x406 - x386 * x406 + x79 * (x382 * x406 - x384 * x406)
    x432 = x15 * x420 + x431
    x433 = x362 * x79 - x363 * x79 + x79 * (x359 * x79 - x360 * x79)
    x434 = x14 * x433 + x420
    x435 = x341 * x406 - x343 * x406 + x79 * (x337 * x406 - x339 * x406)
    x436 = x15 * x433 + x435
    x437 = x14 * x420 + x429
    x438 = 6 / x78**3
    x439 = x15 * x435 + x354 * x438 - x356 * x438 + x79 * (x351 * x438 - x353 * x438)
    x440 = x192 * x326 - x242 * x26
    x441 = -x415 * x80 + x440 * x75
    x442 = x231 * x326 - x247 * x26
    x443 = -x422 * x80 + x442 * x75
    x444 = x14 * x441 + x443
    x445 = x416 * x79 - x417 * x79
    x446 = x15 * x441 + x445
    x447 = -x252 * x26 + x253 * x326
    x448 = x251 * x326 - x255 * x328
    x449 = x423 * x79 - x425 * x79
    x450 = x396 * x406 - x398 * x406
    x451 = x15 * x445 + x450
    x452 = x411 * x79 - x412 * x79
    x453 = x14 * x452 + x445
    x454 = x370 * x406 - x372 * x406
    x455 = x15 * x452 + x454
    x456 = x15 * x454 + x382 * x438 - x384 * x438
    x457 = x359 * x406 - x360 * x406
    x458 = x14 * x457 + x454
    x459 = x337 * x438 - x339 * x438
    x460 = x15 * x457 + x459
    x461 = 24 / x78**4
    x462 = x101 + x256 * x260 - x258 * x261
    x463 = x116 + x256 * x273 - x258 * x262
    x464 = x13 * x463
    x465 = x14 * x463
    x466 = x144 + x256 * x279 - x258 * x280 + x79 * (x107 + x256 * x262 - x258 * x263)
    x467 = x465 + x466
    x468 = x168 + x256 * x287 - x258 * x291 + x79 * (x111 + x256 * x261 - x258 * x269)
    x469 = (
        x196
        + x256 * x293
        - x258 * x298
        + x84
        * (x169 + x256 * x280 - x258 * x288 + x79 * (x112 + x256 * x263 - x258 * x270))
    )
    x470 = x14 * x466 + x469
    x471 = x15 * x466
    x472 = x213 + x256 * x303 - x258 * x283 + x79 * (x120 + x256 * x275 - x258 * x266)
    x473 = x13 * x472
    x474 = x14 * x472
    x475 = (
        x221
        + x256 * x308
        - x258 * x296
        + x84
        * (x161 + x256 * x283 - x258 * x284 + x79 * (x108 + x256 * x266 - x258 * x267))
    )
    x476 = x474 + x475
    x477 = (
        x14 * x475
        + x233
        + x256 * x313
        - x258 * x314
        + x86
        * (
            x201
            + x256 * x296
            - x258 * x297
            + x84
            * (
                x177
                + x256 * x284
                - x258 * x290
                + x79 * (x113 + x256 * x267 - x258 * x272)
            )
        )
    )
    x478 = x15 * x475
    x479 = (
        x243
        + x256 * x317
        - x258 * x307
        + x84
        * (x215 + x256 * x302 - x258 * x281 + x79 * (x121 + x256 * x274 - x258 * x264))
    )
    x480 = x13 * x479
    x481 = x14 * x479
    x482 = (
        x248
        + x256 * x321
        - x258 * x311
        + x86
        * (
            x223
            + x256 * x307
            - x258 * x294
            + x84
            * (
                x162
                + x256 * x281
                - x258 * x282
                + x79 * (x109 + x256 * x264 - x258 * x265)
            )
        )
    )
    x483 = x481 + x482
    x484 = x256 * x330 - x258 * x331
    x485 = x256 * x357 - x258 * x332
    x486 = x256 * x332
    x487 = x258 * x334
    x488 = x256 * x365 - x258 * x366 + x79 * (x486 - x487)
    x489 = x14 * x485 + x488
    x490 = x256 * x331
    x491 = x258 * x346
    x492 = x256 * x377 - x258 * x387 + x79 * (x490 - x491)
    x493 = x486 * x79 - x487 * x79
    x494 = x15 * x485 + x493
    x495 = x490 * x79 - x491 * x79
    x496 = x256 * x334
    x497 = x258 * x349
    x498 = x256 * x366
    x499 = x258 * x379
    x500 = x256 * x392 - x258 * x401 + x84 * (x498 - x499 + x79 * (x496 - x497))
    x501 = x14 * x488 + x500
    x502 = x498 * x79 - x499 * x79 + x79 * (x496 * x79 - x497 * x79)
    x503 = x15 * x488 + x502
    x504 = x406 * x496 - x406 * x497
    x505 = x15 * x493 + x504
    x506 = x256 * x361
    x507 = x258 * x340
    x508 = x256 * x409 - x258 * x367 + x79 * (x506 - x507)
    x509 = x256 * x367
    x510 = x256 * x340
    x511 = x258 * x342
    x512 = x258 * x373
    x513 = x256 * x414 - x258 * x393 + x84 * (x509 - x512 + x79 * (x510 - x511))
    x514 = x14 * x508 + x513
    x515 = x509 * x79 - x512 * x79 + x79 * (x510 * x79 - x511 * x79)
    x516 = x15 * x508 + x515
    x517 = x256 * x393
    x518 = x258 * x399
    x519 = x256 * x373
    x520 = x256 * x342
    x521 = x258 * x355
    x522 = x258 * x385
    x523 = (
        x14 * x513
        + x256 * x426
        - x258 * x427
        + x86 * (x517 - x518 + x84 * (x519 - x522 + x79 * (x520 - x521)))
    )
    x524 = (
        x517 * x79
        - x518 * x79
        + x84 * (x519 * x79 - x522 * x79 + x79 * (x520 * x79 - x521 * x79))
    )
    x525 = x15 * x513 + x524
    x526 = x406 * x519 - x406 * x522 + x79 * (x406 * x520 - x406 * x521)
    x527 = x15 * x515 + x526
    x528 = x506 * x79 - x507 * x79
    x529 = x14 * x528 + x515
    x530 = x406 * x510 - x406 * x511
    x531 = x15 * x528 + x530
    x532 = x14 * x515 + x524
    x533 = x15 * x530 + x438 * x520 - x438 * x521
    x534 = x256 * x358
    x535 = x258 * x336
    x536 = x256 * x410
    x537 = x258 * x369
    x538 = x256 * x440 - x258 * x415 + x84 * (x536 - x537 + x79 * (x534 - x535))
    x539 = x256 * x415
    x540 = x258 * x395
    x541 = x256 * x336
    x542 = x258 * x338
    x543 = x256 * x369
    x544 = x258 * x371
    x545 = (
        x256 * x442
        - x258 * x422
        + x86 * (x539 - x540 + x84 * (x543 - x544 + x79 * (x541 - x542)))
    )
    x546 = x14 * x538 + x545
    x547 = (
        x539 * x79
        - x540 * x79
        + x84 * (x543 * x79 - x544 * x79 + x79 * (x541 * x79 - x542 * x79))
    )
    x548 = x15 * x538 + x547
    x549 = x256 * x422
    x550 = x258 * x424
    x551 = x256 * x395
    x552 = x258 * x397
    x553 = x256 * x338
    x554 = x258 * x352
    x555 = x256 * x371
    x556 = x258 * x383
    x557 = (
        x549 * x79
        - x550 * x79
        + x86
        * (
            x551 * x79
            - x552 * x79
            + x84 * (x555 * x79 - x556 * x79 + x79 * (x553 * x79 - x554 * x79))
        )
    )
    x558 = (
        x406 * x551
        - x406 * x552
        + x84 * (x406 * x555 - x406 * x556 + x79 * (x406 * x553 - x406 * x554))
    )
    x559 = x15 * x547 + x558
    x560 = x536 * x79 - x537 * x79 + x79 * (x534 * x79 - x535 * x79)
    x561 = x14 * x560 + x547
    x562 = x406 * x543 - x406 * x544 + x79 * (x406 * x541 - x406 * x542)
    x563 = x15 * x560 + x562
    x564 = x15 * x562 + x438 * x555 - x438 * x556 + x79 * (x438 * x553 - x438 * x554)
    x565 = x406 * x534 - x406 * x535
    x566 = x14 * x565 + x562
    x567 = x438 * x541 - x438 * x542
    x568 = x15 * x565 + x567
    x569 = x101 + x326 * x330 - x328 * x331
    x570 = x116 + x326 * x357 - x328 * x332
    x571 = x144 + x326 * x365 - x328 * x366
    x572 = x14 * x570 + x571
    x573 = x168 + x326 * x377 - x328 * x387
    x574 = x326 * x332
    x575 = x328 * x334
    x576 = x574 * x79 - x575 * x79 + x79 * (x107 + x574 - x575)
    x577 = x15 * x570 + x576
    x578 = x326 * x331
    x579 = x328 * x346
    x580 = x578 * x79 - x579 * x79 + x79 * (x111 + x578 - x579)
    x581 = x196 + x326 * x392 - x328 * x401
    x582 = x14 * x571 + x581
    x583 = x326 * x366
    x584 = x328 * x379
    x585 = x583 * x79 - x584 * x79 + x79 * (x169 + x583 - x584)
    x586 = x15 * x571 + x585
    x587 = x326 * x334
    x588 = x328 * x349
    x589 = (
        x406 * x587
        - x406 * x588
        + x84 * (x587 * x79 - x588 * x79 + x79 * (x112 + x587 - x588))
    )
    x590 = x15 * x576 + x589
    x591 = x213 + x326 * x409 - x328 * x367
    x592 = x221 + x326 * x414 - x328 * x393
    x593 = x14 * x591 + x592
    x594 = x326 * x367
    x595 = x328 * x373
    x596 = x594 * x79 - x595 * x79 + x79 * (x161 + x594 - x595)
    x597 = x15 * x591 + x596
    x598 = x14 * x592 + x233 + x326 * x426 - x328 * x427
    x599 = x326 * x393
    x600 = x328 * x399
    x601 = x599 * x79 - x600 * x79 + x79 * (x201 + x599 - x600)
    x602 = x15 * x592 + x601
    x603 = x326 * x373
    x604 = x328 * x385
    x605 = (
        x406 * x603
        - x406 * x604
        + x84 * (x603 * x79 - x604 * x79 + x79 * (x177 + x603 - x604))
    )
    x606 = x15 * x596 + x605
    x607 = x326 * x361
    x608 = x328 * x340
    x609 = x607 * x79 - x608 * x79 + x79 * (x120 + x607 - x608)
    x610 = x14 * x609 + x596
    x611 = x326 * x340
    x612 = x328 * x342
    x613 = (
        x406 * x611
        - x406 * x612
        + x84 * (x611 * x79 - x612 * x79 + x79 * (x108 + x611 - x612))
    )
    x614 = x15 * x609 + x613
    x615 = x14 * x596 + x601
    x616 = x326 * x342
    x617 = x328 * x355
    x618 = (
        x15 * x613
        + x438 * x616
        - x438 * x617
        + x86
        * (
            x406 * x616
            - x406 * x617
            + x84 * (x616 * x79 - x617 * x79 + x79 * (x113 + x616 - x617))
        )
    )
    x619 = x243 + x326 * x440 - x328 * x415
    x620 = x248 + x326 * x442 - x328 * x422
    x621 = x14 * x619 + x620
    x622 = x326 * x415
    x623 = x328 * x395
    x624 = x622 * x79 - x623 * x79 + x79 * (x223 + x622 - x623)
    x625 = x15 * x619 + x624
    x626 = x326 * x422
    x627 = x328 * x424
    x628 = x626 * x79 - x627 * x79 + x79 * (x235 + x626 - x627)
    x629 = x326 * x395
    x630 = x328 * x397
    x631 = (
        x406 * x629
        - x406 * x630
        + x84 * (x629 * x79 - x630 * x79 + x79 * (x202 + x629 - x630))
    )
    x632 = x15 * x624 + x631
    x633 = x326 * x410
    x634 = x328 * x369
    x635 = x633 * x79 - x634 * x79 + x79 * (x215 + x633 - x634)
    x636 = x14 * x635 + x624
    x637 = x326 * x369
    x638 = x328 * x371
    x639 = (
        x406 * x637
        - x406 * x638
        + x84 * (x637 * x79 - x638 * x79 + x79 * (x162 + x637 - x638))
    )
    x640 = x15 * x635 + x639
    x641 = x326 * x371
    x642 = x328 * x383
    x643 = (
        x15 * x639
        + x438 * x641
        - x438 * x642
        + x86
        * (
            x406 * x641
            - x406 * x642
            + x84 * (x641 * x79 - x642 * x79 + x79 * (x178 + x641 - x642))
        )
    )
    x644 = x326 * x358
    x645 = x328 * x336
    x646 = (
        x406 * x644
        - x406 * x645
        + x84 * (x644 * x79 - x645 * x79 + x79 * (x121 + x644 - x645))
    )
    x647 = x14 * x646 + x639
    x648 = x326 * x336
    x649 = x328 * x338
    x650 = (
        x438 * x648
        - x438 * x649
        + x86
        * (
            x406 * x648
            - x406 * x649
            + x84 * (x648 * x79 - x649 * x79 + x79 * (x109 + x648 - x649))
        )
    )
    x651 = x15 * x646 + x650
    x652 = x326 * x338
    x653 = x328 * x352

    # 216 item(s)
    S = numpy.array(
        [
            x110 * x13
            + x13 * (x110 + x123)
            + x74
            + x75 * (-x21 * x64 + x73 * x75 + x87 * x88)
            - x80 * (x62 * x75 - x80 * x95 + x88 * x99)
            + x88
            * (
                x111
                + x75 * x87
                - x80 * x99
                + x86
                * (
                    x112
                    + x75 * x85
                    - x80 * x98
                    + x84
                    * (
                        x113
                        + x75 * x83
                        + x79 * (x114 + x75 * x81 - x80 * x96)
                        - x80 * x97
                    )
                )
            ),
            x110 * x14 + x13 * x164 + x180,
            x110 * x15 + x123 * x15,
            x14 * x164 + x210,
            x124 * x15 + x211,
            x122 * x16,
            x13 * x163 + x13 * (x163 + x218) + x180,
            x13 * x226 + x210,
            x15 * x218 + x211,
            x14 * x226 + x240,
            x15 * x219 + x241,
            x16 * x217,
            0,
            0,
            0,
            0,
            0,
            0,
            x13 * x225 + x13 * (x225 + x245) + x209,
            x13 * x250 + x240,
            x15 * x245 + x241,
            x14 * x249
            + x14 * x250
            + x254
            + x75 * (-x21 * x252 + x253 * x75)
            - x80 * (x251 * x75 - x255 * x80),
            x15 * x246 + x15 * x249,
            x16 * x244,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            x13 * x268
            + x13 * (x268 + x277)
            + x257 * x75
            - x259 * x80
            + x88
            * (
                x261 * x75
                - x269 * x80
                + x86
                * (
                    x263 * x75
                    - x270 * x80
                    + x84 * (x267 * x75 - x272 * x80 + x79 * (x265 * x75 - x271 * x80))
                )
            ),
            x13 * x286 + x14 * x268 + x292,
            x15 * x268 + x15 * x277,
            x14 * x286 + x300,
            x15 * x278 + x301,
            x16 * x276,
            x13 * x285 + x13 * (x285 + x305) + x292,
            x13 * x310 + x300,
            x15 * x305 + x301,
            x14 * x310 + x315,
            x15 * x306 + x316,
            x16 * x304,
            0,
            0,
            0,
            0,
            0,
            0,
            x13 * x309 + x13 * (x309 + x319) + x299,
            x13 * x323 + x315,
            x15 * x319 + x316,
            x14 * x322 + x14 * x323 + x324 * x75 - x325 * x80,
            x15 * x320 + x15 * x322,
            x16 * x318,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            x13 * x344
            + x13 * (x13 * x364 + x344)
            + x327 * x75
            - x329 * x80
            + x88
            * (
                x345
                - x347
                + x86 * (x348 - x350 + x84 * (x354 - x356 + x79 * (x351 - x353)))
            ),
            x13 * x376 + x14 * x344 + x388,
            x13 * x390 + x15 * x344 + x391,
            x14 * x376 + x403,
            x14 * x390 + x405,
            x15 * x390 + x408,
            x13 * x375 + x13 * (x13 * x413 + x375) + x388,
            x13 * x419 + x403,
            x13 * x421 + x405,
            x14 * x419 + x428,
            x14 * x421 + x430,
            x15 * x421 + x432,
            x13 * x389 + x13 * (x13 * x433 + x389) + x391,
            x13 * x434 + x14 * x389 + x404,
            x13 * x436 + x408,
            x14 * x434 + x437,
            x14 * x436 + x432,
            x15 * x436 + x439,
            x13 * x418 + x13 * (x13 * x441 + x418) + x402,
            x13 * x444 + x428,
            x13 * x446 + x430,
            x14 * x443 + x14 * x444 + x447 * x75 - x448 * x80,
            x14 * x446 + x15 * x443 + x449,
            x15 * x446 + x451,
            x13 * x420 + x13 * (x13 * x452 + x420) + x404,
            x13 * x453 + x437,
            x13 * x455 + x432,
            x14 * x445 + x14 * x453 + x449,
            x14 * x455 + x451,
            x15 * x455 + x456,
            x13 * x435 + x13 * (x13 * x457 + x435) + x407,
            x13 * x458 + x14 * x435 + x431,
            x13 * x460 + x439,
            x14 * x454 + x14 * x458 + x450,
            x14 * x460 + x456,
            x15 * x459 + x15 * x460 + x351 * x461 - x353 * x461,
            x13 * x462 + x13 * (x462 + x464) + x256 * x257 - x258 * x259 + x74,
            x13 * x467 + x14 * x462 + x468,
            x15 * x462 + x15 * x464,
            x14 * x467 + x470,
            x15 * x465 + x471,
            x16 * x463,
            x13 * x466 + x13 * (x466 + x473) + x468,
            x13 * x476 + x470,
            x15 * x473 + x471,
            x14 * x476 + x477,
            x15 * x474 + x478,
            x16 * x472,
            0,
            0,
            0,
            0,
            0,
            0,
            x13 * x475 + x13 * (x475 + x480) + x469,
            x13 * x483 + x477,
            x15 * x480 + x478,
            x14 * x482
            + x14 * x483
            + x254
            + x256 * x324
            - x258 * x325
            + x88
            * (
                x235
                + x256 * x311
                - x258 * x312
                + x86
                * (
                    x202
                    + x256 * x294
                    - x258 * x295
                    + x84
                    * (
                        x178
                        + x256 * x282
                        - x258 * x289
                        + x79 * (x114 + x256 * x265 - x258 * x271)
                    )
                )
            ),
            x15 * x481 + x15 * x482,
            x16 * x479,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            x13 * x484 + x13 * (x13 * x485 + x484) + x256 * x327 - x258 * x329,
            x13 * x489 + x14 * x484 + x492,
            x13 * x494 + x15 * x484 + x495,
            x14 * x489 + x501,
            x14 * x494 + x503,
            x15 * x494 + x505,
            x13 * x488 + x13 * (x13 * x508 + x488) + x492,
            x13 * x514 + x501,
            x13 * x516 + x503,
            x14 * x514 + x523,
            x14 * x516 + x525,
            x15 * x516 + x527,
            x13 * x493 + x13 * (x13 * x528 + x493) + x495,
            x13 * x529 + x14 * x493 + x502,
            x13 * x531 + x505,
            x14 * x529 + x532,
            x14 * x531 + x527,
            x15 * x531 + x533,
            x13 * x513 + x13 * (x13 * x538 + x513) + x500,
            x13 * x546 + x523,
            x13 * x548 + x525,
            x14 * x545
            + x14 * x546
            + x256 * x447
            - x258 * x448
            + x88
            * (
                x549
                - x550
                + x86 * (x551 - x552 + x84 * (x555 - x556 + x79 * (x553 - x554)))
            ),
            x14 * x548 + x15 * x545 + x557,
            x15 * x548 + x559,
            x13 * x515 + x13 * (x13 * x560 + x515) + x502,
            x13 * x561 + x532,
            x13 * x563 + x527,
            x14 * x547 + x14 * x561 + x557,
            x14 * x563 + x559,
            x15 * x563 + x564,
            x13 * x530 + x13 * (x13 * x565 + x530) + x504,
            x13 * x566 + x14 * x530 + x526,
            x13 * x568 + x533,
            x14 * x562 + x14 * x566 + x558,
            x14 * x568 + x564,
            x15 * x567 + x15 * x568 + x461 * x553 - x461 * x554,
            x13 * x569 + x13 * (x13 * x570 + x569) + x326 * x327 - x328 * x329 + x74,
            x13 * x572 + x14 * x569 + x573,
            x13 * x577 + x15 * x569 + x580,
            x14 * x572 + x582,
            x14 * x577 + x586,
            x15 * x577 + x590,
            x13 * x571 + x13 * (x13 * x591 + x571) + x573,
            x13 * x593 + x582,
            x13 * x597 + x586,
            x14 * x593 + x598,
            x14 * x597 + x602,
            x15 * x597 + x606,
            x13 * x576 + x13 * (x13 * x609 + x576) + x580,
            x13 * x610 + x14 * x576 + x585,
            x13 * x614 + x590,
            x14 * x610 + x615,
            x14 * x614 + x606,
            x15 * x614 + x618,
            x13 * x592 + x13 * (x13 * x619 + x592) + x581,
            x13 * x621 + x598,
            x13 * x625 + x602,
            x14 * x620 + x14 * x621 + x254 + x326 * x447 - x328 * x448,
            x14 * x625 + x15 * x620 + x628,
            x15 * x625 + x632,
            x13 * x596 + x13 * (x13 * x635 + x596) + x585,
            x13 * x636 + x615,
            x13 * x640 + x606,
            x14 * x624 + x14 * x636 + x628,
            x14 * x640 + x632,
            x15 * x640 + x643,
            x13 * x613 + x13 * (x13 * x646 + x613) + x589,
            x13 * x647 + x14 * x613 + x605,
            x13 * x651 + x618,
            x14 * x639 + x14 * x647 + x631,
            x14 * x651 + x643,
            x15 * x650
            + x15 * x651
            + x461 * x652
            - x461 * x653
            + x88
            * (
                x438 * x652
                - x438 * x653
                + x86
                * (
                    x406 * x652
                    - x406 * x653
                    + x84 * (x652 * x79 - x653 * x79 + x79 * (x114 + x652 - x653))
                )
            ),
        ]
    )
    return S


def eri_2100(a, A, b, B, c, C, d, D):
    """Cartesian [dp|ss] 2-electron electron repulsion integral.

    Generated code; DO NOT modify by hand!"""

    x0 = (2 * a + 2 * b) ** (-1.0)
    x1 = numpy.pi**2.5
    x2 = a + b
    x3 = x2 ** (-1.0)
    x4 = -x3 * (a * A[0] + b * B[0])
    x5 = -x4 - A[0]
    x6 = c + d
    x7 = x2 * x6
    x8 = x2 + x6
    x9 = (x7 + numpy.sqrt(x8)) ** (-1.0)
    x10 = A[0] - B[0]
    x11 = A[1] - B[1]
    x12 = A[2] - B[2]
    x13 = numpy.exp(-a * b * x3 * (x10**2 + x11**2 + x12**2))
    x14 = x6 ** (-1.0)
    x15 = numpy.exp(
        -c * d * x14 * ((C[0] - D[0]) ** 2 + (C[1] - D[1]) ** 2 + (C[2] - D[2]) ** 2)
    )
    x16 = x8 ** (-1.0)
    x17 = -x14 * (c * C[0] + d * D[0]) - x4
    x18 = -x3 * (a * A[1] + b * B[1])
    x19 = -x14 * (c * C[1] + d * D[1]) - x18
    x20 = -x3 * (a * A[2] + b * B[2])
    x21 = -x14 * (c * C[2] + d * D[2]) - x20
    x22 = x16 * x7 * (x17**2 + x19**2 + x21**2)
    x23 = boys(0, x22)
    x24 = x16 * x6
    x25 = x17 * x24
    x26 = boys(1, x22)
    x27 = 2 * x1 * x13 * x15 * x9
    x28 = x26 * x27
    x29 = x25 * x28
    x30 = x27 * boys(2, x22)
    x31 = -x25 * x30 + x28 * x5
    x32 = x24 * x31
    x33 = x0 * (2 * x1 * x13 * x15 * x23 * x9 - x24 * x28)
    x34 = x23 * x27
    x35 = -x17 * x32 + x33 + x5 * (-x29 + x34 * x5)
    x36 = x0 * (2 * x1 * x13 * x15 * x26 * x9 - x24 * x30)
    x37 = x27 * boys(3, x22)
    x38 = -x18 - A[1]
    x39 = x19 * x24
    x40 = x28 * x39
    x41 = x28 * x38 - x30 * x39
    x42 = x24 * x41
    x43 = x0 * (2 * x1 * x13 * x15 * x23 * x38 * x9 - x40 - x42)
    x44 = x34 * x38 - x40
    x45 = -x17 * x42 + x44 * x5
    x46 = x30 * x38 - x37 * x39
    x47 = -x25 * (-x25 * x46 + x41 * x5) + x43 + x45 * x5
    x48 = -x20 - A[2]
    x49 = x21 * x24
    x50 = x28 * x49
    x51 = x28 * x48 - x30 * x49
    x52 = x24 * x51
    x53 = x0 * (2 * x1 * x13 * x15 * x23 * x48 * x9 - x50 - x52)
    x54 = x34 * x48 - x50
    x55 = -x17 * x52 + x5 * x54
    x56 = x30 * x48 - x37 * x49
    x57 = -x25 * (-x25 * x56 + x5 * x51) + x5 * x55 + x53
    x58 = -x19 * x42 + x33 + x38 * x44
    x59 = x36 + x38 * x41 - x39 * x46
    x60 = -x25 * x59 + x5 * x58
    x61 = -x19 * x52 + x38 * x54
    x62 = x38 * x51 - x39 * x56
    x63 = -x25 * x62 + x5 * x61
    x64 = -x21 * x52 + x33 + x48 * x54
    x65 = x36 + x48 * x51 - x49 * x56
    x66 = -x25 * x65 + x5 * x64
    x67 = x38 * x61 - x39 * x62 + x53
    x68 = x38 * x64 - x39 * x65

    # 18 item(s)
    S = numpy.array(
        [
            2 * x0 * (2 * x1 * x13 * x15 * x23 * x5 * x9 - x29 - x32)
            + x10 * x35
            - x25 * (-x25 * (-x25 * x37 + x30 * x5) + x31 * x5 + x36)
            + x35 * x5,
            x11 * x35 + x47,
            x12 * x35 + x57,
            x10 * x45 + x47,
            x11 * x45 + x60,
            x12 * x45 + x63,
            x10 * x55 + x57,
            x11 * x55 + x63,
            x12 * x55 + x66,
            x10 * x58 + x60,
            x11 * x58 + x38 * x58 - x39 * x59 + 2 * x43,
            x12 * x58 + x67,
            x10 * x61 + x63,
            x11 * x61 + x67,
            x12 * x61 + x68,
            x10 * x64 + x66,
            x11 * x64 + x68,
            x12 * x64 + x48 * x64 - x49 * x65 + 2 * x53,
        ]
    )
    return S


def eri_2101(a, A, b, B, c, C, d, D):
    """Cartesian [dp|sp] 2-electron electron repulsion integral.

    Generated code; DO NOT modify by hand!"""

    x0 = 2 * a + 2 * b
    x1 = (2 * c + 2 * d + x0) ** (-1.0)
    x2 = a + b
    x3 = x2 ** (-1.0)
    x4 = -x3 * (a * A[0] + b * B[0])
    x5 = -x4 - A[0]
    x6 = c + d
    x7 = x2 + x6
    x8 = x7 ** (-1.0)
    x9 = x6 ** (-1.0)
    x10 = x9 * (c * C[0] + d * D[0])
    x11 = -x10 - x4
    x12 = x9 * (c * C[1] + d * D[1])
    x13 = -x3 * (a * A[1] + b * B[1])
    x14 = -x12 - x13
    x15 = -x3 * (a * A[2] + b * B[2])
    x16 = -x15 - x9 * (c * C[2] + d * D[2])
    x17 = x2 * x6
    x18 = x17 * x8 * (x11**2 + x14**2 + x16**2)
    x19 = boys(2, x18)
    x20 = numpy.pi**2.5
    x21 = (x17 + numpy.sqrt(x7)) ** (-1.0)
    x22 = A[0] - B[0]
    x23 = A[1] - B[1]
    x24 = A[2] - B[2]
    x25 = numpy.exp(-a * b * x3 * (x22**2 + x23**2 + x24**2))
    x26 = C[0] - D[0]
    x27 = C[1] - D[1]
    x28 = C[2] - D[2]
    x29 = numpy.exp(-c * d * x9 * (x26**2 + x27**2 + x28**2))
    x30 = 2 * x20 * x21 * x25 * x29
    x31 = x19 * x30
    x32 = x6 * x8
    x33 = x11 * x32
    x34 = x30 * boys(3, x18)
    x35 = x31 * x5 - x33 * x34
    x36 = x10 - C[0]
    x37 = boys(1, x18)
    x38 = x30 * x37
    x39 = x2 * x8
    x40 = x11 * x39
    x41 = x31 * x40 + x36 * x38
    x42 = x31 * x36 + x34 * x40
    x43 = x32 * x42
    x44 = x1 * x35 - x11 * x43 + x41 * x5
    x45 = x32 * x44
    x46 = x31 * x33
    x47 = x38 * x5 - x46
    x48 = boys(0, x18)
    x49 = x30 * x48
    x50 = x36 * x49 + x38 * x40
    x51 = x32 * x41
    x52 = x1 * x47 - x11 * x51 + x5 * x50
    x53 = x0 ** (-1.0)
    x54 = 2 * x53
    x55 = x33 * x38
    x56 = x32 * x47
    x57 = x53 * (2 * x20 * x21 * x25 * x29 * x48 - x32 * x38)
    x58 = -x11 * x56 + x5 * (x49 * x5 - x55) + x57
    x59 = x53 * (2 * x20 * x21 * x25 * x29 * x37 - x31 * x32)
    x60 = x32 * x35
    x61 = -x11 * x60 + x47 * x5 + x59
    x62 = -x33 * x61 + x5 * x58 + x54 * (2 * x20 * x21 * x25 * x29 * x48 * x5 - x55 - x56)
    x63 = x53 * (2 * x19 * x20 * x21 * x25 * x29 - x32 * x34)
    x64 = x30 * boys(4, x18)
    x65 = -x33 * x64 + x34 * x5
    x66 = -x33 * x65 + x35 * x5 + x63
    x67 = x53 * (x50 - x51)
    x68 = x1 * x61 - x11 * x45 + x5 * x52 + x67
    x69 = x53 * (x41 - x43)
    x70 = x34 * x36 + x40 * x64
    x71 = x26 * x58 + x68
    x72 = x12 - C[1]
    x73 = x14 * x39
    x74 = x38 * x73 + x49 * x72
    x75 = x31 * x73 + x38 * x72
    x76 = x32 * x75
    x77 = x11 * x76
    x78 = x31 * x72 + x34 * x73
    x79 = x32 * x78
    x80 = -x11 * x79 + x5 * x75
    x81 = x32 * x80
    x82 = x53 * (x74 - x76)
    x83 = -x11 * x81 + x5 * (x5 * x74 - x77) + x82
    x84 = x53 * (x75 - x79)
    x85 = x34 * x72 + x64 * x73
    x86 = x27 * x58 + x83
    x87 = x28 * x58
    x88 = -x13 - A[1]
    x89 = x14 * x51
    x90 = -x14 * x43 + x41 * x88
    x91 = x32 * x90
    x92 = x53 * (x50 * x88 - x89 - x91)
    x93 = x14 * x32
    x94 = x31 * x93
    x95 = x31 * x88 - x34 * x93
    x96 = x32 * x95
    x97 = x53 * (2 * x20 * x21 * x25 * x29 * x37 * x88 - x94 - x96)
    x98 = x38 * x88 - x94
    x99 = -x11 * x96 + x5 * x98
    x100 = x34 * x88 - x64 * x93
    x101 = -x100 * x33 + x5 * x95
    x102 = x38 * x93
    x103 = x32 * x98
    x104 = x53 * (-x102 - x103 + 2 * x20 * x21 * x25 * x29 * x48 * x88)
    x105 = -x102 + x49 * x88
    x106 = -x103 * x11 + x105 * x5
    x107 = x104 + x106 * x5 - x33 * x99
    x108 = x50 * x88 - x89
    x109 = x1 * x99 + x108 * x5 - x11 * x91
    x110 = x42 * x88 - x70 * x93
    x111 = (
        x1 * (-x101 * x33 + x5 * x99 + x97)
        + x107 * x26
        + x109 * x5
        - x33 * (x1 * x101 - x110 * x33 + x5 * x90)
        + x92
    )
    x112 = x1 * x95 - x14 * x79 + x75 * x88
    x113 = x112 * x32
    x114 = x1 * x98 - x14 * x76 + x74 * x88
    x115 = x53 * (-x113 + x114)
    x116 = -x11 * x113 + x114 * x5
    x117 = x1 * x100 + x78 * x88 - x85 * x93
    x118 = x107 * x27 + x115 + x116 * x5 - x33 * (x112 * x5 - x117 * x33)
    x119 = x107 * x28
    x120 = -x15 - A[2]
    x121 = x16 * x51
    x122 = x120 * x41 - x16 * x43
    x123 = x122 * x32
    x124 = x53 * (x120 * x50 - x121 - x123)
    x125 = x16 * x32
    x126 = x125 * x31
    x127 = x120 * x31 - x125 * x34
    x128 = x127 * x32
    x129 = x53 * (2 * x120 * x20 * x21 * x25 * x29 * x37 - x126 - x128)
    x130 = x120 * x38 - x126
    x131 = x130 * x5
    x132 = x11 * x128
    x133 = x131 - x132
    x134 = x127 * x5
    x135 = x120 * x34 - x125 * x64
    x136 = x135 * x33
    x137 = x134 - x136
    x138 = x125 * x38
    x139 = x130 * x32
    x140 = x53 * (2 * x120 * x20 * x21 * x25 * x29 * x48 - x138 - x139)
    x141 = x120 * x49 - x138
    x142 = -x11 * x139 + x141 * x5
    x143 = -x133 * x33 + x140 + x142 * x5
    x144 = x120 * x50 - x121
    x145 = x1 * x133 - x11 * x123 + x144 * x5
    x146 = x120 * x42 - x125 * x70
    x147 = (
        x1 * (x129 + x133 * x5 - x137 * x33)
        + x124
        + x143 * x26
        + x145 * x5
        - x33 * (x1 * x137 + x122 * x5 - x146 * x33)
    )
    x148 = x16 * x76
    x149 = x120 * x75 - x16 * x79
    x150 = x149 * x32
    x151 = x53 * (x120 * x74 - x148 - x150)
    x152 = x120 * x74 - x148
    x153 = -x11 * x150 + x152 * x5
    x154 = x120 * x78 - x125 * x85
    x155 = x143 * x27 + x151 + x153 * x5 - x33 * (x149 * x5 - x154 * x33)
    x156 = x1 * x128
    x157 = x53 * (x1 * x130 - x156)
    x158 = x1 * x131 - x1 * x132
    x159 = x143 * x28 + x157 + x158 * x5 - x33 * (x1 * x134 - x1 * x136)
    x160 = x106 * x26 + x109
    x161 = x106 * x27 + x116
    x162 = x106 * x28
    x163 = -x14 * x96 + x59 + x88 * x98
    x164 = -x100 * x93 + x63 + x88 * x95
    x165 = -x103 * x14 + x105 * x88 + x57
    x166 = -x163 * x33 + x165 * x5
    x167 = x108 * x88 - x14 * x91 + x67
    x168 = -x110 * x93 + x69 + x88 * x90
    x169 = x1 * (x163 * x5 - x164 * x33) + x166 * x26 + x167 * x5 - x168 * x33
    x170 = x1 * x163 - x113 * x14 + x114 * x88 + x82
    x171 = x1 * x164 + x112 * x88 - x117 * x93 + x84
    x172 = x166 * x27 + x170 * x5 - x171 * x33
    x173 = x166 * x28
    x174 = -x128 * x14 + x130 * x88
    x175 = x127 * x88
    x176 = x135 * x93
    x177 = x175 - x176
    x178 = -x139 * x14 + x141 * x88
    x179 = -x174 * x33 + x178 * x5
    x180 = -x123 * x14 + x144 * x88
    x181 = x122 * x88 - x146 * x93
    x182 = x1 * (x174 * x5 - x177 * x33) + x179 * x26 + x180 * x5 - x181 * x33
    x183 = x1 * x174 - x14 * x150 + x152 * x88
    x184 = x1 * x177 + x149 * x88 - x154 * x93
    x185 = x179 * x27 + x183 * x5 - x184 * x33
    x186 = x1 * x130
    x187 = -x14 * x156 + x186 * x88
    x188 = x1 * x175 - x1 * x176
    x189 = x179 * x28 + x187 * x5 - x188 * x33
    x190 = x142 * x26 + x145
    x191 = x142 * x27 + x153
    x192 = x142 * x28 + x158
    x193 = x120 * x130 - x128 * x16 + x59
    x194 = x120 * x127
    x195 = x125 * x135
    x196 = x194 - x195 + x63
    x197 = x120 * x141 - x139 * x16 + x57
    x198 = -x193 * x33 + x197 * x5
    x199 = x120 * x144 - x123 * x16 + x67
    x200 = x120 * x122 - x125 * x146 + x69
    x201 = x1 * (x193 * x5 - x196 * x33) + x198 * x26 + x199 * x5 - x200 * x33
    x202 = x120 * x152 - x150 * x16 + x82
    x203 = x120 * x149 - x125 * x154 + x84
    x204 = x198 * x27 + x202 * x5 - x203 * x33
    x205 = x1 * x193 + x120 * x186 - x156 * x16
    x206 = x1 * x194 - x1 * x195 + x1 * x196
    x207 = x198 * x28 + x205 * x5 - x206 * x33
    x208 = x165 * x26 + x167
    x209 = x165 * x27 + x170
    x210 = x165 * x28
    x211 = 2 * x104 - x163 * x93 + x165 * x88
    x212 = x140 - x174 * x93 + x178 * x88
    x213 = x124 + x180 * x88 - x181 * x93 + x212 * x26
    x214 = (
        x1 * (x129 + x174 * x88 - x177 * x93)
        + x151
        + x183 * x88
        - x184 * x93
        + x212 * x27
    )
    x215 = x157 + x187 * x88 - x188 * x93 + x212 * x28
    x216 = x178 * x26 + x180
    x217 = x178 * x27 + x183
    x218 = x178 * x28 + x187
    x219 = -x193 * x93 + x197 * x88
    x220 = x199 * x88 - x200 * x93 + x219 * x26
    x221 = x1 * (x193 * x88 - x196 * x93) + x202 * x88 - x203 * x93 + x219 * x27
    x222 = x205 * x88 - x206 * x93 + x219 * x28
    x223 = x197 * x26 + x199
    x224 = x197 * x27 + x202
    x225 = x197 * x28 + x205
    x226 = x120 * x197 - x125 * x193 + 2 * x140

    # 54 item(s)
    S = numpy.array(
        [
            x1
            * (
                -x33 * x66
                + x5 * x61
                + x54 * (2 * x20 * x21 * x25 * x29 * x37 * x5 - x46 - x60)
            )
            + x22 * x71
            + x26 * x62
            - x33 * (x1 * x66 - x33 * (x1 * x65 - x33 * x70 + x42 * x5) + x44 * x5 + x69)
            + x5 * x68
            + x54 * (-x45 + x52),
            x22 * x86
            + x27 * x62
            - x33 * (-x33 * (-x33 * x85 + x5 * x78) + x5 * x80 + x84)
            + x5 * x83
            + x54 * (x5 * x74 - x77 - x81),
            x22 * x87 + x28 * x62,
            x111 + x23 * x71,
            x118 + x23 * x86,
            x119 + x23 * x87,
            x147 + x24 * x71,
            x155 + x24 * x86,
            x159 + x24 * x87,
            x111 + x160 * x22,
            x118 + x161 * x22,
            x119 + x162 * x22,
            x160 * x23 + x169,
            x161 * x23 + x172,
            x162 * x23 + x173,
            x160 * x24 + x182,
            x161 * x24 + x185,
            x162 * x24 + x189,
            x147 + x190 * x22,
            x155 + x191 * x22,
            x159 + x192 * x22,
            x182 + x190 * x23,
            x185 + x191 * x23,
            x189 + x192 * x23,
            x190 * x24 + x201,
            x191 * x24 + x204,
            x192 * x24 + x207,
            x169 + x208 * x22,
            x172 + x209 * x22,
            x173 + x210 * x22,
            x167 * x88 - x168 * x93 + x208 * x23 + x211 * x26 + 2 * x92,
            x1 * (x163 * x88 - x164 * x93 + 2 * x97)
            + 2 * x115
            + x170 * x88
            - x171 * x93
            + x209 * x23
            + x211 * x27,
            x210 * x23 + x211 * x28,
            x208 * x24 + x213,
            x209 * x24 + x214,
            x210 * x24 + x215,
            x182 + x216 * x22,
            x185 + x217 * x22,
            x189 + x218 * x22,
            x213 + x216 * x23,
            x214 + x217 * x23,
            x215 + x218 * x23,
            x216 * x24 + x220,
            x217 * x24 + x221,
            x218 * x24 + x222,
            x201 + x22 * x223,
            x204 + x22 * x224,
            x207 + x22 * x225,
            x220 + x223 * x23,
            x221 + x224 * x23,
            x222 + x225 * x23,
            x120 * x199 + 2 * x124 - x125 * x200 + x223 * x24 + x226 * x26,
            x120 * x202 - x125 * x203 + 2 * x151 + x224 * x24 + x226 * x27,
            x1 * (x120 * x193 - x125 * x196 + 2 * x129)
            + x120 * x205
            - x125 * x206
            + 2 * x157
            + x225 * x24
            + x226 * x28,
        ]
    )
    return S


def eri_2102(a, A, b, B, c, C, d, D):
    """Cartesian [dp|sd] 2-electron electron repulsion integral.

    Generated code; DO NOT modify by hand!"""

    x0 = a + b
    x1 = x0 ** (-1.0)
    x2 = -x1 * (a * A[0] + b * B[0])
    x3 = -x2 - A[0]
    x4 = 2 * c + 2 * d
    x5 = x4 ** (-1.0)
    x6 = numpy.pi**2.5
    x7 = c + d
    x8 = x0 * x7
    x9 = x0 + x7
    x10 = (x8 + numpy.sqrt(x9)) ** (-1.0)
    x11 = A[0] - B[0]
    x12 = A[1] - B[1]
    x13 = A[2] - B[2]
    x14 = numpy.exp(-a * b * x1 * (x11**2 + x12**2 + x13**2))
    x15 = x7 ** (-1.0)
    x16 = C[0] - D[0]
    x17 = C[1] - D[1]
    x18 = C[2] - D[2]
    x19 = x18**2
    x20 = numpy.exp(-c * d * x15 * (x16**2 + x17**2 + x19))
    x21 = x9 ** (-1.0)
    x22 = x15 * (c * C[0] + d * D[0])
    x23 = -x2 - x22
    x24 = x15 * (c * C[1] + d * D[1])
    x25 = -x1 * (a * A[1] + b * B[1])
    x26 = -x24 - x25
    x27 = -x1 * (a * A[2] + b * B[2])
    x28 = -x15 * (c * C[2] + d * D[2]) - x27
    x29 = x21 * x8 * (x23**2 + x26**2 + x28**2)
    x30 = boys(1, x29)
    x31 = -2 * x10 * x14 * x20 * x30 * x6
    x32 = x0 * x21
    x33 = boys(2, x29)
    x34 = 2 * x10 * x14 * x20 * x6
    x35 = x33 * x34
    x36 = x5 * (-x31 - x32 * x35)
    x37 = x22 - C[0]
    x38 = x30 * x34
    x39 = x23 * x32
    x40 = x35 * x39 + x37 * x38
    x41 = boys(3, x29)
    x42 = x34 * x41
    x43 = x35 * x37 + x39 * x42
    x44 = x36 + x37 * x40 + x39 * x43
    x45 = -2 * x10 * x14 * x20 * x33 * x6
    x46 = x5 * (-x32 * x42 - x45)
    x47 = x34 * boys(4, x29)
    x48 = x37 * x42 + x39 * x47
    x49 = x37 * x43 + x39 * x48 + x46
    x50 = x21 * x7
    x51 = x49 * x50
    x52 = 2 * a + 2 * b
    x53 = x4 + x52
    x54 = x53 ** (-1.0)
    x55 = x23 * x50
    x56 = x3 * x42 - x47 * x55
    x57 = x48 * x50
    x58 = -x23 * x57 + x3 * x43 + x54 * x56
    x59 = 2 * x54
    x60 = -x23 * x51 + x3 * x44 + x58 * x59
    x61 = x50 * x60
    x62 = boys(0, x29)
    x63 = -2 * x10 * x14 * x20 * x6 * x62
    x64 = x5 * (-x32 * x38 - x63)
    x65 = x34 * x62
    x66 = x37 * x65 + x38 * x39
    x67 = x37 * x66 + x39 * x40 + x64
    x68 = x44 * x50
    x69 = x42 * x55
    x70 = x3 * x35 - x69
    x71 = x43 * x50
    x72 = -x23 * x71 + x3 * x40 + x54 * x70
    x73 = -x23 * x68 + x3 * x67 + x59 * x72
    x74 = x52 ** (-1.0)
    x75 = 2 * x74
    x76 = x74 * (x67 - x68)
    x77 = x74 * (x40 - x71)
    x78 = x74 * (-x42 * x50 - x45)
    x79 = x50 * x56
    x80 = -x23 * x79 + x3 * x70 + x78
    x81 = x50 * x58
    x82 = -x23 * x81 + x3 * x72 + x54 * x80 + x77
    x83 = -x23 * x61 + x3 * x73 + x59 * x82 + x76
    x84 = x74 * (x44 - x51)
    x85 = -2 * x10 * x14 * x20 * x41 * x6
    x86 = x5 * (-x32 * x47 - x85)
    x87 = x34 * boys(5, x29)
    x88 = x37 * x47 + x39 * x87
    x89 = x37 * x48 + x39 * x88 + x86
    x90 = x3 * x47 - x55 * x87
    x91 = x3 * x48 + x54 * x90 - x55 * x88
    x92 = x74 * (x43 - x57)
    x93 = x74 * (-x47 * x50 - x85)
    x94 = x3 * x56 - x55 * x90 + x93
    x95 = x3 * x58 + x54 * x94 - x55 * x91 + x92
    x96 = x50 * x72
    x97 = x35 * x55
    x98 = x3 * x38 - x97
    x99 = x40 * x50
    x100 = -x23 * x99 + x3 * x66 + x54 * x98
    x101 = x50 * x70
    x102 = x74 * (-x31 - x35 * x50)
    x103 = -x101 * x23 + x102 + x3 * x98
    x104 = x74 * (x66 - x99)
    x105 = x100 * x3 + x103 * x54 + x104 - x23 * x96
    x106 = (
        x105 * x3
        + x54
        * (
            x103 * x3
            - x55 * x80
            + x75 * (2 * x10 * x14 * x20 * x3 * x30 * x6 - x101 - x97)
        )
        - x55 * x82
        + x75 * (x100 - x96)
    )
    x107 = x38 * x55
    x108 = x50 * x98
    x109 = x74 * (-x38 * x50 - x63)
    x110 = -x108 * x23 + x109 + x3 * (-x107 + x3 * x65)
    x111 = (
        -x103 * x55
        + x110 * x3
        + x75 * (2 * x10 * x14 * x20 * x3 * x6 * x62 - x107 - x108)
    )
    x112 = x111 * x16
    x113 = x110 * x16
    x114 = x105 * x16 + x16 * (x105 + x113) + x83
    x115 = x24 - C[1]
    x116 = x26 * x32
    x117 = x115 * x35 + x116 * x42
    x118 = x115 * x42 + x116 * x47
    x119 = x118 * x50
    x120 = x117 * x3 - x119 * x23
    x121 = x115 * x38 + x116 * x35
    x122 = x117 * x39 + x121 * x37
    x123 = x117 * x37 + x118 * x39
    x124 = x123 * x50
    x125 = x120 * x54 + x122 * x3 - x124 * x23
    x126 = x125 * x50
    x127 = x117 * x50
    x128 = x127 * x23
    x129 = x121 * x3 - x128
    x130 = x115 * x65 + x116 * x38
    x131 = x121 * x39 + x130 * x37
    x132 = x122 * x50
    x133 = x129 * x54 + x131 * x3 - x132 * x23
    x134 = x120 * x50
    x135 = x74 * (x121 - x127)
    x136 = x129 * x3 - x134 * x23 + x135
    x137 = x74 * (x117 - x119)
    x138 = x115 * x47 + x116 * x87
    x139 = x118 * x3 - x138 * x55
    x140 = x120 * x3 + x137 - x139 * x55
    x141 = x74 * (x131 - x132)
    x142 = -x126 * x23 + x133 * x3 + x136 * x54 + x141
    x143 = x74 * (x122 - x124)
    x144 = x118 * x37 + x138 * x39
    x145 = x111 * x17
    x146 = x121 * x50
    x147 = x146 * x23
    x148 = x129 * x50
    x149 = x74 * (x130 - x146)
    x150 = -x148 * x23 + x149 + x3 * (x130 * x3 - x147)
    x151 = -x136 * x55 + x150 * x3 + x75 * (x130 * x3 - x147 - x148)
    x152 = x145 + x151
    x153 = x110 * x17
    x154 = x150 + x153
    x155 = x105 * x17 + x142 + x154 * x16
    x156 = x105 * x18 + x113 * x18
    x157 = x115 * x130 + x116 * x121 + x64
    x158 = x115 * x121 + x116 * x117 + x36
    x159 = x158 * x50
    x160 = x159 * x23
    x161 = x115 * x117 + x116 * x118 + x46
    x162 = x161 * x50
    x163 = x158 * x3 - x162 * x23
    x164 = x163 * x50
    x165 = x74 * (x157 - x159)
    x166 = -x164 * x23 + x165 + x3 * (x157 * x3 - x160)
    x167 = x74 * (x158 - x162)
    x168 = x115 * x118 + x116 * x138 + x86
    x169 = x150 * x17 + x154 * x17 + x166
    x170 = x150 * x18 + x153 * x18
    x171 = x110 * x19
    x172 = -x25 - A[1]
    x173 = x26 * x68
    x174 = x172 * x44 - x26 * x51
    x175 = x174 * x50
    x176 = x74 * (x172 * x67 - x173 - x175)
    x177 = x26 * x99
    x178 = x26 * x71
    x179 = x172 * x40 - x178
    x180 = x179 * x50
    x181 = x74 * (x172 * x66 - x177 - x180)
    x182 = x26 * x50
    x183 = x182 * x35
    x184 = x182 * x42
    x185 = x172 * x35 - x184
    x186 = x185 * x50
    x187 = x74 * (2 * x10 * x14 * x172 * x20 * x30 * x6 - x183 - x186)
    x188 = x172 * x38 - x183
    x189 = -x186 * x23 + x188 * x3
    x190 = x172 * x42 - x182 * x47
    x191 = x190 * x50
    x192 = x185 * x3 - x191 * x23
    x193 = x172 * x66 - x177
    x194 = -x180 * x23 + x189 * x54 + x193 * x3
    x195 = x172 * x43 - x26 * x57
    x196 = x195 * x50
    x197 = x179 * x3 + x192 * x54 - x196 * x23
    x198 = x181 + x194 * x3 - x197 * x55 + x54 * (x187 + x189 * x3 - x192 * x55)
    x199 = x182 * x38
    x200 = x188 * x50
    x201 = x74 * (2 * x10 * x14 * x172 * x20 * x6 * x62 - x199 - x200)
    x202 = x172 * x65 - x199
    x203 = -x200 * x23 + x202 * x3
    x204 = -x189 * x55 + x201 + x203 * x3
    x205 = x16 * x204
    x206 = x172 * x67 - x173
    x207 = -x175 * x23 + x197 * x59 + x206 * x3
    x208 = x74 * (x172 * x40 - x178 - x196)
    x209 = x74 * (2 * x10 * x14 * x172 * x20 * x33 * x6 - x184 - x191)
    x210 = x172 * x47 - x182 * x87
    x211 = x190 * x3 - x210 * x55
    x212 = x172 * x48 - x182 * x88
    x213 = x195 * x3 + x211 * x54 - x212 * x55
    x214 = x172 * x49 - x182 * x89
    x215 = (
        x16 * x198
        + x16 * (x198 + x205)
        + x176
        + x207 * x3
        - x55 * (x174 * x3 + x213 * x59 - x214 * x55)
        + x59 * (x197 * x3 + x208 - x213 * x55 + x54 * (x192 * x3 + x209 - x211 * x55))
    )
    x216 = x122 * x172 - x124 * x26 + x195 * x54
    x217 = x216 * x50
    x218 = x131 * x172 - x132 * x26 + x179 * x54
    x219 = x74 * (-x217 + x218)
    x220 = x117 * x172 - x119 * x26 + x190 * x54
    x221 = x220 * x50
    x222 = x121 * x172 - x127 * x26 + x185 * x54
    x223 = x74 * (-x221 + x222)
    x224 = -x221 * x23 + x222 * x3
    x225 = x118 * x172 - x138 * x182 + x210 * x54
    x226 = x220 * x3 - x225 * x55
    x227 = x17 * x204
    x228 = x222 * x50
    x229 = x130 * x172 - x146 * x26 + x188 * x54
    x230 = x74 * (-x228 + x229)
    x231 = -x228 * x23 + x229 * x3
    x232 = -x224 * x55 + x230 + x231 * x3
    x233 = x227 + x232
    x234 = -x217 * x23 + x218 * x3 + x224 * x54
    x235 = x123 * x172 - x144 * x182 + x212 * x54
    x236 = (
        x16 * x233
        + x17 * x198
        + x219
        + x234 * x3
        + x54 * (x223 + x224 * x3 - x226 * x55)
        - x55 * (x216 * x3 + x226 * x54 - x235 * x55)
    )
    x237 = x18 * x198 + x18 * x205
    x238 = x158 * x172 - x162 * x26 + x220 * x59
    x239 = x238 * x50
    x240 = x157 * x172 - x159 * x26 + x222 * x59
    x241 = x74 * (-x239 + x240)
    x242 = -x23 * x239 + x240 * x3
    x243 = x161 * x172 - x168 * x182 + x225 * x59
    x244 = x17 * x232 + x17 * x233 + x241 + x242 * x3 - x55 * (x238 * x3 - x243 * x55)
    x245 = x18 * x227 + x18 * x232
    x246 = x19 * x204
    x247 = -x27 - A[2]
    x248 = x28 * x68
    x249 = x247 * x44 - x28 * x51
    x250 = x249 * x50
    x251 = x74 * (x247 * x67 - x248 - x250)
    x252 = x28 * x99
    x253 = x28 * x71
    x254 = x247 * x40 - x253
    x255 = x254 * x50
    x256 = x74 * (x247 * x66 - x252 - x255)
    x257 = x28 * x50
    x258 = x257 * x35
    x259 = x257 * x42
    x260 = x247 * x35 - x259
    x261 = x260 * x50
    x262 = x74 * (2 * x10 * x14 * x20 * x247 * x30 * x6 - x258 - x261)
    x263 = x247 * x38 - x258
    x264 = x263 * x3
    x265 = -x23 * x261 + x264
    x266 = x260 * x3
    x267 = x247 * x42 - x257 * x47
    x268 = x267 * x50
    x269 = x23 * x268
    x270 = x266 - x269
    x271 = x247 * x66 - x252
    x272 = -x23 * x255 + x265 * x54 + x271 * x3
    x273 = x254 * x3
    x274 = x247 * x43 - x28 * x57
    x275 = x274 * x50
    x276 = x23 * x275
    x277 = x270 * x54 + x273 - x276
    x278 = x256 + x272 * x3 - x277 * x55 + x54 * (x262 + x265 * x3 - x270 * x55)
    x279 = x257 * x38
    x280 = x263 * x50
    x281 = x74 * (2 * x10 * x14 * x20 * x247 * x6 * x62 - x279 - x280)
    x282 = x247 * x65 - x279
    x283 = -x23 * x280 + x282 * x3
    x284 = -x265 * x55 + x281 + x283 * x3
    x285 = x247 * x67 - x248
    x286 = -x23 * x250 + x277 * x59 + x285 * x3
    x287 = x74 * (x247 * x40 - x253 - x275)
    x288 = x74 * (2 * x10 * x14 * x20 * x247 * x33 * x6 - x259 - x268)
    x289 = x267 * x3
    x290 = x247 * x47 - x257 * x87
    x291 = x290 * x55
    x292 = x289 - x291
    x293 = x274 * x3
    x294 = x247 * x48 - x257 * x88
    x295 = x294 * x55
    x296 = x292 * x54 + x293 - x295
    x297 = x247 * x49 - x257 * x89
    x298 = (
        x16 * x278
        + x16 * (x16 * x284 + x278)
        + x251
        + x286 * x3
        - x55 * (x249 * x3 + x296 * x59 - x297 * x55)
        + x59 * (x277 * x3 + x287 - x296 * x55 + x54 * (x270 * x3 + x288 - x292 * x55))
    )
    x299 = x132 * x28
    x300 = x122 * x247 - x124 * x28
    x301 = x300 * x50
    x302 = x74 * (x131 * x247 - x299 - x301)
    x303 = x127 * x28
    x304 = x117 * x247 - x119 * x28
    x305 = x304 * x50
    x306 = x74 * (x121 * x247 - x303 - x305)
    x307 = x121 * x247 - x303
    x308 = x3 * x307
    x309 = x23 * x305
    x310 = x308 - x309
    x311 = x3 * x304
    x312 = x118 * x247 - x138 * x257
    x313 = x312 * x55
    x314 = x311 - x313
    x315 = x146 * x28
    x316 = x307 * x50
    x317 = x74 * (x130 * x247 - x315 - x316)
    x318 = x130 * x247 - x315
    x319 = -x23 * x316 + x3 * x318
    x320 = x3 * x319 - x310 * x55 + x317
    x321 = x17 * x284 + x320
    x322 = x131 * x247 - x299
    x323 = -x23 * x301 + x3 * x322 + x310 * x54
    x324 = x123 * x247 - x144 * x257
    x325 = (
        x16 * x321
        + x17 * x278
        + x3 * x323
        + x302
        + x54 * (x3 * x310 + x306 - x314 * x55)
        - x55 * (x3 * x300 + x314 * x54 - x324 * x55)
    )
    x326 = x275 * x54
    x327 = x74 * (x254 * x54 - x326)
    x328 = x268 * x54
    x329 = x74 * (x260 * x54 - x328)
    x330 = x266 * x54 - x269 * x54
    x331 = x289 * x54 - x291 * x54
    x332 = x260 * x54
    x333 = x74 * (x263 * x54 - x332 * x50)
    x334 = x264 * x54 - x332 * x55
    x335 = x3 * x334 - x330 * x55 + x333
    x336 = x18 * x284 + x335
    x337 = x273 * x54 - x276 * x54 + x330 * x54
    x338 = (
        x16 * x336
        + x18 * x278
        + x3 * x337
        + x327
        + x54 * (x3 * x330 + x329 - x331 * x55)
        - x55 * (x293 * x54 - x295 * x54 + x331 * x54)
    )
    x339 = x159 * x28
    x340 = x158 * x247 - x162 * x28
    x341 = x340 * x50
    x342 = x74 * (x157 * x247 - x339 - x341)
    x343 = x157 * x247 - x339
    x344 = -x23 * x341 + x3 * x343
    x345 = x161 * x247 - x168 * x257
    x346 = x17 * x320 + x17 * x321 + x3 * x344 + x342 - x55 * (x3 * x340 - x345 * x55)
    x347 = x305 * x54
    x348 = x74 * (x307 * x54 - x347)
    x349 = x308 * x54 - x309 * x54
    x350 = x17 * x336 + x18 * x320 + x3 * x349 + x348 - x55 * (x311 * x54 - x313 * x54)
    x351 = x53 ** (-2.0)
    x352 = 2 * x351
    x353 = x74 * (2 * x260 * x351 - x268 * x352)
    x354 = x266 * x352 - x269 * x352
    x355 = x18 * x335 + x18 * x336 + x3 * x354 + x353 - x55 * (x289 * x352 - x291 * x352)
    x356 = x16 * x203
    x357 = x16 * x194 + x16 * (x194 + x356) + x207
    x358 = x17 * x203
    x359 = x231 + x358
    x360 = x16 * x359 + x17 * x194 + x234
    x361 = x18 * x194 + x18 * x356
    x362 = x17 * x231 + x17 * x359 + x242
    x363 = x18 * x231 + x18 * x358
    x364 = x19 * x203
    x365 = x102 + x172 * x188 - x186 * x26
    x366 = x172 * x185 - x191 * x26 + x78
    x367 = x104 + x172 * x193 - x180 * x26
    x368 = x172 * x179 - x196 * x26 + x77
    x369 = x3 * x367 - x368 * x55 + x54 * (x3 * x365 - x366 * x55)
    x370 = x109 + x172 * x202 - x200 * x26
    x371 = x3 * x370 - x365 * x55
    x372 = x16 * x371
    x373 = x172 * x206 - x175 * x26 + x76
    x374 = x172 * x190 - x182 * x210 + x93
    x375 = x172 * x195 - x182 * x212 + x92
    x376 = x172 * x174 - x182 * x214 + x84
    x377 = (
        x16 * x369
        + x16 * (x369 + x372)
        + x3 * x373
        - x376 * x55
        + x59 * (x3 * x368 - x375 * x55 + x54 * (x3 * x366 - x374 * x55))
    )
    x378 = x135 + x172 * x222 - x221 * x26 + x366 * x54
    x379 = x137 + x172 * x220 - x182 * x225 + x374 * x54
    x380 = x17 * x371
    x381 = x149 + x172 * x229 - x228 * x26 + x365 * x54
    x382 = x3 * x381 - x378 * x55
    x383 = x380 + x382
    x384 = x141 + x172 * x218 - x217 * x26 + x368 * x54
    x385 = x143 + x172 * x216 - x182 * x235 + x375 * x54
    x386 = (
        x16 * x383 + x17 * x369 + x3 * x384 - x385 * x55 + x54 * (x3 * x378 - x379 * x55)
    )
    x387 = x18 * x369 + x18 * x372
    x388 = x165 + x172 * x240 - x239 * x26 + x378 * x59
    x389 = x167 + x172 * x238 - x182 * x243 + x379 * x59
    x390 = x17 * x382 + x17 * x383 + x3 * x388 - x389 * x55
    x391 = x18 * x380 + x18 * x382
    x392 = x19 * x371
    x393 = x172 * x263 - x26 * x261
    x394 = x172 * x260
    x395 = x26 * x268
    x396 = x394 - x395
    x397 = x172 * x271 - x255 * x26
    x398 = x172 * x254 - x26 * x275
    x399 = x3 * x397 - x398 * x55 + x54 * (x3 * x393 - x396 * x55)
    x400 = x172 * x282 - x26 * x280
    x401 = x3 * x400 - x393 * x55
    x402 = x172 * x285 - x250 * x26
    x403 = x172 * x267
    x404 = x182 * x290
    x405 = x403 - x404
    x406 = x172 * x274
    x407 = x182 * x294
    x408 = x406 - x407
    x409 = x172 * x249 - x182 * x297
    x410 = (
        x16 * x399
        + x16 * (x16 * x401 + x399)
        + x3 * x402
        - x409 * x55
        + x59 * (x3 * x398 - x408 * x55 + x54 * (x3 * x396 - x405 * x55))
    )
    x411 = x172 * x307 - x26 * x305 + x396 * x54
    x412 = x172 * x304
    x413 = x182 * x312
    x414 = x405 * x54 + x412 - x413
    x415 = x172 * x318 - x26 * x316 + x393 * x54
    x416 = x3 * x415 - x411 * x55
    x417 = x17 * x401 + x416
    x418 = x172 * x322 - x26 * x301 + x398 * x54
    x419 = x172 * x300 - x182 * x324 + x408 * x54
    x420 = (
        x16 * x417 + x17 * x399 + x3 * x418 - x419 * x55 + x54 * (x3 * x411 - x414 * x55)
    )
    x421 = x172 * x332 - x26 * x328
    x422 = x403 * x54 - x404 * x54
    x423 = x263 * x54
    x424 = x172 * x423 - x182 * x332
    x425 = x3 * x424 - x421 * x55
    x426 = x18 * x401 + x425
    x427 = x254 * x54
    x428 = x172 * x427 - x26 * x326
    x429 = x406 * x54 - x407 * x54
    x430 = (
        x16 * x426 + x18 * x399 + x3 * x428 - x429 * x55 + x54 * (x3 * x421 - x422 * x55)
    )
    x431 = x172 * x343 - x26 * x341 + x411 * x59
    x432 = x172 * x340 - x182 * x345 + x414 * x59
    x433 = x17 * x416 + x17 * x417 + x3 * x431 - x432 * x55
    x434 = x307 * x54
    x435 = x172 * x434 - x26 * x347 + x421 * x54
    x436 = x412 * x54 - x413 * x54 + x422 * x54
    x437 = x17 * x426 + x18 * x416 + x3 * x435 - x436 * x55
    x438 = x352 * x394 - x352 * x395
    x439 = x352 * x403 - x352 * x404
    x440 = x18 * x425 + x18 * x426 + x3 * x438 - x439 * x55
    x441 = x16 * x272 + x16 * (x16 * x283 + x272) + x286
    x442 = x17 * x283 + x319
    x443 = x16 * x442 + x17 * x272 + x323
    x444 = x18 * x283 + x334
    x445 = x16 * x444 + x18 * x272 + x337
    x446 = x17 * x319 + x17 * x442 + x344
    x447 = x17 * x444 + x18 * x319 + x349
    x448 = x18 * x334 + x18 * x444 + x354
    x449 = x102 + x247 * x263 - x261 * x28
    x450 = x247 * x260
    x451 = x268 * x28
    x452 = x450 - x451 + x78
    x453 = x104 + x247 * x271 - x255 * x28
    x454 = x247 * x254 - x275 * x28 + x77
    x455 = x3 * x453 - x454 * x55 + x54 * (x3 * x449 - x452 * x55)
    x456 = x109 + x247 * x282 - x28 * x280
    x457 = x3 * x456 - x449 * x55
    x458 = x247 * x285 - x250 * x28 + x76
    x459 = x247 * x267
    x460 = x257 * x290
    x461 = x459 - x460 + x93
    x462 = x247 * x274
    x463 = x257 * x294
    x464 = x462 - x463 + x92
    x465 = x247 * x249 - x257 * x297 + x84
    x466 = (
        x16 * x455
        + x16 * (x16 * x457 + x455)
        + x3 * x458
        - x465 * x55
        + x59 * (x3 * x454 - x464 * x55 + x54 * (x3 * x452 - x461 * x55))
    )
    x467 = x135 + x247 * x307 - x28 * x305
    x468 = x247 * x304
    x469 = x257 * x312
    x470 = x137 + x468 - x469
    x471 = x149 + x247 * x318 - x28 * x316
    x472 = x3 * x471 - x467 * x55
    x473 = x17 * x457 + x472
    x474 = x141 + x247 * x322 - x28 * x301
    x475 = x143 + x247 * x300 - x257 * x324
    x476 = (
        x16 * x473 + x17 * x455 + x3 * x474 - x475 * x55 + x54 * (x3 * x467 - x470 * x55)
    )
    x477 = x247 * x332 - x28 * x328 + x452 * x54
    x478 = x459 * x54 - x460 * x54 + x461 * x54
    x479 = x247 * x423 - x257 * x332 + x449 * x54
    x480 = x3 * x479 - x477 * x55
    x481 = x18 * x457 + x480
    x482 = x247 * x427 - x28 * x326 + x454 * x54
    x483 = x462 * x54 - x463 * x54 + x464 * x54
    x484 = (
        x16 * x481 + x18 * x455 + x3 * x482 - x483 * x55 + x54 * (x3 * x477 - x478 * x55)
    )
    x485 = x165 + x247 * x343 - x28 * x341
    x486 = x167 + x247 * x340 - x257 * x345
    x487 = x17 * x472 + x17 * x473 + x3 * x485 - x486 * x55
    x488 = x247 * x434 - x28 * x347 + x467 * x54
    x489 = x468 * x54 - x469 * x54 + x470 * x54
    x490 = x17 * x481 + x18 * x472 + x3 * x488 - x489 * x55
    x491 = x352 * x450 - x352 * x451 + x477 * x59
    x492 = x352 * x459 - x352 * x460 + x478 * x59
    x493 = x18 * x480 + x18 * x481 + x3 * x491 - x492 * x55
    x494 = x16 * x370
    x495 = x16 * x367 + x16 * (x367 + x494) + x373
    x496 = x17 * x370
    x497 = x381 + x496
    x498 = x16 * x497 + x17 * x367 + x384
    x499 = x18 * x367 + x18 * x494
    x500 = x17 * x381 + x17 * x497 + x388
    x501 = x18 * x381 + x18 * x496
    x502 = x19 * x370
    x503 = x172 * x367 + 2 * x181 - x182 * x368
    x504 = x172 * x370 - x182 * x365 + 2 * x201
    x505 = x16 * x504
    x506 = x17 * x504
    x507 = (
        x172 * x381
        - x182 * x378
        + 2 * x230
        + x54 * (x172 * x365 - x182 * x366 + 2 * x187)
    )
    x508 = x506 + x507
    x509 = x172 * x397 - x182 * x398 + x256
    x510 = x172 * x400 - x182 * x393 + x281
    x511 = x16 * x509 + x16 * (x16 * x510 + x509) + x172 * x402 - x182 * x409 + x251
    x512 = x172 * x415 - x182 * x411 + x317 + x54 * (x172 * x393 - x182 * x396 + x262)
    x513 = x17 * x510 + x512
    x514 = (
        x16 * x513
        + x17 * x509
        + x172 * x418
        - x182 * x419
        + x302
        + x54 * (x172 * x398 - x182 * x408 + x287)
    )
    x515 = x172 * x424 - x182 * x421 + x333
    x516 = x18 * x510 + x515
    x517 = x16 * x516 + x172 * x428 + x18 * x509 - x182 * x429 + x327
    x518 = (
        x17 * x512
        + x17 * x513
        + x172 * x431
        - x182 * x432
        + x342
        + x59
        * (x172 * x411 - x182 * x414 + x306 + x54 * (x172 * x396 - x182 * x405 + x288))
    )
    x519 = (
        x17 * x516
        + x172 * x435
        + x18 * x512
        - x182 * x436
        + x348
        + x54 * (x172 * x421 - x182 * x422 + x329)
    )
    x520 = x172 * x438 + x18 * x515 + x18 * x516 - x182 * x439 + x353
    x521 = x16 * x397 + x16 * (x16 * x400 + x397) + x402
    x522 = x17 * x400 + x415
    x523 = x16 * x522 + x17 * x397 + x418
    x524 = x18 * x400 + x424
    x525 = x16 * x524 + x18 * x397 + x428
    x526 = x17 * x415 + x17 * x522 + x431
    x527 = x17 * x524 + x18 * x415 + x435
    x528 = x18 * x424 + x18 * x524 + x438
    x529 = x172 * x453 - x182 * x454
    x530 = x172 * x456 - x182 * x449
    x531 = x16 * x529 + x16 * (x16 * x530 + x529) + x172 * x458 - x182 * x465
    x532 = x172 * x471 - x182 * x467 + x54 * (x172 * x449 - x182 * x452)
    x533 = x17 * x530 + x532
    x534 = (
        x16 * x533
        + x17 * x529
        + x172 * x474
        - x182 * x475
        + x54 * (x172 * x454 - x182 * x464)
    )
    x535 = x172 * x479 - x182 * x477
    x536 = x18 * x530 + x535
    x537 = x16 * x536 + x172 * x482 + x18 * x529 - x182 * x483
    x538 = (
        x17 * x532
        + x17 * x533
        + x172 * x485
        - x182 * x486
        + x59 * (x172 * x467 - x182 * x470 + x54 * (x172 * x452 - x182 * x461))
    )
    x539 = (
        x17 * x536
        + x172 * x488
        + x18 * x532
        - x182 * x489
        + x54 * (x172 * x477 - x182 * x478)
    )
    x540 = x172 * x491 + x18 * x535 + x18 * x536 - x182 * x492
    x541 = x16 * x453 + x16 * (x16 * x456 + x453) + x458
    x542 = x17 * x456 + x471
    x543 = x16 * x542 + x17 * x453 + x474
    x544 = x18 * x456 + x479
    x545 = x16 * x544 + x18 * x453 + x482
    x546 = x17 * x471 + x17 * x542 + x485
    x547 = x17 * x544 + x18 * x471 + x488
    x548 = x18 * x479 + x18 * x544 + x491
    x549 = x247 * x453 + 2 * x256 - x257 * x454
    x550 = x247 * x456 - x257 * x449 + 2 * x281
    x551 = x247 * x471 - x257 * x467 + 2 * x317
    x552 = x17 * x550 + x551
    x553 = (
        x247 * x479
        - x257 * x477
        + 2 * x333
        + x54 * (x247 * x449 - x257 * x452 + 2 * x262)
    )
    x554 = x18 * x550 + x553

    # 108 item(s)
    S = numpy.array(
        [
            x106 * x16
            + x11 * x114
            + x16 * (x106 + x112)
            + x3 * x83
            - x55
            * (x3 * x60 - x55 * (x3 * x49 - x55 * x89 + x59 * x91) + x59 * x95 + x84)
            + x59
            * (
                x3 * x82
                + x54
                * (
                    x3 * x80
                    - x55 * x94
                    + x75 * (2 * x10 * x14 * x20 * x3 * x33 * x6 - x69 - x79)
                )
                - x55 * x95
                + x75 * (x72 - x81)
            )
            + x75 * (-x61 + x73),
            x106 * x17
            + x11 * x155
            + x142 * x3
            + x152 * x16
            + x54 * (x136 * x3 - x140 * x55 + x75 * (x121 * x3 - x128 - x134))
            - x55
            * (
                x125 * x3
                + x140 * x54
                + x143
                - x55 * (x123 * x3 + x139 * x54 - x144 * x55)
            )
            + x75 * (-x126 + x133),
            x106 * x18 + x11 * x156 + x112 * x18,
            x11 * x169
            + x151 * x17
            + x152 * x17
            + x166 * x3
            - x55 * (x163 * x3 + x167 - x55 * (x161 * x3 - x168 * x55))
            + x75 * (x157 * x3 - x160 - x164),
            x11 * x170 + x145 * x18 + x151 * x18,
            x11 * x171 + x111 * x19,
            x114 * x12 + x215,
            x12 * x155 + x236,
            x12 * x156 + x237,
            x12 * x169 + x244,
            x12 * x170 + x245,
            x12 * x171 + x246,
            x114 * x13 + x298,
            x13 * x155 + x325,
            x13 * x156 + x338,
            x13 * x169 + x346,
            x13 * x170 + x350,
            x13 * x171 + x355,
            x11 * x357 + x215,
            x11 * x360 + x236,
            x11 * x361 + x237,
            x11 * x362 + x244,
            x11 * x363 + x245,
            x11 * x364 + x246,
            x12 * x357 + x377,
            x12 * x360 + x386,
            x12 * x361 + x387,
            x12 * x362 + x390,
            x12 * x363 + x391,
            x12 * x364 + x392,
            x13 * x357 + x410,
            x13 * x360 + x420,
            x13 * x361 + x430,
            x13 * x362 + x433,
            x13 * x363 + x437,
            x13 * x364 + x440,
            x11 * x441 + x298,
            x11 * x443 + x325,
            x11 * x445 + x338,
            x11 * x446 + x346,
            x11 * x447 + x350,
            x11 * x448 + x355,
            x12 * x441 + x410,
            x12 * x443 + x420,
            x12 * x445 + x430,
            x12 * x446 + x433,
            x12 * x447 + x437,
            x12 * x448 + x440,
            x13 * x441 + x466,
            x13 * x443 + x476,
            x13 * x445 + x484,
            x13 * x446 + x487,
            x13 * x447 + x490,
            x13 * x448 + x493,
            x11 * x495 + x377,
            x11 * x498 + x386,
            x11 * x499 + x387,
            x11 * x500 + x390,
            x11 * x501 + x391,
            x11 * x502 + x392,
            x12 * x495
            + x16 * x503
            + x16 * (x503 + x505)
            + x172 * x373
            + 2 * x176
            - x182 * x376,
            x12 * x498
            + x16 * x508
            + x17 * x503
            + x172 * x384
            - x182 * x385
            + 2 * x219
            + x54 * (x172 * x368 - x182 * x375 + 2 * x208),
            x12 * x499 + x18 * x503 + x18 * x505,
            x12 * x500
            + x17 * x507
            + x17 * x508
            + x172 * x388
            - x182 * x389
            + 2 * x241
            + x59
            * (
                x172 * x378
                - x182 * x379
                + 2 * x223
                + x54 * (x172 * x366 - x182 * x374 + 2 * x209)
            ),
            x12 * x501 + x18 * x506 + x18 * x507,
            x12 * x502 + x19 * x504,
            x13 * x495 + x511,
            x13 * x498 + x514,
            x13 * x499 + x517,
            x13 * x500 + x518,
            x13 * x501 + x519,
            x13 * x502 + x520,
            x11 * x521 + x410,
            x11 * x523 + x420,
            x11 * x525 + x430,
            x11 * x526 + x433,
            x11 * x527 + x437,
            x11 * x528 + x440,
            x12 * x521 + x511,
            x12 * x523 + x514,
            x12 * x525 + x517,
            x12 * x526 + x518,
            x12 * x527 + x519,
            x12 * x528 + x520,
            x13 * x521 + x531,
            x13 * x523 + x534,
            x13 * x525 + x537,
            x13 * x526 + x538,
            x13 * x527 + x539,
            x13 * x528 + x540,
            x11 * x541 + x466,
            x11 * x543 + x476,
            x11 * x545 + x484,
            x11 * x546 + x487,
            x11 * x547 + x490,
            x11 * x548 + x493,
            x12 * x541 + x531,
            x12 * x543 + x534,
            x12 * x545 + x537,
            x12 * x546 + x538,
            x12 * x547 + x539,
            x12 * x548 + x540,
            x13 * x541
            + x16 * x549
            + x16 * (x16 * x550 + x549)
            + x247 * x458
            + 2 * x251
            - x257 * x465,
            x13 * x543 + x16 * x552 + x17 * x549 + x247 * x474 - x257 * x475 + 2 * x302,
            x13 * x545
            + x16 * x554
            + x18 * x549
            + x247 * x482
            - x257 * x483
            + 2 * x327
            + x54 * (x247 * x454 - x257 * x464 + 2 * x287),
            x13 * x546 + x17 * x551 + x17 * x552 + x247 * x485 - x257 * x486 + 2 * x342,
            x13 * x547
            + x17 * x554
            + x18 * x551
            + x247 * x488
            - x257 * x489
            + 2 * x348
            + x54 * (x247 * x467 - x257 * x470 + 2 * x306),
            x13 * x548
            + x18 * x553
            + x18 * x554
            + x247 * x491
            - x257 * x492
            + 2 * x353
            + x59
            * (
                x247 * x477
                - x257 * x478
                + 2 * x329
                + x54 * (x247 * x452 - x257 * x461 + 2 * x288)
            ),
        ]
    )
    return S


def eri_2110(a, A, b, B, c, C, d, D):
    """Cartesian [dp|ps] 2-electron electron repulsion integral.

    Generated code; DO NOT modify by hand!"""

    x0 = 2 * a + 2 * b
    x1 = (2 * c + 2 * d + x0) ** (-1.0)
    x2 = a + b
    x3 = x2 ** (-1.0)
    x4 = -x3 * (a * A[0] + b * B[0])
    x5 = -x4 - A[0]
    x6 = c + d
    x7 = x2 + x6
    x8 = x7 ** (-1.0)
    x9 = x6 ** (-1.0)
    x10 = x9 * (c * C[0] + d * D[0])
    x11 = -x10 - x4
    x12 = x9 * (c * C[1] + d * D[1])
    x13 = -x3 * (a * A[1] + b * B[1])
    x14 = -x12 - x13
    x15 = -x3 * (a * A[2] + b * B[2])
    x16 = -x15 - x9 * (c * C[2] + d * D[2])
    x17 = x2 * x6
    x18 = x17 * x8 * (x11**2 + x14**2 + x16**2)
    x19 = boys(2, x18)
    x20 = numpy.pi**2.5
    x21 = (x17 + numpy.sqrt(x7)) ** (-1.0)
    x22 = A[0] - B[0]
    x23 = A[1] - B[1]
    x24 = A[2] - B[2]
    x25 = numpy.exp(-a * b * x3 * (x22**2 + x23**2 + x24**2))
    x26 = numpy.exp(
        -c * d * x9 * ((C[0] - D[0]) ** 2 + (C[1] - D[1]) ** 2 + (C[2] - D[2]) ** 2)
    )
    x27 = 2 * x20 * x21 * x25 * x26
    x28 = x19 * x27
    x29 = x6 * x8
    x30 = x11 * x29
    x31 = x27 * boys(3, x18)
    x32 = x28 * x5 - x30 * x31
    x33 = x10 - C[0]
    x34 = boys(1, x18)
    x35 = x27 * x34
    x36 = x2 * x8
    x37 = x11 * x36
    x38 = x28 * x37 + x33 * x35
    x39 = x28 * x33 + x31 * x37
    x40 = x29 * x39
    x41 = x1 * x32 - x11 * x40 + x38 * x5
    x42 = x29 * x41
    x43 = x28 * x30
    x44 = x35 * x5 - x43
    x45 = x27 * boys(0, x18)
    x46 = x33 * x45 + x35 * x37
    x47 = x29 * x38
    x48 = x1 * x44 - x11 * x47 + x46 * x5
    x49 = x0 ** (-1.0)
    x50 = 2 * x49
    x51 = x29 * x32
    x52 = x49 * (2 * x20 * x21 * x25 * x26 * x34 - x28 * x29)
    x53 = -x11 * x51 + x44 * x5 + x52
    x54 = x49 * (2 * x19 * x20 * x21 * x25 * x26 - x29 * x31)
    x55 = x27 * boys(4, x18)
    x56 = -x30 * x55 + x31 * x5
    x57 = -x30 * x56 + x32 * x5 + x54
    x58 = x49 * (x46 - x47)
    x59 = x1 * x53 - x11 * x42 + x48 * x5 + x58
    x60 = x49 * (x38 - x40)
    x61 = x31 * x33 + x37 * x55
    x62 = x12 - C[1]
    x63 = x14 * x36
    x64 = x35 * x63 + x45 * x62
    x65 = x28 * x63 + x35 * x62
    x66 = x29 * x65
    x67 = x11 * x66
    x68 = x28 * x62 + x31 * x63
    x69 = x29 * x68
    x70 = -x11 * x69 + x5 * x65
    x71 = x29 * x70
    x72 = x49 * (x64 - x66)
    x73 = -x11 * x71 + x5 * (x5 * x64 - x67) + x72
    x74 = x49 * (x65 - x69)
    x75 = x31 * x62 + x55 * x63
    x76 = -x13 - A[1]
    x77 = x14 * x47
    x78 = -x14 * x40 + x38 * x76
    x79 = x29 * x78
    x80 = x49 * (x46 * x76 - x77 - x79)
    x81 = x14 * x29
    x82 = x28 * x81
    x83 = x28 * x76 - x31 * x81
    x84 = x29 * x83
    x85 = x49 * (2 * x20 * x21 * x25 * x26 * x34 * x76 - x82 - x84)
    x86 = x35 * x76 - x82
    x87 = -x11 * x84 + x5 * x86
    x88 = x31 * x76 - x55 * x81
    x89 = -x30 * x88 + x5 * x83
    x90 = x46 * x76 - x77
    x91 = x1 * x87 - x11 * x79 + x5 * x90
    x92 = x39 * x76 - x61 * x81
    x93 = (
        x1 * (-x30 * x89 + x5 * x87 + x85)
        - x30 * (x1 * x89 - x30 * x92 + x5 * x78)
        + x5 * x91
        + x80
    )
    x94 = x1 * x83 - x14 * x69 + x65 * x76
    x95 = x29 * x94
    x96 = x1 * x86 - x14 * x66 + x64 * x76
    x97 = x49 * (-x95 + x96)
    x98 = -x11 * x95 + x5 * x96
    x99 = x1 * x88 + x68 * x76 - x75 * x81
    x100 = -x30 * (-x30 * x99 + x5 * x94) + x5 * x98 + x97
    x101 = -x15 - A[2]
    x102 = x16 * x47
    x103 = x101 * x38 - x16 * x40
    x104 = x103 * x29
    x105 = x49 * (x101 * x46 - x102 - x104)
    x106 = x16 * x29
    x107 = x106 * x28
    x108 = x101 * x28 - x106 * x31
    x109 = x108 * x29
    x110 = x49 * (2 * x101 * x20 * x21 * x25 * x26 * x34 - x107 - x109)
    x111 = x101 * x35 - x107
    x112 = x111 * x5
    x113 = x109 * x11
    x114 = x112 - x113
    x115 = x108 * x5
    x116 = x101 * x31 - x106 * x55
    x117 = x116 * x30
    x118 = x115 - x117
    x119 = x101 * x46 - x102
    x120 = x1 * x114 - x104 * x11 + x119 * x5
    x121 = x101 * x39 - x106 * x61
    x122 = (
        x1 * (x110 + x114 * x5 - x118 * x30)
        + x105
        + x120 * x5
        - x30 * (x1 * x118 + x103 * x5 - x121 * x30)
    )
    x123 = x16 * x66
    x124 = x101 * x65 - x16 * x69
    x125 = x124 * x29
    x126 = x49 * (x101 * x64 - x123 - x125)
    x127 = x101 * x64 - x123
    x128 = -x11 * x125 + x127 * x5
    x129 = x101 * x68 - x106 * x75
    x130 = x126 + x128 * x5 - x30 * (x124 * x5 - x129 * x30)
    x131 = x1 * x109
    x132 = x49 * (x1 * x111 - x131)
    x133 = x1 * x112 - x1 * x113
    x134 = x132 + x133 * x5 - x30 * (x1 * x115 - x1 * x117)
    x135 = -x14 * x84 + x52 + x76 * x86
    x136 = x54 + x76 * x83 - x81 * x88
    x137 = -x14 * x79 + x58 + x76 * x90
    x138 = x60 + x76 * x78 - x81 * x92
    x139 = x1 * (x135 * x5 - x136 * x30) + x137 * x5 - x138 * x30
    x140 = x1 * x135 - x14 * x95 + x72 + x76 * x96
    x141 = x1 * x136 + x74 + x76 * x94 - x81 * x99
    x142 = x140 * x5 - x141 * x30
    x143 = -x109 * x14 + x111 * x76
    x144 = x108 * x76
    x145 = x116 * x81
    x146 = x144 - x145
    x147 = -x104 * x14 + x119 * x76
    x148 = x103 * x76 - x121 * x81
    x149 = x1 * (x143 * x5 - x146 * x30) + x147 * x5 - x148 * x30
    x150 = x1 * x143 - x125 * x14 + x127 * x76
    x151 = x1 * x146 + x124 * x76 - x129 * x81
    x152 = x150 * x5 - x151 * x30
    x153 = x1 * x111
    x154 = -x131 * x14 + x153 * x76
    x155 = x1 * x144 - x1 * x145
    x156 = x154 * x5 - x155 * x30
    x157 = x101 * x111 - x109 * x16 + x52
    x158 = x101 * x108
    x159 = x106 * x116
    x160 = x158 - x159 + x54
    x161 = x101 * x119 - x104 * x16 + x58
    x162 = x101 * x103 - x106 * x121 + x60
    x163 = x1 * (x157 * x5 - x160 * x30) + x161 * x5 - x162 * x30
    x164 = x101 * x127 - x125 * x16 + x72
    x165 = x101 * x124 - x106 * x129 + x74
    x166 = x164 * x5 - x165 * x30
    x167 = x1 * x157 + x101 * x153 - x131 * x16
    x168 = x1 * x158 - x1 * x159 + x1 * x160
    x169 = x167 * x5 - x168 * x30
    x170 = x105 + x147 * x76 - x148 * x81
    x171 = x1 * (x110 + x143 * x76 - x146 * x81) + x126 + x150 * x76 - x151 * x81
    x172 = x132 + x154 * x76 - x155 * x81
    x173 = x161 * x76 - x162 * x81
    x174 = x1 * (x157 * x76 - x160 * x81) + x164 * x76 - x165 * x81
    x175 = x167 * x76 - x168 * x81

    # 54 item(s)
    S = numpy.array(
        [
            x1
            * (
                -x30 * x57
                + x5 * x53
                + x50 * (2 * x20 * x21 * x25 * x26 * x34 * x5 - x43 - x51)
            )
            + x22 * x59
            - x30 * (x1 * x57 - x30 * (x1 * x56 - x30 * x61 + x39 * x5) + x41 * x5 + x60)
            + x5 * x59
            + x50 * (-x42 + x48),
            x22 * x73
            - x30 * (-x30 * (-x30 * x75 + x5 * x68) + x5 * x70 + x74)
            + x5 * x73
            + x50 * (x5 * x64 - x67 - x71),
            0,
            x23 * x59 + x93,
            x100 + x23 * x73,
            0,
            x122 + x24 * x59,
            x130 + x24 * x73,
            x134,
            x22 * x91 + x93,
            x100 + x22 * x98,
            0,
            x139 + x23 * x91,
            x142 + x23 * x98,
            0,
            x149 + x24 * x91,
            x152 + x24 * x98,
            x156,
            x120 * x22 + x122,
            x128 * x22 + x130,
            x133 * x22 + x134,
            x120 * x23 + x149,
            x128 * x23 + x152,
            x133 * x23 + x156,
            x120 * x24 + x163,
            x128 * x24 + x166,
            x133 * x24 + x169,
            x137 * x22 + x139,
            x140 * x22 + x142,
            0,
            x137 * x23 + x137 * x76 - x138 * x81 + 2 * x80,
            x1 * (x135 * x76 - x136 * x81 + 2 * x85)
            + x140 * x23
            + x140 * x76
            - x141 * x81
            + 2 * x97,
            0,
            x137 * x24 + x170,
            x140 * x24 + x171,
            x172,
            x147 * x22 + x149,
            x150 * x22 + x152,
            x154 * x22 + x156,
            x147 * x23 + x170,
            x150 * x23 + x171,
            x154 * x23 + x172,
            x147 * x24 + x173,
            x150 * x24 + x174,
            x154 * x24 + x175,
            x161 * x22 + x163,
            x164 * x22 + x166,
            x167 * x22 + x169,
            x161 * x23 + x173,
            x164 * x23 + x174,
            x167 * x23 + x175,
            x101 * x161 + 2 * x105 - x106 * x162 + x161 * x24,
            x101 * x164 - x106 * x165 + 2 * x126 + x164 * x24,
            x1 * (x101 * x157 - x106 * x160 + 2 * x110)
            + x101 * x167
            - x106 * x168
            + 2 * x132
            + x167 * x24,
        ]
    )
    return S


def eri_2111(a, A, b, B, c, C, d, D):
    """Cartesian [dp|pp] 2-electron electron repulsion integral.

    Generated code; DO NOT modify by hand!"""

    x0 = a + b
    x1 = x0 ** (-1.0)
    x2 = -x1 * (a * A[0] + b * B[0])
    x3 = -x2 - A[0]
    x4 = 2 * c + 2 * d
    x5 = x4 ** (-1.0)
    x6 = numpy.pi**2.5
    x7 = c + d
    x8 = x0 * x7
    x9 = x0 + x7
    x10 = (x8 + numpy.sqrt(x9)) ** (-1.0)
    x11 = A[0] - B[0]
    x12 = A[1] - B[1]
    x13 = A[2] - B[2]
    x14 = numpy.exp(-a * b * x1 * (x11**2 + x12**2 + x13**2))
    x15 = x7 ** (-1.0)
    x16 = C[0] - D[0]
    x17 = C[1] - D[1]
    x18 = C[2] - D[2]
    x19 = numpy.exp(-c * d * x15 * (x16**2 + x17**2 + x18**2))
    x20 = x9 ** (-1.0)
    x21 = x15 * (c * C[0] + d * D[0])
    x22 = -x2 - x21
    x23 = x15 * (c * C[1] + d * D[1])
    x24 = -x1 * (a * A[1] + b * B[1])
    x25 = -x23 - x24
    x26 = -x1 * (a * A[2] + b * B[2])
    x27 = -x15 * (c * C[2] + d * D[2]) - x26
    x28 = x20 * x8 * (x22**2 + x25**2 + x27**2)
    x29 = boys(1, x28)
    x30 = -2 * x10 * x14 * x19 * x29 * x6
    x31 = x0 * x20
    x32 = boys(2, x28)
    x33 = 2 * x10 * x14 * x19 * x6
    x34 = x32 * x33
    x35 = x5 * (-x30 - x31 * x34)
    x36 = x21 - C[0]
    x37 = x29 * x33
    x38 = x22 * x31
    x39 = x34 * x38 + x36 * x37
    x40 = boys(3, x28)
    x41 = x33 * x40
    x42 = x34 * x36 + x38 * x41
    x43 = x35 + x36 * x39 + x38 * x42
    x44 = -2 * x10 * x14 * x19 * x32 * x6
    x45 = x5 * (-x31 * x41 - x44)
    x46 = x33 * boys(4, x28)
    x47 = x36 * x41 + x38 * x46
    x48 = x36 * x42 + x38 * x47 + x45
    x49 = x20 * x7
    x50 = x48 * x49
    x51 = 2 * a + 2 * b
    x52 = x4 + x51
    x53 = x52 ** (-1.0)
    x54 = x22 * x49
    x55 = x3 * x41 - x46 * x54
    x56 = x47 * x49
    x57 = -x22 * x56 + x3 * x42 + x53 * x55
    x58 = 2 * x53
    x59 = -x22 * x50 + x3 * x43 + x57 * x58
    x60 = x49 * x59
    x61 = boys(0, x28)
    x62 = x5 * (2 * x10 * x14 * x19 * x6 * x61 - x31 * x37)
    x63 = x33 * x61
    x64 = x36 * x63 + x37 * x38
    x65 = x36 * x64 + x38 * x39 + x62
    x66 = x43 * x49
    x67 = x41 * x54
    x68 = x3 * x34 - x67
    x69 = x42 * x49
    x70 = -x22 * x69 + x3 * x39 + x53 * x68
    x71 = -x22 * x66 + x3 * x65 + x58 * x70
    x72 = x51 ** (-1.0)
    x73 = 2 * x72
    x74 = x72 * (x65 - x66)
    x75 = x72 * (x39 - x69)
    x76 = x72 * (-x41 * x49 - x44)
    x77 = x49 * x55
    x78 = -x22 * x77 + x3 * x68 + x76
    x79 = x49 * x57
    x80 = -x22 * x79 + x3 * x70 + x53 * x78 + x75
    x81 = -x22 * x60 + x3 * x71 + x58 * x80 + x74
    x82 = x72 * (x43 - x50)
    x83 = -2 * x10 * x14 * x19 * x40 * x6
    x84 = x5 * (-x31 * x46 - x83)
    x85 = x33 * boys(5, x28)
    x86 = x36 * x46 + x38 * x85
    x87 = x36 * x47 + x38 * x86 + x84
    x88 = x3 * x46 - x54 * x85
    x89 = x3 * x47 + x53 * x88 - x54 * x86
    x90 = x72 * (x42 - x56)
    x91 = x72 * (-x46 * x49 - x83)
    x92 = x3 * x55 - x54 * x88 + x91
    x93 = x3 * x57 + x53 * x92 - x54 * x89 + x90
    x94 = x49 * x70
    x95 = x34 * x54
    x96 = x3 * x37 - x95
    x97 = x39 * x49
    x98 = -x22 * x97 + x3 * x64 + x53 * x96
    x99 = x49 * x68
    x100 = x72 * (-x30 - x34 * x49)
    x101 = x100 - x22 * x99 + x3 * x96
    x102 = x72 * (x64 - x97)
    x103 = x101 * x53 + x102 - x22 * x94 + x3 * x98
    x104 = (
        x103 * x3
        + x53
        * (
            x101 * x3
            - x54 * x78
            + x73 * (2 * x10 * x14 * x19 * x29 * x3 * x6 - x95 - x99)
        )
        - x54 * x80
        + x73 * (-x94 + x98)
    )
    x105 = x103 * x16 + x81
    x106 = x23 - C[1]
    x107 = x25 * x31
    x108 = x106 * x37 + x107 * x34
    x109 = x106 * x34 + x107 * x41
    x110 = x108 * x36 + x109 * x38
    x111 = x110 * x49
    x112 = x106 * x63 + x107 * x37
    x113 = x108 * x38 + x112 * x36
    x114 = x72 * (-x111 + x113)
    x115 = x109 * x49
    x116 = x72 * (x108 - x115)
    x117 = x115 * x22
    x118 = x108 * x3 - x117
    x119 = x106 * x41 + x107 * x46
    x120 = x119 * x49
    x121 = x109 * x3 - x120 * x22
    x122 = x121 * x49
    x123 = x116 + x118 * x3 - x122 * x22
    x124 = -x111 * x22 + x113 * x3 + x118 * x53
    x125 = x109 * x36 + x119 * x38
    x126 = x125 * x49
    x127 = x110 * x3 + x121 * x53 - x126 * x22
    x128 = x127 * x49
    x129 = x114 + x123 * x53 + x124 * x3 - x128 * x22
    x130 = x103 * x17 + x129
    x131 = x72 * (x109 - x120)
    x132 = x106 * x46 + x107 * x85
    x133 = x119 * x3 - x132 * x54
    x134 = x121 * x3 + x131 - x133 * x54
    x135 = x72 * (x110 - x126)
    x136 = x119 * x36 + x132 * x38
    x137 = (
        x129 * x3
        + x53 * (x123 * x3 - x134 * x54 + x73 * (x108 * x3 - x117 - x122))
        - x54
        * (x127 * x3 + x134 * x53 + x135 - x54 * (x125 * x3 + x133 * x53 - x136 * x54))
        + x73 * (x124 - x128)
    )
    x138 = x11 * x18
    x139 = x108 * x49
    x140 = x72 * (x112 - x139)
    x141 = x139 * x22
    x142 = x118 * x49
    x143 = x140 - x142 * x22 + x3 * (x112 * x3 - x141)
    x144 = x129 + x143 * x16
    x145 = -x123 * x54 + x143 * x3 + x73 * (x112 * x3 - x141 - x142)
    x146 = x106 * x112 + x107 * x108 + x62
    x147 = x106 * x108 + x107 * x109 + x35
    x148 = x147 * x49
    x149 = x148 * x22
    x150 = x106 * x109 + x107 * x119 + x45
    x151 = x150 * x49
    x152 = x147 * x3 - x151 * x22
    x153 = x152 * x49
    x154 = x72 * (x146 - x148)
    x155 = -x153 * x22 + x154 + x3 * (x146 * x3 - x149)
    x156 = x72 * (x147 - x151)
    x157 = x106 * x119 + x107 * x132 + x84
    x158 = x143 * x17 + x155
    x159 = -x24 - A[1]
    x160 = x25 * x66
    x161 = x159 * x43 - x25 * x50
    x162 = x161 * x49
    x163 = x72 * (x159 * x65 - x160 - x162)
    x164 = x25 * x97
    x165 = x25 * x69
    x166 = x159 * x39 - x165
    x167 = x166 * x49
    x168 = x72 * (x159 * x64 - x164 - x167)
    x169 = x25 * x49
    x170 = x169 * x34
    x171 = x169 * x41
    x172 = x159 * x34 - x171
    x173 = x172 * x49
    x174 = x72 * (2 * x10 * x14 * x159 * x19 * x29 * x6 - x170 - x173)
    x175 = x159 * x37 - x170
    x176 = -x173 * x22 + x175 * x3
    x177 = x159 * x41 - x169 * x46
    x178 = x177 * x49
    x179 = x172 * x3 - x178 * x22
    x180 = x159 * x64 - x164
    x181 = -x167 * x22 + x176 * x53 + x180 * x3
    x182 = x159 * x42 - x25 * x56
    x183 = x182 * x49
    x184 = x166 * x3 + x179 * x53 - x183 * x22
    x185 = x168 + x181 * x3 - x184 * x54 + x53 * (x174 + x176 * x3 - x179 * x54)
    x186 = x159 * x65 - x160
    x187 = -x162 * x22 + x184 * x58 + x186 * x3
    x188 = x72 * (x159 * x39 - x165 - x183)
    x189 = x72 * (2 * x10 * x14 * x159 * x19 * x32 * x6 - x171 - x178)
    x190 = x159 * x46 - x169 * x85
    x191 = x177 * x3 - x190 * x54
    x192 = x159 * x47 - x169 * x86
    x193 = x182 * x3 + x191 * x53 - x192 * x54
    x194 = x159 * x48 - x169 * x87
    x195 = (
        x16 * x185
        + x163
        + x187 * x3
        - x54 * (x161 * x3 + x193 * x58 - x194 * x54)
        + x58 * (x184 * x3 + x188 - x193 * x54 + x53 * (x179 * x3 + x189 - x191 * x54))
    )
    x196 = x110 * x159 - x126 * x25 + x182 * x53
    x197 = x196 * x49
    x198 = -x111 * x25 + x113 * x159 + x166 * x53
    x199 = x72 * (-x197 + x198)
    x200 = x109 * x159 - x120 * x25 + x177 * x53
    x201 = x200 * x49
    x202 = x108 * x159 - x115 * x25 + x172 * x53
    x203 = x72 * (-x201 + x202)
    x204 = -x201 * x22 + x202 * x3
    x205 = x119 * x159 - x132 * x169 + x190 * x53
    x206 = x200 * x3 - x205 * x54
    x207 = -x197 * x22 + x198 * x3 + x204 * x53
    x208 = x125 * x159 - x136 * x169 + x192 * x53
    x209 = (
        x199
        + x207 * x3
        + x53 * (x203 + x204 * x3 - x206 * x54)
        - x54 * (x196 * x3 + x206 * x53 - x208 * x54)
    )
    x210 = x17 * x185 + x209
    x211 = x12 * x18
    x212 = x18 * x185
    x213 = x202 * x49
    x214 = x112 * x159 - x139 * x25 + x175 * x53
    x215 = x72 * (-x213 + x214)
    x216 = -x213 * x22 + x214 * x3
    x217 = -x204 * x54 + x215 + x216 * x3
    x218 = x16 * x217 + x209
    x219 = x147 * x159 - x151 * x25 + x200 * x58
    x220 = x219 * x49
    x221 = x146 * x159 - x148 * x25 + x202 * x58
    x222 = x72 * (-x220 + x221)
    x223 = -x22 * x220 + x221 * x3
    x224 = x150 * x159 - x157 * x169 + x205 * x58
    x225 = x17 * x217 + x222 + x223 * x3 - x54 * (x219 * x3 - x224 * x54)
    x226 = x18 * x217
    x227 = -x26 - A[2]
    x228 = x27 * x66
    x229 = x227 * x43 - x27 * x50
    x230 = x229 * x49
    x231 = x72 * (x227 * x65 - x228 - x230)
    x232 = x27 * x97
    x233 = x27 * x69
    x234 = x227 * x39 - x233
    x235 = x234 * x49
    x236 = x72 * (x227 * x64 - x232 - x235)
    x237 = x27 * x49
    x238 = x237 * x34
    x239 = x237 * x41
    x240 = x227 * x34 - x239
    x241 = x240 * x49
    x242 = x72 * (2 * x10 * x14 * x19 * x227 * x29 * x6 - x238 - x241)
    x243 = x227 * x37 - x238
    x244 = x243 * x3
    x245 = -x22 * x241 + x244
    x246 = x240 * x3
    x247 = x227 * x41 - x237 * x46
    x248 = x247 * x49
    x249 = x22 * x248
    x250 = x246 - x249
    x251 = x227 * x64 - x232
    x252 = -x22 * x235 + x245 * x53 + x251 * x3
    x253 = x234 * x3
    x254 = x227 * x42 - x27 * x56
    x255 = x254 * x49
    x256 = x22 * x255
    x257 = x250 * x53 + x253 - x256
    x258 = x236 + x252 * x3 - x257 * x54 + x53 * (x242 + x245 * x3 - x250 * x54)
    x259 = x227 * x65 - x228
    x260 = -x22 * x230 + x257 * x58 + x259 * x3
    x261 = x72 * (x227 * x39 - x233 - x255)
    x262 = x72 * (2 * x10 * x14 * x19 * x227 * x32 * x6 - x239 - x248)
    x263 = x247 * x3
    x264 = x227 * x46 - x237 * x85
    x265 = x264 * x54
    x266 = x263 - x265
    x267 = x254 * x3
    x268 = x227 * x47 - x237 * x86
    x269 = x268 * x54
    x270 = x266 * x53 + x267 - x269
    x271 = x227 * x48 - x237 * x87
    x272 = (
        x16 * x258
        + x231
        + x260 * x3
        - x54 * (x229 * x3 + x270 * x58 - x271 * x54)
        + x58 * (x257 * x3 + x261 - x270 * x54 + x53 * (x250 * x3 + x262 - x266 * x54))
    )
    x273 = x111 * x27
    x274 = x110 * x227 - x126 * x27
    x275 = x274 * x49
    x276 = x72 * (x113 * x227 - x273 - x275)
    x277 = x115 * x27
    x278 = x109 * x227 - x120 * x27
    x279 = x278 * x49
    x280 = x72 * (x108 * x227 - x277 - x279)
    x281 = x108 * x227 - x277
    x282 = x281 * x3
    x283 = x22 * x279
    x284 = x282 - x283
    x285 = x278 * x3
    x286 = x119 * x227 - x132 * x237
    x287 = x286 * x54
    x288 = x285 - x287
    x289 = x113 * x227 - x273
    x290 = -x22 * x275 + x284 * x53 + x289 * x3
    x291 = x125 * x227 - x136 * x237
    x292 = (
        x276
        + x290 * x3
        + x53 * (x280 + x284 * x3 - x288 * x54)
        - x54 * (x274 * x3 + x288 * x53 - x291 * x54)
    )
    x293 = x17 * x258 + x292
    x294 = x13 * x18
    x295 = x255 * x53
    x296 = x72 * (x234 * x53 - x295)
    x297 = x248 * x53
    x298 = x72 * (x240 * x53 - x297)
    x299 = x246 * x53 - x249 * x53
    x300 = x263 * x53 - x265 * x53
    x301 = x253 * x53 - x256 * x53 + x299 * x53
    x302 = (
        x296
        + x3 * x301
        + x53 * (x298 + x299 * x3 - x300 * x54)
        - x54 * (x267 * x53 - x269 * x53 + x300 * x53)
    )
    x303 = x18 * x258 + x302
    x304 = x139 * x27
    x305 = x281 * x49
    x306 = x72 * (x112 * x227 - x304 - x305)
    x307 = x112 * x227 - x304
    x308 = -x22 * x305 + x3 * x307
    x309 = -x284 * x54 + x3 * x308 + x306
    x310 = x16 * x309 + x292
    x311 = x148 * x27
    x312 = x147 * x227 - x151 * x27
    x313 = x312 * x49
    x314 = x72 * (x146 * x227 - x311 - x313)
    x315 = x146 * x227 - x311
    x316 = -x22 * x313 + x3 * x315
    x317 = x150 * x227 - x157 * x237
    x318 = x17 * x309 + x3 * x316 + x314 - x54 * (x3 * x312 - x317 * x54)
    x319 = x279 * x53
    x320 = x72 * (x281 * x53 - x319)
    x321 = x282 * x53 - x283 * x53
    x322 = x3 * x321 + x320 - x54 * (x285 * x53 - x287 * x53)
    x323 = x18 * x309 + x322
    x324 = x240 * x53
    x325 = x72 * (x243 * x53 - x324 * x49)
    x326 = x244 * x53 - x324 * x54
    x327 = -x299 * x54 + x3 * x326 + x325
    x328 = x16 * x327 + x302
    x329 = x17 * x327 + x322
    x330 = x52 ** (-2.0)
    x331 = 2 * x330
    x332 = x72 * (2 * x240 * x330 - x248 * x331)
    x333 = x246 * x331 - x249 * x331
    x334 = x18 * x327 + x3 * x333 + x332 - x54 * (x263 * x331 - x265 * x331)
    x335 = x16 * x181 + x187
    x336 = x17 * x181 + x207
    x337 = x16 * x216 + x207
    x338 = x17 * x216 + x223
    x339 = x100 + x159 * x175 - x173 * x25
    x340 = x159 * x172 - x178 * x25 + x76
    x341 = x102 + x159 * x180 - x167 * x25
    x342 = x159 * x166 - x183 * x25 + x75
    x343 = x3 * x341 - x342 * x54 + x53 * (x3 * x339 - x340 * x54)
    x344 = x159 * x186 - x162 * x25 + x74
    x345 = x159 * x177 - x169 * x190 + x91
    x346 = x159 * x182 - x169 * x192 + x90
    x347 = x159 * x161 - x169 * x194 + x82
    x348 = (
        x16 * x343
        + x3 * x344
        - x347 * x54
        + x58 * (x3 * x342 - x346 * x54 + x53 * (x3 * x340 - x345 * x54))
    )
    x349 = x116 + x159 * x202 - x201 * x25 + x340 * x53
    x350 = x131 + x159 * x200 - x169 * x205 + x345 * x53
    x351 = x114 + x159 * x198 - x197 * x25 + x342 * x53
    x352 = x135 + x159 * x196 - x169 * x208 + x346 * x53
    x353 = x3 * x351 - x352 * x54 + x53 * (x3 * x349 - x350 * x54)
    x354 = x17 * x343 + x353
    x355 = x18 * x343
    x356 = x140 + x159 * x214 - x213 * x25 + x339 * x53
    x357 = x3 * x356 - x349 * x54
    x358 = x16 * x357 + x353
    x359 = x154 + x159 * x221 - x220 * x25 + x349 * x58
    x360 = x156 + x159 * x219 - x169 * x224 + x350 * x58
    x361 = x17 * x357 + x3 * x359 - x360 * x54
    x362 = x18 * x357
    x363 = x159 * x243 - x241 * x25
    x364 = x159 * x240
    x365 = x248 * x25
    x366 = x364 - x365
    x367 = x159 * x251 - x235 * x25
    x368 = x159 * x234 - x25 * x255
    x369 = x3 * x367 - x368 * x54 + x53 * (x3 * x363 - x366 * x54)
    x370 = x159 * x259 - x230 * x25
    x371 = x159 * x247
    x372 = x169 * x264
    x373 = x371 - x372
    x374 = x159 * x254
    x375 = x169 * x268
    x376 = x374 - x375
    x377 = x159 * x229 - x169 * x271
    x378 = (
        x16 * x369
        + x3 * x370
        - x377 * x54
        + x58 * (x3 * x368 - x376 * x54 + x53 * (x3 * x366 - x373 * x54))
    )
    x379 = x159 * x281 - x25 * x279 + x366 * x53
    x380 = x159 * x278
    x381 = x169 * x286
    x382 = x373 * x53 + x380 - x381
    x383 = x159 * x289 - x25 * x275 + x368 * x53
    x384 = x159 * x274 - x169 * x291 + x376 * x53
    x385 = x3 * x383 - x384 * x54 + x53 * (x3 * x379 - x382 * x54)
    x386 = x17 * x369 + x385
    x387 = x159 * x324 - x25 * x297
    x388 = x371 * x53 - x372 * x53
    x389 = x234 * x53
    x390 = x159 * x389 - x25 * x295
    x391 = x374 * x53 - x375 * x53
    x392 = x3 * x390 - x391 * x54 + x53 * (x3 * x387 - x388 * x54)
    x393 = x18 * x369 + x392
    x394 = x159 * x307 - x25 * x305 + x363 * x53
    x395 = x3 * x394 - x379 * x54
    x396 = x16 * x395 + x385
    x397 = x159 * x315 - x25 * x313 + x379 * x58
    x398 = x159 * x312 - x169 * x317 + x382 * x58
    x399 = x17 * x395 + x3 * x397 - x398 * x54
    x400 = x281 * x53
    x401 = x159 * x400 - x25 * x319 + x387 * x53
    x402 = x380 * x53 - x381 * x53 + x388 * x53
    x403 = x3 * x401 - x402 * x54
    x404 = x18 * x395 + x403
    x405 = x243 * x53
    x406 = x159 * x405 - x169 * x324
    x407 = x3 * x406 - x387 * x54
    x408 = x16 * x407 + x392
    x409 = x17 * x407 + x403
    x410 = x331 * x364 - x331 * x365
    x411 = x331 * x371 - x331 * x372
    x412 = x18 * x407 + x3 * x410 - x411 * x54
    x413 = x16 * x252 + x260
    x414 = x17 * x252 + x290
    x415 = x18 * x252 + x301
    x416 = x16 * x308 + x290
    x417 = x17 * x308 + x316
    x418 = x18 * x308 + x321
    x419 = x16 * x326 + x301
    x420 = x17 * x326 + x321
    x421 = x18 * x326 + x333
    x422 = x100 + x227 * x243 - x241 * x27
    x423 = x227 * x240
    x424 = x248 * x27
    x425 = x423 - x424 + x76
    x426 = x102 + x227 * x251 - x235 * x27
    x427 = x227 * x234 - x255 * x27 + x75
    x428 = x3 * x426 - x427 * x54 + x53 * (x3 * x422 - x425 * x54)
    x429 = x227 * x259 - x230 * x27 + x74
    x430 = x227 * x247
    x431 = x237 * x264
    x432 = x430 - x431 + x91
    x433 = x227 * x254
    x434 = x237 * x268
    x435 = x433 - x434 + x90
    x436 = x227 * x229 - x237 * x271 + x82
    x437 = (
        x16 * x428
        + x3 * x429
        - x436 * x54
        + x58 * (x3 * x427 - x435 * x54 + x53 * (x3 * x425 - x432 * x54))
    )
    x438 = x116 + x227 * x281 - x27 * x279
    x439 = x227 * x278
    x440 = x237 * x286
    x441 = x131 + x439 - x440
    x442 = x114 + x227 * x289 - x27 * x275
    x443 = x135 + x227 * x274 - x237 * x291
    x444 = x3 * x442 - x443 * x54 + x53 * (x3 * x438 - x441 * x54)
    x445 = x17 * x428 + x444
    x446 = x227 * x324 - x27 * x297 + x425 * x53
    x447 = x430 * x53 - x431 * x53 + x432 * x53
    x448 = x227 * x389 - x27 * x295 + x427 * x53
    x449 = x433 * x53 - x434 * x53 + x435 * x53
    x450 = x3 * x448 - x449 * x54 + x53 * (x3 * x446 - x447 * x54)
    x451 = x18 * x428 + x450
    x452 = x140 + x227 * x307 - x27 * x305
    x453 = x3 * x452 - x438 * x54
    x454 = x16 * x453 + x444
    x455 = x154 + x227 * x315 - x27 * x313
    x456 = x156 + x227 * x312 - x237 * x317
    x457 = x17 * x453 + x3 * x455 - x456 * x54
    x458 = x227 * x400 - x27 * x319 + x438 * x53
    x459 = x439 * x53 - x440 * x53 + x441 * x53
    x460 = x3 * x458 - x459 * x54
    x461 = x18 * x453 + x460
    x462 = x227 * x405 - x237 * x324 + x422 * x53
    x463 = x3 * x462 - x446 * x54
    x464 = x16 * x463 + x450
    x465 = x17 * x463 + x460
    x466 = x331 * x423 - x331 * x424 + x446 * x58
    x467 = x331 * x430 - x331 * x431 + x447 * x58
    x468 = x18 * x463 + x3 * x466 - x467 * x54
    x469 = x16 * x341 + x344
    x470 = x17 * x341 + x351
    x471 = x16 * x356 + x351
    x472 = x17 * x356 + x359
    x473 = x159 * x341 + 2 * x168 - x169 * x342
    x474 = (
        x159 * x351
        - x169 * x352
        + 2 * x199
        + x53 * (x159 * x342 - x169 * x346 + 2 * x188)
    )
    x475 = (
        x159 * x356
        - x169 * x349
        + 2 * x215
        + x53 * (x159 * x339 - x169 * x340 + 2 * x174)
    )
    x476 = x159 * x367 - x169 * x368 + x236
    x477 = x159 * x370 + x16 * x476 - x169 * x377 + x231
    x478 = x159 * x383 - x169 * x384 + x276 + x53 * (x159 * x368 - x169 * x376 + x261)
    x479 = x17 * x476 + x478
    x480 = x159 * x390 - x169 * x391 + x296
    x481 = x18 * x476 + x480
    x482 = x159 * x394 - x169 * x379 + x306 + x53 * (x159 * x363 - x169 * x366 + x242)
    x483 = x16 * x482 + x478
    x484 = (
        x159 * x397
        - x169 * x398
        + x17 * x482
        + x314
        + x58
        * (x159 * x379 - x169 * x382 + x280 + x53 * (x159 * x366 - x169 * x373 + x262))
    )
    x485 = x159 * x401 - x169 * x402 + x320 + x53 * (x159 * x387 - x169 * x388 + x298)
    x486 = x18 * x482 + x485
    x487 = x159 * x406 - x169 * x387 + x325
    x488 = x16 * x487 + x480
    x489 = x17 * x487 + x485
    x490 = x159 * x410 - x169 * x411 + x18 * x487 + x332
    x491 = x16 * x367 + x370
    x492 = x17 * x367 + x383
    x493 = x18 * x367 + x390
    x494 = x16 * x394 + x383
    x495 = x17 * x394 + x397
    x496 = x18 * x394 + x401
    x497 = x16 * x406 + x390
    x498 = x17 * x406 + x401
    x499 = x18 * x406 + x410
    x500 = x159 * x426 - x169 * x427
    x501 = x159 * x429 + x16 * x500 - x169 * x436
    x502 = x159 * x442 - x169 * x443 + x53 * (x159 * x427 - x169 * x435)
    x503 = x17 * x500 + x502
    x504 = x159 * x448 - x169 * x449
    x505 = x18 * x500 + x504
    x506 = x159 * x452 - x169 * x438 + x53 * (x159 * x422 - x169 * x425)
    x507 = x16 * x506 + x502
    x508 = (
        x159 * x455
        - x169 * x456
        + x17 * x506
        + x58 * (x159 * x438 - x169 * x441 + x53 * (x159 * x425 - x169 * x432))
    )
    x509 = x159 * x458 - x169 * x459 + x53 * (x159 * x446 - x169 * x447)
    x510 = x18 * x506 + x509
    x511 = x159 * x462 - x169 * x446
    x512 = x16 * x511 + x504
    x513 = x17 * x511 + x509
    x514 = x159 * x466 - x169 * x467 + x18 * x511
    x515 = x16 * x426 + x429
    x516 = x17 * x426 + x442
    x517 = x18 * x426 + x448
    x518 = x16 * x452 + x442
    x519 = x17 * x452 + x455
    x520 = x18 * x452 + x458
    x521 = x16 * x462 + x448
    x522 = x17 * x462 + x458
    x523 = x18 * x462 + x466
    x524 = x227 * x426 + 2 * x236 - x237 * x427
    x525 = x227 * x442 - x237 * x443 + 2 * x276
    x526 = (
        x227 * x448
        - x237 * x449
        + 2 * x296
        + x53 * (x227 * x427 - x237 * x435 + 2 * x261)
    )
    x527 = x227 * x452 - x237 * x438 + 2 * x306
    x528 = (
        x227 * x458
        - x237 * x459
        + 2 * x320
        + x53 * (x227 * x438 - x237 * x441 + 2 * x280)
    )
    x529 = (
        x227 * x462
        - x237 * x446
        + 2 * x325
        + x53 * (x227 * x422 - x237 * x425 + 2 * x242)
    )

    # 162 item(s)
    S = numpy.array(
        [
            x104 * x16
            + x105 * x11
            + x3 * x81
            - x54
            * (x3 * x59 - x54 * (x3 * x48 - x54 * x87 + x58 * x89) + x58 * x93 + x82)
            + x58
            * (
                x3 * x80
                + x53
                * (
                    x3 * x78
                    - x54 * x92
                    + x73 * (2 * x10 * x14 * x19 * x3 * x32 * x6 - x67 - x77)
                )
                - x54 * x93
                + x73 * (x70 - x79)
            )
            + x73 * (-x60 + x71),
            x104 * x17 + x11 * x130 + x137,
            x103 * x138 + x104 * x18,
            x11 * x144 + x137 + x145 * x16,
            x11 * x158
            + x145 * x17
            + x155 * x3
            - x54 * (x152 * x3 + x156 - x54 * (x150 * x3 - x157 * x54))
            + x73 * (x146 * x3 - x149 - x153),
            x138 * x143 + x145 * x18,
            0,
            0,
            0,
            x105 * x12 + x195,
            x12 * x130 + x210,
            x103 * x211 + x212,
            x12 * x144 + x218,
            x12 * x158 + x225,
            x143 * x211 + x226,
            0,
            0,
            0,
            x105 * x13 + x272,
            x13 * x130 + x293,
            x103 * x294 + x303,
            x13 * x144 + x310,
            x13 * x158 + x318,
            x143 * x294 + x323,
            x328,
            x329,
            x334,
            x11 * x335 + x195,
            x11 * x336 + x210,
            x138 * x181 + x212,
            x11 * x337 + x218,
            x11 * x338 + x225,
            x138 * x216 + x226,
            0,
            0,
            0,
            x12 * x335 + x348,
            x12 * x336 + x354,
            x181 * x211 + x355,
            x12 * x337 + x358,
            x12 * x338 + x361,
            x211 * x216 + x362,
            0,
            0,
            0,
            x13 * x335 + x378,
            x13 * x336 + x386,
            x181 * x294 + x393,
            x13 * x337 + x396,
            x13 * x338 + x399,
            x216 * x294 + x404,
            x408,
            x409,
            x412,
            x11 * x413 + x272,
            x11 * x414 + x293,
            x11 * x415 + x303,
            x11 * x416 + x310,
            x11 * x417 + x318,
            x11 * x418 + x323,
            x11 * x419 + x328,
            x11 * x420 + x329,
            x11 * x421 + x334,
            x12 * x413 + x378,
            x12 * x414 + x386,
            x12 * x415 + x393,
            x12 * x416 + x396,
            x12 * x417 + x399,
            x12 * x418 + x404,
            x12 * x419 + x408,
            x12 * x420 + x409,
            x12 * x421 + x412,
            x13 * x413 + x437,
            x13 * x414 + x445,
            x13 * x415 + x451,
            x13 * x416 + x454,
            x13 * x417 + x457,
            x13 * x418 + x461,
            x13 * x419 + x464,
            x13 * x420 + x465,
            x13 * x421 + x468,
            x11 * x469 + x348,
            x11 * x470 + x354,
            x138 * x341 + x355,
            x11 * x471 + x358,
            x11 * x472 + x361,
            x138 * x356 + x362,
            0,
            0,
            0,
            x12 * x469 + x159 * x344 + x16 * x473 + 2 * x163 - x169 * x347,
            x12 * x470 + x17 * x473 + x474,
            x18 * x473 + x211 * x341,
            x12 * x471 + x16 * x475 + x474,
            x12 * x472
            + x159 * x359
            - x169 * x360
            + x17 * x475
            + 2 * x222
            + x58
            * (
                x159 * x349
                - x169 * x350
                + 2 * x203
                + x53 * (x159 * x340 - x169 * x345 + 2 * x189)
            ),
            x18 * x475 + x211 * x356,
            0,
            0,
            0,
            x13 * x469 + x477,
            x13 * x470 + x479,
            x294 * x341 + x481,
            x13 * x471 + x483,
            x13 * x472 + x484,
            x294 * x356 + x486,
            x488,
            x489,
            x490,
            x11 * x491 + x378,
            x11 * x492 + x386,
            x11 * x493 + x393,
            x11 * x494 + x396,
            x11 * x495 + x399,
            x11 * x496 + x404,
            x11 * x497 + x408,
            x11 * x498 + x409,
            x11 * x499 + x412,
            x12 * x491 + x477,
            x12 * x492 + x479,
            x12 * x493 + x481,
            x12 * x494 + x483,
            x12 * x495 + x484,
            x12 * x496 + x486,
            x12 * x497 + x488,
            x12 * x498 + x489,
            x12 * x499 + x490,
            x13 * x491 + x501,
            x13 * x492 + x503,
            x13 * x493 + x505,
            x13 * x494 + x507,
            x13 * x495 + x508,
            x13 * x496 + x510,
            x13 * x497 + x512,
            x13 * x498 + x513,
            x13 * x499 + x514,
            x11 * x515 + x437,
            x11 * x516 + x445,
            x11 * x517 + x451,
            x11 * x518 + x454,
            x11 * x519 + x457,
            x11 * x520 + x461,
            x11 * x521 + x464,
            x11 * x522 + x465,
            x11 * x523 + x468,
            x12 * x515 + x501,
            x12 * x516 + x503,
            x12 * x517 + x505,
            x12 * x518 + x507,
            x12 * x519 + x508,
            x12 * x520 + x510,
            x12 * x521 + x512,
            x12 * x522 + x513,
            x12 * x523 + x514,
            x13 * x515 + x16 * x524 + x227 * x429 + 2 * x231 - x237 * x436,
            x13 * x516 + x17 * x524 + x525,
            x13 * x517 + x18 * x524 + x526,
            x13 * x518 + x16 * x527 + x525,
            x13 * x519 + x17 * x527 + x227 * x455 - x237 * x456 + 2 * x314,
            x13 * x520 + x18 * x527 + x528,
            x13 * x521 + x16 * x529 + x526,
            x13 * x522 + x17 * x529 + x528,
            x13 * x523
            + x18 * x529
            + x227 * x466
            - x237 * x467
            + 2 * x332
            + x58
            * (
                x227 * x446
                - x237 * x447
                + 2 * x298
                + x53 * (x227 * x425 - x237 * x432 + 2 * x262)
            ),
        ]
    )
    return S


def eri_2112(a, A, b, B, c, C, d, D):
    """Cartesian [dp|pd] 2-electron electron repulsion integral.

    Generated code; DO NOT modify by hand!"""

    x0 = a + b
    x1 = x0 ** (-1.0)
    x2 = -x1 * (a * A[0] + b * B[0])
    x3 = -x2 - A[0]
    x4 = c + d
    x5 = x4 ** (-1.0)
    x6 = x5 * (c * C[0] + d * D[0])
    x7 = x6 - C[0]
    x8 = x0 + x4
    x9 = x8 ** (-1.0)
    x10 = -x2 - x6
    x11 = x5 * (c * C[1] + d * D[1])
    x12 = -x1 * (a * A[1] + b * B[1])
    x13 = -x11 - x12
    x14 = -x1 * (a * A[2] + b * B[2])
    x15 = -x14 - x5 * (c * C[2] + d * D[2])
    x16 = x0 * x4
    x17 = x16 * x9 * (x10**2 + x13**2 + x15**2)
    x18 = boys(2, x17)
    x19 = numpy.pi**2.5
    x20 = (x16 + numpy.sqrt(x8)) ** (-1.0)
    x21 = A[0] - B[0]
    x22 = A[1] - B[1]
    x23 = A[2] - B[2]
    x24 = numpy.exp(-a * b * x1 * (x21**2 + x22**2 + x23**2))
    x25 = C[0] - D[0]
    x26 = C[1] - D[1]
    x27 = C[2] - D[2]
    x28 = x27**2
    x29 = numpy.exp(-c * d * x5 * (x25**2 + x26**2 + x28))
    x30 = 2 * x19 * x20 * x24 * x29
    x31 = x18 * x30
    x32 = x0 * x9
    x33 = x10 * x32
    x34 = boys(3, x17)
    x35 = x30 * x34
    x36 = x31 * x7 + x33 * x35
    x37 = x32 * x36
    x38 = boys(1, x17)
    x39 = x30 * x38
    x40 = x31 * x33 + x39 * x7
    x41 = 2 * c + 2 * d
    x42 = x41 ** (-1.0)
    x43 = 2 * x42
    x44 = -2 * x19 * x20 * x24 * x29 * x38
    x45 = x42 * (-x31 * x32 - x44)
    x46 = x10 * x37 + x40 * x7 + x45
    x47 = -2 * x18 * x19 * x20 * x24 * x29
    x48 = x42 * (-x32 * x35 - x47)
    x49 = boys(4, x17)
    x50 = x30 * x49
    x51 = x33 * x50 + x35 * x7
    x52 = x32 * x51
    x53 = x10 * x52 + x36 * x7 + x48
    x54 = x33 * x53 + x43 * (-x37 + x40) + x46 * x7
    x55 = -2 * x19 * x20 * x24 * x29 * x34
    x56 = x42 * (-x32 * x50 - x55)
    x57 = x30 * boys(5, x17)
    x58 = x33 * x57 + x50 * x7
    x59 = x32 * x58
    x60 = x10 * x59 + x51 * x7 + x56
    x61 = x33 * x60 + x43 * (x36 - x52) + x53 * x7
    x62 = x4 * x9
    x63 = x61 * x62
    x64 = x60 * x62
    x65 = 2 * a + 2 * b
    x66 = x41 + x65
    x67 = x66 ** (-1.0)
    x68 = x10 * x62
    x69 = x3 * x50 - x57 * x68
    x70 = x58 * x62
    x71 = -x10 * x70 + x3 * x51 + x67 * x69
    x72 = 2 * x67
    x73 = -x10 * x64 + x3 * x53 + x71 * x72
    x74 = 3 * x67
    x75 = -x10 * x63 + x3 * x54 + x73 * x74
    x76 = x62 * x75
    x77 = x32 * x40
    x78 = boys(0, x17)
    x79 = x30 * x78
    x80 = x33 * x39 + x7 * x79
    x81 = x42 * (2 * x19 * x20 * x24 * x29 * x78 - x32 * x39)
    x82 = x10 * x77 + x7 * x80 + x81
    x83 = x33 * x46 + x43 * (-x77 + x80) + x7 * x82
    x84 = x54 * x62
    x85 = x53 * x62
    x86 = x50 * x68
    x87 = x3 * x35 - x86
    x88 = x51 * x62
    x89 = -x10 * x88 + x3 * x36 + x67 * x87
    x90 = -x10 * x85 + x3 * x46 + x72 * x89
    x91 = -x10 * x84 + x3 * x83 + x74 * x90
    x92 = x65 ** (-1.0)
    x93 = 2 * x92
    x94 = x92 * (x83 - x84)
    x95 = x92 * (x46 - x85)
    x96 = x62 * x73
    x97 = x92 * (x36 - x88)
    x98 = x92 * (-x50 * x62 - x55)
    x99 = x62 * x69
    x100 = -x10 * x99 + x3 * x87 + x98
    x101 = x62 * x71
    x102 = -x10 * x101 + x100 * x67 + x3 * x89 + x97
    x103 = -x10 * x96 + x102 * x72 + x3 * x90 + x95
    x104 = -x10 * x76 + x103 * x74 + x3 * x91 + x94
    x105 = x92 * (x54 - x63)
    x106 = -2 * x19 * x20 * x24 * x29 * x49
    x107 = x42 * (-x106 - x32 * x57)
    x108 = x30 * boys(6, x17)
    x109 = x108 * x33 + x57 * x7
    x110 = x107 + x109 * x33 + x58 * x7
    x111 = x110 * x33 + x43 * (x51 - x59) + x60 * x7
    x112 = -x108 * x68 + x3 * x57
    x113 = -x109 * x68 + x112 * x67 + x3 * x58
    x114 = -x110 * x68 + x113 * x72 + x3 * x60
    x115 = x92 * (x53 - x64)
    x116 = x92 * (x51 - x70)
    x117 = x92 * (-x106 - x57 * x62)
    x118 = -x112 * x68 + x117 + x3 * x69
    x119 = -x113 * x68 + x116 + x118 * x67 + x3 * x71
    x120 = -x114 * x68 + x115 + x119 * x72 + x3 * x73
    x121 = x62 * x90
    x122 = x46 * x62
    x123 = x35 * x68
    x124 = -x123 + x3 * x31
    x125 = x36 * x62
    x126 = -x10 * x125 + x124 * x67 + x3 * x40
    x127 = -x10 * x122 + x126 * x72 + x3 * x82
    x128 = x92 * (-x122 + x82)
    x129 = x92 * (-x125 + x40)
    x130 = x92 * (-x35 * x62 - x47)
    x131 = x62 * x87
    x132 = -x10 * x131 + x124 * x3 + x130
    x133 = x62 * x89
    x134 = -x10 * x133 + x126 * x3 + x129 + x132 * x67
    x135 = -x10 * x121 + x127 * x3 + x128 + x134 * x72
    x136 = (
        -x103 * x68
        + x135 * x3
        + x72
        * (
            -x102 * x68
            + x134 * x3
            + x67
            * (
                -x100 * x68
                + x132 * x3
                + x93 * (-x123 - x131 + 2 * x18 * x19 * x20 * x24 * x29 * x3)
            )
            + x93 * (x126 - x133)
        )
        + x93 * (-x121 + x127)
    )
    x137 = x126 * x62
    x138 = x31 * x68
    x139 = -x138 + x3 * x39
    x140 = x40 * x62
    x141 = -x10 * x140 + x139 * x67 + x3 * x80
    x142 = x124 * x62
    x143 = x92 * (-x31 * x62 - x44)
    x144 = -x10 * x142 + x139 * x3 + x143
    x145 = x92 * (-x140 + x80)
    x146 = -x10 * x137 + x141 * x3 + x144 * x67 + x145
    x147 = (
        -x134 * x68
        + x146 * x3
        + x67
        * (
            -x132 * x68
            + x144 * x3
            + x93 * (-x138 - x142 + 2 * x19 * x20 * x24 * x29 * x3 * x38)
        )
        + x93 * (-x137 + x141)
    )
    x148 = x147 * x25
    x149 = x146 * x25
    x150 = x104 + x135 * x25 + x25 * (x135 + x149)
    x151 = x146 * x26
    x152 = x11 - C[1]
    x153 = x13 * x32
    x154 = x152 * x39 + x153 * x31
    x155 = x152 * x31 + x153 * x35
    x156 = x155 * x32
    x157 = x10 * x156 + x154 * x7
    x158 = x157 * x62
    x159 = x152 * x79 + x153 * x39
    x160 = x154 * x32
    x161 = x10 * x160 + x159 * x7
    x162 = x92 * (-x158 + x161)
    x163 = x155 * x62
    x164 = x92 * (x154 - x163)
    x165 = x10 * x163
    x166 = x154 * x3 - x165
    x167 = x152 * x35 + x153 * x50
    x168 = x167 * x62
    x169 = x10 * x168
    x170 = x155 * x3 - x169
    x171 = x170 * x62
    x172 = -x10 * x171 + x164 + x166 * x3
    x173 = -x10 * x158 + x161 * x3 + x166 * x67
    x174 = x167 * x32
    x175 = x10 * x174 + x155 * x7
    x176 = x175 * x62
    x177 = -x10 * x176 + x157 * x3 + x170 * x67
    x178 = x177 * x62
    x179 = -x10 * x178 + x162 + x172 * x67 + x173 * x3
    x180 = x151 + x179
    x181 = x42 * (x154 - x156)
    x182 = x157 * x7 + x175 * x33 + x181
    x183 = x182 * x62
    x184 = x42 * (x159 - x160)
    x185 = x157 * x33 + x161 * x7 + x184
    x186 = x92 * (-x183 + x185)
    x187 = -x10 * x183 + x177 * x72 + x185 * x3
    x188 = x42 * (x155 - x174)
    x189 = x152 * x50 + x153 * x57
    x190 = x189 * x32
    x191 = x10 * x190 + x167 * x7
    x192 = x175 * x7 + x188 + x191 * x33
    x193 = x192 * x62
    x194 = x189 * x62
    x195 = -x10 * x194 + x167 * x3
    x196 = x191 * x62
    x197 = -x10 * x196 + x175 * x3 + x195 * x67
    x198 = -x10 * x193 + x182 * x3 + x197 * x72
    x199 = x198 * x62
    x200 = x92 * (x157 - x176)
    x201 = x92 * (x155 - x168)
    x202 = x195 * x62
    x203 = -x10 * x202 + x170 * x3 + x201
    x204 = x197 * x62
    x205 = -x10 * x204 + x177 * x3 + x200 + x203 * x67
    x206 = -x10 * x199 + x186 + x187 * x3 + x205 * x72
    x207 = x135 * x26 + x180 * x25 + x206
    x208 = x147 * x26
    x209 = (
        x179 * x3
        - x205 * x68
        + x67 * (x172 * x3 - x203 * x68 + x93 * (x154 * x3 - x165 - x171))
        + x93 * (x173 - x178)
    )
    x210 = x208 + x209
    x211 = x92 * (x167 - x194)
    x212 = x108 * x153 + x152 * x57
    x213 = x189 * x3 - x212 * x68
    x214 = x195 * x3 + x211 - x213 * x68
    x215 = x92 * (x175 - x196)
    x216 = x189 * x7 + x212 * x33
    x217 = x191 * x3 + x213 * x67 - x216 * x68
    x218 = x197 * x3 + x214 * x67 + x215 - x217 * x68
    x219 = x92 * (x182 - x193)
    x220 = x42 * (x167 - x190)
    x221 = x191 * x7 + x216 * x33 + x220
    x222 = (
        x206 * x3
        - x68
        * (x198 * x3 + x218 * x72 + x219 - x68 * (x192 * x3 + x217 * x72 - x221 * x68))
        + x72
        * (
            x205 * x3
            - x218 * x68
            + x67 * (x203 * x3 - x214 * x68 + x93 * (x155 * x3 - x169 - x202))
            + x93 * (x177 - x204)
        )
        + x93 * (x187 - x199)
    )
    x223 = x135 * x27 + x149 * x27
    x224 = x13 * x156 + x152 * x154 + x45
    x225 = x13 * x174 + x152 * x155 + x48
    x226 = x224 * x7 + x225 * x33
    x227 = x226 * x62
    x228 = x13 * x160 + x152 * x159 + x81
    x229 = x224 * x33 + x228 * x7
    x230 = x92 * (-x227 + x229)
    x231 = x225 * x62
    x232 = x92 * (x224 - x231)
    x233 = x10 * x231
    x234 = x224 * x3 - x233
    x235 = x13 * x190 + x152 * x167 + x56
    x236 = x235 * x62
    x237 = -x10 * x236 + x225 * x3
    x238 = x237 * x62
    x239 = -x10 * x238 + x232 + x234 * x3
    x240 = -x10 * x227 + x229 * x3 + x234 * x67
    x241 = x225 * x7 + x235 * x33
    x242 = x241 * x62
    x243 = -x10 * x242 + x226 * x3 + x237 * x67
    x244 = x243 * x62
    x245 = -x10 * x244 + x230 + x239 * x67 + x240 * x3
    x246 = x179 * x26 + x245
    x247 = x180 * x26 + x246
    x248 = x92 * (x225 - x236)
    x249 = x107 + x152 * x189 + x153 * x212
    x250 = x235 * x3 - x249 * x68
    x251 = x237 * x3 + x248 - x250 * x68
    x252 = x92 * (x226 - x242)
    x253 = x235 * x7 + x249 * x33
    x254 = (
        x209 * x26
        + x245 * x3
        + x67 * (x239 * x3 - x251 * x68 + x93 * (x224 * x3 - x233 - x238))
        - x68
        * (x243 * x3 + x251 * x67 + x252 - x68 * (x241 * x3 + x250 * x67 - x253 * x68))
        + x93 * (x240 - x244)
    )
    x255 = x179 * x27
    x256 = x151 * x27 + x255
    x257 = x209 * x27
    x258 = x21 * x28
    x259 = x154 * x62
    x260 = x92 * (x159 - x259)
    x261 = x10 * x259
    x262 = x166 * x62
    x263 = -x10 * x262 + x260 + x3 * (x159 * x3 - x261)
    x264 = x25 * x263
    x265 = x179 * x25 + x206 + x25 * (x179 + x264)
    x266 = -x172 * x68 + x263 * x3 + x93 * (x159 * x3 - x261 - x262)
    x267 = x25 * x266
    x268 = x26 * x263
    x269 = x224 * x62
    x270 = x92 * (x228 - x269)
    x271 = x10 * x269
    x272 = x234 * x62
    x273 = -x10 * x272 + x270 + x3 * (x228 * x3 - x271)
    x274 = x268 + x273
    x275 = x246 + x25 * x274
    x276 = x26 * x266
    x277 = -x239 * x68 + x273 * x3 + x93 * (x228 * x3 - x271 - x272)
    x278 = x276 + x277
    x279 = x255 + x264 * x27
    x280 = x152 * x228 + x153 * x224 + 2 * x184
    x281 = x152 * x224 + x153 * x225 + 2 * x181
    x282 = x281 * x62
    x283 = x10 * x282
    x284 = x152 * x225 + x153 * x235 + 2 * x188
    x285 = x284 * x62
    x286 = -x10 * x285 + x281 * x3
    x287 = x286 * x62
    x288 = x92 * (x280 - x282)
    x289 = -x10 * x287 + x288 + x3 * (x280 * x3 - x283)
    x290 = x92 * (x281 - x285)
    x291 = x152 * x235 + x153 * x249 + 2 * x220
    x292 = x26 * x273 + x26 * x274 + x289
    x293 = x268 * x27 + x27 * x273
    x294 = -x12 - A[1]
    x295 = x13 * x84
    x296 = -x13 * x63 + x294 * x54
    x297 = x296 * x62
    x298 = x92 * (x294 * x83 - x295 - x297)
    x299 = x122 * x13
    x300 = x13 * x85
    x301 = x294 * x46 - x300
    x302 = x301 * x62
    x303 = x92 * (x294 * x82 - x299 - x302)
    x304 = x294 * x82 - x299
    x305 = x13 * x62
    x306 = x305 * x35
    x307 = x294 * x31 - x306
    x308 = x305 * x50
    x309 = x294 * x35 - x308
    x310 = x309 * x62
    x311 = -x10 * x310 + x3 * x307
    x312 = x125 * x13
    x313 = x294 * x40 - x312
    x314 = x13 * x88
    x315 = x294 * x36 - x314
    x316 = x315 * x62
    x317 = -x10 * x316 + x3 * x313 + x311 * x67
    x318 = -x10 * x302 + x3 * x304 + x317 * x72
    x319 = -x13 * x64 + x294 * x53
    x320 = x319 * x62
    x321 = x294 * x50 - x305 * x57
    x322 = x321 * x62
    x323 = -x10 * x322 + x3 * x309
    x324 = -x13 * x70 + x294 * x51
    x325 = x324 * x62
    x326 = -x10 * x325 + x3 * x315 + x323 * x67
    x327 = -x10 * x320 + x3 * x301 + x326 * x72
    x328 = x92 * (x294 * x40 - x312 - x316)
    x329 = x92 * (2 * x18 * x19 * x20 * x24 * x29 * x294 - x306 - x310)
    x330 = (
        x3 * x318
        + x303
        - x327 * x68
        + x72 * (x3 * x317 - x326 * x68 + x328 + x67 * (x3 * x311 - x323 * x68 + x329))
    )
    x331 = x13 * x140
    x332 = x313 * x62
    x333 = x92 * (x294 * x80 - x331 - x332)
    x334 = x305 * x31
    x335 = x307 * x62
    x336 = x92 * (2 * x19 * x20 * x24 * x29 * x294 * x38 - x334 - x335)
    x337 = x294 * x39 - x334
    x338 = -x10 * x335 + x3 * x337
    x339 = x294 * x80 - x331
    x340 = -x10 * x332 + x3 * x339 + x338 * x67
    x341 = x3 * x340 - x317 * x68 + x333 + x67 * (x3 * x338 - x311 * x68 + x336)
    x342 = x25 * x341
    x343 = x294 * x83 - x295
    x344 = -x10 * x297 + x3 * x343 + x327 * x74
    x345 = x92 * (x294 * x46 - x300 - x320)
    x346 = -x110 * x305 + x294 * x60
    x347 = -x108 * x305 + x294 * x57
    x348 = x3 * x321 - x347 * x68
    x349 = -x109 * x305 + x294 * x58
    x350 = x3 * x324 + x348 * x67 - x349 * x68
    x351 = x3 * x319 - x346 * x68 + x350 * x72
    x352 = x92 * (x294 * x36 - x314 - x325)
    x353 = x92 * (2 * x19 * x20 * x24 * x29 * x294 * x34 - x308 - x322)
    x354 = -x111 * x305 + x294 * x61
    x355 = (
        x25 * x330
        + x25 * (x330 + x342)
        + x298
        + x3 * x344
        - x68 * (x296 * x3 + x351 * x74 - x354 * x68)
        + x74
        * (
            x3 * x327
            + x345
            - x351 * x68
            + x72
            * (x3 * x326 - x350 * x68 + x352 + x67 * (x3 * x323 - x348 * x68 + x353))
        )
    )
    x356 = x26 * x341
    x357 = -x13 * x176 + x157 * x294 + x315 * x67
    x358 = x357 * x62
    x359 = -x13 * x158 + x161 * x294 + x313 * x67
    x360 = x92 * (-x358 + x359)
    x361 = -x13 * x168 + x155 * x294 + x309 * x67
    x362 = x361 * x62
    x363 = -x13 * x163 + x154 * x294 + x307 * x67
    x364 = x92 * (-x362 + x363)
    x365 = -x10 * x362 + x3 * x363
    x366 = -x13 * x194 + x167 * x294 + x321 * x67
    x367 = x366 * x62
    x368 = -x10 * x367 + x3 * x361
    x369 = -x10 * x358 + x3 * x359 + x365 * x67
    x370 = -x13 * x196 + x175 * x294 + x324 * x67
    x371 = x370 * x62
    x372 = -x10 * x371 + x3 * x357 + x368 * x67
    x373 = x3 * x369 + x360 - x372 * x68 + x67 * (x3 * x365 + x364 - x368 * x68)
    x374 = x356 + x373
    x375 = -x13 * x193 + x182 * x294 + x319 * x67
    x376 = x375 * x62
    x377 = -x13 * x183 + x185 * x294 + x301 * x67
    x378 = x92 * (-x376 + x377)
    x379 = -x10 * x376 + x3 * x377 + x372 * x72
    x380 = x92 * (x357 - x371)
    x381 = x92 * (x361 - x367)
    x382 = x189 * x294 - x212 * x305 + x347 * x67
    x383 = x3 * x366 - x382 * x68
    x384 = x191 * x294 - x216 * x305 + x349 * x67
    x385 = x3 * x370 + x383 * x67 - x384 * x68
    x386 = x192 * x294 - x221 * x305 + x346 * x67
    x387 = (
        x3 * x379
        + x378
        - x68 * (x3 * x375 + x385 * x72 - x386 * x68)
        + x72 * (x3 * x372 + x380 - x385 * x68 + x67 * (x3 * x368 + x381 - x383 * x68))
    )
    x388 = x25 * x374 + x26 * x330 + x387
    x389 = x27 * x330 + x27 * x342
    x390 = -x13 * x242 + x226 * x294 + x370 * x72
    x391 = x390 * x62
    x392 = -x13 * x227 + x229 * x294 + x357 * x72
    x393 = x92 * (-x391 + x392)
    x394 = -x13 * x236 + x225 * x294 + x366 * x72
    x395 = x394 * x62
    x396 = -x13 * x231 + x224 * x294 + x361 * x72
    x397 = x92 * (-x395 + x396)
    x398 = -x10 * x395 + x3 * x396
    x399 = x235 * x294 - x249 * x305 + x382 * x72
    x400 = x3 * x394 - x399 * x68
    x401 = -x10 * x391 + x3 * x392 + x398 * x67
    x402 = x241 * x294 - x253 * x305 + x384 * x72
    x403 = (
        x26 * x373
        + x3 * x401
        + x393
        + x67 * (x3 * x398 + x397 - x400 * x68)
        - x68 * (x3 * x390 + x400 * x67 - x402 * x68)
    )
    x404 = x26 * x374 + x403
    x405 = x27 * x373
    x406 = x27 * x356 + x405
    x407 = x22 * x28
    x408 = x28 * x341
    x409 = x363 * x62
    x410 = -x13 * x259 + x159 * x294 + x337 * x67
    x411 = x92 * (-x409 + x410)
    x412 = -x10 * x409 + x3 * x410
    x413 = x3 * x412 - x365 * x68 + x411
    x414 = x25 * x413
    x415 = x25 * x373 + x25 * (x373 + x414) + x387
    x416 = x26 * x413
    x417 = x396 * x62
    x418 = -x13 * x269 + x228 * x294 + x363 * x72
    x419 = x92 * (-x417 + x418)
    x420 = -x10 * x417 + x3 * x418
    x421 = x3 * x420 - x398 * x68 + x419
    x422 = x416 + x421
    x423 = x25 * x422 + x403
    x424 = x27 * x414 + x405
    x425 = -x13 * x285 + x281 * x294 + x394 * x74
    x426 = x425 * x62
    x427 = -x13 * x282 + x280 * x294 + x396 * x74
    x428 = x92 * (-x426 + x427)
    x429 = -x10 * x426 + x3 * x427
    x430 = x284 * x294 - x291 * x305 + x399 * x74
    x431 = x26 * x421 + x26 * x422 + x3 * x429 + x428 - x68 * (x3 * x425 - x430 * x68)
    x432 = x27 * x416 + x27 * x421
    x433 = x28 * x413
    x434 = -x14 - A[2]
    x435 = x15 * x84
    x436 = -x15 * x63 + x434 * x54
    x437 = x436 * x62
    x438 = x92 * (x434 * x83 - x435 - x437)
    x439 = x122 * x15
    x440 = x15 * x85
    x441 = x434 * x46 - x440
    x442 = x441 * x62
    x443 = x92 * (x434 * x82 - x439 - x442)
    x444 = x434 * x82 - x439
    x445 = x15 * x62
    x446 = x35 * x445
    x447 = x31 * x434 - x446
    x448 = x3 * x447
    x449 = x445 * x50
    x450 = x35 * x434 - x449
    x451 = x450 * x62
    x452 = x10 * x451
    x453 = x448 - x452
    x454 = x125 * x15
    x455 = x40 * x434 - x454
    x456 = x3 * x455
    x457 = x15 * x88
    x458 = x36 * x434 - x457
    x459 = x458 * x62
    x460 = -x10 * x459 + x453 * x67 + x456
    x461 = -x10 * x442 + x3 * x444 + x460 * x72
    x462 = x3 * x441
    x463 = -x15 * x64 + x434 * x53
    x464 = x463 * x62
    x465 = x10 * x464
    x466 = x3 * x450
    x467 = x434 * x50 - x445 * x57
    x468 = x467 * x62
    x469 = x10 * x468
    x470 = x466 - x469
    x471 = x3 * x458
    x472 = -x15 * x70 + x434 * x51
    x473 = x472 * x62
    x474 = x10 * x473
    x475 = x470 * x67 + x471 - x474
    x476 = x462 - x465 + x475 * x72
    x477 = x92 * (x40 * x434 - x454 - x459)
    x478 = x92 * (2 * x18 * x19 * x20 * x24 * x29 * x434 - x446 - x451)
    x479 = (
        x3 * x461
        + x443
        - x476 * x68
        + x72 * (x3 * x460 - x475 * x68 + x477 + x67 * (x3 * x453 - x470 * x68 + x478))
    )
    x480 = x140 * x15
    x481 = x455 * x62
    x482 = x92 * (x434 * x80 - x480 - x481)
    x483 = x31 * x445
    x484 = x447 * x62
    x485 = x92 * (2 * x19 * x20 * x24 * x29 * x38 * x434 - x483 - x484)
    x486 = x39 * x434 - x483
    x487 = x3 * x486
    x488 = -x10 * x484 + x487
    x489 = x434 * x80 - x480
    x490 = -x10 * x481 + x3 * x489 + x488 * x67
    x491 = x3 * x490 - x460 * x68 + x482 + x67 * (x3 * x488 - x453 * x68 + x485)
    x492 = x434 * x83 - x435
    x493 = -x10 * x437 + x3 * x492 + x476 * x74
    x494 = x92 * (x434 * x46 - x440 - x464)
    x495 = x3 * x463
    x496 = -x110 * x445 + x434 * x60
    x497 = x496 * x68
    x498 = x3 * x467
    x499 = -x108 * x445 + x434 * x57
    x500 = x499 * x68
    x501 = x498 - x500
    x502 = x3 * x472
    x503 = -x109 * x445 + x434 * x58
    x504 = x503 * x68
    x505 = x501 * x67 + x502 - x504
    x506 = x495 - x497 + x505 * x72
    x507 = x92 * (x36 * x434 - x457 - x473)
    x508 = x92 * (2 * x19 * x20 * x24 * x29 * x34 * x434 - x449 - x468)
    x509 = -x111 * x445 + x434 * x61
    x510 = (
        x25 * x479
        + x25 * (x25 * x491 + x479)
        + x3 * x493
        + x438
        - x68 * (x3 * x436 + x506 * x74 - x509 * x68)
        + x74
        * (
            x3 * x476
            + x494
            - x506 * x68
            + x72
            * (x3 * x475 - x505 * x68 + x507 + x67 * (x3 * x470 - x501 * x68 + x508))
        )
    )
    x511 = x15 * x158
    x512 = x15 * x176
    x513 = x157 * x434 - x512
    x514 = x513 * x62
    x515 = x92 * (x161 * x434 - x511 - x514)
    x516 = x15 * x163
    x517 = x15 * x168
    x518 = x155 * x434 - x517
    x519 = x518 * x62
    x520 = x92 * (x154 * x434 - x516 - x519)
    x521 = x154 * x434 - x516
    x522 = x3 * x521
    x523 = -x10 * x519 + x522
    x524 = x3 * x518
    x525 = -x15 * x194 + x167 * x434
    x526 = x525 * x62
    x527 = x10 * x526
    x528 = x524 - x527
    x529 = x161 * x434 - x511
    x530 = -x10 * x514 + x3 * x529 + x523 * x67
    x531 = x3 * x513
    x532 = -x15 * x196 + x175 * x434
    x533 = x532 * x62
    x534 = x10 * x533
    x535 = x528 * x67 + x531 - x534
    x536 = x3 * x530 + x515 - x535 * x68 + x67 * (x3 * x523 + x520 - x528 * x68)
    x537 = x26 * x491 + x536
    x538 = x15 * x183
    x539 = -x15 * x193 + x182 * x434
    x540 = x539 * x62
    x541 = x92 * (x185 * x434 - x538 - x540)
    x542 = x185 * x434 - x538
    x543 = -x10 * x540 + x3 * x542 + x535 * x72
    x544 = x92 * (x157 * x434 - x512 - x533)
    x545 = x92 * (x155 * x434 - x517 - x526)
    x546 = x3 * x525
    x547 = x189 * x434 - x212 * x445
    x548 = x547 * x68
    x549 = x546 - x548
    x550 = x3 * x532
    x551 = x191 * x434 - x216 * x445
    x552 = x551 * x68
    x553 = x549 * x67 + x550 - x552
    x554 = x192 * x434 - x221 * x445
    x555 = (
        x3 * x543
        + x541
        - x68 * (x3 * x539 + x553 * x72 - x554 * x68)
        + x72 * (x3 * x535 + x544 - x553 * x68 + x67 * (x3 * x528 + x545 - x549 * x68))
    )
    x556 = x25 * x537 + x26 * x479 + x555
    x557 = x458 * x67
    x558 = x92 * (x455 * x67 - x557 * x62)
    x559 = x450 * x67
    x560 = x92 * (x447 * x67 - x559 * x62)
    x561 = x448 * x67 - x559 * x68
    x562 = x466 * x67 - x469 * x67
    x563 = x456 * x67 - x557 * x68 + x561 * x67
    x564 = x471 * x67 - x474 * x67 + x562 * x67
    x565 = x3 * x563 + x558 - x564 * x68 + x67 * (x3 * x561 + x560 - x562 * x68)
    x566 = x27 * x491 + x565
    x567 = x464 * x67
    x568 = x92 * (x441 * x67 - x567)
    x569 = x462 * x67 - x465 * x67 + x564 * x72
    x570 = x473 * x67
    x571 = x92 * (x458 * x67 - x570)
    x572 = x468 * x67
    x573 = x92 * (x450 * x67 - x572)
    x574 = x498 * x67 - x500 * x67
    x575 = x502 * x67 - x504 * x67 + x574 * x67
    x576 = (
        x3 * x569
        + x568
        - x68 * (x495 * x67 - x497 * x67 + x575 * x72)
        + x72 * (x3 * x564 + x571 - x575 * x68 + x67 * (x3 * x562 + x573 - x574 * x68))
    )
    x577 = x25 * x566 + x27 * x479 + x576
    x578 = x15 * x227
    x579 = -x15 * x242 + x226 * x434
    x580 = x579 * x62
    x581 = x92 * (x229 * x434 - x578 - x580)
    x582 = x15 * x231
    x583 = -x15 * x236 + x225 * x434
    x584 = x583 * x62
    x585 = x92 * (x224 * x434 - x582 - x584)
    x586 = x224 * x434 - x582
    x587 = x3 * x586
    x588 = x10 * x584
    x589 = x587 - x588
    x590 = x3 * x583
    x591 = x235 * x434 - x249 * x445
    x592 = x591 * x68
    x593 = x590 - x592
    x594 = x229 * x434 - x578
    x595 = -x10 * x580 + x3 * x594 + x589 * x67
    x596 = x241 * x434 - x253 * x445
    x597 = (
        x26 * x536
        + x3 * x595
        + x581
        + x67 * (x3 * x589 + x585 - x593 * x68)
        - x68 * (x3 * x579 + x593 * x67 - x596 * x68)
    )
    x598 = x26 * x537 + x597
    x599 = x533 * x67
    x600 = x92 * (x513 * x67 - x599)
    x601 = x526 * x67
    x602 = x92 * (x518 * x67 - x601)
    x603 = x524 * x67 - x527 * x67
    x604 = x546 * x67 - x548 * x67
    x605 = x531 * x67 - x534 * x67 + x603 * x67
    x606 = (
        x3 * x605
        + x600
        + x67 * (x3 * x603 + x602 - x604 * x68)
        - x68 * (x550 * x67 - x552 * x67 + x604 * x67)
    )
    x607 = x27 * x536 + x606
    x608 = x26 * x566 + x607
    x609 = x23 * x28
    x610 = x66 ** (-2.0)
    x611 = 2 * x610
    x612 = x92 * (2 * x458 * x610 - x473 * x611)
    x613 = x92 * (2 * x450 * x610 - x468 * x611)
    x614 = x466 * x611 - x469 * x611
    x615 = x498 * x611 - x500 * x611
    x616 = x471 * x611 - x474 * x611 + x614 * x67
    x617 = (
        x27 * x565
        + x3 * x616
        + x612
        + x67 * (x3 * x614 + x613 - x615 * x68)
        - x68 * (x502 * x611 - x504 * x611 + x615 * x67)
    )
    x618 = x27 * x566 + x617
    x619 = x15 * x259
    x620 = x521 * x62
    x621 = x92 * (x159 * x434 - x619 - x620)
    x622 = x159 * x434 - x619
    x623 = -x10 * x620 + x3 * x622
    x624 = x3 * x623 - x523 * x68 + x621
    x625 = x25 * x536 + x25 * (x25 * x624 + x536) + x555
    x626 = x15 * x269
    x627 = x586 * x62
    x628 = x92 * (x228 * x434 - x626 - x627)
    x629 = x228 * x434 - x626
    x630 = -x10 * x627 + x3 * x629
    x631 = x3 * x630 - x589 * x68 + x628
    x632 = x26 * x624 + x631
    x633 = x25 * x632 + x597
    x634 = x518 * x67
    x635 = x92 * (x521 * x67 - x62 * x634)
    x636 = x522 * x67 - x634 * x68
    x637 = x3 * x636 - x603 * x68 + x635
    x638 = x27 * x624 + x637
    x639 = x25 * x638 + x607
    x640 = x15 * x282
    x641 = -x15 * x285 + x281 * x434
    x642 = x62 * x641
    x643 = x92 * (x280 * x434 - x640 - x642)
    x644 = x280 * x434 - x640
    x645 = -x10 * x642 + x3 * x644
    x646 = x284 * x434 - x291 * x445
    x647 = x26 * x631 + x26 * x632 + x3 * x645 + x643 - x68 * (x3 * x641 - x646 * x68)
    x648 = x584 * x67
    x649 = x92 * (x586 * x67 - x648)
    x650 = x587 * x67 - x588 * x67
    x651 = x3 * x650 + x649 - x68 * (x590 * x67 - x592 * x67)
    x652 = x26 * x638 + x27 * x631 + x651
    x653 = x92 * (2 * x518 * x610 - x526 * x611)
    x654 = x524 * x611 - x527 * x611
    x655 = x27 * x637 + x3 * x654 + x653 - x68 * (x546 * x611 - x548 * x611)
    x656 = x27 * x638 + x655
    x657 = x447 * x67
    x658 = x92 * (x486 * x67 - x62 * x657)
    x659 = x487 * x67 - x657 * x68
    x660 = x3 * x659 - x561 * x68 + x658
    x661 = x25 * x565 + x25 * (x25 * x660 + x565) + x576
    x662 = x26 * x660 + x637
    x663 = x25 * x662 + x26 * x565 + x606
    x664 = x92 * (2 * x447 * x610 - x451 * x611)
    x665 = x448 * x611 - x452 * x611
    x666 = x3 * x665 - x614 * x68 + x664
    x667 = x27 * x660 + x666
    x668 = x25 * x667 + x617
    x669 = x26 * x637 + x26 * x662 + x651
    x670 = x26 * x667 + x655
    x671 = x66 ** (-3.0)
    x672 = 6 * x671
    x673 = x92 * (6 * x450 * x671 - x468 * x672)
    x674 = x466 * x672 - x469 * x672
    x675 = x27 * x666 + x27 * x667 + x3 * x674 + x673 - x68 * (x498 * x672 - x500 * x672)
    x676 = x25 * x340
    x677 = x25 * x318 + x25 * (x318 + x676) + x344
    x678 = x26 * x340
    x679 = x369 + x678
    x680 = x25 * x679 + x26 * x318 + x379
    x681 = x27 * x318 + x27 * x676
    x682 = x26 * x369 + x401
    x683 = x26 * x679 + x682
    x684 = x27 * x369
    x685 = x27 * x678 + x684
    x686 = x25 * x412
    x687 = x25 * x369 + x25 * (x369 + x686) + x379
    x688 = x26 * x412
    x689 = x420 + x688
    x690 = x25 * x689 + x682
    x691 = x27 * x686 + x684
    x692 = x26 * x420 + x26 * x689 + x429
    x693 = x27 * x420 + x27 * x688
    x694 = x128 - x13 * x302 + x294 * x304
    x695 = -x13 * x320 + x294 * x301 + x95
    x696 = -x13 * x310 + x130 + x294 * x307
    x697 = -x13 * x322 + x294 * x309 + x98
    x698 = x129 - x13 * x316 + x294 * x313
    x699 = -x13 * x325 + x294 * x315 + x97
    x700 = (
        x3 * x694
        - x68 * x695
        + x72 * (x3 * x698 + x67 * (x3 * x696 - x68 * x697) - x68 * x699)
    )
    x701 = -x13 * x335 + x143 + x294 * x337
    x702 = -x13 * x332 + x145 + x294 * x339
    x703 = x3 * x702 + x67 * (x3 * x701 - x68 * x696) - x68 * x698
    x704 = x25 * x703
    x705 = -x13 * x297 + x294 * x343 + x94
    x706 = x115 + x294 * x319 - x305 * x346
    x707 = x117 + x294 * x321 - x305 * x347
    x708 = x116 + x294 * x324 - x305 * x349
    x709 = x105 + x294 * x296 - x305 * x354
    x710 = (
        x25 * x700
        + x25 * (x700 + x704)
        + x3 * x705
        - x68 * x709
        + x74
        * (
            x3 * x695
            - x68 * x706
            + x72 * (x3 * x699 + x67 * (x3 * x697 - x68 * x707) - x68 * x708)
        )
    )
    x711 = x26 * x703
    x712 = -x13 * x362 + x164 + x294 * x363 + x67 * x696
    x713 = -x13 * x367 + x201 + x294 * x361 + x67 * x697
    x714 = -x13 * x358 + x162 + x294 * x359 + x67 * x698
    x715 = -x13 * x371 + x200 + x294 * x357 + x67 * x699
    x716 = x3 * x714 + x67 * (x3 * x712 - x68 * x713) - x68 * x715
    x717 = x711 + x716
    x718 = -x13 * x376 + x186 + x294 * x377 + x67 * x695
    x719 = x211 + x294 * x366 - x305 * x382 + x67 * x707
    x720 = x215 + x294 * x370 - x305 * x384 + x67 * x708
    x721 = x219 + x294 * x375 - x305 * x386 + x67 * x706
    x722 = (
        x3 * x718
        - x68 * x721
        + x72 * (x3 * x715 + x67 * (x3 * x713 - x68 * x719) - x68 * x720)
    )
    x723 = x25 * x717 + x26 * x700 + x722
    x724 = x27 * x700 + x27 * x704
    x725 = -x13 * x395 + x232 + x294 * x396 + x713 * x72
    x726 = x248 + x294 * x394 - x305 * x399 + x719 * x72
    x727 = -x13 * x391 + x230 + x294 * x392 + x715 * x72
    x728 = x252 + x294 * x390 - x305 * x402 + x72 * x720
    x729 = x26 * x716 + x3 * x727 + x67 * (x3 * x725 - x68 * x726) - x68 * x728
    x730 = x26 * x717 + x729
    x731 = x27 * x716
    x732 = x27 * x711 + x731
    x733 = x28 * x703
    x734 = -x13 * x409 + x260 + x294 * x410 + x67 * x701
    x735 = x3 * x734 - x68 * x712
    x736 = x25 * x735
    x737 = x25 * x716 + x25 * (x716 + x736) + x722
    x738 = x26 * x735
    x739 = -x13 * x417 + x270 + x294 * x418 + x712 * x72
    x740 = x3 * x739 - x68 * x725
    x741 = x738 + x740
    x742 = x25 * x741 + x729
    x743 = x27 * x736 + x731
    x744 = -x13 * x426 + x288 + x294 * x427 + x725 * x74
    x745 = x290 + x294 * x425 - x305 * x430 + x726 * x74
    x746 = x26 * x740 + x26 * x741 + x3 * x744 - x68 * x745
    x747 = x27 * x738 + x27 * x740
    x748 = x28 * x735
    x749 = -x13 * x442 + x294 * x444
    x750 = -x13 * x464 + x294 * x441
    x751 = x294 * x447
    x752 = x13 * x451
    x753 = x751 - x752
    x754 = x294 * x450
    x755 = x13 * x468
    x756 = x754 - x755
    x757 = -x13 * x459 + x294 * x455
    x758 = x294 * x458
    x759 = x13 * x473
    x760 = x758 - x759
    x761 = (
        x3 * x749
        - x68 * x750
        + x72 * (x3 * x757 + x67 * (x3 * x753 - x68 * x756) - x68 * x760)
    )
    x762 = -x13 * x484 + x294 * x486
    x763 = -x13 * x481 + x294 * x489
    x764 = x3 * x763 + x67 * (x3 * x762 - x68 * x753) - x68 * x757
    x765 = -x13 * x437 + x294 * x492
    x766 = x294 * x463
    x767 = x305 * x496
    x768 = x766 - x767
    x769 = x294 * x467
    x770 = x305 * x499
    x771 = x769 - x770
    x772 = x294 * x472
    x773 = x305 * x503
    x774 = x772 - x773
    x775 = x294 * x436 - x305 * x509
    x776 = (
        x25 * x761
        + x25 * (x25 * x764 + x761)
        + x3 * x765
        - x68 * x775
        + x74
        * (
            x3 * x750
            - x68 * x768
            + x72 * (x3 * x760 + x67 * (x3 * x756 - x68 * x771) - x68 * x774)
        )
    )
    x777 = -x13 * x519 + x294 * x521 + x67 * x753
    x778 = x294 * x518
    x779 = x13 * x526
    x780 = x67 * x756 + x778 - x779
    x781 = -x13 * x514 + x294 * x529 + x67 * x757
    x782 = -x13 * x533 + x294 * x513 + x67 * x760
    x783 = x3 * x781 + x67 * (x3 * x777 - x68 * x780) - x68 * x782
    x784 = x26 * x764 + x783
    x785 = -x13 * x540 + x294 * x542 + x67 * x750
    x786 = x294 * x525
    x787 = x305 * x547
    x788 = x67 * x771 + x786 - x787
    x789 = x294 * x532
    x790 = x305 * x551
    x791 = x67 * x774 + x789 - x790
    x792 = x294 * x539 - x305 * x554 + x67 * x768
    x793 = (
        x3 * x785
        - x68 * x792
        + x72 * (x3 * x782 + x67 * (x3 * x780 - x68 * x788) - x68 * x791)
    )
    x794 = x25 * x784 + x26 * x761 + x793
    x795 = x455 * x67
    x796 = x294 * x795 - x305 * x557
    x797 = -x13 * x570 + x294 * x557
    x798 = x294 * x657 - x305 * x559
    x799 = -x13 * x572 + x294 * x559
    x800 = x3 * x796 + x67 * (x3 * x798 - x68 * x799) - x68 * x797
    x801 = x27 * x764 + x800
    x802 = x441 * x67
    x803 = -x13 * x567 + x294 * x802
    x804 = x67 * x772 - x67 * x773
    x805 = x67 * x769 - x67 * x770
    x806 = x67 * x766 - x67 * x767
    x807 = (
        x3 * x803
        - x68 * x806
        + x72 * (x3 * x797 + x67 * (x3 * x799 - x68 * x805) - x68 * x804)
    )
    x808 = x25 * x801 + x27 * x761 + x807
    x809 = -x13 * x584 + x294 * x586 + x72 * x780
    x810 = x294 * x583
    x811 = x305 * x591
    x812 = x72 * x788 + x810 - x811
    x813 = -x13 * x580 + x294 * x594 + x72 * x782
    x814 = x294 * x579 - x305 * x596 + x72 * x791
    x815 = x26 * x783 + x3 * x813 + x67 * (x3 * x809 - x68 * x812) - x68 * x814
    x816 = x26 * x784 + x815
    x817 = -x13 * x601 + x294 * x634 + x67 * x799
    x818 = x67 * x786 - x67 * x787 + x67 * x805
    x819 = x513 * x67
    x820 = -x13 * x599 + x294 * x819 + x67 * x797
    x821 = x67 * x789 - x67 * x790 + x67 * x804
    x822 = x3 * x820 + x67 * (x3 * x817 - x68 * x818) - x68 * x821
    x823 = x27 * x783 + x822
    x824 = x26 * x801 + x823
    x825 = x611 * x754 - x611 * x755
    x826 = x611 * x769 - x611 * x770
    x827 = x611 * x758 - x611 * x759
    x828 = x611 * x772 - x611 * x773
    x829 = x27 * x800 + x3 * x827 + x67 * (x3 * x825 - x68 * x826) - x68 * x828
    x830 = x27 * x801 + x829
    x831 = -x13 * x620 + x294 * x622 + x67 * x762
    x832 = x3 * x831 - x68 * x777
    x833 = x25 * x783 + x25 * (x25 * x832 + x783) + x793
    x834 = -x13 * x627 + x294 * x629 + x72 * x777
    x835 = x3 * x834 - x68 * x809
    x836 = x26 * x832 + x835
    x837 = x25 * x836 + x815
    x838 = x521 * x67
    x839 = x294 * x838 - x305 * x634 + x67 * x798
    x840 = x3 * x839 - x68 * x817
    x841 = x27 * x832 + x840
    x842 = x25 * x841 + x823
    x843 = -x13 * x642 + x294 * x644 + x74 * x809
    x844 = x294 * x641 - x305 * x646 + x74 * x812
    x845 = x26 * x835 + x26 * x836 + x3 * x843 - x68 * x844
    x846 = x586 * x67
    x847 = -x13 * x648 + x294 * x846 + x72 * x817
    x848 = x67 * x810 - x67 * x811 + x72 * x818
    x849 = x3 * x847 - x68 * x848
    x850 = x26 * x841 + x27 * x835 + x849
    x851 = x611 * x778 - x611 * x779 + x67 * x825
    x852 = x611 * x786 - x611 * x787 + x67 * x826
    x853 = x27 * x840 + x3 * x851 - x68 * x852
    x854 = x27 * x841 + x853
    x855 = x486 * x67
    x856 = x294 * x855 - x305 * x657
    x857 = x3 * x856 - x68 * x798
    x858 = x25 * x800 + x25 * (x25 * x857 + x800) + x807
    x859 = x26 * x857 + x840
    x860 = x25 * x859 + x26 * x800 + x822
    x861 = x611 * x751 - x611 * x752
    x862 = x3 * x861 - x68 * x825
    x863 = x27 * x857 + x862
    x864 = x25 * x863 + x829
    x865 = x26 * x840 + x26 * x859 + x849
    x866 = x26 * x863 + x853
    x867 = x672 * x754 - x672 * x755
    x868 = x672 * x769 - x672 * x770
    x869 = x27 * x862 + x27 * x863 + x3 * x867 - x68 * x868
    x870 = x25 * x461 + x25 * (x25 * x490 + x461) + x493
    x871 = x26 * x490 + x530
    x872 = x25 * x871 + x26 * x461 + x543
    x873 = x27 * x490 + x563
    x874 = x25 * x873 + x27 * x461 + x569
    x875 = x26 * x530 + x595
    x876 = x26 * x871 + x875
    x877 = x27 * x530 + x605
    x878 = x26 * x873 + x877
    x879 = x27 * x563 + x616
    x880 = x27 * x873 + x879
    x881 = x25 * x530 + x25 * (x25 * x623 + x530) + x543
    x882 = x26 * x623 + x630
    x883 = x25 * x882 + x875
    x884 = x27 * x623 + x636
    x885 = x25 * x884 + x877
    x886 = x26 * x630 + x26 * x882 + x645
    x887 = x26 * x884 + x27 * x630 + x650
    x888 = x27 * x636 + x654
    x889 = x27 * x884 + x888
    x890 = x25 * x563 + x25 * (x25 * x659 + x563) + x569
    x891 = x26 * x659 + x636
    x892 = x25 * x891 + x26 * x563 + x605
    x893 = x27 * x659 + x665
    x894 = x25 * x893 + x879
    x895 = x26 * x636 + x26 * x891 + x650
    x896 = x26 * x893 + x888
    x897 = x27 * x665 + x27 * x893 + x674
    x898 = x128 - x15 * x442 + x434 * x444
    x899 = -x15 * x464 + x434 * x441 + x95
    x900 = x434 * x447
    x901 = x15 * x451
    x902 = x130 + x900 - x901
    x903 = x434 * x450
    x904 = x15 * x468
    x905 = x903 - x904 + x98
    x906 = x129 - x15 * x459 + x434 * x455
    x907 = x434 * x458
    x908 = x15 * x473
    x909 = x907 - x908 + x97
    x910 = (
        x3 * x898
        - x68 * x899
        + x72 * (x3 * x906 + x67 * (x3 * x902 - x68 * x905) - x68 * x909)
    )
    x911 = x143 - x15 * x484 + x434 * x486
    x912 = x145 - x15 * x481 + x434 * x489
    x913 = x3 * x912 + x67 * (x3 * x911 - x68 * x902) - x68 * x906
    x914 = -x15 * x437 + x434 * x492 + x94
    x915 = x434 * x463
    x916 = x445 * x496
    x917 = x115 + x915 - x916
    x918 = x434 * x467
    x919 = x445 * x499
    x920 = x117 + x918 - x919
    x921 = x434 * x472
    x922 = x445 * x503
    x923 = x116 + x921 - x922
    x924 = x105 + x434 * x436 - x445 * x509
    x925 = (
        x25 * x910
        + x25 * (x25 * x913 + x910)
        + x3 * x914
        - x68 * x924
        + x74
        * (
            x3 * x899
            - x68 * x917
            + x72 * (x3 * x909 + x67 * (x3 * x905 - x68 * x920) - x68 * x923)
        )
    )
    x926 = -x15 * x519 + x164 + x434 * x521
    x927 = x434 * x518
    x928 = x15 * x526
    x929 = x201 + x927 - x928
    x930 = -x15 * x514 + x162 + x434 * x529
    x931 = -x15 * x533 + x200 + x434 * x513
    x932 = x3 * x930 + x67 * (x3 * x926 - x68 * x929) - x68 * x931
    x933 = x26 * x913 + x932
    x934 = -x15 * x540 + x186 + x434 * x542
    x935 = x434 * x525
    x936 = x445 * x547
    x937 = x211 + x935 - x936
    x938 = x434 * x532
    x939 = x445 * x551
    x940 = x215 + x938 - x939
    x941 = x219 + x434 * x539 - x445 * x554
    x942 = (
        x3 * x934
        - x68 * x941
        + x72 * (x3 * x931 + x67 * (x3 * x929 - x68 * x937) - x68 * x940)
    )
    x943 = x25 * x933 + x26 * x910 + x942
    x944 = x434 * x657 - x445 * x559 + x67 * x902
    x945 = -x15 * x572 + x434 * x559 + x67 * x905
    x946 = x434 * x795 - x445 * x557 + x67 * x906
    x947 = -x15 * x570 + x434 * x557 + x67 * x909
    x948 = x3 * x946 + x67 * (x3 * x944 - x68 * x945) - x68 * x947
    x949 = x27 * x913 + x948
    x950 = -x15 * x567 + x434 * x802 + x67 * x899
    x951 = x67 * x918 - x67 * x919 + x67 * x920
    x952 = x67 * x921 - x67 * x922 + x67 * x923
    x953 = x67 * x915 - x67 * x916 + x67 * x917
    x954 = (
        x3 * x950
        - x68 * x953
        + x72 * (x3 * x947 + x67 * (x3 * x945 - x68 * x951) - x68 * x952)
    )
    x955 = x25 * x949 + x27 * x910 + x954
    x956 = -x15 * x584 + x232 + x434 * x586
    x957 = x434 * x583
    x958 = x445 * x591
    x959 = x248 + x957 - x958
    x960 = -x15 * x580 + x230 + x434 * x594
    x961 = x252 + x434 * x579 - x445 * x596
    x962 = x26 * x932 + x3 * x960 + x67 * (x3 * x956 - x68 * x959) - x68 * x961
    x963 = x26 * x933 + x962
    x964 = -x15 * x601 + x434 * x634 + x67 * x929
    x965 = x67 * x935 - x67 * x936 + x67 * x937
    x966 = -x15 * x599 + x434 * x819 + x67 * x931
    x967 = x67 * x938 - x67 * x939 + x67 * x940
    x968 = x3 * x966 + x67 * (x3 * x964 - x68 * x965) - x68 * x967
    x969 = x27 * x932 + x968
    x970 = x26 * x949 + x969
    x971 = x611 * x903 - x611 * x904 + x72 * x945
    x972 = x611 * x918 - x611 * x919 + x72 * x951
    x973 = x611 * x907 - x611 * x908 + x72 * x947
    x974 = x611 * x921 - x611 * x922 + x72 * x952
    x975 = x27 * x948 + x3 * x973 + x67 * (x3 * x971 - x68 * x972) - x68 * x974
    x976 = x27 * x949 + x975
    x977 = -x15 * x620 + x260 + x434 * x622
    x978 = x3 * x977 - x68 * x926
    x979 = x25 * x932 + x25 * (x25 * x978 + x932) + x942
    x980 = -x15 * x627 + x270 + x434 * x629
    x981 = x3 * x980 - x68 * x956
    x982 = x26 * x978 + x981
    x983 = x25 * x982 + x962
    x984 = x434 * x838 - x445 * x634 + x67 * x926
    x985 = x3 * x984 - x68 * x964
    x986 = x27 * x978 + x985
    x987 = x25 * x986 + x969
    x988 = -x15 * x642 + x288 + x434 * x644
    x989 = x290 + x434 * x641 - x445 * x646
    x990 = x26 * x981 + x26 * x982 + x3 * x988 - x68 * x989
    x991 = -x15 * x648 + x434 * x846 + x67 * x956
    x992 = x67 * x957 - x67 * x958 + x67 * x959
    x993 = x3 * x991 - x68 * x992
    x994 = x26 * x986 + x27 * x981 + x993
    x995 = x611 * x927 - x611 * x928 + x72 * x964
    x996 = x611 * x935 - x611 * x936 + x72 * x965
    x997 = x27 * x985 + x3 * x995 - x68 * x996
    x998 = x27 * x986 + x997
    x999 = x434 * x855 - x445 * x657 + x67 * x911
    x1000 = x3 * x999 - x68 * x944
    x1001 = x25 * x948 + x25 * (x1000 * x25 + x948) + x954
    x1002 = x1000 * x26 + x985
    x1003 = x1002 * x25 + x26 * x948 + x968
    x1004 = x611 * x900 - x611 * x901 + x72 * x944
    x1005 = x1004 * x3 - x68 * x971
    x1006 = x1000 * x27 + x1005
    x1007 = x1006 * x25 + x975
    x1008 = x1002 * x26 + x26 * x985 + x993
    x1009 = x1006 * x26 + x997
    x1010 = x672 * x903 - x672 * x904 + x74 * x971
    x1011 = x672 * x918 - x672 * x919 + x74 * x972
    x1012 = x1005 * x27 + x1006 * x27 + x1010 * x3 - x1011 * x68
    x1013 = x25 * x702
    x1014 = x25 * x694 + x25 * (x1013 + x694) + x705
    x1015 = x26 * x702
    x1016 = x1015 + x714
    x1017 = x1016 * x25 + x26 * x694 + x718
    x1018 = x1013 * x27 + x27 * x694
    x1019 = x26 * x714 + x727
    x1020 = x1016 * x26 + x1019
    x1021 = x27 * x714
    x1022 = x1015 * x27 + x1021
    x1023 = x25 * x734
    x1024 = x25 * x714 + x25 * (x1023 + x714) + x718
    x1025 = x26 * x734
    x1026 = x1025 + x739
    x1027 = x1019 + x1026 * x25
    x1028 = x1021 + x1023 * x27
    x1029 = x1026 * x26 + x26 * x739 + x744
    x1030 = x1025 * x27 + x27 * x739
    x1031 = x294 * x694 + 2 * x303 - x305 * x695
    x1032 = x294 * x702 - x305 * x698 + 2 * x333
    x1033 = x1032 * x25
    x1034 = x1032 * x26
    x1035 = (
        x294 * x714
        - x305 * x715
        + 2 * x360
        + x67 * (x294 * x698 - x305 * x699 + 2 * x328)
    )
    x1036 = x1034 + x1035
    x1037 = (
        x294 * x718
        - x305 * x721
        + 2 * x378
        + x67 * (x294 * x695 - x305 * x706 + 2 * x345)
    )
    x1038 = (
        x1035 * x26
        + x294 * x727
        - x305 * x728
        + 2 * x393
        + x72
        * (
            x294 * x715
            - x305 * x720
            + 2 * x380
            + x67 * (x294 * x699 - x305 * x708 + 2 * x352)
        )
    )
    x1039 = x1035 * x27
    x1040 = (
        x294 * x734
        - x305 * x712
        + 2 * x411
        + x67 * (x294 * x701 - x305 * x696 + 2 * x336)
    )
    x1041 = x1040 * x25
    x1042 = x1040 * x26
    x1043 = (
        x294 * x739
        - x305 * x725
        + 2 * x419
        + x72
        * (
            x294 * x712
            - x305 * x713
            + 2 * x364
            + x67 * (x294 * x696 - x305 * x697 + 2 * x329)
        )
    )
    x1044 = x1042 + x1043
    x1045 = x294 * x749 - x305 * x750 + x443
    x1046 = x294 * x763 - x305 * x757 + x482
    x1047 = x1045 * x25 + x25 * (x1045 + x1046 * x25) + x294 * x765 - x305 * x775 + x438
    x1048 = x294 * x781 - x305 * x782 + x515 + x67 * (x294 * x757 - x305 * x760 + x477)
    x1049 = x1046 * x26 + x1048
    x1050 = x294 * x785 - x305 * x792 + x541 + x67 * (x294 * x750 - x305 * x768 + x494)
    x1051 = x1045 * x26 + x1049 * x25 + x1050
    x1052 = x294 * x796 - x305 * x797 + x558
    x1053 = x1046 * x27 + x1052
    x1054 = x294 * x803 - x305 * x806 + x568
    x1055 = x1045 * x27 + x1053 * x25 + x1054
    x1056 = (
        x1048 * x26
        + x294 * x813
        - x305 * x814
        + x581
        + x72
        * (x294 * x782 - x305 * x791 + x544 + x67 * (x294 * x760 - x305 * x774 + x507))
    )
    x1057 = x1049 * x26 + x1056
    x1058 = x294 * x820 - x305 * x821 + x600 + x67 * (x294 * x797 - x305 * x804 + x571)
    x1059 = x1048 * x27 + x1058
    x1060 = x1053 * x26 + x1059
    x1061 = x1052 * x27 + x294 * x827 - x305 * x828 + x612
    x1062 = x1053 * x27 + x1061
    x1063 = x294 * x831 - x305 * x777 + x621 + x67 * (x294 * x762 - x305 * x753 + x485)
    x1064 = x1048 * x25 + x1050 + x25 * (x1048 + x1063 * x25)
    x1065 = (
        x294 * x834
        - x305 * x809
        + x628
        + x72
        * (x294 * x777 - x305 * x780 + x520 + x67 * (x294 * x753 - x305 * x756 + x478))
    )
    x1066 = x1063 * x26 + x1065
    x1067 = x1056 + x1066 * x25
    x1068 = x294 * x839 - x305 * x817 + x635 + x67 * (x294 * x798 - x305 * x799 + x560)
    x1069 = x1063 * x27 + x1068
    x1070 = x1059 + x1069 * x25
    x1071 = (
        x1065 * x26
        + x1066 * x26
        + x294 * x843
        - x305 * x844
        + x643
        + x74
        * (
            x294 * x809
            - x305 * x812
            + x585
            + x72
            * (
                x294 * x780
                - x305 * x788
                + x545
                + x67 * (x294 * x756 - x305 * x771 + x508)
            )
        )
    )
    x1072 = (
        x294 * x847
        - x305 * x848
        + x649
        + x72
        * (x294 * x817 - x305 * x818 + x602 + x67 * (x294 * x799 - x305 * x805 + x573))
    )
    x1073 = x1065 * x27 + x1069 * x26 + x1072
    x1074 = (
        x1068 * x27
        + x294 * x851
        - x305 * x852
        + x653
        + x67 * (x294 * x825 - x305 * x826 + x613)
    )
    x1075 = x1069 * x27 + x1074
    x1076 = x294 * x856 - x305 * x798 + x658
    x1077 = x1052 * x25 + x1054 + x25 * (x1052 + x1076 * x25)
    x1078 = x1068 + x1076 * x26
    x1079 = x1052 * x26 + x1058 + x1078 * x25
    x1080 = x294 * x861 - x305 * x825 + x664
    x1081 = x1076 * x27 + x1080
    x1082 = x1061 + x1081 * x25
    x1083 = x1068 * x26 + x1072 + x1078 * x26
    x1084 = x1074 + x1081 * x26
    x1085 = x1080 * x27 + x1081 * x27 + x294 * x867 - x305 * x868 + x673
    x1086 = x25 * x749 + x25 * (x25 * x763 + x749) + x765
    x1087 = x26 * x763 + x781
    x1088 = x1087 * x25 + x26 * x749 + x785
    x1089 = x27 * x763 + x796
    x1090 = x1089 * x25 + x27 * x749 + x803
    x1091 = x26 * x781 + x813
    x1092 = x1087 * x26 + x1091
    x1093 = x27 * x781 + x820
    x1094 = x1089 * x26 + x1093
    x1095 = x27 * x796 + x827
    x1096 = x1089 * x27 + x1095
    x1097 = x25 * x781 + x25 * (x25 * x831 + x781) + x785
    x1098 = x26 * x831 + x834
    x1099 = x1091 + x1098 * x25
    x1100 = x27 * x831 + x839
    x1101 = x1093 + x1100 * x25
    x1102 = x1098 * x26 + x26 * x834 + x843
    x1103 = x1100 * x26 + x27 * x834 + x847
    x1104 = x27 * x839 + x851
    x1105 = x1100 * x27 + x1104
    x1106 = x25 * x796 + x25 * (x25 * x856 + x796) + x803
    x1107 = x26 * x856 + x839
    x1108 = x1107 * x25 + x26 * x796 + x820
    x1109 = x27 * x856 + x861
    x1110 = x1095 + x1109 * x25
    x1111 = x1107 * x26 + x26 * x839 + x847
    x1112 = x1104 + x1109 * x26
    x1113 = x1109 * x27 + x27 * x861 + x867
    x1114 = x294 * x898 - x305 * x899
    x1115 = x294 * x912 - x305 * x906
    x1116 = x1114 * x25 + x25 * (x1114 + x1115 * x25) + x294 * x914 - x305 * x924
    x1117 = x294 * x930 - x305 * x931 + x67 * (x294 * x906 - x305 * x909)
    x1118 = x1115 * x26 + x1117
    x1119 = x294 * x934 - x305 * x941 + x67 * (x294 * x899 - x305 * x917)
    x1120 = x1114 * x26 + x1118 * x25 + x1119
    x1121 = x294 * x946 - x305 * x947
    x1122 = x1115 * x27 + x1121
    x1123 = x294 * x950 - x305 * x953
    x1124 = x1114 * x27 + x1122 * x25 + x1123
    x1125 = (
        x1117 * x26
        + x294 * x960
        - x305 * x961
        + x72 * (x294 * x931 - x305 * x940 + x67 * (x294 * x909 - x305 * x923))
    )
    x1126 = x1118 * x26 + x1125
    x1127 = x294 * x966 - x305 * x967 + x67 * (x294 * x947 - x305 * x952)
    x1128 = x1117 * x27 + x1127
    x1129 = x1122 * x26 + x1128
    x1130 = x1121 * x27 + x294 * x973 - x305 * x974
    x1131 = x1122 * x27 + x1130
    x1132 = x294 * x977 - x305 * x926 + x67 * (x294 * x911 - x305 * x902)
    x1133 = x1117 * x25 + x1119 + x25 * (x1117 + x1132 * x25)
    x1134 = (
        x294 * x980
        - x305 * x956
        + x72 * (x294 * x926 - x305 * x929 + x67 * (x294 * x902 - x305 * x905))
    )
    x1135 = x1132 * x26 + x1134
    x1136 = x1125 + x1135 * x25
    x1137 = x294 * x984 - x305 * x964 + x67 * (x294 * x944 - x305 * x945)
    x1138 = x1132 * x27 + x1137
    x1139 = x1128 + x1138 * x25
    x1140 = (
        x1134 * x26
        + x1135 * x26
        + x294 * x988
        - x305 * x989
        + x74
        * (
            x294 * x956
            - x305 * x959
            + x72 * (x294 * x929 - x305 * x937 + x67 * (x294 * x905 - x305 * x920))
        )
    )
    x1141 = (
        x294 * x991
        - x305 * x992
        + x72 * (x294 * x964 - x305 * x965 + x67 * (x294 * x945 - x305 * x951))
    )
    x1142 = x1134 * x27 + x1138 * x26 + x1141
    x1143 = x1137 * x27 + x294 * x995 - x305 * x996 + x67 * (x294 * x971 - x305 * x972)
    x1144 = x1138 * x27 + x1143
    x1145 = x294 * x999 - x305 * x944
    x1146 = x1121 * x25 + x1123 + x25 * (x1121 + x1145 * x25)
    x1147 = x1137 + x1145 * x26
    x1148 = x1121 * x26 + x1127 + x1147 * x25
    x1149 = x1004 * x294 - x305 * x971
    x1150 = x1145 * x27 + x1149
    x1151 = x1130 + x1150 * x25
    x1152 = x1137 * x26 + x1141 + x1147 * x26
    x1153 = x1143 + x1150 * x26
    x1154 = x1010 * x294 - x1011 * x305 + x1149 * x27 + x1150 * x27
    x1155 = x25 * x898 + x25 * (x25 * x912 + x898) + x914
    x1156 = x26 * x912 + x930
    x1157 = x1156 * x25 + x26 * x898 + x934
    x1158 = x27 * x912 + x946
    x1159 = x1158 * x25 + x27 * x898 + x950
    x1160 = x26 * x930 + x960
    x1161 = x1156 * x26 + x1160
    x1162 = x27 * x930 + x966
    x1163 = x1158 * x26 + x1162
    x1164 = x27 * x946 + x973
    x1165 = x1158 * x27 + x1164
    x1166 = x25 * x930 + x25 * (x25 * x977 + x930) + x934
    x1167 = x26 * x977 + x980
    x1168 = x1160 + x1167 * x25
    x1169 = x27 * x977 + x984
    x1170 = x1162 + x1169 * x25
    x1171 = x1167 * x26 + x26 * x980 + x988
    x1172 = x1169 * x26 + x27 * x980 + x991
    x1173 = x27 * x984 + x995
    x1174 = x1169 * x27 + x1173
    x1175 = x25 * x946 + x25 * (x25 * x999 + x946) + x950
    x1176 = x26 * x999 + x984
    x1177 = x1176 * x25 + x26 * x946 + x966
    x1178 = x1004 + x27 * x999
    x1179 = x1164 + x1178 * x25
    x1180 = x1176 * x26 + x26 * x984 + x991
    x1181 = x1173 + x1178 * x26
    x1182 = x1004 * x27 + x1010 + x1178 * x27
    x1183 = x434 * x898 + 2 * x443 - x445 * x899
    x1184 = x434 * x912 - x445 * x906 + 2 * x482
    x1185 = x434 * x930 - x445 * x931 + 2 * x515
    x1186 = x1184 * x26 + x1185
    x1187 = x434 * x934 - x445 * x941 + 2 * x541
    x1188 = (
        x434 * x946
        - x445 * x947
        + 2 * x558
        + x67 * (x434 * x906 - x445 * x909 + 2 * x477)
    )
    x1189 = x1184 * x27 + x1188
    x1190 = (
        x434 * x950
        - x445 * x953
        + 2 * x568
        + x67 * (x434 * x899 - x445 * x917 + 2 * x494)
    )
    x1191 = x1185 * x26 + x434 * x960 - x445 * x961 + 2 * x581
    x1192 = (
        x434 * x966
        - x445 * x967
        + 2 * x600
        + x67 * (x434 * x931 - x445 * x940 + 2 * x544)
    )
    x1193 = x1185 * x27 + x1192
    x1194 = (
        x1188 * x27
        + x434 * x973
        - x445 * x974
        + 2 * x612
        + x72
        * (
            x434 * x947
            - x445 * x952
            + 2 * x571
            + x67 * (x434 * x909 - x445 * x923 + 2 * x507)
        )
    )
    x1195 = x434 * x977 - x445 * x926 + 2 * x621
    x1196 = x434 * x980 - x445 * x956 + 2 * x628
    x1197 = x1195 * x26 + x1196
    x1198 = (
        x434 * x984
        - x445 * x964
        + 2 * x635
        + x67 * (x434 * x926 - x445 * x929 + 2 * x520)
    )
    x1199 = x1195 * x27 + x1198
    x1200 = (
        x434 * x991
        - x445 * x992
        + 2 * x649
        + x67 * (x434 * x956 - x445 * x959 + 2 * x585)
    )
    x1201 = (
        x1198 * x27
        + x434 * x995
        - x445 * x996
        + 2 * x653
        + x72
        * (
            x434 * x964
            - x445 * x965
            + 2 * x602
            + x67 * (x434 * x929 - x445 * x937 + 2 * x545)
        )
    )
    x1202 = (
        x434 * x999
        - x445 * x944
        + 2 * x658
        + x67 * (x434 * x911 - x445 * x902 + 2 * x485)
    )
    x1203 = x1198 + x1202 * x26
    x1204 = (
        x1004 * x434
        - x445 * x971
        + 2 * x664
        + x72
        * (
            x434 * x944
            - x445 * x945
            + 2 * x560
            + x67 * (x434 * x902 - x445 * x905 + 2 * x478)
        )
    )
    x1205 = x1202 * x27 + x1204

    # 324 item(s)
    S = numpy.array(
        [
            x104 * x3
            + x136 * x25
            + x150 * x21
            + x25 * (x136 + x148)
            - x68
            * (x105 + x120 * x74 + x3 * x75 - x68 * (-x111 * x68 + x114 * x74 + x3 * x61))
            + x74
            * (
                x103 * x3
                - x120 * x68
                + x72
                * (
                    x102 * x3
                    - x119 * x68
                    + x67
                    * (
                        x100 * x3
                        - x118 * x68
                        + x93 * (2 * x19 * x20 * x24 * x29 * x3 * x34 - x86 - x99)
                    )
                    + x93 * (-x101 + x89)
                )
                + x93 * (x90 - x96)
            )
            + x93 * (-x76 + x91),
            x136 * x26 + x207 * x21 + x210 * x25 + x222,
            x136 * x27 + x148 * x27 + x21 * x223,
            x21 * x247 + x210 * x26 + x254,
            x208 * x27 + x21 * x256 + x257,
            x146 * x258 + x147 * x28,
            x209 * x25 + x21 * x265 + x222 + x25 * (x209 + x267),
            x21 * x275 + x25 * x278 + x254,
            x21 * x279 + x257 + x267 * x27,
            x21 * x292
            + x26 * x277
            + x26 * x278
            + x289 * x3
            - x68 * (x286 * x3 + x290 - x68 * (x284 * x3 - x291 * x68))
            + x93 * (x280 * x3 - x283 - x287),
            x21 * x293 + x27 * x276 + x27 * x277,
            x258 * x263 + x266 * x28,
            0,
            0,
            0,
            0,
            0,
            0,
            x150 * x22 + x355,
            x207 * x22 + x388,
            x22 * x223 + x389,
            x22 * x247 + x404,
            x22 * x256 + x406,
            x146 * x407 + x408,
            x22 * x265 + x415,
            x22 * x275 + x423,
            x22 * x279 + x424,
            x22 * x292 + x431,
            x22 * x293 + x432,
            x263 * x407 + x433,
            0,
            0,
            0,
            0,
            0,
            0,
            x150 * x23 + x510,
            x207 * x23 + x556,
            x223 * x23 + x577,
            x23 * x247 + x598,
            x23 * x256 + x608,
            x146 * x609 + x618,
            x23 * x265 + x625,
            x23 * x275 + x633,
            x23 * x279 + x639,
            x23 * x292 + x647,
            x23 * x293 + x652,
            x263 * x609 + x656,
            x661,
            x663,
            x668,
            x669,
            x670,
            x675,
            x21 * x677 + x355,
            x21 * x680 + x388,
            x21 * x681 + x389,
            x21 * x683 + x404,
            x21 * x685 + x406,
            x258 * x340 + x408,
            x21 * x687 + x415,
            x21 * x690 + x423,
            x21 * x691 + x424,
            x21 * x692 + x431,
            x21 * x693 + x432,
            x258 * x412 + x433,
            0,
            0,
            0,
            0,
            0,
            0,
            x22 * x677 + x710,
            x22 * x680 + x723,
            x22 * x681 + x724,
            x22 * x683 + x730,
            x22 * x685 + x732,
            x340 * x407 + x733,
            x22 * x687 + x737,
            x22 * x690 + x742,
            x22 * x691 + x743,
            x22 * x692 + x746,
            x22 * x693 + x747,
            x407 * x412 + x748,
            0,
            0,
            0,
            0,
            0,
            0,
            x23 * x677 + x776,
            x23 * x680 + x794,
            x23 * x681 + x808,
            x23 * x683 + x816,
            x23 * x685 + x824,
            x340 * x609 + x830,
            x23 * x687 + x833,
            x23 * x690 + x837,
            x23 * x691 + x842,
            x23 * x692 + x845,
            x23 * x693 + x850,
            x412 * x609 + x854,
            x858,
            x860,
            x864,
            x865,
            x866,
            x869,
            x21 * x870 + x510,
            x21 * x872 + x556,
            x21 * x874 + x577,
            x21 * x876 + x598,
            x21 * x878 + x608,
            x21 * x880 + x618,
            x21 * x881 + x625,
            x21 * x883 + x633,
            x21 * x885 + x639,
            x21 * x886 + x647,
            x21 * x887 + x652,
            x21 * x889 + x656,
            x21 * x890 + x661,
            x21 * x892 + x663,
            x21 * x894 + x668,
            x21 * x895 + x669,
            x21 * x896 + x670,
            x21 * x897 + x675,
            x22 * x870 + x776,
            x22 * x872 + x794,
            x22 * x874 + x808,
            x22 * x876 + x816,
            x22 * x878 + x824,
            x22 * x880 + x830,
            x22 * x881 + x833,
            x22 * x883 + x837,
            x22 * x885 + x842,
            x22 * x886 + x845,
            x22 * x887 + x850,
            x22 * x889 + x854,
            x22 * x890 + x858,
            x22 * x892 + x860,
            x22 * x894 + x864,
            x22 * x895 + x865,
            x22 * x896 + x866,
            x22 * x897 + x869,
            x23 * x870 + x925,
            x23 * x872 + x943,
            x23 * x874 + x955,
            x23 * x876 + x963,
            x23 * x878 + x970,
            x23 * x880 + x976,
            x23 * x881 + x979,
            x23 * x883 + x983,
            x23 * x885 + x987,
            x23 * x886 + x990,
            x23 * x887 + x994,
            x23 * x889 + x998,
            x1001 + x23 * x890,
            x1003 + x23 * x892,
            x1007 + x23 * x894,
            x1008 + x23 * x895,
            x1009 + x23 * x896,
            x1012 + x23 * x897,
            x1014 * x21 + x710,
            x1017 * x21 + x723,
            x1018 * x21 + x724,
            x1020 * x21 + x730,
            x1022 * x21 + x732,
            x258 * x702 + x733,
            x1024 * x21 + x737,
            x1027 * x21 + x742,
            x1028 * x21 + x743,
            x1029 * x21 + x746,
            x1030 * x21 + x747,
            x258 * x734 + x748,
            0,
            0,
            0,
            0,
            0,
            0,
            x1014 * x22
            + x1031 * x25
            + x25 * (x1031 + x1033)
            + x294 * x705
            + 2 * x298
            - x305 * x709,
            x1017 * x22 + x1031 * x26 + x1036 * x25 + x1037,
            x1018 * x22 + x1031 * x27 + x1033 * x27,
            x1020 * x22 + x1036 * x26 + x1038,
            x1022 * x22 + x1034 * x27 + x1039,
            x1032 * x28 + x407 * x702,
            x1024 * x22 + x1035 * x25 + x1037 + x25 * (x1035 + x1041),
            x1027 * x22 + x1038 + x1044 * x25,
            x1028 * x22 + x1039 + x1041 * x27,
            x1029 * x22
            + x1043 * x26
            + x1044 * x26
            + x294 * x744
            - x305 * x745
            + 2 * x428
            + x74
            * (
                x294 * x725
                - x305 * x726
                + 2 * x397
                + x72
                * (
                    x294 * x713
                    - x305 * x719
                    + 2 * x381
                    + x67 * (x294 * x697 - x305 * x707 + 2 * x353)
                )
            ),
            x1030 * x22 + x1042 * x27 + x1043 * x27,
            x1040 * x28 + x407 * x734,
            0,
            0,
            0,
            0,
            0,
            0,
            x1014 * x23 + x1047,
            x1017 * x23 + x1051,
            x1018 * x23 + x1055,
            x1020 * x23 + x1057,
            x1022 * x23 + x1060,
            x1062 + x609 * x702,
            x1024 * x23 + x1064,
            x1027 * x23 + x1067,
            x1028 * x23 + x1070,
            x1029 * x23 + x1071,
            x1030 * x23 + x1073,
            x1075 + x609 * x734,
            x1077,
            x1079,
            x1082,
            x1083,
            x1084,
            x1085,
            x1086 * x21 + x776,
            x1088 * x21 + x794,
            x1090 * x21 + x808,
            x1092 * x21 + x816,
            x1094 * x21 + x824,
            x1096 * x21 + x830,
            x1097 * x21 + x833,
            x1099 * x21 + x837,
            x1101 * x21 + x842,
            x1102 * x21 + x845,
            x1103 * x21 + x850,
            x1105 * x21 + x854,
            x1106 * x21 + x858,
            x1108 * x21 + x860,
            x1110 * x21 + x864,
            x1111 * x21 + x865,
            x1112 * x21 + x866,
            x1113 * x21 + x869,
            x1047 + x1086 * x22,
            x1051 + x1088 * x22,
            x1055 + x1090 * x22,
            x1057 + x1092 * x22,
            x1060 + x1094 * x22,
            x1062 + x1096 * x22,
            x1064 + x1097 * x22,
            x1067 + x1099 * x22,
            x1070 + x1101 * x22,
            x1071 + x1102 * x22,
            x1073 + x1103 * x22,
            x1075 + x1105 * x22,
            x1077 + x1106 * x22,
            x1079 + x1108 * x22,
            x1082 + x1110 * x22,
            x1083 + x1111 * x22,
            x1084 + x1112 * x22,
            x1085 + x1113 * x22,
            x1086 * x23 + x1116,
            x1088 * x23 + x1120,
            x1090 * x23 + x1124,
            x1092 * x23 + x1126,
            x1094 * x23 + x1129,
            x1096 * x23 + x1131,
            x1097 * x23 + x1133,
            x1099 * x23 + x1136,
            x1101 * x23 + x1139,
            x1102 * x23 + x1140,
            x1103 * x23 + x1142,
            x1105 * x23 + x1144,
            x1106 * x23 + x1146,
            x1108 * x23 + x1148,
            x1110 * x23 + x1151,
            x1111 * x23 + x1152,
            x1112 * x23 + x1153,
            x1113 * x23 + x1154,
            x1155 * x21 + x925,
            x1157 * x21 + x943,
            x1159 * x21 + x955,
            x1161 * x21 + x963,
            x1163 * x21 + x970,
            x1165 * x21 + x976,
            x1166 * x21 + x979,
            x1168 * x21 + x983,
            x1170 * x21 + x987,
            x1171 * x21 + x990,
            x1172 * x21 + x994,
            x1174 * x21 + x998,
            x1001 + x1175 * x21,
            x1003 + x1177 * x21,
            x1007 + x1179 * x21,
            x1008 + x1180 * x21,
            x1009 + x1181 * x21,
            x1012 + x1182 * x21,
            x1116 + x1155 * x22,
            x1120 + x1157 * x22,
            x1124 + x1159 * x22,
            x1126 + x1161 * x22,
            x1129 + x1163 * x22,
            x1131 + x1165 * x22,
            x1133 + x1166 * x22,
            x1136 + x1168 * x22,
            x1139 + x1170 * x22,
            x1140 + x1171 * x22,
            x1142 + x1172 * x22,
            x1144 + x1174 * x22,
            x1146 + x1175 * x22,
            x1148 + x1177 * x22,
            x1151 + x1179 * x22,
            x1152 + x1180 * x22,
            x1153 + x1181 * x22,
            x1154 + x1182 * x22,
            x1155 * x23
            + x1183 * x25
            + x25 * (x1183 + x1184 * x25)
            + x434 * x914
            + 2 * x438
            - x445 * x924,
            x1157 * x23 + x1183 * x26 + x1186 * x25 + x1187,
            x1159 * x23 + x1183 * x27 + x1189 * x25 + x1190,
            x1161 * x23 + x1186 * x26 + x1191,
            x1163 * x23 + x1189 * x26 + x1193,
            x1165 * x23 + x1189 * x27 + x1194,
            x1166 * x23 + x1185 * x25 + x1187 + x25 * (x1185 + x1195 * x25),
            x1168 * x23 + x1191 + x1197 * x25,
            x1170 * x23 + x1193 + x1199 * x25,
            x1171 * x23
            + x1196 * x26
            + x1197 * x26
            + x434 * x988
            - x445 * x989
            + 2 * x643,
            x1172 * x23 + x1196 * x27 + x1199 * x26 + x1200,
            x1174 * x23 + x1199 * x27 + x1201,
            x1175 * x23 + x1188 * x25 + x1190 + x25 * (x1188 + x1202 * x25),
            x1177 * x23 + x1188 * x26 + x1192 + x1203 * x25,
            x1179 * x23 + x1194 + x1205 * x25,
            x1180 * x23 + x1198 * x26 + x1200 + x1203 * x26,
            x1181 * x23 + x1201 + x1205 * x26,
            x1010 * x434
            - x1011 * x445
            + x1182 * x23
            + x1204 * x27
            + x1205 * x27
            + 2 * x673
            + x74
            * (
                x434 * x971
                - x445 * x972
                + 2 * x613
                + x72
                * (
                    x434 * x945
                    - x445 * x951
                    + 2 * x573
                    + x67 * (x434 * x905 - x445 * x920 + 2 * x508)
                )
            ),
        ]
    )
    return S


def eri_2120(a, A, b, B, c, C, d, D):
    """Cartesian [dp|ds] 2-electron electron repulsion integral.

    Generated code; DO NOT modify by hand!"""

    x0 = a + b
    x1 = x0 ** (-1.0)
    x2 = -x1 * (a * A[0] + b * B[0])
    x3 = -x2 - A[0]
    x4 = 2 * c + 2 * d
    x5 = x4 ** (-1.0)
    x6 = numpy.pi**2.5
    x7 = c + d
    x8 = x0 * x7
    x9 = x0 + x7
    x10 = (x8 + numpy.sqrt(x9)) ** (-1.0)
    x11 = A[0] - B[0]
    x12 = A[1] - B[1]
    x13 = A[2] - B[2]
    x14 = numpy.exp(-a * b * x1 * (x11**2 + x12**2 + x13**2))
    x15 = x7 ** (-1.0)
    x16 = numpy.exp(
        -c * d * x15 * ((C[0] - D[0]) ** 2 + (C[1] - D[1]) ** 2 + (C[2] - D[2]) ** 2)
    )
    x17 = x9 ** (-1.0)
    x18 = x15 * (c * C[0] + d * D[0])
    x19 = -x18 - x2
    x20 = x15 * (c * C[1] + d * D[1])
    x21 = -x1 * (a * A[1] + b * B[1])
    x22 = -x20 - x21
    x23 = -x1 * (a * A[2] + b * B[2])
    x24 = -x15 * (c * C[2] + d * D[2]) - x23
    x25 = x17 * x8 * (x19**2 + x22**2 + x24**2)
    x26 = boys(1, x25)
    x27 = x0 * x17
    x28 = boys(2, x25)
    x29 = 2 * x10 * x14 * x16 * x6
    x30 = x28 * x29
    x31 = x5 * (2 * x10 * x14 * x16 * x26 * x6 - x27 * x30)
    x32 = x18 - C[0]
    x33 = x26 * x29
    x34 = x19 * x27
    x35 = x30 * x34 + x32 * x33
    x36 = boys(3, x25)
    x37 = x29 * x36
    x38 = x30 * x32 + x34 * x37
    x39 = x31 + x32 * x35 + x34 * x38
    x40 = -2 * x10 * x14 * x16 * x28 * x6
    x41 = x5 * (-x27 * x37 - x40)
    x42 = x29 * boys(4, x25)
    x43 = x32 * x37 + x34 * x42
    x44 = x32 * x38 + x34 * x43 + x41
    x45 = x17 * x7
    x46 = x44 * x45
    x47 = 2 * a + 2 * b
    x48 = x4 + x47
    x49 = x48 ** (-1.0)
    x50 = x19 * x45
    x51 = x3 * x37 - x42 * x50
    x52 = x43 * x45
    x53 = -x19 * x52 + x3 * x38 + x49 * x51
    x54 = 2 * x49
    x55 = -x19 * x46 + x3 * x39 + x53 * x54
    x56 = x45 * x55
    x57 = boys(0, x25)
    x58 = x5 * (2 * x10 * x14 * x16 * x57 * x6 - x27 * x33)
    x59 = x29 * x57
    x60 = x32 * (x32 * x59 + x33 * x34) + x34 * x35 + x58
    x61 = x39 * x45
    x62 = x37 * x50
    x63 = x3 * x30 - x62
    x64 = x38 * x45
    x65 = -x19 * x64 + x3 * x35 + x49 * x63
    x66 = -x19 * x61 + x3 * x60 + x54 * x65
    x67 = x47 ** (-1.0)
    x68 = 2 * x67
    x69 = x67 * (x60 - x61)
    x70 = x67 * (x35 - x64)
    x71 = x67 * (-x37 * x45 - x40)
    x72 = x45 * x51
    x73 = -x19 * x72 + x3 * x63 + x71
    x74 = x45 * x53
    x75 = -x19 * x74 + x3 * x65 + x49 * x73 + x70
    x76 = -x19 * x56 + x3 * x66 + x54 * x75 + x69
    x77 = x67 * (x39 - x46)
    x78 = -2 * x10 * x14 * x16 * x36 * x6
    x79 = x5 * (-x27 * x42 - x78)
    x80 = x29 * boys(5, x25)
    x81 = x32 * x42 + x34 * x80
    x82 = x32 * x43 + x34 * x81 + x79
    x83 = x3 * x42 - x50 * x80
    x84 = x3 * x43 + x49 * x83 - x50 * x81
    x85 = x67 * (x38 - x52)
    x86 = x67 * (-x42 * x45 - x78)
    x87 = x3 * x51 - x50 * x83 + x86
    x88 = x3 * x53 + x49 * x87 - x50 * x84 + x85
    x89 = x20 - C[1]
    x90 = x22 * x27
    x91 = x30 * x89 + x37 * x90
    x92 = x37 * x89 + x42 * x90
    x93 = x45 * x92
    x94 = -x19 * x93 + x3 * x91
    x95 = x30 * x90 + x33 * x89
    x96 = x32 * x95 + x34 * x91
    x97 = x32 * x91 + x34 * x92
    x98 = x45 * x97
    x99 = -x19 * x98 + x3 * x96 + x49 * x94
    x100 = x45 * x99
    x101 = x45 * x91
    x102 = x101 * x19
    x103 = -x102 + x3 * x95
    x104 = x33 * x90 + x59 * x89
    x105 = x104 * x32 + x34 * x95
    x106 = x45 * x96
    x107 = x103 * x49 + x105 * x3 - x106 * x19
    x108 = x45 * x94
    x109 = x67 * (-x101 + x95)
    x110 = x103 * x3 - x108 * x19 + x109
    x111 = x67 * (x91 - x93)
    x112 = x42 * x89 + x80 * x90
    x113 = -x112 * x50 + x3 * x92
    x114 = x111 - x113 * x50 + x3 * x94
    x115 = x67 * (x105 - x106)
    x116 = -x100 * x19 + x107 * x3 + x110 * x49 + x115
    x117 = x67 * (x96 - x98)
    x118 = x112 * x34 + x32 * x92
    x119 = x104 * x89 + x58 + x90 * x95
    x120 = x31 + x89 * x95 + x90 * x91
    x121 = x120 * x45
    x122 = x121 * x19
    x123 = x41 + x89 * x91 + x90 * x92
    x124 = x123 * x45
    x125 = x120 * x3 - x124 * x19
    x126 = x125 * x45
    x127 = x67 * (x119 - x121)
    x128 = -x126 * x19 + x127 + x3 * (x119 * x3 - x122)
    x129 = x67 * (x120 - x124)
    x130 = x112 * x90 + x79 + x89 * x92
    x131 = -x21 - A[1]
    x132 = x22 * x61
    x133 = x131 * x39 - x22 * x46
    x134 = x133 * x45
    x135 = x67 * (x131 * x60 - x132 - x134)
    x136 = x131 * x60 - x132
    x137 = x22 * x45
    x138 = x137 * x37
    x139 = x131 * x30 - x138
    x140 = x131 * x37 - x137 * x42
    x141 = x140 * x45
    x142 = x139 * x3 - x141 * x19
    x143 = x22 * x64
    x144 = x131 * x35 - x143
    x145 = x131 * x38 - x22 * x52
    x146 = x145 * x45
    x147 = x142 * x49 + x144 * x3 - x146 * x19
    x148 = -x134 * x19 + x136 * x3 + x147 * x54
    x149 = x67 * (x131 * x35 - x143 - x146)
    x150 = x67 * (2 * x10 * x131 * x14 * x16 * x28 * x6 - x138 - x141)
    x151 = x131 * x42 - x137 * x80
    x152 = x140 * x3 - x151 * x50
    x153 = x131 * x43 - x137 * x81
    x154 = x145 * x3 + x152 * x49 - x153 * x50
    x155 = x131 * x44 - x137 * x82
    x156 = (
        x135
        + x148 * x3
        - x50 * (x133 * x3 + x154 * x54 - x155 * x50)
        + x54 * (x147 * x3 + x149 - x154 * x50 + x49 * (x142 * x3 + x150 - x152 * x50))
    )
    x157 = x131 * x96 + x145 * x49 - x22 * x98
    x158 = x157 * x45
    x159 = x105 * x131 - x106 * x22 + x144 * x49
    x160 = x67 * (-x158 + x159)
    x161 = x131 * x91 + x140 * x49 - x22 * x93
    x162 = x161 * x45
    x163 = -x101 * x22 + x131 * x95 + x139 * x49
    x164 = x67 * (-x162 + x163)
    x165 = -x162 * x19 + x163 * x3
    x166 = -x112 * x137 + x131 * x92 + x151 * x49
    x167 = x161 * x3 - x166 * x50
    x168 = -x158 * x19 + x159 * x3 + x165 * x49
    x169 = -x118 * x137 + x131 * x97 + x153 * x49
    x170 = (
        x160
        + x168 * x3
        + x49 * (x164 + x165 * x3 - x167 * x50)
        - x50 * (x157 * x3 + x167 * x49 - x169 * x50)
    )
    x171 = x120 * x131 - x124 * x22 + x161 * x54
    x172 = x171 * x45
    x173 = x119 * x131 - x121 * x22 + x163 * x54
    x174 = x67 * (-x172 + x173)
    x175 = -x172 * x19 + x173 * x3
    x176 = x123 * x131 - x130 * x137 + x166 * x54
    x177 = x174 + x175 * x3 - x50 * (x171 * x3 - x176 * x50)
    x178 = -x23 - A[2]
    x179 = x24 * x61
    x180 = x178 * x39 - x24 * x46
    x181 = x180 * x45
    x182 = x67 * (x178 * x60 - x179 - x181)
    x183 = x178 * x60 - x179
    x184 = x24 * x45
    x185 = x184 * x37
    x186 = x178 * x30 - x185
    x187 = x186 * x3
    x188 = x178 * x37 - x184 * x42
    x189 = x188 * x45
    x190 = x189 * x19
    x191 = x187 - x190
    x192 = x24 * x64
    x193 = x178 * x35 - x192
    x194 = x193 * x3
    x195 = x178 * x38 - x24 * x52
    x196 = x195 * x45
    x197 = x19 * x196
    x198 = x191 * x49 + x194 - x197
    x199 = -x181 * x19 + x183 * x3 + x198 * x54
    x200 = x67 * (x178 * x35 - x192 - x196)
    x201 = x67 * (2 * x10 * x14 * x16 * x178 * x28 * x6 - x185 - x189)
    x202 = x188 * x3
    x203 = x178 * x42 - x184 * x80
    x204 = x203 * x50
    x205 = x202 - x204
    x206 = x195 * x3
    x207 = x178 * x43 - x184 * x81
    x208 = x207 * x50
    x209 = x205 * x49 + x206 - x208
    x210 = x178 * x44 - x184 * x82
    x211 = (
        x182
        + x199 * x3
        - x50 * (x180 * x3 + x209 * x54 - x210 * x50)
        + x54 * (x198 * x3 + x200 - x209 * x50 + x49 * (x191 * x3 + x201 - x205 * x50))
    )
    x212 = x106 * x24
    x213 = x178 * x96 - x24 * x98
    x214 = x213 * x45
    x215 = x67 * (x105 * x178 - x212 - x214)
    x216 = x101 * x24
    x217 = x178 * x91 - x24 * x93
    x218 = x217 * x45
    x219 = x67 * (x178 * x95 - x216 - x218)
    x220 = x178 * x95 - x216
    x221 = x220 * x3
    x222 = x19 * x218
    x223 = x221 - x222
    x224 = x217 * x3
    x225 = -x112 * x184 + x178 * x92
    x226 = x225 * x50
    x227 = x224 - x226
    x228 = x105 * x178 - x212
    x229 = -x19 * x214 + x223 * x49 + x228 * x3
    x230 = -x118 * x184 + x178 * x97
    x231 = (
        x215
        + x229 * x3
        + x49 * (x219 + x223 * x3 - x227 * x50)
        - x50 * (x213 * x3 + x227 * x49 - x230 * x50)
    )
    x232 = x196 * x49
    x233 = x67 * (x193 * x49 - x232)
    x234 = x189 * x49
    x235 = x67 * (x186 * x49 - x234)
    x236 = x187 * x49 - x190 * x49
    x237 = x202 * x49 - x204 * x49
    x238 = x194 * x49 - x197 * x49 + x236 * x49
    x239 = (
        x233
        + x238 * x3
        + x49 * (x235 + x236 * x3 - x237 * x50)
        - x50 * (x206 * x49 - x208 * x49 + x237 * x49)
    )
    x240 = x121 * x24
    x241 = x120 * x178 - x124 * x24
    x242 = x241 * x45
    x243 = x67 * (x119 * x178 - x240 - x242)
    x244 = x119 * x178 - x240
    x245 = -x19 * x242 + x244 * x3
    x246 = x123 * x178 - x130 * x184
    x247 = x243 + x245 * x3 - x50 * (x241 * x3 - x246 * x50)
    x248 = x218 * x49
    x249 = x67 * (x220 * x49 - x248)
    x250 = x221 * x49 - x222 * x49
    x251 = x249 + x250 * x3 - x50 * (x224 * x49 - x226 * x49)
    x252 = x48 ** (-2.0)
    x253 = 2 * x252
    x254 = x67 * (2 * x186 * x252 - x189 * x253)
    x255 = x187 * x253 - x190 * x253
    x256 = x254 + x255 * x3 - x50 * (x202 * x253 - x204 * x253)
    x257 = x131 * x136 - x134 * x22 + x69
    x258 = x131 * x139 - x141 * x22 + x71
    x259 = x131 * x140 - x137 * x151 + x86
    x260 = x131 * x144 - x146 * x22 + x70
    x261 = x131 * x145 - x137 * x153 + x85
    x262 = x131 * x133 - x137 * x155 + x77
    x263 = (
        x257 * x3
        - x262 * x50
        + x54 * (x260 * x3 - x261 * x50 + x49 * (x258 * x3 - x259 * x50))
    )
    x264 = x109 + x131 * x163 - x162 * x22 + x258 * x49
    x265 = x111 + x131 * x161 - x137 * x166 + x259 * x49
    x266 = x115 + x131 * x159 - x158 * x22 + x260 * x49
    x267 = x117 + x131 * x157 - x137 * x169 + x261 * x49
    x268 = x266 * x3 - x267 * x50 + x49 * (x264 * x3 - x265 * x50)
    x269 = x127 + x131 * x173 - x172 * x22 + x264 * x54
    x270 = x129 + x131 * x171 - x137 * x176 + x265 * x54
    x271 = x269 * x3 - x270 * x50
    x272 = x131 * x183 - x181 * x22
    x273 = x131 * x186
    x274 = x189 * x22
    x275 = x273 - x274
    x276 = x131 * x188
    x277 = x137 * x203
    x278 = x276 - x277
    x279 = x131 * x193 - x196 * x22
    x280 = x131 * x195
    x281 = x137 * x207
    x282 = x280 - x281
    x283 = x131 * x180 - x137 * x210
    x284 = (
        x272 * x3
        - x283 * x50
        + x54 * (x279 * x3 - x282 * x50 + x49 * (x275 * x3 - x278 * x50))
    )
    x285 = x131 * x220 - x218 * x22 + x275 * x49
    x286 = x131 * x217
    x287 = x137 * x225
    x288 = x278 * x49 + x286 - x287
    x289 = x131 * x228 - x214 * x22 + x279 * x49
    x290 = x131 * x213 - x137 * x230 + x282 * x49
    x291 = x289 * x3 - x290 * x50 + x49 * (x285 * x3 - x288 * x50)
    x292 = x193 * x49
    x293 = x131 * x292 - x22 * x232
    x294 = x280 * x49 - x281 * x49
    x295 = x186 * x49
    x296 = x131 * x295 - x22 * x234
    x297 = x276 * x49 - x277 * x49
    x298 = x293 * x3 - x294 * x50 + x49 * (x296 * x3 - x297 * x50)
    x299 = x131 * x244 - x22 * x242 + x285 * x54
    x300 = x131 * x241 - x137 * x246 + x288 * x54
    x301 = x299 * x3 - x300 * x50
    x302 = x220 * x49
    x303 = x131 * x302 - x22 * x248 + x296 * x49
    x304 = x286 * x49 - x287 * x49 + x297 * x49
    x305 = x3 * x303 - x304 * x50
    x306 = x253 * x273 - x253 * x274
    x307 = x253 * x276 - x253 * x277
    x308 = x3 * x306 - x307 * x50
    x309 = x178 * x183 - x181 * x24 + x69
    x310 = x178 * x186
    x311 = x189 * x24
    x312 = x310 - x311 + x71
    x313 = x178 * x188
    x314 = x184 * x203
    x315 = x313 - x314 + x86
    x316 = x178 * x193 - x196 * x24 + x70
    x317 = x178 * x195
    x318 = x184 * x207
    x319 = x317 - x318 + x85
    x320 = x178 * x180 - x184 * x210 + x77
    x321 = (
        x3 * x309
        - x320 * x50
        + x54 * (x3 * x316 - x319 * x50 + x49 * (x3 * x312 - x315 * x50))
    )
    x322 = x109 + x178 * x220 - x218 * x24
    x323 = x178 * x217
    x324 = x184 * x225
    x325 = x111 + x323 - x324
    x326 = x115 + x178 * x228 - x214 * x24
    x327 = x117 + x178 * x213 - x184 * x230
    x328 = x3 * x326 - x327 * x50 + x49 * (x3 * x322 - x325 * x50)
    x329 = x178 * x295 - x234 * x24 + x312 * x49
    x330 = x313 * x49 - x314 * x49 + x315 * x49
    x331 = x178 * x292 - x232 * x24 + x316 * x49
    x332 = x317 * x49 - x318 * x49 + x319 * x49
    x333 = x3 * x331 - x332 * x50 + x49 * (x3 * x329 - x330 * x50)
    x334 = x127 + x178 * x244 - x24 * x242
    x335 = x129 + x178 * x241 - x184 * x246
    x336 = x3 * x334 - x335 * x50
    x337 = x178 * x302 - x24 * x248 + x322 * x49
    x338 = x323 * x49 - x324 * x49 + x325 * x49
    x339 = x3 * x337 - x338 * x50
    x340 = x253 * x310 - x253 * x311 + x329 * x54
    x341 = x253 * x313 - x253 * x314 + x330 * x54
    x342 = x3 * x340 - x341 * x50
    x343 = x131 * x272 - x137 * x283 + x182
    x344 = x131 * x289 - x137 * x290 + x215 + x49 * (x131 * x279 - x137 * x282 + x200)
    x345 = x131 * x293 - x137 * x294 + x233
    x346 = (
        x131 * x299
        - x137 * x300
        + x243
        + x54
        * (x131 * x285 - x137 * x288 + x219 + x49 * (x131 * x275 - x137 * x278 + x201))
    )
    x347 = x131 * x303 - x137 * x304 + x249 + x49 * (x131 * x296 - x137 * x297 + x235)
    x348 = x131 * x306 - x137 * x307 + x254
    x349 = x131 * x309 - x137 * x320
    x350 = x131 * x326 - x137 * x327 + x49 * (x131 * x316 - x137 * x319)
    x351 = x131 * x331 - x137 * x332
    x352 = (
        x131 * x334
        - x137 * x335
        + x54 * (x131 * x322 - x137 * x325 + x49 * (x131 * x312 - x137 * x315))
    )
    x353 = x131 * x337 - x137 * x338 + x49 * (x131 * x329 - x137 * x330)
    x354 = x131 * x340 - x137 * x341

    # 108 item(s)
    S = numpy.array(
        [
            x11 * x76
            + x3 * x76
            - x50
            * (x3 * x55 - x50 * (x3 * x44 - x50 * x82 + x54 * x84) + x54 * x88 + x77)
            + x54
            * (
                x3 * x75
                + x49
                * (
                    x3 * x73
                    - x50 * x87
                    + x68 * (2 * x10 * x14 * x16 * x28 * x3 * x6 - x62 - x72)
                )
                - x50 * x88
                + x68 * (x65 - x74)
            )
            + x68 * (-x56 + x66),
            x11 * x116
            + x116 * x3
            + x49 * (x110 * x3 - x114 * x50 + x68 * (-x102 - x108 + x3 * x95))
            - x50
            * (x114 * x49 + x117 + x3 * x99 - x50 * (x113 * x49 - x118 * x50 + x3 * x97))
            + x68 * (-x100 + x107),
            0,
            x11 * x128
            + x128 * x3
            - x50 * (x125 * x3 + x129 - x50 * (x123 * x3 - x130 * x50))
            + x68 * (x119 * x3 - x122 - x126),
            0,
            0,
            x12 * x76 + x156,
            x116 * x12 + x170,
            0,
            x12 * x128 + x177,
            0,
            0,
            x13 * x76 + x211,
            x116 * x13 + x231,
            x239,
            x128 * x13 + x247,
            x251,
            x256,
            x11 * x148 + x156,
            x11 * x168 + x170,
            0,
            x11 * x175 + x177,
            0,
            0,
            x12 * x148 + x263,
            x12 * x168 + x268,
            0,
            x12 * x175 + x271,
            0,
            0,
            x13 * x148 + x284,
            x13 * x168 + x291,
            x298,
            x13 * x175 + x301,
            x305,
            x308,
            x11 * x199 + x211,
            x11 * x229 + x231,
            x11 * x238 + x239,
            x11 * x245 + x247,
            x11 * x250 + x251,
            x11 * x255 + x256,
            x12 * x199 + x284,
            x12 * x229 + x291,
            x12 * x238 + x298,
            x12 * x245 + x301,
            x12 * x250 + x305,
            x12 * x255 + x308,
            x13 * x199 + x321,
            x13 * x229 + x328,
            x13 * x238 + x333,
            x13 * x245 + x336,
            x13 * x250 + x339,
            x13 * x255 + x342,
            x11 * x257 + x263,
            x11 * x266 + x268,
            0,
            x11 * x269 + x271,
            0,
            0,
            x12 * x257 + x131 * x257 + 2 * x135 - x137 * x262,
            x12 * x266
            + x131 * x266
            - x137 * x267
            + 2 * x160
            + x49 * (x131 * x260 - x137 * x261 + 2 * x149),
            0,
            x12 * x269
            + x131 * x269
            - x137 * x270
            + 2 * x174
            + x54
            * (
                x131 * x264
                - x137 * x265
                + 2 * x164
                + x49 * (x131 * x258 - x137 * x259 + 2 * x150)
            ),
            0,
            0,
            x13 * x257 + x343,
            x13 * x266 + x344,
            x345,
            x13 * x269 + x346,
            x347,
            x348,
            x11 * x272 + x284,
            x11 * x289 + x291,
            x11 * x293 + x298,
            x11 * x299 + x301,
            x11 * x303 + x305,
            x11 * x306 + x308,
            x12 * x272 + x343,
            x12 * x289 + x344,
            x12 * x293 + x345,
            x12 * x299 + x346,
            x12 * x303 + x347,
            x12 * x306 + x348,
            x13 * x272 + x349,
            x13 * x289 + x350,
            x13 * x293 + x351,
            x13 * x299 + x352,
            x13 * x303 + x353,
            x13 * x306 + x354,
            x11 * x309 + x321,
            x11 * x326 + x328,
            x11 * x331 + x333,
            x11 * x334 + x336,
            x11 * x337 + x339,
            x11 * x340 + x342,
            x12 * x309 + x349,
            x12 * x326 + x350,
            x12 * x331 + x351,
            x12 * x334 + x352,
            x12 * x337 + x353,
            x12 * x340 + x354,
            x13 * x309 + x178 * x309 + 2 * x182 - x184 * x320,
            x13 * x326 + x178 * x326 - x184 * x327 + 2 * x215,
            x13 * x331
            + x178 * x331
            - x184 * x332
            + 2 * x233
            + x49 * (x178 * x316 - x184 * x319 + 2 * x200),
            x13 * x334 + x178 * x334 - x184 * x335 + 2 * x243,
            x13 * x337
            + x178 * x337
            - x184 * x338
            + 2 * x249
            + x49 * (x178 * x322 - x184 * x325 + 2 * x219),
            x13 * x340
            + x178 * x340
            - x184 * x341
            + 2 * x254
            + x54
            * (
                x178 * x329
                - x184 * x330
                + 2 * x235
                + x49 * (x178 * x312 - x184 * x315 + 2 * x201)
            ),
        ]
    )
    return S


def eri_2121(a, A, b, B, c, C, d, D):
    """Cartesian [dp|dp] 2-electron electron repulsion integral.

    Generated code; DO NOT modify by hand!"""

    x0 = a + b
    x1 = x0 ** (-1.0)
    x2 = -x1 * (a * A[0] + b * B[0])
    x3 = -x2 - A[0]
    x4 = c + d
    x5 = x4 ** (-1.0)
    x6 = x5 * (c * C[0] + d * D[0])
    x7 = x6 - C[0]
    x8 = x0 + x4
    x9 = x8 ** (-1.0)
    x10 = -x2 - x6
    x11 = x5 * (c * C[1] + d * D[1])
    x12 = -x1 * (a * A[1] + b * B[1])
    x13 = -x11 - x12
    x14 = -x1 * (a * A[2] + b * B[2])
    x15 = -x14 - x5 * (c * C[2] + d * D[2])
    x16 = x0 * x4
    x17 = x16 * x9 * (x10**2 + x13**2 + x15**2)
    x18 = boys(2, x17)
    x19 = numpy.pi**2.5
    x20 = (x16 + numpy.sqrt(x8)) ** (-1.0)
    x21 = A[0] - B[0]
    x22 = A[1] - B[1]
    x23 = A[2] - B[2]
    x24 = numpy.exp(-a * b * x1 * (x21**2 + x22**2 + x23**2))
    x25 = C[0] - D[0]
    x26 = C[1] - D[1]
    x27 = C[2] - D[2]
    x28 = numpy.exp(-c * d * x5 * (x25**2 + x26**2 + x27**2))
    x29 = 2 * x19 * x20 * x24 * x28
    x30 = x18 * x29
    x31 = x0 * x9
    x32 = x10 * x31
    x33 = boys(3, x17)
    x34 = x29 * x33
    x35 = x30 * x7 + x32 * x34
    x36 = x31 * x35
    x37 = boys(1, x17)
    x38 = x29 * x37
    x39 = x30 * x32 + x38 * x7
    x40 = 2 * c + 2 * d
    x41 = x40 ** (-1.0)
    x42 = 2 * x41
    x43 = x41 * (2 * x19 * x20 * x24 * x28 * x37 - x30 * x31)
    x44 = x10 * x36 + x39 * x7 + x43
    x45 = -2 * x18 * x19 * x20 * x24 * x28
    x46 = x41 * (-x31 * x34 - x45)
    x47 = boys(4, x17)
    x48 = x29 * x47
    x49 = x32 * x48 + x34 * x7
    x50 = x31 * x49
    x51 = x10 * x50 + x35 * x7 + x46
    x52 = x32 * x51 + x42 * (-x36 + x39) + x44 * x7
    x53 = -2 * x19 * x20 * x24 * x28 * x33
    x54 = x41 * (-x31 * x48 - x53)
    x55 = x29 * boys(5, x17)
    x56 = x32 * x55 + x48 * x7
    x57 = x31 * x56
    x58 = x10 * x57 + x49 * x7 + x54
    x59 = x32 * x58 + x42 * (x35 - x50) + x51 * x7
    x60 = x4 * x9
    x61 = x59 * x60
    x62 = x58 * x60
    x63 = 2 * a + 2 * b
    x64 = x40 + x63
    x65 = x64 ** (-1.0)
    x66 = x10 * x60
    x67 = x3 * x48 - x55 * x66
    x68 = x56 * x60
    x69 = -x10 * x68 + x3 * x49 + x65 * x67
    x70 = 2 * x65
    x71 = -x10 * x62 + x3 * x51 + x69 * x70
    x72 = 3 * x65
    x73 = -x10 * x61 + x3 * x52 + x71 * x72
    x74 = x60 * x73
    x75 = x31 * x39
    x76 = boys(0, x17)
    x77 = x29 * x76
    x78 = x32 * x38 + x7 * x77
    x79 = x41 * (2 * x19 * x20 * x24 * x28 * x76 - x31 * x38)
    x80 = x10 * x75 + x7 * x78 + x79
    x81 = x32 * x44 + x42 * (-x75 + x78) + x7 * x80
    x82 = x52 * x60
    x83 = x51 * x60
    x84 = x48 * x66
    x85 = x3 * x34 - x84
    x86 = x49 * x60
    x87 = -x10 * x86 + x3 * x35 + x65 * x85
    x88 = -x10 * x83 + x3 * x44 + x70 * x87
    x89 = -x10 * x82 + x3 * x81 + x72 * x88
    x90 = x63 ** (-1.0)
    x91 = 2 * x90
    x92 = x90 * (x81 - x82)
    x93 = x90 * (x44 - x83)
    x94 = x60 * x71
    x95 = x90 * (x35 - x86)
    x96 = x90 * (-x48 * x60 - x53)
    x97 = x60 * x67
    x98 = -x10 * x97 + x3 * x85 + x96
    x99 = x60 * x69
    x100 = -x10 * x99 + x3 * x87 + x65 * x98 + x95
    x101 = -x10 * x94 + x100 * x70 + x3 * x88 + x93
    x102 = -x10 * x74 + x101 * x72 + x3 * x89 + x92
    x103 = x90 * (x52 - x61)
    x104 = -2 * x19 * x20 * x24 * x28 * x47
    x105 = x41 * (-x104 - x31 * x55)
    x106 = x29 * boys(6, x17)
    x107 = x106 * x32 + x55 * x7
    x108 = x105 + x107 * x32 + x56 * x7
    x109 = x108 * x32 + x42 * (x49 - x57) + x58 * x7
    x110 = -x106 * x66 + x3 * x55
    x111 = -x107 * x66 + x110 * x65 + x3 * x56
    x112 = -x108 * x66 + x111 * x70 + x3 * x58
    x113 = x90 * (x51 - x62)
    x114 = x90 * (x49 - x68)
    x115 = x90 * (-x104 - x55 * x60)
    x116 = -x110 * x66 + x115 + x3 * x67
    x117 = -x111 * x66 + x114 + x116 * x65 + x3 * x69
    x118 = -x112 * x66 + x113 + x117 * x70 + x3 * x71
    x119 = x60 * x88
    x120 = x44 * x60
    x121 = x34 * x66
    x122 = -x121 + x3 * x30
    x123 = x35 * x60
    x124 = -x10 * x123 + x122 * x65 + x3 * x39
    x125 = -x10 * x120 + x124 * x70 + x3 * x80
    x126 = x90 * (-x120 + x80)
    x127 = x90 * (-x123 + x39)
    x128 = x90 * (-x34 * x60 - x45)
    x129 = x60 * x85
    x130 = -x10 * x129 + x122 * x3 + x128
    x131 = x60 * x87
    x132 = -x10 * x131 + x124 * x3 + x127 + x130 * x65
    x133 = -x10 * x119 + x125 * x3 + x126 + x132 * x70
    x134 = (
        -x101 * x66
        + x133 * x3
        + x70
        * (
            -x100 * x66
            + x132 * x3
            + x65
            * (
                x130 * x3
                - x66 * x98
                + x91 * (-x121 - x129 + 2 * x18 * x19 * x20 * x24 * x28 * x3)
            )
            + x91 * (x124 - x131)
        )
        + x91 * (-x119 + x125)
    )
    x135 = x102 + x133 * x25
    x136 = x11 - C[1]
    x137 = x13 * x31
    x138 = x136 * x30 + x137 * x34
    x139 = x138 * x31
    x140 = x136 * x38 + x137 * x30
    x141 = x41 * (-x139 + x140)
    x142 = x10 * x139 + x140 * x7
    x143 = x136 * x34 + x137 * x48
    x144 = x143 * x31
    x145 = x10 * x144 + x138 * x7
    x146 = x141 + x142 * x7 + x145 * x32
    x147 = x146 * x60
    x148 = x140 * x31
    x149 = x136 * x77 + x137 * x38
    x150 = x41 * (-x148 + x149)
    x151 = x10 * x148 + x149 * x7
    x152 = x142 * x32 + x150 + x151 * x7
    x153 = x90 * (-x147 + x152)
    x154 = x143 * x60
    x155 = x10 * x154
    x156 = x138 * x3 - x155
    x157 = x145 * x60
    x158 = -x10 * x157 + x142 * x3 + x156 * x65
    x159 = -x10 * x147 + x152 * x3 + x158 * x70
    x160 = x41 * (x138 - x144)
    x161 = x136 * x48 + x137 * x55
    x162 = x161 * x31
    x163 = x10 * x162 + x143 * x7
    x164 = x145 * x7 + x160 + x163 * x32
    x165 = x164 * x60
    x166 = x161 * x60
    x167 = -x10 * x166 + x143 * x3
    x168 = x163 * x60
    x169 = -x10 * x168 + x145 * x3 + x167 * x65
    x170 = -x10 * x165 + x146 * x3 + x169 * x70
    x171 = x170 * x60
    x172 = x90 * (x142 - x157)
    x173 = x90 * (x138 - x154)
    x174 = x167 * x60
    x175 = -x10 * x174 + x156 * x3 + x173
    x176 = x169 * x60
    x177 = -x10 * x176 + x158 * x3 + x172 + x175 * x65
    x178 = -x10 * x171 + x153 + x159 * x3 + x177 * x70
    x179 = x133 * x26 + x178
    x180 = x90 * (x143 - x166)
    x181 = x106 * x137 + x136 * x55
    x182 = x161 * x3 - x181 * x66
    x183 = x167 * x3 + x180 - x182 * x66
    x184 = x90 * (x145 - x168)
    x185 = x161 * x7 + x181 * x32
    x186 = x163 * x3 + x182 * x65 - x185 * x66
    x187 = x169 * x3 + x183 * x65 + x184 - x186 * x66
    x188 = x90 * (x146 - x165)
    x189 = x41 * (x143 - x162)
    x190 = x163 * x7 + x185 * x32 + x189
    x191 = (
        x178 * x3
        - x66
        * (x170 * x3 + x187 * x70 + x188 - x66 * (x164 * x3 + x186 * x70 - x190 * x66))
        + x70
        * (
            x177 * x3
            - x187 * x66
            + x65 * (x175 * x3 - x183 * x66 + x91 * (x138 * x3 - x155 - x174))
            + x91 * (x158 - x176)
        )
        + x91 * (x159 - x171)
    )
    x192 = x21 * x27
    x193 = x142 * x60
    x194 = x90 * (x151 - x193)
    x195 = x138 * x60
    x196 = x90 * (x140 - x195)
    x197 = x10 * x195
    x198 = x140 * x3 - x197
    x199 = x156 * x60
    x200 = -x10 * x199 + x196 + x198 * x3
    x201 = -x10 * x193 + x151 * x3 + x198 * x65
    x202 = x158 * x60
    x203 = -x10 * x202 + x194 + x200 * x65 + x201 * x3
    x204 = x178 + x203 * x25
    x205 = (
        -x177 * x66
        + x203 * x3
        + x65 * (-x175 * x66 + x200 * x3 + x91 * (x140 * x3 - x197 - x199))
        + x91 * (x201 - x202)
    )
    x206 = x13 * x139 + x136 * x140 + x43
    x207 = x13 * x144 + x136 * x138 + x46
    x208 = x206 * x7 + x207 * x32
    x209 = x208 * x60
    x210 = x13 * x148 + x136 * x149 + x79
    x211 = x206 * x32 + x210 * x7
    x212 = x90 * (-x209 + x211)
    x213 = x207 * x60
    x214 = x90 * (x206 - x213)
    x215 = x10 * x213
    x216 = x206 * x3 - x215
    x217 = x13 * x162 + x136 * x143 + x54
    x218 = x217 * x60
    x219 = -x10 * x218 + x207 * x3
    x220 = x219 * x60
    x221 = -x10 * x220 + x214 + x216 * x3
    x222 = -x10 * x209 + x211 * x3 + x216 * x65
    x223 = x207 * x7 + x217 * x32
    x224 = x223 * x60
    x225 = -x10 * x224 + x208 * x3 + x219 * x65
    x226 = x225 * x60
    x227 = -x10 * x226 + x212 + x221 * x65 + x222 * x3
    x228 = x203 * x26 + x227
    x229 = x90 * (x207 - x218)
    x230 = x105 + x136 * x161 + x137 * x181
    x231 = x217 * x3 - x230 * x66
    x232 = x219 * x3 + x229 - x231 * x66
    x233 = x90 * (x208 - x224)
    x234 = x217 * x7 + x230 * x32
    x235 = (
        x227 * x3
        + x65 * (x221 * x3 - x232 * x66 + x91 * (x206 * x3 - x215 - x220))
        - x66
        * (x225 * x3 + x232 * x65 + x233 - x66 * (x223 * x3 + x231 * x65 - x234 * x66))
        + x91 * (x222 - x226)
    )
    x236 = x206 * x60
    x237 = x90 * (x210 - x236)
    x238 = x10 * x236
    x239 = x216 * x60
    x240 = -x10 * x239 + x237 + x3 * (x210 * x3 - x238)
    x241 = x227 + x240 * x25
    x242 = -x221 * x66 + x240 * x3 + x91 * (x210 * x3 - x238 - x239)
    x243 = x136 * x210 + x137 * x206 + 2 * x150
    x244 = x136 * x206 + x137 * x207 + 2 * x141
    x245 = x244 * x60
    x246 = x10 * x245
    x247 = x136 * x207 + x137 * x217 + 2 * x160
    x248 = x247 * x60
    x249 = -x10 * x248 + x244 * x3
    x250 = x249 * x60
    x251 = x90 * (x243 - x245)
    x252 = -x10 * x250 + x251 + x3 * (x243 * x3 - x246)
    x253 = x90 * (x244 - x248)
    x254 = x136 * x217 + x137 * x230 + 2 * x189
    x255 = x240 * x26 + x252
    x256 = -x12 - A[1]
    x257 = x13 * x82
    x258 = -x13 * x61 + x256 * x52
    x259 = x258 * x60
    x260 = x90 * (x256 * x81 - x257 - x259)
    x261 = x120 * x13
    x262 = x13 * x83
    x263 = x256 * x44 - x262
    x264 = x263 * x60
    x265 = x90 * (x256 * x80 - x261 - x264)
    x266 = x256 * x80 - x261
    x267 = x13 * x60
    x268 = x267 * x34
    x269 = x256 * x30 - x268
    x270 = x267 * x48
    x271 = x256 * x34 - x270
    x272 = x271 * x60
    x273 = -x10 * x272 + x269 * x3
    x274 = x123 * x13
    x275 = x256 * x39 - x274
    x276 = x13 * x86
    x277 = x256 * x35 - x276
    x278 = x277 * x60
    x279 = -x10 * x278 + x273 * x65 + x275 * x3
    x280 = -x10 * x264 + x266 * x3 + x279 * x70
    x281 = -x13 * x62 + x256 * x51
    x282 = x281 * x60
    x283 = x256 * x48 - x267 * x55
    x284 = x283 * x60
    x285 = -x10 * x284 + x271 * x3
    x286 = -x13 * x68 + x256 * x49
    x287 = x286 * x60
    x288 = -x10 * x287 + x277 * x3 + x285 * x65
    x289 = -x10 * x282 + x263 * x3 + x288 * x70
    x290 = x90 * (x256 * x39 - x274 - x278)
    x291 = x90 * (2 * x18 * x19 * x20 * x24 * x256 * x28 - x268 - x272)
    x292 = (
        x265
        + x280 * x3
        - x289 * x66
        + x70 * (x279 * x3 - x288 * x66 + x290 + x65 * (x273 * x3 - x285 * x66 + x291))
    )
    x293 = x256 * x81 - x257
    x294 = -x10 * x259 + x289 * x72 + x293 * x3
    x295 = x90 * (x256 * x44 - x262 - x282)
    x296 = -x108 * x267 + x256 * x58
    x297 = -x106 * x267 + x256 * x55
    x298 = x283 * x3 - x297 * x66
    x299 = -x107 * x267 + x256 * x56
    x300 = x286 * x3 + x298 * x65 - x299 * x66
    x301 = x281 * x3 - x296 * x66 + x300 * x70
    x302 = x90 * (x256 * x35 - x276 - x287)
    x303 = x90 * (2 * x19 * x20 * x24 * x256 * x28 * x33 - x270 - x284)
    x304 = -x109 * x267 + x256 * x59
    x305 = (
        x25 * x292
        + x260
        + x294 * x3
        - x66 * (x258 * x3 + x301 * x72 - x304 * x66)
        + x72
        * (
            x289 * x3
            + x295
            - x301 * x66
            + x70
            * (x288 * x3 - x300 * x66 + x302 + x65 * (x285 * x3 - x298 * x66 + x303))
        )
    )
    x306 = -x13 * x165 + x146 * x256 + x281 * x65
    x307 = x306 * x60
    x308 = -x13 * x147 + x152 * x256 + x263 * x65
    x309 = x90 * (-x307 + x308)
    x310 = -x13 * x154 + x138 * x256 + x271 * x65
    x311 = -x13 * x166 + x143 * x256 + x283 * x65
    x312 = x311 * x60
    x313 = -x10 * x312 + x3 * x310
    x314 = -x13 * x157 + x142 * x256 + x277 * x65
    x315 = -x13 * x168 + x145 * x256 + x286 * x65
    x316 = x315 * x60
    x317 = -x10 * x316 + x3 * x314 + x313 * x65
    x318 = -x10 * x307 + x3 * x308 + x317 * x70
    x319 = x90 * (x314 - x316)
    x320 = x90 * (x310 - x312)
    x321 = x161 * x256 - x181 * x267 + x297 * x65
    x322 = x3 * x311 - x321 * x66
    x323 = x163 * x256 - x185 * x267 + x299 * x65
    x324 = x3 * x315 + x322 * x65 - x323 * x66
    x325 = x164 * x256 - x190 * x267 + x296 * x65
    x326 = (
        x3 * x318
        + x309
        - x66 * (x3 * x306 + x324 * x70 - x325 * x66)
        + x70 * (x3 * x317 + x319 - x324 * x66 + x65 * (x3 * x313 + x320 - x322 * x66))
    )
    x327 = x26 * x292 + x326
    x328 = x22 * x27
    x329 = x27 * x292
    x330 = x314 * x60
    x331 = -x13 * x193 + x151 * x256 + x275 * x65
    x332 = x90 * (-x330 + x331)
    x333 = x310 * x60
    x334 = -x13 * x195 + x140 * x256 + x269 * x65
    x335 = x90 * (-x333 + x334)
    x336 = -x10 * x333 + x3 * x334
    x337 = -x10 * x330 + x3 * x331 + x336 * x65
    x338 = x3 * x337 - x317 * x66 + x332 + x65 * (x3 * x336 - x313 * x66 + x335)
    x339 = x25 * x338 + x326
    x340 = -x13 * x224 + x208 * x256 + x315 * x70
    x341 = x340 * x60
    x342 = -x13 * x209 + x211 * x256 + x314 * x70
    x343 = x90 * (-x341 + x342)
    x344 = -x13 * x218 + x207 * x256 + x311 * x70
    x345 = x344 * x60
    x346 = -x13 * x213 + x206 * x256 + x310 * x70
    x347 = x90 * (-x345 + x346)
    x348 = -x10 * x345 + x3 * x346
    x349 = x217 * x256 - x230 * x267 + x321 * x70
    x350 = x3 * x344 - x349 * x66
    x351 = -x10 * x341 + x3 * x342 + x348 * x65
    x352 = x223 * x256 - x234 * x267 + x323 * x70
    x353 = (
        x3 * x351
        + x343
        + x65 * (x3 * x348 + x347 - x350 * x66)
        - x66 * (x3 * x340 + x350 * x65 - x352 * x66)
    )
    x354 = x26 * x338 + x353
    x355 = x27 * x338
    x356 = x346 * x60
    x357 = -x13 * x236 + x210 * x256 + x334 * x70
    x358 = x90 * (-x356 + x357)
    x359 = -x10 * x356 + x3 * x357
    x360 = x3 * x359 - x348 * x66 + x358
    x361 = x25 * x360 + x353
    x362 = -x13 * x248 + x244 * x256 + x344 * x72
    x363 = x362 * x60
    x364 = -x13 * x245 + x243 * x256 + x346 * x72
    x365 = x90 * (-x363 + x364)
    x366 = -x10 * x363 + x3 * x364
    x367 = x247 * x256 - x254 * x267 + x349 * x72
    x368 = x26 * x360 + x3 * x366 + x365 - x66 * (x3 * x362 - x367 * x66)
    x369 = x27 * x360
    x370 = -x14 - A[2]
    x371 = x15 * x82
    x372 = -x15 * x61 + x370 * x52
    x373 = x372 * x60
    x374 = x90 * (x370 * x81 - x371 - x373)
    x375 = x120 * x15
    x376 = x15 * x83
    x377 = x370 * x44 - x376
    x378 = x377 * x60
    x379 = x90 * (x370 * x80 - x375 - x378)
    x380 = x370 * x80 - x375
    x381 = x15 * x60
    x382 = x34 * x381
    x383 = x30 * x370 - x382
    x384 = x3 * x383
    x385 = x381 * x48
    x386 = x34 * x370 - x385
    x387 = x386 * x60
    x388 = x10 * x387
    x389 = x384 - x388
    x390 = x123 * x15
    x391 = x370 * x39 - x390
    x392 = x3 * x391
    x393 = x15 * x86
    x394 = x35 * x370 - x393
    x395 = x394 * x60
    x396 = -x10 * x395 + x389 * x65 + x392
    x397 = -x10 * x378 + x3 * x380 + x396 * x70
    x398 = x3 * x377
    x399 = -x15 * x62 + x370 * x51
    x400 = x399 * x60
    x401 = x10 * x400
    x402 = x3 * x386
    x403 = x370 * x48 - x381 * x55
    x404 = x403 * x60
    x405 = x10 * x404
    x406 = x402 - x405
    x407 = x3 * x394
    x408 = -x15 * x68 + x370 * x49
    x409 = x408 * x60
    x410 = x10 * x409
    x411 = x406 * x65 + x407 - x410
    x412 = x398 - x401 + x411 * x70
    x413 = x90 * (x370 * x39 - x390 - x395)
    x414 = x90 * (2 * x18 * x19 * x20 * x24 * x28 * x370 - x382 - x387)
    x415 = (
        x3 * x397
        + x379
        - x412 * x66
        + x70 * (x3 * x396 - x411 * x66 + x413 + x65 * (x3 * x389 - x406 * x66 + x414))
    )
    x416 = x370 * x81 - x371
    x417 = -x10 * x373 + x3 * x416 + x412 * x72
    x418 = x90 * (x370 * x44 - x376 - x400)
    x419 = x3 * x399
    x420 = -x108 * x381 + x370 * x58
    x421 = x420 * x66
    x422 = x3 * x403
    x423 = -x106 * x381 + x370 * x55
    x424 = x423 * x66
    x425 = x422 - x424
    x426 = x3 * x408
    x427 = -x107 * x381 + x370 * x56
    x428 = x427 * x66
    x429 = x425 * x65 + x426 - x428
    x430 = x419 - x421 + x429 * x70
    x431 = x90 * (x35 * x370 - x393 - x409)
    x432 = x90 * (2 * x19 * x20 * x24 * x28 * x33 * x370 - x385 - x404)
    x433 = -x109 * x381 + x370 * x59
    x434 = (
        x25 * x415
        + x3 * x417
        + x374
        - x66 * (x3 * x372 + x430 * x72 - x433 * x66)
        + x72
        * (
            x3 * x412
            + x418
            - x430 * x66
            + x70
            * (x3 * x411 - x429 * x66 + x431 + x65 * (x3 * x406 - x425 * x66 + x432))
        )
    )
    x435 = x147 * x15
    x436 = x146 * x370 - x15 * x165
    x437 = x436 * x60
    x438 = x90 * (x152 * x370 - x435 - x437)
    x439 = x152 * x370 - x435
    x440 = x15 * x157
    x441 = x142 * x370 - x440
    x442 = x3 * x441
    x443 = x15 * x154
    x444 = x138 * x370 - x443
    x445 = x3 * x444
    x446 = x143 * x370 - x15 * x166
    x447 = x446 * x60
    x448 = x10 * x447
    x449 = x445 - x448
    x450 = x145 * x370 - x15 * x168
    x451 = x450 * x60
    x452 = x10 * x451
    x453 = x442 + x449 * x65 - x452
    x454 = -x10 * x437 + x3 * x439 + x453 * x70
    x455 = x90 * (x142 * x370 - x440 - x451)
    x456 = x90 * (x138 * x370 - x443 - x447)
    x457 = x3 * x446
    x458 = x161 * x370 - x181 * x381
    x459 = x458 * x66
    x460 = x457 - x459
    x461 = x3 * x450
    x462 = x163 * x370 - x185 * x381
    x463 = x462 * x66
    x464 = x460 * x65 + x461 - x463
    x465 = x164 * x370 - x190 * x381
    x466 = (
        x3 * x454
        + x438
        - x66 * (x3 * x436 + x464 * x70 - x465 * x66)
        + x70 * (x3 * x453 + x455 - x464 * x66 + x65 * (x3 * x449 + x456 - x460 * x66))
    )
    x467 = x26 * x415 + x466
    x468 = x23 * x27
    x469 = x400 * x65
    x470 = x90 * (x377 * x65 - x469)
    x471 = x402 * x65 - x405 * x65
    x472 = x407 * x65 - x410 * x65 + x471 * x65
    x473 = x398 * x65 - x401 * x65 + x472 * x70
    x474 = x409 * x65
    x475 = x90 * (x394 * x65 - x474)
    x476 = x404 * x65
    x477 = x90 * (x386 * x65 - x476)
    x478 = x422 * x65 - x424 * x65
    x479 = x426 * x65 - x428 * x65 + x478 * x65
    x480 = (
        x3 * x473
        + x470
        - x66 * (x419 * x65 - x421 * x65 + x479 * x70)
        + x70 * (x3 * x472 + x475 - x479 * x66 + x65 * (x3 * x471 + x477 - x478 * x66))
    )
    x481 = x27 * x415 + x480
    x482 = x15 * x193
    x483 = x441 * x60
    x484 = x90 * (x151 * x370 - x482 - x483)
    x485 = x15 * x195
    x486 = x444 * x60
    x487 = x90 * (x140 * x370 - x485 - x486)
    x488 = x140 * x370 - x485
    x489 = x3 * x488
    x490 = -x10 * x486 + x489
    x491 = x151 * x370 - x482
    x492 = -x10 * x483 + x3 * x491 + x490 * x65
    x493 = x3 * x492 - x453 * x66 + x484 + x65 * (x3 * x490 - x449 * x66 + x487)
    x494 = x25 * x493 + x466
    x495 = x15 * x209
    x496 = -x15 * x224 + x208 * x370
    x497 = x496 * x60
    x498 = x90 * (x211 * x370 - x495 - x497)
    x499 = x15 * x213
    x500 = -x15 * x218 + x207 * x370
    x501 = x500 * x60
    x502 = x90 * (x206 * x370 - x499 - x501)
    x503 = x206 * x370 - x499
    x504 = x3 * x503
    x505 = x10 * x501
    x506 = x504 - x505
    x507 = x3 * x500
    x508 = x217 * x370 - x230 * x381
    x509 = x508 * x66
    x510 = x507 - x509
    x511 = x211 * x370 - x495
    x512 = -x10 * x497 + x3 * x511 + x506 * x65
    x513 = x223 * x370 - x234 * x381
    x514 = (
        x3 * x512
        + x498
        + x65 * (x3 * x506 + x502 - x510 * x66)
        - x66 * (x3 * x496 + x510 * x65 - x513 * x66)
    )
    x515 = x26 * x493 + x514
    x516 = x451 * x65
    x517 = x90 * (x441 * x65 - x516)
    x518 = x447 * x65
    x519 = x90 * (x444 * x65 - x518)
    x520 = x445 * x65 - x448 * x65
    x521 = x457 * x65 - x459 * x65
    x522 = x442 * x65 - x452 * x65 + x520 * x65
    x523 = (
        x3 * x522
        + x517
        + x65 * (x3 * x520 + x519 - x521 * x66)
        - x66 * (x461 * x65 - x463 * x65 + x521 * x65)
    )
    x524 = x27 * x493 + x523
    x525 = x394 * x65
    x526 = x90 * (x391 * x65 - x525 * x60)
    x527 = x386 * x65
    x528 = x90 * (x383 * x65 - x527 * x60)
    x529 = x384 * x65 - x527 * x66
    x530 = x392 * x65 - x525 * x66 + x529 * x65
    x531 = x3 * x530 - x472 * x66 + x526 + x65 * (x3 * x529 - x471 * x66 + x528)
    x532 = x25 * x531 + x480
    x533 = x26 * x531 + x523
    x534 = x64 ** (-2.0)
    x535 = 2 * x534
    x536 = x90 * (2 * x394 * x534 - x409 * x535)
    x537 = x90 * (2 * x386 * x534 - x404 * x535)
    x538 = x402 * x535 - x405 * x535
    x539 = x422 * x535 - x424 * x535
    x540 = x407 * x535 - x410 * x535 + x538 * x65
    x541 = (
        x3 * x540
        + x536
        + x65 * (x3 * x538 + x537 - x539 * x66)
        - x66 * (x426 * x535 - x428 * x535 + x539 * x65)
    )
    x542 = x27 * x531 + x541
    x543 = x15 * x236
    x544 = x503 * x60
    x545 = x90 * (x210 * x370 - x543 - x544)
    x546 = x210 * x370 - x543
    x547 = -x10 * x544 + x3 * x546
    x548 = x3 * x547 - x506 * x66 + x545
    x549 = x25 * x548 + x514
    x550 = x15 * x245
    x551 = -x15 * x248 + x244 * x370
    x552 = x551 * x60
    x553 = x90 * (x243 * x370 - x550 - x552)
    x554 = x243 * x370 - x550
    x555 = -x10 * x552 + x3 * x554
    x556 = x247 * x370 - x254 * x381
    x557 = x26 * x548 + x3 * x555 + x553 - x66 * (x3 * x551 - x556 * x66)
    x558 = x501 * x65
    x559 = x90 * (x503 * x65 - x558)
    x560 = x504 * x65 - x505 * x65
    x561 = x3 * x560 + x559 - x66 * (x507 * x65 - x509 * x65)
    x562 = x27 * x548 + x561
    x563 = x444 * x65
    x564 = x90 * (x488 * x65 - x563 * x60)
    x565 = x489 * x65 - x563 * x66
    x566 = x3 * x565 - x520 * x66 + x564
    x567 = x25 * x566 + x523
    x568 = x26 * x566 + x561
    x569 = x90 * (2 * x444 * x534 - x447 * x535)
    x570 = x445 * x535 - x448 * x535
    x571 = x3 * x570 + x569 - x66 * (x457 * x535 - x459 * x535)
    x572 = x27 * x566 + x571
    x573 = x90 * (2 * x383 * x534 - x387 * x535)
    x574 = x384 * x535 - x388 * x535
    x575 = x3 * x574 - x538 * x66 + x573
    x576 = x25 * x575 + x541
    x577 = x26 * x575 + x571
    x578 = x64 ** (-3.0)
    x579 = 6 * x578
    x580 = x90 * (6 * x386 * x578 - x404 * x579)
    x581 = x402 * x579 - x405 * x579
    x582 = x27 * x575 + x3 * x581 + x580 - x66 * (x422 * x579 - x424 * x579)
    x583 = x25 * x280 + x294
    x584 = x26 * x280 + x318
    x585 = x25 * x337 + x318
    x586 = x26 * x337 + x351
    x587 = x25 * x359 + x351
    x588 = x26 * x359 + x366
    x589 = x126 - x13 * x264 + x256 * x266
    x590 = -x13 * x282 + x256 * x263 + x93
    x591 = x128 - x13 * x272 + x256 * x269
    x592 = -x13 * x284 + x256 * x271 + x96
    x593 = x127 - x13 * x278 + x256 * x275
    x594 = -x13 * x287 + x256 * x277 + x95
    x595 = (
        x3 * x589
        - x590 * x66
        + x70 * (x3 * x593 - x594 * x66 + x65 * (x3 * x591 - x592 * x66))
    )
    x596 = -x13 * x259 + x256 * x293 + x92
    x597 = x113 + x256 * x281 - x267 * x296
    x598 = x115 + x256 * x283 - x267 * x297
    x599 = x114 + x256 * x286 - x267 * x299
    x600 = x103 + x256 * x258 - x267 * x304
    x601 = (
        x25 * x595
        + x3 * x596
        - x600 * x66
        + x72
        * (
            x3 * x590
            - x597 * x66
            + x70 * (x3 * x594 - x599 * x66 + x65 * (x3 * x592 - x598 * x66))
        )
    )
    x602 = -x13 * x307 + x153 + x256 * x308 + x590 * x65
    x603 = -x13 * x312 + x173 + x256 * x310 + x592 * x65
    x604 = x180 + x256 * x311 - x267 * x321 + x598 * x65
    x605 = -x13 * x316 + x172 + x256 * x314 + x594 * x65
    x606 = x184 + x256 * x315 - x267 * x323 + x599 * x65
    x607 = x188 + x256 * x306 - x267 * x325 + x597 * x65
    x608 = (
        x3 * x602
        - x607 * x66
        + x70 * (x3 * x605 - x606 * x66 + x65 * (x3 * x603 - x604 * x66))
    )
    x609 = x26 * x595 + x608
    x610 = x27 * x595
    x611 = -x13 * x333 + x196 + x256 * x334 + x591 * x65
    x612 = -x13 * x330 + x194 + x256 * x331 + x593 * x65
    x613 = x3 * x612 - x605 * x66 + x65 * (x3 * x611 - x603 * x66)
    x614 = x25 * x613 + x608
    x615 = -x13 * x345 + x214 + x256 * x346 + x603 * x70
    x616 = x229 + x256 * x344 - x267 * x349 + x604 * x70
    x617 = -x13 * x341 + x212 + x256 * x342 + x605 * x70
    x618 = x233 + x256 * x340 - x267 * x352 + x606 * x70
    x619 = x3 * x617 - x618 * x66 + x65 * (x3 * x615 - x616 * x66)
    x620 = x26 * x613 + x619
    x621 = x27 * x613
    x622 = -x13 * x356 + x237 + x256 * x357 + x611 * x70
    x623 = x3 * x622 - x615 * x66
    x624 = x25 * x623 + x619
    x625 = -x13 * x363 + x251 + x256 * x364 + x615 * x72
    x626 = x253 + x256 * x362 - x267 * x367 + x616 * x72
    x627 = x26 * x623 + x3 * x625 - x626 * x66
    x628 = x27 * x623
    x629 = -x13 * x378 + x256 * x380
    x630 = -x13 * x400 + x256 * x377
    x631 = x256 * x383
    x632 = x13 * x387
    x633 = x631 - x632
    x634 = x256 * x386
    x635 = x13 * x404
    x636 = x634 - x635
    x637 = -x13 * x395 + x256 * x391
    x638 = x256 * x394
    x639 = x13 * x409
    x640 = x638 - x639
    x641 = (
        x3 * x629
        - x630 * x66
        + x70 * (x3 * x637 - x640 * x66 + x65 * (x3 * x633 - x636 * x66))
    )
    x642 = -x13 * x373 + x256 * x416
    x643 = x256 * x399
    x644 = x267 * x420
    x645 = x643 - x644
    x646 = x256 * x403
    x647 = x267 * x423
    x648 = x646 - x647
    x649 = x256 * x408
    x650 = x267 * x427
    x651 = x649 - x650
    x652 = x256 * x372 - x267 * x433
    x653 = (
        x25 * x641
        + x3 * x642
        - x652 * x66
        + x72
        * (
            x3 * x630
            - x645 * x66
            + x70 * (x3 * x640 + x65 * (x3 * x636 - x648 * x66) - x651 * x66)
        )
    )
    x654 = -x13 * x437 + x256 * x439 + x630 * x65
    x655 = x256 * x444
    x656 = x13 * x447
    x657 = x636 * x65 + x655 - x656
    x658 = x256 * x446
    x659 = x267 * x458
    x660 = x648 * x65 + x658 - x659
    x661 = -x13 * x451 + x256 * x441 + x640 * x65
    x662 = x256 * x450
    x663 = x267 * x462
    x664 = x65 * x651 + x662 - x663
    x665 = x256 * x436 - x267 * x465 + x645 * x65
    x666 = (
        x3 * x654
        - x66 * x665
        + x70 * (x3 * x661 + x65 * (x3 * x657 - x66 * x660) - x66 * x664)
    )
    x667 = x26 * x641 + x666
    x668 = x377 * x65
    x669 = -x13 * x469 + x256 * x668
    x670 = -x13 * x474 + x256 * x525
    x671 = x649 * x65 - x65 * x650
    x672 = -x13 * x476 + x256 * x527
    x673 = x646 * x65 - x647 * x65
    x674 = x643 * x65 - x644 * x65
    x675 = (
        x3 * x669
        - x66 * x674
        + x70 * (x3 * x670 + x65 * (x3 * x672 - x66 * x673) - x66 * x671)
    )
    x676 = x27 * x641 + x675
    x677 = -x13 * x486 + x256 * x488 + x633 * x65
    x678 = -x13 * x483 + x256 * x491 + x637 * x65
    x679 = x3 * x678 + x65 * (x3 * x677 - x657 * x66) - x66 * x661
    x680 = x25 * x679 + x666
    x681 = -x13 * x501 + x256 * x503 + x657 * x70
    x682 = x256 * x500
    x683 = x267 * x508
    x684 = x660 * x70 + x682 - x683
    x685 = -x13 * x497 + x256 * x511 + x661 * x70
    x686 = x256 * x496 - x267 * x513 + x664 * x70
    x687 = x3 * x685 + x65 * (x3 * x681 - x66 * x684) - x66 * x686
    x688 = x26 * x679 + x687
    x689 = -x13 * x518 + x256 * x563 + x65 * x672
    x690 = x65 * x658 - x65 * x659 + x65 * x673
    x691 = x441 * x65
    x692 = -x13 * x516 + x256 * x691 + x65 * x670
    x693 = x65 * x662 - x65 * x663 + x65 * x671
    x694 = x3 * x692 + x65 * (x3 * x689 - x66 * x690) - x66 * x693
    x695 = x27 * x679 + x694
    x696 = x391 * x65
    x697 = x256 * x696 - x267 * x525
    x698 = x383 * x65
    x699 = x256 * x698 - x267 * x527
    x700 = x3 * x697 + x65 * (x3 * x699 - x66 * x672) - x66 * x670
    x701 = x25 * x700 + x675
    x702 = x26 * x700 + x694
    x703 = x535 * x634 - x535 * x635
    x704 = x535 * x646 - x535 * x647
    x705 = x535 * x638 - x535 * x639
    x706 = x535 * x649 - x535 * x650
    x707 = x3 * x705 + x65 * (x3 * x703 - x66 * x704) - x66 * x706
    x708 = x27 * x700 + x707
    x709 = -x13 * x544 + x256 * x546 + x677 * x70
    x710 = x3 * x709 - x66 * x681
    x711 = x25 * x710 + x687
    x712 = -x13 * x552 + x256 * x554 + x681 * x72
    x713 = x256 * x551 - x267 * x556 + x684 * x72
    x714 = x26 * x710 + x3 * x712 - x66 * x713
    x715 = x503 * x65
    x716 = -x13 * x558 + x256 * x715 + x689 * x70
    x717 = x65 * x682 - x65 * x683 + x690 * x70
    x718 = x3 * x716 - x66 * x717
    x719 = x27 * x710 + x718
    x720 = x488 * x65
    x721 = x256 * x720 - x267 * x563 + x65 * x699
    x722 = x3 * x721 - x66 * x689
    x723 = x25 * x722 + x694
    x724 = x26 * x722 + x718
    x725 = x535 * x655 - x535 * x656 + x65 * x703
    x726 = x535 * x658 - x535 * x659 + x65 * x704
    x727 = x3 * x725 - x66 * x726
    x728 = x27 * x722 + x727
    x729 = x535 * x631 - x535 * x632
    x730 = x3 * x729 - x66 * x703
    x731 = x25 * x730 + x707
    x732 = x26 * x730 + x727
    x733 = x579 * x634 - x579 * x635
    x734 = x579 * x646 - x579 * x647
    x735 = x27 * x730 + x3 * x733 - x66 * x734
    x736 = x25 * x397 + x417
    x737 = x26 * x397 + x454
    x738 = x27 * x397 + x473
    x739 = x25 * x492 + x454
    x740 = x26 * x492 + x512
    x741 = x27 * x492 + x522
    x742 = x25 * x530 + x473
    x743 = x26 * x530 + x522
    x744 = x27 * x530 + x540
    x745 = x25 * x547 + x512
    x746 = x26 * x547 + x555
    x747 = x27 * x547 + x560
    x748 = x25 * x565 + x522
    x749 = x26 * x565 + x560
    x750 = x27 * x565 + x570
    x751 = x25 * x574 + x540
    x752 = x26 * x574 + x570
    x753 = x27 * x574 + x581
    x754 = x126 - x15 * x378 + x370 * x380
    x755 = -x15 * x400 + x370 * x377 + x93
    x756 = x370 * x383
    x757 = x15 * x387
    x758 = x128 + x756 - x757
    x759 = x370 * x386
    x760 = x15 * x404
    x761 = x759 - x760 + x96
    x762 = x127 - x15 * x395 + x370 * x391
    x763 = x370 * x394
    x764 = x15 * x409
    x765 = x763 - x764 + x95
    x766 = (
        x3 * x754
        - x66 * x755
        + x70 * (x3 * x762 + x65 * (x3 * x758 - x66 * x761) - x66 * x765)
    )
    x767 = -x15 * x373 + x370 * x416 + x92
    x768 = x370 * x399
    x769 = x381 * x420
    x770 = x113 + x768 - x769
    x771 = x370 * x403
    x772 = x381 * x423
    x773 = x115 + x771 - x772
    x774 = x370 * x408
    x775 = x381 * x427
    x776 = x114 + x774 - x775
    x777 = x103 + x370 * x372 - x381 * x433
    x778 = (
        x25 * x766
        + x3 * x767
        - x66 * x777
        + x72
        * (
            x3 * x755
            - x66 * x770
            + x70 * (x3 * x765 + x65 * (x3 * x761 - x66 * x773) - x66 * x776)
        )
    )
    x779 = -x15 * x437 + x153 + x370 * x439
    x780 = x370 * x444
    x781 = x15 * x447
    x782 = x173 + x780 - x781
    x783 = x370 * x446
    x784 = x381 * x458
    x785 = x180 + x783 - x784
    x786 = -x15 * x451 + x172 + x370 * x441
    x787 = x370 * x450
    x788 = x381 * x462
    x789 = x184 + x787 - x788
    x790 = x188 + x370 * x436 - x381 * x465
    x791 = (
        x3 * x779
        - x66 * x790
        + x70 * (x3 * x786 + x65 * (x3 * x782 - x66 * x785) - x66 * x789)
    )
    x792 = x26 * x766 + x791
    x793 = -x15 * x469 + x370 * x668 + x65 * x755
    x794 = -x15 * x476 + x370 * x527 + x65 * x761
    x795 = x65 * x771 - x65 * x772 + x65 * x773
    x796 = -x15 * x474 + x370 * x525 + x65 * x765
    x797 = x65 * x774 - x65 * x775 + x65 * x776
    x798 = x65 * x768 - x65 * x769 + x65 * x770
    x799 = (
        x3 * x793
        - x66 * x798
        + x70 * (x3 * x796 + x65 * (x3 * x794 - x66 * x795) - x66 * x797)
    )
    x800 = x27 * x766 + x799
    x801 = -x15 * x486 + x196 + x370 * x488
    x802 = -x15 * x483 + x194 + x370 * x491
    x803 = x3 * x802 + x65 * (x3 * x801 - x66 * x782) - x66 * x786
    x804 = x25 * x803 + x791
    x805 = -x15 * x501 + x214 + x370 * x503
    x806 = x370 * x500
    x807 = x381 * x508
    x808 = x229 + x806 - x807
    x809 = -x15 * x497 + x212 + x370 * x511
    x810 = x233 + x370 * x496 - x381 * x513
    x811 = x3 * x809 + x65 * (x3 * x805 - x66 * x808) - x66 * x810
    x812 = x26 * x803 + x811
    x813 = -x15 * x518 + x370 * x563 + x65 * x782
    x814 = x65 * x783 - x65 * x784 + x65 * x785
    x815 = -x15 * x516 + x370 * x691 + x65 * x786
    x816 = x65 * x787 - x65 * x788 + x65 * x789
    x817 = x3 * x815 + x65 * (x3 * x813 - x66 * x814) - x66 * x816
    x818 = x27 * x803 + x817
    x819 = x370 * x698 - x381 * x527 + x65 * x758
    x820 = x370 * x696 - x381 * x525 + x65 * x762
    x821 = x3 * x820 + x65 * (x3 * x819 - x66 * x794) - x66 * x796
    x822 = x25 * x821 + x799
    x823 = x26 * x821 + x817
    x824 = x535 * x759 - x535 * x760 + x70 * x794
    x825 = x535 * x771 - x535 * x772 + x70 * x795
    x826 = x535 * x763 - x535 * x764 + x70 * x796
    x827 = x535 * x774 - x535 * x775 + x70 * x797
    x828 = x3 * x826 + x65 * (x3 * x824 - x66 * x825) - x66 * x827
    x829 = x27 * x821 + x828
    x830 = -x15 * x544 + x237 + x370 * x546
    x831 = x3 * x830 - x66 * x805
    x832 = x25 * x831 + x811
    x833 = -x15 * x552 + x251 + x370 * x554
    x834 = x253 + x370 * x551 - x381 * x556
    x835 = x26 * x831 + x3 * x833 - x66 * x834
    x836 = -x15 * x558 + x370 * x715 + x65 * x805
    x837 = x65 * x806 - x65 * x807 + x65 * x808
    x838 = x3 * x836 - x66 * x837
    x839 = x27 * x831 + x838
    x840 = x370 * x720 - x381 * x563 + x65 * x801
    x841 = x3 * x840 - x66 * x813
    x842 = x25 * x841 + x817
    x843 = x26 * x841 + x838
    x844 = x535 * x780 - x535 * x781 + x70 * x813
    x845 = x535 * x783 - x535 * x784 + x70 * x814
    x846 = x3 * x844 - x66 * x845
    x847 = x27 * x841 + x846
    x848 = x535 * x756 - x535 * x757 + x70 * x819
    x849 = x3 * x848 - x66 * x824
    x850 = x25 * x849 + x828
    x851 = x26 * x849 + x846
    x852 = x579 * x759 - x579 * x760 + x72 * x824
    x853 = x579 * x771 - x579 * x772 + x72 * x825
    x854 = x27 * x849 + x3 * x852 - x66 * x853
    x855 = x25 * x589 + x596
    x856 = x26 * x589 + x602
    x857 = x25 * x612 + x602
    x858 = x26 * x612 + x617
    x859 = x25 * x622 + x617
    x860 = x26 * x622 + x625
    x861 = x256 * x589 + 2 * x265 - x267 * x590
    x862 = (
        x256 * x602
        - x267 * x607
        + 2 * x309
        + x65 * (x256 * x590 - x267 * x597 + 2 * x295)
    )
    x863 = (
        x256 * x612
        - x267 * x605
        + 2 * x332
        + x65 * (x256 * x593 - x267 * x594 + 2 * x290)
    )
    x864 = (
        x256 * x617
        - x267 * x618
        + 2 * x343
        + x70
        * (
            x256 * x605
            - x267 * x606
            + 2 * x319
            + x65 * (x256 * x594 - x267 * x599 + 2 * x302)
        )
    )
    x865 = (
        x256 * x622
        - x267 * x615
        + 2 * x358
        + x70
        * (
            x256 * x611
            - x267 * x603
            + 2 * x335
            + x65 * (x256 * x591 - x267 * x592 + 2 * x291)
        )
    )
    x866 = x256 * x629 - x267 * x630 + x379
    x867 = x25 * x866 + x256 * x642 - x267 * x652 + x374
    x868 = x256 * x654 - x267 * x665 + x438 + x65 * (x256 * x630 - x267 * x645 + x418)
    x869 = x26 * x866 + x868
    x870 = x256 * x669 - x267 * x674 + x470
    x871 = x27 * x866 + x870
    x872 = x256 * x678 - x267 * x661 + x484 + x65 * (x256 * x637 - x267 * x640 + x413)
    x873 = x25 * x872 + x868
    x874 = (
        x256 * x685
        - x267 * x686
        + x498
        + x70
        * (x256 * x661 - x267 * x664 + x455 + x65 * (x256 * x640 - x267 * x651 + x431))
    )
    x875 = x26 * x872 + x874
    x876 = x256 * x692 - x267 * x693 + x517 + x65 * (x256 * x670 - x267 * x671 + x475)
    x877 = x27 * x872 + x876
    x878 = x256 * x697 - x267 * x670 + x526
    x879 = x25 * x878 + x870
    x880 = x26 * x878 + x876
    x881 = x256 * x705 - x267 * x706 + x536
    x882 = x27 * x878 + x881
    x883 = (
        x256 * x709
        - x267 * x681
        + x545
        + x70
        * (x256 * x677 - x267 * x657 + x487 + x65 * (x256 * x633 - x267 * x636 + x414))
    )
    x884 = x25 * x883 + x874
    x885 = (
        x256 * x712
        + x26 * x883
        - x267 * x713
        + x553
        + x72
        * (
            x256 * x681
            - x267 * x684
            + x502
            + x70
            * (
                x256 * x657
                - x267 * x660
                + x456
                + x65 * (x256 * x636 - x267 * x648 + x432)
            )
        )
    )
    x886 = (
        x256 * x716
        - x267 * x717
        + x559
        + x70
        * (x256 * x689 - x267 * x690 + x519 + x65 * (x256 * x672 - x267 * x673 + x477))
    )
    x887 = x27 * x883 + x886
    x888 = x256 * x721 - x267 * x689 + x564 + x65 * (x256 * x699 - x267 * x672 + x528)
    x889 = x25 * x888 + x876
    x890 = x26 * x888 + x886
    x891 = x256 * x725 - x267 * x726 + x569 + x65 * (x256 * x703 - x267 * x704 + x537)
    x892 = x27 * x888 + x891
    x893 = x256 * x729 - x267 * x703 + x573
    x894 = x25 * x893 + x881
    x895 = x26 * x893 + x891
    x896 = x256 * x733 - x267 * x734 + x27 * x893 + x580
    x897 = x25 * x629 + x642
    x898 = x26 * x629 + x654
    x899 = x27 * x629 + x669
    x900 = x25 * x678 + x654
    x901 = x26 * x678 + x685
    x902 = x27 * x678 + x692
    x903 = x25 * x697 + x669
    x904 = x26 * x697 + x692
    x905 = x27 * x697 + x705
    x906 = x25 * x709 + x685
    x907 = x26 * x709 + x712
    x908 = x27 * x709 + x716
    x909 = x25 * x721 + x692
    x910 = x26 * x721 + x716
    x911 = x27 * x721 + x725
    x912 = x25 * x729 + x705
    x913 = x26 * x729 + x725
    x914 = x27 * x729 + x733
    x915 = x256 * x754 - x267 * x755
    x916 = x25 * x915 + x256 * x767 - x267 * x777
    x917 = x256 * x779 - x267 * x790 + x65 * (x256 * x755 - x267 * x770)
    x918 = x26 * x915 + x917
    x919 = x256 * x793 - x267 * x798
    x920 = x27 * x915 + x919
    x921 = x256 * x802 - x267 * x786 + x65 * (x256 * x762 - x267 * x765)
    x922 = x25 * x921 + x917
    x923 = (
        x256 * x809
        - x267 * x810
        + x70 * (x256 * x786 - x267 * x789 + x65 * (x256 * x765 - x267 * x776))
    )
    x924 = x26 * x921 + x923
    x925 = x256 * x815 - x267 * x816 + x65 * (x256 * x796 - x267 * x797)
    x926 = x27 * x921 + x925
    x927 = x256 * x820 - x267 * x796
    x928 = x25 * x927 + x919
    x929 = x26 * x927 + x925
    x930 = x256 * x826 - x267 * x827
    x931 = x27 * x927 + x930
    x932 = (
        x256 * x830
        - x267 * x805
        + x70 * (x256 * x801 - x267 * x782 + x65 * (x256 * x758 - x267 * x761))
    )
    x933 = x25 * x932 + x923
    x934 = (
        x256 * x833
        + x26 * x932
        - x267 * x834
        + x72
        * (
            x256 * x805
            - x267 * x808
            + x70 * (x256 * x782 - x267 * x785 + x65 * (x256 * x761 - x267 * x773))
        )
    )
    x935 = (
        x256 * x836
        - x267 * x837
        + x70 * (x256 * x813 - x267 * x814 + x65 * (x256 * x794 - x267 * x795))
    )
    x936 = x27 * x932 + x935
    x937 = x256 * x840 - x267 * x813 + x65 * (x256 * x819 - x267 * x794)
    x938 = x25 * x937 + x925
    x939 = x26 * x937 + x935
    x940 = x256 * x844 - x267 * x845 + x65 * (x256 * x824 - x267 * x825)
    x941 = x27 * x937 + x940
    x942 = x256 * x848 - x267 * x824
    x943 = x25 * x942 + x930
    x944 = x26 * x942 + x940
    x945 = x256 * x852 - x267 * x853 + x27 * x942
    x946 = x25 * x754 + x767
    x947 = x26 * x754 + x779
    x948 = x27 * x754 + x793
    x949 = x25 * x802 + x779
    x950 = x26 * x802 + x809
    x951 = x27 * x802 + x815
    x952 = x25 * x820 + x793
    x953 = x26 * x820 + x815
    x954 = x27 * x820 + x826
    x955 = x25 * x830 + x809
    x956 = x26 * x830 + x833
    x957 = x27 * x830 + x836
    x958 = x25 * x840 + x815
    x959 = x26 * x840 + x836
    x960 = x27 * x840 + x844
    x961 = x25 * x848 + x826
    x962 = x26 * x848 + x844
    x963 = x27 * x848 + x852
    x964 = x370 * x754 + 2 * x379 - x381 * x755
    x965 = x370 * x779 - x381 * x790 + 2 * x438
    x966 = (
        x370 * x793
        - x381 * x798
        + 2 * x470
        + x65 * (x370 * x755 - x381 * x770 + 2 * x418)
    )
    x967 = x370 * x802 - x381 * x786 + 2 * x484
    x968 = x370 * x809 - x381 * x810 + 2 * x498
    x969 = (
        x370 * x815
        - x381 * x816
        + 2 * x517
        + x65 * (x370 * x786 - x381 * x789 + 2 * x455)
    )
    x970 = (
        x370 * x820
        - x381 * x796
        + 2 * x526
        + x65 * (x370 * x762 - x381 * x765 + 2 * x413)
    )
    x971 = (
        x370 * x826
        - x381 * x827
        + 2 * x536
        + x70
        * (
            x370 * x796
            - x381 * x797
            + 2 * x475
            + x65 * (x370 * x765 - x381 * x776 + 2 * x431)
        )
    )
    x972 = x370 * x830 - x381 * x805 + 2 * x545
    x973 = (
        x370 * x836
        - x381 * x837
        + 2 * x559
        + x65 * (x370 * x805 - x381 * x808 + 2 * x502)
    )
    x974 = (
        x370 * x840
        - x381 * x813
        + 2 * x564
        + x65 * (x370 * x801 - x381 * x782 + 2 * x487)
    )
    x975 = (
        x370 * x844
        - x381 * x845
        + 2 * x569
        + x70
        * (
            x370 * x813
            - x381 * x814
            + 2 * x519
            + x65 * (x370 * x782 - x381 * x785 + 2 * x456)
        )
    )
    x976 = (
        x370 * x848
        - x381 * x824
        + 2 * x573
        + x70
        * (
            x370 * x819
            - x381 * x794
            + 2 * x528
            + x65 * (x370 * x758 - x381 * x761 + 2 * x414)
        )
    )

    # 324 item(s)
    S = numpy.array(
        [
            x102 * x3
            + x134 * x25
            + x135 * x21
            - x66
            * (x103 + x118 * x72 + x3 * x73 - x66 * (-x109 * x66 + x112 * x72 + x3 * x59))
            + x72
            * (
                x101 * x3
                - x118 * x66
                + x70
                * (
                    x100 * x3
                    - x117 * x66
                    + x65
                    * (
                        -x116 * x66
                        + x3 * x98
                        + x91 * (2 * x19 * x20 * x24 * x28 * x3 * x33 - x84 - x97)
                    )
                    + x91 * (x87 - x99)
                )
                + x91 * (x88 - x94)
            )
            + x91 * (-x74 + x89),
            x134 * x26 + x179 * x21 + x191,
            x133 * x192 + x134 * x27,
            x191 + x204 * x21 + x205 * x25,
            x205 * x26 + x21 * x228 + x235,
            x192 * x203 + x205 * x27,
            0,
            0,
            0,
            x21 * x241 + x235 + x242 * x25,
            x21 * x255
            + x242 * x26
            + x252 * x3
            - x66 * (x249 * x3 + x253 - x66 * (x247 * x3 - x254 * x66))
            + x91 * (x243 * x3 - x246 - x250),
            x192 * x240 + x242 * x27,
            0,
            0,
            0,
            0,
            0,
            0,
            x135 * x22 + x305,
            x179 * x22 + x327,
            x133 * x328 + x329,
            x204 * x22 + x339,
            x22 * x228 + x354,
            x203 * x328 + x355,
            0,
            0,
            0,
            x22 * x241 + x361,
            x22 * x255 + x368,
            x240 * x328 + x369,
            0,
            0,
            0,
            0,
            0,
            0,
            x135 * x23 + x434,
            x179 * x23 + x467,
            x133 * x468 + x481,
            x204 * x23 + x494,
            x228 * x23 + x515,
            x203 * x468 + x524,
            x532,
            x533,
            x542,
            x23 * x241 + x549,
            x23 * x255 + x557,
            x240 * x468 + x562,
            x567,
            x568,
            x572,
            x576,
            x577,
            x582,
            x21 * x583 + x305,
            x21 * x584 + x327,
            x192 * x280 + x329,
            x21 * x585 + x339,
            x21 * x586 + x354,
            x192 * x337 + x355,
            0,
            0,
            0,
            x21 * x587 + x361,
            x21 * x588 + x368,
            x192 * x359 + x369,
            0,
            0,
            0,
            0,
            0,
            0,
            x22 * x583 + x601,
            x22 * x584 + x609,
            x280 * x328 + x610,
            x22 * x585 + x614,
            x22 * x586 + x620,
            x328 * x337 + x621,
            0,
            0,
            0,
            x22 * x587 + x624,
            x22 * x588 + x627,
            x328 * x359 + x628,
            0,
            0,
            0,
            0,
            0,
            0,
            x23 * x583 + x653,
            x23 * x584 + x667,
            x280 * x468 + x676,
            x23 * x585 + x680,
            x23 * x586 + x688,
            x337 * x468 + x695,
            x701,
            x702,
            x708,
            x23 * x587 + x711,
            x23 * x588 + x714,
            x359 * x468 + x719,
            x723,
            x724,
            x728,
            x731,
            x732,
            x735,
            x21 * x736 + x434,
            x21 * x737 + x467,
            x21 * x738 + x481,
            x21 * x739 + x494,
            x21 * x740 + x515,
            x21 * x741 + x524,
            x21 * x742 + x532,
            x21 * x743 + x533,
            x21 * x744 + x542,
            x21 * x745 + x549,
            x21 * x746 + x557,
            x21 * x747 + x562,
            x21 * x748 + x567,
            x21 * x749 + x568,
            x21 * x750 + x572,
            x21 * x751 + x576,
            x21 * x752 + x577,
            x21 * x753 + x582,
            x22 * x736 + x653,
            x22 * x737 + x667,
            x22 * x738 + x676,
            x22 * x739 + x680,
            x22 * x740 + x688,
            x22 * x741 + x695,
            x22 * x742 + x701,
            x22 * x743 + x702,
            x22 * x744 + x708,
            x22 * x745 + x711,
            x22 * x746 + x714,
            x22 * x747 + x719,
            x22 * x748 + x723,
            x22 * x749 + x724,
            x22 * x750 + x728,
            x22 * x751 + x731,
            x22 * x752 + x732,
            x22 * x753 + x735,
            x23 * x736 + x778,
            x23 * x737 + x792,
            x23 * x738 + x800,
            x23 * x739 + x804,
            x23 * x740 + x812,
            x23 * x741 + x818,
            x23 * x742 + x822,
            x23 * x743 + x823,
            x23 * x744 + x829,
            x23 * x745 + x832,
            x23 * x746 + x835,
            x23 * x747 + x839,
            x23 * x748 + x842,
            x23 * x749 + x843,
            x23 * x750 + x847,
            x23 * x751 + x850,
            x23 * x752 + x851,
            x23 * x753 + x854,
            x21 * x855 + x601,
            x21 * x856 + x609,
            x192 * x589 + x610,
            x21 * x857 + x614,
            x21 * x858 + x620,
            x192 * x612 + x621,
            0,
            0,
            0,
            x21 * x859 + x624,
            x21 * x860 + x627,
            x192 * x622 + x628,
            0,
            0,
            0,
            0,
            0,
            0,
            x22 * x855 + x25 * x861 + x256 * x596 + 2 * x260 - x267 * x600,
            x22 * x856 + x26 * x861 + x862,
            x27 * x861 + x328 * x589,
            x22 * x857 + x25 * x863 + x862,
            x22 * x858 + x26 * x863 + x864,
            x27 * x863 + x328 * x612,
            0,
            0,
            0,
            x22 * x859 + x25 * x865 + x864,
            x22 * x860
            + x256 * x625
            + x26 * x865
            - x267 * x626
            + 2 * x365
            + x72
            * (
                x256 * x615
                - x267 * x616
                + 2 * x347
                + x70
                * (
                    x256 * x603
                    - x267 * x604
                    + 2 * x320
                    + x65 * (x256 * x592 - x267 * x598 + 2 * x303)
                )
            ),
            x27 * x865 + x328 * x622,
            0,
            0,
            0,
            0,
            0,
            0,
            x23 * x855 + x867,
            x23 * x856 + x869,
            x468 * x589 + x871,
            x23 * x857 + x873,
            x23 * x858 + x875,
            x468 * x612 + x877,
            x879,
            x880,
            x882,
            x23 * x859 + x884,
            x23 * x860 + x885,
            x468 * x622 + x887,
            x889,
            x890,
            x892,
            x894,
            x895,
            x896,
            x21 * x897 + x653,
            x21 * x898 + x667,
            x21 * x899 + x676,
            x21 * x900 + x680,
            x21 * x901 + x688,
            x21 * x902 + x695,
            x21 * x903 + x701,
            x21 * x904 + x702,
            x21 * x905 + x708,
            x21 * x906 + x711,
            x21 * x907 + x714,
            x21 * x908 + x719,
            x21 * x909 + x723,
            x21 * x910 + x724,
            x21 * x911 + x728,
            x21 * x912 + x731,
            x21 * x913 + x732,
            x21 * x914 + x735,
            x22 * x897 + x867,
            x22 * x898 + x869,
            x22 * x899 + x871,
            x22 * x900 + x873,
            x22 * x901 + x875,
            x22 * x902 + x877,
            x22 * x903 + x879,
            x22 * x904 + x880,
            x22 * x905 + x882,
            x22 * x906 + x884,
            x22 * x907 + x885,
            x22 * x908 + x887,
            x22 * x909 + x889,
            x22 * x910 + x890,
            x22 * x911 + x892,
            x22 * x912 + x894,
            x22 * x913 + x895,
            x22 * x914 + x896,
            x23 * x897 + x916,
            x23 * x898 + x918,
            x23 * x899 + x920,
            x23 * x900 + x922,
            x23 * x901 + x924,
            x23 * x902 + x926,
            x23 * x903 + x928,
            x23 * x904 + x929,
            x23 * x905 + x931,
            x23 * x906 + x933,
            x23 * x907 + x934,
            x23 * x908 + x936,
            x23 * x909 + x938,
            x23 * x910 + x939,
            x23 * x911 + x941,
            x23 * x912 + x943,
            x23 * x913 + x944,
            x23 * x914 + x945,
            x21 * x946 + x778,
            x21 * x947 + x792,
            x21 * x948 + x800,
            x21 * x949 + x804,
            x21 * x950 + x812,
            x21 * x951 + x818,
            x21 * x952 + x822,
            x21 * x953 + x823,
            x21 * x954 + x829,
            x21 * x955 + x832,
            x21 * x956 + x835,
            x21 * x957 + x839,
            x21 * x958 + x842,
            x21 * x959 + x843,
            x21 * x960 + x847,
            x21 * x961 + x850,
            x21 * x962 + x851,
            x21 * x963 + x854,
            x22 * x946 + x916,
            x22 * x947 + x918,
            x22 * x948 + x920,
            x22 * x949 + x922,
            x22 * x950 + x924,
            x22 * x951 + x926,
            x22 * x952 + x928,
            x22 * x953 + x929,
            x22 * x954 + x931,
            x22 * x955 + x933,
            x22 * x956 + x934,
            x22 * x957 + x936,
            x22 * x958 + x938,
            x22 * x959 + x939,
            x22 * x960 + x941,
            x22 * x961 + x943,
            x22 * x962 + x944,
            x22 * x963 + x945,
            x23 * x946 + x25 * x964 + x370 * x767 + 2 * x374 - x381 * x777,
            x23 * x947 + x26 * x964 + x965,
            x23 * x948 + x27 * x964 + x966,
            x23 * x949 + x25 * x967 + x965,
            x23 * x950 + x26 * x967 + x968,
            x23 * x951 + x27 * x967 + x969,
            x23 * x952 + x25 * x970 + x966,
            x23 * x953 + x26 * x970 + x969,
            x23 * x954 + x27 * x970 + x971,
            x23 * x955 + x25 * x972 + x968,
            x23 * x956 + x26 * x972 + x370 * x833 - x381 * x834 + 2 * x553,
            x23 * x957 + x27 * x972 + x973,
            x23 * x958 + x25 * x974 + x969,
            x23 * x959 + x26 * x974 + x973,
            x23 * x960 + x27 * x974 + x975,
            x23 * x961 + x25 * x976 + x971,
            x23 * x962 + x26 * x976 + x975,
            x23 * x963
            + x27 * x976
            + x370 * x852
            - x381 * x853
            + 2 * x580
            + x72
            * (
                x370 * x824
                - x381 * x825
                + 2 * x537
                + x70
                * (
                    x370 * x794
                    - x381 * x795
                    + 2 * x477
                    + x65 * (x370 * x761 - x381 * x773 + 2 * x432)
                )
            ),
        ]
    )
    return S


def eri_2122(a, A, b, B, c, C, d, D):
    """Cartesian [dp|dd] 2-electron electron repulsion integral.

    Generated code; DO NOT modify by hand!"""

    x0 = a + b
    x1 = x0 ** (-1.0)
    x2 = -x1 * (a * A[0] + b * B[0])
    x3 = -x2 - A[0]
    x4 = 2 * c + 2 * d
    x5 = x4 ** (-1.0)
    x6 = numpy.pi**2.5
    x7 = c + d
    x8 = x0 * x7
    x9 = x0 + x7
    x10 = (x8 + numpy.sqrt(x9)) ** (-1.0)
    x11 = A[0] - B[0]
    x12 = A[1] - B[1]
    x13 = A[2] - B[2]
    x14 = numpy.exp(-a * b * x1 * (x11**2 + x12**2 + x13**2))
    x15 = x7 ** (-1.0)
    x16 = C[0] - D[0]
    x17 = C[1] - D[1]
    x18 = C[2] - D[2]
    x19 = x18**2
    x20 = numpy.exp(-c * d * x15 * (x16**2 + x17**2 + x19))
    x21 = x9 ** (-1.0)
    x22 = x15 * (c * C[0] + d * D[0])
    x23 = -x2 - x22
    x24 = x15 * (c * C[1] + d * D[1])
    x25 = -x1 * (a * A[1] + b * B[1])
    x26 = -x24 - x25
    x27 = -x1 * (a * A[2] + b * B[2])
    x28 = -x15 * (c * C[2] + d * D[2]) - x27
    x29 = x21 * x8 * (x23**2 + x26**2 + x28**2)
    x30 = boys(2, x29)
    x31 = -2 * x10 * x14 * x20 * x30 * x6
    x32 = x0 * x21
    x33 = boys(3, x29)
    x34 = 2 * x10 * x14 * x20 * x6
    x35 = x33 * x34
    x36 = x5 * (-x31 - x32 * x35)
    x37 = x22 - C[0]
    x38 = x30 * x34
    x39 = x23 * x32
    x40 = x35 * x39 + x37 * x38
    x41 = boys(4, x29)
    x42 = x34 * x41
    x43 = x35 * x37 + x39 * x42
    x44 = x32 * x43
    x45 = x23 * x44 + x36 + x37 * x40
    x46 = x32 * x45
    x47 = boys(1, x29)
    x48 = x5 * (2 * x10 * x14 * x20 * x47 * x6 - x32 * x38)
    x49 = x34 * x47
    x50 = x37 * x49 + x38 * x39
    x51 = x32 * x40
    x52 = x23 * x51 + x37 * x50 + x48
    x53 = 3 * x5
    x54 = 2 * x5
    x55 = x23 * x46 + x37 * x52 + x54 * (x50 - x51)
    x56 = -2 * x10 * x14 * x20 * x33 * x6
    x57 = x5 * (-x32 * x42 - x56)
    x58 = boys(5, x29)
    x59 = x34 * x58
    x60 = x37 * x42 + x39 * x59
    x61 = x32 * x60
    x62 = x23 * x61 + x37 * x43 + x57
    x63 = x32 * x62
    x64 = x23 * x63 + x37 * x45 + x54 * (x40 - x44)
    x65 = x37 * x55 + x39 * x64 + x53 * (-x46 + x52)
    x66 = -2 * x10 * x14 * x20 * x41 * x6
    x67 = x5 * (-x32 * x59 - x66)
    x68 = x34 * boys(6, x29)
    x69 = x37 * x59 + x39 * x68
    x70 = x32 * x69
    x71 = x23 * x70 + x37 * x60 + x67
    x72 = x32 * x71
    x73 = x23 * x72 + x37 * x62 + x54 * (x43 - x61)
    x74 = x37 * x64 + x39 * x73 + x53 * (x45 - x63)
    x75 = x21 * x7
    x76 = x74 * x75
    x77 = x73 * x75
    x78 = x71 * x75
    x79 = 2 * a + 2 * b
    x80 = x4 + x79
    x81 = x80 ** (-1.0)
    x82 = x23 * x75
    x83 = x3 * x59 - x68 * x82
    x84 = x69 * x75
    x85 = -x23 * x84 + x3 * x60 + x81 * x83
    x86 = 2 * x81
    x87 = -x23 * x78 + x3 * x62 + x85 * x86
    x88 = 3 * x81
    x89 = -x23 * x77 + x3 * x64 + x87 * x88
    x90 = 4 * x81
    x91 = -x23 * x76 + x3 * x65 + x89 * x90
    x92 = x75 * x91
    x93 = x32 * x52
    x94 = boys(0, x29)
    x95 = x5 * (2 * x10 * x14 * x20 * x6 * x94 - x32 * x49)
    x96 = x34 * x94
    x97 = x37 * x96 + x39 * x49
    x98 = x32 * x50
    x99 = x23 * x98 + x37 * x97 + x95
    x100 = x23 * x93 + x37 * x99 + x54 * (x97 - x98)
    x101 = x100 * x37 + x39 * x55 + x53 * (-x93 + x99)
    x102 = x65 * x75
    x103 = x64 * x75
    x104 = x62 * x75
    x105 = x59 * x82
    x106 = -x105 + x3 * x42
    x107 = x60 * x75
    x108 = x106 * x81 - x107 * x23 + x3 * x43
    x109 = -x104 * x23 + x108 * x86 + x3 * x45
    x110 = -x103 * x23 + x109 * x88 + x3 * x55
    x111 = x101 * x3 - x102 * x23 + x110 * x90
    x112 = x79 ** (-1.0)
    x113 = 2 * x112
    x114 = x112 * (x101 - x102)
    x115 = x112 * (-x103 + x55)
    x116 = x75 * x89
    x117 = x112 * (-x104 + x45)
    x118 = x75 * x87
    x119 = x112 * (-x107 + x43)
    x120 = x112 * (-x59 * x75 - x66)
    x121 = x75 * x83
    x122 = x106 * x3 + x120 - x121 * x23
    x123 = x75 * x85
    x124 = x108 * x3 + x119 + x122 * x81 - x123 * x23
    x125 = x109 * x3 + x117 - x118 * x23 + x124 * x86
    x126 = x110 * x3 + x115 - x116 * x23 + x125 * x88
    x127 = x111 * x3 + x114 + x126 * x90 - x23 * x92
    x128 = x112 * (x65 - x76)
    x129 = -2 * x10 * x14 * x20 * x58 * x6
    x130 = x5 * (-x129 - x32 * x68)
    x131 = x34 * boys(7, x29)
    x132 = x131 * x39 + x37 * x68
    x133 = x130 + x132 * x39 + x37 * x69
    x134 = x133 * x39 + x37 * x71 + x54 * (x60 - x70)
    x135 = x134 * x39 + x37 * x73 + x53 * (x62 - x72)
    x136 = -x131 * x82 + x3 * x68
    x137 = -x132 * x82 + x136 * x81 + x3 * x69
    x138 = -x133 * x82 + x137 * x86 + x3 * x71
    x139 = -x134 * x82 + x138 * x88 + x3 * x73
    x140 = x112 * (x64 - x77)
    x141 = x112 * (x62 - x78)
    x142 = x112 * (x60 - x84)
    x143 = x112 * (-x129 - x68 * x75)
    x144 = -x136 * x82 + x143 + x3 * x83
    x145 = -x137 * x82 + x142 + x144 * x81 + x3 * x85
    x146 = -x138 * x82 + x141 + x145 * x86 + x3 * x87
    x147 = -x139 * x82 + x140 + x146 * x88 + x3 * x89
    x148 = x110 * x75
    x149 = x55 * x75
    x150 = x45 * x75
    x151 = x42 * x82
    x152 = -x151 + x3 * x35
    x153 = x43 * x75
    x154 = x152 * x81 - x153 * x23 + x3 * x40
    x155 = -x150 * x23 + x154 * x86 + x3 * x52
    x156 = x100 * x3 - x149 * x23 + x155 * x88
    x157 = x112 * (x100 - x149)
    x158 = x112 * (-x150 + x52)
    x159 = x109 * x75
    x160 = x112 * (-x153 + x40)
    x161 = x112 * (-x42 * x75 - x56)
    x162 = x106 * x75
    x163 = x152 * x3 + x161 - x162 * x23
    x164 = x108 * x75
    x165 = x154 * x3 + x160 + x163 * x81 - x164 * x23
    x166 = x155 * x3 + x158 - x159 * x23 + x165 * x86
    x167 = -x148 * x23 + x156 * x3 + x157 + x166 * x88
    x168 = (
        x113 * (-x148 + x156)
        - x126 * x82
        + x167 * x3
        + x88
        * (
            x113 * (x155 - x159)
            - x125 * x82
            + x166 * x3
            + x86
            * (
                x113 * (x154 - x164)
                - x124 * x82
                + x165 * x3
                + x81
                * (
                    x113 * (2 * x10 * x14 * x20 * x3 * x33 * x6 - x151 - x162)
                    - x122 * x82
                    + x163 * x3
                )
            )
        )
    )
    x169 = x155 * x75
    x170 = x52 * x75
    x171 = x35 * x82
    x172 = -x171 + x3 * x38
    x173 = x40 * x75
    x174 = x172 * x81 - x173 * x23 + x3 * x50
    x175 = -x170 * x23 + x174 * x86 + x3 * x99
    x176 = x112 * (-x170 + x99)
    x177 = x112 * (-x173 + x50)
    x178 = x112 * (-x31 - x35 * x75)
    x179 = x152 * x75
    x180 = x172 * x3 + x178 - x179 * x23
    x181 = x154 * x75
    x182 = x174 * x3 + x177 + x180 * x81 - x181 * x23
    x183 = -x169 * x23 + x175 * x3 + x176 + x182 * x86
    x184 = (
        x113 * (-x169 + x175)
        - x166 * x82
        + x183 * x3
        + x86
        * (
            x113 * (x174 - x181)
            - x165 * x82
            + x182 * x3
            + x81
            * (
                x113 * (2 * x10 * x14 * x20 * x3 * x30 * x6 - x171 - x179)
                - x163 * x82
                + x180 * x3
            )
        )
    )
    x185 = x16 * x184
    x186 = x16 * x183
    x187 = x127 + x16 * x167 + x16 * (x167 + x186)
    x188 = x17 * x183
    x189 = x24 - C[1]
    x190 = x26 * x32
    x191 = x189 * x38 + x190 * x35
    x192 = x191 * x32
    x193 = x189 * x49 + x190 * x38
    x194 = x5 * (-x192 + x193)
    x195 = x192 * x23 + x193 * x37
    x196 = x189 * x35 + x190 * x42
    x197 = x196 * x32
    x198 = x191 * x37 + x197 * x23
    x199 = x198 * x32
    x200 = x194 + x195 * x37 + x199 * x23
    x201 = x200 * x75
    x202 = x193 * x32
    x203 = x189 * x96 + x190 * x49
    x204 = x5 * (-x202 + x203)
    x205 = x202 * x23 + x203 * x37
    x206 = x195 * x32
    x207 = x204 + x205 * x37 + x206 * x23
    x208 = x112 * (-x201 + x207)
    x209 = x196 * x75
    x210 = x209 * x23
    x211 = x191 * x3 - x210
    x212 = x198 * x75
    x213 = x195 * x3 + x211 * x81 - x212 * x23
    x214 = -x201 * x23 + x207 * x3 + x213 * x86
    x215 = x5 * (x191 - x197)
    x216 = x189 * x42 + x190 * x59
    x217 = x216 * x32
    x218 = x196 * x37 + x217 * x23
    x219 = x218 * x32
    x220 = x198 * x37 + x215 + x219 * x23
    x221 = x220 * x75
    x222 = x216 * x75
    x223 = x222 * x23
    x224 = x196 * x3 - x223
    x225 = x218 * x75
    x226 = x198 * x3 + x224 * x81 - x225 * x23
    x227 = x200 * x3 - x221 * x23 + x226 * x86
    x228 = x227 * x75
    x229 = x112 * (x195 - x212)
    x230 = x112 * (x191 - x209)
    x231 = x224 * x75
    x232 = x211 * x3 - x23 * x231 + x230
    x233 = x226 * x75
    x234 = x213 * x3 + x229 - x23 * x233 + x232 * x81
    x235 = x208 + x214 * x3 - x228 * x23 + x234 * x86
    x236 = x188 + x235
    x237 = x200 * x37 + x220 * x39 + x54 * (x195 - x199)
    x238 = x237 * x75
    x239 = x200 * x39 + x207 * x37 + x54 * (x205 - x206)
    x240 = x112 * (-x238 + x239)
    x241 = x227 * x88 - x23 * x238 + x239 * x3
    x242 = x5 * (x196 - x217)
    x243 = x189 * x59 + x190 * x68
    x244 = x243 * x32
    x245 = x216 * x37 + x23 * x244
    x246 = x245 * x32
    x247 = x218 * x37 + x23 * x246 + x242
    x248 = x220 * x37 + x247 * x39 + x54 * (x198 - x219)
    x249 = x248 * x75
    x250 = x247 * x75
    x251 = x243 * x75
    x252 = x216 * x3 - x23 * x251
    x253 = x245 * x75
    x254 = x218 * x3 - x23 * x253 + x252 * x81
    x255 = x220 * x3 - x23 * x250 + x254 * x86
    x256 = -x23 * x249 + x237 * x3 + x255 * x88
    x257 = x256 * x75
    x258 = x112 * (x200 - x221)
    x259 = x255 * x75
    x260 = x112 * (x198 - x225)
    x261 = x112 * (x196 - x222)
    x262 = x252 * x75
    x263 = x224 * x3 - x23 * x262 + x261
    x264 = x254 * x75
    x265 = x226 * x3 - x23 * x264 + x260 + x263 * x81
    x266 = x227 * x3 - x23 * x259 + x258 + x265 * x86
    x267 = -x23 * x257 + x240 + x241 * x3 + x266 * x88
    x268 = x16 * x236 + x167 * x17 + x267
    x269 = x17 * x184
    x270 = (
        x113 * (x214 - x228)
        + x235 * x3
        - x266 * x82
        + x86
        * (
            x113 * (x213 - x233)
            + x234 * x3
            - x265 * x82
            + x81 * (x113 * (x191 * x3 - x210 - x231) + x232 * x3 - x263 * x82)
        )
    )
    x271 = x269 + x270
    x272 = x112 * (x220 - x250)
    x273 = x5 * (x216 - x244)
    x274 = x131 * x190 + x189 * x68
    x275 = x243 * x37 + x274 * x39
    x276 = x245 * x37 + x273 + x275 * x39
    x277 = x243 * x3 - x274 * x82
    x278 = x245 * x3 - x275 * x82 + x277 * x81
    x279 = x247 * x3 - x276 * x82 + x278 * x86
    x280 = x112 * (x218 - x253)
    x281 = x112 * (x216 - x251)
    x282 = x252 * x3 - x277 * x82 + x281
    x283 = x254 * x3 - x278 * x82 + x280 + x282 * x81
    x284 = x255 * x3 + x272 - x279 * x82 + x283 * x86
    x285 = x112 * (x237 - x249)
    x286 = x247 * x37 + x276 * x39 + x54 * (x218 - x246)
    x287 = (
        x113 * (x241 - x257)
        + x267 * x3
        - x82
        * (x256 * x3 + x284 * x88 + x285 - x82 * (x248 * x3 + x279 * x88 - x286 * x82))
        + x88
        * (
            x113 * (x227 - x259)
            + x266 * x3
            - x284 * x82
            + x86
            * (
                x113 * (x226 - x264)
                + x265 * x3
                - x283 * x82
                + x81 * (x113 * (x196 * x3 - x223 - x262) + x263 * x3 - x282 * x82)
            )
        )
    )
    x288 = x167 * x18 + x18 * x186
    x289 = x189 * x191 + x197 * x26 + x36
    x290 = x289 * x32
    x291 = x189 * x193 + x192 * x26 + x48
    x292 = x5 * (-x290 + x291)
    x293 = x23 * x290 + x291 * x37
    x294 = x189 * x196 + x217 * x26 + x57
    x295 = x294 * x32
    x296 = x23 * x295 + x289 * x37
    x297 = x292 + x293 * x37 + x296 * x39
    x298 = x297 * x75
    x299 = x291 * x32
    x300 = x189 * x203 + x202 * x26 + x95
    x301 = x5 * (-x299 + x300)
    x302 = x23 * x299 + x300 * x37
    x303 = x293 * x39 + x301 + x302 * x37
    x304 = x112 * (-x298 + x303)
    x305 = x294 * x75
    x306 = x23 * x305
    x307 = x289 * x3 - x306
    x308 = x296 * x75
    x309 = -x23 * x308 + x293 * x3 + x307 * x81
    x310 = -x23 * x298 + x3 * x303 + x309 * x86
    x311 = x5 * (x289 - x295)
    x312 = x189 * x216 + x244 * x26 + x67
    x313 = x312 * x32
    x314 = x23 * x313 + x294 * x37
    x315 = x296 * x37 + x311 + x314 * x39
    x316 = x315 * x75
    x317 = x312 * x75
    x318 = -x23 * x317 + x294 * x3
    x319 = x314 * x75
    x320 = -x23 * x319 + x296 * x3 + x318 * x81
    x321 = -x23 * x316 + x297 * x3 + x320 * x86
    x322 = x321 * x75
    x323 = x112 * (x293 - x308)
    x324 = x112 * (x289 - x305)
    x325 = x318 * x75
    x326 = -x23 * x325 + x3 * x307 + x324
    x327 = x320 * x75
    x328 = -x23 * x327 + x3 * x309 + x323 + x326 * x81
    x329 = -x23 * x322 + x3 * x310 + x304 + x328 * x86
    x330 = x17 * x235 + x329
    x331 = x17 * x236 + x330
    x332 = x112 * (x294 - x317)
    x333 = x130 + x189 * x243 + x190 * x274
    x334 = x3 * x312 - x333 * x82
    x335 = x3 * x318 + x332 - x334 * x82
    x336 = x112 * (x296 - x319)
    x337 = x312 * x37 + x333 * x39
    x338 = x3 * x314 + x334 * x81 - x337 * x82
    x339 = x3 * x320 + x335 * x81 + x336 - x338 * x82
    x340 = x112 * (x297 - x316)
    x341 = x5 * (x294 - x313)
    x342 = x314 * x37 + x337 * x39 + x341
    x343 = (
        x113 * (x310 - x322)
        + x3 * x329
        - x82
        * (x3 * x321 + x339 * x86 + x340 - x82 * (x3 * x315 + x338 * x86 - x342 * x82))
        + x86
        * (
            x113 * (x309 - x327)
            + x3 * x328
            - x339 * x82
            + x81 * (x113 * (x289 * x3 - x306 - x325) + x3 * x326 - x335 * x82)
        )
    )
    x344 = x17 * x270 + x343
    x345 = x18 * x235
    x346 = x18 * x188 + x345
    x347 = x18 * x270
    x348 = x11 * x19
    x349 = x195 * x75
    x350 = x112 * (x205 - x349)
    x351 = x191 * x75
    x352 = x112 * (x193 - x351)
    x353 = x23 * x351
    x354 = x193 * x3 - x353
    x355 = x211 * x75
    x356 = -x23 * x355 + x3 * x354 + x352
    x357 = x205 * x3 - x23 * x349 + x354 * x81
    x358 = x213 * x75
    x359 = -x23 * x358 + x3 * x357 + x350 + x356 * x81
    x360 = x16 * x359
    x361 = x16 * x235 + x16 * (x235 + x360) + x267
    x362 = (
        x113 * (x357 - x358)
        - x234 * x82
        + x3 * x359
        + x81 * (x113 * (x193 * x3 - x353 - x355) - x232 * x82 + x3 * x356)
    )
    x363 = x16 * x362
    x364 = x17 * x359
    x365 = x293 * x75
    x366 = x112 * (x302 - x365)
    x367 = x289 * x75
    x368 = x112 * (x291 - x367)
    x369 = x23 * x367
    x370 = x291 * x3 - x369
    x371 = x307 * x75
    x372 = -x23 * x371 + x3 * x370 + x368
    x373 = -x23 * x365 + x3 * x302 + x370 * x81
    x374 = x309 * x75
    x375 = -x23 * x374 + x3 * x373 + x366 + x372 * x81
    x376 = x364 + x375
    x377 = x16 * x376 + x330
    x378 = x17 * x362
    x379 = (
        x113 * (x373 - x374)
        + x3 * x375
        - x328 * x82
        + x81 * (x113 * (x291 * x3 - x369 - x371) + x3 * x372 - x326 * x82)
    )
    x380 = x378 + x379
    x381 = x18 * x360 + x345
    x382 = x189 * x291 + 2 * x194 + x26 * x290
    x383 = x189 * x289 + 2 * x215 + x26 * x295
    x384 = x37 * x382 + x383 * x39
    x385 = x384 * x75
    x386 = x189 * x300 + 2 * x204 + x26 * x299
    x387 = x37 * x386 + x382 * x39
    x388 = x112 * (-x385 + x387)
    x389 = x383 * x75
    x390 = x112 * (x382 - x389)
    x391 = x23 * x389
    x392 = x3 * x382 - x391
    x393 = x189 * x294 + 2 * x242 + x26 * x313
    x394 = x393 * x75
    x395 = -x23 * x394 + x3 * x383
    x396 = x395 * x75
    x397 = -x23 * x396 + x3 * x392 + x390
    x398 = -x23 * x385 + x3 * x387 + x392 * x81
    x399 = x37 * x383 + x39 * x393
    x400 = x399 * x75
    x401 = -x23 * x400 + x3 * x384 + x395 * x81
    x402 = x401 * x75
    x403 = -x23 * x402 + x3 * x398 + x388 + x397 * x81
    x404 = x17 * x375 + x403
    x405 = x17 * x376 + x404
    x406 = x112 * (x383 - x394)
    x407 = x189 * x312 + x190 * x333 + 2 * x273
    x408 = x3 * x393 - x407 * x82
    x409 = x3 * x395 + x406 - x408 * x82
    x410 = x112 * (x384 - x400)
    x411 = x37 * x393 + x39 * x407
    x412 = (
        x113 * (x398 - x402)
        + x17 * x379
        + x3 * x403
        + x81 * (x113 * (x3 * x382 - x391 - x396) + x3 * x397 - x409 * x82)
        - x82
        * (x3 * x401 + x409 * x81 + x410 - x82 * (x3 * x399 + x408 * x81 - x411 * x82))
    )
    x413 = x18 * x375
    x414 = x18 * x364 + x413
    x415 = x18 * x379
    x416 = x291 * x75
    x417 = x112 * (x300 - x416)
    x418 = x23 * x416
    x419 = x370 * x75
    x420 = -x23 * x419 + x3 * (x3 * x300 - x418) + x417
    x421 = x16 * x420
    x422 = x16 * x375 + x16 * (x375 + x421) + x329
    x423 = x113 * (x3 * x300 - x418 - x419) + x3 * x420 - x372 * x82
    x424 = x16 * x423
    x425 = x17 * x420
    x426 = x382 * x75
    x427 = x112 * (x386 - x426)
    x428 = x23 * x426
    x429 = x392 * x75
    x430 = -x23 * x429 + x3 * (x3 * x386 - x428) + x427
    x431 = x425 + x430
    x432 = x16 * x431 + x404
    x433 = x17 * x423
    x434 = x113 * (x3 * x386 - x428 - x429) + x3 * x430 - x397 * x82
    x435 = x433 + x434
    x436 = x18 * x421 + x413
    x437 = x189 * x386 + x190 * x382 + 3 * x301
    x438 = x189 * x382 + x190 * x383 + 3 * x292
    x439 = x438 * x75
    x440 = x23 * x439
    x441 = x189 * x383 + x190 * x393 + 3 * x311
    x442 = x441 * x75
    x443 = -x23 * x442 + x3 * x438
    x444 = x443 * x75
    x445 = x112 * (x437 - x439)
    x446 = -x23 * x444 + x3 * (x3 * x437 - x440) + x445
    x447 = x112 * (x438 - x442)
    x448 = x189 * x393 + x190 * x407 + 3 * x341
    x449 = x17 * x430 + x17 * x431 + x446
    x450 = x18 * x425 + x18 * x430
    x451 = -x25 - A[1]
    x452 = x102 * x26
    x453 = -x26 * x76 + x451 * x65
    x454 = x453 * x75
    x455 = x112 * (x101 * x451 - x452 - x454)
    x456 = x149 * x26
    x457 = x103 * x26
    x458 = x451 * x55 - x457
    x459 = x458 * x75
    x460 = x112 * (x100 * x451 - x456 - x459)
    x461 = x100 * x451 - x456
    x462 = x150 * x26
    x463 = x451 * x52 - x462
    x464 = x104 * x26
    x465 = x45 * x451 - x464
    x466 = x465 * x75
    x467 = x26 * x75
    x468 = x42 * x467
    x469 = x35 * x451 - x468
    x470 = x467 * x59
    x471 = x42 * x451 - x470
    x472 = x471 * x75
    x473 = -x23 * x472 + x3 * x469
    x474 = x153 * x26
    x475 = x40 * x451 - x474
    x476 = x107 * x26
    x477 = x43 * x451 - x476
    x478 = x477 * x75
    x479 = -x23 * x478 + x3 * x475 + x473 * x81
    x480 = -x23 * x466 + x3 * x463 + x479 * x86
    x481 = -x23 * x459 + x3 * x461 + x480 * x88
    x482 = -x26 * x77 + x451 * x64
    x483 = x482 * x75
    x484 = -x26 * x78 + x451 * x62
    x485 = x484 * x75
    x486 = x451 * x59 - x467 * x68
    x487 = x486 * x75
    x488 = -x23 * x487 + x3 * x471
    x489 = -x26 * x84 + x451 * x60
    x490 = x489 * x75
    x491 = -x23 * x490 + x3 * x477 + x488 * x81
    x492 = -x23 * x485 + x3 * x465 + x491 * x86
    x493 = -x23 * x483 + x3 * x458 + x492 * x88
    x494 = x112 * (x451 * x52 - x462 - x466)
    x495 = x112 * (x40 * x451 - x474 - x478)
    x496 = x112 * (2 * x10 * x14 * x20 * x33 * x451 * x6 - x468 - x472)
    x497 = (
        x3 * x481
        + x460
        - x493 * x82
        + x88
        * (
            x3 * x480
            - x492 * x82
            + x494
            + x86
            * (x3 * x479 - x491 * x82 + x495 + x81 * (x3 * x473 - x488 * x82 + x496))
        )
    )
    x498 = x170 * x26
    x499 = x463 * x75
    x500 = x112 * (x451 * x99 - x498 - x499)
    x501 = x451 * x99 - x498
    x502 = x35 * x467
    x503 = x38 * x451 - x502
    x504 = x469 * x75
    x505 = -x23 * x504 + x3 * x503
    x506 = x173 * x26
    x507 = x451 * x50 - x506
    x508 = x475 * x75
    x509 = -x23 * x508 + x3 * x507 + x505 * x81
    x510 = -x23 * x499 + x3 * x501 + x509 * x86
    x511 = x112 * (x451 * x50 - x506 - x508)
    x512 = x112 * (2 * x10 * x14 * x20 * x30 * x451 * x6 - x502 - x504)
    x513 = (
        x3 * x510
        - x480 * x82
        + x500
        + x86 * (x3 * x509 - x479 * x82 + x511 + x81 * (x3 * x505 - x473 * x82 + x512))
    )
    x514 = x16 * x513
    x515 = x101 * x451 - x452
    x516 = -x23 * x454 + x3 * x515 + x493 * x90
    x517 = x112 * (x451 * x55 - x457 - x483)
    x518 = -x134 * x467 + x451 * x73
    x519 = -x133 * x467 + x451 * x71
    x520 = -x131 * x467 + x451 * x68
    x521 = x3 * x486 - x520 * x82
    x522 = -x132 * x467 + x451 * x69
    x523 = x3 * x489 + x521 * x81 - x522 * x82
    x524 = x3 * x484 - x519 * x82 + x523 * x86
    x525 = x3 * x482 - x518 * x82 + x524 * x88
    x526 = x112 * (x45 * x451 - x464 - x485)
    x527 = x112 * (x43 * x451 - x476 - x490)
    x528 = x112 * (2 * x10 * x14 * x20 * x41 * x451 * x6 - x470 - x487)
    x529 = -x135 * x467 + x451 * x74
    x530 = (
        x16 * x497
        + x16 * (x497 + x514)
        + x3 * x516
        + x455
        - x82 * (x3 * x453 + x525 * x90 - x529 * x82)
        + x90
        * (
            x3 * x493
            + x517
            - x525 * x82
            + x88
            * (
                x3 * x492
                - x524 * x82
                + x526
                + x86
                * (x3 * x491 - x523 * x82 + x527 + x81 * (x3 * x488 - x521 * x82 + x528))
            )
        )
    )
    x531 = x17 * x513
    x532 = x200 * x451 - x221 * x26 + x465 * x81
    x533 = x532 * x75
    x534 = -x201 * x26 + x207 * x451 + x463 * x81
    x535 = x112 * (-x533 + x534)
    x536 = x191 * x451 - x209 * x26 + x469 * x81
    x537 = x196 * x451 - x222 * x26 + x471 * x81
    x538 = x537 * x75
    x539 = -x23 * x538 + x3 * x536
    x540 = x195 * x451 - x212 * x26 + x475 * x81
    x541 = x198 * x451 - x225 * x26 + x477 * x81
    x542 = x541 * x75
    x543 = -x23 * x542 + x3 * x540 + x539 * x81
    x544 = -x23 * x533 + x3 * x534 + x543 * x86
    x545 = x220 * x451 - x250 * x26 + x484 * x81
    x546 = x545 * x75
    x547 = x216 * x451 - x251 * x26 + x486 * x81
    x548 = x547 * x75
    x549 = -x23 * x548 + x3 * x537
    x550 = x218 * x451 - x253 * x26 + x489 * x81
    x551 = x550 * x75
    x552 = -x23 * x551 + x3 * x541 + x549 * x81
    x553 = -x23 * x546 + x3 * x532 + x552 * x86
    x554 = x112 * (x540 - x542)
    x555 = x112 * (x536 - x538)
    x556 = (
        x3 * x544
        + x535
        - x553 * x82
        + x86 * (x3 * x543 - x552 * x82 + x554 + x81 * (x3 * x539 - x549 * x82 + x555))
    )
    x557 = x531 + x556
    x558 = x237 * x451 - x249 * x26 + x482 * x81
    x559 = x558 * x75
    x560 = -x238 * x26 + x239 * x451 + x458 * x81
    x561 = x112 * (-x559 + x560)
    x562 = -x23 * x559 + x3 * x560 + x553 * x88
    x563 = x112 * (x532 - x546)
    x564 = x247 * x451 - x276 * x467 + x519 * x81
    x565 = x243 * x451 - x274 * x467 + x520 * x81
    x566 = x3 * x547 - x565 * x82
    x567 = x245 * x451 - x275 * x467 + x522 * x81
    x568 = x3 * x550 + x566 * x81 - x567 * x82
    x569 = x3 * x545 - x564 * x82 + x568 * x86
    x570 = x112 * (x541 - x551)
    x571 = x112 * (x537 - x548)
    x572 = x248 * x451 - x286 * x467 + x518 * x81
    x573 = (
        x3 * x562
        + x561
        - x82 * (x3 * x558 + x569 * x88 - x572 * x82)
        + x88
        * (
            x3 * x553
            + x563
            - x569 * x82
            + x86
            * (x3 * x552 - x568 * x82 + x570 + x81 * (x3 * x549 - x566 * x82 + x571))
        )
    )
    x574 = x16 * x557 + x17 * x497 + x573
    x575 = x18 * x497 + x18 * x514
    x576 = -x26 * x316 + x297 * x451 + x545 * x86
    x577 = x576 * x75
    x578 = -x26 * x298 + x303 * x451 + x532 * x86
    x579 = x112 * (-x577 + x578)
    x580 = -x26 * x305 + x289 * x451 + x537 * x86
    x581 = -x26 * x317 + x294 * x451 + x547 * x86
    x582 = x581 * x75
    x583 = -x23 * x582 + x3 * x580
    x584 = -x26 * x308 + x293 * x451 + x541 * x86
    x585 = -x26 * x319 + x296 * x451 + x550 * x86
    x586 = x585 * x75
    x587 = -x23 * x586 + x3 * x584 + x583 * x81
    x588 = -x23 * x577 + x3 * x578 + x587 * x86
    x589 = x112 * (x584 - x586)
    x590 = x112 * (x580 - x582)
    x591 = x312 * x451 - x333 * x467 + x565 * x86
    x592 = x3 * x581 - x591 * x82
    x593 = x314 * x451 - x337 * x467 + x567 * x86
    x594 = x3 * x585 + x592 * x81 - x593 * x82
    x595 = x315 * x451 - x342 * x467 + x564 * x86
    x596 = (
        x3 * x588
        + x579
        - x82 * (x3 * x576 + x594 * x86 - x595 * x82)
        + x86 * (x3 * x587 + x589 - x594 * x82 + x81 * (x3 * x583 + x590 - x592 * x82))
    )
    x597 = x17 * x556 + x596
    x598 = x17 * x557 + x597
    x599 = x18 * x556
    x600 = x18 * x531 + x599
    x601 = x12 * x19
    x602 = x19 * x513
    x603 = x540 * x75
    x604 = x205 * x451 - x26 * x349 + x507 * x81
    x605 = x112 * (-x603 + x604)
    x606 = x536 * x75
    x607 = x193 * x451 - x26 * x351 + x503 * x81
    x608 = x112 * (-x606 + x607)
    x609 = -x23 * x606 + x3 * x607
    x610 = -x23 * x603 + x3 * x604 + x609 * x81
    x611 = x3 * x610 - x543 * x82 + x605 + x81 * (x3 * x609 - x539 * x82 + x608)
    x612 = x16 * x611
    x613 = x16 * x556 + x16 * (x556 + x612) + x573
    x614 = x17 * x611
    x615 = x584 * x75
    x616 = -x26 * x365 + x302 * x451 + x540 * x86
    x617 = x112 * (-x615 + x616)
    x618 = x580 * x75
    x619 = -x26 * x367 + x291 * x451 + x536 * x86
    x620 = x112 * (-x618 + x619)
    x621 = -x23 * x618 + x3 * x619
    x622 = -x23 * x615 + x3 * x616 + x621 * x81
    x623 = x3 * x622 - x587 * x82 + x617 + x81 * (x3 * x621 - x583 * x82 + x620)
    x624 = x614 + x623
    x625 = x16 * x624 + x597
    x626 = x18 * x612 + x599
    x627 = -x26 * x400 + x384 * x451 + x585 * x88
    x628 = x627 * x75
    x629 = -x26 * x385 + x387 * x451 + x584 * x88
    x630 = x112 * (-x628 + x629)
    x631 = -x26 * x394 + x383 * x451 + x581 * x88
    x632 = x631 * x75
    x633 = -x26 * x389 + x382 * x451 + x580 * x88
    x634 = x112 * (-x632 + x633)
    x635 = -x23 * x632 + x3 * x633
    x636 = x393 * x451 - x407 * x467 + x591 * x88
    x637 = x3 * x631 - x636 * x82
    x638 = -x23 * x628 + x3 * x629 + x635 * x81
    x639 = x399 * x451 - x411 * x467 + x593 * x88
    x640 = (
        x17 * x623
        + x3 * x638
        + x630
        + x81 * (x3 * x635 + x634 - x637 * x82)
        - x82 * (x3 * x627 + x637 * x81 - x639 * x82)
    )
    x641 = x17 * x624 + x640
    x642 = x18 * x623
    x643 = x18 * x614 + x642
    x644 = x19 * x611
    x645 = x619 * x75
    x646 = -x26 * x416 + x300 * x451 + x607 * x86
    x647 = x112 * (-x645 + x646)
    x648 = -x23 * x645 + x3 * x646
    x649 = x3 * x648 - x621 * x82 + x647
    x650 = x16 * x649
    x651 = x16 * x623 + x16 * (x623 + x650) + x596
    x652 = x17 * x649
    x653 = x633 * x75
    x654 = -x26 * x426 + x386 * x451 + x619 * x88
    x655 = x112 * (-x653 + x654)
    x656 = -x23 * x653 + x3 * x654
    x657 = x3 * x656 - x635 * x82 + x655
    x658 = x652 + x657
    x659 = x16 * x658 + x640
    x660 = x18 * x650 + x642
    x661 = -x26 * x442 + x438 * x451 + x631 * x90
    x662 = x661 * x75
    x663 = -x26 * x439 + x437 * x451 + x633 * x90
    x664 = x112 * (-x662 + x663)
    x665 = -x23 * x662 + x3 * x663
    x666 = x441 * x451 - x448 * x467 + x636 * x90
    x667 = x17 * x657 + x17 * x658 + x3 * x665 + x664 - x82 * (x3 * x661 - x666 * x82)
    x668 = x18 * x652 + x18 * x657
    x669 = x19 * x649
    x670 = -x27 - A[2]
    x671 = x102 * x28
    x672 = -x28 * x76 + x65 * x670
    x673 = x672 * x75
    x674 = x112 * (x101 * x670 - x671 - x673)
    x675 = x149 * x28
    x676 = x103 * x28
    x677 = x55 * x670 - x676
    x678 = x677 * x75
    x679 = x112 * (x100 * x670 - x675 - x678)
    x680 = x100 * x670 - x675
    x681 = x150 * x28
    x682 = x52 * x670 - x681
    x683 = x3 * x682
    x684 = x104 * x28
    x685 = x45 * x670 - x684
    x686 = x685 * x75
    x687 = x28 * x75
    x688 = x42 * x687
    x689 = x35 * x670 - x688
    x690 = x3 * x689
    x691 = x59 * x687
    x692 = x42 * x670 - x691
    x693 = x692 * x75
    x694 = x23 * x693
    x695 = x690 - x694
    x696 = x153 * x28
    x697 = x40 * x670 - x696
    x698 = x3 * x697
    x699 = x107 * x28
    x700 = x43 * x670 - x699
    x701 = x700 * x75
    x702 = x23 * x701
    x703 = x695 * x81 + x698 - x702
    x704 = -x23 * x686 + x683 + x703 * x86
    x705 = -x23 * x678 + x3 * x680 + x704 * x88
    x706 = x3 * x677
    x707 = -x28 * x77 + x64 * x670
    x708 = x707 * x75
    x709 = x23 * x708
    x710 = x3 * x685
    x711 = -x28 * x78 + x62 * x670
    x712 = x711 * x75
    x713 = x23 * x712
    x714 = x3 * x692
    x715 = x59 * x670 - x68 * x687
    x716 = x715 * x75
    x717 = x23 * x716
    x718 = x714 - x717
    x719 = x3 * x700
    x720 = -x28 * x84 + x60 * x670
    x721 = x720 * x75
    x722 = x23 * x721
    x723 = x718 * x81 + x719 - x722
    x724 = x710 - x713 + x723 * x86
    x725 = x706 - x709 + x724 * x88
    x726 = x112 * (x52 * x670 - x681 - x686)
    x727 = x112 * (x40 * x670 - x696 - x701)
    x728 = x112 * (2 * x10 * x14 * x20 * x33 * x6 * x670 - x688 - x693)
    x729 = (
        x3 * x705
        + x679
        - x725 * x82
        + x88
        * (
            x3 * x704
            - x724 * x82
            + x726
            + x86
            * (x3 * x703 - x723 * x82 + x727 + x81 * (x3 * x695 - x718 * x82 + x728))
        )
    )
    x730 = x170 * x28
    x731 = x682 * x75
    x732 = x112 * (x670 * x99 - x730 - x731)
    x733 = x670 * x99 - x730
    x734 = x35 * x687
    x735 = x38 * x670 - x734
    x736 = x3 * x735
    x737 = x689 * x75
    x738 = x23 * x737
    x739 = x736 - x738
    x740 = x173 * x28
    x741 = x50 * x670 - x740
    x742 = x3 * x741
    x743 = x697 * x75
    x744 = -x23 * x743 + x739 * x81 + x742
    x745 = -x23 * x731 + x3 * x733 + x744 * x86
    x746 = x112 * (x50 * x670 - x740 - x743)
    x747 = x112 * (2 * x10 * x14 * x20 * x30 * x6 * x670 - x734 - x737)
    x748 = (
        x3 * x745
        - x704 * x82
        + x732
        + x86 * (x3 * x744 - x703 * x82 + x746 + x81 * (x3 * x739 - x695 * x82 + x747))
    )
    x749 = x101 * x670 - x671
    x750 = -x23 * x673 + x3 * x749 + x725 * x90
    x751 = x112 * (x55 * x670 - x676 - x708)
    x752 = x3 * x707
    x753 = -x134 * x687 + x670 * x73
    x754 = x753 * x82
    x755 = x3 * x711
    x756 = -x133 * x687 + x670 * x71
    x757 = x756 * x82
    x758 = x3 * x715
    x759 = -x131 * x687 + x670 * x68
    x760 = x759 * x82
    x761 = x758 - x760
    x762 = x3 * x720
    x763 = -x132 * x687 + x670 * x69
    x764 = x763 * x82
    x765 = x761 * x81 + x762 - x764
    x766 = x755 - x757 + x765 * x86
    x767 = x752 - x754 + x766 * x88
    x768 = x112 * (x45 * x670 - x684 - x712)
    x769 = x112 * (x43 * x670 - x699 - x721)
    x770 = x112 * (2 * x10 * x14 * x20 * x41 * x6 * x670 - x691 - x716)
    x771 = -x135 * x687 + x670 * x74
    x772 = (
        x16 * x729
        + x16 * (x16 * x748 + x729)
        + x3 * x750
        + x674
        - x82 * (x3 * x672 + x767 * x90 - x771 * x82)
        + x90
        * (
            x3 * x725
            + x751
            - x767 * x82
            + x88
            * (
                x3 * x724
                - x766 * x82
                + x768
                + x86
                * (x3 * x723 - x765 * x82 + x769 + x81 * (x3 * x718 - x761 * x82 + x770))
            )
        )
    )
    x773 = x201 * x28
    x774 = x221 * x28
    x775 = x200 * x670 - x774
    x776 = x75 * x775
    x777 = x112 * (x207 * x670 - x773 - x776)
    x778 = x207 * x670 - x773
    x779 = x212 * x28
    x780 = x195 * x670 - x779
    x781 = x3 * x780
    x782 = x209 * x28
    x783 = x191 * x670 - x782
    x784 = x3 * x783
    x785 = x222 * x28
    x786 = x196 * x670 - x785
    x787 = x75 * x786
    x788 = x23 * x787
    x789 = x784 - x788
    x790 = x225 * x28
    x791 = x198 * x670 - x790
    x792 = x75 * x791
    x793 = -x23 * x792 + x781 + x789 * x81
    x794 = -x23 * x776 + x3 * x778 + x793 * x86
    x795 = x3 * x775
    x796 = x220 * x670 - x250 * x28
    x797 = x75 * x796
    x798 = x23 * x797
    x799 = x3 * x791
    x800 = x3 * x786
    x801 = x216 * x670 - x251 * x28
    x802 = x75 * x801
    x803 = x23 * x802
    x804 = x800 - x803
    x805 = x218 * x670 - x253 * x28
    x806 = x75 * x805
    x807 = x23 * x806
    x808 = x799 + x804 * x81 - x807
    x809 = x795 - x798 + x808 * x86
    x810 = x112 * (x195 * x670 - x779 - x792)
    x811 = x112 * (x191 * x670 - x782 - x787)
    x812 = (
        x3 * x794
        + x777
        - x809 * x82
        + x86 * (x3 * x793 - x808 * x82 + x81 * (x3 * x789 - x804 * x82 + x811) + x810)
    )
    x813 = x17 * x748 + x812
    x814 = x238 * x28
    x815 = x237 * x670 - x249 * x28
    x816 = x75 * x815
    x817 = x112 * (x239 * x670 - x814 - x816)
    x818 = x239 * x670 - x814
    x819 = -x23 * x816 + x3 * x818 + x809 * x88
    x820 = x112 * (x200 * x670 - x774 - x797)
    x821 = x3 * x796
    x822 = x247 * x670 - x276 * x687
    x823 = x82 * x822
    x824 = x3 * x805
    x825 = x3 * x801
    x826 = x243 * x670 - x274 * x687
    x827 = x82 * x826
    x828 = x825 - x827
    x829 = x245 * x670 - x275 * x687
    x830 = x82 * x829
    x831 = x81 * x828 + x824 - x830
    x832 = x821 - x823 + x831 * x86
    x833 = x112 * (x198 * x670 - x790 - x806)
    x834 = x112 * (x196 * x670 - x785 - x802)
    x835 = x248 * x670 - x286 * x687
    x836 = (
        x3 * x819
        + x817
        - x82 * (x3 * x815 - x82 * x835 + x832 * x88)
        + x88
        * (
            x3 * x809
            - x82 * x832
            + x820
            + x86
            * (x3 * x808 + x81 * (x3 * x804 - x82 * x828 + x834) - x82 * x831 + x833)
        )
    )
    x837 = x16 * x813 + x17 * x729 + x836
    x838 = x685 * x81
    x839 = x112 * (x682 * x81 - x75 * x838)
    x840 = x692 * x81
    x841 = x690 * x81 - x82 * x840
    x842 = x700 * x81
    x843 = x698 * x81 + x81 * x841 - x82 * x842
    x844 = x683 * x81 - x82 * x838 + x843 * x86
    x845 = x714 * x81 - x717 * x81
    x846 = x719 * x81 - x722 * x81 + x81 * x845
    x847 = x710 * x81 - x713 * x81 + x846 * x86
    x848 = x112 * (x697 * x81 - x75 * x842)
    x849 = x112 * (x689 * x81 - x75 * x840)
    x850 = (
        x3 * x844
        - x82 * x847
        + x839
        + x86 * (x3 * x843 + x81 * (x3 * x841 - x82 * x845 + x849) - x82 * x846 + x848)
    )
    x851 = x18 * x748 + x850
    x852 = x708 * x81
    x853 = x112 * (x677 * x81 - x852)
    x854 = x706 * x81 - x709 * x81 + x847 * x88
    x855 = x712 * x81
    x856 = x112 * (x685 * x81 - x855)
    x857 = x758 * x81 - x760 * x81
    x858 = x762 * x81 - x764 * x81 + x81 * x857
    x859 = x755 * x81 - x757 * x81 + x858 * x86
    x860 = x721 * x81
    x861 = x112 * (x700 * x81 - x860)
    x862 = x716 * x81
    x863 = x112 * (x692 * x81 - x862)
    x864 = (
        x3 * x854
        - x82 * (x752 * x81 - x754 * x81 + x859 * x88)
        + x853
        + x88
        * (
            x3 * x847
            - x82 * x859
            + x856
            + x86
            * (x3 * x846 + x81 * (x3 * x845 - x82 * x857 + x863) - x82 * x858 + x861)
        )
    )
    x865 = x16 * x851 + x18 * x729 + x864
    x866 = x28 * x298
    x867 = -x28 * x316 + x297 * x670
    x868 = x75 * x867
    x869 = x112 * (x303 * x670 - x866 - x868)
    x870 = x303 * x670 - x866
    x871 = x28 * x308
    x872 = x293 * x670 - x871
    x873 = x3 * x872
    x874 = x28 * x305
    x875 = x289 * x670 - x874
    x876 = x3 * x875
    x877 = -x28 * x317 + x294 * x670
    x878 = x75 * x877
    x879 = x23 * x878
    x880 = x876 - x879
    x881 = -x28 * x319 + x296 * x670
    x882 = x75 * x881
    x883 = x23 * x882
    x884 = x81 * x880 + x873 - x883
    x885 = -x23 * x868 + x3 * x870 + x86 * x884
    x886 = x112 * (x293 * x670 - x871 - x882)
    x887 = x112 * (x289 * x670 - x874 - x878)
    x888 = x3 * x877
    x889 = x312 * x670 - x333 * x687
    x890 = x82 * x889
    x891 = x888 - x890
    x892 = x3 * x881
    x893 = x314 * x670 - x337 * x687
    x894 = x82 * x893
    x895 = x81 * x891 + x892 - x894
    x896 = x315 * x670 - x342 * x687
    x897 = (
        x3 * x885
        - x82 * (x3 * x867 - x82 * x896 + x86 * x895)
        + x86 * (x3 * x884 + x81 * (x3 * x880 - x82 * x891 + x887) - x82 * x895 + x886)
        + x869
    )
    x898 = x17 * x812 + x897
    x899 = x17 * x813 + x898
    x900 = x797 * x81
    x901 = x112 * (x775 * x81 - x900)
    x902 = x800 * x81 - x803 * x81
    x903 = x799 * x81 - x807 * x81 + x81 * x902
    x904 = x795 * x81 - x798 * x81 + x86 * x903
    x905 = x806 * x81
    x906 = x112 * (x791 * x81 - x905)
    x907 = x802 * x81
    x908 = x112 * (x786 * x81 - x907)
    x909 = x81 * x825 - x81 * x827
    x910 = x81 * x824 - x81 * x830 + x81 * x909
    x911 = (
        x3 * x904
        - x82 * (x81 * x821 - x81 * x823 + x86 * x910)
        + x86 * (x3 * x903 + x81 * (x3 * x902 - x82 * x909 + x908) - x82 * x910 + x906)
        + x901
    )
    x912 = x18 * x812 + x911
    x913 = x17 * x851 + x912
    x914 = x13 * x19
    x915 = x80 ** (-2.0)
    x916 = 2 * x915
    x917 = x112 * (2 * x685 * x915 - x712 * x916)
    x918 = x714 * x916 - x717 * x916
    x919 = x719 * x916 - x722 * x916 + x81 * x918
    x920 = x710 * x916 - x713 * x916 + x86 * x919
    x921 = x112 * (2 * x700 * x915 - x721 * x916)
    x922 = x112 * (2 * x692 * x915 - x716 * x916)
    x923 = x758 * x916 - x760 * x916
    x924 = x762 * x916 - x764 * x916 + x81 * x923
    x925 = (
        x3 * x920
        - x82 * (x755 * x916 - x757 * x916 + x86 * x924)
        + x86 * (x3 * x919 + x81 * (x3 * x918 - x82 * x923 + x922) - x82 * x924 + x921)
        + x917
    )
    x926 = x18 * x850 + x925
    x927 = x18 * x851 + x926
    x928 = x28 * x349
    x929 = x75 * x780
    x930 = x112 * (x205 * x670 - x928 - x929)
    x931 = x28 * x351
    x932 = x75 * x783
    x933 = x112 * (x193 * x670 - x931 - x932)
    x934 = x193 * x670 - x931
    x935 = x3 * x934
    x936 = -x23 * x932 + x935
    x937 = x205 * x670 - x928
    x938 = -x23 * x929 + x3 * x937 + x81 * x936
    x939 = x3 * x938 - x793 * x82 + x81 * (x3 * x936 - x789 * x82 + x933) + x930
    x940 = x16 * x812 + x16 * (x16 * x939 + x812) + x836
    x941 = x28 * x365
    x942 = x75 * x872
    x943 = x112 * (x302 * x670 - x941 - x942)
    x944 = x28 * x367
    x945 = x75 * x875
    x946 = x112 * (x291 * x670 - x944 - x945)
    x947 = x291 * x670 - x944
    x948 = x3 * x947
    x949 = -x23 * x945 + x948
    x950 = x302 * x670 - x941
    x951 = -x23 * x942 + x3 * x950 + x81 * x949
    x952 = x3 * x951 + x81 * (x3 * x949 - x82 * x880 + x946) - x82 * x884 + x943
    x953 = x17 * x939 + x952
    x954 = x16 * x953 + x898
    x955 = x791 * x81
    x956 = x112 * (-x75 * x955 + x780 * x81)
    x957 = x786 * x81
    x958 = x112 * (-x75 * x957 + x783 * x81)
    x959 = x784 * x81 - x82 * x957
    x960 = x781 * x81 + x81 * x959 - x82 * x955
    x961 = x3 * x960 + x81 * (x3 * x959 - x82 * x902 + x958) - x82 * x903 + x956
    x962 = x18 * x939 + x961
    x963 = x16 * x962 + x912
    x964 = x28 * x385
    x965 = -x28 * x400 + x384 * x670
    x966 = x75 * x965
    x967 = x112 * (x387 * x670 - x964 - x966)
    x968 = x28 * x389
    x969 = -x28 * x394 + x383 * x670
    x970 = x75 * x969
    x971 = x112 * (x382 * x670 - x968 - x970)
    x972 = x382 * x670 - x968
    x973 = x3 * x972
    x974 = x23 * x970
    x975 = x973 - x974
    x976 = x3 * x969
    x977 = x393 * x670 - x407 * x687
    x978 = x82 * x977
    x979 = x976 - x978
    x980 = x387 * x670 - x964
    x981 = -x23 * x966 + x3 * x980 + x81 * x975
    x982 = x399 * x670 - x411 * x687
    x983 = (
        x17 * x952
        + x3 * x981
        + x81 * (x3 * x975 - x82 * x979 + x971)
        - x82 * (x3 * x965 + x81 * x979 - x82 * x982)
        + x967
    )
    x984 = x17 * x953 + x983
    x985 = x81 * x882
    x986 = x112 * (x81 * x872 - x985)
    x987 = x81 * x878
    x988 = x112 * (x81 * x875 - x987)
    x989 = x81 * x876 - x81 * x879
    x990 = x81 * x888 - x81 * x890
    x991 = x81 * x873 - x81 * x883 + x81 * x989
    x992 = (
        x3 * x991
        + x81 * (x3 * x989 - x82 * x990 + x988)
        - x82 * (x81 * x892 - x81 * x894 + x81 * x990)
        + x986
    )
    x993 = x18 * x952 + x992
    x994 = x17 * x962 + x993
    x995 = x112 * (2 * x791 * x915 - x806 * x916)
    x996 = x112 * (2 * x786 * x915 - x802 * x916)
    x997 = x800 * x916 - x803 * x916
    x998 = x825 * x916 - x827 * x916
    x999 = x799 * x916 - x807 * x916 + x81 * x997
    x1000 = (
        x3 * x999
        + x81 * (x3 * x997 - x82 * x998 + x996)
        - x82 * (x81 * x998 + x824 * x916 - x830 * x916)
        + x995
    )
    x1001 = x1000 + x18 * x961
    x1002 = x1001 + x18 * x962
    x1003 = x697 * x81
    x1004 = x112 * (-x1003 * x75 + x741 * x81)
    x1005 = x689 * x81
    x1006 = x112 * (-x1005 * x75 + x735 * x81)
    x1007 = -x1005 * x82 + x736 * x81
    x1008 = -x1003 * x82 + x1007 * x81 + x742 * x81
    x1009 = x1004 + x1008 * x3 + x81 * (x1006 + x1007 * x3 - x82 * x841) - x82 * x843
    x1010 = x16 * x850 + x16 * (x1009 * x16 + x850) + x864
    x1011 = x1009 * x17 + x961
    x1012 = x1011 * x16 + x17 * x850 + x911
    x1013 = x112 * (2 * x697 * x915 - x701 * x916)
    x1014 = x112 * (2 * x689 * x915 - x693 * x916)
    x1015 = x690 * x916 - x694 * x916
    x1016 = x1015 * x81 + x698 * x916 - x702 * x916
    x1017 = x1013 + x1016 * x3 + x81 * (x1014 + x1015 * x3 - x82 * x918) - x82 * x919
    x1018 = x1009 * x18 + x1017
    x1019 = x1018 * x16 + x926
    x1020 = x17 * x961 + x992
    x1021 = x1011 * x17 + x1020
    x1022 = x1001 + x1018 * x17
    x1023 = x80 ** (-3.0)
    x1024 = 6 * x1023
    x1025 = x112 * (6 * x1023 * x700 - x1024 * x721)
    x1026 = x112 * (6 * x1023 * x692 - x1024 * x716)
    x1027 = x1024 * x714 - x1024 * x717
    x1028 = x1024 * x758 - x1024 * x760
    x1029 = x1024 * x719 - x1024 * x722 + x1027 * x81
    x1030 = (
        x1017 * x18
        + x1025
        + x1029 * x3
        + x81 * (x1026 + x1027 * x3 - x1028 * x82)
        - x82 * (x1024 * x762 - x1024 * x764 + x1028 * x81)
    )
    x1031 = x1018 * x18 + x1030
    x1032 = x28 * x416
    x1033 = x75 * x947
    x1034 = x112 * (-x1032 - x1033 + x300 * x670)
    x1035 = -x1032 + x300 * x670
    x1036 = -x1033 * x23 + x1035 * x3
    x1037 = x1034 + x1036 * x3 - x82 * x949
    x1038 = x16 * x952 + x16 * (x1037 * x16 + x952) + x897
    x1039 = x28 * x426
    x1040 = x75 * x972
    x1041 = x112 * (-x1039 - x1040 + x386 * x670)
    x1042 = -x1039 + x386 * x670
    x1043 = -x1040 * x23 + x1042 * x3
    x1044 = x1041 + x1043 * x3 - x82 * x975
    x1045 = x1037 * x17 + x1044
    x1046 = x1045 * x16 + x983
    x1047 = x81 * x875
    x1048 = x112 * (-x1047 * x75 + x81 * x947)
    x1049 = -x1047 * x82 + x81 * x948
    x1050 = x1048 + x1049 * x3 - x82 * x989
    x1051 = x1037 * x18 + x1050
    x1052 = x1051 * x16 + x993
    x1053 = x28 * x439
    x1054 = -x28 * x442 + x438 * x670
    x1055 = x1054 * x75
    x1056 = x112 * (-x1053 - x1055 + x437 * x670)
    x1057 = -x1053 + x437 * x670
    x1058 = -x1055 * x23 + x1057 * x3
    x1059 = x441 * x670 - x448 * x687
    x1060 = (
        x1044 * x17 + x1045 * x17 + x1056 + x1058 * x3 - x82 * (x1054 * x3 - x1059 * x82)
    )
    x1061 = x81 * x970
    x1062 = x112 * (-x1061 + x81 * x972)
    x1063 = x81 * x973 - x81 * x974
    x1064 = x1062 + x1063 * x3 - x82 * (x81 * x976 - x81 * x978)
    x1065 = x1044 * x18 + x1051 * x17 + x1064
    x1066 = x112 * (2 * x875 * x915 - x878 * x916)
    x1067 = x876 * x916 - x879 * x916
    x1068 = x1066 + x1067 * x3 - x82 * (x888 * x916 - x890 * x916)
    x1069 = x1050 * x18 + x1068
    x1070 = x1051 * x18 + x1069
    x1071 = x783 * x81
    x1072 = x112 * (-x1071 * x75 + x81 * x934)
    x1073 = -x1071 * x82 + x81 * x935
    x1074 = x1072 + x1073 * x3 - x82 * x959
    x1075 = x16 * x961 + x16 * (x1074 * x16 + x961) + x911
    x1076 = x1050 + x1074 * x17
    x1077 = x1020 + x1076 * x16
    x1078 = x112 * (2 * x783 * x915 - x787 * x916)
    x1079 = x784 * x916 - x788 * x916
    x1080 = x1078 + x1079 * x3 - x82 * x997
    x1081 = x1074 * x18 + x1080
    x1082 = x1001 + x1081 * x16
    x1083 = x1050 * x17 + x1064 + x1076 * x17
    x1084 = x1069 + x1081 * x17
    x1085 = x112 * (6 * x1023 * x786 - x1024 * x802)
    x1086 = x1024 * x800 - x1024 * x803
    x1087 = x1080 * x18 + x1085 + x1086 * x3 - x82 * (x1024 * x825 - x1024 * x827)
    x1088 = x1081 * x18 + x1087
    x1089 = x112 * (2 * x735 * x915 - x737 * x916)
    x1090 = x736 * x916 - x738 * x916
    x1091 = -x1015 * x82 + x1089 + x1090 * x3
    x1092 = x1017 * x16 + x16 * (x1017 + x1091 * x16) + x925
    x1093 = x1080 + x1091 * x17
    x1094 = x1000 + x1017 * x17 + x1093 * x16
    x1095 = x112 * (6 * x1023 * x689 - x1024 * x693)
    x1096 = x1024 * x690 - x1024 * x694
    x1097 = -x1027 * x82 + x1095 + x1096 * x3
    x1098 = x1091 * x18 + x1097
    x1099 = x1030 + x1098 * x16
    x1100 = x1068 + x1080 * x17 + x1093 * x17
    x1101 = x1087 + x1098 * x17
    x1102 = x80 ** (-4.0)
    x1103 = 24 * x1102
    x1104 = x112 * (24 * x1102 * x692 - x1103 * x716)
    x1105 = x1103 * x714 - x1103 * x717
    x1106 = (
        x1097 * x18
        + x1098 * x18
        + x1104
        + x1105 * x3
        - x82 * (x1103 * x758 - x1103 * x760)
    )
    x1107 = x16 * x510
    x1108 = x16 * x481 + x16 * (x1107 + x481) + x516
    x1109 = x17 * x510
    x1110 = x1109 + x544
    x1111 = x1110 * x16 + x17 * x481 + x562
    x1112 = x1107 * x18 + x18 * x481
    x1113 = x17 * x544 + x588
    x1114 = x1110 * x17 + x1113
    x1115 = x18 * x544
    x1116 = x1109 * x18 + x1115
    x1117 = x16 * x610
    x1118 = x16 * x544 + x16 * (x1117 + x544) + x562
    x1119 = x17 * x610
    x1120 = x1119 + x622
    x1121 = x1113 + x1120 * x16
    x1122 = x1115 + x1117 * x18
    x1123 = x17 * x622 + x638
    x1124 = x1120 * x17 + x1123
    x1125 = x18 * x622
    x1126 = x1119 * x18 + x1125
    x1127 = x16 * x648
    x1128 = x16 * x622 + x16 * (x1127 + x622) + x588
    x1129 = x17 * x648
    x1130 = x1129 + x656
    x1131 = x1123 + x1130 * x16
    x1132 = x1125 + x1127 * x18
    x1133 = x1130 * x17 + x17 * x656 + x665
    x1134 = x1129 * x18 + x18 * x656
    x1135 = x157 - x26 * x459 + x451 * x461
    x1136 = x115 - x26 * x483 + x451 * x458
    x1137 = x158 - x26 * x466 + x451 * x463
    x1138 = x117 - x26 * x485 + x451 * x465
    x1139 = x161 - x26 * x472 + x451 * x469
    x1140 = x120 - x26 * x487 + x451 * x471
    x1141 = x160 - x26 * x478 + x451 * x475
    x1142 = x119 - x26 * x490 + x451 * x477
    x1143 = (
        x1135 * x3
        - x1136 * x82
        + x88
        * (
            x1137 * x3
            - x1138 * x82
            + x86 * (x1141 * x3 - x1142 * x82 + x81 * (x1139 * x3 - x1140 * x82))
        )
    )
    x1144 = x176 - x26 * x499 + x451 * x501
    x1145 = x178 - x26 * x504 + x451 * x503
    x1146 = x177 - x26 * x508 + x451 * x507
    x1147 = (
        -x1137 * x82
        + x1144 * x3
        + x86 * (-x1141 * x82 + x1146 * x3 + x81 * (-x1139 * x82 + x1145 * x3))
    )
    x1148 = x1147 * x16
    x1149 = x114 - x26 * x454 + x451 * x515
    x1150 = x140 + x451 * x482 - x467 * x518
    x1151 = x141 + x451 * x484 - x467 * x519
    x1152 = x143 + x451 * x486 - x467 * x520
    x1153 = x142 + x451 * x489 - x467 * x522
    x1154 = x128 + x451 * x453 - x467 * x529
    x1155 = (
        x1143 * x16
        + x1149 * x3
        - x1154 * x82
        + x16 * (x1143 + x1148)
        + x90
        * (
            x1136 * x3
            - x1150 * x82
            + x88
            * (
                x1138 * x3
                - x1151 * x82
                + x86 * (x1142 * x3 - x1153 * x82 + x81 * (x1140 * x3 - x1152 * x82))
            )
        )
    )
    x1156 = x1147 * x17
    x1157 = x1137 * x81 + x208 - x26 * x533 + x451 * x534
    x1158 = x1138 * x81 + x258 - x26 * x546 + x451 * x532
    x1159 = x1139 * x81 + x230 - x26 * x538 + x451 * x536
    x1160 = x1140 * x81 - x26 * x548 + x261 + x451 * x537
    x1161 = x1141 * x81 + x229 - x26 * x542 + x451 * x540
    x1162 = x1142 * x81 - x26 * x551 + x260 + x451 * x541
    x1163 = (
        x1157 * x3
        - x1158 * x82
        + x86 * (x1161 * x3 - x1162 * x82 + x81 * (x1159 * x3 - x1160 * x82))
    )
    x1164 = x1156 + x1163
    x1165 = x1136 * x81 + x240 - x26 * x559 + x451 * x560
    x1166 = x1151 * x81 + x272 + x451 * x545 - x467 * x564
    x1167 = x1152 * x81 + x281 + x451 * x547 - x467 * x565
    x1168 = x1153 * x81 + x280 + x451 * x550 - x467 * x567
    x1169 = x1150 * x81 + x285 + x451 * x558 - x467 * x572
    x1170 = (
        x1165 * x3
        - x1169 * x82
        + x88
        * (
            x1158 * x3
            - x1166 * x82
            + x86 * (x1162 * x3 - x1168 * x82 + x81 * (x1160 * x3 - x1167 * x82))
        )
    )
    x1171 = x1143 * x17 + x1164 * x16 + x1170
    x1172 = x1143 * x18 + x1148 * x18
    x1173 = x1158 * x86 - x26 * x577 + x304 + x451 * x578
    x1174 = x1160 * x86 - x26 * x582 + x324 + x451 * x580
    x1175 = x1167 * x86 + x332 + x451 * x581 - x467 * x591
    x1176 = x1162 * x86 - x26 * x586 + x323 + x451 * x584
    x1177 = x1168 * x86 + x336 + x451 * x585 - x467 * x593
    x1178 = x1166 * x86 + x340 + x451 * x576 - x467 * x595
    x1179 = (
        x1173 * x3
        - x1178 * x82
        + x86 * (x1176 * x3 - x1177 * x82 + x81 * (x1174 * x3 - x1175 * x82))
    )
    x1180 = x1163 * x17 + x1179
    x1181 = x1164 * x17 + x1180
    x1182 = x1163 * x18
    x1183 = x1156 * x18 + x1182
    x1184 = x1147 * x19
    x1185 = x1145 * x81 - x26 * x606 + x352 + x451 * x607
    x1186 = x1146 * x81 - x26 * x603 + x350 + x451 * x604
    x1187 = -x1161 * x82 + x1186 * x3 + x81 * (-x1159 * x82 + x1185 * x3)
    x1188 = x1187 * x16
    x1189 = x1163 * x16 + x1170 + x16 * (x1163 + x1188)
    x1190 = x1187 * x17
    x1191 = x1159 * x86 - x26 * x618 + x368 + x451 * x619
    x1192 = x1161 * x86 - x26 * x615 + x366 + x451 * x616
    x1193 = -x1176 * x82 + x1192 * x3 + x81 * (-x1174 * x82 + x1191 * x3)
    x1194 = x1190 + x1193
    x1195 = x1180 + x1194 * x16
    x1196 = x1182 + x1188 * x18
    x1197 = x1174 * x88 - x26 * x632 + x390 + x451 * x633
    x1198 = x1175 * x88 + x406 + x451 * x631 - x467 * x636
    x1199 = x1176 * x88 - x26 * x628 + x388 + x451 * x629
    x1200 = x1177 * x88 + x410 + x451 * x627 - x467 * x639
    x1201 = x1193 * x17 + x1199 * x3 - x1200 * x82 + x81 * (x1197 * x3 - x1198 * x82)
    x1202 = x1194 * x17 + x1201
    x1203 = x1193 * x18
    x1204 = x1190 * x18 + x1203
    x1205 = x1187 * x19
    x1206 = x1185 * x86 - x26 * x645 + x417 + x451 * x646
    x1207 = -x1191 * x82 + x1206 * x3
    x1208 = x1207 * x16
    x1209 = x1179 + x1193 * x16 + x16 * (x1193 + x1208)
    x1210 = x1207 * x17
    x1211 = x1191 * x88 - x26 * x653 + x427 + x451 * x654
    x1212 = -x1197 * x82 + x1211 * x3
    x1213 = x1210 + x1212
    x1214 = x1201 + x1213 * x16
    x1215 = x1203 + x1208 * x18
    x1216 = x1197 * x90 - x26 * x662 + x445 + x451 * x663
    x1217 = x1198 * x90 + x447 + x451 * x661 - x467 * x666
    x1218 = x1212 * x17 + x1213 * x17 + x1216 * x3 - x1217 * x82
    x1219 = x1210 * x18 + x1212 * x18
    x1220 = x1207 * x19
    x1221 = -x26 * x678 + x451 * x680
    x1222 = -x26 * x708 + x451 * x677
    x1223 = -x26 * x686 + x451 * x682
    x1224 = x451 * x685
    x1225 = x26 * x712
    x1226 = x1224 - x1225
    x1227 = x451 * x689
    x1228 = x26 * x693
    x1229 = x1227 - x1228
    x1230 = x451 * x692
    x1231 = x26 * x716
    x1232 = x1230 - x1231
    x1233 = x451 * x697
    x1234 = x26 * x701
    x1235 = x1233 - x1234
    x1236 = x451 * x700
    x1237 = x26 * x721
    x1238 = x1236 - x1237
    x1239 = (
        x1221 * x3
        - x1222 * x82
        + x88
        * (
            x1223 * x3
            - x1226 * x82
            + x86 * (x1235 * x3 - x1238 * x82 + x81 * (x1229 * x3 - x1232 * x82))
        )
    )
    x1240 = -x26 * x731 + x451 * x733
    x1241 = x451 * x735
    x1242 = x26 * x737
    x1243 = x1241 - x1242
    x1244 = -x26 * x743 + x451 * x741
    x1245 = (
        -x1223 * x82
        + x1240 * x3
        + x86 * (-x1235 * x82 + x1244 * x3 + x81 * (-x1229 * x82 + x1243 * x3))
    )
    x1246 = -x26 * x673 + x451 * x749
    x1247 = x451 * x707
    x1248 = x467 * x753
    x1249 = x1247 - x1248
    x1250 = x451 * x711
    x1251 = x467 * x756
    x1252 = x1250 - x1251
    x1253 = x451 * x715
    x1254 = x467 * x759
    x1255 = x1253 - x1254
    x1256 = x451 * x720
    x1257 = x467 * x763
    x1258 = x1256 - x1257
    x1259 = x451 * x672 - x467 * x771
    x1260 = (
        x1239 * x16
        + x1246 * x3
        - x1259 * x82
        + x16 * (x1239 + x1245 * x16)
        + x90
        * (
            x1222 * x3
            - x1249 * x82
            + x88
            * (
                x1226 * x3
                - x1252 * x82
                + x86 * (x1238 * x3 - x1258 * x82 + x81 * (x1232 * x3 - x1255 * x82))
            )
        )
    )
    x1261 = x1223 * x81 - x26 * x776 + x451 * x778
    x1262 = x1226 * x81 - x26 * x797 + x451 * x775
    x1263 = x451 * x783
    x1264 = x26 * x787
    x1265 = x1229 * x81 + x1263 - x1264
    x1266 = x451 * x786
    x1267 = x26 * x802
    x1268 = x1232 * x81 + x1266 - x1267
    x1269 = x1235 * x81 - x26 * x792 + x451 * x780
    x1270 = x451 * x791
    x1271 = x26 * x806
    x1272 = x1238 * x81 + x1270 - x1271
    x1273 = (
        x1261 * x3
        - x1262 * x82
        + x86 * (x1269 * x3 - x1272 * x82 + x81 * (x1265 * x3 - x1268 * x82))
    )
    x1274 = x1245 * x17 + x1273
    x1275 = x1222 * x81 - x26 * x816 + x451 * x818
    x1276 = x451 * x796
    x1277 = x467 * x822
    x1278 = x1252 * x81 + x1276 - x1277
    x1279 = x451 * x801
    x1280 = x467 * x826
    x1281 = x1255 * x81 + x1279 - x1280
    x1282 = x451 * x805
    x1283 = x467 * x829
    x1284 = x1258 * x81 + x1282 - x1283
    x1285 = x1249 * x81 + x451 * x815 - x467 * x835
    x1286 = (
        x1275 * x3
        - x1285 * x82
        + x88
        * (
            x1262 * x3
            - x1278 * x82
            + x86 * (x1272 * x3 - x1284 * x82 + x81 * (x1268 * x3 - x1281 * x82))
        )
    )
    x1287 = x1239 * x17 + x1274 * x16 + x1286
    x1288 = x682 * x81
    x1289 = x1288 * x451 - x467 * x838
    x1290 = -x26 * x855 + x451 * x838
    x1291 = x1003 * x451 - x467 * x842
    x1292 = -x26 * x860 + x451 * x842
    x1293 = x1005 * x451 - x467 * x840
    x1294 = -x26 * x862 + x451 * x840
    x1295 = (
        x1289 * x3
        - x1290 * x82
        + x86 * (x1291 * x3 - x1292 * x82 + x81 * (x1293 * x3 - x1294 * x82))
    )
    x1296 = x1245 * x18 + x1295
    x1297 = x677 * x81
    x1298 = x1297 * x451 - x26 * x852
    x1299 = x1250 * x81 - x1251 * x81
    x1300 = x1256 * x81 - x1257 * x81
    x1301 = x1253 * x81 - x1254 * x81
    x1302 = x1247 * x81 - x1248 * x81
    x1303 = (
        x1298 * x3
        - x1302 * x82
        + x88
        * (
            x1290 * x3
            - x1299 * x82
            + x86 * (x1292 * x3 - x1300 * x82 + x81 * (x1294 * x3 - x1301 * x82))
        )
    )
    x1304 = x1239 * x18 + x1296 * x16 + x1303
    x1305 = x1262 * x86 - x26 * x868 + x451 * x870
    x1306 = x451 * x875
    x1307 = x26 * x878
    x1308 = x1268 * x86 + x1306 - x1307
    x1309 = x451 * x877
    x1310 = x467 * x889
    x1311 = x1281 * x86 + x1309 - x1310
    x1312 = x1272 * x86 - x26 * x882 + x451 * x872
    x1313 = x451 * x881
    x1314 = x467 * x893
    x1315 = x1284 * x86 + x1313 - x1314
    x1316 = x1278 * x86 + x451 * x867 - x467 * x896
    x1317 = (
        x1305 * x3
        - x1316 * x82
        + x86 * (x1312 * x3 - x1315 * x82 + x81 * (x1308 * x3 - x1311 * x82))
    )
    x1318 = x1273 * x17 + x1317
    x1319 = x1274 * x17 + x1318
    x1320 = x775 * x81
    x1321 = x1290 * x81 + x1320 * x451 - x26 * x900
    x1322 = x1292 * x81 - x26 * x905 + x451 * x955
    x1323 = x1294 * x81 - x26 * x907 + x451 * x957
    x1324 = x1279 * x81 - x1280 * x81 + x1301 * x81
    x1325 = x1282 * x81 - x1283 * x81 + x1300 * x81
    x1326 = x1276 * x81 - x1277 * x81 + x1299 * x81
    x1327 = (
        x1321 * x3
        - x1326 * x82
        + x86 * (x1322 * x3 - x1325 * x82 + x81 * (x1323 * x3 - x1324 * x82))
    )
    x1328 = x1273 * x18 + x1327
    x1329 = x1296 * x17 + x1328
    x1330 = x1224 * x916 - x1225 * x916
    x1331 = x1236 * x916 - x1237 * x916
    x1332 = x1256 * x916 - x1257 * x916
    x1333 = x1230 * x916 - x1231 * x916
    x1334 = x1253 * x916 - x1254 * x916
    x1335 = x1250 * x916 - x1251 * x916
    x1336 = (
        x1330 * x3
        - x1335 * x82
        + x86 * (x1331 * x3 - x1332 * x82 + x81 * (x1333 * x3 - x1334 * x82))
    )
    x1337 = x1295 * x18 + x1336
    x1338 = x1296 * x18 + x1337
    x1339 = x1243 * x81 - x26 * x932 + x451 * x934
    x1340 = x1244 * x81 - x26 * x929 + x451 * x937
    x1341 = -x1269 * x82 + x1340 * x3 + x81 * (-x1265 * x82 + x1339 * x3)
    x1342 = x1273 * x16 + x1286 + x16 * (x1273 + x1341 * x16)
    x1343 = x1265 * x86 - x26 * x945 + x451 * x947
    x1344 = x1269 * x86 - x26 * x942 + x451 * x950
    x1345 = -x1312 * x82 + x1344 * x3 + x81 * (-x1308 * x82 + x1343 * x3)
    x1346 = x1341 * x17 + x1345
    x1347 = x1318 + x1346 * x16
    x1348 = x780 * x81
    x1349 = x1291 * x81 + x1348 * x451 - x467 * x955
    x1350 = x1071 * x451 + x1293 * x81 - x467 * x957
    x1351 = -x1322 * x82 + x1349 * x3 + x81 * (-x1323 * x82 + x1350 * x3)
    x1352 = x1341 * x18 + x1351
    x1353 = x1328 + x1352 * x16
    x1354 = x1308 * x88 - x26 * x970 + x451 * x972
    x1355 = x451 * x969
    x1356 = x467 * x977
    x1357 = x1311 * x88 + x1355 - x1356
    x1358 = x1312 * x88 - x26 * x966 + x451 * x980
    x1359 = x1315 * x88 + x451 * x965 - x467 * x982
    x1360 = x1345 * x17 + x1358 * x3 - x1359 * x82 + x81 * (x1354 * x3 - x1357 * x82)
    x1361 = x1346 * x17 + x1360
    x1362 = x1047 * x451 + x1323 * x86 - x26 * x987
    x1363 = x1309 * x81 - x1310 * x81 + x1324 * x86
    x1364 = x81 * x872
    x1365 = x1322 * x86 + x1364 * x451 - x26 * x985
    x1366 = x1313 * x81 - x1314 * x81 + x1325 * x86
    x1367 = x1365 * x3 - x1366 * x82 + x81 * (x1362 * x3 - x1363 * x82)
    x1368 = x1345 * x18 + x1367
    x1369 = x1352 * x17 + x1368
    x1370 = x1266 * x916 - x1267 * x916 + x1333 * x81
    x1371 = x1279 * x916 - x1280 * x916 + x1334 * x81
    x1372 = x1270 * x916 - x1271 * x916 + x1331 * x81
    x1373 = x1282 * x916 - x1283 * x916 + x1332 * x81
    x1374 = x1372 * x3 - x1373 * x82 + x81 * (x1370 * x3 - x1371 * x82)
    x1375 = x1351 * x18 + x1374
    x1376 = x1352 * x18 + x1375
    x1377 = x741 * x81
    x1378 = -x1003 * x467 + x1377 * x451
    x1379 = x735 * x81
    x1380 = -x1005 * x467 + x1379 * x451
    x1381 = -x1291 * x82 + x1378 * x3 + x81 * (-x1293 * x82 + x1380 * x3)
    x1382 = x1295 * x16 + x1303 + x16 * (x1295 + x1381 * x16)
    x1383 = x1351 + x1381 * x17
    x1384 = x1295 * x17 + x1327 + x1383 * x16
    x1385 = x1233 * x916 - x1234 * x916
    x1386 = x1227 * x916 - x1228 * x916
    x1387 = -x1331 * x82 + x1385 * x3 + x81 * (-x1333 * x82 + x1386 * x3)
    x1388 = x1381 * x18 + x1387
    x1389 = x1337 + x1388 * x16
    x1390 = x1351 * x17 + x1367
    x1391 = x1383 * x17 + x1390
    x1392 = x1375 + x1388 * x17
    x1393 = x1024 * x1230 - x1024 * x1231
    x1394 = x1024 * x1253 - x1024 * x1254
    x1395 = x1024 * x1236 - x1024 * x1237
    x1396 = x1024 * x1256 - x1024 * x1257
    x1397 = x1387 * x18 + x1395 * x3 - x1396 * x82 + x81 * (x1393 * x3 - x1394 * x82)
    x1398 = x1388 * x18 + x1397
    x1399 = -x1033 * x26 + x1035 * x451 + x1339 * x86
    x1400 = -x1343 * x82 + x1399 * x3
    x1401 = x1317 + x1345 * x16 + x16 * (x1345 + x1400 * x16)
    x1402 = -x1040 * x26 + x1042 * x451 + x1343 * x88
    x1403 = -x1354 * x82 + x1402 * x3
    x1404 = x1400 * x17 + x1403
    x1405 = x1360 + x1404 * x16
    x1406 = x81 * x947
    x1407 = -x1047 * x467 + x1350 * x86 + x1406 * x451
    x1408 = -x1362 * x82 + x1407 * x3
    x1409 = x1400 * x18 + x1408
    x1410 = x1368 + x1409 * x16
    x1411 = -x1055 * x26 + x1057 * x451 + x1354 * x90
    x1412 = x1054 * x451 - x1059 * x467 + x1357 * x90
    x1413 = x1403 * x17 + x1404 * x17 + x1411 * x3 - x1412 * x82
    x1414 = x81 * x972
    x1415 = -x1061 * x26 + x1362 * x88 + x1414 * x451
    x1416 = x1355 * x81 - x1356 * x81 + x1363 * x88
    x1417 = x1415 * x3 - x1416 * x82
    x1418 = x1403 * x18 + x1409 * x17 + x1417
    x1419 = x1306 * x916 - x1307 * x916 + x1370 * x86
    x1420 = x1309 * x916 - x1310 * x916 + x1371 * x86
    x1421 = x1419 * x3 - x1420 * x82
    x1422 = x1408 * x18 + x1421
    x1423 = x1409 * x18 + x1422
    x1424 = x81 * x934
    x1425 = -x1071 * x467 + x1380 * x81 + x1424 * x451
    x1426 = -x1350 * x82 + x1425 * x3
    x1427 = x1327 + x1351 * x16 + x16 * (x1351 + x1426 * x16)
    x1428 = x1408 + x1426 * x17
    x1429 = x1390 + x1428 * x16
    x1430 = x1263 * x916 - x1264 * x916 + x1386 * x81
    x1431 = -x1370 * x82 + x1430 * x3
    x1432 = x1426 * x18 + x1431
    x1433 = x1375 + x1432 * x16
    x1434 = x1408 * x17 + x1417 + x1428 * x17
    x1435 = x1422 + x1432 * x17
    x1436 = x1024 * x1266 - x1024 * x1267 + x1393 * x81
    x1437 = x1024 * x1279 - x1024 * x1280 + x1394 * x81
    x1438 = x1431 * x18 + x1436 * x3 - x1437 * x82
    x1439 = x1432 * x18 + x1438
    x1440 = x1241 * x916 - x1242 * x916
    x1441 = -x1386 * x82 + x1440 * x3
    x1442 = x1336 + x1387 * x16 + x16 * (x1387 + x1441 * x16)
    x1443 = x1431 + x1441 * x17
    x1444 = x1374 + x1387 * x17 + x1443 * x16
    x1445 = x1024 * x1227 - x1024 * x1228
    x1446 = -x1393 * x82 + x1445 * x3
    x1447 = x1441 * x18 + x1446
    x1448 = x1397 + x1447 * x16
    x1449 = x1421 + x1431 * x17 + x1443 * x17
    x1450 = x1438 + x1447 * x17
    x1451 = x1103 * x1230 - x1103 * x1231
    x1452 = x1103 * x1253 - x1103 * x1254
    x1453 = x1446 * x18 + x1447 * x18 + x1451 * x3 - x1452 * x82
    x1454 = x16 * x705 + x16 * (x16 * x745 + x705) + x750
    x1455 = x17 * x745 + x794
    x1456 = x1455 * x16 + x17 * x705 + x819
    x1457 = x18 * x745 + x844
    x1458 = x1457 * x16 + x18 * x705 + x854
    x1459 = x17 * x794 + x885
    x1460 = x1455 * x17 + x1459
    x1461 = x18 * x794 + x904
    x1462 = x1457 * x17 + x1461
    x1463 = x18 * x844 + x920
    x1464 = x1457 * x18 + x1463
    x1465 = x16 * x794 + x16 * (x16 * x938 + x794) + x819
    x1466 = x17 * x938 + x951
    x1467 = x1459 + x1466 * x16
    x1468 = x18 * x938 + x960
    x1469 = x1461 + x1468 * x16
    x1470 = x17 * x951 + x981
    x1471 = x1466 * x17 + x1470
    x1472 = x18 * x951 + x991
    x1473 = x1468 * x17 + x1472
    x1474 = x18 * x960 + x999
    x1475 = x1468 * x18 + x1474
    x1476 = x16 * x844 + x16 * (x1008 * x16 + x844) + x854
    x1477 = x1008 * x17 + x960
    x1478 = x1477 * x16 + x17 * x844 + x904
    x1479 = x1008 * x18 + x1016
    x1480 = x1463 + x1479 * x16
    x1481 = x17 * x960 + x991
    x1482 = x1477 * x17 + x1481
    x1483 = x1474 + x1479 * x17
    x1484 = x1016 * x18 + x1029
    x1485 = x1479 * x18 + x1484
    x1486 = x16 * x951 + x16 * (x1036 * x16 + x951) + x885
    x1487 = x1036 * x17 + x1043
    x1488 = x1470 + x1487 * x16
    x1489 = x1036 * x18 + x1049
    x1490 = x1472 + x1489 * x16
    x1491 = x1043 * x17 + x1058 + x1487 * x17
    x1492 = x1043 * x18 + x1063 + x1489 * x17
    x1493 = x1049 * x18 + x1067
    x1494 = x1489 * x18 + x1493
    x1495 = x16 * x960 + x16 * (x1073 * x16 + x960) + x904
    x1496 = x1049 + x1073 * x17
    x1497 = x1481 + x1496 * x16
    x1498 = x1073 * x18 + x1079
    x1499 = x1474 + x1498 * x16
    x1500 = x1049 * x17 + x1063 + x1496 * x17
    x1501 = x1493 + x1498 * x17
    x1502 = x1079 * x18 + x1086
    x1503 = x1498 * x18 + x1502
    x1504 = x1016 * x16 + x16 * (x1016 + x1090 * x16) + x920
    x1505 = x1079 + x1090 * x17
    x1506 = x1016 * x17 + x1505 * x16 + x999
    x1507 = x1090 * x18 + x1096
    x1508 = x1484 + x1507 * x16
    x1509 = x1067 + x1079 * x17 + x1505 * x17
    x1510 = x1502 + x1507 * x17
    x1511 = x1096 * x18 + x1105 + x1507 * x18
    x1512 = x157 - x28 * x678 + x670 * x680
    x1513 = x115 - x28 * x708 + x670 * x677
    x1514 = x158 - x28 * x686 + x670 * x682
    x1515 = x670 * x685
    x1516 = x28 * x712
    x1517 = x117 + x1515 - x1516
    x1518 = x670 * x689
    x1519 = x28 * x693
    x1520 = x1518 - x1519 + x161
    x1521 = x670 * x692
    x1522 = x28 * x716
    x1523 = x120 + x1521 - x1522
    x1524 = x670 * x697
    x1525 = x28 * x701
    x1526 = x1524 - x1525 + x160
    x1527 = x670 * x700
    x1528 = x28 * x721
    x1529 = x119 + x1527 - x1528
    x1530 = (
        x1512 * x3
        - x1513 * x82
        + x88
        * (
            x1514 * x3
            - x1517 * x82
            + x86 * (x1526 * x3 - x1529 * x82 + x81 * (x1520 * x3 - x1523 * x82))
        )
    )
    x1531 = x176 - x28 * x731 + x670 * x733
    x1532 = x670 * x735
    x1533 = x28 * x737
    x1534 = x1532 - x1533 + x178
    x1535 = x177 - x28 * x743 + x670 * x741
    x1536 = (
        -x1514 * x82
        + x1531 * x3
        + x86 * (-x1526 * x82 + x1535 * x3 + x81 * (-x1520 * x82 + x1534 * x3))
    )
    x1537 = x114 - x28 * x673 + x670 * x749
    x1538 = x670 * x707
    x1539 = x687 * x753
    x1540 = x140 + x1538 - x1539
    x1541 = x670 * x711
    x1542 = x687 * x756
    x1543 = x141 + x1541 - x1542
    x1544 = x670 * x715
    x1545 = x687 * x759
    x1546 = x143 + x1544 - x1545
    x1547 = x670 * x720
    x1548 = x687 * x763
    x1549 = x142 + x1547 - x1548
    x1550 = x128 + x670 * x672 - x687 * x771
    x1551 = (
        x1530 * x16
        + x1537 * x3
        - x1550 * x82
        + x16 * (x1530 + x1536 * x16)
        + x90
        * (
            x1513 * x3
            - x1540 * x82
            + x88
            * (
                x1517 * x3
                - x1543 * x82
                + x86 * (x1529 * x3 - x1549 * x82 + x81 * (x1523 * x3 - x1546 * x82))
            )
        )
    )
    x1552 = x208 - x28 * x776 + x670 * x778
    x1553 = x258 - x28 * x797 + x670 * x775
    x1554 = x670 * x783
    x1555 = x28 * x787
    x1556 = x1554 - x1555 + x230
    x1557 = x670 * x786
    x1558 = x28 * x802
    x1559 = x1557 - x1558 + x261
    x1560 = x229 - x28 * x792 + x670 * x780
    x1561 = x670 * x791
    x1562 = x28 * x806
    x1563 = x1561 - x1562 + x260
    x1564 = (
        x1552 * x3
        - x1553 * x82
        + x86 * (x1560 * x3 - x1563 * x82 + x81 * (x1556 * x3 - x1559 * x82))
    )
    x1565 = x1536 * x17 + x1564
    x1566 = x240 - x28 * x816 + x670 * x818
    x1567 = x670 * x796
    x1568 = x687 * x822
    x1569 = x1567 - x1568 + x272
    x1570 = x670 * x801
    x1571 = x687 * x826
    x1572 = x1570 - x1571 + x281
    x1573 = x670 * x805
    x1574 = x687 * x829
    x1575 = x1573 - x1574 + x280
    x1576 = x285 + x670 * x815 - x687 * x835
    x1577 = (
        x1566 * x3
        - x1576 * x82
        + x88
        * (
            x1553 * x3
            - x1569 * x82
            + x86 * (x1563 * x3 - x1575 * x82 + x81 * (x1559 * x3 - x1572 * x82))
        )
    )
    x1578 = x1530 * x17 + x1565 * x16 + x1577
    x1579 = x1288 * x670 + x1514 * x81 - x687 * x838
    x1580 = x1517 * x81 - x28 * x855 + x670 * x838
    x1581 = x1005 * x670 + x1520 * x81 - x687 * x840
    x1582 = x1523 * x81 - x28 * x862 + x670 * x840
    x1583 = x1003 * x670 + x1526 * x81 - x687 * x842
    x1584 = x1529 * x81 - x28 * x860 + x670 * x842
    x1585 = (
        x1579 * x3
        - x1580 * x82
        + x86 * (x1583 * x3 - x1584 * x82 + x81 * (x1581 * x3 - x1582 * x82))
    )
    x1586 = x1536 * x18 + x1585
    x1587 = x1297 * x670 + x1513 * x81 - x28 * x852
    x1588 = x1541 * x81 - x1542 * x81 + x1543 * x81
    x1589 = x1544 * x81 - x1545 * x81 + x1546 * x81
    x1590 = x1547 * x81 - x1548 * x81 + x1549 * x81
    x1591 = x1538 * x81 - x1539 * x81 + x1540 * x81
    x1592 = (
        x1587 * x3
        - x1591 * x82
        + x88
        * (
            x1580 * x3
            - x1588 * x82
            + x86 * (x1584 * x3 - x1590 * x82 + x81 * (x1582 * x3 - x1589 * x82))
        )
    )
    x1593 = x1530 * x18 + x1586 * x16 + x1592
    x1594 = -x28 * x868 + x304 + x670 * x870
    x1595 = x670 * x875
    x1596 = x28 * x878
    x1597 = x1595 - x1596 + x324
    x1598 = x670 * x877
    x1599 = x687 * x889
    x1600 = x1598 - x1599 + x332
    x1601 = -x28 * x882 + x323 + x670 * x872
    x1602 = x670 * x881
    x1603 = x687 * x893
    x1604 = x1602 - x1603 + x336
    x1605 = x340 + x670 * x867 - x687 * x896
    x1606 = (
        x1594 * x3
        - x1605 * x82
        + x86 * (x1601 * x3 - x1604 * x82 + x81 * (x1597 * x3 - x1600 * x82))
    )
    x1607 = x1564 * x17 + x1606
    x1608 = x1565 * x17 + x1607
    x1609 = x1320 * x670 + x1553 * x81 - x28 * x900
    x1610 = x1559 * x81 - x28 * x907 + x670 * x957
    x1611 = x1570 * x81 - x1571 * x81 + x1572 * x81
    x1612 = x1563 * x81 - x28 * x905 + x670 * x955
    x1613 = x1573 * x81 - x1574 * x81 + x1575 * x81
    x1614 = x1567 * x81 - x1568 * x81 + x1569 * x81
    x1615 = (
        x1609 * x3
        - x1614 * x82
        + x86 * (x1612 * x3 - x1613 * x82 + x81 * (x1610 * x3 - x1611 * x82))
    )
    x1616 = x1564 * x18 + x1615
    x1617 = x1586 * x17 + x1616
    x1618 = x1515 * x916 - x1516 * x916 + x1580 * x86
    x1619 = x1521 * x916 - x1522 * x916 + x1582 * x86
    x1620 = x1544 * x916 - x1545 * x916 + x1589 * x86
    x1621 = x1527 * x916 - x1528 * x916 + x1584 * x86
    x1622 = x1547 * x916 - x1548 * x916 + x1590 * x86
    x1623 = x1541 * x916 - x1542 * x916 + x1588 * x86
    x1624 = (
        x1618 * x3
        - x1623 * x82
        + x86 * (x1621 * x3 - x1622 * x82 + x81 * (x1619 * x3 - x1620 * x82))
    )
    x1625 = x1585 * x18 + x1624
    x1626 = x1586 * x18 + x1625
    x1627 = -x28 * x932 + x352 + x670 * x934
    x1628 = -x28 * x929 + x350 + x670 * x937
    x1629 = -x1560 * x82 + x1628 * x3 + x81 * (-x1556 * x82 + x1627 * x3)
    x1630 = x1564 * x16 + x1577 + x16 * (x1564 + x16 * x1629)
    x1631 = -x28 * x945 + x368 + x670 * x947
    x1632 = -x28 * x942 + x366 + x670 * x950
    x1633 = -x1601 * x82 + x1632 * x3 + x81 * (-x1597 * x82 + x1631 * x3)
    x1634 = x1629 * x17 + x1633
    x1635 = x16 * x1634 + x1607
    x1636 = x1071 * x670 + x1556 * x81 - x687 * x957
    x1637 = x1348 * x670 + x1560 * x81 - x687 * x955
    x1638 = -x1612 * x82 + x1637 * x3 + x81 * (-x1610 * x82 + x1636 * x3)
    x1639 = x1629 * x18 + x1638
    x1640 = x16 * x1639 + x1616
    x1641 = -x28 * x970 + x390 + x670 * x972
    x1642 = x670 * x969
    x1643 = x687 * x977
    x1644 = x1642 - x1643 + x406
    x1645 = -x28 * x966 + x388 + x670 * x980
    x1646 = x410 + x670 * x965 - x687 * x982
    x1647 = x1633 * x17 + x1645 * x3 - x1646 * x82 + x81 * (x1641 * x3 - x1644 * x82)
    x1648 = x1634 * x17 + x1647
    x1649 = x1047 * x670 + x1597 * x81 - x28 * x987
    x1650 = x1598 * x81 - x1599 * x81 + x1600 * x81
    x1651 = x1364 * x670 + x1601 * x81 - x28 * x985
    x1652 = x1602 * x81 - x1603 * x81 + x1604 * x81
    x1653 = x1651 * x3 - x1652 * x82 + x81 * (x1649 * x3 - x1650 * x82)
    x1654 = x1633 * x18 + x1653
    x1655 = x1639 * x17 + x1654
    x1656 = x1557 * x916 - x1558 * x916 + x1610 * x86
    x1657 = x1570 * x916 - x1571 * x916 + x1611 * x86
    x1658 = x1561 * x916 - x1562 * x916 + x1612 * x86
    x1659 = x1573 * x916 - x1574 * x916 + x1613 * x86
    x1660 = x1658 * x3 - x1659 * x82 + x81 * (x1656 * x3 - x1657 * x82)
    x1661 = x1638 * x18 + x1660
    x1662 = x1639 * x18 + x1661
    x1663 = -x1005 * x687 + x1379 * x670 + x1534 * x81
    x1664 = -x1003 * x687 + x1377 * x670 + x1535 * x81
    x1665 = -x1583 * x82 + x1664 * x3 + x81 * (-x1581 * x82 + x1663 * x3)
    x1666 = x1585 * x16 + x1592 + x16 * (x1585 + x16 * x1665)
    x1667 = x1638 + x1665 * x17
    x1668 = x1585 * x17 + x16 * x1667 + x1615
    x1669 = x1518 * x916 - x1519 * x916 + x1581 * x86
    x1670 = x1524 * x916 - x1525 * x916 + x1583 * x86
    x1671 = -x1621 * x82 + x1670 * x3 + x81 * (-x1619 * x82 + x1669 * x3)
    x1672 = x1665 * x18 + x1671
    x1673 = x16 * x1672 + x1625
    x1674 = x1638 * x17 + x1653
    x1675 = x1667 * x17 + x1674
    x1676 = x1661 + x1672 * x17
    x1677 = x1024 * x1521 - x1024 * x1522 + x1619 * x88
    x1678 = x1024 * x1544 - x1024 * x1545 + x1620 * x88
    x1679 = x1024 * x1527 - x1024 * x1528 + x1621 * x88
    x1680 = x1024 * x1547 - x1024 * x1548 + x1622 * x88
    x1681 = x1671 * x18 + x1679 * x3 - x1680 * x82 + x81 * (x1677 * x3 - x1678 * x82)
    x1682 = x1672 * x18 + x1681
    x1683 = -x1033 * x28 + x1035 * x670 + x417
    x1684 = -x1631 * x82 + x1683 * x3
    x1685 = x16 * x1633 + x16 * (x16 * x1684 + x1633) + x1606
    x1686 = -x1040 * x28 + x1042 * x670 + x427
    x1687 = -x1641 * x82 + x1686 * x3
    x1688 = x1684 * x17 + x1687
    x1689 = x16 * x1688 + x1647
    x1690 = -x1047 * x687 + x1406 * x670 + x1631 * x81
    x1691 = -x1649 * x82 + x1690 * x3
    x1692 = x1684 * x18 + x1691
    x1693 = x16 * x1692 + x1654
    x1694 = -x1055 * x28 + x1057 * x670 + x445
    x1695 = x1054 * x670 - x1059 * x687 + x447
    x1696 = x1687 * x17 + x1688 * x17 + x1694 * x3 - x1695 * x82
    x1697 = -x1061 * x28 + x1414 * x670 + x1641 * x81
    x1698 = x1642 * x81 - x1643 * x81 + x1644 * x81
    x1699 = x1697 * x3 - x1698 * x82
    x1700 = x1687 * x18 + x1692 * x17 + x1699
    x1701 = x1595 * x916 - x1596 * x916 + x1649 * x86
    x1702 = x1598 * x916 - x1599 * x916 + x1650 * x86
    x1703 = x1701 * x3 - x1702 * x82
    x1704 = x1691 * x18 + x1703
    x1705 = x1692 * x18 + x1704
    x1706 = -x1071 * x687 + x1424 * x670 + x1627 * x81
    x1707 = -x1636 * x82 + x1706 * x3
    x1708 = x16 * x1638 + x16 * (x16 * x1707 + x1638) + x1615
    x1709 = x1691 + x17 * x1707
    x1710 = x16 * x1709 + x1674
    x1711 = x1554 * x916 - x1555 * x916 + x1636 * x86
    x1712 = -x1656 * x82 + x1711 * x3
    x1713 = x1707 * x18 + x1712
    x1714 = x16 * x1713 + x1661
    x1715 = x1691 * x17 + x1699 + x17 * x1709
    x1716 = x17 * x1713 + x1704
    x1717 = x1024 * x1557 - x1024 * x1558 + x1656 * x88
    x1718 = x1024 * x1570 - x1024 * x1571 + x1657 * x88
    x1719 = x1712 * x18 + x1717 * x3 - x1718 * x82
    x1720 = x1713 * x18 + x1719
    x1721 = x1532 * x916 - x1533 * x916 + x1663 * x86
    x1722 = -x1669 * x82 + x1721 * x3
    x1723 = x16 * x1671 + x16 * (x16 * x1722 + x1671) + x1624
    x1724 = x17 * x1722 + x1712
    x1725 = x16 * x1724 + x1660 + x1671 * x17
    x1726 = x1024 * x1518 - x1024 * x1519 + x1669 * x88
    x1727 = -x1677 * x82 + x1726 * x3
    x1728 = x1722 * x18 + x1727
    x1729 = x16 * x1728 + x1681
    x1730 = x17 * x1712 + x17 * x1724 + x1703
    x1731 = x17 * x1728 + x1719
    x1732 = x1103 * x1521 - x1103 * x1522 + x1677 * x90
    x1733 = x1103 * x1544 - x1103 * x1545 + x1678 * x90
    x1734 = x1727 * x18 + x1728 * x18 + x1732 * x3 - x1733 * x82
    x1735 = x1144 * x16
    x1736 = x1135 * x16 + x1149 + x16 * (x1135 + x1735)
    x1737 = x1144 * x17
    x1738 = x1157 + x1737
    x1739 = x1135 * x17 + x1165 + x16 * x1738
    x1740 = x1135 * x18 + x1735 * x18
    x1741 = x1157 * x17 + x1173
    x1742 = x17 * x1738 + x1741
    x1743 = x1157 * x18
    x1744 = x1737 * x18 + x1743
    x1745 = x1186 * x16
    x1746 = x1157 * x16 + x1165 + x16 * (x1157 + x1745)
    x1747 = x1186 * x17
    x1748 = x1192 + x1747
    x1749 = x16 * x1748 + x1741
    x1750 = x1743 + x1745 * x18
    x1751 = x1192 * x17 + x1199
    x1752 = x17 * x1748 + x1751
    x1753 = x1192 * x18
    x1754 = x1747 * x18 + x1753
    x1755 = x1206 * x16
    x1756 = x1173 + x1192 * x16 + x16 * (x1192 + x1755)
    x1757 = x1206 * x17
    x1758 = x1211 + x1757
    x1759 = x16 * x1758 + x1751
    x1760 = x1753 + x1755 * x18
    x1761 = x1211 * x17 + x1216 + x17 * x1758
    x1762 = x1211 * x18 + x1757 * x18
    x1763 = x1135 * x451 - x1136 * x467 + 2 * x460
    x1764 = -x1137 * x467 + x1144 * x451 + 2 * x500
    x1765 = x16 * x1764
    x1766 = x17 * x1764
    x1767 = (
        x1157 * x451
        - x1158 * x467
        + 2 * x535
        + x81 * (x1137 * x451 - x1138 * x467 + 2 * x494)
    )
    x1768 = x1766 + x1767
    x1769 = (
        x1165 * x451
        - x1169 * x467
        + 2 * x561
        + x81 * (x1136 * x451 - x1150 * x467 + 2 * x517)
    )
    x1770 = (
        x1173 * x451
        - x1178 * x467
        + 2 * x579
        + x86
        * (
            x1158 * x451
            - x1166 * x467
            + 2 * x563
            + x81 * (x1138 * x451 - x1151 * x467 + 2 * x526)
        )
    )
    x1771 = x17 * x1767 + x1770
    x1772 = x1767 * x18
    x1773 = (
        -x1161 * x467
        + x1186 * x451
        + 2 * x605
        + x81 * (-x1141 * x467 + x1146 * x451 + 2 * x511)
    )
    x1774 = x16 * x1773
    x1775 = x17 * x1773
    x1776 = (
        -x1176 * x467
        + x1192 * x451
        + 2 * x617
        + x86
        * (
            x1161 * x451
            - x1162 * x467
            + 2 * x554
            + x81 * (x1141 * x451 - x1142 * x467 + 2 * x495)
        )
    )
    x1777 = x1775 + x1776
    x1778 = (
        x1199 * x451
        - x1200 * x467
        + x17 * x1776
        + 2 * x630
        + x88
        * (
            x1176 * x451
            - x1177 * x467
            + 2 * x589
            + x86
            * (
                x1162 * x451
                - x1168 * x467
                + 2 * x570
                + x81 * (x1142 * x451 - x1153 * x467 + 2 * x527)
            )
        )
    )
    x1779 = x1776 * x18
    x1780 = (
        -x1191 * x467
        + x1206 * x451
        + 2 * x647
        + x86
        * (
            -x1159 * x467
            + x1185 * x451
            + 2 * x608
            + x81 * (-x1139 * x467 + x1145 * x451 + 2 * x512)
        )
    )
    x1781 = x16 * x1780
    x1782 = x17 * x1780
    x1783 = (
        -x1197 * x467
        + x1211 * x451
        + 2 * x655
        + x88
        * (
            -x1174 * x467
            + x1191 * x451
            + 2 * x620
            + x86
            * (
                x1159 * x451
                - x1160 * x467
                + 2 * x555
                + x81 * (x1139 * x451 - x1140 * x467 + 2 * x496)
            )
        )
    )
    x1784 = x1782 + x1783
    x1785 = x1221 * x451 - x1222 * x467 + x679
    x1786 = -x1223 * x467 + x1240 * x451 + x732
    x1787 = x1246 * x451 - x1259 * x467 + x16 * x1785 + x16 * (x16 * x1786 + x1785) + x674
    x1788 = (
        x1261 * x451 - x1262 * x467 + x777 + x81 * (x1223 * x451 - x1226 * x467 + x726)
    )
    x1789 = x17 * x1786 + x1788
    x1790 = (
        x1275 * x451 - x1285 * x467 + x81 * (x1222 * x451 - x1249 * x467 + x751) + x817
    )
    x1791 = x16 * x1789 + x17 * x1785 + x1790
    x1792 = x1289 * x451 - x1290 * x467 + x839
    x1793 = x1786 * x18 + x1792
    x1794 = x1298 * x451 - x1302 * x467 + x853
    x1795 = x16 * x1793 + x1785 * x18 + x1794
    x1796 = (
        x1305 * x451
        - x1316 * x467
        + x86
        * (
            x1262 * x451
            - x1278 * x467
            + x81 * (x1226 * x451 - x1252 * x467 + x768)
            + x820
        )
        + x869
    )
    x1797 = x17 * x1788 + x1796
    x1798 = x17 * x1789 + x1797
    x1799 = (
        x1321 * x451 - x1326 * x467 + x81 * (x1290 * x451 - x1299 * x467 + x856) + x901
    )
    x1800 = x1788 * x18 + x1799
    x1801 = x17 * x1793 + x1800
    x1802 = x1330 * x451 - x1335 * x467 + x917
    x1803 = x1792 * x18 + x1802
    x1804 = x1793 * x18 + x1803
    x1805 = (
        -x1269 * x467 + x1340 * x451 + x81 * (-x1235 * x467 + x1244 * x451 + x746) + x930
    )
    x1806 = x16 * x1788 + x16 * (x16 * x1805 + x1788) + x1790
    x1807 = (
        -x1312 * x467
        + x1344 * x451
        + x86
        * (
            x1269 * x451
            - x1272 * x467
            + x81 * (x1235 * x451 - x1238 * x467 + x727)
            + x810
        )
        + x943
    )
    x1808 = x17 * x1805 + x1807
    x1809 = x16 * x1808 + x1797
    x1810 = (
        -x1322 * x467 + x1349 * x451 + x81 * (x1291 * x451 - x1292 * x467 + x848) + x956
    )
    x1811 = x18 * x1805 + x1810
    x1812 = x16 * x1811 + x1800
    x1813 = (
        x1358 * x451
        - x1359 * x467
        + x17 * x1807
        + x88
        * (
            x1312 * x451
            - x1315 * x467
            + x86
            * (
                x1272 * x451
                - x1284 * x467
                + x81 * (x1238 * x451 - x1258 * x467 + x769)
                + x833
            )
            + x886
        )
        + x967
    )
    x1814 = x17 * x1808 + x1813
    x1815 = (
        x1365 * x451
        - x1366 * x467
        + x86
        * (
            x1322 * x451
            - x1325 * x467
            + x81 * (x1292 * x451 - x1300 * x467 + x861)
            + x906
        )
        + x986
    )
    x1816 = x18 * x1807 + x1815
    x1817 = x17 * x1811 + x1816
    x1818 = (
        x1372 * x451 - x1373 * x467 + x81 * (x1331 * x451 - x1332 * x467 + x921) + x995
    )
    x1819 = x18 * x1810 + x1818
    x1820 = x18 * x1811 + x1819
    x1821 = x1004 - x1291 * x467 + x1378 * x451
    x1822 = x16 * x1792 + x16 * (x16 * x1821 + x1792) + x1794
    x1823 = x17 * x1821 + x1810
    x1824 = x16 * x1823 + x17 * x1792 + x1799
    x1825 = x1013 - x1331 * x467 + x1385 * x451
    x1826 = x18 * x1821 + x1825
    x1827 = x16 * x1826 + x1803
    x1828 = x17 * x1810 + x1815
    x1829 = x17 * x1823 + x1828
    x1830 = x17 * x1826 + x1819
    x1831 = x1025 + x1395 * x451 - x1396 * x467 + x18 * x1825
    x1832 = x18 * x1826 + x1831
    x1833 = (
        x1034
        - x1343 * x467
        + x1399 * x451
        + x86
        * (
            -x1265 * x467
            + x1339 * x451
            + x81 * (-x1229 * x467 + x1243 * x451 + x747)
            + x933
        )
    )
    x1834 = x16 * x1807 + x16 * (x16 * x1833 + x1807) + x1796
    x1835 = (
        x1041
        - x1354 * x467
        + x1402 * x451
        + x88
        * (
            -x1308 * x467
            + x1343 * x451
            + x86
            * (
                x1265 * x451
                - x1268 * x467
                + x81 * (x1229 * x451 - x1232 * x467 + x728)
                + x811
            )
            + x946
        )
    )
    x1836 = x17 * x1833 + x1835
    x1837 = x16 * x1836 + x1813
    x1838 = (
        x1048
        - x1362 * x467
        + x1407 * x451
        + x86
        * (
            -x1323 * x467
            + x1350 * x451
            + x81 * (x1293 * x451 - x1294 * x467 + x849)
            + x958
        )
    )
    x1839 = x18 * x1833 + x1838
    x1840 = x16 * x1839 + x1816
    x1841 = (
        x1056
        + x1411 * x451
        - x1412 * x467
        + x17 * x1835
        + x17 * x1836
        + x90
        * (
            x1354 * x451
            - x1357 * x467
            + x88
            * (
                x1308 * x451
                - x1311 * x467
                + x86
                * (
                    x1268 * x451
                    - x1281 * x467
                    + x81 * (x1232 * x451 - x1255 * x467 + x770)
                    + x834
                )
                + x887
            )
            + x971
        )
    )
    x1842 = (
        x1062
        + x1415 * x451
        - x1416 * x467
        + x88
        * (
            x1362 * x451
            - x1363 * x467
            + x86
            * (
                x1323 * x451
                - x1324 * x467
                + x81 * (x1294 * x451 - x1301 * x467 + x863)
                + x908
            )
            + x988
        )
    )
    x1843 = x17 * x1839 + x18 * x1835 + x1842
    x1844 = (
        x1066
        + x1419 * x451
        - x1420 * x467
        + x86
        * (
            x1370 * x451
            - x1371 * x467
            + x81 * (x1333 * x451 - x1334 * x467 + x922)
            + x996
        )
    )
    x1845 = x18 * x1838 + x1844
    x1846 = x18 * x1839 + x1845
    x1847 = (
        x1072 - x1350 * x467 + x1425 * x451 + x81 * (x1006 - x1293 * x467 + x1380 * x451)
    )
    x1848 = x16 * x1810 + x16 * (x16 * x1847 + x1810) + x1799
    x1849 = x17 * x1847 + x1838
    x1850 = x16 * x1849 + x1828
    x1851 = (
        x1078 - x1370 * x467 + x1430 * x451 + x81 * (x1014 - x1333 * x467 + x1386 * x451)
    )
    x1852 = x18 * x1847 + x1851
    x1853 = x16 * x1852 + x1819
    x1854 = x17 * x1838 + x17 * x1849 + x1842
    x1855 = x17 * x1852 + x1845
    x1856 = (
        x1085
        + x1436 * x451
        - x1437 * x467
        + x18 * x1851
        + x81 * (x1026 + x1393 * x451 - x1394 * x467)
    )
    x1857 = x18 * x1852 + x1856
    x1858 = x1089 - x1386 * x467 + x1440 * x451
    x1859 = x16 * x1825 + x16 * (x16 * x1858 + x1825) + x1802
    x1860 = x17 * x1858 + x1851
    x1861 = x16 * x1860 + x17 * x1825 + x1818
    x1862 = x1095 - x1393 * x467 + x1445 * x451
    x1863 = x18 * x1858 + x1862
    x1864 = x16 * x1863 + x1831
    x1865 = x17 * x1851 + x17 * x1860 + x1844
    x1866 = x17 * x1863 + x1856
    x1867 = x1104 + x1451 * x451 - x1452 * x467 + x18 * x1862 + x18 * x1863
    x1868 = x1221 * x16 + x1246 + x16 * (x1221 + x1240 * x16)
    x1869 = x1240 * x17 + x1261
    x1870 = x1221 * x17 + x1275 + x16 * x1869
    x1871 = x1240 * x18 + x1289
    x1872 = x1221 * x18 + x1298 + x16 * x1871
    x1873 = x1261 * x17 + x1305
    x1874 = x17 * x1869 + x1873
    x1875 = x1261 * x18 + x1321
    x1876 = x17 * x1871 + x1875
    x1877 = x1289 * x18 + x1330
    x1878 = x18 * x1871 + x1877
    x1879 = x1261 * x16 + x1275 + x16 * (x1261 + x1340 * x16)
    x1880 = x1340 * x17 + x1344
    x1881 = x16 * x1880 + x1873
    x1882 = x1340 * x18 + x1349
    x1883 = x16 * x1882 + x1875
    x1884 = x1344 * x17 + x1358
    x1885 = x17 * x1880 + x1884
    x1886 = x1344 * x18 + x1365
    x1887 = x17 * x1882 + x1886
    x1888 = x1349 * x18 + x1372
    x1889 = x18 * x1882 + x1888
    x1890 = x1289 * x16 + x1298 + x16 * (x1289 + x1378 * x16)
    x1891 = x1349 + x1378 * x17
    x1892 = x1289 * x17 + x1321 + x16 * x1891
    x1893 = x1378 * x18 + x1385
    x1894 = x16 * x1893 + x1877
    x1895 = x1349 * x17 + x1365
    x1896 = x17 * x1891 + x1895
    x1897 = x17 * x1893 + x1888
    x1898 = x1385 * x18 + x1395
    x1899 = x18 * x1893 + x1898
    x1900 = x1305 + x1344 * x16 + x16 * (x1344 + x1399 * x16)
    x1901 = x1399 * x17 + x1402
    x1902 = x16 * x1901 + x1884
    x1903 = x1399 * x18 + x1407
    x1904 = x16 * x1903 + x1886
    x1905 = x1402 * x17 + x1411 + x17 * x1901
    x1906 = x1402 * x18 + x1415 + x17 * x1903
    x1907 = x1407 * x18 + x1419
    x1908 = x18 * x1903 + x1907
    x1909 = x1321 + x1349 * x16 + x16 * (x1349 + x1425 * x16)
    x1910 = x1407 + x1425 * x17
    x1911 = x16 * x1910 + x1895
    x1912 = x1425 * x18 + x1430
    x1913 = x16 * x1912 + x1888
    x1914 = x1407 * x17 + x1415 + x17 * x1910
    x1915 = x17 * x1912 + x1907
    x1916 = x1430 * x18 + x1436
    x1917 = x18 * x1912 + x1916
    x1918 = x1330 + x1385 * x16 + x16 * (x1385 + x1440 * x16)
    x1919 = x1430 + x1440 * x17
    x1920 = x1372 + x1385 * x17 + x16 * x1919
    x1921 = x1440 * x18 + x1445
    x1922 = x16 * x1921 + x1898
    x1923 = x1419 + x1430 * x17 + x17 * x1919
    x1924 = x17 * x1921 + x1916
    x1925 = x1445 * x18 + x1451 + x18 * x1921
    x1926 = x1512 * x451 - x1513 * x467
    x1927 = -x1514 * x467 + x1531 * x451
    x1928 = x1537 * x451 - x1550 * x467 + x16 * x1926 + x16 * (x16 * x1927 + x1926)
    x1929 = x1552 * x451 - x1553 * x467 + x81 * (x1514 * x451 - x1517 * x467)
    x1930 = x17 * x1927 + x1929
    x1931 = x1566 * x451 - x1576 * x467 + x81 * (x1513 * x451 - x1540 * x467)
    x1932 = x16 * x1930 + x17 * x1926 + x1931
    x1933 = x1579 * x451 - x1580 * x467
    x1934 = x18 * x1927 + x1933
    x1935 = x1587 * x451 - x1591 * x467
    x1936 = x16 * x1934 + x18 * x1926 + x1935
    x1937 = (
        x1594 * x451
        - x1605 * x467
        + x86 * (x1553 * x451 - x1569 * x467 + x81 * (x1517 * x451 - x1543 * x467))
    )
    x1938 = x17 * x1929 + x1937
    x1939 = x17 * x1930 + x1938
    x1940 = x1609 * x451 - x1614 * x467 + x81 * (x1580 * x451 - x1588 * x467)
    x1941 = x18 * x1929 + x1940
    x1942 = x17 * x1934 + x1941
    x1943 = x1618 * x451 - x1623 * x467
    x1944 = x18 * x1933 + x1943
    x1945 = x18 * x1934 + x1944
    x1946 = -x1560 * x467 + x1628 * x451 + x81 * (-x1526 * x467 + x1535 * x451)
    x1947 = x16 * x1929 + x16 * (x16 * x1946 + x1929) + x1931
    x1948 = (
        -x1601 * x467
        + x1632 * x451
        + x86 * (x1560 * x451 - x1563 * x467 + x81 * (x1526 * x451 - x1529 * x467))
    )
    x1949 = x17 * x1946 + x1948
    x1950 = x16 * x1949 + x1938
    x1951 = -x1612 * x467 + x1637 * x451 + x81 * (x1583 * x451 - x1584 * x467)
    x1952 = x18 * x1946 + x1951
    x1953 = x16 * x1952 + x1941
    x1954 = (
        x1645 * x451
        - x1646 * x467
        + x17 * x1948
        + x88
        * (
            x1601 * x451
            - x1604 * x467
            + x86 * (x1563 * x451 - x1575 * x467 + x81 * (x1529 * x451 - x1549 * x467))
        )
    )
    x1955 = x17 * x1949 + x1954
    x1956 = (
        x1651 * x451
        - x1652 * x467
        + x86 * (x1612 * x451 - x1613 * x467 + x81 * (x1584 * x451 - x1590 * x467))
    )
    x1957 = x18 * x1948 + x1956
    x1958 = x17 * x1952 + x1957
    x1959 = x1658 * x451 - x1659 * x467 + x81 * (x1621 * x451 - x1622 * x467)
    x1960 = x18 * x1951 + x1959
    x1961 = x18 * x1952 + x1960
    x1962 = -x1583 * x467 + x1664 * x451
    x1963 = x16 * x1933 + x16 * (x16 * x1962 + x1933) + x1935
    x1964 = x17 * x1962 + x1951
    x1965 = x16 * x1964 + x17 * x1933 + x1940
    x1966 = -x1621 * x467 + x1670 * x451
    x1967 = x18 * x1962 + x1966
    x1968 = x16 * x1967 + x1944
    x1969 = x17 * x1951 + x1956
    x1970 = x17 * x1964 + x1969
    x1971 = x17 * x1967 + x1960
    x1972 = x1679 * x451 - x1680 * x467 + x18 * x1966
    x1973 = x18 * x1967 + x1972
    x1974 = (
        -x1631 * x467
        + x1683 * x451
        + x86 * (-x1556 * x467 + x1627 * x451 + x81 * (-x1520 * x467 + x1534 * x451))
    )
    x1975 = x16 * x1948 + x16 * (x16 * x1974 + x1948) + x1937
    x1976 = (
        -x1641 * x467
        + x1686 * x451
        + x88
        * (
            -x1597 * x467
            + x1631 * x451
            + x86 * (x1556 * x451 - x1559 * x467 + x81 * (x1520 * x451 - x1523 * x467))
        )
    )
    x1977 = x17 * x1974 + x1976
    x1978 = x16 * x1977 + x1954
    x1979 = (
        -x1649 * x467
        + x1690 * x451
        + x86 * (-x1610 * x467 + x1636 * x451 + x81 * (x1581 * x451 - x1582 * x467))
    )
    x1980 = x18 * x1974 + x1979
    x1981 = x16 * x1980 + x1957
    x1982 = (
        x1694 * x451
        - x1695 * x467
        + x17 * x1976
        + x17 * x1977
        + x90
        * (
            x1641 * x451
            - x1644 * x467
            + x88
            * (
                x1597 * x451
                - x1600 * x467
                + x86
                * (x1559 * x451 - x1572 * x467 + x81 * (x1523 * x451 - x1546 * x467))
            )
        )
    )
    x1983 = (
        x1697 * x451
        - x1698 * x467
        + x88
        * (
            x1649 * x451
            - x1650 * x467
            + x86 * (x1610 * x451 - x1611 * x467 + x81 * (x1582 * x451 - x1589 * x467))
        )
    )
    x1984 = x17 * x1980 + x18 * x1976 + x1983
    x1985 = (
        x1701 * x451
        - x1702 * x467
        + x86 * (x1656 * x451 - x1657 * x467 + x81 * (x1619 * x451 - x1620 * x467))
    )
    x1986 = x18 * x1979 + x1985
    x1987 = x18 * x1980 + x1986
    x1988 = -x1636 * x467 + x1706 * x451 + x81 * (-x1581 * x467 + x1663 * x451)
    x1989 = x16 * x1951 + x16 * (x16 * x1988 + x1951) + x1940
    x1990 = x17 * x1988 + x1979
    x1991 = x16 * x1990 + x1969
    x1992 = -x1656 * x467 + x1711 * x451 + x81 * (-x1619 * x467 + x1669 * x451)
    x1993 = x18 * x1988 + x1992
    x1994 = x16 * x1993 + x1960
    x1995 = x17 * x1979 + x17 * x1990 + x1983
    x1996 = x17 * x1993 + x1986
    x1997 = (
        x1717 * x451 - x1718 * x467 + x18 * x1992 + x81 * (x1677 * x451 - x1678 * x467)
    )
    x1998 = x18 * x1993 + x1997
    x1999 = -x1669 * x467 + x1721 * x451
    x2000 = x16 * x1966 + x16 * (x16 * x1999 + x1966) + x1943
    x2001 = x17 * x1999 + x1992
    x2002 = x16 * x2001 + x17 * x1966 + x1959
    x2003 = -x1677 * x467 + x1726 * x451
    x2004 = x18 * x1999 + x2003
    x2005 = x16 * x2004 + x1972
    x2006 = x17 * x1992 + x17 * x2001 + x1985
    x2007 = x17 * x2004 + x1997
    x2008 = x1732 * x451 - x1733 * x467 + x18 * x2003 + x18 * x2004
    x2009 = x1512 * x16 + x1537 + x16 * (x1512 + x1531 * x16)
    x2010 = x1531 * x17 + x1552
    x2011 = x1512 * x17 + x1566 + x16 * x2010
    x2012 = x1531 * x18 + x1579
    x2013 = x1512 * x18 + x1587 + x16 * x2012
    x2014 = x1552 * x17 + x1594
    x2015 = x17 * x2010 + x2014
    x2016 = x1552 * x18 + x1609
    x2017 = x17 * x2012 + x2016
    x2018 = x1579 * x18 + x1618
    x2019 = x18 * x2012 + x2018
    x2020 = x1552 * x16 + x1566 + x16 * (x1552 + x16 * x1628)
    x2021 = x1628 * x17 + x1632
    x2022 = x16 * x2021 + x2014
    x2023 = x1628 * x18 + x1637
    x2024 = x16 * x2023 + x2016
    x2025 = x1632 * x17 + x1645
    x2026 = x17 * x2021 + x2025
    x2027 = x1632 * x18 + x1651
    x2028 = x17 * x2023 + x2027
    x2029 = x1637 * x18 + x1658
    x2030 = x18 * x2023 + x2029
    x2031 = x1579 * x16 + x1587 + x16 * (x1579 + x16 * x1664)
    x2032 = x1637 + x1664 * x17
    x2033 = x1579 * x17 + x16 * x2032 + x1609
    x2034 = x1664 * x18 + x1670
    x2035 = x16 * x2034 + x2018
    x2036 = x1637 * x17 + x1651
    x2037 = x17 * x2032 + x2036
    x2038 = x17 * x2034 + x2029
    x2039 = x1670 * x18 + x1679
    x2040 = x18 * x2034 + x2039
    x2041 = x1594 + x16 * x1632 + x16 * (x16 * x1683 + x1632)
    x2042 = x1683 * x17 + x1686
    x2043 = x16 * x2042 + x2025
    x2044 = x1683 * x18 + x1690
    x2045 = x16 * x2044 + x2027
    x2046 = x1686 * x17 + x1694 + x17 * x2042
    x2047 = x1686 * x18 + x1697 + x17 * x2044
    x2048 = x1690 * x18 + x1701
    x2049 = x18 * x2044 + x2048
    x2050 = x16 * x1637 + x16 * (x16 * x1706 + x1637) + x1609
    x2051 = x1690 + x17 * x1706
    x2052 = x16 * x2051 + x2036
    x2053 = x1706 * x18 + x1711
    x2054 = x16 * x2053 + x2029
    x2055 = x1690 * x17 + x1697 + x17 * x2051
    x2056 = x17 * x2053 + x2048
    x2057 = x1711 * x18 + x1717
    x2058 = x18 * x2053 + x2057
    x2059 = x16 * x1670 + x16 * (x16 * x1721 + x1670) + x1618
    x2060 = x17 * x1721 + x1711
    x2061 = x16 * x2060 + x1658 + x1670 * x17
    x2062 = x1721 * x18 + x1726
    x2063 = x16 * x2062 + x2039
    x2064 = x17 * x1711 + x17 * x2060 + x1701
    x2065 = x17 * x2062 + x2057
    x2066 = x1726 * x18 + x1732 + x18 * x2062
    x2067 = x1512 * x670 - x1513 * x687 + 2 * x679
    x2068 = -x1514 * x687 + x1531 * x670 + 2 * x732
    x2069 = x1552 * x670 - x1553 * x687 + 2 * x777
    x2070 = x17 * x2068 + x2069
    x2071 = x1566 * x670 - x1576 * x687 + 2 * x817
    x2072 = (
        x1579 * x670
        - x1580 * x687
        + x81 * (x1514 * x670 - x1517 * x687 + 2 * x726)
        + 2 * x839
    )
    x2073 = x18 * x2068 + x2072
    x2074 = (
        x1587 * x670
        - x1591 * x687
        + x81 * (x1513 * x670 - x1540 * x687 + 2 * x751)
        + 2 * x853
    )
    x2075 = x1594 * x670 - x1605 * x687 + 2 * x869
    x2076 = x17 * x2069 + x2075
    x2077 = (
        x1609 * x670
        - x1614 * x687
        + x81 * (x1553 * x670 - x1569 * x687 + 2 * x820)
        + 2 * x901
    )
    x2078 = x18 * x2069 + x2077
    x2079 = (
        x1618 * x670
        - x1623 * x687
        + x86
        * (
            x1580 * x670
            - x1588 * x687
            + x81 * (x1517 * x670 - x1543 * x687 + 2 * x768)
            + 2 * x856
        )
        + 2 * x917
    )
    x2080 = x18 * x2072 + x2079
    x2081 = -x1560 * x687 + x1628 * x670 + 2 * x930
    x2082 = -x1601 * x687 + x1632 * x670 + 2 * x943
    x2083 = x17 * x2081 + x2082
    x2084 = (
        -x1612 * x687
        + x1637 * x670
        + x81 * (x1560 * x670 - x1563 * x687 + 2 * x810)
        + 2 * x956
    )
    x2085 = x18 * x2081 + x2084
    x2086 = x1645 * x670 - x1646 * x687 + x17 * x2082 + 2 * x967
    x2087 = (
        x1651 * x670
        - x1652 * x687
        + x81 * (x1601 * x670 - x1604 * x687 + 2 * x886)
        + 2 * x986
    )
    x2088 = x18 * x2082 + x2087
    x2089 = (
        x1658 * x670
        - x1659 * x687
        + x86
        * (
            x1612 * x670
            - x1613 * x687
            + x81 * (x1563 * x670 - x1575 * x687 + 2 * x833)
            + 2 * x906
        )
        + 2 * x995
    )
    x2090 = x18 * x2084 + x2089
    x2091 = (
        2 * x1004
        - x1583 * x687
        + x1664 * x670
        + x81 * (-x1526 * x687 + x1535 * x670 + 2 * x746)
    )
    x2092 = x17 * x2091 + x2084
    x2093 = (
        2 * x1013
        - x1621 * x687
        + x1670 * x670
        + x86
        * (
            x1583 * x670
            - x1584 * x687
            + x81 * (x1526 * x670 - x1529 * x687 + 2 * x727)
            + 2 * x848
        )
    )
    x2094 = x18 * x2091 + x2093
    x2095 = x17 * x2084 + x2087
    x2096 = (
        2 * x1025
        + x1679 * x670
        - x1680 * x687
        + x18 * x2093
        + x88
        * (
            x1621 * x670
            - x1622 * x687
            + x86
            * (
                x1584 * x670
                - x1590 * x687
                + x81 * (x1529 * x670 - x1549 * x687 + 2 * x769)
                + 2 * x861
            )
            + 2 * x921
        )
    )
    x2097 = 2 * x1034 - x1631 * x687 + x1683 * x670
    x2098 = 2 * x1041 - x1641 * x687 + x1686 * x670
    x2099 = x17 * x2097 + x2098
    x2100 = (
        2 * x1048
        - x1649 * x687
        + x1690 * x670
        + x81 * (-x1597 * x687 + x1631 * x670 + 2 * x946)
    )
    x2101 = x18 * x2097 + x2100
    x2102 = (
        2 * x1062
        + x1697 * x670
        - x1698 * x687
        + x81 * (x1641 * x670 - x1644 * x687 + 2 * x971)
    )
    x2103 = (
        2 * x1066
        + x1701 * x670
        - x1702 * x687
        + x86
        * (
            x1649 * x670
            - x1650 * x687
            + x81 * (x1597 * x670 - x1600 * x687 + 2 * x887)
            + 2 * x988
        )
    )
    x2104 = x18 * x2100 + x2103
    x2105 = (
        2 * x1072
        - x1636 * x687
        + x1706 * x670
        + x81 * (-x1556 * x687 + x1627 * x670 + 2 * x933)
    )
    x2106 = x17 * x2105 + x2100
    x2107 = (
        2 * x1078
        - x1656 * x687
        + x1711 * x670
        + x86
        * (
            -x1610 * x687
            + x1636 * x670
            + x81 * (x1556 * x670 - x1559 * x687 + 2 * x811)
            + 2 * x958
        )
    )
    x2108 = x18 * x2105 + x2107
    x2109 = (
        2 * x1085
        + x1717 * x670
        - x1718 * x687
        + x18 * x2107
        + x88
        * (
            x1656 * x670
            - x1657 * x687
            + x86
            * (
                x1610 * x670
                - x1611 * x687
                + x81 * (x1559 * x670 - x1572 * x687 + 2 * x834)
                + 2 * x908
            )
            + 2 * x996
        )
    )
    x2110 = (
        2 * x1089
        - x1669 * x687
        + x1721 * x670
        + x86
        * (
            2 * x1006
            - x1581 * x687
            + x1663 * x670
            + x81 * (-x1520 * x687 + x1534 * x670 + 2 * x747)
        )
    )
    x2111 = x17 * x2110 + x2107
    x2112 = (
        2 * x1095
        - x1677 * x687
        + x1726 * x670
        + x88
        * (
            2 * x1014
            - x1619 * x687
            + x1669 * x670
            + x86
            * (
                x1581 * x670
                - x1582 * x687
                + x81 * (x1520 * x670 - x1523 * x687 + 2 * x728)
                + 2 * x849
            )
        )
    )
    x2113 = x18 * x2110 + x2112

    # 648 item(s)
    S = numpy.array(
        [
            x11 * x187
            + x113 * (x111 - x92)
            + x127 * x3
            + x16 * x168
            + x16 * (x168 + x185)
            - x82
            * (x128 + x147 * x90 + x3 * x91 - x82 * (-x135 * x82 + x139 * x90 + x3 * x74))
            + x90
            * (
                x113 * (x110 - x116)
                + x126 * x3
                - x147 * x82
                + x88
                * (
                    x113 * (x109 - x118)
                    + x125 * x3
                    - x146 * x82
                    + x86
                    * (
                        x113 * (x108 - x123)
                        + x124 * x3
                        - x145 * x82
                        + x81
                        * (
                            x113 * (2 * x10 * x14 * x20 * x3 * x41 * x6 - x105 - x121)
                            + x122 * x3
                            - x144 * x82
                        )
                    )
                )
            ),
            x11 * x268 + x16 * x271 + x168 * x17 + x287,
            x11 * x288 + x168 * x18 + x18 * x185,
            x11 * x331 + x17 * x271 + x344,
            x11 * x346 + x18 * x269 + x347,
            x183 * x348 + x184 * x19,
            x11 * x361 + x16 * x270 + x16 * (x270 + x363) + x287,
            x11 * x377 + x16 * x380 + x344,
            x11 * x381 + x18 * x363 + x347,
            x11 * x405 + x17 * x380 + x412,
            x11 * x414 + x18 * x378 + x415,
            x19 * x362 + x348 * x359,
            0,
            0,
            0,
            0,
            0,
            0,
            x11 * x422 + x16 * x379 + x16 * (x379 + x424) + x343,
            x11 * x432 + x16 * x435 + x412,
            x11 * x436 + x18 * x424 + x415,
            x11 * x449
            + x113 * (x3 * x437 - x440 - x444)
            + x17 * x434
            + x17 * x435
            + x3 * x446
            - x82 * (x3 * x443 + x447 - x82 * (x3 * x441 - x448 * x82)),
            x11 * x450 + x18 * x433 + x18 * x434,
            x19 * x423 + x348 * x420,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            x12 * x187 + x530,
            x12 * x268 + x574,
            x12 * x288 + x575,
            x12 * x331 + x598,
            x12 * x346 + x600,
            x183 * x601 + x602,
            x12 * x361 + x613,
            x12 * x377 + x625,
            x12 * x381 + x626,
            x12 * x405 + x641,
            x12 * x414 + x643,
            x359 * x601 + x644,
            0,
            0,
            0,
            0,
            0,
            0,
            x12 * x422 + x651,
            x12 * x432 + x659,
            x12 * x436 + x660,
            x12 * x449 + x667,
            x12 * x450 + x668,
            x420 * x601 + x669,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            x13 * x187 + x772,
            x13 * x268 + x837,
            x13 * x288 + x865,
            x13 * x331 + x899,
            x13 * x346 + x913,
            x183 * x914 + x927,
            x13 * x361 + x940,
            x13 * x377 + x954,
            x13 * x381 + x963,
            x13 * x405 + x984,
            x13 * x414 + x994,
            x1002 + x359 * x914,
            x1010,
            x1012,
            x1019,
            x1021,
            x1022,
            x1031,
            x1038 + x13 * x422,
            x1046 + x13 * x432,
            x1052 + x13 * x436,
            x1060 + x13 * x449,
            x1065 + x13 * x450,
            x1070 + x420 * x914,
            x1075,
            x1077,
            x1082,
            x1083,
            x1084,
            x1088,
            x1092,
            x1094,
            x1099,
            x1100,
            x1101,
            x1106,
            x11 * x1108 + x530,
            x11 * x1111 + x574,
            x11 * x1112 + x575,
            x11 * x1114 + x598,
            x11 * x1116 + x600,
            x348 * x510 + x602,
            x11 * x1118 + x613,
            x11 * x1121 + x625,
            x11 * x1122 + x626,
            x11 * x1124 + x641,
            x11 * x1126 + x643,
            x348 * x610 + x644,
            0,
            0,
            0,
            0,
            0,
            0,
            x11 * x1128 + x651,
            x11 * x1131 + x659,
            x11 * x1132 + x660,
            x11 * x1133 + x667,
            x11 * x1134 + x668,
            x348 * x648 + x669,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            x1108 * x12 + x1155,
            x1111 * x12 + x1171,
            x1112 * x12 + x1172,
            x1114 * x12 + x1181,
            x1116 * x12 + x1183,
            x1184 + x510 * x601,
            x1118 * x12 + x1189,
            x1121 * x12 + x1195,
            x1122 * x12 + x1196,
            x1124 * x12 + x1202,
            x1126 * x12 + x1204,
            x1205 + x601 * x610,
            0,
            0,
            0,
            0,
            0,
            0,
            x1128 * x12 + x1209,
            x1131 * x12 + x1214,
            x1132 * x12 + x1215,
            x1133 * x12 + x1218,
            x1134 * x12 + x1219,
            x1220 + x601 * x648,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            x1108 * x13 + x1260,
            x1111 * x13 + x1287,
            x1112 * x13 + x1304,
            x1114 * x13 + x1319,
            x1116 * x13 + x1329,
            x1338 + x510 * x914,
            x1118 * x13 + x1342,
            x1121 * x13 + x1347,
            x1122 * x13 + x1353,
            x1124 * x13 + x1361,
            x1126 * x13 + x1369,
            x1376 + x610 * x914,
            x1382,
            x1384,
            x1389,
            x1391,
            x1392,
            x1398,
            x1128 * x13 + x1401,
            x1131 * x13 + x1405,
            x1132 * x13 + x1410,
            x1133 * x13 + x1413,
            x1134 * x13 + x1418,
            x1423 + x648 * x914,
            x1427,
            x1429,
            x1433,
            x1434,
            x1435,
            x1439,
            x1442,
            x1444,
            x1448,
            x1449,
            x1450,
            x1453,
            x11 * x1454 + x772,
            x11 * x1456 + x837,
            x11 * x1458 + x865,
            x11 * x1460 + x899,
            x11 * x1462 + x913,
            x11 * x1464 + x927,
            x11 * x1465 + x940,
            x11 * x1467 + x954,
            x11 * x1469 + x963,
            x11 * x1471 + x984,
            x11 * x1473 + x994,
            x1002 + x11 * x1475,
            x1010 + x11 * x1476,
            x1012 + x11 * x1478,
            x1019 + x11 * x1480,
            x1021 + x11 * x1482,
            x1022 + x11 * x1483,
            x1031 + x11 * x1485,
            x1038 + x11 * x1486,
            x1046 + x11 * x1488,
            x1052 + x11 * x1490,
            x1060 + x11 * x1491,
            x1065 + x11 * x1492,
            x1070 + x11 * x1494,
            x1075 + x11 * x1495,
            x1077 + x11 * x1497,
            x1082 + x11 * x1499,
            x1083 + x11 * x1500,
            x1084 + x11 * x1501,
            x1088 + x11 * x1503,
            x1092 + x11 * x1504,
            x1094 + x11 * x1506,
            x1099 + x11 * x1508,
            x11 * x1509 + x1100,
            x11 * x1510 + x1101,
            x11 * x1511 + x1106,
            x12 * x1454 + x1260,
            x12 * x1456 + x1287,
            x12 * x1458 + x1304,
            x12 * x1460 + x1319,
            x12 * x1462 + x1329,
            x12 * x1464 + x1338,
            x12 * x1465 + x1342,
            x12 * x1467 + x1347,
            x12 * x1469 + x1353,
            x12 * x1471 + x1361,
            x12 * x1473 + x1369,
            x12 * x1475 + x1376,
            x12 * x1476 + x1382,
            x12 * x1478 + x1384,
            x12 * x1480 + x1389,
            x12 * x1482 + x1391,
            x12 * x1483 + x1392,
            x12 * x1485 + x1398,
            x12 * x1486 + x1401,
            x12 * x1488 + x1405,
            x12 * x1490 + x1410,
            x12 * x1491 + x1413,
            x12 * x1492 + x1418,
            x12 * x1494 + x1423,
            x12 * x1495 + x1427,
            x12 * x1497 + x1429,
            x12 * x1499 + x1433,
            x12 * x1500 + x1434,
            x12 * x1501 + x1435,
            x12 * x1503 + x1439,
            x12 * x1504 + x1442,
            x12 * x1506 + x1444,
            x12 * x1508 + x1448,
            x12 * x1509 + x1449,
            x12 * x1510 + x1450,
            x12 * x1511 + x1453,
            x13 * x1454 + x1551,
            x13 * x1456 + x1578,
            x13 * x1458 + x1593,
            x13 * x1460 + x1608,
            x13 * x1462 + x1617,
            x13 * x1464 + x1626,
            x13 * x1465 + x1630,
            x13 * x1467 + x1635,
            x13 * x1469 + x1640,
            x13 * x1471 + x1648,
            x13 * x1473 + x1655,
            x13 * x1475 + x1662,
            x13 * x1476 + x1666,
            x13 * x1478 + x1668,
            x13 * x1480 + x1673,
            x13 * x1482 + x1675,
            x13 * x1483 + x1676,
            x13 * x1485 + x1682,
            x13 * x1486 + x1685,
            x13 * x1488 + x1689,
            x13 * x1490 + x1693,
            x13 * x1491 + x1696,
            x13 * x1492 + x1700,
            x13 * x1494 + x1705,
            x13 * x1495 + x1708,
            x13 * x1497 + x1710,
            x13 * x1499 + x1714,
            x13 * x1500 + x1715,
            x13 * x1501 + x1716,
            x13 * x1503 + x1720,
            x13 * x1504 + x1723,
            x13 * x1506 + x1725,
            x13 * x1508 + x1729,
            x13 * x1509 + x1730,
            x13 * x1510 + x1731,
            x13 * x1511 + x1734,
            x11 * x1736 + x1155,
            x11 * x1739 + x1171,
            x11 * x1740 + x1172,
            x11 * x1742 + x1181,
            x11 * x1744 + x1183,
            x1144 * x348 + x1184,
            x11 * x1746 + x1189,
            x11 * x1749 + x1195,
            x11 * x1750 + x1196,
            x11 * x1752 + x1202,
            x11 * x1754 + x1204,
            x1186 * x348 + x1205,
            0,
            0,
            0,
            0,
            0,
            0,
            x11 * x1756 + x1209,
            x11 * x1759 + x1214,
            x11 * x1760 + x1215,
            x11 * x1761 + x1218,
            x11 * x1762 + x1219,
            x1206 * x348 + x1220,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            x1149 * x451
            - x1154 * x467
            + x12 * x1736
            + x16 * x1763
            + x16 * (x1763 + x1765)
            + 2 * x455,
            x12 * x1739 + x16 * x1768 + x17 * x1763 + x1769,
            x12 * x1740 + x1763 * x18 + x1765 * x18,
            x12 * x1742 + x17 * x1768 + x1771,
            x12 * x1744 + x1766 * x18 + x1772,
            x1144 * x601 + x1764 * x19,
            x12 * x1746 + x16 * x1767 + x16 * (x1767 + x1774) + x1769,
            x12 * x1749 + x16 * x1777 + x1771,
            x12 * x1750 + x1772 + x1774 * x18,
            x12 * x1752 + x17 * x1777 + x1778,
            x12 * x1754 + x1775 * x18 + x1779,
            x1186 * x601 + x1773 * x19,
            0,
            0,
            0,
            0,
            0,
            0,
            x12 * x1756 + x16 * x1776 + x16 * (x1776 + x1781) + x1770,
            x12 * x1759 + x16 * x1784 + x1778,
            x12 * x1760 + x1779 + x1781 * x18,
            x12 * x1761
            + x1216 * x451
            - x1217 * x467
            + x17 * x1783
            + x17 * x1784
            + 2 * x664
            + x90
            * (
                x1197 * x451
                - x1198 * x467
                + 2 * x634
                + x88
                * (
                    x1174 * x451
                    - x1175 * x467
                    + 2 * x590
                    + x86
                    * (
                        x1160 * x451
                        - x1167 * x467
                        + 2 * x571
                        + x81 * (x1140 * x451 - x1152 * x467 + 2 * x528)
                    )
                )
            ),
            x12 * x1762 + x1782 * x18 + x1783 * x18,
            x1206 * x601 + x1780 * x19,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            x13 * x1736 + x1787,
            x13 * x1739 + x1791,
            x13 * x1740 + x1795,
            x13 * x1742 + x1798,
            x13 * x1744 + x1801,
            x1144 * x914 + x1804,
            x13 * x1746 + x1806,
            x13 * x1749 + x1809,
            x13 * x1750 + x1812,
            x13 * x1752 + x1814,
            x13 * x1754 + x1817,
            x1186 * x914 + x1820,
            x1822,
            x1824,
            x1827,
            x1829,
            x1830,
            x1832,
            x13 * x1756 + x1834,
            x13 * x1759 + x1837,
            x13 * x1760 + x1840,
            x13 * x1761 + x1841,
            x13 * x1762 + x1843,
            x1206 * x914 + x1846,
            x1848,
            x1850,
            x1853,
            x1854,
            x1855,
            x1857,
            x1859,
            x1861,
            x1864,
            x1865,
            x1866,
            x1867,
            x11 * x1868 + x1260,
            x11 * x1870 + x1287,
            x11 * x1872 + x1304,
            x11 * x1874 + x1319,
            x11 * x1876 + x1329,
            x11 * x1878 + x1338,
            x11 * x1879 + x1342,
            x11 * x1881 + x1347,
            x11 * x1883 + x1353,
            x11 * x1885 + x1361,
            x11 * x1887 + x1369,
            x11 * x1889 + x1376,
            x11 * x1890 + x1382,
            x11 * x1892 + x1384,
            x11 * x1894 + x1389,
            x11 * x1896 + x1391,
            x11 * x1897 + x1392,
            x11 * x1899 + x1398,
            x11 * x1900 + x1401,
            x11 * x1902 + x1405,
            x11 * x1904 + x1410,
            x11 * x1905 + x1413,
            x11 * x1906 + x1418,
            x11 * x1908 + x1423,
            x11 * x1909 + x1427,
            x11 * x1911 + x1429,
            x11 * x1913 + x1433,
            x11 * x1914 + x1434,
            x11 * x1915 + x1435,
            x11 * x1917 + x1439,
            x11 * x1918 + x1442,
            x11 * x1920 + x1444,
            x11 * x1922 + x1448,
            x11 * x1923 + x1449,
            x11 * x1924 + x1450,
            x11 * x1925 + x1453,
            x12 * x1868 + x1787,
            x12 * x1870 + x1791,
            x12 * x1872 + x1795,
            x12 * x1874 + x1798,
            x12 * x1876 + x1801,
            x12 * x1878 + x1804,
            x12 * x1879 + x1806,
            x12 * x1881 + x1809,
            x12 * x1883 + x1812,
            x12 * x1885 + x1814,
            x12 * x1887 + x1817,
            x12 * x1889 + x1820,
            x12 * x1890 + x1822,
            x12 * x1892 + x1824,
            x12 * x1894 + x1827,
            x12 * x1896 + x1829,
            x12 * x1897 + x1830,
            x12 * x1899 + x1832,
            x12 * x1900 + x1834,
            x12 * x1902 + x1837,
            x12 * x1904 + x1840,
            x12 * x1905 + x1841,
            x12 * x1906 + x1843,
            x12 * x1908 + x1846,
            x12 * x1909 + x1848,
            x12 * x1911 + x1850,
            x12 * x1913 + x1853,
            x12 * x1914 + x1854,
            x12 * x1915 + x1855,
            x12 * x1917 + x1857,
            x12 * x1918 + x1859,
            x12 * x1920 + x1861,
            x12 * x1922 + x1864,
            x12 * x1923 + x1865,
            x12 * x1924 + x1866,
            x12 * x1925 + x1867,
            x13 * x1868 + x1928,
            x13 * x1870 + x1932,
            x13 * x1872 + x1936,
            x13 * x1874 + x1939,
            x13 * x1876 + x1942,
            x13 * x1878 + x1945,
            x13 * x1879 + x1947,
            x13 * x1881 + x1950,
            x13 * x1883 + x1953,
            x13 * x1885 + x1955,
            x13 * x1887 + x1958,
            x13 * x1889 + x1961,
            x13 * x1890 + x1963,
            x13 * x1892 + x1965,
            x13 * x1894 + x1968,
            x13 * x1896 + x1970,
            x13 * x1897 + x1971,
            x13 * x1899 + x1973,
            x13 * x1900 + x1975,
            x13 * x1902 + x1978,
            x13 * x1904 + x1981,
            x13 * x1905 + x1982,
            x13 * x1906 + x1984,
            x13 * x1908 + x1987,
            x13 * x1909 + x1989,
            x13 * x1911 + x1991,
            x13 * x1913 + x1994,
            x13 * x1914 + x1995,
            x13 * x1915 + x1996,
            x13 * x1917 + x1998,
            x13 * x1918 + x2000,
            x13 * x1920 + x2002,
            x13 * x1922 + x2005,
            x13 * x1923 + x2006,
            x13 * x1924 + x2007,
            x13 * x1925 + x2008,
            x11 * x2009 + x1551,
            x11 * x2011 + x1578,
            x11 * x2013 + x1593,
            x11 * x2015 + x1608,
            x11 * x2017 + x1617,
            x11 * x2019 + x1626,
            x11 * x2020 + x1630,
            x11 * x2022 + x1635,
            x11 * x2024 + x1640,
            x11 * x2026 + x1648,
            x11 * x2028 + x1655,
            x11 * x2030 + x1662,
            x11 * x2031 + x1666,
            x11 * x2033 + x1668,
            x11 * x2035 + x1673,
            x11 * x2037 + x1675,
            x11 * x2038 + x1676,
            x11 * x2040 + x1682,
            x11 * x2041 + x1685,
            x11 * x2043 + x1689,
            x11 * x2045 + x1693,
            x11 * x2046 + x1696,
            x11 * x2047 + x1700,
            x11 * x2049 + x1705,
            x11 * x2050 + x1708,
            x11 * x2052 + x1710,
            x11 * x2054 + x1714,
            x11 * x2055 + x1715,
            x11 * x2056 + x1716,
            x11 * x2058 + x1720,
            x11 * x2059 + x1723,
            x11 * x2061 + x1725,
            x11 * x2063 + x1729,
            x11 * x2064 + x1730,
            x11 * x2065 + x1731,
            x11 * x2066 + x1734,
            x12 * x2009 + x1928,
            x12 * x2011 + x1932,
            x12 * x2013 + x1936,
            x12 * x2015 + x1939,
            x12 * x2017 + x1942,
            x12 * x2019 + x1945,
            x12 * x2020 + x1947,
            x12 * x2022 + x1950,
            x12 * x2024 + x1953,
            x12 * x2026 + x1955,
            x12 * x2028 + x1958,
            x12 * x2030 + x1961,
            x12 * x2031 + x1963,
            x12 * x2033 + x1965,
            x12 * x2035 + x1968,
            x12 * x2037 + x1970,
            x12 * x2038 + x1971,
            x12 * x2040 + x1973,
            x12 * x2041 + x1975,
            x12 * x2043 + x1978,
            x12 * x2045 + x1981,
            x12 * x2046 + x1982,
            x12 * x2047 + x1984,
            x12 * x2049 + x1987,
            x12 * x2050 + x1989,
            x12 * x2052 + x1991,
            x12 * x2054 + x1994,
            x12 * x2055 + x1995,
            x12 * x2056 + x1996,
            x12 * x2058 + x1998,
            x12 * x2059 + x2000,
            x12 * x2061 + x2002,
            x12 * x2063 + x2005,
            x12 * x2064 + x2006,
            x12 * x2065 + x2007,
            x12 * x2066 + x2008,
            x13 * x2009
            + x1537 * x670
            - x1550 * x687
            + x16 * x2067
            + x16 * (x16 * x2068 + x2067)
            + 2 * x674,
            x13 * x2011 + x16 * x2070 + x17 * x2067 + x2071,
            x13 * x2013 + x16 * x2073 + x18 * x2067 + x2074,
            x13 * x2015 + x17 * x2070 + x2076,
            x13 * x2017 + x17 * x2073 + x2078,
            x13 * x2019 + x18 * x2073 + x2080,
            x13 * x2020 + x16 * x2069 + x16 * (x16 * x2081 + x2069) + x2071,
            x13 * x2022 + x16 * x2083 + x2076,
            x13 * x2024 + x16 * x2085 + x2078,
            x13 * x2026 + x17 * x2083 + x2086,
            x13 * x2028 + x17 * x2085 + x2088,
            x13 * x2030 + x18 * x2085 + x2090,
            x13 * x2031 + x16 * x2072 + x16 * (x16 * x2091 + x2072) + x2074,
            x13 * x2033 + x16 * x2092 + x17 * x2072 + x2077,
            x13 * x2035 + x16 * x2094 + x2080,
            x13 * x2037 + x17 * x2092 + x2095,
            x13 * x2038 + x17 * x2094 + x2090,
            x13 * x2040 + x18 * x2094 + x2096,
            x13 * x2041 + x16 * x2082 + x16 * (x16 * x2097 + x2082) + x2075,
            x13 * x2043 + x16 * x2099 + x2086,
            x13 * x2045 + x16 * x2101 + x2088,
            2 * x1056
            + x13 * x2046
            + x1694 * x670
            - x1695 * x687
            + x17 * x2098
            + x17 * x2099,
            x13 * x2047 + x17 * x2101 + x18 * x2098 + x2102,
            x13 * x2049 + x18 * x2101 + x2104,
            x13 * x2050 + x16 * x2084 + x16 * (x16 * x2105 + x2084) + x2077,
            x13 * x2052 + x16 * x2106 + x2095,
            x13 * x2054 + x16 * x2108 + x2090,
            x13 * x2055 + x17 * x2100 + x17 * x2106 + x2102,
            x13 * x2056 + x17 * x2108 + x2104,
            x13 * x2058 + x18 * x2108 + x2109,
            x13 * x2059 + x16 * x2093 + x16 * (x16 * x2110 + x2093) + x2079,
            x13 * x2061 + x16 * x2111 + x17 * x2093 + x2089,
            x13 * x2063 + x16 * x2113 + x2096,
            x13 * x2064 + x17 * x2107 + x17 * x2111 + x2103,
            x13 * x2065 + x17 * x2113 + x2109,
            2 * x1104
            + x13 * x2066
            + x1732 * x670
            - x1733 * x687
            + x18 * x2112
            + x18 * x2113
            + x90
            * (
                2 * x1026
                + x1677 * x670
                - x1678 * x687
                + x88
                * (
                    x1619 * x670
                    - x1620 * x687
                    + x86
                    * (
                        x1582 * x670
                        - x1589 * x687
                        + x81 * (x1523 * x670 - x1546 * x687 + 2 * x770)
                        + 2 * x863
                    )
                    + 2 * x922
                )
            ),
        ]
    )
    return S


def eri_2200(a, A, b, B, c, C, d, D):
    """Cartesian [dd|ss] 2-electron electron repulsion integral.

    Generated code; DO NOT modify by hand!"""

    x0 = (2 * a + 2 * b) ** (-1.0)
    x1 = numpy.pi**2.5
    x2 = a + b
    x3 = c + d
    x4 = x2 * x3
    x5 = x2 + x3
    x6 = (x4 + numpy.sqrt(x5)) ** (-1.0)
    x7 = x2 ** (-1.0)
    x8 = A[0] - B[0]
    x9 = A[1] - B[1]
    x10 = A[2] - B[2]
    x11 = numpy.exp(-a * b * x7 * (x10**2 + x8**2 + x9**2))
    x12 = x3 ** (-1.0)
    x13 = numpy.exp(
        -c * d * x12 * ((C[0] - D[0]) ** 2 + (C[1] - D[1]) ** 2 + (C[2] - D[2]) ** 2)
    )
    x14 = x5 ** (-1.0)
    x15 = -x7 * (a * A[0] + b * B[0])
    x16 = -x12 * (c * C[0] + d * D[0]) - x15
    x17 = -x7 * (a * A[1] + b * B[1])
    x18 = -x12 * (c * C[1] + d * D[1]) - x17
    x19 = -x7 * (a * A[2] + b * B[2])
    x20 = -x12 * (c * C[2] + d * D[2]) - x19
    x21 = x14 * x4 * (x16**2 + x18**2 + x20**2)
    x22 = boys(1, x21)
    x23 = x14 * x3
    x24 = boys(2, x21)
    x25 = 2 * x1 * x11 * x13 * x6
    x26 = x24 * x25
    x27 = x0 * (2 * x1 * x11 * x13 * x22 * x6 - x23 * x26)
    x28 = -x15 - A[0]
    x29 = x22 * x25
    x30 = x16 * x23
    x31 = x26 * x30
    x32 = x28 * x29 - x31
    x33 = x25 * boys(3, x21)
    x34 = x26 * x28 - x30 * x33
    x35 = x23 * x34
    x36 = -x16 * x35 + x27 + x28 * x32
    x37 = x23 * x36
    x38 = boys(0, x21)
    x39 = x0 * (2 * x1 * x11 * x13 * x38 * x6 - x23 * x29)
    x40 = x25 * x38
    x41 = x29 * x30
    x42 = x23 * x32
    x43 = -x16 * x42 + x28 * (x28 * x40 - x41) + x39
    x44 = 2 * x0
    x45 = -x16 * x37 + x28 * x43 + x44 * (2 * x1 * x11 * x13 * x28 * x38 * x6 - x41 - x42)
    x46 = x0 * (2 * x1 * x11 * x13 * x24 * x6 - x23 * x33)
    x47 = x25 * boys(4, x21)
    x48 = -x17 - A[1]
    x49 = x18 * x23
    x50 = x29 * x49
    x51 = x26 * x49
    x52 = x29 * x48 - x51
    x53 = x23 * x52
    x54 = x0 * (2 * x1 * x11 * x13 * x38 * x48 * x6 - x50 - x53)
    x55 = x40 * x48 - x50
    x56 = x16 * x53
    x57 = x28 * x55 - x56
    x58 = x26 * x48 - x33 * x49
    x59 = x23 * x58
    x60 = -x16 * x59 + x28 * x52
    x61 = x23 * x60
    x62 = -x16 * x61 + x28 * x57 + x54
    x63 = x43 * x9 + x62
    x64 = x0 * (2 * x1 * x11 * x13 * x22 * x48 * x6 - x51 - x59)
    x65 = x33 * x48 - x47 * x49
    x66 = (
        x28 * x62
        - x30 * (x28 * x60 - x30 * (x28 * x58 - x30 * x65) + x64)
        + x44 * (x28 * x55 - x56 - x61)
    )
    x67 = -x19 - A[2]
    x68 = x20 * x23
    x69 = x29 * x68
    x70 = x26 * x68
    x71 = x29 * x67 - x70
    x72 = x23 * x71
    x73 = x0 * (2 * x1 * x11 * x13 * x38 * x6 * x67 - x69 - x72)
    x74 = x40 * x67 - x69
    x75 = x16 * x72
    x76 = x28 * x74 - x75
    x77 = x26 * x67 - x33 * x68
    x78 = x23 * x77
    x79 = -x16 * x78 + x28 * x71
    x80 = x23 * x79
    x81 = -x16 * x80 + x28 * x76 + x73
    x82 = x10 * x43 + x81
    x83 = x0 * (2 * x1 * x11 * x13 * x22 * x6 * x67 - x70 - x78)
    x84 = x33 * x67 - x47 * x68
    x85 = (
        x28 * x81
        - x30 * (x28 * x79 - x30 * (x28 * x77 - x30 * x84) + x83)
        + x44 * (x28 * x74 - x75 - x80)
    )
    x86 = -x18 * x59 + x27 + x48 * x52
    x87 = x23 * x86
    x88 = -x18 * x53 + x39 + x48 * x55
    x89 = x0 * (-x87 + x88)
    x90 = -x16 * x87 + x28 * x88
    x91 = x46 + x48 * x58 - x49 * x65
    x92 = x28 * x90 - x30 * (x28 * x86 - x30 * x91) + x89
    x93 = x62 * x9 + x92
    x94 = x18 * x72
    x95 = -x18 * x78 + x48 * x71
    x96 = x23 * x95
    x97 = x0 * (x48 * x74 - x94 - x96)
    x98 = x48 * x74 - x94
    x99 = -x16 * x96 + x28 * x98
    x100 = x48 * x77 - x49 * x84
    x101 = x28 * x99 - x30 * (-x100 * x30 + x28 * x95) + x97
    x102 = x10 * x62 + x101
    x103 = -x20 * x78 + x27 + x67 * x71
    x104 = x103 * x23
    x105 = -x20 * x72 + x39 + x67 * x74
    x106 = x0 * (-x104 + x105)
    x107 = -x104 * x16 + x105 * x28
    x108 = x46 + x67 * x77 - x68 * x84
    x109 = x106 + x107 * x28 - x30 * (x103 * x28 - x108 * x30)
    x110 = x10 * x81 + x109
    x111 = x57 * x9 + x90
    x112 = x10 * x57 + x99
    x113 = -x18 * x87 + x48 * x88 + 2 * x54
    x114 = x48 * x86 - x49 * x91 + 2 * x64
    x115 = x113 * x28 - x114 * x30 + x9 * x90
    x116 = -x18 * x96 + x48 * x98 + x73
    x117 = -x100 * x49 + x48 * x95 + x83
    x118 = x116 * x28 - x117 * x30
    x119 = x10 * x90 + x118
    x120 = -x104 * x18 + x105 * x48
    x121 = x103 * x48 - x108 * x49
    x122 = x120 * x28 - x121 * x30
    x123 = x10 * x99 + x122
    x124 = x76 * x9 + x99
    x125 = x10 * x76 + x107
    x126 = x118 + x9 * x99
    x127 = -x104 * x20 + x105 * x67 + 2 * x73
    x128 = x103 * x67 - x108 * x68 + 2 * x83
    x129 = x10 * x107 + x127 * x28 - x128 * x30
    x130 = x113 + x88 * x9
    x131 = x10 * x88 + x116
    x132 = x116 * x48 - x117 * x49 + 2 * x97
    x133 = x106 + x120 * x48 - x121 * x49
    x134 = x10 * x116 + x133
    x135 = x116 + x9 * x98
    x136 = x10 * x98 + x120
    x137 = x10 * x120 + x127 * x48 - x128 * x49
    x138 = x105 * x9 + x120
    x139 = x10 * x105 + x127

    # 36 item(s)
    S = numpy.array(
        [
            3 * x0 * (-x37 + x43)
            + x28 * x45
            - x30
            * (
                x28 * x36
                - x30 * (x28 * x34 - x30 * (x28 * x33 - x30 * x47) + x46)
                + x44 * (2 * x1 * x11 * x13 * x22 * x28 * x6 - x31 - x35)
            )
            + x45 * x8
            + x8 * (x43 * x8 + x45),
            x45 * x9 + x63 * x8 + x66,
            x10 * x45 + x8 * x82 + x85,
            x63 * x9 + x93,
            x102 + x82 * x9,
            x10 * x82 + x110,
            x62 * x8 + x66 + x8 * (x57 * x8 + x62),
            x111 * x8 + x93,
            x102 + x112 * x8,
            x111 * x9 + x115,
            x112 * x9 + x119,
            x10 * x112 + x123,
            x8 * x81 + x8 * (x76 * x8 + x81) + x85,
            x101 + x124 * x8 + x81 * x9,
            x110 + x125 * x8,
            x124 * x9 + x126,
            x123 + x125 * x9,
            x10 * x125 + x129,
            x8 * x90 + x8 * (x8 * x88 + x90) + x92,
            x115 + x130 * x8,
            x119 + x131 * x8,
            x113 * x48 + x113 * x9 - x114 * x49 + x130 * x9 + 3 * x89,
            x10 * x113 + x131 * x9 + x132,
            x10 * x131 + x134,
            x101 + x8 * x99 + x8 * (x8 * x98 + x99),
            x126 + x135 * x8,
            x123 + x136 * x8,
            x116 * x9 + x132 + x135 * x9,
            x134 + x136 * x9,
            x10 * x136 + x137,
            x107 * x8 + x109 + x8 * (x105 * x8 + x107),
            x107 * x9 + x122 + x138 * x8,
            x129 + x139 * x8,
            x120 * x9 + x133 + x138 * x9,
            x137 + x139 * x9,
            x10 * x127 + x10 * x139 + 3 * x106 + x127 * x67 - x128 * x68,
        ]
    )
    return S


def eri_2201(a, A, b, B, c, C, d, D):
    """Cartesian [dd|sp] 2-electron electron repulsion integral.

    Generated code; DO NOT modify by hand!"""

    x0 = C[0] - D[0]
    x1 = 2 * a + 2 * b
    x2 = x1 ** (-1.0)
    x3 = numpy.pi**2.5
    x4 = a + b
    x5 = c + d
    x6 = x4 * x5
    x7 = x4 + x5
    x8 = (x6 + numpy.sqrt(x7)) ** (-1.0)
    x9 = x4 ** (-1.0)
    x10 = A[0] - B[0]
    x11 = A[1] - B[1]
    x12 = A[2] - B[2]
    x13 = numpy.exp(-a * b * x9 * (x10**2 + x11**2 + x12**2))
    x14 = x5 ** (-1.0)
    x15 = C[1] - D[1]
    x16 = C[2] - D[2]
    x17 = numpy.exp(-c * d * x14 * (x0**2 + x15**2 + x16**2))
    x18 = x7 ** (-1.0)
    x19 = x14 * (c * C[0] + d * D[0])
    x20 = -x9 * (a * A[0] + b * B[0])
    x21 = -x19 - x20
    x22 = x14 * (c * C[1] + d * D[1])
    x23 = -x9 * (a * A[1] + b * B[1])
    x24 = -x22 - x23
    x25 = -x9 * (a * A[2] + b * B[2])
    x26 = -x14 * (c * C[2] + d * D[2]) - x25
    x27 = x18 * x6 * (x21**2 + x24**2 + x26**2)
    x28 = boys(1, x27)
    x29 = x18 * x5
    x30 = boys(2, x27)
    x31 = 2 * x13 * x17 * x3 * x8
    x32 = x30 * x31
    x33 = x2 * (2 * x13 * x17 * x28 * x3 * x8 - x29 * x32)
    x34 = -x20 - A[0]
    x35 = x28 * x31
    x36 = x21 * x29
    x37 = x32 * x36
    x38 = x34 * x35 - x37
    x39 = boys(3, x27)
    x40 = x31 * x39
    x41 = x36 * x40
    x42 = x32 * x34 - x41
    x43 = x29 * x42
    x44 = -x21 * x43 + x33 + x34 * x38
    x45 = x29 * x44
    x46 = boys(0, x27)
    x47 = x2 * (2 * x13 * x17 * x3 * x46 * x8 - x29 * x35)
    x48 = x31 * x46
    x49 = x35 * x36
    x50 = x29 * x38
    x51 = -x21 * x50 + x34 * (x34 * x48 - x49) + x47
    x52 = 3 * x2
    x53 = 2 * x2
    x54 = -x21 * x45 + x34 * x51 + x53 * (2 * x13 * x17 * x3 * x34 * x46 * x8 - x49 - x50)
    x55 = x2 * (2 * x13 * x17 * x3 * x30 * x8 - x29 * x40)
    x56 = x31 * boys(4, x27)
    x57 = x34 * x40 - x36 * x56
    x58 = x29 * x57
    x59 = -x21 * x58 + x34 * x42 + x55
    x60 = x29 * x59
    x61 = -x21 * x60 + x34 * x44 + x53 * (2 * x13 * x17 * x28 * x3 * x34 * x8 - x37 - x43)
    x62 = x34 * x54 - x36 * x61 + x52 * (-x45 + x51)
    x63 = (2 * c + 2 * d + x1) ** (-1.0)
    x64 = x2 * (2 * x13 * x17 * x3 * x39 * x8 - x29 * x56)
    x65 = x31 * boys(5, x27)
    x66 = x34 * x56 - x36 * x65
    x67 = x34 * x57 - x36 * x66 + x64
    x68 = x34 * x59 - x36 * x67 + x53 * (2 * x13 * x17 * x3 * x30 * x34 * x8 - x41 - x58)
    x69 = x19 - C[0]
    x70 = x18 * x4
    x71 = x21 * x70
    x72 = x32 * x69 + x40 * x71
    x73 = x29 * x72
    x74 = x32 * x71 + x35 * x69
    x75 = x2 * (-x73 + x74)
    x76 = -x21 * x73 + x34 * x74 + x42 * x63
    x77 = x40 * x69 + x56 * x71
    x78 = x29 * x77
    x79 = -x21 * x78 + x34 * x72 + x57 * x63
    x80 = x29 * x79
    x81 = -x21 * x80 + x34 * x76 + x59 * x63 + x75
    x82 = x29 * x81
    x83 = x29 * x74
    x84 = x35 * x71 + x48 * x69
    x85 = x2 * (-x83 + x84)
    x86 = -x21 * x83 + x34 * x84 + x38 * x63
    x87 = x29 * x76
    x88 = -x21 * x87 + x34 * x86 + x44 * x63 + x85
    x89 = -x21 * x82 + x34 * x88 + x53 * (x86 - x87) + x61 * x63
    x90 = x2 * (x72 - x78)
    x91 = x56 * x69 + x65 * x71
    x92 = x0 * x54 + x89
    x93 = x0 * x51 + x88
    x94 = x22 - C[1]
    x95 = x24 * x70
    x96 = x32 * x94 + x40 * x95
    x97 = x29 * x96
    x98 = x32 * x95 + x35 * x94
    x99 = x2 * (-x97 + x98)
    x100 = x21 * x97
    x101 = -x100 + x34 * x98
    x102 = x40 * x94 + x56 * x95
    x103 = x102 * x29
    x104 = -x103 * x21 + x34 * x96
    x105 = x104 * x29
    x106 = x101 * x34 - x105 * x21 + x99
    x107 = x106 * x29
    x108 = x29 * x98
    x109 = x35 * x95 + x48 * x94
    x110 = x2 * (-x108 + x109)
    x111 = x108 * x21
    x112 = x101 * x29
    x113 = x110 - x112 * x21 + x34 * (x109 * x34 - x111)
    x114 = -x107 * x21 + x113 * x34 + x53 * (x109 * x34 - x111 - x112)
    x115 = x2 * (-x103 + x96)
    x116 = x56 * x94 + x65 * x95
    x117 = x114 + x15 * x54
    x118 = x113 + x15 * x51
    x119 = x16 * x54
    x120 = x16 * x51
    x121 = -x23 - A[1]
    x122 = x24 * x29
    x123 = x122 * x35
    x124 = x122 * x32
    x125 = x121 * x35 - x124
    x126 = x125 * x29
    x127 = x2 * (2 * x121 * x13 * x17 * x3 * x46 * x8 - x123 - x126)
    x128 = x121 * x48 - x123
    x129 = x126 * x21
    x130 = x128 * x34 - x129
    x131 = x122 * x40
    x132 = x121 * x32 - x131
    x133 = x132 * x29
    x134 = x133 * x21
    x135 = x125 * x34 - x134
    x136 = x135 * x29
    x137 = x127 + x130 * x34 - x136 * x21
    x138 = x24 * x83
    x139 = x24 * x73
    x140 = x121 * x74 - x139
    x141 = x140 * x29
    x142 = x2 * (x121 * x84 - x138 - x141)
    x143 = x2 * (2 * x121 * x13 * x17 * x28 * x3 * x8 - x124 - x133)
    x144 = x121 * x40 - x122 * x56
    x145 = x144 * x29
    x146 = x132 * x34 - x145 * x21
    x147 = x146 * x29
    x148 = x135 * x34 + x143 - x147 * x21
    x149 = x121 * x84 - x138
    x150 = x135 * x63 - x141 * x21 + x149 * x34
    x151 = x121 * x72 - x24 * x78
    x152 = x151 * x29
    x153 = x140 * x34 + x146 * x63 - x152 * x21
    x154 = x153 * x29
    x155 = x142 + x148 * x63 + x150 * x34 - x154 * x21
    x156 = x0 * x137 + x155
    x157 = x11 * x93 + x156
    x158 = x2 * (2 * x121 * x13 * x17 * x3 * x30 * x8 - x131 - x145)
    x159 = x121 * x56 - x122 * x65
    x160 = x144 * x34 - x159 * x36
    x161 = x146 * x34 + x158 - x160 * x36
    x162 = x137 * x34 - x148 * x36 + x53 * (x128 * x34 - x129 - x136)
    x163 = x2 * (x121 * x74 - x139 - x152)
    x164 = x121 * x77 - x122 * x91
    x165 = (
        x0 * x162
        + x155 * x34
        - x36
        * (x153 * x34 + x161 * x63 + x163 - x36 * (x151 * x34 + x160 * x63 - x164 * x36))
        + x53 * (x150 - x154)
        + x63 * (x148 * x34 - x161 * x36 + x53 * (x125 * x34 - x134 - x147))
    )
    x166 = x121 * x98 + x132 * x63 - x24 * x97
    x167 = x166 * x29
    x168 = -x108 * x24 + x109 * x121 + x125 * x63
    x169 = x2 * (-x167 + x168)
    x170 = x167 * x21
    x171 = x168 * x34 - x170
    x172 = -x103 * x24 + x121 * x96 + x144 * x63
    x173 = x172 * x29
    x174 = x166 * x34 - x173 * x21
    x175 = x174 * x29
    x176 = x169 + x171 * x34 - x175 * x21
    x177 = x137 * x15 + x176
    x178 = x11 * x118 + x177
    x179 = x2 * (x166 - x173)
    x180 = x102 * x121 - x116 * x122 + x159 * x63
    x181 = (
        x15 * x162
        + x176 * x34
        - x36 * (x174 * x34 + x179 - x36 * (x172 * x34 - x180 * x36))
        + x53 * (x168 * x34 - x170 - x175)
    )
    x182 = x137 * x16
    x183 = x11 * x120 + x182
    x184 = x16 * x162
    x185 = -x25 - A[2]
    x186 = x26 * x29
    x187 = x186 * x35
    x188 = x186 * x32
    x189 = x185 * x35 - x188
    x190 = x189 * x29
    x191 = x2 * (2 * x13 * x17 * x185 * x3 * x46 * x8 - x187 - x190)
    x192 = x185 * x48 - x187
    x193 = x190 * x21
    x194 = x192 * x34 - x193
    x195 = x189 * x34
    x196 = x186 * x40
    x197 = x185 * x32 - x196
    x198 = x197 * x29
    x199 = x198 * x21
    x200 = x195 - x199
    x201 = x200 * x29
    x202 = x191 + x194 * x34 - x201 * x21
    x203 = x26 * x83
    x204 = x26 * x73
    x205 = x185 * x74 - x204
    x206 = x205 * x29
    x207 = x2 * (x185 * x84 - x203 - x206)
    x208 = x2 * (2 * x13 * x17 * x185 * x28 * x3 * x8 - x188 - x198)
    x209 = x197 * x34
    x210 = x185 * x40 - x186 * x56
    x211 = x210 * x29
    x212 = x21 * x211
    x213 = x209 - x212
    x214 = x213 * x29
    x215 = x200 * x34 + x208 - x21 * x214
    x216 = x185 * x84 - x203
    x217 = x200 * x63 - x206 * x21 + x216 * x34
    x218 = x185 * x72 - x26 * x78
    x219 = x218 * x29
    x220 = x205 * x34 - x21 * x219 + x213 * x63
    x221 = x220 * x29
    x222 = x207 - x21 * x221 + x215 * x63 + x217 * x34
    x223 = x0 * x202 + x222
    x224 = x12 * x93 + x223
    x225 = x2 * (2 * x13 * x17 * x185 * x3 * x30 * x8 - x196 - x211)
    x226 = x210 * x34
    x227 = x185 * x56 - x186 * x65
    x228 = x227 * x36
    x229 = x226 - x228
    x230 = x213 * x34 + x225 - x229 * x36
    x231 = x202 * x34 - x215 * x36 + x53 * (x192 * x34 - x193 - x201)
    x232 = x2 * (x185 * x74 - x204 - x219)
    x233 = x185 * x77 - x186 * x91
    x234 = (
        x0 * x231
        + x222 * x34
        - x36
        * (x220 * x34 + x230 * x63 + x232 - x36 * (x218 * x34 + x229 * x63 - x233 * x36))
        + x53 * (x217 - x221)
        + x63 * (x215 * x34 - x230 * x36 + x53 * (x189 * x34 - x199 - x214))
    )
    x235 = x108 * x26
    x236 = x26 * x97
    x237 = x185 * x98 - x236
    x238 = x237 * x29
    x239 = x2 * (x109 * x185 - x235 - x238)
    x240 = x109 * x185 - x235
    x241 = x21 * x238
    x242 = x240 * x34 - x241
    x243 = -x103 * x26 + x185 * x96
    x244 = x243 * x29
    x245 = -x21 * x244 + x237 * x34
    x246 = x245 * x29
    x247 = -x21 * x246 + x239 + x242 * x34
    x248 = x15 * x202 + x247
    x249 = x118 * x12 + x248
    x250 = x2 * (x185 * x98 - x236 - x244)
    x251 = x102 * x185 - x116 * x186
    x252 = (
        x15 * x231
        + x247 * x34
        - x36 * (x245 * x34 + x250 - x36 * (x243 * x34 - x251 * x36))
        + x53 * (x240 * x34 - x241 - x246)
    )
    x253 = x197 * x63
    x254 = x2 * (x189 * x63 - x253 * x29)
    x255 = x253 * x36
    x256 = x195 * x63 - x255
    x257 = x209 * x63 - x212 * x63
    x258 = x257 * x29
    x259 = -x21 * x258 + x254 + x256 * x34
    x260 = x16 * x202 + x259
    x261 = x12 * x120 + x260
    x262 = x211 * x63
    x263 = x2 * (x197 * x63 - x262)
    x264 = (
        x16 * x231
        + x259 * x34
        - x36 * (x257 * x34 + x263 - x36 * (x226 * x63 - x228 * x63))
        + x53 * (x189 * x34 * x63 - x255 - x258)
    )
    x265 = x121 * x140 - x152 * x24 + x75
    x266 = x265 * x29
    x267 = x121 * x149 - x141 * x24 + x85
    x268 = x2 * (-x266 + x267)
    x269 = x121 * x132 - x145 * x24 + x55
    x270 = x269 * x29
    x271 = x121 * x125 - x133 * x24 + x33
    x272 = x2 * (-x270 + x271)
    x273 = -x21 * x270 + x271 * x34
    x274 = x121 * x144 - x122 * x159 + x64
    x275 = x269 * x34 - x274 * x36
    x276 = x271 * x29
    x277 = x121 * x128 - x126 * x24 + x47
    x278 = x2 * (-x276 + x277)
    x279 = -x21 * x276 + x277 * x34
    x280 = -x273 * x36 + x278 + x279 * x34
    x281 = -x21 * x266 + x267 * x34 + x273 * x63
    x282 = x121 * x151 - x122 * x164 + x90
    x283 = (
        x0 * x280
        + x268
        + x281 * x34
        - x36 * (x265 * x34 + x275 * x63 - x282 * x36)
        + x63 * (x272 + x273 * x34 - x275 * x36)
    )
    x284 = x11 * x156 + x283
    x285 = x121 * x166 - x173 * x24 + x269 * x63 + x99
    x286 = x285 * x29
    x287 = x110 + x121 * x168 - x167 * x24 + x271 * x63
    x288 = x2 * (-x286 + x287)
    x289 = -x21 * x286 + x287 * x34
    x290 = x115 + x121 * x172 - x122 * x180 + x274 * x63
    x291 = x15 * x280 + x288 + x289 * x34 - x36 * (x285 * x34 - x290 * x36)
    x292 = x11 * x177 + x291
    x293 = x16 * x280
    x294 = x11 * x182 + x293
    x295 = x206 * x24
    x296 = x121 * x205 - x219 * x24
    x297 = x29 * x296
    x298 = x2 * (x121 * x216 - x295 - x297)
    x299 = x198 * x24
    x300 = x121 * x197 - x211 * x24
    x301 = x29 * x300
    x302 = x2 * (x121 * x189 - x299 - x301)
    x303 = x121 * x189 - x299
    x304 = -x21 * x301 + x303 * x34
    x305 = x121 * x210
    x306 = x122 * x227
    x307 = x305 - x306
    x308 = x300 * x34 - x307 * x36
    x309 = x190 * x24
    x310 = x29 * x303
    x311 = x2 * (x121 * x192 - x309 - x310)
    x312 = x121 * x192 - x309
    x313 = -x21 * x310 + x312 * x34
    x314 = -x304 * x36 + x311 + x313 * x34
    x315 = x121 * x216 - x295
    x316 = -x21 * x297 + x304 * x63 + x315 * x34
    x317 = x121 * x218 - x122 * x233
    x318 = (
        x0 * x314
        + x298
        + x316 * x34
        - x36 * (x296 * x34 + x308 * x63 - x317 * x36)
        + x63 * (x302 + x304 * x34 - x308 * x36)
    )
    x319 = x12 * x156 + x318
    x320 = x121 * x237 - x24 * x244 + x300 * x63
    x321 = x29 * x320
    x322 = x121 * x240 - x238 * x24 + x303 * x63
    x323 = x2 * (-x321 + x322)
    x324 = -x21 * x321 + x322 * x34
    x325 = x121 * x243 - x122 * x251 + x307 * x63
    x326 = x15 * x314 + x323 + x324 * x34 - x36 * (x320 * x34 - x325 * x36)
    x327 = x12 * x177 + x326
    x328 = x122 * x253
    x329 = x121 * x253 - x24 * x262
    x330 = x29 * x329
    x331 = x2 * (x121 * x189 * x63 - x328 - x330)
    x332 = x189 * x63
    x333 = x121 * x332 - x328
    x334 = -x21 * x330 + x333 * x34
    x335 = x305 * x63 - x306 * x63
    x336 = x16 * x314 + x331 + x334 * x34 - x36 * (x329 * x34 - x335 * x36)
    x337 = x12 * x182 + x336
    x338 = x185 * x205 - x219 * x26 + x75
    x339 = x29 * x338
    x340 = x185 * x216 - x206 * x26 + x85
    x341 = x2 * (-x339 + x340)
    x342 = x185 * x197 - x211 * x26 + x55
    x343 = x29 * x342
    x344 = x185 * x189 - x198 * x26 + x33
    x345 = x2 * (-x343 + x344)
    x346 = -x21 * x343 + x34 * x344
    x347 = x185 * x210
    x348 = x186 * x227
    x349 = x347 - x348 + x64
    x350 = x34 * x342 - x349 * x36
    x351 = x29 * x344
    x352 = x185 * x192 - x190 * x26 + x47
    x353 = x2 * (-x351 + x352)
    x354 = -x21 * x351 + x34 * x352
    x355 = x34 * x354 - x346 * x36 + x353
    x356 = -x21 * x339 + x34 * x340 + x346 * x63
    x357 = x185 * x218 - x186 * x233 + x90
    x358 = (
        x0 * x355
        + x34 * x356
        + x341
        - x36 * (x338 * x34 + x350 * x63 - x357 * x36)
        + x63 * (x34 * x346 + x345 - x350 * x36)
    )
    x359 = x12 * x223 + x358
    x360 = x185 * x237 - x244 * x26 + x99
    x361 = x29 * x360
    x362 = x110 + x185 * x240 - x238 * x26
    x363 = x2 * (-x361 + x362)
    x364 = -x21 * x361 + x34 * x362
    x365 = x115 + x185 * x243 - x186 * x251
    x366 = x15 * x355 + x34 * x364 - x36 * (x34 * x360 - x36 * x365) + x363
    x367 = x12 * x248 + x366
    x368 = x185 * x253 - x26 * x262 + x342 * x63
    x369 = x29 * x368
    x370 = x185 * x332 - x186 * x253 + x344 * x63
    x371 = x2 * (-x369 + x370)
    x372 = -x21 * x369 + x34 * x370
    x373 = x347 * x63 - x348 * x63 + x349 * x63
    x374 = x16 * x355 + x34 * x372 - x36 * (x34 * x368 - x36 * x373) + x371
    x375 = x12 * x260 + x374
    x376 = x0 * x130 + x150
    x377 = x130 * x15 + x171
    x378 = x130 * x16
    x379 = x0 * x279 + x281
    x380 = x11 * x376 + x379
    x381 = x15 * x279 + x289
    x382 = x11 * x377 + x381
    x383 = x16 * x279
    x384 = x11 * x378 + x383
    x385 = x0 * x313 + x316
    x386 = x12 * x376 + x385
    x387 = x15 * x313 + x324
    x388 = x12 * x377 + x387
    x389 = x16 * x313 + x334
    x390 = x12 * x378 + x389
    x391 = x121 * x271 + 2 * x143 - x24 * x270
    x392 = x121 * x269 - x122 * x274 + 2 * x158
    x393 = x121 * x277 + 2 * x127 - x24 * x276
    x394 = x34 * x393 - x36 * x391
    x395 = x121 * x267 + 2 * x142 - x24 * x266
    x396 = x121 * x265 - x122 * x282 + 2 * x163
    x397 = (
        x0 * x394 + x11 * x379 + x34 * x395 - x36 * x396 + x63 * (x34 * x391 - x36 * x392)
    )
    x398 = x121 * x287 + 2 * x169 - x24 * x286 + x391 * x63
    x399 = x121 * x285 - x122 * x290 + 2 * x179 + x392 * x63
    x400 = x11 * x381 + x15 * x394 + x34 * x398 - x36 * x399
    x401 = x11 * x383 + x16 * x394
    x402 = x121 * x303 + x208 - x24 * x301
    x403 = x121 * x300 - x122 * x307 + x225
    x404 = x121 * x312 + x191 - x24 * x310
    x405 = x34 * x404 - x36 * x402
    x406 = x121 * x315 + x207 - x24 * x297
    x407 = x121 * x296 - x122 * x317 + x232
    x408 = x0 * x405 + x34 * x406 - x36 * x407 + x63 * (x34 * x402 - x36 * x403)
    x409 = x12 * x379 + x408
    x410 = x121 * x322 + x239 - x24 * x321 + x402 * x63
    x411 = x121 * x320 - x122 * x325 + x250 + x403 * x63
    x412 = x15 * x405 + x34 * x410 - x36 * x411
    x413 = x12 * x381 + x412
    x414 = x121 * x333 - x24 * x330 + x254
    x415 = x121 * x329 - x122 * x335 + x263
    x416 = x16 * x405 + x34 * x414 - x36 * x415
    x417 = x12 * x383 + x416
    x418 = x121 * x344 - x24 * x343
    x419 = x121 * x342 - x122 * x349
    x420 = x121 * x352 - x24 * x351
    x421 = x34 * x420 - x36 * x418
    x422 = x121 * x340 - x24 * x339
    x423 = x121 * x338 - x122 * x357
    x424 = x0 * x421 + x34 * x422 - x36 * x423 + x63 * (x34 * x418 - x36 * x419)
    x425 = x12 * x385 + x424
    x426 = x121 * x362 - x24 * x361 + x418 * x63
    x427 = x121 * x360 - x122 * x365 + x419 * x63
    x428 = x15 * x421 + x34 * x426 - x36 * x427
    x429 = x12 * x387 + x428
    x430 = x121 * x370 - x24 * x369
    x431 = x121 * x368 - x122 * x373
    x432 = x16 * x421 + x34 * x430 - x36 * x431
    x433 = x12 * x389 + x432
    x434 = x0 * x194 + x217
    x435 = x15 * x194 + x242
    x436 = x16 * x194 + x256
    x437 = x11 * x434 + x385
    x438 = x11 * x435 + x387
    x439 = x11 * x436 + x389
    x440 = x0 * x354 + x356
    x441 = x12 * x434 + x440
    x442 = x15 * x354 + x364
    x443 = x12 * x435 + x442
    x444 = x16 * x354 + x372
    x445 = x12 * x436 + x444
    x446 = x11 * x385 + x408
    x447 = x11 * x387 + x412
    x448 = x11 * x389 + x416
    x449 = x185 * x344 + 2 * x208 - x26 * x343
    x450 = x185 * x342 - x186 * x349 + 2 * x225
    x451 = x185 * x352 + 2 * x191 - x26 * x351
    x452 = x34 * x451 - x36 * x449
    x453 = x185 * x340 + 2 * x207 - x26 * x339
    x454 = x185 * x338 - x186 * x357 + 2 * x232
    x455 = (
        x0 * x452 + x12 * x440 + x34 * x453 - x36 * x454 + x63 * (x34 * x449 - x36 * x450)
    )
    x456 = x185 * x362 + 2 * x239 - x26 * x361
    x457 = x185 * x360 - x186 * x365 + 2 * x250
    x458 = x12 * x442 + x15 * x452 + x34 * x456 - x36 * x457
    x459 = x185 * x370 + 2 * x254 - x26 * x369 + x449 * x63
    x460 = x185 * x368 - x186 * x373 + 2 * x263 + x450 * x63
    x461 = x12 * x444 + x16 * x452 + x34 * x459 - x36 * x460
    x462 = x0 * x277 + x267
    x463 = x15 * x277 + x287
    x464 = x16 * x277
    x465 = x0 * x393 + x395
    x466 = x11 * x462 + x465
    x467 = x15 * x393 + x398
    x468 = x11 * x463 + x467
    x469 = x16 * x393
    x470 = x11 * x464 + x469
    x471 = x0 * x404 + x406
    x472 = x12 * x462 + x471
    x473 = x15 * x404 + x410
    x474 = x12 * x463 + x473
    x475 = x16 * x404 + x414
    x476 = x12 * x464 + x475
    x477 = x121 * x393 - x122 * x391 + 3 * x278
    x478 = x121 * x404 - x122 * x402 + 2 * x311
    x479 = x0 * x478 + x121 * x406 - x122 * x407 + 2 * x298
    x480 = (
        x121 * x410
        - x122 * x411
        + x15 * x478
        + 2 * x323
        + x63 * (x121 * x402 - x122 * x403 + 2 * x302)
    )
    x481 = x121 * x414 - x122 * x415 + x16 * x478 + 2 * x331
    x482 = x121 * x420 - x122 * x418 + x353
    x483 = x0 * x482 + x121 * x422 - x122 * x423 + x341
    x484 = x12 * x471 + x483
    x485 = (
        x121 * x426
        - x122 * x427
        + x15 * x482
        + x363
        + x63 * (x121 * x418 - x122 * x419 + x345)
    )
    x486 = x12 * x473 + x485
    x487 = x121 * x430 - x122 * x431 + x16 * x482 + x371
    x488 = x12 * x475 + x487
    x489 = x0 * x312 + x315
    x490 = x15 * x312 + x322
    x491 = x16 * x312 + x333
    x492 = x11 * x489 + x471
    x493 = x11 * x490 + x473
    x494 = x11 * x491 + x475
    x495 = x0 * x420 + x422
    x496 = x12 * x489 + x495
    x497 = x15 * x420 + x426
    x498 = x12 * x490 + x497
    x499 = x16 * x420 + x430
    x500 = x12 * x491 + x499
    x501 = x121 * x451 - x122 * x449
    x502 = x0 * x501 + x12 * x495 + x121 * x453 - x122 * x454
    x503 = (
        x12 * x497
        + x121 * x456
        - x122 * x457
        + x15 * x501
        + x63 * (x121 * x449 - x122 * x450)
    )
    x504 = x12 * x499 + x121 * x459 - x122 * x460 + x16 * x501
    x505 = x0 * x352 + x340
    x506 = x15 * x352 + x362
    x507 = x16 * x352 + x370
    x508 = x11 * x505 + x495
    x509 = x11 * x506 + x497
    x510 = x11 * x507 + x499
    x511 = x0 * x451 + x453
    x512 = x12 * x505 + x511
    x513 = x15 * x451 + x456
    x514 = x12 * x506 + x513
    x515 = x16 * x451 + x459
    x516 = x12 * x507 + x515
    x517 = x185 * x451 - x186 * x449 + 3 * x353

    # 108 item(s)
    S = numpy.array(
        [
            x0 * x62
            + x10 * x92
            + x10 * (x10 * x93 + x92)
            + x34 * x89
            - x36
            * (
                x34 * x81
                - x36
                * (
                    x34 * x79
                    - x36 * (x34 * x77 - x36 * x91 + x63 * x66)
                    + x63 * x67
                    + x90
                )
                + x53 * (x76 - x80)
                + x63 * x68
            )
            + x52 * (-x82 + x88)
            + x63 * (x34 * x61 - x36 * x68 + x52 * (x44 - x60)),
            x10 * x117
            + x10 * (x10 * x118 + x117)
            + x114 * x34
            + x15 * x62
            - x36
            * (
                x106 * x34
                - x36 * (x104 * x34 + x115 - x36 * (x102 * x34 - x116 * x36))
                + x53 * (-x100 - x105 + x34 * x98)
            )
            + x52 * (-x107 + x113),
            x10 * x119 + x10 * (x10 * x120 + x119) + x16 * x62,
            x10 * x157 + x11 * x92 + x165,
            x10 * x178 + x11 * x117 + x181,
            x10 * x183 + x11 * x119 + x184,
            x10 * x224 + x12 * x92 + x234,
            x10 * x249 + x117 * x12 + x252,
            x10 * x261 + x119 * x12 + x264,
            x11 * x157 + x284,
            x11 * x178 + x292,
            x11 * x183 + x294,
            x11 * x224 + x319,
            x11 * x249 + x327,
            x11 * x261 + x337,
            x12 * x224 + x359,
            x12 * x249 + x367,
            x12 * x261 + x375,
            x10 * x156 + x10 * (x10 * x376 + x156) + x165,
            x10 * x177 + x10 * (x10 * x377 + x177) + x181,
            x10 * x182 + x10 * (x10 * x378 + x182) + x184,
            x10 * x380 + x284,
            x10 * x382 + x292,
            x10 * x384 + x294,
            x10 * x386 + x319,
            x10 * x388 + x327,
            x10 * x390 + x337,
            x11 * x380 + x397,
            x11 * x382 + x400,
            x11 * x384 + x401,
            x11 * x386 + x409,
            x11 * x388 + x413,
            x11 * x390 + x417,
            x12 * x386 + x425,
            x12 * x388 + x429,
            x12 * x390 + x433,
            x10 * x223 + x10 * (x10 * x434 + x223) + x234,
            x10 * x248 + x10 * (x10 * x435 + x248) + x252,
            x10 * x260 + x10 * (x10 * x436 + x260) + x264,
            x10 * x437 + x11 * x223 + x318,
            x10 * x438 + x11 * x248 + x326,
            x10 * x439 + x11 * x260 + x336,
            x10 * x441 + x359,
            x10 * x443 + x367,
            x10 * x445 + x375,
            x11 * x437 + x446,
            x11 * x438 + x447,
            x11 * x439 + x448,
            x11 * x441 + x425,
            x11 * x443 + x429,
            x11 * x445 + x433,
            x12 * x441 + x455,
            x12 * x443 + x458,
            x12 * x445 + x461,
            x10 * x379 + x10 * (x10 * x462 + x379) + x283,
            x10 * x381 + x10 * (x10 * x463 + x381) + x291,
            x10 * x383 + x10 * (x10 * x464 + x383) + x293,
            x10 * x466 + x397,
            x10 * x468 + x400,
            x10 * x470 + x401,
            x10 * x472 + x409,
            x10 * x474 + x413,
            x10 * x476 + x417,
            x0 * x477 + x11 * x465 + x11 * x466 + x121 * x395 - x122 * x396 + 3 * x268,
            x11 * x467
            + x11 * x468
            + x121 * x398
            - x122 * x399
            + x15 * x477
            + 3 * x288
            + x63 * (x121 * x391 - x122 * x392 + 3 * x272),
            x11 * x469 + x11 * x470 + x16 * x477,
            x11 * x472 + x12 * x465 + x479,
            x11 * x474 + x12 * x467 + x480,
            x11 * x476 + x12 * x469 + x481,
            x12 * x472 + x484,
            x12 * x474 + x486,
            x12 * x476 + x488,
            x10 * x385 + x10 * (x10 * x489 + x385) + x318,
            x10 * x387 + x10 * (x10 * x490 + x387) + x326,
            x10 * x389 + x10 * (x10 * x491 + x389) + x336,
            x10 * x492 + x446,
            x10 * x493 + x447,
            x10 * x494 + x448,
            x10 * x496 + x425,
            x10 * x498 + x429,
            x10 * x500 + x433,
            x11 * x471 + x11 * x492 + x479,
            x11 * x473 + x11 * x493 + x480,
            x11 * x475 + x11 * x494 + x481,
            x11 * x496 + x484,
            x11 * x498 + x486,
            x11 * x500 + x488,
            x12 * x496 + x502,
            x12 * x498 + x503,
            x12 * x500 + x504,
            x10 * x440 + x10 * (x10 * x505 + x440) + x358,
            x10 * x442 + x10 * (x10 * x506 + x442) + x366,
            x10 * x444 + x10 * (x10 * x507 + x444) + x374,
            x10 * x508 + x11 * x440 + x424,
            x10 * x509 + x11 * x442 + x428,
            x10 * x510 + x11 * x444 + x432,
            x10 * x512 + x455,
            x10 * x514 + x458,
            x10 * x516 + x461,
            x11 * x495 + x11 * x508 + x483,
            x11 * x497 + x11 * x509 + x485,
            x11 * x499 + x11 * x510 + x487,
            x11 * x512 + x502,
            x11 * x514 + x503,
            x11 * x516 + x504,
            x0 * x517 + x12 * x511 + x12 * x512 + x185 * x453 - x186 * x454 + 3 * x341,
            x12 * x513 + x12 * x514 + x15 * x517 + x185 * x456 - x186 * x457 + 3 * x363,
            x12 * x515
            + x12 * x516
            + x16 * x517
            + x185 * x459
            - x186 * x460
            + 3 * x371
            + x63 * (x185 * x449 - x186 * x450 + 3 * x345),
        ]
    )
    return S


def eri_2202(a, A, b, B, c, C, d, D):
    """Cartesian [dd|sd] 2-electron electron repulsion integral.

    Generated code; DO NOT modify by hand!"""

    x0 = 2 * a + 2 * b
    x1 = x0 ** (-1.0)
    x2 = 2 * c + 2 * d
    x3 = x2 ** (-1.0)
    x4 = numpy.pi**2.5
    x5 = a + b
    x6 = c + d
    x7 = x5 * x6
    x8 = x5 + x6
    x9 = (x7 + numpy.sqrt(x8)) ** (-1.0)
    x10 = x5 ** (-1.0)
    x11 = A[0] - B[0]
    x12 = A[1] - B[1]
    x13 = A[2] - B[2]
    x14 = numpy.exp(-a * b * x10 * (x11**2 + x12**2 + x13**2))
    x15 = x6 ** (-1.0)
    x16 = C[0] - D[0]
    x17 = C[1] - D[1]
    x18 = C[2] - D[2]
    x19 = x18**2
    x20 = numpy.exp(-c * d * x15 * (x16**2 + x17**2 + x19))
    x21 = x8 ** (-1.0)
    x22 = x15 * (c * C[0] + d * D[0])
    x23 = -x10 * (a * A[0] + b * B[0])
    x24 = -x22 - x23
    x25 = x15 * (c * C[1] + d * D[1])
    x26 = -x10 * (a * A[1] + b * B[1])
    x27 = -x25 - x26
    x28 = -x10 * (a * A[2] + b * B[2])
    x29 = -x15 * (c * C[2] + d * D[2]) - x28
    x30 = x21 * x7 * (x24**2 + x27**2 + x29**2)
    x31 = boys(2, x30)
    x32 = -2 * x14 * x20 * x31 * x4 * x9
    x33 = x21 * x5
    x34 = boys(3, x30)
    x35 = 2 * x14 * x20 * x4 * x9
    x36 = x34 * x35
    x37 = x3 * (-x32 - x33 * x36)
    x38 = x22 - C[0]
    x39 = x31 * x35
    x40 = x24 * x33
    x41 = x36 * x40 + x38 * x39
    x42 = boys(4, x30)
    x43 = x35 * x42
    x44 = x36 * x38 + x40 * x43
    x45 = x37 + x38 * x41 + x40 * x44
    x46 = x21 * x6
    x47 = x45 * x46
    x48 = boys(1, x30)
    x49 = -2 * x14 * x20 * x4 * x48 * x9
    x50 = x3 * (-x33 * x39 - x49)
    x51 = x35 * x48
    x52 = x38 * x51 + x39 * x40
    x53 = x38 * x52 + x40 * x41 + x50
    x54 = x1 * (-x47 + x53)
    x55 = -x23 - A[0]
    x56 = x0 + x2
    x57 = x56 ** (-1.0)
    x58 = x24 * x46
    x59 = x43 * x58
    x60 = x36 * x55 - x59
    x61 = x44 * x46
    x62 = -x24 * x61 + x41 * x55 + x57 * x60
    x63 = 2 * x57
    x64 = -x24 * x47 + x53 * x55 + x62 * x63
    x65 = -2 * x14 * x20 * x34 * x4 * x9
    x66 = x3 * (-x33 * x43 - x65)
    x67 = x35 * boys(5, x30)
    x68 = x38 * x43 + x40 * x67
    x69 = x38 * x44 + x40 * x68 + x66
    x70 = x46 * x69
    x71 = x43 * x55 - x58 * x67
    x72 = x46 * x68
    x73 = -x24 * x72 + x44 * x55 + x57 * x71
    x74 = -x24 * x70 + x45 * x55 + x63 * x73
    x75 = x46 * x74
    x76 = x1 * (x41 - x61)
    x77 = x1 * (-x43 * x46 - x65)
    x78 = x46 * x71
    x79 = -x24 * x78 + x55 * x60 + x77
    x80 = x46 * x73
    x81 = -x24 * x80 + x55 * x62 + x57 * x79 + x76
    x82 = -x24 * x75 + x54 + x55 * x64 + x63 * x81
    x83 = x46 * x82
    x84 = x46 * x53
    x85 = boys(0, x30)
    x86 = -2 * x14 * x20 * x4 * x85 * x9
    x87 = x3 * (-x33 * x51 - x86)
    x88 = x35 * x85
    x89 = x38 * x88 + x40 * x51
    x90 = x38 * x89 + x40 * x52 + x87
    x91 = x1 * (-x84 + x90)
    x92 = x36 * x58
    x93 = x39 * x55 - x92
    x94 = x41 * x46
    x95 = -x24 * x94 + x52 * x55 + x57 * x93
    x96 = -x24 * x84 + x55 * x90 + x63 * x95
    x97 = x46 * x64
    x98 = x1 * (x52 - x94)
    x99 = x1 * (-x32 - x36 * x46)
    x100 = x46 * x60
    x101 = -x100 * x24 + x55 * x93 + x99
    x102 = x46 * x62
    x103 = x101 * x57 - x102 * x24 + x55 * x95 + x98
    x104 = x103 * x63 - x24 * x97 + x55 * x96 + x91
    x105 = 3 * x1
    x106 = x101 * x46
    x107 = x1 * (-x39 * x46 - x49)
    x108 = x39 * x58
    x109 = -x108 + x51 * x55
    x110 = x46 * x93
    x111 = x107 + x109 * x55 - x110 * x24
    x112 = 2 * x1
    x113 = (
        -x106 * x24
        + x111 * x55
        + x112 * (-x108 - x110 + 2 * x14 * x20 * x4 * x48 * x55 * x9)
    )
    x114 = x46 * x79
    x115 = (
        x101 * x55
        + x112 * (-x100 + 2 * x14 * x20 * x31 * x4 * x55 * x9 - x92)
        - x114 * x24
    )
    x116 = x103 * x46
    x117 = x46 * x52
    x118 = x1 * (-x117 + x89)
    x119 = x109 * x57 - x117 * x24 + x55 * x89
    x120 = x46 * x95
    x121 = x111 * x57 + x118 + x119 * x55 - x120 * x24
    x122 = x112 * (x119 - x120) + x113 * x57 - x116 * x24 + x121 * x55
    x123 = x46 * x81
    x124 = x103 * x55 + x112 * (-x102 + x95) + x115 * x57 - x123 * x24
    x125 = (
        x105 * (-x116 + x121)
        + x122 * x55
        - x124 * x58
        + x57 * (x105 * (-x106 + x111) + x113 * x55 - x115 * x58)
    )
    x126 = -2 * x14 * x20 * x4 * x42 * x9
    x127 = x1 * (-x126 - x46 * x67)
    x128 = x35 * boys(6, x30)
    x129 = -x128 * x58 + x55 * x67
    x130 = x127 - x129 * x58 + x55 * x71
    x131 = (
        x112 * (2 * x14 * x20 * x34 * x4 * x55 * x9 - x59 - x78) - x130 * x58 + x55 * x79
    )
    x132 = x1 * (x44 - x72)
    x133 = x128 * x40 + x38 * x67
    x134 = x129 * x57 - x133 * x58 + x55 * x68
    x135 = x130 * x57 + x132 - x134 * x58 + x55 * x73
    x136 = x112 * (x62 - x80) + x131 * x57 - x135 * x58 + x55 * x81
    x137 = x104 * x55 + x112 * (x96 - x97) + x124 * x63 - x24 * x83
    x138 = x1 * (x45 - x70)
    x139 = x3 * (-x126 - x33 * x67)
    x140 = x133 * x40 + x139 + x38 * x68
    x141 = x111 * x46
    x142 = x1 * (-x46 * x51 - x86)
    x143 = x51 * x58
    x144 = x109 * x46
    x145 = x142 - x144 * x24 + x55 * (-x143 + x55 * x88)
    x146 = (
        x112 * (2 * x14 * x20 * x4 * x55 * x85 * x9 - x143 - x144)
        - x141 * x24
        + x145 * x55
    )
    x147 = x105 * (-x141 + x145) - x113 * x58 + x146 * x55
    x148 = x147 * x16
    x149 = x146 * x16
    x150 = x122 * x16 + x137 + x16 * (x122 + x149)
    x151 = x145 * x16
    x152 = x104 + x121 * x16 + x16 * (x121 + x151)
    x153 = x25 - C[1]
    x154 = x27 * x33
    x155 = x153 * x36 + x154 * x43
    x156 = x155 * x46
    x157 = x153 * x39 + x154 * x36
    x158 = x1 * (-x156 + x157)
    x159 = x156 * x24
    x160 = x157 * x55 - x159
    x161 = x153 * x43 + x154 * x67
    x162 = x161 * x46
    x163 = x155 * x55 - x162 * x24
    x164 = x163 * x46
    x165 = x158 + x160 * x55 - x164 * x24
    x166 = x165 * x46
    x167 = x157 * x46
    x168 = x153 * x51 + x154 * x39
    x169 = x1 * (-x167 + x168)
    x170 = x167 * x24
    x171 = x168 * x55 - x170
    x172 = x160 * x46
    x173 = x169 + x171 * x55 - x172 * x24
    x174 = x112 * (x168 * x55 - x170 - x172) - x166 * x24 + x173 * x55
    x175 = x1 * (x155 - x162)
    x176 = x128 * x154 + x153 * x67
    x177 = x161 * x55 - x176 * x58
    x178 = x163 * x55 + x175 - x177 * x58
    x179 = x112 * (x157 * x55 - x159 - x164) + x165 * x55 - x178 * x58
    x180 = x155 * x40 + x157 * x38
    x181 = x180 * x46
    x182 = x157 * x40 + x168 * x38
    x183 = x1 * (-x181 + x182)
    x184 = x160 * x57 - x181 * x24 + x182 * x55
    x185 = x155 * x38 + x161 * x40
    x186 = x185 * x46
    x187 = x163 * x57 + x180 * x55 - x186 * x24
    x188 = x187 * x46
    x189 = x165 * x57 + x183 + x184 * x55 - x188 * x24
    x190 = x189 * x46
    x191 = x182 * x46
    x192 = x153 * x88 + x154 * x51
    x193 = x168 * x40 + x192 * x38
    x194 = x1 * (-x191 + x193)
    x195 = x171 * x57 - x191 * x24 + x193 * x55
    x196 = x184 * x46
    x197 = x173 * x57 + x194 + x195 * x55 - x196 * x24
    x198 = x147 * x17
    x199 = x173 * x46
    x200 = x168 * x46
    x201 = x1 * (x192 - x200)
    x202 = x200 * x24
    x203 = x171 * x46
    x204 = x201 - x203 * x24 + x55 * (x192 * x55 - x202)
    x205 = x112 * (x192 * x55 - x202 - x203) - x199 * x24 + x204 * x55
    x206 = x105 * (-x199 + x204) - x174 * x58 + x205 * x55
    x207 = x198 + x206
    x208 = x112 * (x195 - x196) + x174 * x57 - x190 * x24 + x197 * x55
    x209 = x1 * (x180 - x186)
    x210 = x161 * x38 + x176 * x40
    x211 = x146 * x17
    x212 = x205 + x211
    x213 = x122 * x17 + x16 * x212 + x208
    x214 = x145 * x17
    x215 = x204 + x214
    x216 = x121 * x17 + x16 * x215 + x197
    x217 = x122 * x18 + x149 * x18
    x218 = x121 * x18 + x151 * x18
    x219 = x153 * x157 + x154 * x155 + x37
    x220 = x219 * x46
    x221 = x153 * x168 + x154 * x157 + x50
    x222 = x1 * (-x220 + x221)
    x223 = x220 * x24
    x224 = x221 * x55 - x223
    x225 = x153 * x155 + x154 * x161 + x66
    x226 = x225 * x46
    x227 = x219 * x55 - x226 * x24
    x228 = x227 * x46
    x229 = x222 + x224 * x55 - x228 * x24
    x230 = x229 * x46
    x231 = x221 * x46
    x232 = x153 * x192 + x154 * x168 + x87
    x233 = x1 * (-x231 + x232)
    x234 = x231 * x24
    x235 = x224 * x46
    x236 = x233 - x235 * x24 + x55 * (x232 * x55 - x234)
    x237 = x112 * (x232 * x55 - x234 - x235) - x230 * x24 + x236 * x55
    x238 = x1 * (x219 - x226)
    x239 = x139 + x153 * x161 + x154 * x176
    x240 = x17 * x205 + x17 * x212 + x237
    x241 = x17 * x204 + x17 * x215 + x236
    x242 = x18 * x205 + x18 * x211
    x243 = x18 * x204 + x18 * x214
    x244 = x146 * x19
    x245 = x145 * x19
    x246 = -x26 - A[1]
    x247 = x117 * x27
    x248 = x27 * x94
    x249 = x246 * x52 - x248
    x250 = x249 * x46
    x251 = x1 * (x246 * x89 - x247 - x250)
    x252 = x27 * x46
    x253 = x252 * x39
    x254 = x252 * x36
    x255 = x246 * x39 - x254
    x256 = x255 * x46
    x257 = x1 * (2 * x14 * x20 * x246 * x4 * x48 * x9 - x253 - x256)
    x258 = x246 * x51 - x253
    x259 = x24 * x256
    x260 = x258 * x55 - x259
    x261 = x252 * x43
    x262 = x246 * x36 - x261
    x263 = x262 * x46
    x264 = x24 * x263
    x265 = x255 * x55 - x264
    x266 = x265 * x46
    x267 = -x24 * x266 + x257 + x260 * x55
    x268 = x246 * x89 - x247
    x269 = -x24 * x250 + x260 * x57 + x268 * x55
    x270 = x27 * x61
    x271 = x246 * x41 - x270
    x272 = x271 * x46
    x273 = -x24 * x272 + x249 * x55 + x265 * x57
    x274 = x273 * x46
    x275 = -x24 * x274 + x251 + x267 * x57 + x269 * x55
    x276 = x252 * x51
    x277 = x258 * x46
    x278 = x1 * (2 * x14 * x20 * x246 * x4 * x85 * x9 - x276 - x277)
    x279 = x246 * x88 - x276
    x280 = x24 * x277
    x281 = x279 * x55 - x280
    x282 = x260 * x46
    x283 = -x24 * x282 + x278 + x281 * x55
    x284 = x16 * x283
    x285 = x27 * x84
    x286 = x27 * x47
    x287 = x246 * x53 - x286
    x288 = x287 * x46
    x289 = x1 * (x246 * x90 - x285 - x288)
    x290 = x246 * x90 - x285
    x291 = -x24 * x288 + x273 * x63 + x290 * x55
    x292 = x246 * x45 - x27 * x70
    x293 = x292 * x46
    x294 = x246 * x43 - x252 * x67
    x295 = x294 * x46
    x296 = -x24 * x295 + x262 * x55
    x297 = x246 * x44 - x27 * x72
    x298 = x297 * x46
    x299 = -x24 * x298 + x271 * x55 + x296 * x57
    x300 = -x24 * x293 + x287 * x55 + x299 * x63
    x301 = x300 * x46
    x302 = x1 * (x246 * x52 - x248 - x272)
    x303 = x1 * (2 * x14 * x20 * x246 * x31 * x4 * x9 - x254 - x263)
    x304 = x296 * x46
    x305 = -x24 * x304 + x265 * x55 + x303
    x306 = x299 * x46
    x307 = -x24 * x306 + x273 * x55 + x302 + x305 * x57
    x308 = -x24 * x301 + x289 + x291 * x55 + x307 * x63
    x309 = x16 * x275 + x16 * (x275 + x284) + x308
    x310 = x12 * x152 + x309
    x311 = (
        x112 * (x269 - x274)
        + x275 * x55
        - x307 * x58
        + x57 * (x112 * (x258 * x55 - x259 - x266) + x267 * x55 - x305 * x58)
    )
    x312 = x112 * (x279 * x55 - x280 - x282) - x267 * x58 + x283 * x55
    x313 = x16 * x312
    x314 = x1 * (2 * x14 * x20 * x246 * x34 * x4 * x9 - x261 - x295)
    x315 = -x128 * x252 + x246 * x67
    x316 = x294 * x55 - x315 * x58
    x317 = x296 * x55 + x314 - x316 * x58
    x318 = x1 * (x246 * x41 - x270 - x298)
    x319 = -x133 * x252 + x246 * x68
    x320 = x297 * x55 + x316 * x57 - x319 * x58
    x321 = x299 * x55 + x317 * x57 + x318 - x320 * x58
    x322 = x1 * (x246 * x53 - x286 - x293)
    x323 = -x140 * x252 + x246 * x69
    x324 = (
        x112 * (x291 - x301)
        + x16 * x311
        + x16 * (x311 + x313)
        + x308 * x55
        - x58
        * (x300 * x55 + x321 * x63 + x322 - x58 * (x292 * x55 + x320 * x63 - x323 * x58))
        + x63
        * (
            x112 * (x273 - x306)
            + x307 * x55
            - x321 * x58
            + x57 * (x112 * (x255 * x55 - x264 - x304) + x305 * x55 - x317 * x58)
        )
    )
    x325 = x17 * x283
    x326 = -x167 * x27 + x168 * x246 + x255 * x57
    x327 = x326 * x46
    x328 = x192 * x246 - x200 * x27 + x258 * x57
    x329 = x1 * (-x327 + x328)
    x330 = x24 * x327
    x331 = x328 * x55 - x330
    x332 = -x156 * x27 + x157 * x246 + x262 * x57
    x333 = x332 * x46
    x334 = x24 * x333
    x335 = x326 * x55 - x334
    x336 = x335 * x46
    x337 = -x24 * x336 + x329 + x331 * x55
    x338 = x325 + x337
    x339 = -x181 * x27 + x182 * x246 + x271 * x57
    x340 = x339 * x46
    x341 = -x191 * x27 + x193 * x246 + x249 * x57
    x342 = x1 * (-x340 + x341)
    x343 = x1 * (x326 - x333)
    x344 = x155 * x246 - x162 * x27 + x294 * x57
    x345 = x344 * x46
    x346 = -x24 * x345 + x332 * x55
    x347 = x346 * x46
    x348 = -x24 * x347 + x335 * x55 + x343
    x349 = -x24 * x340 + x335 * x57 + x341 * x55
    x350 = x180 * x246 - x186 * x27 + x297 * x57
    x351 = x350 * x46
    x352 = -x24 * x351 + x339 * x55 + x346 * x57
    x353 = x352 * x46
    x354 = -x24 * x353 + x342 + x348 * x57 + x349 * x55
    x355 = x16 * x338 + x17 * x275 + x354
    x356 = x12 * x216 + x355
    x357 = x1 * (x332 - x345)
    x358 = x161 * x246 - x176 * x252 + x315 * x57
    x359 = x344 * x55 - x358 * x58
    x360 = x346 * x55 + x357 - x359 * x58
    x361 = x17 * x312
    x362 = x112 * (x328 * x55 - x330 - x336) + x337 * x55 - x348 * x58
    x363 = x361 + x362
    x364 = x1 * (x339 - x351)
    x365 = x185 * x246 - x210 * x252 + x319 * x57
    x366 = (
        x112 * (x349 - x353)
        + x16 * x363
        + x17 * x311
        + x354 * x55
        + x57 * (x112 * (x326 * x55 - x334 - x347) + x348 * x55 - x360 * x58)
        - x58
        * (x352 * x55 + x360 * x57 + x364 - x58 * (x350 * x55 + x359 * x57 - x365 * x58))
    )
    x367 = x18 * x275 + x18 * x284
    x368 = x12 * x218 + x367
    x369 = x18 * x311 + x18 * x313
    x370 = -x220 * x27 + x221 * x246 + x332 * x63
    x371 = x370 * x46
    x372 = -x231 * x27 + x232 * x246 + x326 * x63
    x373 = x1 * (-x371 + x372)
    x374 = x24 * x371
    x375 = x372 * x55 - x374
    x376 = x219 * x246 - x226 * x27 + x344 * x63
    x377 = x376 * x46
    x378 = -x24 * x377 + x370 * x55
    x379 = x378 * x46
    x380 = -x24 * x379 + x373 + x375 * x55
    x381 = x17 * x337 + x17 * x338 + x380
    x382 = x12 * x241 + x381
    x383 = x1 * (x370 - x377)
    x384 = x225 * x246 - x239 * x252 + x358 * x63
    x385 = (
        x112 * (x372 * x55 - x374 - x379)
        + x17 * x362
        + x17 * x363
        + x380 * x55
        - x58 * (x378 * x55 + x383 - x58 * (x376 * x55 - x384 * x58))
    )
    x386 = x18 * x325 + x18 * x337
    x387 = x12 * x243 + x386
    x388 = x18 * x361 + x18 * x362
    x389 = x19 * x283
    x390 = x12 * x245 + x389
    x391 = x19 * x312
    x392 = -x28 - A[2]
    x393 = x117 * x29
    x394 = x29 * x94
    x395 = x392 * x52 - x394
    x396 = x395 * x46
    x397 = x1 * (x392 * x89 - x393 - x396)
    x398 = x29 * x46
    x399 = x39 * x398
    x400 = x36 * x398
    x401 = x39 * x392 - x400
    x402 = x401 * x46
    x403 = x1 * (2 * x14 * x20 * x392 * x4 * x48 * x9 - x399 - x402)
    x404 = x392 * x51 - x399
    x405 = x404 * x55
    x406 = x24 * x402
    x407 = x405 - x406
    x408 = x401 * x55
    x409 = x398 * x43
    x410 = x36 * x392 - x409
    x411 = x410 * x46
    x412 = x24 * x411
    x413 = x408 - x412
    x414 = x413 * x46
    x415 = -x24 * x414 + x403 + x407 * x55
    x416 = x392 * x89 - x393
    x417 = -x24 * x396 + x407 * x57 + x416 * x55
    x418 = x395 * x55
    x419 = x29 * x61
    x420 = x392 * x41 - x419
    x421 = x420 * x46
    x422 = -x24 * x421 + x413 * x57 + x418
    x423 = x422 * x46
    x424 = -x24 * x423 + x397 + x415 * x57 + x417 * x55
    x425 = x398 * x51
    x426 = x404 * x46
    x427 = x1 * (2 * x14 * x20 * x392 * x4 * x85 * x9 - x425 - x426)
    x428 = x392 * x88 - x425
    x429 = x24 * x426
    x430 = x428 * x55 - x429
    x431 = x407 * x46
    x432 = -x24 * x431 + x427 + x430 * x55
    x433 = x29 * x84
    x434 = x29 * x47
    x435 = x392 * x53 - x434
    x436 = x435 * x46
    x437 = x1 * (x392 * x90 - x433 - x436)
    x438 = x392 * x90 - x433
    x439 = -x24 * x436 + x422 * x63 + x438 * x55
    x440 = -x29 * x70 + x392 * x45
    x441 = x440 * x46
    x442 = x410 * x55
    x443 = x392 * x43 - x398 * x67
    x444 = x443 * x46
    x445 = x24 * x444
    x446 = x442 - x445
    x447 = x420 * x55
    x448 = -x29 * x72 + x392 * x44
    x449 = x448 * x46
    x450 = x24 * x449
    x451 = x446 * x57 + x447 - x450
    x452 = -x24 * x441 + x435 * x55 + x451 * x63
    x453 = x452 * x46
    x454 = x1 * (x392 * x52 - x394 - x421)
    x455 = x1 * (2 * x14 * x20 * x31 * x392 * x4 * x9 - x400 - x411)
    x456 = x446 * x46
    x457 = -x24 * x456 + x413 * x55 + x455
    x458 = x451 * x46
    x459 = -x24 * x458 + x422 * x55 + x454 + x457 * x57
    x460 = -x24 * x453 + x437 + x439 * x55 + x459 * x63
    x461 = x16 * x424 + x16 * (x16 * x432 + x424) + x460
    x462 = x13 * x152 + x461
    x463 = (
        x112 * (x417 - x423)
        + x424 * x55
        - x459 * x58
        + x57 * (x112 * (x404 * x55 - x406 - x414) + x415 * x55 - x457 * x58)
    )
    x464 = x112 * (x428 * x55 - x429 - x431) - x415 * x58 + x432 * x55
    x465 = x1 * (2 * x14 * x20 * x34 * x392 * x4 * x9 - x409 - x444)
    x466 = x443 * x55
    x467 = -x128 * x398 + x392 * x67
    x468 = x467 * x58
    x469 = x466 - x468
    x470 = x446 * x55 + x465 - x469 * x58
    x471 = x1 * (x392 * x41 - x419 - x449)
    x472 = x448 * x55
    x473 = -x133 * x398 + x392 * x68
    x474 = x473 * x58
    x475 = x469 * x57 + x472 - x474
    x476 = x451 * x55 + x470 * x57 + x471 - x475 * x58
    x477 = x1 * (x392 * x53 - x434 - x441)
    x478 = -x140 * x398 + x392 * x69
    x479 = (
        x112 * (x439 - x453)
        + x16 * x463
        + x16 * (x16 * x464 + x463)
        + x460 * x55
        - x58
        * (x452 * x55 + x476 * x63 + x477 - x58 * (x440 * x55 + x475 * x63 - x478 * x58))
        + x63
        * (
            x112 * (x422 - x458)
            + x459 * x55
            - x476 * x58
            + x57 * (x112 * (x401 * x55 - x412 - x456) + x457 * x55 - x470 * x58)
        )
    )
    x480 = x200 * x29
    x481 = x167 * x29
    x482 = x168 * x392 - x481
    x483 = x46 * x482
    x484 = x1 * (x192 * x392 - x480 - x483)
    x485 = x192 * x392 - x480
    x486 = x24 * x483
    x487 = x485 * x55 - x486
    x488 = x482 * x55
    x489 = x156 * x29
    x490 = x157 * x392 - x489
    x491 = x46 * x490
    x492 = x24 * x491
    x493 = x488 - x492
    x494 = x46 * x493
    x495 = -x24 * x494 + x484 + x487 * x55
    x496 = x17 * x432 + x495
    x497 = x191 * x29
    x498 = x181 * x29
    x499 = x182 * x392 - x498
    x500 = x46 * x499
    x501 = x1 * (x193 * x392 - x497 - x500)
    x502 = x1 * (x168 * x392 - x481 - x491)
    x503 = x490 * x55
    x504 = x155 * x392 - x162 * x29
    x505 = x46 * x504
    x506 = x24 * x505
    x507 = x503 - x506
    x508 = x46 * x507
    x509 = -x24 * x508 + x493 * x55 + x502
    x510 = x193 * x392 - x497
    x511 = -x24 * x500 + x493 * x57 + x510 * x55
    x512 = x180 * x392 - x186 * x29
    x513 = x46 * x512
    x514 = -x24 * x513 + x499 * x55 + x507 * x57
    x515 = x46 * x514
    x516 = -x24 * x515 + x501 + x509 * x57 + x511 * x55
    x517 = x16 * x496 + x17 * x424 + x516
    x518 = x13 * x216 + x517
    x519 = x1 * (x157 * x392 - x489 - x505)
    x520 = x504 * x55
    x521 = x161 * x392 - x176 * x398
    x522 = x521 * x58
    x523 = x520 - x522
    x524 = x507 * x55 + x519 - x523 * x58
    x525 = x112 * (x485 * x55 - x486 - x494) + x495 * x55 - x509 * x58
    x526 = x17 * x464 + x525
    x527 = x1 * (x182 * x392 - x498 - x513)
    x528 = x185 * x392 - x210 * x398
    x529 = (
        x112 * (x511 - x515)
        + x16 * x526
        + x17 * x463
        + x516 * x55
        + x57 * (x112 * (x482 * x55 - x492 - x508) + x509 * x55 - x524 * x58)
        - x58
        * (x514 * x55 + x524 * x57 + x527 - x58 * (x512 * x55 + x523 * x57 - x528 * x58))
    )
    x530 = x401 * x57
    x531 = x1 * (x404 * x57 - x46 * x530)
    x532 = x530 * x58
    x533 = x405 * x57 - x532
    x534 = x410 * x57
    x535 = x534 * x58
    x536 = x408 * x57 - x535
    x537 = x46 * x536
    x538 = -x24 * x537 + x531 + x533 * x55
    x539 = x18 * x432 + x538
    x540 = x420 * x57
    x541 = x1 * (x395 * x57 - x46 * x540)
    x542 = x1 * (x401 * x57 - x46 * x534)
    x543 = x442 * x57 - x445 * x57
    x544 = x46 * x543
    x545 = -x24 * x544 + x536 * x55 + x542
    x546 = x418 * x57 + x536 * x57 - x540 * x58
    x547 = x447 * x57 - x450 * x57 + x543 * x57
    x548 = x46 * x547
    x549 = -x24 * x548 + x541 + x545 * x57 + x546 * x55
    x550 = x16 * x539 + x18 * x424 + x549
    x551 = x13 * x218 + x550
    x552 = x444 * x57
    x553 = x1 * (x410 * x57 - x552)
    x554 = x466 * x57 - x468 * x57
    x555 = x543 * x55 + x553 - x554 * x58
    x556 = x112 * (x404 * x55 * x57 - x532 - x537) + x538 * x55 - x545 * x58
    x557 = x18 * x464 + x556
    x558 = x449 * x57
    x559 = x1 * (x420 * x57 - x558)
    x560 = (
        x112 * (x546 - x548)
        + x16 * x557
        + x18 * x463
        + x549 * x55
        + x57 * (x112 * (x401 * x55 * x57 - x535 - x544) + x545 * x55 - x555 * x58)
        - x58
        * (x547 * x55 + x555 * x57 + x559 - x58 * (x472 * x57 - x474 * x57 + x554 * x57))
    )
    x561 = x231 * x29
    x562 = x220 * x29
    x563 = x221 * x392 - x562
    x564 = x46 * x563
    x565 = x1 * (x232 * x392 - x561 - x564)
    x566 = x232 * x392 - x561
    x567 = x24 * x564
    x568 = x55 * x566 - x567
    x569 = x219 * x392 - x226 * x29
    x570 = x46 * x569
    x571 = -x24 * x570 + x55 * x563
    x572 = x46 * x571
    x573 = -x24 * x572 + x55 * x568 + x565
    x574 = x17 * x495 + x17 * x496 + x573
    x575 = x13 * x241 + x574
    x576 = x1 * (x221 * x392 - x562 - x570)
    x577 = x225 * x392 - x239 * x398
    x578 = (
        x112 * (x55 * x566 - x567 - x572)
        + x17 * x525
        + x17 * x526
        + x55 * x573
        - x58 * (x55 * x571 + x576 - x58 * (x55 * x569 - x577 * x58))
    )
    x579 = x490 * x57
    x580 = x1 * (-x46 * x579 + x482 * x57)
    x581 = x579 * x58
    x582 = x488 * x57 - x581
    x583 = x503 * x57 - x506 * x57
    x584 = x46 * x583
    x585 = -x24 * x584 + x55 * x582 + x580
    x586 = x17 * x539 + x18 * x495 + x585
    x587 = x13 * x243 + x586
    x588 = x505 * x57
    x589 = x1 * (x490 * x57 - x588)
    x590 = (
        x112 * (x482 * x55 * x57 - x581 - x584)
        + x17 * x557
        + x18 * x525
        + x55 * x585
        - x58 * (x55 * x583 - x58 * (x520 * x57 - x522 * x57) + x589)
    )
    x591 = x56 ** (-2.0)
    x592 = 2 * x591
    x593 = x1 * (2 * x401 * x591 - x411 * x592)
    x594 = x412 * x592
    x595 = x408 * x592 - x594
    x596 = x442 * x592 - x445 * x592
    x597 = x46 * x596
    x598 = -x24 * x597 + x55 * x595 + x593
    x599 = x18 * x538 + x18 * x539 + x598
    x600 = x13 * x245 + x599
    x601 = x1 * (2 * x410 * x591 - x444 * x592)
    x602 = (
        x112 * (2 * x401 * x55 * x591 - x594 - x597)
        + x18 * x556
        + x18 * x557
        + x55 * x598
        - x58 * (x55 * x596 - x58 * (x466 * x592 - x468 * x592) + x601)
    )
    x603 = x246 * x287 - x27 * x293 + x54
    x604 = x46 * x603
    x605 = x246 * x290 - x27 * x288 + x91
    x606 = x1 * (-x604 + x605)
    x607 = x246 * x249 - x27 * x272 + x98
    x608 = x46 * x607
    x609 = x118 + x246 * x268 - x250 * x27
    x610 = x1 * (-x608 + x609)
    x611 = x246 * x255 - x263 * x27 + x99
    x612 = x46 * x611
    x613 = x107 + x246 * x258 - x256 * x27
    x614 = x1 * (-x612 + x613)
    x615 = -x24 * x612 + x55 * x613
    x616 = x246 * x262 - x27 * x295 + x77
    x617 = x46 * x616
    x618 = -x24 * x617 + x55 * x611
    x619 = -x24 * x608 + x55 * x609 + x57 * x615
    x620 = x246 * x271 - x27 * x298 + x76
    x621 = x46 * x620
    x622 = -x24 * x621 + x55 * x607 + x57 * x618
    x623 = x55 * x619 + x57 * (x55 * x615 - x58 * x618 + x614) - x58 * x622 + x610
    x624 = x46 * x613
    x625 = x142 + x246 * x279 - x27 * x277
    x626 = x1 * (-x624 + x625)
    x627 = -x24 * x624 + x55 * x625
    x628 = x55 * x627 - x58 * x615 + x626
    x629 = x16 * x628
    x630 = -x24 * x604 + x55 * x605 + x622 * x63
    x631 = x1 * (x607 - x621)
    x632 = x1 * (x611 - x617)
    x633 = x127 + x246 * x294 - x252 * x315
    x634 = x55 * x616 - x58 * x633
    x635 = x132 + x246 * x297 - x252 * x319
    x636 = x55 * x620 + x57 * x634 - x58 * x635
    x637 = x138 + x246 * x292 - x252 * x323
    x638 = (
        x16 * x623
        + x16 * (x623 + x629)
        + x55 * x630
        - x58 * (x55 * x603 - x58 * x637 + x63 * x636)
        + x606
        + x63 * (x55 * x622 + x57 * (x55 * x618 - x58 * x634 + x632) - x58 * x636 + x631)
    )
    x639 = x12 * x309 + x638
    x640 = x183 + x246 * x339 - x27 * x351 + x57 * x620
    x641 = x46 * x640
    x642 = x194 + x246 * x341 - x27 * x340 + x57 * x607
    x643 = x1 * (-x641 + x642)
    x644 = x158 + x246 * x332 - x27 * x345 + x57 * x616
    x645 = x46 * x644
    x646 = x169 + x246 * x326 - x27 * x333 + x57 * x611
    x647 = x1 * (-x645 + x646)
    x648 = -x24 * x645 + x55 * x646
    x649 = x175 + x246 * x344 - x252 * x358 + x57 * x633
    x650 = x55 * x644 - x58 * x649
    x651 = x17 * x628
    x652 = x46 * x646
    x653 = x201 + x246 * x328 - x27 * x327 + x57 * x613
    x654 = x1 * (-x652 + x653)
    x655 = -x24 * x652 + x55 * x653
    x656 = x55 * x655 - x58 * x648 + x654
    x657 = x651 + x656
    x658 = -x24 * x641 + x55 * x642 + x57 * x648
    x659 = x209 + x246 * x350 - x252 * x365 + x57 * x635
    x660 = (
        x16 * x657
        + x17 * x623
        + x55 * x658
        + x57 * (x55 * x648 - x58 * x650 + x647)
        - x58 * (x55 * x640 + x57 * x650 - x58 * x659)
        + x643
    )
    x661 = x12 * x355 + x660
    x662 = x18 * x623 + x18 * x629
    x663 = x12 * x367 + x662
    x664 = x222 + x246 * x370 - x27 * x377 + x63 * x644
    x665 = x46 * x664
    x666 = x233 + x246 * x372 - x27 * x371 + x63 * x646
    x667 = x1 * (-x665 + x666)
    x668 = -x24 * x665 + x55 * x666
    x669 = x238 + x246 * x376 - x252 * x384 + x63 * x649
    x670 = x17 * x656 + x17 * x657 + x55 * x668 - x58 * (x55 * x664 - x58 * x669) + x667
    x671 = x12 * x381 + x670
    x672 = x18 * x651 + x18 * x656
    x673 = x12 * x386 + x672
    x674 = x19 * x628
    x675 = x12 * x389 + x674
    x676 = x27 * x436
    x677 = x246 * x435 - x27 * x441
    x678 = x46 * x677
    x679 = x1 * (x246 * x438 - x676 - x678)
    x680 = x27 * x396
    x681 = x27 * x421
    x682 = x246 * x395 - x681
    x683 = x46 * x682
    x684 = x1 * (x246 * x416 - x680 - x683)
    x685 = x27 * x402
    x686 = x246 * x401
    x687 = x27 * x411
    x688 = x686 - x687
    x689 = x46 * x688
    x690 = x1 * (x246 * x404 - x685 - x689)
    x691 = x246 * x404 - x685
    x692 = -x24 * x689 + x55 * x691
    x693 = x246 * x410
    x694 = x27 * x444
    x695 = x693 - x694
    x696 = x46 * x695
    x697 = -x24 * x696 + x55 * x688
    x698 = x246 * x416 - x680
    x699 = -x24 * x683 + x55 * x698 + x57 * x692
    x700 = x246 * x420 - x27 * x449
    x701 = x46 * x700
    x702 = -x24 * x701 + x55 * x682 + x57 * x697
    x703 = x55 * x699 + x57 * (x55 * x692 - x58 * x697 + x690) - x58 * x702 + x684
    x704 = x27 * x426
    x705 = x46 * x691
    x706 = x1 * (x246 * x428 - x704 - x705)
    x707 = x246 * x428 - x704
    x708 = -x24 * x705 + x55 * x707
    x709 = x55 * x708 - x58 * x692 + x706
    x710 = x246 * x438 - x676
    x711 = -x24 * x678 + x55 * x710 + x63 * x702
    x712 = x1 * (x246 * x395 - x681 - x701)
    x713 = x1 * (x246 * x401 - x687 - x696)
    x714 = x246 * x443
    x715 = x252 * x467
    x716 = x714 - x715
    x717 = x55 * x695 - x58 * x716
    x718 = x246 * x448
    x719 = x252 * x473
    x720 = x718 - x719
    x721 = x55 * x700 + x57 * x717 - x58 * x720
    x722 = x246 * x440 - x252 * x478
    x723 = (
        x16 * x703
        + x16 * (x16 * x709 + x703)
        + x55 * x711
        - x58 * (x55 * x677 - x58 * x722 + x63 * x721)
        + x63 * (x55 * x702 + x57 * (x55 * x697 - x58 * x717 + x713) - x58 * x721 + x712)
        + x679
    )
    x724 = x13 * x309 + x723
    x725 = x246 * x499 - x27 * x513 + x57 * x700
    x726 = x46 * x725
    x727 = x246 * x510 - x27 * x500 + x57 * x682
    x728 = x1 * (-x726 + x727)
    x729 = x246 * x490 - x27 * x505 + x57 * x695
    x730 = x46 * x729
    x731 = x246 * x482 - x27 * x491 + x57 * x688
    x732 = x1 * (-x730 + x731)
    x733 = -x24 * x730 + x55 * x731
    x734 = x246 * x504
    x735 = x252 * x521
    x736 = x57 * x716 + x734 - x735
    x737 = x55 * x729 - x58 * x736
    x738 = x46 * x731
    x739 = x246 * x485 - x27 * x483 + x57 * x691
    x740 = x1 * (-x738 + x739)
    x741 = -x24 * x738 + x55 * x739
    x742 = x55 * x741 - x58 * x733 + x740
    x743 = x17 * x709 + x742
    x744 = -x24 * x726 + x55 * x727 + x57 * x733
    x745 = x246 * x512 - x252 * x528 + x57 * x720
    x746 = (
        x16 * x743
        + x17 * x703
        + x55 * x744
        + x57 * (x55 * x733 - x58 * x737 + x732)
        - x58 * (x55 * x725 + x57 * x737 - x58 * x745)
        + x728
    )
    x747 = x13 * x355 + x746
    x748 = x252 * x540
    x749 = x246 * x540 - x27 * x558
    x750 = x46 * x749
    x751 = x1 * (x246 * x395 * x57 - x748 - x750)
    x752 = x252 * x534
    x753 = x246 * x534 - x27 * x552
    x754 = x46 * x753
    x755 = x1 * (x246 * x401 * x57 - x752 - x754)
    x756 = x246 * x530 - x752
    x757 = -x24 * x754 + x55 * x756
    x758 = x57 * x714 - x57 * x715
    x759 = x55 * x753 - x58 * x758
    x760 = x252 * x530
    x761 = x46 * x756
    x762 = x1 * (x246 * x404 * x57 - x760 - x761)
    x763 = x404 * x57
    x764 = x246 * x763 - x760
    x765 = -x24 * x761 + x55 * x764
    x766 = x55 * x765 - x58 * x757 + x762
    x767 = x18 * x709 + x766
    x768 = x395 * x57
    x769 = x246 * x768 - x748
    x770 = -x24 * x750 + x55 * x769 + x57 * x757
    x771 = x57 * x718 - x57 * x719
    x772 = (
        x16 * x767
        + x18 * x703
        + x55 * x770
        + x57 * (x55 * x757 - x58 * x759 + x755)
        - x58 * (x55 * x749 + x57 * x759 - x58 * x771)
        + x751
    )
    x773 = x13 * x367 + x772
    x774 = x246 * x563 - x27 * x570 + x63 * x729
    x775 = x46 * x774
    x776 = x246 * x566 - x27 * x564 + x63 * x731
    x777 = x1 * (-x775 + x776)
    x778 = -x24 * x775 + x55 * x776
    x779 = x246 * x569 - x252 * x577 + x63 * x736
    x780 = x17 * x742 + x17 * x743 + x55 * x778 - x58 * (x55 * x774 - x58 * x779) + x777
    x781 = x13 * x381 + x780
    x782 = x246 * x579 - x27 * x588 + x57 * x753
    x783 = x46 * x782
    x784 = x482 * x57
    x785 = x246 * x784 - x252 * x579 + x57 * x756
    x786 = x1 * (-x783 + x785)
    x787 = -x24 * x783 + x55 * x785
    x788 = x57 * x734 - x57 * x735 + x57 * x758
    x789 = x17 * x767 + x18 * x742 + x55 * x787 - x58 * (x55 * x782 - x58 * x788) + x786
    x790 = x13 * x386 + x789
    x791 = x592 * x687
    x792 = x592 * x693 - x592 * x694
    x793 = x46 * x792
    x794 = x1 * (2 * x246 * x401 * x591 - x791 - x793)
    x795 = x592 * x686 - x791
    x796 = -x24 * x793 + x55 * x795
    x797 = x592 * x714 - x592 * x715
    x798 = x18 * x766 + x18 * x767 + x55 * x796 - x58 * (x55 * x792 - x58 * x797) + x794
    x799 = x13 * x389 + x798
    x800 = -x29 * x441 + x392 * x435 + x54
    x801 = x46 * x800
    x802 = -x29 * x436 + x392 * x438 + x91
    x803 = x1 * (-x801 + x802)
    x804 = -x29 * x421 + x392 * x395 + x98
    x805 = x46 * x804
    x806 = x118 - x29 * x396 + x392 * x416
    x807 = x1 * (-x805 + x806)
    x808 = x392 * x401
    x809 = x29 * x411
    x810 = x808 - x809 + x99
    x811 = x46 * x810
    x812 = x107 - x29 * x402 + x392 * x404
    x813 = x1 * (-x811 + x812)
    x814 = -x24 * x811 + x55 * x812
    x815 = x392 * x410
    x816 = x29 * x444
    x817 = x77 + x815 - x816
    x818 = x46 * x817
    x819 = -x24 * x818 + x55 * x810
    x820 = -x24 * x805 + x55 * x806 + x57 * x814
    x821 = -x29 * x449 + x392 * x420 + x76
    x822 = x46 * x821
    x823 = -x24 * x822 + x55 * x804 + x57 * x819
    x824 = x55 * x820 + x57 * (x55 * x814 - x58 * x819 + x813) - x58 * x823 + x807
    x825 = x46 * x812
    x826 = x142 - x29 * x426 + x392 * x428
    x827 = x1 * (-x825 + x826)
    x828 = -x24 * x825 + x55 * x826
    x829 = x55 * x828 - x58 * x814 + x827
    x830 = -x24 * x801 + x55 * x802 + x63 * x823
    x831 = x1 * (x804 - x822)
    x832 = x1 * (x810 - x818)
    x833 = x392 * x443
    x834 = x398 * x467
    x835 = x127 + x833 - x834
    x836 = x55 * x817 - x58 * x835
    x837 = x392 * x448
    x838 = x398 * x473
    x839 = x132 + x837 - x838
    x840 = x55 * x821 + x57 * x836 - x58 * x839
    x841 = x138 + x392 * x440 - x398 * x478
    x842 = (
        x16 * x824
        + x16 * (x16 * x829 + x824)
        + x55 * x830
        - x58 * (x55 * x800 - x58 * x841 + x63 * x840)
        + x63 * (x55 * x823 + x57 * (x55 * x819 - x58 * x836 + x832) - x58 * x840 + x831)
        + x803
    )
    x843 = x13 * x461 + x842
    x844 = x183 - x29 * x513 + x392 * x499
    x845 = x46 * x844
    x846 = x194 - x29 * x500 + x392 * x510
    x847 = x1 * (-x845 + x846)
    x848 = x158 - x29 * x505 + x392 * x490
    x849 = x46 * x848
    x850 = x169 - x29 * x491 + x392 * x482
    x851 = x1 * (-x849 + x850)
    x852 = -x24 * x849 + x55 * x850
    x853 = x392 * x504
    x854 = x398 * x521
    x855 = x175 + x853 - x854
    x856 = x55 * x848 - x58 * x855
    x857 = x46 * x850
    x858 = x201 - x29 * x483 + x392 * x485
    x859 = x1 * (-x857 + x858)
    x860 = -x24 * x857 + x55 * x858
    x861 = x55 * x860 - x58 * x852 + x859
    x862 = x17 * x829 + x861
    x863 = -x24 * x845 + x55 * x846 + x57 * x852
    x864 = x209 + x392 * x512 - x398 * x528
    x865 = (
        x16 * x862
        + x17 * x824
        + x55 * x863
        + x57 * (x55 * x852 - x58 * x856 + x851)
        - x58 * (x55 * x844 + x57 * x856 - x58 * x864)
        + x847
    )
    x866 = x13 * x517 + x865
    x867 = -x29 * x558 + x392 * x540 + x57 * x821
    x868 = x46 * x867
    x869 = x392 * x768 - x398 * x540 + x57 * x804
    x870 = x1 * (-x868 + x869)
    x871 = -x29 * x552 + x392 * x534 + x57 * x817
    x872 = x46 * x871
    x873 = x392 * x530 - x398 * x534 + x57 * x810
    x874 = x1 * (-x872 + x873)
    x875 = -x24 * x872 + x55 * x873
    x876 = x57 * x833 - x57 * x834 + x57 * x835
    x877 = x55 * x871 - x58 * x876
    x878 = x46 * x873
    x879 = x392 * x763 - x398 * x530 + x57 * x812
    x880 = x1 * (-x878 + x879)
    x881 = -x24 * x878 + x55 * x879
    x882 = x55 * x881 - x58 * x875 + x880
    x883 = x18 * x829 + x882
    x884 = -x24 * x868 + x55 * x869 + x57 * x875
    x885 = x57 * x837 - x57 * x838 + x57 * x839
    x886 = (
        x16 * x883
        + x18 * x824
        + x55 * x884
        + x57 * (x55 * x875 - x58 * x877 + x874)
        - x58 * (x55 * x867 + x57 * x877 - x58 * x885)
        + x870
    )
    x887 = x13 * x550 + x886
    x888 = x222 - x29 * x570 + x392 * x563
    x889 = x46 * x888
    x890 = x233 - x29 * x564 + x392 * x566
    x891 = x1 * (-x889 + x890)
    x892 = -x24 * x889 + x55 * x890
    x893 = x238 + x392 * x569 - x398 * x577
    x894 = x17 * x861 + x17 * x862 + x55 * x892 - x58 * (x55 * x888 - x58 * x893) + x891
    x895 = x13 * x574 + x894
    x896 = -x29 * x588 + x392 * x579 + x57 * x848
    x897 = x46 * x896
    x898 = x392 * x784 - x398 * x579 + x57 * x850
    x899 = x1 * (-x897 + x898)
    x900 = -x24 * x897 + x55 * x898
    x901 = x57 * x853 - x57 * x854 + x57 * x855
    x902 = x17 * x883 + x18 * x861 + x55 * x900 - x58 * (x55 * x896 - x58 * x901) + x899
    x903 = x13 * x586 + x902
    x904 = x592 * x815 - x592 * x816 + x63 * x871
    x905 = x46 * x904
    x906 = x592 * x808 - x592 * x809 + x63 * x873
    x907 = x1 * (-x905 + x906)
    x908 = -x24 * x905 + x55 * x906
    x909 = x592 * x833 - x592 * x834 + x63 * x876
    x910 = x18 * x882 + x18 * x883 + x55 * x908 - x58 * (x55 * x904 - x58 * x909) + x907
    x911 = x13 * x599 + x910
    x912 = x16 * x281
    x913 = x16 * x269 + x16 * (x269 + x912) + x291
    x914 = x17 * x281
    x915 = x331 + x914
    x916 = x16 * x915 + x17 * x269 + x349
    x917 = x18 * x269 + x18 * x912
    x918 = x17 * x331 + x17 * x915 + x375
    x919 = x18 * x331 + x18 * x914
    x920 = x19 * x281
    x921 = x16 * x627
    x922 = x16 * x619 + x16 * (x619 + x921) + x630
    x923 = x12 * x913 + x922
    x924 = x17 * x627
    x925 = x655 + x924
    x926 = x16 * x925 + x17 * x619 + x658
    x927 = x12 * x916 + x926
    x928 = x18 * x619 + x18 * x921
    x929 = x12 * x917 + x928
    x930 = x17 * x655 + x17 * x925 + x668
    x931 = x12 * x918 + x930
    x932 = x18 * x655 + x18 * x924
    x933 = x12 * x919 + x932
    x934 = x19 * x627
    x935 = x12 * x920 + x934
    x936 = x16 * x699 + x16 * (x16 * x708 + x699) + x711
    x937 = x13 * x913 + x936
    x938 = x17 * x708 + x741
    x939 = x16 * x938 + x17 * x699 + x744
    x940 = x13 * x916 + x939
    x941 = x18 * x708 + x765
    x942 = x16 * x941 + x18 * x699 + x770
    x943 = x13 * x917 + x942
    x944 = x17 * x741 + x17 * x938 + x778
    x945 = x13 * x918 + x944
    x946 = x17 * x941 + x18 * x741 + x787
    x947 = x13 * x919 + x946
    x948 = x18 * x765 + x18 * x941 + x796
    x949 = x13 * x920 + x948
    x950 = x246 * x613 + 2 * x257 - x27 * x612
    x951 = x246 * x611 - x27 * x617 + 2 * x303
    x952 = x246 * x609 + 2 * x251 - x27 * x608
    x953 = x246 * x607 - x27 * x621 + 2 * x302
    x954 = x55 * x952 + x57 * (x55 * x950 - x58 * x951) - x58 * x953
    x955 = x246 * x625 - x27 * x624 + 2 * x278
    x956 = x55 * x955 - x58 * x950
    x957 = x16 * x956
    x958 = x246 * x605 - x27 * x604 + 2 * x289
    x959 = x246 * x616 - x252 * x633 + 2 * x314
    x960 = x246 * x620 - x252 * x635 + 2 * x318
    x961 = x246 * x603 - x252 * x637 + 2 * x322
    x962 = (
        x12 * x922
        + x16 * x954
        + x16 * (x954 + x957)
        + x55 * x958
        - x58 * x961
        + x63 * (x55 * x953 + x57 * (x55 * x951 - x58 * x959) - x58 * x960)
    )
    x963 = x246 * x646 - x27 * x645 + 2 * x343 + x57 * x951
    x964 = x246 * x644 - x252 * x649 + 2 * x357 + x57 * x959
    x965 = x17 * x956
    x966 = x246 * x653 - x27 * x652 + 2 * x329 + x57 * x950
    x967 = x55 * x966 - x58 * x963
    x968 = x965 + x967
    x969 = x246 * x642 - x27 * x641 + 2 * x342 + x57 * x953
    x970 = x246 * x640 - x252 * x659 + 2 * x364 + x57 * x960
    x971 = (
        x12 * x926
        + x16 * x968
        + x17 * x954
        + x55 * x969
        + x57 * (x55 * x963 - x58 * x964)
        - x58 * x970
    )
    x972 = x12 * x928 + x18 * x954 + x18 * x957
    x973 = x246 * x666 - x27 * x665 + 2 * x373 + x63 * x963
    x974 = x246 * x664 - x252 * x669 + 2 * x383 + x63 * x964
    x975 = x12 * x930 + x17 * x967 + x17 * x968 + x55 * x973 - x58 * x974
    x976 = x12 * x932 + x18 * x965 + x18 * x967
    x977 = x12 * x934 + x19 * x956
    x978 = x246 * x691 - x27 * x689 + x403
    x979 = x246 * x688 - x27 * x696 + x455
    x980 = x246 * x698 - x27 * x683 + x397
    x981 = x246 * x682 - x27 * x701 + x454
    x982 = x55 * x980 + x57 * (x55 * x978 - x58 * x979) - x58 * x981
    x983 = x246 * x707 - x27 * x705 + x427
    x984 = x55 * x983 - x58 * x978
    x985 = x246 * x710 - x27 * x678 + x437
    x986 = x246 * x695 - x252 * x716 + x465
    x987 = x246 * x700 - x252 * x720 + x471
    x988 = x246 * x677 - x252 * x722 + x477
    x989 = (
        x16 * x982
        + x16 * (x16 * x984 + x982)
        + x55 * x985
        - x58 * x988
        + x63 * (x55 * x981 + x57 * (x55 * x979 - x58 * x986) - x58 * x987)
    )
    x990 = x13 * x922 + x989
    x991 = x246 * x731 - x27 * x730 + x502 + x57 * x979
    x992 = x246 * x729 - x252 * x736 + x519 + x57 * x986
    x993 = x246 * x739 - x27 * x738 + x484 + x57 * x978
    x994 = x55 * x993 - x58 * x991
    x995 = x17 * x984 + x994
    x996 = x246 * x727 - x27 * x726 + x501 + x57 * x981
    x997 = x246 * x725 - x252 * x745 + x527 + x57 * x987
    x998 = (
        x16 * x995
        + x17 * x982
        + x55 * x996
        + x57 * (x55 * x991 - x58 * x992)
        - x58 * x997
    )
    x999 = x13 * x926 + x998
    x1000 = x246 * x756 - x27 * x754 + x542
    x1001 = x246 * x753 - x252 * x758 + x553
    x1002 = x246 * x764 - x27 * x761 + x531
    x1003 = -x1000 * x58 + x1002 * x55
    x1004 = x1003 + x18 * x984
    x1005 = x246 * x769 - x27 * x750 + x541
    x1006 = x246 * x749 - x252 * x771 + x559
    x1007 = (
        x1004 * x16
        + x1005 * x55
        - x1006 * x58
        + x18 * x982
        + x57 * (x1000 * x55 - x1001 * x58)
    )
    x1008 = x1007 + x13 * x928
    x1009 = x246 * x776 - x27 * x775 + x565 + x63 * x991
    x1010 = x246 * x774 - x252 * x779 + x576 + x63 * x992
    x1011 = x1009 * x55 - x1010 * x58 + x17 * x994 + x17 * x995
    x1012 = x1011 + x13 * x930
    x1013 = x1000 * x57 + x246 * x785 - x27 * x783 + x580
    x1014 = x1001 * x57 + x246 * x782 - x252 * x788 + x589
    x1015 = x1004 * x17 + x1013 * x55 - x1014 * x58 + x18 * x994
    x1016 = x1015 + x13 * x932
    x1017 = x246 * x795 - x27 * x793 + x593
    x1018 = x246 * x792 - x252 * x797 + x601
    x1019 = x1003 * x18 + x1004 * x18 + x1017 * x55 - x1018 * x58
    x1020 = x1019 + x13 * x934
    x1021 = x246 * x812 - x27 * x811
    x1022 = x246 * x810 - x27 * x818
    x1023 = x246 * x806 - x27 * x805
    x1024 = x246 * x804 - x27 * x822
    x1025 = x1023 * x55 - x1024 * x58 + x57 * (x1021 * x55 - x1022 * x58)
    x1026 = x246 * x826 - x27 * x825
    x1027 = -x1021 * x58 + x1026 * x55
    x1028 = x246 * x802 - x27 * x801
    x1029 = x246 * x817 - x252 * x835
    x1030 = x246 * x821 - x252 * x839
    x1031 = x246 * x800 - x252 * x841
    x1032 = (
        x1025 * x16
        + x1028 * x55
        - x1031 * x58
        + x16 * (x1025 + x1027 * x16)
        + x63 * (x1024 * x55 - x1030 * x58 + x57 * (x1022 * x55 - x1029 * x58))
    )
    x1033 = x1032 + x13 * x936
    x1034 = x1022 * x57 + x246 * x850 - x27 * x849
    x1035 = x1029 * x57 + x246 * x848 - x252 * x855
    x1036 = x1021 * x57 + x246 * x858 - x27 * x857
    x1037 = -x1034 * x58 + x1036 * x55
    x1038 = x1027 * x17 + x1037
    x1039 = x1024 * x57 + x246 * x846 - x27 * x845
    x1040 = x1030 * x57 + x246 * x844 - x252 * x864
    x1041 = (
        x1025 * x17
        + x1038 * x16
        + x1039 * x55
        - x1040 * x58
        + x57 * (x1034 * x55 - x1035 * x58)
    )
    x1042 = x1041 + x13 * x939
    x1043 = x246 * x873 - x27 * x872
    x1044 = x246 * x871 - x252 * x876
    x1045 = x246 * x879 - x27 * x878
    x1046 = -x1043 * x58 + x1045 * x55
    x1047 = x1027 * x18 + x1046
    x1048 = x246 * x869 - x27 * x868
    x1049 = x246 * x867 - x252 * x885
    x1050 = (
        x1025 * x18
        + x1047 * x16
        + x1048 * x55
        - x1049 * x58
        + x57 * (x1043 * x55 - x1044 * x58)
    )
    x1051 = x1050 + x13 * x942
    x1052 = x1034 * x63 + x246 * x890 - x27 * x889
    x1053 = x1035 * x63 + x246 * x888 - x252 * x893
    x1054 = x1037 * x17 + x1038 * x17 + x1052 * x55 - x1053 * x58
    x1055 = x1054 + x13 * x944
    x1056 = x1043 * x57 + x246 * x898 - x27 * x897
    x1057 = x1044 * x57 + x246 * x896 - x252 * x901
    x1058 = x1037 * x18 + x1047 * x17 + x1056 * x55 - x1057 * x58
    x1059 = x1058 + x13 * x946
    x1060 = x246 * x906 - x27 * x905
    x1061 = x246 * x904 - x252 * x909
    x1062 = x1046 * x18 + x1047 * x18 + x1060 * x55 - x1061 * x58
    x1063 = x1062 + x13 * x948
    x1064 = x16 * x417 + x16 * (x16 * x430 + x417) + x439
    x1065 = x17 * x430 + x487
    x1066 = x1065 * x16 + x17 * x417 + x511
    x1067 = x18 * x430 + x533
    x1068 = x1067 * x16 + x18 * x417 + x546
    x1069 = x1065 * x17 + x17 * x487 + x568
    x1070 = x1067 * x17 + x18 * x487 + x582
    x1071 = x1067 * x18 + x18 * x533 + x595
    x1072 = x1064 * x12 + x936
    x1073 = x1066 * x12 + x939
    x1074 = x1068 * x12 + x942
    x1075 = x1069 * x12 + x944
    x1076 = x1070 * x12 + x946
    x1077 = x1071 * x12 + x948
    x1078 = x16 * x820 + x16 * (x16 * x828 + x820) + x830
    x1079 = x1064 * x13 + x1078
    x1080 = x17 * x828 + x860
    x1081 = x1080 * x16 + x17 * x820 + x863
    x1082 = x1066 * x13 + x1081
    x1083 = x18 * x828 + x881
    x1084 = x1083 * x16 + x18 * x820 + x884
    x1085 = x1068 * x13 + x1084
    x1086 = x1080 * x17 + x17 * x860 + x892
    x1087 = x1069 * x13 + x1086
    x1088 = x1083 * x17 + x18 * x860 + x900
    x1089 = x1070 * x13 + x1088
    x1090 = x1083 * x18 + x18 * x881 + x908
    x1091 = x1071 * x13 + x1090
    x1092 = x12 * x936 + x989
    x1093 = x12 * x939 + x998
    x1094 = x1007 + x12 * x942
    x1095 = x1011 + x12 * x944
    x1096 = x1015 + x12 * x946
    x1097 = x1019 + x12 * x948
    x1098 = -x29 * x811 + x392 * x812 + 2 * x403
    x1099 = -x29 * x818 + x392 * x810 + 2 * x455
    x1100 = -x29 * x805 + x392 * x806 + 2 * x397
    x1101 = -x29 * x822 + x392 * x804 + 2 * x454
    x1102 = x1100 * x55 - x1101 * x58 + x57 * (x1098 * x55 - x1099 * x58)
    x1103 = -x29 * x825 + x392 * x826 + 2 * x427
    x1104 = -x1098 * x58 + x1103 * x55
    x1105 = -x29 * x801 + x392 * x802 + 2 * x437
    x1106 = x392 * x817 - x398 * x835 + 2 * x465
    x1107 = x392 * x821 - x398 * x839 + 2 * x471
    x1108 = x392 * x800 - x398 * x841 + 2 * x477
    x1109 = (
        x1078 * x13
        + x1102 * x16
        + x1105 * x55
        - x1108 * x58
        + x16 * (x1102 + x1104 * x16)
        + x63 * (x1101 * x55 - x1107 * x58 + x57 * (x1099 * x55 - x1106 * x58))
    )
    x1110 = -x29 * x849 + x392 * x850 + 2 * x502
    x1111 = x392 * x848 - x398 * x855 + 2 * x519
    x1112 = -x29 * x857 + x392 * x858 + 2 * x484
    x1113 = -x1110 * x58 + x1112 * x55
    x1114 = x1104 * x17 + x1113
    x1115 = -x29 * x845 + x392 * x846 + 2 * x501
    x1116 = x392 * x844 - x398 * x864 + 2 * x527
    x1117 = (
        x1081 * x13
        + x1102 * x17
        + x1114 * x16
        + x1115 * x55
        - x1116 * x58
        + x57 * (x1110 * x55 - x1111 * x58)
    )
    x1118 = x1099 * x57 - x29 * x872 + x392 * x873 + 2 * x542
    x1119 = x1106 * x57 + x392 * x871 - x398 * x876 + 2 * x553
    x1120 = x1098 * x57 - x29 * x878 + x392 * x879 + 2 * x531
    x1121 = -x1118 * x58 + x1120 * x55
    x1122 = x1104 * x18 + x1121
    x1123 = x1101 * x57 - x29 * x868 + x392 * x869 + 2 * x541
    x1124 = x1107 * x57 + x392 * x867 - x398 * x885 + 2 * x559
    x1125 = (
        x1084 * x13
        + x1102 * x18
        + x1122 * x16
        + x1123 * x55
        - x1124 * x58
        + x57 * (x1118 * x55 - x1119 * x58)
    )
    x1126 = -x29 * x889 + x392 * x890 + 2 * x565
    x1127 = x392 * x888 - x398 * x893 + 2 * x576
    x1128 = x1086 * x13 + x1113 * x17 + x1114 * x17 + x1126 * x55 - x1127 * x58
    x1129 = x1110 * x57 - x29 * x897 + x392 * x898 + 2 * x580
    x1130 = x1111 * x57 + x392 * x896 - x398 * x901 + 2 * x589
    x1131 = x1088 * x13 + x1113 * x18 + x1122 * x17 + x1129 * x55 - x1130 * x58
    x1132 = x1118 * x63 - x29 * x905 + x392 * x906 + 2 * x593
    x1133 = x1119 * x63 + x392 * x904 - x398 * x909 + 2 * x601
    x1134 = x1090 * x13 + x1121 * x18 + x1122 * x18 + x1132 * x55 - x1133 * x58
    x1135 = x16 * x625
    x1136 = x16 * x609 + x16 * (x1135 + x609) + x605
    x1137 = x17 * x625
    x1138 = x1137 + x653
    x1139 = x1138 * x16 + x17 * x609 + x642
    x1140 = x1135 * x18 + x18 * x609
    x1141 = x1138 * x17 + x17 * x653 + x666
    x1142 = x1137 * x18 + x18 * x653
    x1143 = x19 * x625
    x1144 = x16 * x955
    x1145 = x16 * x952 + x16 * (x1144 + x952) + x958
    x1146 = x1136 * x12 + x1145
    x1147 = x17 * x955
    x1148 = x1147 + x966
    x1149 = x1148 * x16 + x17 * x952 + x969
    x1150 = x1139 * x12 + x1149
    x1151 = x1144 * x18 + x18 * x952
    x1152 = x1140 * x12 + x1151
    x1153 = x1148 * x17 + x17 * x966 + x973
    x1154 = x1141 * x12 + x1153
    x1155 = x1147 * x18 + x18 * x966
    x1156 = x1142 * x12 + x1155
    x1157 = x19 * x955
    x1158 = x1143 * x12 + x1157
    x1159 = x16 * x980 + x16 * (x16 * x983 + x980) + x985
    x1160 = x1136 * x13 + x1159
    x1161 = x17 * x983 + x993
    x1162 = x1161 * x16 + x17 * x980 + x996
    x1163 = x1139 * x13 + x1162
    x1164 = x1002 + x18 * x983
    x1165 = x1005 + x1164 * x16 + x18 * x980
    x1166 = x1140 * x13 + x1165
    x1167 = x1009 + x1161 * x17 + x17 * x993
    x1168 = x1141 * x13 + x1167
    x1169 = x1013 + x1164 * x17 + x18 * x993
    x1170 = x1142 * x13 + x1169
    x1171 = x1002 * x18 + x1017 + x1164 * x18
    x1172 = x1143 * x13 + x1171
    x1173 = x246 * x952 - x252 * x953 + 3 * x610
    x1174 = x246 * x955 - x252 * x950 + 3 * x626
    x1175 = x1174 * x16
    x1176 = x1174 * x17
    x1177 = (
        x246 * x966
        - x252 * x963
        + x57 * (x246 * x950 - x252 * x951 + 3 * x614)
        + 3 * x654
    )
    x1178 = x1176 + x1177
    x1179 = x246 * x980 - x252 * x981 + 2 * x684
    x1180 = x246 * x983 - x252 * x978 + 2 * x706
    x1181 = (
        x1179 * x16 + x16 * (x1179 + x1180 * x16) + x246 * x985 - x252 * x988 + 2 * x679
    )
    x1182 = (
        x246 * x993
        - x252 * x991
        + x57 * (x246 * x978 - x252 * x979 + 2 * x690)
        + 2 * x740
    )
    x1183 = x1180 * x17 + x1182
    x1184 = (
        x1179 * x17
        + x1183 * x16
        + x246 * x996
        - x252 * x997
        + x57 * (x246 * x981 - x252 * x987 + 2 * x712)
        + 2 * x728
    )
    x1185 = -x1000 * x252 + x1002 * x246 + 2 * x762
    x1186 = x1180 * x18 + x1185
    x1187 = x1005 * x246 - x1006 * x252 + x1179 * x18 + x1186 * x16 + 2 * x751
    x1188 = (
        x1009 * x246
        - x1010 * x252
        + x1182 * x17
        + x1183 * x17
        + x63
        * (
            x246 * x991
            - x252 * x992
            + x57 * (x246 * x979 - x252 * x986 + 2 * x713)
            + 2 * x732
        )
        + 2 * x777
    )
    x1189 = (
        x1013 * x246
        - x1014 * x252
        + x1182 * x18
        + x1186 * x17
        + x57 * (x1000 * x246 - x1001 * x252 + 2 * x755)
        + 2 * x786
    )
    x1190 = x1017 * x246 - x1018 * x252 + x1185 * x18 + x1186 * x18 + 2 * x794
    x1191 = x1023 * x246 - x1024 * x252 + x807
    x1192 = -x1021 * x252 + x1026 * x246 + x827
    x1193 = x1028 * x246 - x1031 * x252 + x1191 * x16 + x16 * (x1191 + x1192 * x16) + x803
    x1194 = x1159 * x13 + x1193
    x1195 = (
        -x1034 * x252 + x1036 * x246 + x57 * (x1021 * x246 - x1022 * x252 + x813) + x859
    )
    x1196 = x1192 * x17 + x1195
    x1197 = (
        x1039 * x246
        - x1040 * x252
        + x1191 * x17
        + x1196 * x16
        + x57 * (x1024 * x246 - x1030 * x252 + x831)
        + x847
    )
    x1198 = x1162 * x13 + x1197
    x1199 = -x1043 * x252 + x1045 * x246 + x880
    x1200 = x1192 * x18 + x1199
    x1201 = x1048 * x246 - x1049 * x252 + x1191 * x18 + x1200 * x16 + x870
    x1202 = x1165 * x13 + x1201
    x1203 = (
        x1052 * x246
        - x1053 * x252
        + x1195 * x17
        + x1196 * x17
        + x63
        * (
            x1034 * x246
            - x1035 * x252
            + x57 * (x1022 * x246 - x1029 * x252 + x832)
            + x851
        )
        + x891
    )
    x1204 = x1167 * x13 + x1203
    x1205 = (
        x1056 * x246
        - x1057 * x252
        + x1195 * x18
        + x1200 * x17
        + x57 * (x1043 * x246 - x1044 * x252 + x874)
        + x899
    )
    x1206 = x1169 * x13 + x1205
    x1207 = x1060 * x246 - x1061 * x252 + x1199 * x18 + x1200 * x18 + x907
    x1208 = x1171 * x13 + x1207
    x1209 = x16 * x698 + x16 * (x16 * x707 + x698) + x710
    x1210 = x17 * x707 + x739
    x1211 = x1210 * x16 + x17 * x698 + x727
    x1212 = x18 * x707 + x764
    x1213 = x1212 * x16 + x18 * x698 + x769
    x1214 = x1210 * x17 + x17 * x739 + x776
    x1215 = x1212 * x17 + x18 * x739 + x785
    x1216 = x1212 * x18 + x18 * x764 + x795
    x1217 = x1159 + x12 * x1209
    x1218 = x1162 + x12 * x1211
    x1219 = x1165 + x12 * x1213
    x1220 = x1167 + x12 * x1214
    x1221 = x1169 + x12 * x1215
    x1222 = x1171 + x12 * x1216
    x1223 = x1023 * x16 + x1028 + x16 * (x1023 + x1026 * x16)
    x1224 = x1209 * x13 + x1223
    x1225 = x1026 * x17 + x1036
    x1226 = x1023 * x17 + x1039 + x1225 * x16
    x1227 = x1211 * x13 + x1226
    x1228 = x1026 * x18 + x1045
    x1229 = x1023 * x18 + x1048 + x1228 * x16
    x1230 = x1213 * x13 + x1229
    x1231 = x1036 * x17 + x1052 + x1225 * x17
    x1232 = x1214 * x13 + x1231
    x1233 = x1036 * x18 + x1056 + x1228 * x17
    x1234 = x1215 * x13 + x1233
    x1235 = x1045 * x18 + x1060 + x1228 * x18
    x1236 = x1216 * x13 + x1235
    x1237 = x1100 * x246 - x1101 * x252
    x1238 = -x1098 * x252 + x1103 * x246
    x1239 = (
        x1105 * x246
        - x1108 * x252
        + x1223 * x13
        + x1237 * x16
        + x16 * (x1237 + x1238 * x16)
    )
    x1240 = -x1110 * x252 + x1112 * x246 + x57 * (x1098 * x246 - x1099 * x252)
    x1241 = x1238 * x17 + x1240
    x1242 = (
        x1115 * x246
        - x1116 * x252
        + x1226 * x13
        + x1237 * x17
        + x1241 * x16
        + x57 * (x1101 * x246 - x1107 * x252)
    )
    x1243 = -x1118 * x252 + x1120 * x246
    x1244 = x1238 * x18 + x1243
    x1245 = x1123 * x246 - x1124 * x252 + x1229 * x13 + x1237 * x18 + x1244 * x16
    x1246 = (
        x1126 * x246
        - x1127 * x252
        + x1231 * x13
        + x1240 * x17
        + x1241 * x17
        + x63 * (x1110 * x246 - x1111 * x252 + x57 * (x1099 * x246 - x1106 * x252))
    )
    x1247 = (
        x1129 * x246
        - x1130 * x252
        + x1233 * x13
        + x1240 * x18
        + x1244 * x17
        + x57 * (x1118 * x246 - x1119 * x252)
    )
    x1248 = x1132 * x246 - x1133 * x252 + x1235 * x13 + x1243 * x18 + x1244 * x18
    x1249 = x16 * x806 + x16 * (x16 * x826 + x806) + x802
    x1250 = x17 * x826 + x858
    x1251 = x1250 * x16 + x17 * x806 + x846
    x1252 = x18 * x826 + x879
    x1253 = x1252 * x16 + x18 * x806 + x869
    x1254 = x1250 * x17 + x17 * x858 + x890
    x1255 = x1252 * x17 + x18 * x858 + x898
    x1256 = x1252 * x18 + x18 * x879 + x906
    x1257 = x12 * x1249 + x1223
    x1258 = x12 * x1251 + x1226
    x1259 = x12 * x1253 + x1229
    x1260 = x12 * x1254 + x1231
    x1261 = x12 * x1255 + x1233
    x1262 = x12 * x1256 + x1235
    x1263 = x1100 * x16 + x1105 + x16 * (x1100 + x1103 * x16)
    x1264 = x1249 * x13 + x1263
    x1265 = x1103 * x17 + x1112
    x1266 = x1100 * x17 + x1115 + x1265 * x16
    x1267 = x1251 * x13 + x1266
    x1268 = x1103 * x18 + x1120
    x1269 = x1100 * x18 + x1123 + x1268 * x16
    x1270 = x1253 * x13 + x1269
    x1271 = x1112 * x17 + x1126 + x1265 * x17
    x1272 = x1254 * x13 + x1271
    x1273 = x1112 * x18 + x1129 + x1268 * x17
    x1274 = x1255 * x13 + x1273
    x1275 = x1120 * x18 + x1132 + x1268 * x18
    x1276 = x1256 * x13 + x1275
    x1277 = x1100 * x392 - x1101 * x398 + 3 * x807
    x1278 = -x1098 * x398 + x1103 * x392 + 3 * x827
    x1279 = -x1110 * x398 + x1112 * x392 + 3 * x859
    x1280 = x1278 * x17 + x1279
    x1281 = (
        -x1118 * x398
        + x1120 * x392
        + x57 * (x1098 * x392 - x1099 * x398 + 3 * x813)
        + 3 * x880
    )
    x1282 = x1278 * x18 + x1281

    # 216 item(s)
    S = numpy.array(
        [
            x105 * (x104 - x83)
            + x11 * x150
            + x11 * (x11 * x152 + x150)
            + x125 * x16
            + x137 * x55
            + x16 * (x125 + x148)
            - x58
            * (
                x112 * (x64 - x75)
                + x136 * x63
                + x55 * x82
                - x58
                * (
                    x135 * x63
                    + x138
                    + x55 * x74
                    - x58 * (x134 * x63 - x140 * x58 + x55 * x69)
                )
            )
            + x63
            * (
                x105 * (x103 - x123)
                + x124 * x55
                - x136 * x58
                + x57 * (x105 * (x101 - x114) + x115 * x55 - x131 * x58)
            ),
            x105 * (-x190 + x197)
            + x11 * x213
            + x11 * (x11 * x216 + x213)
            + x125 * x17
            + x16 * x207
            + x208 * x55
            + x57 * (x105 * (-x166 + x173) + x174 * x55 - x179 * x58)
            - x58
            * (
                x112 * (x184 - x188)
                + x179 * x57
                + x189 * x55
                - x58
                * (
                    x178 * x57
                    + x187 * x55
                    + x209
                    - x58 * (x177 * x57 + x185 * x55 - x210 * x58)
                )
            ),
            x11 * x217 + x11 * (x11 * x218 + x217) + x125 * x18 + x148 * x18,
            x105 * (-x230 + x236)
            + x11 * x240
            + x11 * (x11 * x241 + x240)
            + x17 * x206
            + x17 * x207
            + x237 * x55
            - x58
            * (
                x112 * (x221 * x55 - x223 - x228)
                + x229 * x55
                - x58 * (x227 * x55 + x238 - x58 * (x225 * x55 - x239 * x58))
            ),
            x11 * x242 + x11 * (x11 * x243 + x242) + x18 * x198 + x18 * x206,
            x11 * x244 + x11 * (x11 * x245 + x244) + x147 * x19,
            x11 * x310 + x12 * x150 + x324,
            x11 * x356 + x12 * x213 + x366,
            x11 * x368 + x12 * x217 + x369,
            x11 * x382 + x12 * x240 + x385,
            x11 * x387 + x12 * x242 + x388,
            x11 * x390 + x12 * x244 + x391,
            x11 * x462 + x13 * x150 + x479,
            x11 * x518 + x13 * x213 + x529,
            x11 * x551 + x13 * x217 + x560,
            x11 * x575 + x13 * x240 + x578,
            x11 * x587 + x13 * x242 + x590,
            x11 * x600 + x13 * x244 + x602,
            x12 * x310 + x639,
            x12 * x356 + x661,
            x12 * x368 + x663,
            x12 * x382 + x671,
            x12 * x387 + x673,
            x12 * x390 + x675,
            x12 * x462 + x724,
            x12 * x518 + x747,
            x12 * x551 + x773,
            x12 * x575 + x781,
            x12 * x587 + x790,
            x12 * x600 + x799,
            x13 * x462 + x843,
            x13 * x518 + x866,
            x13 * x551 + x887,
            x13 * x575 + x895,
            x13 * x587 + x903,
            x13 * x600 + x911,
            x11 * x309 + x11 * (x11 * x913 + x309) + x324,
            x11 * x355 + x11 * (x11 * x916 + x355) + x366,
            x11 * x367 + x11 * (x11 * x917 + x367) + x369,
            x11 * x381 + x11 * (x11 * x918 + x381) + x385,
            x11 * x386 + x11 * (x11 * x919 + x386) + x388,
            x11 * x389 + x11 * (x11 * x920 + x389) + x391,
            x11 * x923 + x639,
            x11 * x927 + x661,
            x11 * x929 + x663,
            x11 * x931 + x671,
            x11 * x933 + x673,
            x11 * x935 + x675,
            x11 * x937 + x724,
            x11 * x940 + x747,
            x11 * x943 + x773,
            x11 * x945 + x781,
            x11 * x947 + x790,
            x11 * x949 + x799,
            x12 * x923 + x962,
            x12 * x927 + x971,
            x12 * x929 + x972,
            x12 * x931 + x975,
            x12 * x933 + x976,
            x12 * x935 + x977,
            x12 * x937 + x990,
            x12 * x940 + x999,
            x1008 + x12 * x943,
            x1012 + x12 * x945,
            x1016 + x12 * x947,
            x1020 + x12 * x949,
            x1033 + x13 * x937,
            x1042 + x13 * x940,
            x1051 + x13 * x943,
            x1055 + x13 * x945,
            x1059 + x13 * x947,
            x1063 + x13 * x949,
            x11 * x461 + x11 * (x1064 * x11 + x461) + x479,
            x11 * x517 + x11 * (x1066 * x11 + x517) + x529,
            x11 * x550 + x11 * (x1068 * x11 + x550) + x560,
            x11 * x574 + x11 * (x1069 * x11 + x574) + x578,
            x11 * x586 + x11 * (x1070 * x11 + x586) + x590,
            x11 * x599 + x11 * (x1071 * x11 + x599) + x602,
            x1072 * x11 + x12 * x461 + x723,
            x1073 * x11 + x12 * x517 + x746,
            x1074 * x11 + x12 * x550 + x772,
            x1075 * x11 + x12 * x574 + x780,
            x1076 * x11 + x12 * x586 + x789,
            x1077 * x11 + x12 * x599 + x798,
            x1079 * x11 + x843,
            x1082 * x11 + x866,
            x1085 * x11 + x887,
            x1087 * x11 + x895,
            x1089 * x11 + x903,
            x1091 * x11 + x911,
            x1072 * x12 + x1092,
            x1073 * x12 + x1093,
            x1074 * x12 + x1094,
            x1075 * x12 + x1095,
            x1076 * x12 + x1096,
            x1077 * x12 + x1097,
            x1033 + x1079 * x12,
            x1042 + x1082 * x12,
            x1051 + x1085 * x12,
            x1055 + x1087 * x12,
            x1059 + x1089 * x12,
            x1063 + x1091 * x12,
            x1079 * x13 + x1109,
            x1082 * x13 + x1117,
            x1085 * x13 + x1125,
            x1087 * x13 + x1128,
            x1089 * x13 + x1131,
            x1091 * x13 + x1134,
            x11 * x922 + x11 * (x11 * x1136 + x922) + x638,
            x11 * x926 + x11 * (x11 * x1139 + x926) + x660,
            x11 * x928 + x11 * (x11 * x1140 + x928) + x662,
            x11 * x930 + x11 * (x11 * x1141 + x930) + x670,
            x11 * x932 + x11 * (x11 * x1142 + x932) + x672,
            x11 * x934 + x11 * (x11 * x1143 + x934) + x674,
            x11 * x1146 + x962,
            x11 * x1150 + x971,
            x11 * x1152 + x972,
            x11 * x1154 + x975,
            x11 * x1156 + x976,
            x11 * x1158 + x977,
            x11 * x1160 + x990,
            x11 * x1163 + x999,
            x1008 + x11 * x1166,
            x1012 + x11 * x1168,
            x1016 + x11 * x1170,
            x1020 + x11 * x1172,
            x1145 * x12
            + x1146 * x12
            + x1173 * x16
            + x16 * (x1173 + x1175)
            + x246 * x958
            - x252 * x961
            + 3 * x606,
            x1149 * x12
            + x1150 * x12
            + x1173 * x17
            + x1178 * x16
            + x246 * x969
            - x252 * x970
            + x57 * (x246 * x953 - x252 * x960 + 3 * x631)
            + 3 * x643,
            x1151 * x12 + x1152 * x12 + x1173 * x18 + x1175 * x18,
            x1153 * x12
            + x1154 * x12
            + x1177 * x17
            + x1178 * x17
            + x246 * x973
            - x252 * x974
            + x63
            * (
                x246 * x963
                - x252 * x964
                + x57 * (x246 * x951 - x252 * x959 + 3 * x632)
                + 3 * x647
            )
            + 3 * x667,
            x1155 * x12 + x1156 * x12 + x1176 * x18 + x1177 * x18,
            x1157 * x12 + x1158 * x12 + x1174 * x19,
            x1145 * x13 + x1160 * x12 + x1181,
            x1149 * x13 + x1163 * x12 + x1184,
            x1151 * x13 + x1166 * x12 + x1187,
            x1153 * x13 + x1168 * x12 + x1188,
            x1155 * x13 + x1170 * x12 + x1189,
            x1157 * x13 + x1172 * x12 + x1190,
            x1160 * x13 + x1194,
            x1163 * x13 + x1198,
            x1166 * x13 + x1202,
            x1168 * x13 + x1204,
            x1170 * x13 + x1206,
            x1172 * x13 + x1208,
            x11 * x936 + x11 * (x11 * x1209 + x936) + x723,
            x11 * x939 + x11 * (x11 * x1211 + x939) + x746,
            x11 * x942 + x11 * (x11 * x1213 + x942) + x772,
            x11 * x944 + x11 * (x11 * x1214 + x944) + x780,
            x11 * x946 + x11 * (x11 * x1215 + x946) + x789,
            x11 * x948 + x11 * (x11 * x1216 + x948) + x798,
            x1092 + x11 * x1217,
            x1093 + x11 * x1218,
            x1094 + x11 * x1219,
            x1095 + x11 * x1220,
            x1096 + x11 * x1221,
            x1097 + x11 * x1222,
            x1033 + x11 * x1224,
            x1042 + x11 * x1227,
            x1051 + x11 * x1230,
            x1055 + x11 * x1232,
            x1059 + x11 * x1234,
            x1063 + x11 * x1236,
            x1159 * x12 + x1181 + x12 * x1217,
            x1162 * x12 + x1184 + x12 * x1218,
            x1165 * x12 + x1187 + x12 * x1219,
            x1167 * x12 + x1188 + x12 * x1220,
            x1169 * x12 + x1189 + x12 * x1221,
            x1171 * x12 + x1190 + x12 * x1222,
            x1194 + x12 * x1224,
            x1198 + x12 * x1227,
            x12 * x1230 + x1202,
            x12 * x1232 + x1204,
            x12 * x1234 + x1206,
            x12 * x1236 + x1208,
            x1224 * x13 + x1239,
            x1227 * x13 + x1242,
            x1230 * x13 + x1245,
            x1232 * x13 + x1246,
            x1234 * x13 + x1247,
            x1236 * x13 + x1248,
            x1078 * x11 + x11 * (x1078 + x11 * x1249) + x842,
            x1081 * x11 + x11 * (x1081 + x11 * x1251) + x865,
            x1084 * x11 + x11 * (x1084 + x11 * x1253) + x886,
            x1086 * x11 + x11 * (x1086 + x11 * x1254) + x894,
            x1088 * x11 + x11 * (x1088 + x11 * x1255) + x902,
            x1090 * x11 + x11 * (x1090 + x11 * x1256) + x910,
            x1032 + x1078 * x12 + x11 * x1257,
            x1041 + x1081 * x12 + x11 * x1258,
            x1050 + x1084 * x12 + x11 * x1259,
            x1054 + x1086 * x12 + x11 * x1260,
            x1058 + x1088 * x12 + x11 * x1261,
            x1062 + x1090 * x12 + x11 * x1262,
            x11 * x1264 + x1109,
            x11 * x1267 + x1117,
            x11 * x1270 + x1125,
            x11 * x1272 + x1128,
            x11 * x1274 + x1131,
            x11 * x1276 + x1134,
            x1193 + x12 * x1223 + x12 * x1257,
            x1197 + x12 * x1226 + x12 * x1258,
            x12 * x1229 + x12 * x1259 + x1201,
            x12 * x1231 + x12 * x1260 + x1203,
            x12 * x1233 + x12 * x1261 + x1205,
            x12 * x1235 + x12 * x1262 + x1207,
            x12 * x1264 + x1239,
            x12 * x1267 + x1242,
            x12 * x1270 + x1245,
            x12 * x1272 + x1246,
            x12 * x1274 + x1247,
            x12 * x1276 + x1248,
            x1105 * x392
            - x1108 * x398
            + x1263 * x13
            + x1264 * x13
            + x1277 * x16
            + x16 * (x1277 + x1278 * x16)
            + 3 * x803,
            x1115 * x392
            - x1116 * x398
            + x1266 * x13
            + x1267 * x13
            + x1277 * x17
            + x1280 * x16
            + 3 * x847,
            x1123 * x392
            - x1124 * x398
            + x1269 * x13
            + x1270 * x13
            + x1277 * x18
            + x1282 * x16
            + x57 * (x1101 * x392 - x1107 * x398 + 3 * x831)
            + 3 * x870,
            x1126 * x392
            - x1127 * x398
            + x1271 * x13
            + x1272 * x13
            + x1279 * x17
            + x1280 * x17
            + 3 * x891,
            x1129 * x392
            - x1130 * x398
            + x1273 * x13
            + x1274 * x13
            + x1279 * x18
            + x1282 * x17
            + x57 * (x1110 * x392 - x1111 * x398 + 3 * x851)
            + 3 * x899,
            x1132 * x392
            - x1133 * x398
            + x1275 * x13
            + x1276 * x13
            + x1281 * x18
            + x1282 * x18
            + x63
            * (
                x1118 * x392
                - x1119 * x398
                + x57 * (x1099 * x392 - x1106 * x398 + 3 * x832)
                + 3 * x874
            )
            + 3 * x907,
        ]
    )
    return S


def eri_2210(a, A, b, B, c, C, d, D):
    """Cartesian [dd|ps] 2-electron electron repulsion integral.

    Generated code; DO NOT modify by hand!"""

    x0 = 2 * a + 2 * b
    x1 = (2 * c + 2 * d + x0) ** (-1.0)
    x2 = x0 ** (-1.0)
    x3 = numpy.pi**2.5
    x4 = a + b
    x5 = c + d
    x6 = x4 * x5
    x7 = x4 + x5
    x8 = (x6 + numpy.sqrt(x7)) ** (-1.0)
    x9 = x4 ** (-1.0)
    x10 = A[0] - B[0]
    x11 = A[1] - B[1]
    x12 = A[2] - B[2]
    x13 = numpy.exp(-a * b * x9 * (x10**2 + x11**2 + x12**2))
    x14 = x5 ** (-1.0)
    x15 = numpy.exp(
        -c * d * x14 * ((C[0] - D[0]) ** 2 + (C[1] - D[1]) ** 2 + (C[2] - D[2]) ** 2)
    )
    x16 = x7 ** (-1.0)
    x17 = x14 * (c * C[0] + d * D[0])
    x18 = -x9 * (a * A[0] + b * B[0])
    x19 = -x17 - x18
    x20 = x14 * (c * C[1] + d * D[1])
    x21 = -x9 * (a * A[1] + b * B[1])
    x22 = -x20 - x21
    x23 = -x9 * (a * A[2] + b * B[2])
    x24 = -x14 * (c * C[2] + d * D[2]) - x23
    x25 = x16 * x6 * (x19**2 + x22**2 + x24**2)
    x26 = boys(2, x25)
    x27 = x16 * x5
    x28 = boys(3, x25)
    x29 = 2 * x13 * x15 * x3 * x8
    x30 = x28 * x29
    x31 = x2 * (2 * x13 * x15 * x26 * x3 * x8 - x27 * x30)
    x32 = -x18 - A[0]
    x33 = x26 * x29
    x34 = x19 * x27
    x35 = x30 * x34
    x36 = x32 * x33 - x35
    x37 = x29 * boys(4, x25)
    x38 = x30 * x32 - x34 * x37
    x39 = x27 * x38
    x40 = -x19 * x39 + x31 + x32 * x36
    x41 = x27 * x40
    x42 = boys(1, x25)
    x43 = x2 * (2 * x13 * x15 * x3 * x42 * x8 - x27 * x33)
    x44 = x29 * x42
    x45 = x33 * x34
    x46 = x32 * x44 - x45
    x47 = x27 * x36
    x48 = -x19 * x47 + x32 * x46 + x43
    x49 = 3 * x2
    x50 = 2 * x2
    x51 = -x19 * x41 + x32 * x48 + x50 * (2 * x13 * x15 * x3 * x32 * x42 * x8 - x45 - x47)
    x52 = x2 * (2 * x13 * x15 * x28 * x3 * x8 - x27 * x37)
    x53 = x29 * boys(5, x25)
    x54 = x32 * x37 - x34 * x53
    x55 = x32 * x38 - x34 * x54 + x52
    x56 = x32 * x40 - x34 * x55 + x50 * (2 * x13 * x15 * x26 * x3 * x32 * x8 - x35 - x39)
    x57 = x17 - C[0]
    x58 = x16 * x4
    x59 = x19 * x58
    x60 = x30 * x59 + x33 * x57
    x61 = x27 * x60
    x62 = x33 * x59 + x44 * x57
    x63 = x2 * (-x61 + x62)
    x64 = x1 * x36 - x19 * x61 + x32 * x62
    x65 = x30 * x57 + x37 * x59
    x66 = x27 * x65
    x67 = x1 * x38 - x19 * x66 + x32 * x60
    x68 = x27 * x67
    x69 = x1 * x40 - x19 * x68 + x32 * x64 + x63
    x70 = x27 * x69
    x71 = x27 * x62
    x72 = x29 * boys(0, x25)
    x73 = x44 * x59 + x57 * x72
    x74 = x2 * (-x71 + x73)
    x75 = x1 * x46 - x19 * x71 + x32 * x73
    x76 = x27 * x64
    x77 = x1 * x48 - x19 * x76 + x32 * x75 + x74
    x78 = x1 * x51 - x19 * x70 + x32 * x77 + x50 * (x75 - x76)
    x79 = x2 * (x60 - x66)
    x80 = x37 * x57 + x53 * x59
    x81 = x20 - C[1]
    x82 = x22 * x58
    x83 = x30 * x82 + x33 * x81
    x84 = x27 * x83
    x85 = x33 * x82 + x44 * x81
    x86 = x2 * (-x84 + x85)
    x87 = x19 * x84
    x88 = x32 * x85 - x87
    x89 = x30 * x81 + x37 * x82
    x90 = x27 * x89
    x91 = -x19 * x90 + x32 * x83
    x92 = x27 * x91
    x93 = -x19 * x92 + x32 * x88 + x86
    x94 = x27 * x93
    x95 = x27 * x85
    x96 = x44 * x82 + x72 * x81
    x97 = x2 * (-x95 + x96)
    x98 = x19 * x95
    x99 = x27 * x88
    x100 = -x19 * x99 + x32 * (x32 * x96 - x98) + x97
    x101 = x100 * x32 - x19 * x94 + x50 * (x32 * x96 - x98 - x99)
    x102 = x2 * (x83 - x90)
    x103 = x37 * x81 + x53 * x82
    x104 = -x21 - A[1]
    x105 = x22 * x71
    x106 = x22 * x61
    x107 = x104 * x62 - x106
    x108 = x107 * x27
    x109 = x2 * (x104 * x73 - x105 - x108)
    x110 = x22 * x27
    x111 = x110 * x33
    x112 = x110 * x30
    x113 = x104 * x33 - x112
    x114 = x113 * x27
    x115 = x2 * (2 * x104 * x13 * x15 * x3 * x42 * x8 - x111 - x114)
    x116 = x104 * x44 - x111
    x117 = x114 * x19
    x118 = x116 * x32 - x117
    x119 = x104 * x30 - x110 * x37
    x120 = x119 * x27
    x121 = x113 * x32 - x120 * x19
    x122 = x121 * x27
    x123 = x115 + x118 * x32 - x122 * x19
    x124 = x104 * x73 - x105
    x125 = x1 * x118 - x108 * x19 + x124 * x32
    x126 = x104 * x60 - x22 * x66
    x127 = x126 * x27
    x128 = x1 * x121 + x107 * x32 - x127 * x19
    x129 = x128 * x27
    x130 = x1 * x123 + x109 + x125 * x32 - x129 * x19
    x131 = x11 * x77 + x130
    x132 = x2 * (2 * x104 * x13 * x15 * x26 * x3 * x8 - x112 - x120)
    x133 = x104 * x37 - x110 * x53
    x134 = x119 * x32 - x133 * x34
    x135 = x121 * x32 + x132 - x134 * x34
    x136 = x2 * (x104 * x62 - x106 - x127)
    x137 = x104 * x65 - x110 * x80
    x138 = (
        x1 * (x123 * x32 - x135 * x34 + x50 * (x116 * x32 - x117 - x122))
        + x130 * x32
        - x34
        * (x1 * x135 + x128 * x32 + x136 - x34 * (x1 * x134 + x126 * x32 - x137 * x34))
        + x50 * (x125 - x129)
    )
    x139 = x1 * x113 + x104 * x85 - x22 * x84
    x140 = x139 * x27
    x141 = x1 * x116 + x104 * x96 - x22 * x95
    x142 = x2 * (-x140 + x141)
    x143 = x140 * x19
    x144 = x141 * x32 - x143
    x145 = x1 * x119 + x104 * x83 - x22 * x90
    x146 = x145 * x27
    x147 = x139 * x32 - x146 * x19
    x148 = x147 * x27
    x149 = x142 + x144 * x32 - x148 * x19
    x150 = x100 * x11 + x149
    x151 = x2 * (x139 - x146)
    x152 = x1 * x133 - x103 * x110 + x104 * x89
    x153 = (
        x149 * x32
        - x34 * (x147 * x32 + x151 - x34 * (x145 * x32 - x152 * x34))
        + x50 * (x141 * x32 - x143 - x148)
    )
    x154 = -x23 - A[2]
    x155 = x24 * x71
    x156 = x24 * x61
    x157 = x154 * x62 - x156
    x158 = x157 * x27
    x159 = x2 * (x154 * x73 - x155 - x158)
    x160 = x24 * x27
    x161 = x160 * x33
    x162 = x160 * x30
    x163 = x154 * x33 - x162
    x164 = x163 * x27
    x165 = x2 * (2 * x13 * x15 * x154 * x3 * x42 * x8 - x161 - x164)
    x166 = x154 * x44 - x161
    x167 = x166 * x32
    x168 = x164 * x19
    x169 = x167 - x168
    x170 = x163 * x32
    x171 = x154 * x30 - x160 * x37
    x172 = x171 * x27
    x173 = x172 * x19
    x174 = x170 - x173
    x175 = x174 * x27
    x176 = x165 + x169 * x32 - x175 * x19
    x177 = x154 * x73 - x155
    x178 = x1 * x169 - x158 * x19 + x177 * x32
    x179 = x154 * x60 - x24 * x66
    x180 = x179 * x27
    x181 = x1 * x174 + x157 * x32 - x180 * x19
    x182 = x181 * x27
    x183 = x1 * x176 + x159 + x178 * x32 - x182 * x19
    x184 = x12 * x77 + x183
    x185 = x2 * (2 * x13 * x15 * x154 * x26 * x3 * x8 - x162 - x172)
    x186 = x171 * x32
    x187 = x154 * x37 - x160 * x53
    x188 = x187 * x34
    x189 = x186 - x188
    x190 = x174 * x32 + x185 - x189 * x34
    x191 = x2 * (x154 * x62 - x156 - x180)
    x192 = x154 * x65 - x160 * x80
    x193 = (
        x1 * (x176 * x32 - x190 * x34 + x50 * (x166 * x32 - x168 - x175))
        + x183 * x32
        - x34
        * (x1 * x190 + x181 * x32 + x191 - x34 * (x1 * x189 + x179 * x32 - x192 * x34))
        + x50 * (x178 - x182)
    )
    x194 = x24 * x95
    x195 = x24 * x84
    x196 = x154 * x85 - x195
    x197 = x196 * x27
    x198 = x2 * (x154 * x96 - x194 - x197)
    x199 = x154 * x96 - x194
    x200 = x19 * x197
    x201 = x199 * x32 - x200
    x202 = x154 * x83 - x24 * x90
    x203 = x202 * x27
    x204 = -x19 * x203 + x196 * x32
    x205 = x204 * x27
    x206 = -x19 * x205 + x198 + x201 * x32
    x207 = x100 * x12 + x206
    x208 = x2 * (x154 * x85 - x195 - x203)
    x209 = -x103 * x160 + x154 * x89
    x210 = (
        x206 * x32
        - x34 * (x204 * x32 + x208 - x34 * (x202 * x32 - x209 * x34))
        + x50 * (x199 * x32 - x200 - x205)
    )
    x211 = x1 * x163
    x212 = x211 * x34
    x213 = x1 * x170 - x1 * x173
    x214 = x213 * x27
    x215 = x2 * (x1 * x166 - x211 * x27)
    x216 = x1 * x167 - x212
    x217 = -x19 * x214 + x215 + x216 * x32
    x218 = x1 * x172
    x219 = x2 * (x1 * x163 - x218)
    x220 = (
        x10 * x217
        + x217 * x32
        - x34 * (x213 * x32 + x219 - x34 * (x1 * x186 - x1 * x188))
        + x50 * (x1 * x166 * x32 - x212 - x214)
    )
    x221 = x104 * x107 - x127 * x22 + x63
    x222 = x221 * x27
    x223 = x104 * x124 - x108 * x22 + x74
    x224 = x2 * (-x222 + x223)
    x225 = x104 * x113 - x120 * x22 + x31
    x226 = x225 * x27
    x227 = x104 * x116 - x114 * x22 + x43
    x228 = x2 * (-x226 + x227)
    x229 = -x19 * x226 + x227 * x32
    x230 = x104 * x119 - x110 * x133 + x52
    x231 = x225 * x32 - x230 * x34
    x232 = x1 * x229 - x19 * x222 + x223 * x32
    x233 = x104 * x126 - x110 * x137 + x79
    x234 = (
        x1 * (x228 + x229 * x32 - x231 * x34)
        + x224
        + x232 * x32
        - x34 * (x1 * x231 + x221 * x32 - x233 * x34)
    )
    x235 = x11 * x130 + x234
    x236 = x1 * x225 + x104 * x139 - x146 * x22 + x86
    x237 = x236 * x27
    x238 = x1 * x227 + x104 * x141 - x140 * x22 + x97
    x239 = x2 * (-x237 + x238)
    x240 = -x19 * x237 + x238 * x32
    x241 = x1 * x230 + x102 + x104 * x145 - x110 * x152
    x242 = x239 + x240 * x32 - x34 * (x236 * x32 - x241 * x34)
    x243 = x11 * x149 + x242
    x244 = x158 * x22
    x245 = x104 * x157 - x180 * x22
    x246 = x245 * x27
    x247 = x2 * (x104 * x177 - x244 - x246)
    x248 = x164 * x22
    x249 = x104 * x163 - x172 * x22
    x250 = x249 * x27
    x251 = x2 * (x104 * x166 - x248 - x250)
    x252 = x104 * x166 - x248
    x253 = -x19 * x250 + x252 * x32
    x254 = x104 * x171
    x255 = x110 * x187
    x256 = x254 - x255
    x257 = x249 * x32 - x256 * x34
    x258 = x104 * x177 - x244
    x259 = x1 * x253 - x19 * x246 + x258 * x32
    x260 = x104 * x179 - x110 * x192
    x261 = (
        x1 * (x251 + x253 * x32 - x257 * x34)
        + x247
        + x259 * x32
        - x34 * (x1 * x257 + x245 * x32 - x260 * x34)
    )
    x262 = x12 * x130 + x261
    x263 = x1 * x249 + x104 * x196 - x203 * x22
    x264 = x263 * x27
    x265 = x1 * x252 + x104 * x199 - x197 * x22
    x266 = x2 * (-x264 + x265)
    x267 = -x19 * x264 + x265 * x32
    x268 = x1 * x256 + x104 * x202 - x110 * x209
    x269 = x266 + x267 * x32 - x34 * (x263 * x32 - x268 * x34)
    x270 = x12 * x149 + x269
    x271 = x110 * x211
    x272 = x104 * x211 - x218 * x22
    x273 = x27 * x272
    x274 = x2 * (x1 * x104 * x166 - x271 - x273)
    x275 = x1 * x166
    x276 = x104 * x275 - x271
    x277 = -x19 * x273 + x276 * x32
    x278 = x1 * x254 - x1 * x255
    x279 = x274 + x277 * x32 - x34 * (x272 * x32 - x278 * x34)
    x280 = x11 * x217 + x279
    x281 = x154 * x157 - x180 * x24 + x63
    x282 = x27 * x281
    x283 = x154 * x177 - x158 * x24 + x74
    x284 = x2 * (-x282 + x283)
    x285 = x154 * x163 - x172 * x24 + x31
    x286 = x27 * x285
    x287 = x154 * x166 - x164 * x24 + x43
    x288 = x2 * (-x286 + x287)
    x289 = -x19 * x286 + x287 * x32
    x290 = x154 * x171
    x291 = x160 * x187
    x292 = x290 - x291 + x52
    x293 = x285 * x32 - x292 * x34
    x294 = x1 * x289 - x19 * x282 + x283 * x32
    x295 = x154 * x179 - x160 * x192 + x79
    x296 = (
        x1 * (x288 + x289 * x32 - x293 * x34)
        + x284
        + x294 * x32
        - x34 * (x1 * x293 + x281 * x32 - x295 * x34)
    )
    x297 = x12 * x183 + x296
    x298 = x154 * x196 - x203 * x24 + x86
    x299 = x27 * x298
    x300 = x154 * x199 - x197 * x24 + x97
    x301 = x2 * (-x299 + x300)
    x302 = -x19 * x299 + x300 * x32
    x303 = x102 + x154 * x202 - x160 * x209
    x304 = x301 + x302 * x32 - x34 * (x298 * x32 - x303 * x34)
    x305 = x12 * x206 + x304
    x306 = x12 * x217
    x307 = x1 * x285 + x154 * x211 - x218 * x24
    x308 = x27 * x307
    x309 = x1 * x287 + x154 * x275 - x160 * x211
    x310 = x2 * (-x308 + x309)
    x311 = -x19 * x308 + x309 * x32
    x312 = x1 * x290 - x1 * x291 + x1 * x292
    x313 = x310 + x311 * x32 - x34 * (x307 * x32 - x312 * x34)
    x314 = x11 * x125 + x232
    x315 = x11 * x144 + x240
    x316 = x12 * x125 + x259
    x317 = x12 * x144 + x267
    x318 = x10 * x277 + x279
    x319 = x104 * x227 + 2 * x115 - x22 * x226
    x320 = x104 * x225 - x110 * x230 + 2 * x132
    x321 = x104 * x223 + 2 * x109 - x22 * x222
    x322 = x104 * x221 - x110 * x233 + 2 * x136
    x323 = x1 * (x319 * x32 - x320 * x34) + x11 * x232 + x32 * x321 - x322 * x34
    x324 = x1 * x319 + x104 * x238 + 2 * x142 - x22 * x237
    x325 = x1 * x320 + x104 * x236 - x110 * x241 + 2 * x151
    x326 = x11 * x240 + x32 * x324 - x325 * x34
    x327 = x104 * x252 + x165 - x22 * x250
    x328 = x104 * x249 - x110 * x256 + x185
    x329 = x104 * x258 + x159 - x22 * x246
    x330 = x104 * x245 - x110 * x260 + x191
    x331 = x1 * (x32 * x327 - x328 * x34) + x32 * x329 - x330 * x34
    x332 = x12 * x232 + x331
    x333 = x1 * x327 + x104 * x265 + x198 - x22 * x264
    x334 = x1 * x328 + x104 * x263 - x110 * x268 + x208
    x335 = x32 * x333 - x334 * x34
    x336 = x12 * x240 + x335
    x337 = x104 * x276 + x215 - x22 * x273
    x338 = x104 * x272 - x110 * x278 + x219
    x339 = x32 * x337 - x338 * x34
    x340 = x11 * x277 + x339
    x341 = x104 * x287 - x22 * x286
    x342 = x104 * x285 - x110 * x292
    x343 = x104 * x283 - x22 * x282
    x344 = x104 * x281 - x110 * x295
    x345 = x1 * (x32 * x341 - x34 * x342) + x32 * x343 - x34 * x344
    x346 = x12 * x259 + x345
    x347 = x1 * x341 + x104 * x300 - x22 * x299
    x348 = x1 * x342 + x104 * x298 - x110 * x303
    x349 = x32 * x347 - x34 * x348
    x350 = x12 * x267 + x349
    x351 = x12 * x277
    x352 = x104 * x309 - x22 * x308
    x353 = x104 * x307 - x110 * x312
    x354 = x32 * x352 - x34 * x353
    x355 = x11 * x178 + x259
    x356 = x11 * x201 + x267
    x357 = x11 * x216 + x277
    x358 = x12 * x178 + x294
    x359 = x12 * x201 + x302
    x360 = x12 * x216 + x311
    x361 = x11 * x259 + x331
    x362 = x11 * x267 + x335
    x363 = x351 + x354
    x364 = x154 * x287 + 2 * x165 - x24 * x286
    x365 = x154 * x285 - x160 * x292 + 2 * x185
    x366 = x154 * x283 + 2 * x159 - x24 * x282
    x367 = x154 * x281 - x160 * x295 + 2 * x191
    x368 = x1 * (x32 * x364 - x34 * x365) + x12 * x294 + x32 * x366 - x34 * x367
    x369 = x154 * x300 + 2 * x198 - x24 * x299
    x370 = x154 * x298 - x160 * x303 + 2 * x208
    x371 = x12 * x302 + x32 * x369 - x34 * x370
    x372 = x1 * x364 + x154 * x309 + 2 * x215 - x24 * x308
    x373 = x1 * x365 + x154 * x307 - x160 * x312 + 2 * x219
    x374 = x12 * x311 + x32 * x372 - x34 * x373
    x375 = x11 * x223 + x321
    x376 = x11 * x238 + x324
    x377 = x12 * x223 + x329
    x378 = x12 * x238 + x333
    x379 = x104 * x329 - x110 * x330 + 2 * x247
    x380 = (
        x1 * (x104 * x327 - x110 * x328 + 2 * x251) + x104 * x333 - x110 * x334 + 2 * x266
    )
    x381 = x104 * x337 + x11 * x337 - x110 * x338 + 2 * x274
    x382 = x104 * x343 - x110 * x344 + x284
    x383 = x12 * x329 + x382
    x384 = x1 * (x104 * x341 - x110 * x342 + x288) + x104 * x347 - x110 * x348 + x301
    x385 = x12 * x333 + x384
    x386 = x12 * x337
    x387 = x104 * x352 - x110 * x353 + x310
    x388 = x11 * x258 + x329
    x389 = x11 * x265 + x333
    x390 = x11 * x276 + x337
    x391 = x12 * x258 + x343
    x392 = x12 * x265 + x347
    x393 = x12 * x276 + x352
    x394 = x104 * x366 - x110 * x367 + x12 * x343
    x395 = x1 * (x104 * x364 - x110 * x365) + x104 * x369 - x110 * x370 + x12 * x347
    x396 = x104 * x372 - x110 * x373 + x12 * x352
    x397 = x11 * x283 + x343
    x398 = x11 * x300 + x347
    x399 = x11 * x309 + x352
    x400 = x12 * x283 + x366
    x401 = x12 * x300 + x369
    x402 = x12 * x309 + x372

    # 108 item(s)
    S = numpy.array(
        [
            x1 * (x32 * x51 - x34 * x56 + x49 * (-x41 + x48))
            + x10 * x78
            + x10 * (x10 * x77 + x78)
            + x32 * x78
            - x34
            * (
                x1 * x56
                + x32 * x69
                - x34
                * (x1 * x55 + x32 * x67 - x34 * (x1 * x54 + x32 * x65 - x34 * x80) + x79)
                + x50 * (x64 - x68)
            )
            + x49 * (-x70 + x77),
            x10 * x101
            + x10 * (x10 * x100 + x101)
            + x101 * x32
            - x34
            * (
                x32 * x93
                - x34 * (x102 + x32 * x91 - x34 * (-x103 * x34 + x32 * x89))
                + x50 * (x32 * x85 - x87 - x92)
            )
            + x49 * (x100 - x94),
            0,
            x10 * x131 + x11 * x78 + x138,
            x10 * x150 + x101 * x11 + x153,
            0,
            x10 * x184 + x12 * x78 + x193,
            x10 * x207 + x101 * x12 + x210,
            x220,
            x11 * x131 + x235,
            x11 * x150 + x243,
            0,
            x11 * x184 + x262,
            x11 * x207 + x270,
            x280,
            x12 * x184 + x297,
            x12 * x207 + x305,
            2 * x306 + x313,
            x10 * x130 + x10 * (x10 * x125 + x130) + x138,
            x10 * x149 + x10 * (x10 * x144 + x149) + x153,
            0,
            x10 * x314 + x235,
            x10 * x315 + x243,
            0,
            x10 * x316 + x262,
            x10 * x317 + x270,
            x318,
            x11 * x314 + x323,
            x11 * x315 + x326,
            0,
            x11 * x316 + x332,
            x11 * x317 + x336,
            x340,
            x12 * x316 + x346,
            x12 * x317 + x350,
            2 * x351 + x354,
            x10 * x183 + x10 * (x10 * x178 + x183) + x193,
            x10 * x206 + x10 * (x10 * x201 + x206) + x210,
            x10 * (x10 * x216 + x217) + x220,
            x10 * x355 + x11 * x183 + x261,
            x10 * x356 + x11 * x206 + x269,
            x10 * x357 + x280,
            x10 * x358 + x297,
            x10 * x359 + x305,
            x10 * x360 + x306 + x313,
            x11 * x355 + x361,
            x11 * x356 + x362,
            x11 * x357 + x340,
            x11 * x358 + x346,
            x11 * x359 + x350,
            x11 * x360 + x363,
            x12 * x358 + x368,
            x12 * x359 + x371,
            x12 * x360 + x374,
            x10 * x232 + x10 * (x10 * x223 + x232) + x234,
            x10 * x240 + x10 * (x10 * x238 + x240) + x242,
            0,
            x10 * x375 + x323,
            x10 * x376 + x326,
            0,
            x10 * x377 + x332,
            x10 * x378 + x336,
            x10 * x337 + x339,
            x104 * x321 + x11 * x321 + x11 * x375 - x110 * x322 + 3 * x224,
            x1 * (x104 * x319 - x110 * x320 + 3 * x228)
            + x104 * x324
            + x11 * x324
            + x11 * x376
            - x110 * x325
            + 3 * x239,
            0,
            x11 * x377 + x12 * x321 + x379,
            x11 * x378 + x12 * x324 + x380,
            x381,
            x12 * x377 + x383,
            x12 * x378 + x385,
            2 * x386 + x387,
            x10 * x259 + x10 * (x10 * x258 + x259) + x261,
            x10 * x267 + x10 * (x10 * x265 + x267) + x269,
            x10 * (x10 * x276 + x277) + x318,
            x10 * x388 + x361,
            x10 * x389 + x362,
            x10 * x390 + x340,
            x10 * x391 + x346,
            x10 * x392 + x350,
            x10 * x393 + x363,
            x11 * x329 + x11 * x388 + x379,
            x11 * x333 + x11 * x389 + x380,
            x11 * x390 + x381,
            x11 * x391 + x383,
            x11 * x392 + x385,
            x11 * x393 + x386 + x387,
            x12 * x391 + x394,
            x12 * x392 + x395,
            x12 * x393 + x396,
            x10 * x294 + x10 * (x10 * x283 + x294) + x296,
            x10 * x302 + x10 * (x10 * x300 + x302) + x304,
            x10 * x311 + x10 * (x10 * x309 + x311) + x313,
            x10 * x397 + x11 * x294 + x345,
            x10 * x398 + x11 * x302 + x349,
            x10 * x399 + x11 * x311 + x354,
            x10 * x400 + x368,
            x10 * x401 + x371,
            x10 * x402 + x374,
            x11 * x343 + x11 * x397 + x382,
            x11 * x347 + x11 * x398 + x384,
            x11 * x352 + x11 * x399 + x387,
            x11 * x400 + x394,
            x11 * x401 + x395,
            x11 * x402 + x396,
            x12 * x366 + x12 * x400 + x154 * x366 - x160 * x367 + 3 * x284,
            x12 * x369 + x12 * x401 + x154 * x369 - x160 * x370 + 3 * x301,
            x1 * (x154 * x364 - x160 * x365 + 3 * x288)
            + x12 * x372
            + x12 * x402
            + x154 * x372
            - x160 * x373
            + 3 * x310,
        ]
    )
    return S


def eri_2211(a, A, b, B, c, C, d, D):
    """Cartesian [dd|pp] 2-electron electron repulsion integral.

    Generated code; DO NOT modify by hand!"""

    x0 = 2 * a + 2 * b
    x1 = x0 ** (-1.0)
    x2 = 2 * c + 2 * d
    x3 = x2 ** (-1.0)
    x4 = numpy.pi**2.5
    x5 = a + b
    x6 = c + d
    x7 = x5 * x6
    x8 = x5 + x6
    x9 = (x7 + numpy.sqrt(x8)) ** (-1.0)
    x10 = x5 ** (-1.0)
    x11 = A[0] - B[0]
    x12 = A[1] - B[1]
    x13 = A[2] - B[2]
    x14 = numpy.exp(-a * b * x10 * (x11**2 + x12**2 + x13**2))
    x15 = x6 ** (-1.0)
    x16 = C[0] - D[0]
    x17 = C[1] - D[1]
    x18 = C[2] - D[2]
    x19 = numpy.exp(-c * d * x15 * (x16**2 + x17**2 + x18**2))
    x20 = x8 ** (-1.0)
    x21 = x15 * (c * C[0] + d * D[0])
    x22 = -x10 * (a * A[0] + b * B[0])
    x23 = -x21 - x22
    x24 = x15 * (c * C[1] + d * D[1])
    x25 = -x10 * (a * A[1] + b * B[1])
    x26 = -x24 - x25
    x27 = -x10 * (a * A[2] + b * B[2])
    x28 = -x15 * (c * C[2] + d * D[2]) - x27
    x29 = x20 * x7 * (x23**2 + x26**2 + x28**2)
    x30 = boys(2, x29)
    x31 = -2 * x14 * x19 * x30 * x4 * x9
    x32 = x20 * x5
    x33 = boys(3, x29)
    x34 = 2 * x14 * x19 * x4 * x9
    x35 = x33 * x34
    x36 = x3 * (-x31 - x32 * x35)
    x37 = x21 - C[0]
    x38 = x30 * x34
    x39 = x23 * x32
    x40 = x35 * x39 + x37 * x38
    x41 = boys(4, x29)
    x42 = x34 * x41
    x43 = x35 * x37 + x39 * x42
    x44 = x36 + x37 * x40 + x39 * x43
    x45 = x20 * x6
    x46 = x44 * x45
    x47 = boys(1, x29)
    x48 = -2 * x14 * x19 * x4 * x47 * x9
    x49 = x3 * (-x32 * x38 - x48)
    x50 = x34 * x47
    x51 = x37 * x50 + x38 * x39
    x52 = x37 * x51 + x39 * x40 + x49
    x53 = x1 * (-x46 + x52)
    x54 = -x22 - A[0]
    x55 = x0 + x2
    x56 = x55 ** (-1.0)
    x57 = x23 * x45
    x58 = x42 * x57
    x59 = x35 * x54 - x58
    x60 = x43 * x45
    x61 = -x23 * x60 + x40 * x54 + x56 * x59
    x62 = 2 * x56
    x63 = -x23 * x46 + x52 * x54 + x61 * x62
    x64 = -2 * x14 * x19 * x33 * x4 * x9
    x65 = x3 * (-x32 * x42 - x64)
    x66 = x34 * boys(5, x29)
    x67 = x37 * x42 + x39 * x66
    x68 = x37 * x43 + x39 * x67 + x65
    x69 = x45 * x68
    x70 = x42 * x54 - x57 * x66
    x71 = x45 * x67
    x72 = -x23 * x71 + x43 * x54 + x56 * x70
    x73 = -x23 * x69 + x44 * x54 + x62 * x72
    x74 = x45 * x73
    x75 = x1 * (x40 - x60)
    x76 = x1 * (-x42 * x45 - x64)
    x77 = x45 * x70
    x78 = -x23 * x77 + x54 * x59 + x76
    x79 = x45 * x72
    x80 = -x23 * x79 + x54 * x61 + x56 * x78 + x75
    x81 = -x23 * x74 + x53 + x54 * x63 + x62 * x80
    x82 = x45 * x81
    x83 = x45 * x52
    x84 = boys(0, x29)
    x85 = x3 * (2 * x14 * x19 * x4 * x84 * x9 - x32 * x50)
    x86 = x34 * x84
    x87 = x37 * x86 + x39 * x50
    x88 = x37 * x87 + x39 * x51 + x85
    x89 = x1 * (-x83 + x88)
    x90 = x35 * x57
    x91 = x38 * x54 - x90
    x92 = x40 * x45
    x93 = -x23 * x92 + x51 * x54 + x56 * x91
    x94 = -x23 * x83 + x54 * x88 + x62 * x93
    x95 = x45 * x63
    x96 = x1 * (x51 - x92)
    x97 = x1 * (-x31 - x35 * x45)
    x98 = x45 * x59
    x99 = -x23 * x98 + x54 * x91 + x97
    x100 = x45 * x61
    x101 = -x100 * x23 + x54 * x93 + x56 * x99 + x96
    x102 = x101 * x62 - x23 * x95 + x54 * x94 + x89
    x103 = 3 * x1
    x104 = x45 * x99
    x105 = x1 * (-x38 * x45 - x48)
    x106 = x38 * x57
    x107 = -x106 + x50 * x54
    x108 = x45 * x91
    x109 = x105 + x107 * x54 - x108 * x23
    x110 = 2 * x1
    x111 = (
        -x104 * x23
        + x109 * x54
        + x110 * (-x106 - x108 + 2 * x14 * x19 * x4 * x47 * x54 * x9)
    )
    x112 = x45 * x78
    x113 = (
        x110 * (2 * x14 * x19 * x30 * x4 * x54 * x9 - x90 - x98) - x112 * x23 + x54 * x99
    )
    x114 = x101 * x45
    x115 = x45 * x51
    x116 = x1 * (-x115 + x87)
    x117 = x107 * x56 - x115 * x23 + x54 * x87
    x118 = x45 * x93
    x119 = x109 * x56 + x116 + x117 * x54 - x118 * x23
    x120 = x110 * (x117 - x118) + x111 * x56 - x114 * x23 + x119 * x54
    x121 = x45 * x80
    x122 = x101 * x54 + x110 * (-x100 + x93) + x113 * x56 - x121 * x23
    x123 = (
        x103 * (-x114 + x119)
        + x120 * x54
        - x122 * x57
        + x56 * (x103 * (-x104 + x109) + x111 * x54 - x113 * x57)
    )
    x124 = -2 * x14 * x19 * x4 * x41 * x9
    x125 = x1 * (-x124 - x45 * x66)
    x126 = x34 * boys(6, x29)
    x127 = -x126 * x57 + x54 * x66
    x128 = x125 - x127 * x57 + x54 * x70
    x129 = (
        x110 * (2 * x14 * x19 * x33 * x4 * x54 * x9 - x58 - x77) - x128 * x57 + x54 * x78
    )
    x130 = x1 * (x43 - x71)
    x131 = x126 * x39 + x37 * x66
    x132 = x127 * x56 - x131 * x57 + x54 * x67
    x133 = x128 * x56 + x130 - x132 * x57 + x54 * x72
    x134 = x110 * (x61 - x79) + x129 * x56 - x133 * x57 + x54 * x80
    x135 = x102 * x54 + x110 * (x94 - x95) + x122 * x62 - x23 * x82
    x136 = x1 * (x44 - x69)
    x137 = x3 * (-x124 - x32 * x66)
    x138 = x131 * x39 + x137 + x37 * x67
    x139 = x120 * x16 + x135
    x140 = x102 + x119 * x16
    x141 = x24 - C[1]
    x142 = x26 * x32
    x143 = x141 * x38 + x142 * x35
    x144 = x141 * x35 + x142 * x42
    x145 = x144 * x45
    x146 = x145 * x23
    x147 = x143 * x54 - x146
    x148 = x141 * x50 + x142 * x38
    x149 = x143 * x39 + x148 * x37
    x150 = x143 * x37 + x144 * x39
    x151 = x150 * x45
    x152 = x147 * x56 + x149 * x54 - x151 * x23
    x153 = x152 * x45
    x154 = x143 * x45
    x155 = x154 * x23
    x156 = x148 * x54 - x155
    x157 = x141 * x86 + x142 * x50
    x158 = x148 * x39 + x157 * x37
    x159 = x149 * x45
    x160 = x156 * x56 + x158 * x54 - x159 * x23
    x161 = x147 * x45
    x162 = x1 * (x148 - x154)
    x163 = x156 * x54 - x161 * x23 + x162
    x164 = x1 * (x143 - x145)
    x165 = x141 * x42 + x142 * x66
    x166 = x165 * x45
    x167 = x144 * x54 - x166 * x23
    x168 = x167 * x45
    x169 = x147 * x54 + x164 - x168 * x23
    x170 = x169 * x45
    x171 = x110 * (x148 * x54 - x155 - x161) + x163 * x54 - x170 * x23
    x172 = x1 * (x158 - x159)
    x173 = -x153 * x23 + x160 * x54 + x163 * x56 + x172
    x174 = x1 * (x149 - x151)
    x175 = x144 * x37 + x165 * x39
    x176 = x175 * x45
    x177 = x150 * x54 + x167 * x56 - x176 * x23
    x178 = x177 * x45
    x179 = x152 * x54 + x169 * x56 + x174 - x178 * x23
    x180 = x179 * x45
    x181 = x110 * (-x153 + x160) + x171 * x56 + x173 * x54 - x180 * x23
    x182 = x120 * x17 + x181
    x183 = x119 * x17 + x173
    x184 = x1 * (x144 - x166)
    x185 = x126 * x142 + x141 * x66
    x186 = x165 * x54 - x185 * x57
    x187 = x167 * x54 + x184 - x186 * x57
    x188 = x110 * (x143 * x54 - x146 - x168) + x169 * x54 - x187 * x57
    x189 = x1 * (x150 - x176)
    x190 = x165 * x37 + x185 * x39
    x191 = (
        x103 * (x173 - x180)
        + x181 * x54
        + x56 * (x103 * (x163 - x170) + x171 * x54 - x188 * x57)
        - x57
        * (
            x110 * (x152 - x178)
            + x179 * x54
            + x188 * x56
            - x57
            * (
                x177 * x54
                + x187 * x56
                + x189
                - x57 * (x175 * x54 + x186 * x56 - x190 * x57)
            )
        )
    )
    x192 = x120 * x18
    x193 = x11 * x18
    x194 = x148 * x45
    x195 = x194 * x23
    x196 = x156 * x45
    x197 = x1 * (x157 - x194)
    x198 = -x196 * x23 + x197 + x54 * (x157 * x54 - x195)
    x199 = x163 * x45
    x200 = x110 * (x157 * x54 - x195 - x196) + x198 * x54 - x199 * x23
    x201 = x16 * x200 + x181
    x202 = x16 * x198 + x173
    x203 = x103 * (x198 - x199) - x171 * x57 + x200 * x54
    x204 = x141 * x143 + x142 * x144 + x36
    x205 = x204 * x45
    x206 = x141 * x148 + x142 * x143 + x49
    x207 = x1 * (-x205 + x206)
    x208 = x205 * x23
    x209 = x206 * x54 - x208
    x210 = x141 * x144 + x142 * x165 + x65
    x211 = x210 * x45
    x212 = x204 * x54 - x211 * x23
    x213 = x212 * x45
    x214 = x207 + x209 * x54 - x213 * x23
    x215 = x214 * x45
    x216 = x206 * x45
    x217 = x141 * x157 + x142 * x148 + x85
    x218 = x1 * (-x216 + x217)
    x219 = x216 * x23
    x220 = x209 * x45
    x221 = x218 - x220 * x23 + x54 * (x217 * x54 - x219)
    x222 = x110 * (x217 * x54 - x219 - x220) - x215 * x23 + x221 * x54
    x223 = x1 * (x204 - x211)
    x224 = x137 + x141 * x165 + x142 * x185
    x225 = x17 * x200 + x222
    x226 = x17 * x198 + x221
    x227 = x18 * x200
    x228 = -x25 - A[1]
    x229 = x115 * x26
    x230 = x26 * x92
    x231 = x228 * x51 - x230
    x232 = x231 * x45
    x233 = x1 * (x228 * x87 - x229 - x232)
    x234 = x26 * x45
    x235 = x234 * x38
    x236 = x234 * x35
    x237 = x228 * x38 - x236
    x238 = x237 * x45
    x239 = x1 * (2 * x14 * x19 * x228 * x4 * x47 * x9 - x235 - x238)
    x240 = x228 * x50 - x235
    x241 = x23 * x238
    x242 = x240 * x54 - x241
    x243 = x234 * x42
    x244 = x228 * x35 - x243
    x245 = x244 * x45
    x246 = x23 * x245
    x247 = x237 * x54 - x246
    x248 = x247 * x45
    x249 = -x23 * x248 + x239 + x242 * x54
    x250 = x228 * x87 - x229
    x251 = -x23 * x232 + x242 * x56 + x250 * x54
    x252 = x26 * x60
    x253 = x228 * x40 - x252
    x254 = x253 * x45
    x255 = -x23 * x254 + x231 * x54 + x247 * x56
    x256 = x255 * x45
    x257 = -x23 * x256 + x233 + x249 * x56 + x251 * x54
    x258 = x26 * x83
    x259 = x26 * x46
    x260 = x228 * x52 - x259
    x261 = x260 * x45
    x262 = x1 * (x228 * x88 - x258 - x261)
    x263 = x228 * x88 - x258
    x264 = -x23 * x261 + x255 * x62 + x263 * x54
    x265 = x228 * x44 - x26 * x69
    x266 = x265 * x45
    x267 = x228 * x42 - x234 * x66
    x268 = x267 * x45
    x269 = -x23 * x268 + x244 * x54
    x270 = x228 * x43 - x26 * x71
    x271 = x270 * x45
    x272 = -x23 * x271 + x253 * x54 + x269 * x56
    x273 = -x23 * x266 + x260 * x54 + x272 * x62
    x274 = x273 * x45
    x275 = x1 * (x228 * x51 - x230 - x254)
    x276 = x1 * (2 * x14 * x19 * x228 * x30 * x4 * x9 - x236 - x245)
    x277 = x269 * x45
    x278 = -x23 * x277 + x247 * x54 + x276
    x279 = x272 * x45
    x280 = -x23 * x279 + x255 * x54 + x275 + x278 * x56
    x281 = -x23 * x274 + x262 + x264 * x54 + x280 * x62
    x282 = x16 * x257 + x281
    x283 = x12 * x140 + x282
    x284 = (
        x110 * (x251 - x256)
        + x257 * x54
        - x280 * x57
        + x56 * (x110 * (x240 * x54 - x241 - x248) + x249 * x54 - x278 * x57)
    )
    x285 = x1 * (2 * x14 * x19 * x228 * x33 * x4 * x9 - x243 - x268)
    x286 = -x126 * x234 + x228 * x66
    x287 = x267 * x54 - x286 * x57
    x288 = x269 * x54 + x285 - x287 * x57
    x289 = x1 * (x228 * x40 - x252 - x271)
    x290 = -x131 * x234 + x228 * x67
    x291 = x270 * x54 + x287 * x56 - x290 * x57
    x292 = x272 * x54 + x288 * x56 + x289 - x291 * x57
    x293 = x1 * (x228 * x52 - x259 - x266)
    x294 = -x138 * x234 + x228 * x68
    x295 = (
        x110 * (x264 - x274)
        + x16 * x284
        + x281 * x54
        - x57
        * (x273 * x54 + x292 * x62 + x293 - x57 * (x265 * x54 + x291 * x62 - x294 * x57))
        + x62
        * (
            x110 * (x255 - x279)
            + x280 * x54
            - x292 * x57
            + x56 * (x110 * (x237 * x54 - x246 - x277) + x278 * x54 - x288 * x57)
        )
    )
    x296 = x149 * x228 - x151 * x26 + x253 * x56
    x297 = x296 * x45
    x298 = x158 * x228 - x159 * x26 + x231 * x56
    x299 = x1 * (-x297 + x298)
    x300 = x143 * x228 - x145 * x26 + x244 * x56
    x301 = x300 * x45
    x302 = x148 * x228 - x154 * x26 + x237 * x56
    x303 = x1 * (-x301 + x302)
    x304 = x23 * x301
    x305 = x302 * x54 - x304
    x306 = x144 * x228 - x166 * x26 + x267 * x56
    x307 = x306 * x45
    x308 = -x23 * x307 + x300 * x54
    x309 = x308 * x45
    x310 = -x23 * x309 + x303 + x305 * x54
    x311 = -x23 * x297 + x298 * x54 + x305 * x56
    x312 = x150 * x228 - x176 * x26 + x270 * x56
    x313 = x312 * x45
    x314 = -x23 * x313 + x296 * x54 + x308 * x56
    x315 = x314 * x45
    x316 = -x23 * x315 + x299 + x310 * x56 + x311 * x54
    x317 = x17 * x257 + x316
    x318 = x12 * x183 + x317
    x319 = x1 * (x300 - x307)
    x320 = x165 * x228 - x185 * x234 + x286 * x56
    x321 = x306 * x54 - x320 * x57
    x322 = x308 * x54 + x319 - x321 * x57
    x323 = x1 * (x296 - x313)
    x324 = x175 * x228 - x190 * x234 + x290 * x56
    x325 = (
        x110 * (x311 - x315)
        + x316 * x54
        + x56 * (x110 * (x302 * x54 - x304 - x309) + x310 * x54 - x322 * x57)
        - x57
        * (x314 * x54 + x322 * x56 + x323 - x57 * (x312 * x54 + x321 * x56 - x324 * x57))
    )
    x326 = x17 * x284 + x325
    x327 = x12 * x18
    x328 = x18 * x257
    x329 = x119 * x327 + x328
    x330 = x18 * x284
    x331 = x302 * x45
    x332 = x157 * x228 - x194 * x26 + x240 * x56
    x333 = x1 * (-x331 + x332)
    x334 = x23 * x331
    x335 = x332 * x54 - x334
    x336 = x305 * x45
    x337 = -x23 * x336 + x333 + x335 * x54
    x338 = x16 * x337 + x316
    x339 = x12 * x202 + x338
    x340 = x110 * (x332 * x54 - x334 - x336) - x310 * x57 + x337 * x54
    x341 = x16 * x340 + x325
    x342 = -x205 * x26 + x206 * x228 + x300 * x62
    x343 = x342 * x45
    x344 = -x216 * x26 + x217 * x228 + x302 * x62
    x345 = x1 * (-x343 + x344)
    x346 = x23 * x343
    x347 = x344 * x54 - x346
    x348 = x204 * x228 - x211 * x26 + x306 * x62
    x349 = x348 * x45
    x350 = -x23 * x349 + x342 * x54
    x351 = x350 * x45
    x352 = -x23 * x351 + x345 + x347 * x54
    x353 = x17 * x337 + x352
    x354 = x12 * x226 + x353
    x355 = x1 * (x342 - x349)
    x356 = x210 * x228 - x224 * x234 + x320 * x62
    x357 = (
        x110 * (x344 * x54 - x346 - x351)
        + x17 * x340
        + x352 * x54
        - x57 * (x350 * x54 + x355 - x57 * (x348 * x54 - x356 * x57))
    )
    x358 = x18 * x337
    x359 = x198 * x327 + x358
    x360 = x18 * x340
    x361 = -x27 - A[2]
    x362 = x115 * x28
    x363 = x28 * x92
    x364 = x361 * x51 - x363
    x365 = x364 * x45
    x366 = x1 * (x361 * x87 - x362 - x365)
    x367 = x28 * x45
    x368 = x367 * x38
    x369 = x35 * x367
    x370 = x361 * x38 - x369
    x371 = x370 * x45
    x372 = x1 * (2 * x14 * x19 * x361 * x4 * x47 * x9 - x368 - x371)
    x373 = x361 * x50 - x368
    x374 = x373 * x54
    x375 = x23 * x371
    x376 = x374 - x375
    x377 = x370 * x54
    x378 = x367 * x42
    x379 = x35 * x361 - x378
    x380 = x379 * x45
    x381 = x23 * x380
    x382 = x377 - x381
    x383 = x382 * x45
    x384 = -x23 * x383 + x372 + x376 * x54
    x385 = x361 * x87 - x362
    x386 = -x23 * x365 + x376 * x56 + x385 * x54
    x387 = x364 * x54
    x388 = x28 * x60
    x389 = x361 * x40 - x388
    x390 = x389 * x45
    x391 = -x23 * x390 + x382 * x56 + x387
    x392 = x391 * x45
    x393 = -x23 * x392 + x366 + x384 * x56 + x386 * x54
    x394 = x28 * x83
    x395 = x28 * x46
    x396 = x361 * x52 - x395
    x397 = x396 * x45
    x398 = x1 * (x361 * x88 - x394 - x397)
    x399 = x361 * x88 - x394
    x400 = -x23 * x397 + x391 * x62 + x399 * x54
    x401 = -x28 * x69 + x361 * x44
    x402 = x401 * x45
    x403 = x379 * x54
    x404 = x361 * x42 - x367 * x66
    x405 = x404 * x45
    x406 = x23 * x405
    x407 = x403 - x406
    x408 = x389 * x54
    x409 = -x28 * x71 + x361 * x43
    x410 = x409 * x45
    x411 = x23 * x410
    x412 = x407 * x56 + x408 - x411
    x413 = -x23 * x402 + x396 * x54 + x412 * x62
    x414 = x413 * x45
    x415 = x1 * (x361 * x51 - x363 - x390)
    x416 = x1 * (2 * x14 * x19 * x30 * x361 * x4 * x9 - x369 - x380)
    x417 = x407 * x45
    x418 = -x23 * x417 + x382 * x54 + x416
    x419 = x412 * x45
    x420 = -x23 * x419 + x391 * x54 + x415 + x418 * x56
    x421 = -x23 * x414 + x398 + x400 * x54 + x420 * x62
    x422 = x16 * x393 + x421
    x423 = x13 * x140 + x422
    x424 = (
        x110 * (x386 - x392)
        + x393 * x54
        - x420 * x57
        + x56 * (x110 * (x373 * x54 - x375 - x383) + x384 * x54 - x418 * x57)
    )
    x425 = x1 * (2 * x14 * x19 * x33 * x361 * x4 * x9 - x378 - x405)
    x426 = x404 * x54
    x427 = -x126 * x367 + x361 * x66
    x428 = x427 * x57
    x429 = x426 - x428
    x430 = x407 * x54 + x425 - x429 * x57
    x431 = x1 * (x361 * x40 - x388 - x410)
    x432 = x409 * x54
    x433 = -x131 * x367 + x361 * x67
    x434 = x433 * x57
    x435 = x429 * x56 + x432 - x434
    x436 = x412 * x54 + x430 * x56 + x431 - x435 * x57
    x437 = x1 * (x361 * x52 - x395 - x402)
    x438 = -x138 * x367 + x361 * x68
    x439 = (
        x110 * (x400 - x414)
        + x16 * x424
        + x421 * x54
        - x57
        * (x413 * x54 + x436 * x62 + x437 - x57 * (x401 * x54 + x435 * x62 - x438 * x57))
        + x62
        * (
            x110 * (x391 - x419)
            + x420 * x54
            - x436 * x57
            + x56 * (x110 * (x370 * x54 - x381 - x417) + x418 * x54 - x430 * x57)
        )
    )
    x440 = x159 * x28
    x441 = x151 * x28
    x442 = x149 * x361 - x441
    x443 = x442 * x45
    x444 = x1 * (x158 * x361 - x440 - x443)
    x445 = x154 * x28
    x446 = x145 * x28
    x447 = x143 * x361 - x446
    x448 = x447 * x45
    x449 = x1 * (x148 * x361 - x445 - x448)
    x450 = x148 * x361 - x445
    x451 = x450 * x54
    x452 = x23 * x448
    x453 = x451 - x452
    x454 = x447 * x54
    x455 = x144 * x361 - x166 * x28
    x456 = x45 * x455
    x457 = x23 * x456
    x458 = x454 - x457
    x459 = x45 * x458
    x460 = -x23 * x459 + x449 + x453 * x54
    x461 = x158 * x361 - x440
    x462 = -x23 * x443 + x453 * x56 + x461 * x54
    x463 = x150 * x361 - x176 * x28
    x464 = x45 * x463
    x465 = -x23 * x464 + x442 * x54 + x458 * x56
    x466 = x45 * x465
    x467 = -x23 * x466 + x444 + x460 * x56 + x462 * x54
    x468 = x17 * x393 + x467
    x469 = x13 * x183 + x468
    x470 = x1 * (x143 * x361 - x446 - x456)
    x471 = x455 * x54
    x472 = x165 * x361 - x185 * x367
    x473 = x472 * x57
    x474 = x471 - x473
    x475 = x458 * x54 + x470 - x474 * x57
    x476 = x1 * (x149 * x361 - x441 - x464)
    x477 = x175 * x361 - x190 * x367
    x478 = (
        x110 * (x462 - x466)
        + x467 * x54
        + x56 * (x110 * (x450 * x54 - x452 - x459) + x460 * x54 - x475 * x57)
        - x57
        * (x465 * x54 + x475 * x56 + x476 - x57 * (x463 * x54 + x474 * x56 - x477 * x57))
    )
    x479 = x17 * x424 + x478
    x480 = x13 * x18
    x481 = x389 * x56
    x482 = x1 * (x364 * x56 - x45 * x481)
    x483 = x379 * x56
    x484 = x1 * (x370 * x56 - x45 * x483)
    x485 = x483 * x57
    x486 = x377 * x56 - x485
    x487 = x403 * x56 - x406 * x56
    x488 = x45 * x487
    x489 = -x23 * x488 + x484 + x486 * x54
    x490 = x387 * x56 - x481 * x57 + x486 * x56
    x491 = x408 * x56 - x411 * x56 + x487 * x56
    x492 = x45 * x491
    x493 = -x23 * x492 + x482 + x489 * x56 + x490 * x54
    x494 = x18 * x393 + x493
    x495 = x119 * x480 + x494
    x496 = x405 * x56
    x497 = x1 * (x379 * x56 - x496)
    x498 = x426 * x56 - x428 * x56
    x499 = x487 * x54 + x497 - x498 * x57
    x500 = x410 * x56
    x501 = x1 * (x389 * x56 - x500)
    x502 = (
        x110 * (x490 - x492)
        + x493 * x54
        + x56 * (x110 * (x370 * x54 * x56 - x485 - x488) + x489 * x54 - x499 * x57)
        - x57
        * (x491 * x54 + x499 * x56 + x501 - x57 * (x432 * x56 - x434 * x56 + x498 * x56))
    )
    x503 = x18 * x424 + x502
    x504 = x194 * x28
    x505 = x45 * x450
    x506 = x1 * (x157 * x361 - x504 - x505)
    x507 = x157 * x361 - x504
    x508 = x23 * x505
    x509 = x507 * x54 - x508
    x510 = x45 * x453
    x511 = -x23 * x510 + x506 + x509 * x54
    x512 = x16 * x511 + x467
    x513 = x13 * x202 + x512
    x514 = x110 * (x507 * x54 - x508 - x510) - x460 * x57 + x511 * x54
    x515 = x16 * x514 + x478
    x516 = x216 * x28
    x517 = x205 * x28
    x518 = x206 * x361 - x517
    x519 = x45 * x518
    x520 = x1 * (x217 * x361 - x516 - x519)
    x521 = x217 * x361 - x516
    x522 = x23 * x519
    x523 = x521 * x54 - x522
    x524 = x204 * x361 - x211 * x28
    x525 = x45 * x524
    x526 = -x23 * x525 + x518 * x54
    x527 = x45 * x526
    x528 = -x23 * x527 + x520 + x523 * x54
    x529 = x17 * x511 + x528
    x530 = x13 * x226 + x529
    x531 = x1 * (x206 * x361 - x517 - x525)
    x532 = x210 * x361 - x224 * x367
    x533 = (
        x110 * (x521 * x54 - x522 - x527)
        + x17 * x514
        + x528 * x54
        - x57 * (x526 * x54 + x531 - x57 * (x524 * x54 - x532 * x57))
    )
    x534 = x447 * x56
    x535 = x1 * (-x45 * x534 + x450 * x56)
    x536 = x534 * x57
    x537 = x451 * x56 - x536
    x538 = x454 * x56 - x457 * x56
    x539 = x45 * x538
    x540 = -x23 * x539 + x535 + x537 * x54
    x541 = x18 * x511 + x540
    x542 = x198 * x480 + x541
    x543 = x456 * x56
    x544 = x1 * (x447 * x56 - x543)
    x545 = (
        x110 * (x450 * x54 * x56 - x536 - x539)
        + x54 * x540
        - x57 * (x538 * x54 + x544 - x57 * (x471 * x56 - x473 * x56))
    )
    x546 = x18 * x514 + x545
    x547 = x370 * x56
    x548 = x1 * (x373 * x56 - x45 * x547)
    x549 = x547 * x57
    x550 = x374 * x56 - x549
    x551 = x45 * x486
    x552 = -x23 * x551 + x54 * x550 + x548
    x553 = x16 * x552 + x493
    x554 = x110 * (x373 * x54 * x56 - x549 - x551) - x489 * x57 + x54 * x552
    x555 = x11 * x553 + x16 * x554 + x502
    x556 = x17 * x552 + x540
    x557 = x11 * x556 + x17 * x554 + x545
    x558 = x55 ** (-2.0)
    x559 = 2 * x558
    x560 = x381 * x559
    x561 = x403 * x559 - x406 * x559
    x562 = x45 * x561
    x563 = x1 * (2 * x370 * x558 - x380 * x559)
    x564 = x377 * x559 - x560
    x565 = -x23 * x562 + x54 * x564 + x563
    x566 = x1 * (2 * x379 * x558 - x405 * x559)
    x567 = x18 * x552 + x565
    x568 = (
        x11 * x567
        + x110 * (2 * x370 * x54 * x558 - x560 - x562)
        + x18 * x554
        + x54 * x565
        - x57 * (x54 * x561 + x566 - x57 * (x426 * x559 - x428 * x559))
    )
    x569 = x228 * x260 - x26 * x266 + x53
    x570 = x45 * x569
    x571 = x228 * x263 - x26 * x261 + x89
    x572 = x1 * (-x570 + x571)
    x573 = x228 * x231 - x254 * x26 + x96
    x574 = x45 * x573
    x575 = x116 + x228 * x250 - x232 * x26
    x576 = x1 * (-x574 + x575)
    x577 = x228 * x237 - x245 * x26 + x97
    x578 = x45 * x577
    x579 = x105 + x228 * x240 - x238 * x26
    x580 = x1 * (-x578 + x579)
    x581 = -x23 * x578 + x54 * x579
    x582 = x228 * x244 - x26 * x268 + x76
    x583 = x45 * x582
    x584 = -x23 * x583 + x54 * x577
    x585 = -x23 * x574 + x54 * x575 + x56 * x581
    x586 = x228 * x253 - x26 * x271 + x75
    x587 = x45 * x586
    x588 = -x23 * x587 + x54 * x573 + x56 * x584
    x589 = x54 * x585 + x56 * (x54 * x581 - x57 * x584 + x580) - x57 * x588 + x576
    x590 = -x23 * x570 + x54 * x571 + x588 * x62
    x591 = x1 * (x573 - x587)
    x592 = x1 * (x577 - x583)
    x593 = x125 + x228 * x267 - x234 * x286
    x594 = x54 * x582 - x57 * x593
    x595 = x130 + x228 * x270 - x234 * x290
    x596 = x54 * x586 + x56 * x594 - x57 * x595
    x597 = x136 + x228 * x265 - x234 * x294
    x598 = (
        x16 * x589
        + x54 * x590
        - x57 * (x54 * x569 - x57 * x597 + x596 * x62)
        + x572
        + x62 * (x54 * x588 + x56 * (x54 * x584 - x57 * x594 + x592) - x57 * x596 + x591)
    )
    x599 = x12 * x282 + x598
    x600 = x174 + x228 * x296 - x26 * x313 + x56 * x586
    x601 = x45 * x600
    x602 = x172 + x228 * x298 - x26 * x297 + x56 * x573
    x603 = x1 * (-x601 + x602)
    x604 = x164 + x228 * x300 - x26 * x307 + x56 * x582
    x605 = x45 * x604
    x606 = x162 + x228 * x302 - x26 * x301 + x56 * x577
    x607 = x1 * (-x605 + x606)
    x608 = -x23 * x605 + x54 * x606
    x609 = x184 + x228 * x306 - x234 * x320 + x56 * x593
    x610 = x54 * x604 - x57 * x609
    x611 = -x23 * x601 + x54 * x602 + x56 * x608
    x612 = x189 + x228 * x312 - x234 * x324 + x56 * x595
    x613 = (
        x54 * x611
        + x56 * (x54 * x608 - x57 * x610 + x607)
        - x57 * (x54 * x600 + x56 * x610 - x57 * x612)
        + x603
    )
    x614 = x17 * x589 + x613
    x615 = x12 * x317 + x614
    x616 = x18 * x589
    x617 = x12 * x328 + x616
    x618 = x45 * x606
    x619 = x197 + x228 * x332 - x26 * x331 + x56 * x579
    x620 = x1 * (-x618 + x619)
    x621 = -x23 * x618 + x54 * x619
    x622 = x54 * x621 - x57 * x608 + x620
    x623 = x16 * x622 + x613
    x624 = x12 * x338 + x623
    x625 = x207 + x228 * x342 - x26 * x349 + x604 * x62
    x626 = x45 * x625
    x627 = x218 + x228 * x344 - x26 * x343 + x606 * x62
    x628 = x1 * (-x626 + x627)
    x629 = -x23 * x626 + x54 * x627
    x630 = x223 + x228 * x348 - x234 * x356 + x609 * x62
    x631 = x17 * x622 + x54 * x629 - x57 * (x54 * x625 - x57 * x630) + x628
    x632 = x12 * x353 + x631
    x633 = x18 * x622
    x634 = x12 * x358 + x633
    x635 = x26 * x397
    x636 = x228 * x396 - x26 * x402
    x637 = x45 * x636
    x638 = x1 * (x228 * x399 - x635 - x637)
    x639 = x26 * x365
    x640 = x26 * x390
    x641 = x228 * x364 - x640
    x642 = x45 * x641
    x643 = x1 * (x228 * x385 - x639 - x642)
    x644 = x26 * x371
    x645 = x228 * x370
    x646 = x26 * x380
    x647 = x645 - x646
    x648 = x45 * x647
    x649 = x1 * (x228 * x373 - x644 - x648)
    x650 = x228 * x373 - x644
    x651 = -x23 * x648 + x54 * x650
    x652 = x228 * x379
    x653 = x26 * x405
    x654 = x652 - x653
    x655 = x45 * x654
    x656 = -x23 * x655 + x54 * x647
    x657 = x228 * x385 - x639
    x658 = -x23 * x642 + x54 * x657 + x56 * x651
    x659 = x228 * x389 - x26 * x410
    x660 = x45 * x659
    x661 = -x23 * x660 + x54 * x641 + x56 * x656
    x662 = x54 * x658 + x56 * (x54 * x651 - x57 * x656 + x649) - x57 * x661 + x643
    x663 = x228 * x399 - x635
    x664 = -x23 * x637 + x54 * x663 + x62 * x661
    x665 = x1 * (x228 * x364 - x640 - x660)
    x666 = x1 * (x228 * x370 - x646 - x655)
    x667 = x228 * x404
    x668 = x234 * x427
    x669 = x667 - x668
    x670 = x54 * x654 - x57 * x669
    x671 = x228 * x409
    x672 = x234 * x433
    x673 = x671 - x672
    x674 = x54 * x659 + x56 * x670 - x57 * x673
    x675 = x228 * x401 - x234 * x438
    x676 = (
        x16 * x662
        + x54 * x664
        - x57 * (x54 * x636 - x57 * x675 + x62 * x674)
        + x62 * (x54 * x661 + x56 * (x54 * x656 - x57 * x670 + x666) - x57 * x674 + x665)
        + x638
    )
    x677 = x13 * x282 + x676
    x678 = x228 * x442 - x26 * x464 + x56 * x659
    x679 = x45 * x678
    x680 = x228 * x461 - x26 * x443 + x56 * x641
    x681 = x1 * (-x679 + x680)
    x682 = x228 * x447 - x26 * x456 + x56 * x654
    x683 = x45 * x682
    x684 = x228 * x450 - x26 * x448 + x56 * x647
    x685 = x1 * (-x683 + x684)
    x686 = -x23 * x683 + x54 * x684
    x687 = x228 * x455
    x688 = x234 * x472
    x689 = x56 * x669 + x687 - x688
    x690 = x54 * x682 - x57 * x689
    x691 = -x23 * x679 + x54 * x680 + x56 * x686
    x692 = x228 * x463 - x234 * x477 + x56 * x673
    x693 = (
        x54 * x691
        + x56 * (x54 * x686 - x57 * x690 + x685)
        - x57 * (x54 * x678 + x56 * x690 - x57 * x692)
        + x681
    )
    x694 = x17 * x662 + x693
    x695 = x13 * x317 + x694
    x696 = x234 * x481
    x697 = x228 * x481 - x26 * x500
    x698 = x45 * x697
    x699 = x1 * (x228 * x364 * x56 - x696 - x698)
    x700 = x234 * x483
    x701 = x228 * x483 - x26 * x496
    x702 = x45 * x701
    x703 = x1 * (x228 * x370 * x56 - x700 - x702)
    x704 = x228 * x547 - x700
    x705 = -x23 * x702 + x54 * x704
    x706 = x56 * x667 - x56 * x668
    x707 = x54 * x701 - x57 * x706
    x708 = x364 * x56
    x709 = x228 * x708 - x696
    x710 = -x23 * x698 + x54 * x709 + x56 * x705
    x711 = x56 * x671 - x56 * x672
    x712 = (
        x54 * x710
        + x56 * (x54 * x705 - x57 * x707 + x703)
        - x57 * (x54 * x697 + x56 * x707 - x57 * x711)
        + x699
    )
    x713 = x18 * x662 + x712
    x714 = x13 * x328 + x713
    x715 = x45 * x684
    x716 = x228 * x507 - x26 * x505 + x56 * x650
    x717 = x1 * (-x715 + x716)
    x718 = -x23 * x715 + x54 * x716
    x719 = x54 * x718 - x57 * x686 + x717
    x720 = x16 * x719 + x693
    x721 = x13 * x338 + x720
    x722 = x228 * x518 - x26 * x525 + x62 * x682
    x723 = x45 * x722
    x724 = x228 * x521 - x26 * x519 + x62 * x684
    x725 = x1 * (-x723 + x724)
    x726 = -x23 * x723 + x54 * x724
    x727 = x228 * x524 - x234 * x532 + x62 * x689
    x728 = x17 * x719 + x54 * x726 - x57 * (x54 * x722 - x57 * x727) + x725
    x729 = x13 * x353 + x728
    x730 = x228 * x534 - x26 * x543 + x56 * x701
    x731 = x45 * x730
    x732 = x450 * x56
    x733 = x228 * x732 - x234 * x534 + x56 * x704
    x734 = x1 * (-x731 + x733)
    x735 = -x23 * x731 + x54 * x733
    x736 = x56 * x687 - x56 * x688 + x56 * x706
    x737 = x54 * x735 - x57 * (x54 * x730 - x57 * x736) + x734
    x738 = x18 * x719 + x737
    x739 = x13 * x358 + x738
    x740 = x234 * x547
    x741 = x45 * x704
    x742 = x1 * (x228 * x373 * x56 - x740 - x741)
    x743 = x373 * x56
    x744 = x228 * x743 - x740
    x745 = -x23 * x741 + x54 * x744
    x746 = x54 * x745 - x57 * x705 + x742
    x747 = x16 * x746 + x712
    x748 = x12 * x553 + x747
    x749 = x17 * x746 + x737
    x750 = x12 * x556 + x749
    x751 = x559 * x646
    x752 = x559 * x652 - x559 * x653
    x753 = x45 * x752
    x754 = x1 * (2 * x228 * x370 * x558 - x751 - x753)
    x755 = x559 * x645 - x751
    x756 = -x23 * x753 + x54 * x755
    x757 = x559 * x667 - x559 * x668
    x758 = x18 * x746 + x54 * x756 - x57 * (x54 * x752 - x57 * x757) + x754
    x759 = x12 * x567 + x758
    x760 = -x28 * x402 + x361 * x396 + x53
    x761 = x45 * x760
    x762 = -x28 * x397 + x361 * x399 + x89
    x763 = x1 * (-x761 + x762)
    x764 = -x28 * x390 + x361 * x364 + x96
    x765 = x45 * x764
    x766 = x116 - x28 * x365 + x361 * x385
    x767 = x1 * (-x765 + x766)
    x768 = x361 * x370
    x769 = x28 * x380
    x770 = x768 - x769 + x97
    x771 = x45 * x770
    x772 = x105 - x28 * x371 + x361 * x373
    x773 = x1 * (-x771 + x772)
    x774 = -x23 * x771 + x54 * x772
    x775 = x361 * x379
    x776 = x28 * x405
    x777 = x76 + x775 - x776
    x778 = x45 * x777
    x779 = -x23 * x778 + x54 * x770
    x780 = -x23 * x765 + x54 * x766 + x56 * x774
    x781 = -x28 * x410 + x361 * x389 + x75
    x782 = x45 * x781
    x783 = -x23 * x782 + x54 * x764 + x56 * x779
    x784 = x54 * x780 + x56 * (x54 * x774 - x57 * x779 + x773) - x57 * x783 + x767
    x785 = -x23 * x761 + x54 * x762 + x62 * x783
    x786 = x1 * (x764 - x782)
    x787 = x1 * (x770 - x778)
    x788 = x361 * x404
    x789 = x367 * x427
    x790 = x125 + x788 - x789
    x791 = x54 * x777 - x57 * x790
    x792 = x361 * x409
    x793 = x367 * x433
    x794 = x130 + x792 - x793
    x795 = x54 * x781 + x56 * x791 - x57 * x794
    x796 = x136 + x361 * x401 - x367 * x438
    x797 = (
        x16 * x784
        + x54 * x785
        - x57 * (x54 * x760 - x57 * x796 + x62 * x795)
        + x62 * (x54 * x783 + x56 * (x54 * x779 - x57 * x791 + x787) - x57 * x795 + x786)
        + x763
    )
    x798 = x13 * x422 + x797
    x799 = x174 - x28 * x464 + x361 * x442
    x800 = x45 * x799
    x801 = x172 - x28 * x443 + x361 * x461
    x802 = x1 * (-x800 + x801)
    x803 = x164 - x28 * x456 + x361 * x447
    x804 = x45 * x803
    x805 = x162 - x28 * x448 + x361 * x450
    x806 = x1 * (-x804 + x805)
    x807 = -x23 * x804 + x54 * x805
    x808 = x361 * x455
    x809 = x367 * x472
    x810 = x184 + x808 - x809
    x811 = x54 * x803 - x57 * x810
    x812 = -x23 * x800 + x54 * x801 + x56 * x807
    x813 = x189 + x361 * x463 - x367 * x477
    x814 = (
        x54 * x812
        + x56 * (x54 * x807 - x57 * x811 + x806)
        - x57 * (x54 * x799 + x56 * x811 - x57 * x813)
        + x802
    )
    x815 = x17 * x784 + x814
    x816 = x13 * x468 + x815
    x817 = -x28 * x500 + x361 * x481 + x56 * x781
    x818 = x45 * x817
    x819 = x361 * x708 - x367 * x481 + x56 * x764
    x820 = x1 * (-x818 + x819)
    x821 = -x28 * x496 + x361 * x483 + x56 * x777
    x822 = x45 * x821
    x823 = x361 * x547 - x367 * x483 + x56 * x770
    x824 = x1 * (-x822 + x823)
    x825 = -x23 * x822 + x54 * x823
    x826 = x56 * x788 - x56 * x789 + x56 * x790
    x827 = x54 * x821 - x57 * x826
    x828 = -x23 * x818 + x54 * x819 + x56 * x825
    x829 = x56 * x792 - x56 * x793 + x56 * x794
    x830 = (
        x54 * x828
        + x56 * (x54 * x825 - x57 * x827 + x824)
        - x57 * (x54 * x817 + x56 * x827 - x57 * x829)
        + x820
    )
    x831 = x18 * x784 + x830
    x832 = x13 * x494 + x831
    x833 = x45 * x805
    x834 = x197 - x28 * x505 + x361 * x507
    x835 = x1 * (-x833 + x834)
    x836 = -x23 * x833 + x54 * x834
    x837 = x54 * x836 - x57 * x807 + x835
    x838 = x16 * x837 + x814
    x839 = x13 * x512 + x838
    x840 = x207 - x28 * x525 + x361 * x518
    x841 = x45 * x840
    x842 = x218 - x28 * x519 + x361 * x521
    x843 = x1 * (-x841 + x842)
    x844 = -x23 * x841 + x54 * x842
    x845 = x223 + x361 * x524 - x367 * x532
    x846 = x17 * x837 + x54 * x844 - x57 * (x54 * x840 - x57 * x845) + x843
    x847 = x13 * x529 + x846
    x848 = -x28 * x543 + x361 * x534 + x56 * x803
    x849 = x45 * x848
    x850 = x361 * x732 - x367 * x534 + x56 * x805
    x851 = x1 * (-x849 + x850)
    x852 = -x23 * x849 + x54 * x850
    x853 = x56 * x808 - x56 * x809 + x56 * x810
    x854 = x54 * x852 - x57 * (x54 * x848 - x57 * x853) + x851
    x855 = x18 * x837 + x854
    x856 = x13 * x541 + x855
    x857 = x13 * x553
    x858 = x45 * x823
    x859 = x361 * x743 - x367 * x547 + x56 * x772
    x860 = x1 * (-x858 + x859)
    x861 = -x23 * x858 + x54 * x859
    x862 = x54 * x861 - x57 * x825 + x860
    x863 = x16 * x862 + x830
    x864 = x13 * x556
    x865 = x17 * x862 + x854
    x866 = x13 * x567
    x867 = x559 * x775 - x559 * x776 + x62 * x821
    x868 = x45 * x867
    x869 = x559 * x768 - x559 * x769 + x62 * x823
    x870 = x1 * (-x868 + x869)
    x871 = -x23 * x868 + x54 * x869
    x872 = x559 * x788 - x559 * x789 + x62 * x826
    x873 = x18 * x862 + x54 * x871 - x57 * (x54 * x867 - x57 * x872) + x870
    x874 = x16 * x251 + x264
    x875 = x17 * x251 + x311
    x876 = x16 * x335 + x311
    x877 = x17 * x335 + x347
    x878 = x16 * x585 + x590
    x879 = x12 * x874 + x878
    x880 = x17 * x585 + x611
    x881 = x12 * x875 + x880
    x882 = x18 * x585
    x883 = x251 * x327 + x882
    x884 = x16 * x621 + x611
    x885 = x12 * x876 + x884
    x886 = x17 * x621 + x629
    x887 = x12 * x877 + x886
    x888 = x18 * x621
    x889 = x327 * x335 + x888
    x890 = x16 * x658 + x664
    x891 = x13 * x874 + x890
    x892 = x17 * x658 + x691
    x893 = x13 * x875 + x892
    x894 = x18 * x658 + x710
    x895 = x251 * x480 + x894
    x896 = x16 * x718 + x691
    x897 = x13 * x876 + x896
    x898 = x17 * x718 + x726
    x899 = x13 * x877 + x898
    x900 = x18 * x718 + x735
    x901 = x335 * x480 + x900
    x902 = x16 * x745 + x710
    x903 = x11 * x902 + x747
    x904 = x17 * x745 + x735
    x905 = x11 * x904 + x749
    x906 = x18 * x745 + x756
    x907 = x11 * x906 + x758
    x908 = x228 * x579 + 2 * x239 - x26 * x578
    x909 = x228 * x577 - x26 * x583 + 2 * x276
    x910 = x228 * x575 + 2 * x233 - x26 * x574
    x911 = x228 * x573 - x26 * x587 + 2 * x275
    x912 = x54 * x910 + x56 * (x54 * x908 - x57 * x909) - x57 * x911
    x913 = x228 * x571 - x26 * x570 + 2 * x262
    x914 = x228 * x582 - x234 * x593 + 2 * x285
    x915 = x228 * x586 - x234 * x595 + 2 * x289
    x916 = x228 * x569 - x234 * x597 + 2 * x293
    x917 = (
        x12 * x878
        + x16 * x912
        + x54 * x913
        - x57 * x916
        + x62 * (x54 * x911 + x56 * (x54 * x909 - x57 * x914) - x57 * x915)
    )
    x918 = x228 * x606 - x26 * x605 + 2 * x303 + x56 * x909
    x919 = x228 * x604 - x234 * x609 + 2 * x319 + x56 * x914
    x920 = x228 * x602 - x26 * x601 + 2 * x299 + x56 * x911
    x921 = x228 * x600 - x234 * x612 + 2 * x323 + x56 * x915
    x922 = x54 * x920 + x56 * (x54 * x918 - x57 * x919) - x57 * x921
    x923 = x12 * x880 + x17 * x912 + x922
    x924 = x12 * x882 + x18 * x912
    x925 = x228 * x619 - x26 * x618 + 2 * x333 + x56 * x908
    x926 = x54 * x925 - x57 * x918
    x927 = x12 * x884 + x16 * x926 + x922
    x928 = x228 * x627 - x26 * x626 + 2 * x345 + x62 * x918
    x929 = x228 * x625 - x234 * x630 + 2 * x355 + x62 * x919
    x930 = x12 * x886 + x17 * x926 + x54 * x928 - x57 * x929
    x931 = x12 * x888 + x18 * x926
    x932 = x228 * x650 - x26 * x648 + x372
    x933 = x228 * x647 - x26 * x655 + x416
    x934 = x228 * x657 - x26 * x642 + x366
    x935 = x228 * x641 - x26 * x660 + x415
    x936 = x54 * x934 + x56 * (x54 * x932 - x57 * x933) - x57 * x935
    x937 = x228 * x663 - x26 * x637 + x398
    x938 = x228 * x654 - x234 * x669 + x425
    x939 = x228 * x659 - x234 * x673 + x431
    x940 = x228 * x636 - x234 * x675 + x437
    x941 = (
        x16 * x936
        + x54 * x937
        - x57 * x940
        + x62 * (x54 * x935 + x56 * (x54 * x933 - x57 * x938) - x57 * x939)
    )
    x942 = x13 * x878 + x941
    x943 = x228 * x684 - x26 * x683 + x449 + x56 * x933
    x944 = x228 * x682 - x234 * x689 + x470 + x56 * x938
    x945 = x228 * x680 - x26 * x679 + x444 + x56 * x935
    x946 = x228 * x678 - x234 * x692 + x476 + x56 * x939
    x947 = x54 * x945 + x56 * (x54 * x943 - x57 * x944) - x57 * x946
    x948 = x17 * x936 + x947
    x949 = x13 * x880 + x948
    x950 = x228 * x704 - x26 * x702 + x484
    x951 = x228 * x701 - x234 * x706 + x497
    x952 = x228 * x709 - x26 * x698 + x482
    x953 = x228 * x697 - x234 * x711 + x501
    x954 = x54 * x952 + x56 * (x54 * x950 - x57 * x951) - x57 * x953
    x955 = x18 * x936 + x954
    x956 = x13 * x882 + x955
    x957 = x228 * x716 - x26 * x715 + x506 + x56 * x932
    x958 = x54 * x957 - x57 * x943
    x959 = x16 * x958 + x947
    x960 = x13 * x884 + x959
    x961 = x228 * x724 - x26 * x723 + x520 + x62 * x943
    x962 = x228 * x722 - x234 * x727 + x531 + x62 * x944
    x963 = x17 * x958 + x54 * x961 - x57 * x962
    x964 = x13 * x886 + x963
    x965 = x228 * x733 - x26 * x731 + x535 + x56 * x950
    x966 = x228 * x730 - x234 * x736 + x544 + x56 * x951
    x967 = x54 * x965 - x57 * x966
    x968 = x18 * x958 + x967
    x969 = x13 * x888 + x968
    x970 = x228 * x744 - x26 * x741 + x548
    x971 = x54 * x970 - x57 * x950
    x972 = x16 * x971 + x954
    x973 = x12 * x902 + x972
    x974 = x17 * x971 + x967
    x975 = x12 * x904 + x974
    x976 = x228 * x755 - x26 * x753 + x563
    x977 = x228 * x752 - x234 * x757 + x566
    x978 = x18 * x971 + x54 * x976 - x57 * x977
    x979 = x12 * x906 + x978
    x980 = x228 * x772 - x26 * x771
    x981 = x228 * x770 - x26 * x778
    x982 = x228 * x766 - x26 * x765
    x983 = x228 * x764 - x26 * x782
    x984 = x54 * x982 + x56 * (x54 * x980 - x57 * x981) - x57 * x983
    x985 = x228 * x762 - x26 * x761
    x986 = x228 * x777 - x234 * x790
    x987 = x228 * x781 - x234 * x794
    x988 = x228 * x760 - x234 * x796
    x989 = (
        x16 * x984
        + x54 * x985
        - x57 * x988
        + x62 * (x54 * x983 + x56 * (x54 * x981 - x57 * x986) - x57 * x987)
    )
    x990 = x13 * x890 + x989
    x991 = x228 * x805 - x26 * x804 + x56 * x981
    x992 = x228 * x803 - x234 * x810 + x56 * x986
    x993 = x228 * x801 - x26 * x800 + x56 * x983
    x994 = x228 * x799 - x234 * x813 + x56 * x987
    x995 = x54 * x993 + x56 * (x54 * x991 - x57 * x992) - x57 * x994
    x996 = x17 * x984 + x995
    x997 = x13 * x892 + x996
    x998 = x228 * x823 - x26 * x822
    x999 = x228 * x821 - x234 * x826
    x1000 = x228 * x819 - x26 * x818
    x1001 = x228 * x817 - x234 * x829
    x1002 = x1000 * x54 - x1001 * x57 + x56 * (x54 * x998 - x57 * x999)
    x1003 = x1002 + x18 * x984
    x1004 = x1003 + x13 * x894
    x1005 = x228 * x834 - x26 * x833 + x56 * x980
    x1006 = x1005 * x54 - x57 * x991
    x1007 = x1006 * x16 + x995
    x1008 = x1007 + x13 * x896
    x1009 = x228 * x842 - x26 * x841 + x62 * x991
    x1010 = x228 * x840 - x234 * x845 + x62 * x992
    x1011 = x1006 * x17 + x1009 * x54 - x1010 * x57
    x1012 = x1011 + x13 * x898
    x1013 = x228 * x850 - x26 * x849 + x56 * x998
    x1014 = x228 * x848 - x234 * x853 + x56 * x999
    x1015 = x1013 * x54 - x1014 * x57
    x1016 = x1006 * x18 + x1015
    x1017 = x1016 + x13 * x900
    x1018 = x13 * x902
    x1019 = x228 * x859 - x26 * x858
    x1020 = x1019 * x54 - x57 * x998
    x1021 = x1002 + x1020 * x16
    x1022 = x13 * x904
    x1023 = x1015 + x1020 * x17
    x1024 = x13 * x906
    x1025 = x228 * x869 - x26 * x868
    x1026 = x228 * x867 - x234 * x872
    x1027 = x1020 * x18 + x1025 * x54 - x1026 * x57
    x1028 = x16 * x386 + x400
    x1029 = x17 * x386 + x462
    x1030 = x18 * x386 + x490
    x1031 = x16 * x509 + x462
    x1032 = x17 * x509 + x523
    x1033 = x18 * x509 + x537
    x1034 = x16 * x550 + x490
    x1035 = x17 * x550 + x537
    x1036 = x18 * x550 + x564
    x1037 = x1028 * x12 + x890
    x1038 = x1029 * x12 + x892
    x1039 = x1030 * x12 + x894
    x1040 = x1031 * x12 + x896
    x1041 = x1032 * x12 + x898
    x1042 = x1033 * x12 + x900
    x1043 = x1034 * x12 + x902
    x1044 = x1035 * x12 + x904
    x1045 = x1036 * x12 + x906
    x1046 = x16 * x780 + x785
    x1047 = x1028 * x13 + x1046
    x1048 = x17 * x780 + x812
    x1049 = x1029 * x13 + x1048
    x1050 = x18 * x780 + x828
    x1051 = x1030 * x13 + x1050
    x1052 = x16 * x836 + x812
    x1053 = x1031 * x13 + x1052
    x1054 = x17 * x836 + x844
    x1055 = x1032 * x13 + x1054
    x1056 = x18 * x836 + x852
    x1057 = x1033 * x13 + x1056
    x1058 = x16 * x861 + x828
    x1059 = x1034 * x13 + x1058
    x1060 = x17 * x861 + x852
    x1061 = x1035 * x13 + x1060
    x1062 = x18 * x861 + x871
    x1063 = x1036 * x13 + x1062
    x1064 = x12 * x890 + x941
    x1065 = x12 * x892 + x948
    x1066 = x12 * x894 + x955
    x1067 = x12 * x896 + x959
    x1068 = x12 * x898 + x963
    x1069 = x12 * x900 + x968
    x1070 = x1018 + x1021
    x1071 = x1022 + x1023
    x1072 = x1024 + x1027
    x1073 = -x28 * x771 + x361 * x772 + 2 * x372
    x1074 = -x28 * x778 + x361 * x770 + 2 * x416
    x1075 = -x28 * x765 + x361 * x766 + 2 * x366
    x1076 = -x28 * x782 + x361 * x764 + 2 * x415
    x1077 = x1075 * x54 - x1076 * x57 + x56 * (x1073 * x54 - x1074 * x57)
    x1078 = -x28 * x761 + x361 * x762 + 2 * x398
    x1079 = x361 * x777 - x367 * x790 + 2 * x425
    x1080 = x361 * x781 - x367 * x794 + 2 * x431
    x1081 = x361 * x760 - x367 * x796 + 2 * x437
    x1082 = (
        x1046 * x13
        + x1077 * x16
        + x1078 * x54
        - x1081 * x57
        + x62 * (x1076 * x54 - x1080 * x57 + x56 * (x1074 * x54 - x1079 * x57))
    )
    x1083 = -x28 * x804 + x361 * x805 + 2 * x449
    x1084 = x361 * x803 - x367 * x810 + 2 * x470
    x1085 = -x28 * x800 + x361 * x801 + 2 * x444
    x1086 = x361 * x799 - x367 * x813 + 2 * x476
    x1087 = x1085 * x54 - x1086 * x57 + x56 * (x1083 * x54 - x1084 * x57)
    x1088 = x1048 * x13 + x1077 * x17 + x1087
    x1089 = x1074 * x56 - x28 * x822 + x361 * x823 + 2 * x484
    x1090 = x1079 * x56 + x361 * x821 - x367 * x826 + 2 * x497
    x1091 = x1076 * x56 - x28 * x818 + x361 * x819 + 2 * x482
    x1092 = x1080 * x56 + x361 * x817 - x367 * x829 + 2 * x501
    x1093 = x1091 * x54 - x1092 * x57 + x56 * (x1089 * x54 - x1090 * x57)
    x1094 = x1050 * x13 + x1077 * x18 + x1093
    x1095 = -x28 * x833 + x361 * x834 + 2 * x506
    x1096 = -x1083 * x57 + x1095 * x54
    x1097 = x1052 * x13 + x1087 + x1096 * x16
    x1098 = -x28 * x841 + x361 * x842 + 2 * x520
    x1099 = x361 * x840 - x367 * x845 + 2 * x531
    x1100 = x1054 * x13 + x1096 * x17 + x1098 * x54 - x1099 * x57
    x1101 = x1083 * x56 - x28 * x849 + x361 * x850 + 2 * x535
    x1102 = x1084 * x56 + x361 * x848 - x367 * x853 + 2 * x544
    x1103 = x1101 * x54 - x1102 * x57
    x1104 = x1056 * x13 + x1096 * x18 + x1103
    x1105 = x1073 * x56 - x28 * x858 + x361 * x859 + 2 * x548
    x1106 = -x1089 * x57 + x1105 * x54
    x1107 = x1058 * x13 + x1093 + x1106 * x16
    x1108 = x1060 * x13 + x1103 + x1106 * x17
    x1109 = x1089 * x62 - x28 * x868 + x361 * x869 + 2 * x563
    x1110 = x1090 * x62 + x361 * x867 - x367 * x872 + 2 * x566
    x1111 = x1062 * x13 + x1106 * x18 + x1109 * x54 - x1110 * x57
    x1112 = x16 * x575 + x571
    x1113 = x17 * x575 + x602
    x1114 = x16 * x619 + x602
    x1115 = x17 * x619 + x627
    x1116 = x16 * x910 + x913
    x1117 = x1112 * x12 + x1116
    x1118 = x17 * x910 + x920
    x1119 = x1113 * x12 + x1118
    x1120 = x18 * x910
    x1121 = x1120 + x327 * x575
    x1122 = x16 * x925 + x920
    x1123 = x1114 * x12 + x1122
    x1124 = x17 * x925 + x928
    x1125 = x1115 * x12 + x1124
    x1126 = x18 * x925
    x1127 = x1126 + x327 * x619
    x1128 = x16 * x934 + x937
    x1129 = x1112 * x13 + x1128
    x1130 = x17 * x934 + x945
    x1131 = x1113 * x13 + x1130
    x1132 = x18 * x934 + x952
    x1133 = x1132 + x480 * x575
    x1134 = x16 * x957 + x945
    x1135 = x1114 * x13 + x1134
    x1136 = x17 * x957 + x961
    x1137 = x1115 * x13 + x1136
    x1138 = x18 * x957 + x965
    x1139 = x1138 + x480 * x619
    x1140 = x16 * x970 + x952
    x1141 = x17 * x970 + x965
    x1142 = x18 * x970 + x976
    x1143 = x228 * x910 - x234 * x911 + 3 * x576
    x1144 = (
        x228 * x920
        - x234 * x921
        + x56 * (x228 * x911 - x234 * x915 + 3 * x591)
        + 3 * x603
    )
    x1145 = (
        x228 * x925
        - x234 * x918
        + x56 * (x228 * x908 - x234 * x909 + 3 * x580)
        + 3 * x620
    )
    x1146 = x228 * x934 - x234 * x935 + 2 * x643
    x1147 = x1146 * x16 + x228 * x937 - x234 * x940 + 2 * x638
    x1148 = (
        x228 * x945
        - x234 * x946
        + x56 * (x228 * x935 - x234 * x939 + 2 * x665)
        + 2 * x681
    )
    x1149 = x1146 * x17 + x1148
    x1150 = x228 * x952 - x234 * x953 + 2 * x699
    x1151 = x1146 * x18 + x1150
    x1152 = (
        x228 * x957
        - x234 * x943
        + x56 * (x228 * x932 - x234 * x933 + 2 * x649)
        + 2 * x717
    )
    x1153 = x1148 + x1152 * x16
    x1154 = (
        x1152 * x17
        + x228 * x961
        - x234 * x962
        + x62
        * (
            x228 * x943
            - x234 * x944
            + x56 * (x228 * x933 - x234 * x938 + 2 * x666)
            + 2 * x685
        )
        + 2 * x725
    )
    x1155 = (
        x228 * x965
        - x234 * x966
        + x56 * (x228 * x950 - x234 * x951 + 2 * x703)
        + 2 * x734
    )
    x1156 = x1152 * x18 + x1155
    x1157 = x228 * x970 - x234 * x950 + 2 * x742
    x1158 = x1140 * x12 + x1150 + x1157 * x16
    x1159 = x1141 * x12 + x1155 + x1157 * x17
    x1160 = x1142 * x12 + x1157 * x18 + x228 * x976 - x234 * x977 + 2 * x754
    x1161 = x228 * x982 - x234 * x983 + x767
    x1162 = x1161 * x16 + x228 * x985 - x234 * x988 + x763
    x1163 = x1128 * x13 + x1162
    x1164 = x228 * x993 - x234 * x994 + x56 * (x228 * x983 - x234 * x987 + x786) + x802
    x1165 = x1161 * x17 + x1164
    x1166 = x1130 * x13 + x1165
    x1167 = x1000 * x228 - x1001 * x234 + x820
    x1168 = x1161 * x18 + x1167
    x1169 = x1132 * x13 + x1168
    x1170 = x1005 * x228 - x234 * x991 + x56 * (x228 * x980 - x234 * x981 + x773) + x835
    x1171 = x1164 + x1170 * x16
    x1172 = x1134 * x13 + x1171
    x1173 = (
        x1009 * x228
        - x1010 * x234
        + x1170 * x17
        + x62
        * (x228 * x991 - x234 * x992 + x56 * (x228 * x981 - x234 * x986 + x787) + x806)
        + x843
    )
    x1174 = x1136 * x13 + x1173
    x1175 = x1013 * x228 - x1014 * x234 + x56 * (x228 * x998 - x234 * x999 + x824) + x851
    x1176 = x1170 * x18 + x1175
    x1177 = x1138 * x13 + x1176
    x1178 = x1140 * x13
    x1179 = x1019 * x228 - x234 * x998 + x860
    x1180 = x1167 + x1179 * x16
    x1181 = x1141 * x13
    x1182 = x1175 + x1179 * x17
    x1183 = x1142 * x13
    x1184 = x1025 * x228 - x1026 * x234 + x1179 * x18 + x870
    x1185 = x16 * x657 + x663
    x1186 = x17 * x657 + x680
    x1187 = x18 * x657 + x709
    x1188 = x16 * x716 + x680
    x1189 = x17 * x716 + x724
    x1190 = x18 * x716 + x733
    x1191 = x16 * x744 + x709
    x1192 = x17 * x744 + x733
    x1193 = x18 * x744 + x755
    x1194 = x1128 + x1185 * x12
    x1195 = x1130 + x1186 * x12
    x1196 = x1132 + x1187 * x12
    x1197 = x1134 + x1188 * x12
    x1198 = x1136 + x1189 * x12
    x1199 = x1138 + x1190 * x12
    x1200 = x1140 + x1191 * x12
    x1201 = x1141 + x1192 * x12
    x1202 = x1142 + x1193 * x12
    x1203 = x16 * x982 + x985
    x1204 = x1185 * x13 + x1203
    x1205 = x17 * x982 + x993
    x1206 = x1186 * x13 + x1205
    x1207 = x1000 + x18 * x982
    x1208 = x1187 * x13 + x1207
    x1209 = x1005 * x16 + x993
    x1210 = x1188 * x13 + x1209
    x1211 = x1005 * x17 + x1009
    x1212 = x1189 * x13 + x1211
    x1213 = x1005 * x18 + x1013
    x1214 = x1190 * x13 + x1213
    x1215 = x1000 + x1019 * x16
    x1216 = x1191 * x13 + x1215
    x1217 = x1013 + x1019 * x17
    x1218 = x1192 * x13 + x1217
    x1219 = x1019 * x18 + x1025
    x1220 = x1193 * x13 + x1219
    x1221 = x1075 * x228 - x1076 * x234
    x1222 = x1078 * x228 - x1081 * x234 + x1203 * x13 + x1221 * x16
    x1223 = x1085 * x228 - x1086 * x234 + x56 * (x1076 * x228 - x1080 * x234)
    x1224 = x1205 * x13 + x1221 * x17 + x1223
    x1225 = x1091 * x228 - x1092 * x234
    x1226 = x1207 * x13 + x1221 * x18 + x1225
    x1227 = -x1083 * x234 + x1095 * x228 + x56 * (x1073 * x228 - x1074 * x234)
    x1228 = x1209 * x13 + x1223 + x1227 * x16
    x1229 = (
        x1098 * x228
        - x1099 * x234
        + x1211 * x13
        + x1227 * x17
        + x62 * (x1083 * x228 - x1084 * x234 + x56 * (x1074 * x228 - x1079 * x234))
    )
    x1230 = x1101 * x228 - x1102 * x234 + x56 * (x1089 * x228 - x1090 * x234)
    x1231 = x1213 * x13 + x1227 * x18 + x1230
    x1232 = -x1089 * x234 + x1105 * x228
    x1233 = x1215 * x13 + x1225 + x1232 * x16
    x1234 = x1217 * x13 + x1230 + x1232 * x17
    x1235 = x1109 * x228 - x1110 * x234 + x1219 * x13 + x1232 * x18
    x1236 = x16 * x766 + x762
    x1237 = x17 * x766 + x801
    x1238 = x18 * x766 + x819
    x1239 = x16 * x834 + x801
    x1240 = x17 * x834 + x842
    x1241 = x18 * x834 + x850
    x1242 = x16 * x859 + x819
    x1243 = x17 * x859 + x850
    x1244 = x18 * x859 + x869
    x1245 = x12 * x1236 + x1203
    x1246 = x12 * x1237 + x1205
    x1247 = x12 * x1238 + x1207
    x1248 = x12 * x1239 + x1209
    x1249 = x12 * x1240 + x1211
    x1250 = x12 * x1241 + x1213
    x1251 = x12 * x1242 + x1215
    x1252 = x12 * x1243 + x1217
    x1253 = x12 * x1244 + x1219
    x1254 = x1075 * x16 + x1078
    x1255 = x1236 * x13 + x1254
    x1256 = x1075 * x17 + x1085
    x1257 = x1237 * x13 + x1256
    x1258 = x1075 * x18 + x1091
    x1259 = x1238 * x13 + x1258
    x1260 = x1085 + x1095 * x16
    x1261 = x1239 * x13 + x1260
    x1262 = x1095 * x17 + x1098
    x1263 = x1240 * x13 + x1262
    x1264 = x1095 * x18 + x1101
    x1265 = x1241 * x13 + x1264
    x1266 = x1091 + x1105 * x16
    x1267 = x1242 * x13 + x1266
    x1268 = x1101 + x1105 * x17
    x1269 = x1243 * x13 + x1268
    x1270 = x1105 * x18 + x1109
    x1271 = x1244 * x13 + x1270
    x1272 = x1075 * x361 - x1076 * x367 + 3 * x767
    x1273 = x1085 * x361 - x1086 * x367 + 3 * x802
    x1274 = (
        x1091 * x361
        - x1092 * x367
        + x56 * (x1076 * x361 - x1080 * x367 + 3 * x786)
        + 3 * x820
    )
    x1275 = -x1083 * x367 + x1095 * x361 + 3 * x835
    x1276 = (
        x1101 * x361
        - x1102 * x367
        + x56 * (x1083 * x361 - x1084 * x367 + 3 * x806)
        + 3 * x851
    )
    x1277 = (
        -x1089 * x367
        + x1105 * x361
        + x56 * (x1073 * x361 - x1074 * x367 + 3 * x773)
        + 3 * x860
    )

    # 324 item(s)
    S = numpy.array(
        [
            x103 * (x102 - x82)
            + x11 * x139
            + x11 * (x11 * x140 + x139)
            + x123 * x16
            + x135 * x54
            - x57
            * (
                x110 * (x63 - x74)
                + x134 * x62
                + x54 * x81
                - x57
                * (
                    x133 * x62
                    + x136
                    + x54 * x73
                    - x57 * (x132 * x62 - x138 * x57 + x54 * x68)
                )
            )
            + x62
            * (
                x103 * (x101 - x121)
                + x122 * x54
                - x134 * x57
                + x56 * (x103 * (-x112 + x99) + x113 * x54 - x129 * x57)
            ),
            x11 * x182 + x11 * (x11 * x183 + x182) + x123 * x17 + x191,
            x11 * x192 + x11 * (x119 * x193 + x192) + x123 * x18,
            x11 * x201 + x11 * (x11 * x202 + x201) + x16 * x203 + x191,
            x103 * (-x215 + x221)
            + x11 * x225
            + x11 * (x11 * x226 + x225)
            + x17 * x203
            + x222 * x54
            - x57
            * (
                x110 * (x206 * x54 - x208 - x213)
                + x214 * x54
                - x57 * (x212 * x54 + x223 - x57 * (x210 * x54 - x224 * x57))
            ),
            x11 * x227 + x11 * (x193 * x198 + x227) + x18 * x203,
            0,
            0,
            0,
            x11 * x283 + x12 * x139 + x295,
            x11 * x318 + x12 * x182 + x326,
            x11 * x329 + x12 * x192 + x330,
            x11 * x339 + x12 * x201 + x341,
            x11 * x354 + x12 * x225 + x357,
            x11 * x359 + x12 * x227 + x360,
            0,
            0,
            0,
            x11 * x423 + x13 * x139 + x439,
            x11 * x469 + x13 * x182 + x479,
            x11 * x495 + x13 * x192 + x503,
            x11 * x513 + x13 * x201 + x515,
            x11 * x530 + x13 * x225 + x533,
            x11 * x542 + x13 * x227 + x546,
            x555,
            x557,
            x568,
            x12 * x283 + x599,
            x12 * x318 + x615,
            x12 * x329 + x617,
            x12 * x339 + x624,
            x12 * x354 + x632,
            x12 * x359 + x634,
            0,
            0,
            0,
            x12 * x423 + x677,
            x12 * x469 + x695,
            x12 * x495 + x714,
            x12 * x513 + x721,
            x12 * x530 + x729,
            x12 * x542 + x739,
            x748,
            x750,
            x759,
            x13 * x423 + x798,
            x13 * x469 + x816,
            x13 * x495 + x832,
            x13 * x513 + x839,
            x13 * x530 + x847,
            x13 * x542 + x856,
            2 * x857 + x863,
            2 * x864 + x865,
            2 * x866 + x873,
            x11 * x282 + x11 * (x11 * x874 + x282) + x295,
            x11 * x317 + x11 * (x11 * x875 + x317) + x326,
            x11 * x328 + x11 * (x193 * x251 + x328) + x330,
            x11 * x338 + x11 * (x11 * x876 + x338) + x341,
            x11 * x353 + x11 * (x11 * x877 + x353) + x357,
            x11 * x358 + x11 * (x193 * x335 + x358) + x360,
            0,
            0,
            0,
            x11 * x879 + x599,
            x11 * x881 + x615,
            x11 * x883 + x617,
            x11 * x885 + x624,
            x11 * x887 + x632,
            x11 * x889 + x634,
            0,
            0,
            0,
            x11 * x891 + x677,
            x11 * x893 + x695,
            x11 * x895 + x714,
            x11 * x897 + x721,
            x11 * x899 + x729,
            x11 * x901 + x739,
            x903,
            x905,
            x907,
            x12 * x879 + x917,
            x12 * x881 + x923,
            x12 * x883 + x924,
            x12 * x885 + x927,
            x12 * x887 + x930,
            x12 * x889 + x931,
            0,
            0,
            0,
            x12 * x891 + x942,
            x12 * x893 + x949,
            x12 * x895 + x956,
            x12 * x897 + x960,
            x12 * x899 + x964,
            x12 * x901 + x969,
            x973,
            x975,
            x979,
            x13 * x891 + x990,
            x13 * x893 + x997,
            x1004 + x13 * x895,
            x1008 + x13 * x897,
            x1012 + x13 * x899,
            x1017 + x13 * x901,
            2 * x1018 + x1021,
            2 * x1022 + x1023,
            2 * x1024 + x1027,
            x11 * x422 + x11 * (x1028 * x11 + x422) + x439,
            x11 * x468 + x11 * (x1029 * x11 + x468) + x479,
            x11 * x494 + x11 * (x1030 * x11 + x494) + x503,
            x11 * x512 + x11 * (x1031 * x11 + x512) + x515,
            x11 * x529 + x11 * (x1032 * x11 + x529) + x533,
            x11 * x541 + x11 * (x1033 * x11 + x541) + x546,
            x11 * (x1034 * x11 + x553) + x555,
            x11 * (x1035 * x11 + x556) + x557,
            x11 * (x1036 * x11 + x567) + x568,
            x1037 * x11 + x12 * x422 + x676,
            x1038 * x11 + x12 * x468 + x694,
            x1039 * x11 + x12 * x494 + x713,
            x1040 * x11 + x12 * x512 + x720,
            x1041 * x11 + x12 * x529 + x728,
            x1042 * x11 + x12 * x541 + x738,
            x1043 * x11 + x748,
            x1044 * x11 + x750,
            x1045 * x11 + x759,
            x1047 * x11 + x798,
            x1049 * x11 + x816,
            x1051 * x11 + x832,
            x1053 * x11 + x839,
            x1055 * x11 + x847,
            x1057 * x11 + x856,
            x1059 * x11 + x857 + x863,
            x1061 * x11 + x864 + x865,
            x1063 * x11 + x866 + x873,
            x1037 * x12 + x1064,
            x1038 * x12 + x1065,
            x1039 * x12 + x1066,
            x1040 * x12 + x1067,
            x1041 * x12 + x1068,
            x1042 * x12 + x1069,
            x1043 * x12 + x973,
            x1044 * x12 + x975,
            x1045 * x12 + x979,
            x1047 * x12 + x990,
            x1049 * x12 + x997,
            x1004 + x1051 * x12,
            x1008 + x1053 * x12,
            x1012 + x1055 * x12,
            x1017 + x1057 * x12,
            x1059 * x12 + x1070,
            x1061 * x12 + x1071,
            x1063 * x12 + x1072,
            x1047 * x13 + x1082,
            x1049 * x13 + x1088,
            x1051 * x13 + x1094,
            x1053 * x13 + x1097,
            x1055 * x13 + x1100,
            x1057 * x13 + x1104,
            x1059 * x13 + x1107,
            x1061 * x13 + x1108,
            x1063 * x13 + x1111,
            x11 * x878 + x11 * (x11 * x1112 + x878) + x598,
            x11 * x880 + x11 * (x11 * x1113 + x880) + x614,
            x11 * x882 + x11 * (x193 * x575 + x882) + x616,
            x11 * x884 + x11 * (x11 * x1114 + x884) + x623,
            x11 * x886 + x11 * (x11 * x1115 + x886) + x631,
            x11 * x888 + x11 * (x193 * x619 + x888) + x633,
            0,
            0,
            0,
            x11 * x1117 + x917,
            x11 * x1119 + x923,
            x11 * x1121 + x924,
            x11 * x1123 + x927,
            x11 * x1125 + x930,
            x11 * x1127 + x931,
            0,
            0,
            0,
            x11 * x1129 + x942,
            x11 * x1131 + x949,
            x11 * x1133 + x956,
            x11 * x1135 + x960,
            x11 * x1137 + x964,
            x11 * x1139 + x969,
            x11 * x1140 + x972,
            x11 * x1141 + x974,
            x11 * x1142 + x978,
            x1116 * x12
            + x1117 * x12
            + x1143 * x16
            + x228 * x913
            - x234 * x916
            + 3 * x572,
            x1118 * x12 + x1119 * x12 + x1143 * x17 + x1144,
            x1120 * x12 + x1121 * x12 + x1143 * x18,
            x1122 * x12 + x1123 * x12 + x1144 + x1145 * x16,
            x1124 * x12
            + x1125 * x12
            + x1145 * x17
            + x228 * x928
            - x234 * x929
            + x62
            * (
                x228 * x918
                - x234 * x919
                + x56 * (x228 * x909 - x234 * x914 + 3 * x592)
                + 3 * x607
            )
            + 3 * x628,
            x1126 * x12 + x1127 * x12 + x1145 * x18,
            0,
            0,
            0,
            x1116 * x13 + x1129 * x12 + x1147,
            x1118 * x13 + x1131 * x12 + x1149,
            x1120 * x13 + x1133 * x12 + x1151,
            x1122 * x13 + x1135 * x12 + x1153,
            x1124 * x13 + x1137 * x12 + x1154,
            x1126 * x13 + x1139 * x12 + x1156,
            x1158,
            x1159,
            x1160,
            x1129 * x13 + x1163,
            x1131 * x13 + x1166,
            x1133 * x13 + x1169,
            x1135 * x13 + x1172,
            x1137 * x13 + x1174,
            x1139 * x13 + x1177,
            2 * x1178 + x1180,
            2 * x1181 + x1182,
            2 * x1183 + x1184,
            x11 * x890 + x11 * (x11 * x1185 + x890) + x676,
            x11 * x892 + x11 * (x11 * x1186 + x892) + x694,
            x11 * x894 + x11 * (x11 * x1187 + x894) + x713,
            x11 * x896 + x11 * (x11 * x1188 + x896) + x720,
            x11 * x898 + x11 * (x11 * x1189 + x898) + x728,
            x11 * x900 + x11 * (x11 * x1190 + x900) + x738,
            x11 * (x11 * x1191 + x902) + x903,
            x11 * (x11 * x1192 + x904) + x905,
            x11 * (x11 * x1193 + x906) + x907,
            x1064 + x11 * x1194,
            x1065 + x11 * x1195,
            x1066 + x11 * x1196,
            x1067 + x11 * x1197,
            x1068 + x11 * x1198,
            x1069 + x11 * x1199,
            x11 * x1200 + x973,
            x11 * x1201 + x975,
            x11 * x1202 + x979,
            x11 * x1204 + x990,
            x11 * x1206 + x997,
            x1004 + x11 * x1208,
            x1008 + x11 * x1210,
            x1012 + x11 * x1212,
            x1017 + x11 * x1214,
            x1070 + x11 * x1216,
            x1071 + x11 * x1218,
            x1072 + x11 * x1220,
            x1128 * x12 + x1147 + x1194 * x12,
            x1130 * x12 + x1149 + x1195 * x12,
            x1132 * x12 + x1151 + x1196 * x12,
            x1134 * x12 + x1153 + x1197 * x12,
            x1136 * x12 + x1154 + x1198 * x12,
            x1138 * x12 + x1156 + x1199 * x12,
            x1158 + x12 * x1200,
            x1159 + x12 * x1201,
            x1160 + x12 * x1202,
            x1163 + x12 * x1204,
            x1166 + x12 * x1206,
            x1169 + x12 * x1208,
            x1172 + x12 * x1210,
            x1174 + x12 * x1212,
            x1177 + x12 * x1214,
            x1178 + x1180 + x12 * x1216,
            x1181 + x1182 + x12 * x1218,
            x1183 + x1184 + x12 * x1220,
            x1204 * x13 + x1222,
            x1206 * x13 + x1224,
            x1208 * x13 + x1226,
            x1210 * x13 + x1228,
            x1212 * x13 + x1229,
            x1214 * x13 + x1231,
            x1216 * x13 + x1233,
            x1218 * x13 + x1234,
            x1220 * x13 + x1235,
            x1046 * x11 + x11 * (x1046 + x11 * x1236) + x797,
            x1048 * x11 + x11 * (x1048 + x11 * x1237) + x815,
            x1050 * x11 + x11 * (x1050 + x11 * x1238) + x831,
            x1052 * x11 + x11 * (x1052 + x11 * x1239) + x838,
            x1054 * x11 + x11 * (x1054 + x11 * x1240) + x846,
            x1056 * x11 + x11 * (x1056 + x11 * x1241) + x855,
            x1058 * x11 + x11 * (x1058 + x11 * x1242) + x863,
            x1060 * x11 + x11 * (x1060 + x11 * x1243) + x865,
            x1062 * x11 + x11 * (x1062 + x11 * x1244) + x873,
            x1046 * x12 + x11 * x1245 + x989,
            x1048 * x12 + x11 * x1246 + x996,
            x1003 + x1050 * x12 + x11 * x1247,
            x1007 + x1052 * x12 + x11 * x1248,
            x1011 + x1054 * x12 + x11 * x1249,
            x1016 + x1056 * x12 + x11 * x1250,
            x1021 + x1058 * x12 + x11 * x1251,
            x1023 + x1060 * x12 + x11 * x1252,
            x1027 + x1062 * x12 + x11 * x1253,
            x1082 + x11 * x1255,
            x1088 + x11 * x1257,
            x1094 + x11 * x1259,
            x1097 + x11 * x1261,
            x11 * x1263 + x1100,
            x11 * x1265 + x1104,
            x11 * x1267 + x1107,
            x11 * x1269 + x1108,
            x11 * x1271 + x1111,
            x1162 + x12 * x1203 + x12 * x1245,
            x1165 + x12 * x1205 + x12 * x1246,
            x1168 + x12 * x1207 + x12 * x1247,
            x1171 + x12 * x1209 + x12 * x1248,
            x1173 + x12 * x1211 + x12 * x1249,
            x1176 + x12 * x1213 + x12 * x1250,
            x1180 + x12 * x1215 + x12 * x1251,
            x1182 + x12 * x1217 + x12 * x1252,
            x1184 + x12 * x1219 + x12 * x1253,
            x12 * x1255 + x1222,
            x12 * x1257 + x1224,
            x12 * x1259 + x1226,
            x12 * x1261 + x1228,
            x12 * x1263 + x1229,
            x12 * x1265 + x1231,
            x12 * x1267 + x1233,
            x12 * x1269 + x1234,
            x12 * x1271 + x1235,
            x1078 * x361
            - x1081 * x367
            + x1254 * x13
            + x1255 * x13
            + x1272 * x16
            + 3 * x763,
            x1256 * x13 + x1257 * x13 + x1272 * x17 + x1273,
            x1258 * x13 + x1259 * x13 + x1272 * x18 + x1274,
            x1260 * x13 + x1261 * x13 + x1273 + x1275 * x16,
            x1098 * x361
            - x1099 * x367
            + x1262 * x13
            + x1263 * x13
            + x1275 * x17
            + 3 * x843,
            x1264 * x13 + x1265 * x13 + x1275 * x18 + x1276,
            x1266 * x13 + x1267 * x13 + x1274 + x1277 * x16,
            x1268 * x13 + x1269 * x13 + x1276 + x1277 * x17,
            x1109 * x361
            - x1110 * x367
            + x1270 * x13
            + x1271 * x13
            + x1277 * x18
            + x62
            * (
                x1089 * x361
                - x1090 * x367
                + x56 * (x1074 * x361 - x1079 * x367 + 3 * x787)
                + 3 * x824
            )
            + 3 * x870,
        ]
    )
    return S


def eri_2212(a, A, b, B, c, C, d, D):
    """Cartesian [dd|pd] 2-electron electron repulsion integral.

    Generated code; DO NOT modify by hand!"""

    x0 = 2 * a + 2 * b
    x1 = x0 ** (-1.0)
    x2 = c + d
    x3 = x2 ** (-1.0)
    x4 = x3 * (c * C[0] + d * D[0])
    x5 = x4 - C[0]
    x6 = a + b
    x7 = x2 + x6
    x8 = x7 ** (-1.0)
    x9 = x6 ** (-1.0)
    x10 = -x9 * (a * A[0] + b * B[0])
    x11 = -x10 - x4
    x12 = x3 * (c * C[1] + d * D[1])
    x13 = -x9 * (a * A[1] + b * B[1])
    x14 = -x12 - x13
    x15 = -x9 * (a * A[2] + b * B[2])
    x16 = -x15 - x3 * (c * C[2] + d * D[2])
    x17 = x2 * x6
    x18 = x17 * x8 * (x11**2 + x14**2 + x16**2)
    x19 = boys(3, x18)
    x20 = numpy.pi**2.5
    x21 = (x17 + numpy.sqrt(x7)) ** (-1.0)
    x22 = A[0] - B[0]
    x23 = A[1] - B[1]
    x24 = A[2] - B[2]
    x25 = numpy.exp(-a * b * x9 * (x22**2 + x23**2 + x24**2))
    x26 = C[0] - D[0]
    x27 = C[1] - D[1]
    x28 = C[2] - D[2]
    x29 = x28**2
    x30 = numpy.exp(-c * d * x3 * (x26**2 + x27**2 + x29))
    x31 = 2 * x20 * x21 * x25 * x30
    x32 = x19 * x31
    x33 = x6 * x8
    x34 = x11 * x33
    x35 = boys(4, x18)
    x36 = x31 * x35
    x37 = x32 * x5 + x34 * x36
    x38 = x33 * x37
    x39 = boys(2, x18)
    x40 = x31 * x39
    x41 = x32 * x34 + x40 * x5
    x42 = 2 * c + 2 * d
    x43 = x42 ** (-1.0)
    x44 = 2 * x43
    x45 = -2 * x20 * x21 * x25 * x30 * x39
    x46 = x43 * (-x32 * x33 - x45)
    x47 = x11 * x38 + x41 * x5 + x46
    x48 = -2 * x19 * x20 * x21 * x25 * x30
    x49 = x43 * (-x33 * x36 - x48)
    x50 = boys(5, x18)
    x51 = x31 * x50
    x52 = x34 * x51 + x36 * x5
    x53 = x33 * x52
    x54 = x11 * x53 + x37 * x5 + x49
    x55 = x34 * x54 + x44 * (-x38 + x41) + x47 * x5
    x56 = x2 * x8
    x57 = x55 * x56
    x58 = x33 * x41
    x59 = boys(1, x18)
    x60 = x31 * x59
    x61 = x34 * x40 + x5 * x60
    x62 = -2 * x20 * x21 * x25 * x30 * x59
    x63 = x43 * (-x33 * x40 - x62)
    x64 = x11 * x58 + x5 * x61 + x63
    x65 = x34 * x47 + x44 * (-x58 + x61) + x5 * x64
    x66 = x1 * (-x57 + x65)
    x67 = -x10 - A[0]
    x68 = x54 * x56
    x69 = x0 + x42
    x70 = x69 ** (-1.0)
    x71 = x11 * x56
    x72 = x51 * x71
    x73 = x36 * x67 - x72
    x74 = x52 * x56
    x75 = -x11 * x74 + x37 * x67 + x70 * x73
    x76 = 2 * x70
    x77 = -x11 * x68 + x47 * x67 + x75 * x76
    x78 = 3 * x70
    x79 = -x11 * x57 + x65 * x67 + x77 * x78
    x80 = -2 * x20 * x21 * x25 * x30 * x35
    x81 = x43 * (-x33 * x51 - x80)
    x82 = x31 * boys(6, x18)
    x83 = x34 * x82 + x5 * x51
    x84 = x33 * x83
    x85 = x11 * x84 + x5 * x52 + x81
    x86 = x34 * x85 + x44 * (x37 - x53) + x5 * x54
    x87 = x56 * x86
    x88 = x56 * x85
    x89 = x51 * x67 - x71 * x82
    x90 = x56 * x83
    x91 = -x11 * x90 + x52 * x67 + x70 * x89
    x92 = -x11 * x88 + x54 * x67 + x76 * x91
    x93 = -x11 * x87 + x55 * x67 + x78 * x92
    x94 = x56 * x93
    x95 = x1 * (x47 - x68)
    x96 = x56 * x92
    x97 = x1 * (x37 - x74)
    x98 = x1 * (-x51 * x56 - x80)
    x99 = x56 * x89
    x100 = -x11 * x99 + x67 * x73 + x98
    x101 = x56 * x91
    x102 = x100 * x70 - x101 * x11 + x67 * x75 + x97
    x103 = x102 * x76 - x11 * x96 + x67 * x77 + x95
    x104 = x103 * x78 - x11 * x94 + x66 + x67 * x79
    x105 = x104 * x56
    x106 = x56 * x65
    x107 = x33 * x61
    x108 = boys(0, x18)
    x109 = x108 * x31
    x110 = x109 * x5 + x34 * x60
    x111 = x43 * (2 * x108 * x20 * x21 * x25 * x30 - x33 * x60)
    x112 = x107 * x11 + x110 * x5 + x111
    x113 = x112 * x5 + x34 * x64 + x44 * (-x107 + x110)
    x114 = x1 * (-x106 + x113)
    x115 = x47 * x56
    x116 = x36 * x71
    x117 = -x116 + x32 * x67
    x118 = x37 * x56
    x119 = -x11 * x118 + x117 * x70 + x41 * x67
    x120 = -x11 * x115 + x119 * x76 + x64 * x67
    x121 = -x106 * x11 + x113 * x67 + x120 * x78
    x122 = x56 * x79
    x123 = x1 * (-x115 + x64)
    x124 = x56 * x77
    x125 = x1 * (-x118 + x41)
    x126 = x1 * (-x36 * x56 - x48)
    x127 = x56 * x73
    x128 = -x11 * x127 + x117 * x67 + x126
    x129 = x56 * x75
    x130 = -x11 * x129 + x119 * x67 + x125 + x128 * x70
    x131 = -x11 * x124 + x120 * x67 + x123 + x130 * x76
    x132 = -x11 * x122 + x114 + x121 * x67 + x131 * x78
    x133 = 3 * x1
    x134 = 2 * x1
    x135 = x103 * x56
    x136 = x100 * x56
    x137 = (
        -x11 * x136
        + x128 * x67
        + x134 * (-x116 - x127 + 2 * x19 * x20 * x21 * x25 * x30 * x67)
    )
    x138 = x102 * x56
    x139 = -x11 * x138 + x130 * x67 + x134 * (x119 - x129) + x137 * x70
    x140 = -x11 * x135 + x131 * x67 + x134 * (x120 - x124) + x139 * x76
    x141 = -x105 * x11 + x132 * x67 + x134 * (x121 - x122) + x140 * x78
    x142 = x1 * (x55 - x87)
    x143 = -2 * x20 * x21 * x25 * x30 * x50
    x144 = x43 * (-x143 - x33 * x82)
    x145 = x31 * boys(7, x18)
    x146 = x145 * x34 + x5 * x82
    x147 = x144 + x146 * x34 + x5 * x83
    x148 = x147 * x34 + x44 * (x52 - x84) + x5 * x85
    x149 = -x145 * x71 + x67 * x82
    x150 = -x146 * x71 + x149 * x70 + x67 * x83
    x151 = -x147 * x71 + x150 * x76 + x67 * x85
    x152 = x1 * (x54 - x88)
    x153 = x1 * (x52 - x90)
    x154 = x1 * (-x143 - x56 * x82)
    x155 = -x149 * x71 + x154 + x67 * x89
    x156 = -x150 * x71 + x153 + x155 * x70 + x67 * x91
    x157 = -x151 * x71 + x152 + x156 * x76 + x67 * x92
    x158 = (
        x100 * x67
        + x134 * (2 * x20 * x21 * x25 * x30 * x35 * x67 - x72 - x99)
        - x155 * x71
    )
    x159 = x102 * x67 + x134 * (-x101 + x75) - x156 * x71 + x158 * x70
    x160 = x103 * x67 + x134 * (x77 - x96) - x157 * x71 + x159 * x76
    x161 = x131 * x56
    x162 = x56 * x64
    x163 = x1 * (x112 - x162)
    x164 = x32 * x71
    x165 = -x164 + x40 * x67
    x166 = x41 * x56
    x167 = -x11 * x166 + x165 * x70 + x61 * x67
    x168 = -x11 * x162 + x112 * x67 + x167 * x76
    x169 = x120 * x56
    x170 = x1 * (-x166 + x61)
    x171 = x1 * (-x32 * x56 - x45)
    x172 = x117 * x56
    x173 = -x11 * x172 + x165 * x67 + x171
    x174 = x119 * x56
    x175 = -x11 * x174 + x167 * x67 + x170 + x173 * x70
    x176 = -x11 * x169 + x163 + x168 * x67 + x175 * x76
    x177 = x128 * x56
    x178 = (
        -x11 * x177
        + x134 * (-x164 - x172 + 2 * x20 * x21 * x25 * x30 * x39 * x67)
        + x173 * x67
    )
    x179 = x130 * x56
    x180 = -x11 * x179 + x134 * (x167 - x174) + x175 * x67 + x178 * x70
    x181 = -x11 * x161 + x134 * (x168 - x169) + x176 * x67 + x180 * x76
    x182 = (
        x133 * (-x161 + x176)
        - x140 * x71
        + x181 * x67
        + x76
        * (
            x133 * (x175 - x179)
            - x139 * x71
            + x180 * x67
            + x70 * (x133 * (x173 - x177) - x137 * x71 + x178 * x67)
        )
    )
    x183 = x173 * x56
    x184 = x1 * (-x40 * x56 - x62)
    x185 = x40 * x71
    x186 = -x185 + x60 * x67
    x187 = x165 * x56
    x188 = -x11 * x187 + x184 + x186 * x67
    x189 = (
        -x11 * x183
        + x134 * (-x185 - x187 + 2 * x20 * x21 * x25 * x30 * x59 * x67)
        + x188 * x67
    )
    x190 = x175 * x56
    x191 = x56 * x61
    x192 = x1 * (x110 - x191)
    x193 = -x11 * x191 + x110 * x67 + x186 * x70
    x194 = x167 * x56
    x195 = -x11 * x194 + x188 * x70 + x192 + x193 * x67
    x196 = -x11 * x190 + x134 * (x193 - x194) + x189 * x70 + x195 * x67
    x197 = (
        x133 * (-x190 + x195)
        - x180 * x71
        + x196 * x67
        + x70 * (x133 * (-x183 + x188) - x178 * x71 + x189 * x67)
    )
    x198 = x197 * x26
    x199 = x196 * x26
    x200 = x141 + x181 * x26 + x26 * (x181 + x199)
    x201 = x195 * x26
    x202 = x132 + x176 * x26 + x26 * (x176 + x201)
    x203 = x196 * x27
    x204 = x12 - C[1]
    x205 = x14 * x33
    x206 = x204 * x40 + x205 * x32
    x207 = x204 * x32 + x205 * x36
    x208 = x207 * x56
    x209 = x11 * x208
    x210 = x206 * x67 - x209
    x211 = x204 * x60 + x205 * x40
    x212 = x206 * x33
    x213 = x11 * x212 + x211 * x5
    x214 = x207 * x33
    x215 = x11 * x214 + x206 * x5
    x216 = x215 * x56
    x217 = -x11 * x216 + x210 * x70 + x213 * x67
    x218 = x217 * x56
    x219 = x206 * x56
    x220 = x11 * x219
    x221 = x211 * x67 - x220
    x222 = x109 * x204 + x205 * x60
    x223 = x211 * x33
    x224 = x11 * x223 + x222 * x5
    x225 = x213 * x56
    x226 = -x11 * x225 + x221 * x70 + x224 * x67
    x227 = x210 * x56
    x228 = x1 * (x211 - x219)
    x229 = -x11 * x227 + x221 * x67 + x228
    x230 = x1 * (x206 - x208)
    x231 = x204 * x36 + x205 * x51
    x232 = x231 * x56
    x233 = x11 * x232
    x234 = x207 * x67 - x233
    x235 = x234 * x56
    x236 = -x11 * x235 + x210 * x67 + x230
    x237 = x236 * x56
    x238 = -x11 * x237 + x134 * (x211 * x67 - x220 - x227) + x229 * x67
    x239 = x1 * (x224 - x225)
    x240 = -x11 * x218 + x226 * x67 + x229 * x70 + x239
    x241 = x1 * (x213 - x216)
    x242 = x231 * x33
    x243 = x11 * x242 + x207 * x5
    x244 = x243 * x56
    x245 = -x11 * x244 + x215 * x67 + x234 * x70
    x246 = x245 * x56
    x247 = -x11 * x246 + x217 * x67 + x236 * x70 + x241
    x248 = x247 * x56
    x249 = -x11 * x248 + x134 * (-x218 + x226) + x238 * x70 + x240 * x67
    x250 = x203 + x249
    x251 = x43 * (x211 - x212)
    x252 = x213 * x5 + x215 * x34 + x251
    x253 = x43 * (x206 - x214)
    x254 = x215 * x5 + x243 * x34 + x253
    x255 = x254 * x56
    x256 = -x11 * x255 + x245 * x76 + x252 * x67
    x257 = x256 * x56
    x258 = x43 * (x222 - x223)
    x259 = x213 * x34 + x224 * x5 + x258
    x260 = x252 * x56
    x261 = -x11 * x260 + x217 * x76 + x259 * x67
    x262 = x1 * (x259 - x260)
    x263 = -x11 * x257 + x247 * x76 + x261 * x67 + x262
    x264 = x1 * (x252 - x255)
    x265 = x43 * (x207 - x242)
    x266 = x204 * x51 + x205 * x82
    x267 = x266 * x33
    x268 = x11 * x267 + x231 * x5
    x269 = x243 * x5 + x265 + x268 * x34
    x270 = x269 * x56
    x271 = x266 * x56
    x272 = -x11 * x271 + x231 * x67
    x273 = x268 * x56
    x274 = -x11 * x273 + x243 * x67 + x272 * x70
    x275 = -x11 * x270 + x254 * x67 + x274 * x76
    x276 = x275 * x56
    x277 = x1 * (x215 - x244)
    x278 = x1 * (x207 - x232)
    x279 = x272 * x56
    x280 = -x11 * x279 + x234 * x67 + x278
    x281 = x274 * x56
    x282 = -x11 * x281 + x245 * x67 + x277 + x280 * x70
    x283 = -x11 * x276 + x256 * x67 + x264 + x282 * x76
    x284 = x283 * x56
    x285 = x280 * x56
    x286 = -x11 * x285 + x134 * (x206 * x67 - x209 - x235) + x236 * x67
    x287 = x282 * x56
    x288 = -x11 * x287 + x134 * (x217 - x246) + x247 * x67 + x286 * x70
    x289 = -x11 * x284 + x134 * (-x257 + x261) + x263 * x67 + x288 * x76
    x290 = x181 * x27 + x250 * x26 + x289
    x291 = x195 * x27
    x292 = x240 + x291
    x293 = x176 * x27 + x26 * x292 + x263
    x294 = x197 * x27
    x295 = (
        x133 * (x240 - x248)
        + x249 * x67
        - x288 * x71
        + x70 * (x133 * (x229 - x237) + x238 * x67 - x286 * x71)
    )
    x296 = x294 + x295
    x297 = x1 * (x231 - x271)
    x298 = x145 * x205 + x204 * x82
    x299 = x266 * x67 - x298 * x71
    x300 = x272 * x67 + x297 - x299 * x71
    x301 = x134 * (x207 * x67 - x233 - x279) + x280 * x67 - x300 * x71
    x302 = x1 * (x243 - x273)
    x303 = x266 * x5 + x298 * x34
    x304 = x268 * x67 + x299 * x70 - x303 * x71
    x305 = x274 * x67 + x300 * x70 + x302 - x304 * x71
    x306 = x134 * (x245 - x281) + x282 * x67 + x301 * x70 - x305 * x71
    x307 = x1 * (x254 - x270)
    x308 = x43 * (x231 - x267)
    x309 = x268 * x5 + x303 * x34 + x308
    x310 = (
        x133 * (x263 - x284)
        + x289 * x67
        - x71
        * (
            x134 * (x256 - x276)
            + x283 * x67
            + x306 * x76
            - x71
            * (
                x275 * x67
                + x305 * x76
                + x307
                - x71 * (x269 * x67 + x304 * x76 - x309 * x71)
            )
        )
        + x76
        * (
            x133 * (x247 - x287)
            + x288 * x67
            - x306 * x71
            + x70 * (x133 * (x236 - x285) + x286 * x67 - x301 * x71)
        )
    )
    x311 = x181 * x28 + x199 * x28
    x312 = x176 * x28 + x201 * x28
    x313 = x14 * x214 + x204 * x206 + x46
    x314 = x14 * x242 + x204 * x207 + x49
    x315 = x314 * x56
    x316 = x11 * x315
    x317 = x313 * x67 - x316
    x318 = x14 * x212 + x204 * x211 + x63
    x319 = x313 * x34 + x318 * x5
    x320 = x313 * x5 + x314 * x34
    x321 = x320 * x56
    x322 = -x11 * x321 + x317 * x70 + x319 * x67
    x323 = x322 * x56
    x324 = x313 * x56
    x325 = x11 * x324
    x326 = x318 * x67 - x325
    x327 = x111 + x14 * x223 + x204 * x222
    x328 = x318 * x34 + x327 * x5
    x329 = x319 * x56
    x330 = -x11 * x329 + x326 * x70 + x328 * x67
    x331 = x317 * x56
    x332 = x1 * (x318 - x324)
    x333 = -x11 * x331 + x326 * x67 + x332
    x334 = x1 * (x313 - x315)
    x335 = x14 * x267 + x204 * x231 + x81
    x336 = x335 * x56
    x337 = -x11 * x336 + x314 * x67
    x338 = x337 * x56
    x339 = -x11 * x338 + x317 * x67 + x334
    x340 = x339 * x56
    x341 = -x11 * x340 + x134 * (x318 * x67 - x325 - x331) + x333 * x67
    x342 = x1 * (x328 - x329)
    x343 = -x11 * x323 + x330 * x67 + x333 * x70 + x342
    x344 = x1 * (x319 - x321)
    x345 = x314 * x5 + x335 * x34
    x346 = x345 * x56
    x347 = -x11 * x346 + x320 * x67 + x337 * x70
    x348 = x347 * x56
    x349 = -x11 * x348 + x322 * x67 + x339 * x70 + x344
    x350 = x349 * x56
    x351 = -x11 * x350 + x134 * (-x323 + x330) + x341 * x70 + x343 * x67
    x352 = x249 * x27 + x351
    x353 = x250 * x27 + x352
    x354 = x240 * x27 + x343
    x355 = x27 * x292 + x354
    x356 = x1 * (x314 - x336)
    x357 = x144 + x204 * x266 + x205 * x298
    x358 = x335 * x67 - x357 * x71
    x359 = x337 * x67 + x356 - x358 * x71
    x360 = x134 * (x313 * x67 - x316 - x338) + x339 * x67 - x359 * x71
    x361 = x1 * (x320 - x346)
    x362 = x335 * x5 + x34 * x357
    x363 = (
        x133 * (x343 - x350)
        + x27 * x295
        + x351 * x67
        + x70 * (x133 * (x333 - x340) + x341 * x67 - x360 * x71)
        - x71
        * (
            x134 * (x322 - x348)
            + x349 * x67
            + x360 * x70
            - x71
            * (
                x347 * x67
                + x359 * x70
                + x361
                - x71 * (x345 * x67 + x358 * x70 - x362 * x71)
            )
        )
    )
    x364 = x249 * x28
    x365 = x203 * x28 + x364
    x366 = x240 * x28
    x367 = x28 * x291 + x366
    x368 = x28 * x295
    x369 = x196 * x29
    x370 = x22 * x29
    x371 = x211 * x56
    x372 = x11 * x371
    x373 = x221 * x56
    x374 = x1 * (x222 - x371)
    x375 = -x11 * x373 + x374 + x67 * (x222 * x67 - x372)
    x376 = x229 * x56
    x377 = -x11 * x376 + x134 * (x222 * x67 - x372 - x373) + x375 * x67
    x378 = x26 * x377
    x379 = x249 * x26 + x26 * (x249 + x378) + x289
    x380 = x26 * x375
    x381 = x240 * x26 + x26 * (x240 + x380) + x263
    x382 = x133 * (x375 - x376) - x238 * x71 + x377 * x67
    x383 = x26 * x382
    x384 = x27 * x377
    x385 = x318 * x56
    x386 = x11 * x385
    x387 = x326 * x56
    x388 = x1 * (x327 - x385)
    x389 = -x11 * x387 + x388 + x67 * (x327 * x67 - x386)
    x390 = x333 * x56
    x391 = -x11 * x390 + x134 * (x327 * x67 - x386 - x387) + x389 * x67
    x392 = x384 + x391
    x393 = x26 * x392 + x352
    x394 = x27 * x375
    x395 = x389 + x394
    x396 = x26 * x395 + x354
    x397 = x27 * x382
    x398 = x133 * (x389 - x390) - x341 * x71 + x391 * x67
    x399 = x397 + x398
    x400 = x28 * x378 + x364
    x401 = x28 * x380 + x366
    x402 = x204 * x313 + x205 * x314 + 2 * x253
    x403 = x402 * x56
    x404 = x204 * x318 + x205 * x313 + 2 * x251
    x405 = x1 * (-x403 + x404)
    x406 = x11 * x403
    x407 = x404 * x67 - x406
    x408 = x204 * x314 + x205 * x335 + 2 * x265
    x409 = x408 * x56
    x410 = -x11 * x409 + x402 * x67
    x411 = x410 * x56
    x412 = -x11 * x411 + x405 + x407 * x67
    x413 = x412 * x56
    x414 = x404 * x56
    x415 = x204 * x327 + x205 * x318 + 2 * x258
    x416 = x1 * (-x414 + x415)
    x417 = x11 * x414
    x418 = x407 * x56
    x419 = -x11 * x418 + x416 + x67 * (x415 * x67 - x417)
    x420 = -x11 * x413 + x134 * (x415 * x67 - x417 - x418) + x419 * x67
    x421 = x1 * (x402 - x409)
    x422 = x204 * x335 + x205 * x357 + 2 * x308
    x423 = x27 * x391 + x27 * x392 + x420
    x424 = x27 * x389 + x27 * x395 + x419
    x425 = x28 * x384 + x28 * x391
    x426 = x28 * x389 + x28 * x394
    x427 = x29 * x377
    x428 = -x13 - A[1]
    x429 = x14 * x162
    x430 = x115 * x14
    x431 = x428 * x64 - x430
    x432 = x431 * x56
    x433 = x1 * (x112 * x428 - x429 - x432)
    x434 = x112 * x428 - x429
    x435 = x14 * x56
    x436 = x32 * x435
    x437 = x40 * x428 - x436
    x438 = x36 * x435
    x439 = x32 * x428 - x438
    x440 = x439 * x56
    x441 = x11 * x440
    x442 = x437 * x67 - x441
    x443 = x14 * x166
    x444 = x428 * x61 - x443
    x445 = x118 * x14
    x446 = x41 * x428 - x445
    x447 = x446 * x56
    x448 = -x11 * x447 + x442 * x70 + x444 * x67
    x449 = -x11 * x432 + x434 * x67 + x448 * x76
    x450 = x14 * x68
    x451 = x428 * x47 - x450
    x452 = x451 * x56
    x453 = x435 * x51
    x454 = x36 * x428 - x453
    x455 = x454 * x56
    x456 = x11 * x455
    x457 = x439 * x67 - x456
    x458 = x14 * x74
    x459 = x37 * x428 - x458
    x460 = x459 * x56
    x461 = -x11 * x460 + x446 * x67 + x457 * x70
    x462 = -x11 * x452 + x431 * x67 + x461 * x76
    x463 = x462 * x56
    x464 = x1 * (x428 * x61 - x443 - x447)
    x465 = x1 * (2 * x20 * x21 * x25 * x30 * x39 * x428 - x436 - x440)
    x466 = x457 * x56
    x467 = -x11 * x466 + x442 * x67 + x465
    x468 = x461 * x56
    x469 = -x11 * x468 + x448 * x67 + x464 + x467 * x70
    x470 = -x11 * x463 + x433 + x449 * x67 + x469 * x76
    x471 = x14 * x191
    x472 = x444 * x56
    x473 = x1 * (x110 * x428 - x471 - x472)
    x474 = x40 * x435
    x475 = x437 * x56
    x476 = x1 * (2 * x20 * x21 * x25 * x30 * x428 * x59 - x474 - x475)
    x477 = x428 * x60 - x474
    x478 = x11 * x475
    x479 = x477 * x67 - x478
    x480 = x442 * x56
    x481 = -x11 * x480 + x476 + x479 * x67
    x482 = x110 * x428 - x471
    x483 = -x11 * x472 + x479 * x70 + x482 * x67
    x484 = x448 * x56
    x485 = -x11 * x484 + x473 + x481 * x70 + x483 * x67
    x486 = x26 * x485
    x487 = x106 * x14
    x488 = x14 * x57
    x489 = x428 * x65 - x488
    x490 = x489 * x56
    x491 = x1 * (x113 * x428 - x487 - x490)
    x492 = x113 * x428 - x487
    x493 = -x11 * x490 + x462 * x78 + x492 * x67
    x494 = -x14 * x87 + x428 * x55
    x495 = x494 * x56
    x496 = -x14 * x88 + x428 * x54
    x497 = x496 * x56
    x498 = x428 * x51 - x435 * x82
    x499 = x498 * x56
    x500 = -x11 * x499 + x454 * x67
    x501 = -x14 * x90 + x428 * x52
    x502 = x501 * x56
    x503 = -x11 * x502 + x459 * x67 + x500 * x70
    x504 = -x11 * x497 + x451 * x67 + x503 * x76
    x505 = -x11 * x495 + x489 * x67 + x504 * x78
    x506 = x505 * x56
    x507 = x1 * (x428 * x64 - x430 - x452)
    x508 = x504 * x56
    x509 = x1 * (x41 * x428 - x445 - x460)
    x510 = x1 * (2 * x19 * x20 * x21 * x25 * x30 * x428 - x438 - x455)
    x511 = x500 * x56
    x512 = -x11 * x511 + x457 * x67 + x510
    x513 = x503 * x56
    x514 = -x11 * x513 + x461 * x67 + x509 + x512 * x70
    x515 = -x11 * x508 + x462 * x67 + x507 + x514 * x76
    x516 = -x11 * x506 + x491 + x493 * x67 + x515 * x78
    x517 = x26 * x470 + x26 * (x470 + x486) + x516
    x518 = x202 * x23 + x517
    x519 = (
        x134 * (x449 - x463)
        + x470 * x67
        - x515 * x71
        + x76
        * (
            x134 * (x448 - x468)
            + x469 * x67
            - x514 * x71
            + x70 * (x134 * (x437 * x67 - x441 - x466) + x467 * x67 - x512 * x71)
        )
    )
    x520 = (
        x134 * (x483 - x484)
        - x469 * x71
        + x485 * x67
        + x70 * (x134 * (x477 * x67 - x478 - x480) - x467 * x71 + x481 * x67)
    )
    x521 = x26 * x520
    x522 = x1 * (x428 * x47 - x450 - x497)
    x523 = -x147 * x435 + x428 * x85
    x524 = -x145 * x435 + x428 * x82
    x525 = x498 * x67 - x524 * x71
    x526 = -x146 * x435 + x428 * x83
    x527 = x501 * x67 + x525 * x70 - x526 * x71
    x528 = x496 * x67 - x523 * x71 + x527 * x76
    x529 = x1 * (x37 * x428 - x458 - x502)
    x530 = x1 * (2 * x20 * x21 * x25 * x30 * x35 * x428 - x453 - x499)
    x531 = x500 * x67 - x525 * x71 + x530
    x532 = x503 * x67 - x527 * x71 + x529 + x531 * x70
    x533 = x504 * x67 + x522 - x528 * x71 + x532 * x76
    x534 = x1 * (x428 * x65 - x488 - x495)
    x535 = -x148 * x435 + x428 * x86
    x536 = (
        x134 * (x493 - x506)
        + x26 * x519
        + x26 * (x519 + x521)
        + x516 * x67
        - x71
        * (x505 * x67 + x533 * x78 + x534 - x71 * (x494 * x67 + x528 * x78 - x535 * x71))
        + x78
        * (
            x134 * (x462 - x508)
            + x515 * x67
            - x533 * x71
            + x76
            * (
                x134 * (x461 - x513)
                + x514 * x67
                - x532 * x71
                + x70 * (x134 * (x439 * x67 - x456 - x511) + x512 * x67 - x531 * x71)
            )
        )
    )
    x537 = x27 * x485
    x538 = -x14 * x216 + x213 * x428 + x446 * x70
    x539 = x538 * x56
    x540 = -x14 * x225 + x224 * x428 + x444 * x70
    x541 = x1 * (-x539 + x540)
    x542 = -x14 * x208 + x206 * x428 + x439 * x70
    x543 = x542 * x56
    x544 = -x14 * x219 + x211 * x428 + x437 * x70
    x545 = x1 * (-x543 + x544)
    x546 = x11 * x543
    x547 = x544 * x67 - x546
    x548 = -x14 * x232 + x207 * x428 + x454 * x70
    x549 = x548 * x56
    x550 = x11 * x549
    x551 = x542 * x67 - x550
    x552 = x551 * x56
    x553 = -x11 * x552 + x545 + x547 * x67
    x554 = -x11 * x539 + x540 * x67 + x547 * x70
    x555 = -x14 * x244 + x215 * x428 + x459 * x70
    x556 = x555 * x56
    x557 = -x11 * x556 + x538 * x67 + x551 * x70
    x558 = x557 * x56
    x559 = -x11 * x558 + x541 + x553 * x70 + x554 * x67
    x560 = x537 + x559
    x561 = -x14 * x255 + x252 * x428 + x451 * x70
    x562 = x56 * x561
    x563 = -x14 * x260 + x259 * x428 + x431 * x70
    x564 = x1 * (-x562 + x563)
    x565 = -x11 * x562 + x557 * x76 + x563 * x67
    x566 = -x14 * x270 + x254 * x428 + x496 * x70
    x567 = x56 * x566
    x568 = -x14 * x271 + x231 * x428 + x498 * x70
    x569 = x56 * x568
    x570 = -x11 * x569 + x548 * x67
    x571 = -x14 * x273 + x243 * x428 + x501 * x70
    x572 = x56 * x571
    x573 = -x11 * x572 + x555 * x67 + x570 * x70
    x574 = -x11 * x567 + x561 * x67 + x573 * x76
    x575 = x56 * x574
    x576 = x1 * (x538 - x556)
    x577 = x1 * (x542 - x549)
    x578 = x56 * x570
    x579 = -x11 * x578 + x551 * x67 + x577
    x580 = x56 * x573
    x581 = -x11 * x580 + x557 * x67 + x576 + x579 * x70
    x582 = -x11 * x575 + x564 + x565 * x67 + x581 * x76
    x583 = x26 * x560 + x27 * x470 + x582
    x584 = x23 * x293 + x583
    x585 = x27 * x520
    x586 = (
        x134 * (x554 - x558)
        + x559 * x67
        - x581 * x71
        + x70 * (x134 * (x544 * x67 - x546 - x552) + x553 * x67 - x579 * x71)
    )
    x587 = x585 + x586
    x588 = x1 * (x548 - x569)
    x589 = x266 * x428 - x298 * x435 + x524 * x70
    x590 = x568 * x67 - x589 * x71
    x591 = x570 * x67 + x588 - x590 * x71
    x592 = x1 * (x555 - x572)
    x593 = x268 * x428 - x303 * x435 + x526 * x70
    x594 = x571 * x67 + x590 * x70 - x593 * x71
    x595 = x573 * x67 + x591 * x70 + x592 - x594 * x71
    x596 = x1 * (x561 - x567)
    x597 = x269 * x428 - x309 * x435 + x523 * x70
    x598 = (
        x134 * (x565 - x575)
        + x582 * x67
        - x71
        * (x574 * x67 + x595 * x76 + x596 - x71 * (x566 * x67 + x594 * x76 - x597 * x71))
        + x76
        * (
            x134 * (x557 - x580)
            + x581 * x67
            - x595 * x71
            + x70 * (x134 * (x542 * x67 - x550 - x578) + x579 * x67 - x591 * x71)
        )
    )
    x599 = x26 * x587 + x27 * x519 + x598
    x600 = x28 * x470 + x28 * x486
    x601 = x23 * x312 + x600
    x602 = x28 * x519 + x28 * x521
    x603 = -x14 * x321 + x319 * x428 + x555 * x76
    x604 = x56 * x603
    x605 = -x14 * x329 + x328 * x428 + x538 * x76
    x606 = x1 * (-x604 + x605)
    x607 = -x14 * x315 + x313 * x428 + x548 * x76
    x608 = x56 * x607
    x609 = -x14 * x324 + x318 * x428 + x542 * x76
    x610 = x1 * (-x608 + x609)
    x611 = x11 * x608
    x612 = x609 * x67 - x611
    x613 = -x14 * x336 + x314 * x428 + x568 * x76
    x614 = x56 * x613
    x615 = -x11 * x614 + x607 * x67
    x616 = x56 * x615
    x617 = -x11 * x616 + x610 + x612 * x67
    x618 = -x11 * x604 + x605 * x67 + x612 * x70
    x619 = -x14 * x346 + x320 * x428 + x571 * x76
    x620 = x56 * x619
    x621 = -x11 * x620 + x603 * x67 + x615 * x70
    x622 = x56 * x621
    x623 = -x11 * x622 + x606 + x617 * x70 + x618 * x67
    x624 = x27 * x559 + x623
    x625 = x27 * x560 + x624
    x626 = x23 * x355 + x625
    x627 = x1 * (x607 - x614)
    x628 = x335 * x428 - x357 * x435 + x589 * x76
    x629 = x613 * x67 - x628 * x71
    x630 = x615 * x67 + x627 - x629 * x71
    x631 = x1 * (x603 - x620)
    x632 = x345 * x428 - x362 * x435 + x593 * x76
    x633 = (
        x134 * (x618 - x622)
        + x27 * x586
        + x623 * x67
        + x70 * (x134 * (x609 * x67 - x611 - x616) + x617 * x67 - x630 * x71)
        - x71
        * (x621 * x67 + x630 * x70 + x631 - x71 * (x619 * x67 + x629 * x70 - x632 * x71))
    )
    x634 = x27 * x587 + x633
    x635 = x28 * x559
    x636 = x28 * x537 + x635
    x637 = x23 * x367 + x636
    x638 = x28 * x586
    x639 = x28 * x585 + x638
    x640 = x23 * x29
    x641 = x29 * x485
    x642 = x195 * x640 + x641
    x643 = x29 * x520
    x644 = x544 * x56
    x645 = -x14 * x371 + x222 * x428 + x477 * x70
    x646 = x1 * (-x644 + x645)
    x647 = x11 * x644
    x648 = x645 * x67 - x647
    x649 = x547 * x56
    x650 = -x11 * x649 + x646 + x648 * x67
    x651 = x26 * x650
    x652 = x26 * x559 + x26 * (x559 + x651) + x582
    x653 = x23 * x381 + x652
    x654 = x134 * (x645 * x67 - x647 - x649) - x553 * x71 + x650 * x67
    x655 = x26 * x654
    x656 = x26 * x586 + x26 * (x586 + x655) + x598
    x657 = x27 * x650
    x658 = x56 * x609
    x659 = -x14 * x385 + x327 * x428 + x544 * x76
    x660 = x1 * (-x658 + x659)
    x661 = x11 * x658
    x662 = x659 * x67 - x661
    x663 = x56 * x612
    x664 = -x11 * x663 + x660 + x662 * x67
    x665 = x657 + x664
    x666 = x26 * x665 + x624
    x667 = x23 * x396 + x666
    x668 = x27 * x654
    x669 = x134 * (x659 * x67 - x661 - x663) - x617 * x71 + x664 * x67
    x670 = x668 + x669
    x671 = x26 * x670 + x633
    x672 = x28 * x651 + x635
    x673 = x23 * x401 + x672
    x674 = x28 * x655 + x638
    x675 = -x14 * x403 + x404 * x428 + x607 * x78
    x676 = x56 * x675
    x677 = -x14 * x414 + x415 * x428 + x609 * x78
    x678 = x1 * (-x676 + x677)
    x679 = x11 * x676
    x680 = x67 * x677 - x679
    x681 = -x14 * x409 + x402 * x428 + x613 * x78
    x682 = x56 * x681
    x683 = -x11 * x682 + x67 * x675
    x684 = x56 * x683
    x685 = -x11 * x684 + x67 * x680 + x678
    x686 = x27 * x664 + x27 * x665 + x685
    x687 = x23 * x424 + x686
    x688 = x1 * (x675 - x682)
    x689 = x408 * x428 - x422 * x435 + x628 * x78
    x690 = (
        x134 * (x67 * x677 - x679 - x684)
        + x27 * x669
        + x27 * x670
        + x67 * x685
        - x71 * (x67 * x683 + x688 - x71 * (x67 * x681 - x689 * x71))
    )
    x691 = x28 * x657 + x28 * x664
    x692 = x23 * x426 + x691
    x693 = x28 * x668 + x28 * x669
    x694 = x29 * x650
    x695 = x375 * x640 + x694
    x696 = x29 * x654
    x697 = -x15 - A[2]
    x698 = x16 * x162
    x699 = x115 * x16
    x700 = x64 * x697 - x699
    x701 = x56 * x700
    x702 = x1 * (x112 * x697 - x698 - x701)
    x703 = x112 * x697 - x698
    x704 = x16 * x56
    x705 = x32 * x704
    x706 = x40 * x697 - x705
    x707 = x67 * x706
    x708 = x36 * x704
    x709 = x32 * x697 - x708
    x710 = x56 * x709
    x711 = x11 * x710
    x712 = x707 - x711
    x713 = x16 * x166
    x714 = x61 * x697 - x713
    x715 = x67 * x714
    x716 = x118 * x16
    x717 = x41 * x697 - x716
    x718 = x56 * x717
    x719 = -x11 * x718 + x70 * x712 + x715
    x720 = -x11 * x701 + x67 * x703 + x719 * x76
    x721 = x67 * x700
    x722 = x16 * x68
    x723 = x47 * x697 - x722
    x724 = x56 * x723
    x725 = x67 * x709
    x726 = x51 * x704
    x727 = x36 * x697 - x726
    x728 = x56 * x727
    x729 = x11 * x728
    x730 = x725 - x729
    x731 = x67 * x717
    x732 = x16 * x74
    x733 = x37 * x697 - x732
    x734 = x56 * x733
    x735 = x11 * x734
    x736 = x70 * x730 + x731 - x735
    x737 = -x11 * x724 + x721 + x736 * x76
    x738 = x56 * x737
    x739 = x1 * (x61 * x697 - x713 - x718)
    x740 = x1 * (2 * x20 * x21 * x25 * x30 * x39 * x697 - x705 - x710)
    x741 = x56 * x730
    x742 = -x11 * x741 + x67 * x712 + x740
    x743 = x56 * x736
    x744 = -x11 * x743 + x67 * x719 + x70 * x742 + x739
    x745 = -x11 * x738 + x67 * x720 + x702 + x744 * x76
    x746 = x16 * x191
    x747 = x56 * x714
    x748 = x1 * (x110 * x697 - x746 - x747)
    x749 = x40 * x704
    x750 = x56 * x706
    x751 = x1 * (2 * x20 * x21 * x25 * x30 * x59 * x697 - x749 - x750)
    x752 = x60 * x697 - x749
    x753 = x67 * x752
    x754 = x11 * x750
    x755 = x753 - x754
    x756 = x56 * x712
    x757 = -x11 * x756 + x67 * x755 + x751
    x758 = x110 * x697 - x746
    x759 = -x11 * x747 + x67 * x758 + x70 * x755
    x760 = x56 * x719
    x761 = -x11 * x760 + x67 * x759 + x70 * x757 + x748
    x762 = x106 * x16
    x763 = x16 * x57
    x764 = x65 * x697 - x763
    x765 = x56 * x764
    x766 = x1 * (x113 * x697 - x762 - x765)
    x767 = x113 * x697 - x762
    x768 = -x11 * x765 + x67 * x767 + x737 * x78
    x769 = -x16 * x87 + x55 * x697
    x770 = x56 * x769
    x771 = x67 * x723
    x772 = -x16 * x88 + x54 * x697
    x773 = x56 * x772
    x774 = x11 * x773
    x775 = x67 * x727
    x776 = x51 * x697 - x704 * x82
    x777 = x56 * x776
    x778 = x11 * x777
    x779 = x775 - x778
    x780 = x67 * x733
    x781 = -x16 * x90 + x52 * x697
    x782 = x56 * x781
    x783 = x11 * x782
    x784 = x70 * x779 + x780 - x783
    x785 = x76 * x784 + x771 - x774
    x786 = -x11 * x770 + x67 * x764 + x78 * x785
    x787 = x56 * x786
    x788 = x1 * (x64 * x697 - x699 - x724)
    x789 = x56 * x785
    x790 = x1 * (x41 * x697 - x716 - x734)
    x791 = x1 * (2 * x19 * x20 * x21 * x25 * x30 * x697 - x708 - x728)
    x792 = x56 * x779
    x793 = -x11 * x792 + x67 * x730 + x791
    x794 = x56 * x784
    x795 = -x11 * x794 + x67 * x736 + x70 * x793 + x790
    x796 = -x11 * x789 + x67 * x737 + x76 * x795 + x788
    x797 = -x11 * x787 + x67 * x768 + x766 + x78 * x796
    x798 = x26 * x745 + x26 * (x26 * x761 + x745) + x797
    x799 = x202 * x24 + x798
    x800 = (
        x134 * (x720 - x738)
        + x67 * x745
        - x71 * x796
        + x76
        * (
            x134 * (x719 - x743)
            + x67 * x744
            + x70 * (x134 * (x67 * x706 - x711 - x741) + x67 * x742 - x71 * x793)
            - x71 * x795
        )
    )
    x801 = (
        x134 * (x759 - x760)
        + x67 * x761
        + x70 * (x134 * (x67 * x752 - x754 - x756) + x67 * x757 - x71 * x742)
        - x71 * x744
    )
    x802 = x1 * (x47 * x697 - x722 - x773)
    x803 = x67 * x772
    x804 = -x147 * x704 + x697 * x85
    x805 = x71 * x804
    x806 = x67 * x776
    x807 = -x145 * x704 + x697 * x82
    x808 = x71 * x807
    x809 = x806 - x808
    x810 = x67 * x781
    x811 = -x146 * x704 + x697 * x83
    x812 = x71 * x811
    x813 = x70 * x809 + x810 - x812
    x814 = x76 * x813 + x803 - x805
    x815 = x1 * (x37 * x697 - x732 - x782)
    x816 = x1 * (2 * x20 * x21 * x25 * x30 * x35 * x697 - x726 - x777)
    x817 = x67 * x779 - x71 * x809 + x816
    x818 = x67 * x784 + x70 * x817 - x71 * x813 + x815
    x819 = x67 * x785 - x71 * x814 + x76 * x818 + x802
    x820 = x1 * (x65 * x697 - x763 - x770)
    x821 = -x148 * x704 + x697 * x86
    x822 = (
        x134 * (x768 - x787)
        + x26 * x800
        + x26 * (x26 * x801 + x800)
        + x67 * x797
        - x71
        * (x67 * x786 - x71 * (x67 * x769 - x71 * x821 + x78 * x814) + x78 * x819 + x820)
        + x78
        * (
            x134 * (x737 - x789)
            + x67 * x796
            - x71 * x819
            + x76
            * (
                x134 * (x736 - x794)
                + x67 * x795
                + x70 * (x134 * (x67 * x709 - x729 - x792) + x67 * x793 - x71 * x817)
                - x71 * x818
            )
        )
    )
    x823 = x16 * x225
    x824 = x16 * x216
    x825 = x213 * x697 - x824
    x826 = x56 * x825
    x827 = x1 * (x224 * x697 - x823 - x826)
    x828 = x16 * x219
    x829 = x16 * x208
    x830 = x206 * x697 - x829
    x831 = x56 * x830
    x832 = x1 * (x211 * x697 - x828 - x831)
    x833 = x211 * x697 - x828
    x834 = x67 * x833
    x835 = x11 * x831
    x836 = x834 - x835
    x837 = x67 * x830
    x838 = x16 * x232
    x839 = x207 * x697 - x838
    x840 = x56 * x839
    x841 = x11 * x840
    x842 = x837 - x841
    x843 = x56 * x842
    x844 = -x11 * x843 + x67 * x836 + x832
    x845 = x224 * x697 - x823
    x846 = -x11 * x826 + x67 * x845 + x70 * x836
    x847 = x67 * x825
    x848 = x16 * x244
    x849 = x215 * x697 - x848
    x850 = x56 * x849
    x851 = -x11 * x850 + x70 * x842 + x847
    x852 = x56 * x851
    x853 = -x11 * x852 + x67 * x846 + x70 * x844 + x827
    x854 = x27 * x761 + x853
    x855 = x16 * x260
    x856 = x16 * x255
    x857 = x252 * x697 - x856
    x858 = x56 * x857
    x859 = x1 * (x259 * x697 - x855 - x858)
    x860 = x259 * x697 - x855
    x861 = -x11 * x858 + x67 * x860 + x76 * x851
    x862 = -x16 * x270 + x254 * x697
    x863 = x56 * x862
    x864 = x67 * x849
    x865 = x67 * x839
    x866 = -x16 * x271 + x231 * x697
    x867 = x56 * x866
    x868 = x11 * x867
    x869 = x865 - x868
    x870 = -x16 * x273 + x243 * x697
    x871 = x56 * x870
    x872 = x11 * x871
    x873 = x70 * x869 + x864 - x872
    x874 = -x11 * x863 + x67 * x857 + x76 * x873
    x875 = x56 * x874
    x876 = x1 * (x213 * x697 - x824 - x850)
    x877 = x1 * (x206 * x697 - x829 - x840)
    x878 = x56 * x869
    x879 = -x11 * x878 + x67 * x842 + x877
    x880 = x56 * x873
    x881 = -x11 * x880 + x67 * x851 + x70 * x879 + x876
    x882 = -x11 * x875 + x67 * x861 + x76 * x881 + x859
    x883 = x26 * x854 + x27 * x745 + x882
    x884 = x24 * x293 + x883
    x885 = (
        x134 * (x846 - x852)
        + x67 * x853
        + x70 * (x134 * (x67 * x833 - x835 - x843) + x67 * x844 - x71 * x879)
        - x71 * x881
    )
    x886 = x27 * x801 + x885
    x887 = x1 * (x207 * x697 - x838 - x867)
    x888 = x67 * x866
    x889 = x266 * x697 - x298 * x704
    x890 = x71 * x889
    x891 = x888 - x890
    x892 = x67 * x869 - x71 * x891 + x887
    x893 = x1 * (x215 * x697 - x848 - x871)
    x894 = x67 * x870
    x895 = x268 * x697 - x303 * x704
    x896 = x71 * x895
    x897 = x70 * x891 + x894 - x896
    x898 = x67 * x873 + x70 * x892 - x71 * x897 + x893
    x899 = x1 * (x252 * x697 - x856 - x863)
    x900 = x269 * x697 - x309 * x704
    x901 = (
        x134 * (x861 - x875)
        + x67 * x882
        - x71
        * (x67 * x874 - x71 * (x67 * x862 - x71 * x900 + x76 * x897) + x76 * x898 + x899)
        + x76
        * (
            x134 * (x851 - x880)
            + x67 * x881
            + x70 * (x134 * (x67 * x830 - x841 - x878) + x67 * x879 - x71 * x892)
            - x71 * x898
        )
    )
    x902 = x26 * x886 + x27 * x800 + x901
    x903 = x70 * x717
    x904 = x1 * (-x56 * x903 + x70 * x714)
    x905 = x70 * x709
    x906 = x1 * (-x56 * x905 + x70 * x706)
    x907 = x71 * x905
    x908 = x70 * x707 - x907
    x909 = x70 * x727
    x910 = x71 * x909
    x911 = x70 * x725 - x910
    x912 = x56 * x911
    x913 = -x11 * x912 + x67 * x908 + x906
    x914 = x70 * x715 + x70 * x908 - x71 * x903
    x915 = x70 * x733
    x916 = x70 * x731 + x70 * x911 - x71 * x915
    x917 = x56 * x916
    x918 = -x11 * x917 + x67 * x914 + x70 * x913 + x904
    x919 = x28 * x761 + x918
    x920 = x70 * x723
    x921 = x1 * (-x56 * x920 + x70 * x700)
    x922 = x70 * x721 - x71 * x920 + x76 * x916
    x923 = x70 * x775 - x70 * x778
    x924 = x70 * x780 - x70 * x783 + x70 * x923
    x925 = x70 * x771 - x70 * x774 + x76 * x924
    x926 = x56 * x925
    x927 = x1 * (-x56 * x915 + x70 * x717)
    x928 = x1 * (-x56 * x909 + x70 * x709)
    x929 = x56 * x923
    x930 = -x11 * x929 + x67 * x911 + x928
    x931 = x56 * x924
    x932 = -x11 * x931 + x67 * x916 + x70 * x930 + x927
    x933 = -x11 * x926 + x67 * x922 + x76 * x932 + x921
    x934 = x26 * x919 + x28 * x745 + x933
    x935 = x24 * x312 + x934
    x936 = (
        x134 * (x914 - x917)
        + x67 * x918
        + x70 * (x134 * (x67 * x70 * x706 - x907 - x912) + x67 * x913 - x71 * x930)
        - x71 * x932
    )
    x937 = x28 * x801 + x936
    x938 = x70 * x777
    x939 = x1 * (x70 * x727 - x938)
    x940 = x70 * x806 - x70 * x808
    x941 = x67 * x923 - x71 * x940 + x939
    x942 = x70 * x782
    x943 = x1 * (x70 * x733 - x942)
    x944 = x70 * x810 - x70 * x812 + x70 * x940
    x945 = x67 * x924 + x70 * x941 - x71 * x944 + x943
    x946 = x70 * x773
    x947 = x1 * (x70 * x723 - x946)
    x948 = (
        x134 * (x922 - x926)
        + x67 * x933
        - x71
        * (x67 * x925 - x71 * (x70 * x803 - x70 * x805 + x76 * x944) + x76 * x945 + x947)
        + x76
        * (
            x134 * (x916 - x931)
            + x67 * x932
            + x70 * (x134 * (x67 * x70 * x709 - x910 - x929) + x67 * x930 - x71 * x941)
            - x71 * x945
        )
    )
    x949 = x26 * x937 + x28 * x800 + x948
    x950 = x16 * x329
    x951 = x16 * x321
    x952 = x319 * x697 - x951
    x953 = x56 * x952
    x954 = x1 * (x328 * x697 - x950 - x953)
    x955 = x16 * x324
    x956 = x16 * x315
    x957 = x313 * x697 - x956
    x958 = x56 * x957
    x959 = x1 * (x318 * x697 - x955 - x958)
    x960 = x318 * x697 - x955
    x961 = x67 * x960
    x962 = x11 * x958
    x963 = x961 - x962
    x964 = x67 * x957
    x965 = -x16 * x336 + x314 * x697
    x966 = x56 * x965
    x967 = x11 * x966
    x968 = x964 - x967
    x969 = x56 * x968
    x970 = -x11 * x969 + x67 * x963 + x959
    x971 = x328 * x697 - x950
    x972 = -x11 * x953 + x67 * x971 + x70 * x963
    x973 = -x16 * x346 + x320 * x697
    x974 = x56 * x973
    x975 = -x11 * x974 + x67 * x952 + x70 * x968
    x976 = x56 * x975
    x977 = -x11 * x976 + x67 * x972 + x70 * x970 + x954
    x978 = x27 * x853 + x977
    x979 = x27 * x854 + x978
    x980 = x24 * x355 + x979
    x981 = x1 * (x313 * x697 - x956 - x966)
    x982 = x67 * x965
    x983 = x335 * x697 - x357 * x704
    x984 = x71 * x983
    x985 = x982 - x984
    x986 = x67 * x968 - x71 * x985 + x981
    x987 = x1 * (x319 * x697 - x951 - x974)
    x988 = x345 * x697 - x362 * x704
    x989 = (
        x134 * (x972 - x976)
        + x27 * x885
        + x67 * x977
        + x70 * (x134 * (x67 * x960 - x962 - x969) + x67 * x970 - x71 * x986)
        - x71
        * (x67 * x975 + x70 * x986 - x71 * (x67 * x973 + x70 * x985 - x71 * x988) + x987)
    )
    x990 = x27 * x886 + x989
    x991 = x70 * x849
    x992 = x1 * (-x56 * x991 + x70 * x825)
    x993 = x70 * x839
    x994 = x1 * (-x56 * x993 + x70 * x830)
    x995 = x71 * x993
    x996 = x70 * x837 - x995
    x997 = x70 * x865 - x70 * x868
    x998 = x56 * x997
    x999 = -x11 * x998 + x67 * x996 + x994
    x1000 = x70 * x847 + x70 * x996 - x71 * x991
    x1001 = x70 * x864 - x70 * x872 + x70 * x997
    x1002 = x1001 * x56
    x1003 = x1000 * x67 - x1002 * x11 + x70 * x999 + x992
    x1004 = x1003 + x28 * x853
    x1005 = x1004 + x27 * x919
    x1006 = x1005 + x24 * x367
    x1007 = x70 * x867
    x1008 = x1 * (-x1007 + x70 * x839)
    x1009 = x70 * x888 - x70 * x890
    x1010 = x1008 - x1009 * x71 + x67 * x997
    x1011 = x70 * x871
    x1012 = x1 * (-x1011 + x70 * x849)
    x1013 = (
        x1003 * x67
        + x134 * (x1000 - x1002)
        + x70 * (-x1010 * x71 + x134 * (x67 * x70 * x830 - x995 - x998) + x67 * x999)
        - x71
        * (
            x1001 * x67
            + x1010 * x70
            + x1012
            - x71 * (x1009 * x70 + x70 * x894 - x70 * x896)
        )
    )
    x1014 = x1013 + x28 * x885
    x1015 = x1014 + x27 * x937
    x1016 = x24 * x29
    x1017 = x69 ** (-2.0)
    x1018 = 2 * x1017
    x1019 = x1 * (2 * x1017 * x717 - x1018 * x734)
    x1020 = x1 * (2 * x1017 * x709 - x1018 * x728)
    x1021 = x1018 * x729
    x1022 = x1018 * x725 - x1021
    x1023 = x1018 * x775 - x1018 * x778
    x1024 = x1023 * x56
    x1025 = x1020 + x1022 * x67 - x1024 * x11
    x1026 = x1018 * x731 - x1018 * x735 + x1022 * x70
    x1027 = x1018 * x780 - x1018 * x783 + x1023 * x70
    x1028 = x1027 * x56
    x1029 = x1019 + x1025 * x70 + x1026 * x67 - x1028 * x11
    x1030 = x1029 + x28 * x918
    x1031 = x1030 + x28 * x919
    x1032 = x1016 * x195 + x1031
    x1033 = x1 * (2 * x1017 * x727 - x1018 * x777)
    x1034 = x1018 * x806 - x1018 * x808
    x1035 = x1023 * x67 + x1033 - x1034 * x71
    x1036 = x1 * (2 * x1017 * x733 - x1018 * x782)
    x1037 = (
        x1029 * x67
        + x134 * (x1026 - x1028)
        + x28 * x936
        + x70
        * (x1025 * x67 - x1035 * x71 + x134 * (2 * x1017 * x67 * x709 - x1021 - x1024))
        - x71
        * (
            x1027 * x67
            + x1035 * x70
            + x1036
            - x71 * (x1018 * x810 - x1018 * x812 + x1034 * x70)
        )
    )
    x1038 = x1037 + x28 * x937
    x1039 = x16 * x371
    x1040 = x56 * x833
    x1041 = x1 * (-x1039 - x1040 + x222 * x697)
    x1042 = -x1039 + x222 * x697
    x1043 = x1040 * x11
    x1044 = x1042 * x67 - x1043
    x1045 = x56 * x836
    x1046 = x1041 + x1044 * x67 - x1045 * x11
    x1047 = x26 * x853 + x26 * (x1046 * x26 + x853) + x882
    x1048 = x1047 + x24 * x381
    x1049 = x1046 * x67 + x134 * (x1042 * x67 - x1043 - x1045) - x71 * x844
    x1050 = x26 * x885 + x26 * (x1049 * x26 + x885) + x901
    x1051 = x16 * x385
    x1052 = x56 * x960
    x1053 = x1 * (-x1051 - x1052 + x327 * x697)
    x1054 = -x1051 + x327 * x697
    x1055 = x1052 * x11
    x1056 = x1054 * x67 - x1055
    x1057 = x56 * x963
    x1058 = x1053 + x1056 * x67 - x1057 * x11
    x1059 = x1046 * x27 + x1058
    x1060 = x1059 * x26 + x978
    x1061 = x1060 + x24 * x396
    x1062 = x1058 * x67 + x134 * (x1054 * x67 - x1055 - x1057) - x71 * x970
    x1063 = x1049 * x27 + x1062
    x1064 = x1063 * x26 + x989
    x1065 = x70 * x830
    x1066 = x1 * (-x1065 * x56 + x70 * x833)
    x1067 = x1065 * x71
    x1068 = -x1067 + x70 * x834
    x1069 = x56 * x996
    x1070 = x1066 + x1068 * x67 - x1069 * x11
    x1071 = x1046 * x28 + x1070
    x1072 = x1004 + x1071 * x26
    x1073 = x1072 + x24 * x401
    x1074 = x1070 * x67 + x134 * (-x1067 - x1069 + x67 * x70 * x833) - x71 * x999
    x1075 = x1049 * x28 + x1074
    x1076 = x1014 + x1075 * x26
    x1077 = x16 * x414
    x1078 = x16 * x403
    x1079 = -x1078 + x404 * x697
    x1080 = x1079 * x56
    x1081 = x1 * (-x1077 - x1080 + x415 * x697)
    x1082 = -x1077 + x415 * x697
    x1083 = x1080 * x11
    x1084 = x1082 * x67 - x1083
    x1085 = -x16 * x409 + x402 * x697
    x1086 = x1085 * x56
    x1087 = x1079 * x67 - x1086 * x11
    x1088 = x1087 * x56
    x1089 = x1081 + x1084 * x67 - x1088 * x11
    x1090 = x1058 * x27 + x1059 * x27 + x1089
    x1091 = x1090 + x24 * x424
    x1092 = x1 * (-x1078 - x1086 + x404 * x697)
    x1093 = x408 * x697 - x422 * x704
    x1094 = (
        x1062 * x27
        + x1063 * x27
        + x1089 * x67
        + x134 * (x1082 * x67 - x1083 - x1088)
        - x71 * (x1087 * x67 + x1092 - x71 * (x1085 * x67 - x1093 * x71))
    )
    x1095 = x70 * x957
    x1096 = x1 * (-x1095 * x56 + x70 * x960)
    x1097 = x1095 * x71
    x1098 = -x1097 + x70 * x961
    x1099 = x70 * x964 - x70 * x967
    x1100 = x1099 * x56
    x1101 = x1096 + x1098 * x67 - x11 * x1100
    x1102 = x1058 * x28 + x1071 * x27 + x1101
    x1103 = x1102 + x24 * x426
    x1104 = x70 * x966
    x1105 = x1 * (-x1104 + x70 * x957)
    x1106 = (
        x1101 * x67
        + x134 * (-x1097 - x1100 + x67 * x70 * x960)
        - x71 * (x1099 * x67 + x1105 - x71 * (x70 * x982 - x70 * x984))
    )
    x1107 = x1062 * x28 + x1075 * x27 + x1106
    x1108 = x1 * (2 * x1017 * x830 - x1018 * x840)
    x1109 = x1018 * x841
    x1110 = x1018 * x837 - x1109
    x1111 = x1018 * x865 - x1018 * x868
    x1112 = x1111 * x56
    x1113 = -x11 * x1112 + x1108 + x1110 * x67
    x1114 = x1070 * x28 + x1113
    x1115 = x1071 * x28 + x1114
    x1116 = x1016 * x375 + x1115
    x1117 = x1 * (2 * x1017 * x839 - x1018 * x867)
    x1118 = (
        x1074 * x28
        + x1113 * x67
        + x134 * (2 * x1017 * x67 * x830 - x1109 - x1112)
        - x71 * (x1111 * x67 + x1117 - x71 * (x1018 * x888 - x1018 * x890))
    )
    x1119 = x1075 * x28 + x1118
    x1120 = x70 * x706
    x1121 = x1 * (-x1120 * x56 + x70 * x752)
    x1122 = x1120 * x71
    x1123 = -x1122 + x70 * x753
    x1124 = x56 * x908
    x1125 = -x11 * x1124 + x1121 + x1123 * x67
    x1126 = x26 * x918 + x26 * (x1125 * x26 + x918) + x933
    x1127 = x1125 * x67 + x134 * (-x1122 - x1124 + x67 * x70 * x752) - x71 * x913
    x1128 = x1126 * x22 + x26 * x936 + x26 * (x1127 * x26 + x936) + x948
    x1129 = x1070 + x1125 * x27
    x1130 = x1003 + x1129 * x26 + x27 * x918
    x1131 = x1074 + x1127 * x27
    x1132 = x1013 + x1130 * x22 + x1131 * x26 + x27 * x936
    x1133 = x1 * (2 * x1017 * x706 - x1018 * x710)
    x1134 = x1018 * x711
    x1135 = x1018 * x707 - x1134
    x1136 = x1022 * x56
    x1137 = -x11 * x1136 + x1133 + x1135 * x67
    x1138 = x1125 * x28 + x1137
    x1139 = x1030 + x1138 * x26
    x1140 = -x1025 * x71 + x1137 * x67 + x134 * (2 * x1017 * x67 * x706 - x1134 - x1136)
    x1141 = x1127 * x28 + x1140
    x1142 = x1037 + x1139 * x22 + x1141 * x26
    x1143 = x1070 * x27 + x1101 + x1129 * x27
    x1144 = x1074 * x27 + x1106 + x1131 * x27 + x1143 * x22
    x1145 = x1114 + x1138 * x27
    x1146 = x1118 + x1141 * x27 + x1145 * x22
    x1147 = x69 ** (-3.0)
    x1148 = 6 * x1147
    x1149 = x1148 * x729
    x1150 = x1148 * x775 - x1148 * x778
    x1151 = x1150 * x56
    x1152 = x1 * (6 * x1147 * x709 - x1148 * x728)
    x1153 = x1148 * x725 - x1149
    x1154 = -x11 * x1151 + x1152 + x1153 * x67
    x1155 = x1 * (6 * x1147 * x727 - x1148 * x777)
    x1156 = x1137 * x28 + x1138 * x28 + x1154
    x1157 = (
        x1140 * x28
        + x1141 * x28
        + x1154 * x67
        + x1156 * x22
        + x134 * (6 * x1147 * x67 * x709 - x1149 - x1151)
        - x71 * (x1150 * x67 + x1155 - x71 * (x1148 * x806 - x1148 * x808))
    )
    x1158 = -x14 * x495 + x428 * x489 + x66
    x1159 = x1158 * x56
    x1160 = x114 - x14 * x490 + x428 * x492
    x1161 = x1 * (-x1159 + x1160)
    x1162 = x123 - x14 * x452 + x428 * x431
    x1163 = x1162 * x56
    x1164 = -x14 * x432 + x163 + x428 * x434
    x1165 = x1 * (-x1163 + x1164)
    x1166 = -x14 * x440 + x171 + x428 * x437
    x1167 = x126 - x14 * x455 + x428 * x439
    x1168 = x1167 * x56
    x1169 = -x11 * x1168 + x1166 * x67
    x1170 = -x14 * x447 + x170 + x428 * x444
    x1171 = x125 - x14 * x460 + x428 * x446
    x1172 = x1171 * x56
    x1173 = -x11 * x1172 + x1169 * x70 + x1170 * x67
    x1174 = -x11 * x1163 + x1164 * x67 + x1173 * x76
    x1175 = -x14 * x497 + x428 * x451 + x95
    x1176 = x1175 * x56
    x1177 = -x14 * x499 + x428 * x454 + x98
    x1178 = x1177 * x56
    x1179 = -x11 * x1178 + x1167 * x67
    x1180 = -x14 * x502 + x428 * x459 + x97
    x1181 = x1180 * x56
    x1182 = -x11 * x1181 + x1171 * x67 + x1179 * x70
    x1183 = -x11 * x1176 + x1162 * x67 + x1182 * x76
    x1184 = x1 * (x1170 - x1172)
    x1185 = x1 * (x1166 - x1168)
    x1186 = (
        x1165
        + x1174 * x67
        - x1183 * x71
        + x76
        * (x1173 * x67 - x1182 * x71 + x1184 + x70 * (x1169 * x67 - x1179 * x71 + x1185))
    )
    x1187 = x1170 * x56
    x1188 = -x14 * x472 + x192 + x428 * x482
    x1189 = x1 * (-x1187 + x1188)
    x1190 = x1166 * x56
    x1191 = -x14 * x475 + x184 + x428 * x477
    x1192 = x1 * (-x1190 + x1191)
    x1193 = -x11 * x1190 + x1191 * x67
    x1194 = -x11 * x1187 + x1188 * x67 + x1193 * x70
    x1195 = (
        -x1173 * x71 + x1189 + x1194 * x67 + x70 * (-x1169 * x71 + x1192 + x1193 * x67)
    )
    x1196 = x1195 * x26
    x1197 = -x11 * x1159 + x1160 * x67 + x1183 * x78
    x1198 = x1 * (x1162 - x1176)
    x1199 = x152 + x428 * x496 - x435 * x523
    x1200 = x154 + x428 * x498 - x435 * x524
    x1201 = x1177 * x67 - x1200 * x71
    x1202 = x153 + x428 * x501 - x435 * x526
    x1203 = x1180 * x67 + x1201 * x70 - x1202 * x71
    x1204 = x1175 * x67 - x1199 * x71 + x1203 * x76
    x1205 = x1 * (x1171 - x1181)
    x1206 = x1 * (x1167 - x1178)
    x1207 = x142 + x428 * x494 - x435 * x535
    x1208 = (
        x1161
        + x1186 * x26
        + x1197 * x67
        + x26 * (x1186 + x1196)
        - x71 * (x1158 * x67 + x1204 * x78 - x1207 * x71)
        + x78
        * (
            x1183 * x67
            + x1198
            - x1204 * x71
            + x76
            * (
                x1182 * x67
                - x1203 * x71
                + x1205
                + x70 * (x1179 * x67 - x1201 * x71 + x1206)
            )
        )
    )
    x1209 = x1208 + x23 * x517
    x1210 = x1195 * x27
    x1211 = x1171 * x70 - x14 * x556 + x241 + x428 * x538
    x1212 = x1211 * x56
    x1213 = x1170 * x70 - x14 * x539 + x239 + x428 * x540
    x1214 = x1 * (-x1212 + x1213)
    x1215 = x1167 * x70 - x14 * x549 + x230 + x428 * x542
    x1216 = x1215 * x56
    x1217 = x1166 * x70 - x14 * x543 + x228 + x428 * x544
    x1218 = x1 * (-x1216 + x1217)
    x1219 = -x11 * x1216 + x1217 * x67
    x1220 = x1177 * x70 - x14 * x569 + x278 + x428 * x548
    x1221 = x1220 * x56
    x1222 = -x11 * x1221 + x1215 * x67
    x1223 = -x11 * x1212 + x1213 * x67 + x1219 * x70
    x1224 = x1180 * x70 - x14 * x572 + x277 + x428 * x555
    x1225 = x1224 * x56
    x1226 = -x11 * x1225 + x1211 * x67 + x1222 * x70
    x1227 = x1214 + x1223 * x67 - x1226 * x71 + x70 * (x1218 + x1219 * x67 - x1222 * x71)
    x1228 = x1210 + x1227
    x1229 = x1175 * x70 - x14 * x567 + x264 + x428 * x561
    x1230 = x1229 * x56
    x1231 = x1162 * x70 - x14 * x562 + x262 + x428 * x563
    x1232 = x1 * (-x1230 + x1231)
    x1233 = -x11 * x1230 + x1226 * x76 + x1231 * x67
    x1234 = x1 * (x1211 - x1225)
    x1235 = x1 * (x1215 - x1221)
    x1236 = x1200 * x70 + x297 + x428 * x568 - x435 * x589
    x1237 = x1220 * x67 - x1236 * x71
    x1238 = x1202 * x70 + x302 + x428 * x571 - x435 * x593
    x1239 = x1224 * x67 + x1237 * x70 - x1238 * x71
    x1240 = x1199 * x70 + x307 + x428 * x566 - x435 * x597
    x1241 = (
        x1232
        + x1233 * x67
        - x71 * (x1229 * x67 + x1239 * x76 - x1240 * x71)
        + x76
        * (x1226 * x67 + x1234 - x1239 * x71 + x70 * (x1222 * x67 + x1235 - x1237 * x71))
    )
    x1242 = x1186 * x27 + x1228 * x26 + x1241
    x1243 = x1242 + x23 * x583
    x1244 = x1186 * x28 + x1196 * x28
    x1245 = x1244 + x23 * x600
    x1246 = x1224 * x76 - x14 * x620 + x344 + x428 * x603
    x1247 = x1246 * x56
    x1248 = x1211 * x76 - x14 * x604 + x342 + x428 * x605
    x1249 = x1 * (-x1247 + x1248)
    x1250 = x1220 * x76 - x14 * x614 + x334 + x428 * x607
    x1251 = x1250 * x56
    x1252 = x1215 * x76 - x14 * x608 + x332 + x428 * x609
    x1253 = x1 * (-x1251 + x1252)
    x1254 = -x11 * x1251 + x1252 * x67
    x1255 = x1236 * x76 + x356 + x428 * x613 - x435 * x628
    x1256 = x1250 * x67 - x1255 * x71
    x1257 = -x11 * x1247 + x1248 * x67 + x1254 * x70
    x1258 = x1238 * x76 + x361 + x428 * x619 - x435 * x632
    x1259 = (
        x1227 * x27
        + x1249
        + x1257 * x67
        + x70 * (x1253 + x1254 * x67 - x1256 * x71)
        - x71 * (x1246 * x67 + x1256 * x70 - x1258 * x71)
    )
    x1260 = x1228 * x27 + x1259
    x1261 = x1260 + x23 * x625
    x1262 = x1227 * x28
    x1263 = x1210 * x28 + x1262
    x1264 = x1263 + x23 * x636
    x1265 = x1195 * x29
    x1266 = x1265 + x23 * x641
    x1267 = x1217 * x56
    x1268 = x1191 * x70 - x14 * x644 + x374 + x428 * x645
    x1269 = x1 * (-x1267 + x1268)
    x1270 = -x11 * x1267 + x1268 * x67
    x1271 = -x1219 * x71 + x1269 + x1270 * x67
    x1272 = x1271 * x26
    x1273 = x1227 * x26 + x1241 + x26 * (x1227 + x1272)
    x1274 = x1273 + x23 * x652
    x1275 = x1271 * x27
    x1276 = x1252 * x56
    x1277 = x1217 * x76 - x14 * x658 + x388 + x428 * x659
    x1278 = x1 * (-x1276 + x1277)
    x1279 = -x11 * x1276 + x1277 * x67
    x1280 = -x1254 * x71 + x1278 + x1279 * x67
    x1281 = x1275 + x1280
    x1282 = x1259 + x1281 * x26
    x1283 = x1282 + x23 * x666
    x1284 = x1262 + x1272 * x28
    x1285 = x1284 + x23 * x672
    x1286 = x1250 * x78 - x14 * x682 + x405 + x428 * x675
    x1287 = x1286 * x56
    x1288 = x1252 * x78 - x14 * x676 + x416 + x428 * x677
    x1289 = x1 * (-x1287 + x1288)
    x1290 = -x11 * x1287 + x1288 * x67
    x1291 = x1255 * x78 + x421 + x428 * x681 - x435 * x689
    x1292 = (
        x1280 * x27
        + x1281 * x27
        + x1289
        + x1290 * x67
        - x71 * (x1286 * x67 - x1291 * x71)
    )
    x1293 = x1292 + x23 * x686
    x1294 = x1275 * x28 + x1280 * x28
    x1295 = x1294 + x23 * x691
    x1296 = x1271 * x29
    x1297 = x1296 + x23 * x694
    x1298 = x14 * x765
    x1299 = -x14 * x770 + x428 * x764
    x1300 = x1299 * x56
    x1301 = x1 * (-x1298 - x1300 + x428 * x767)
    x1302 = x14 * x701
    x1303 = x14 * x724
    x1304 = -x1303 + x428 * x700
    x1305 = x1304 * x56
    x1306 = x1 * (-x1302 - x1305 + x428 * x703)
    x1307 = -x1302 + x428 * x703
    x1308 = x428 * x706
    x1309 = x14 * x710
    x1310 = x1308 - x1309
    x1311 = x428 * x709
    x1312 = x14 * x728
    x1313 = x1311 - x1312
    x1314 = x1313 * x56
    x1315 = -x11 * x1314 + x1310 * x67
    x1316 = x14 * x718
    x1317 = -x1316 + x428 * x714
    x1318 = x428 * x717
    x1319 = x14 * x734
    x1320 = x1318 - x1319
    x1321 = x1320 * x56
    x1322 = -x11 * x1321 + x1315 * x70 + x1317 * x67
    x1323 = -x11 * x1305 + x1307 * x67 + x1322 * x76
    x1324 = -x14 * x773 + x428 * x723
    x1325 = x1324 * x56
    x1326 = x428 * x727
    x1327 = x14 * x777
    x1328 = x1326 - x1327
    x1329 = x1328 * x56
    x1330 = -x11 * x1329 + x1313 * x67
    x1331 = x428 * x733
    x1332 = x14 * x782
    x1333 = x1331 - x1332
    x1334 = x1333 * x56
    x1335 = -x11 * x1334 + x1320 * x67 + x1330 * x70
    x1336 = -x11 * x1325 + x1304 * x67 + x1335 * x76
    x1337 = x1 * (-x1316 - x1321 + x428 * x714)
    x1338 = x1 * (-x1309 - x1314 + x428 * x706)
    x1339 = (
        x1306
        + x1323 * x67
        - x1336 * x71
        + x76
        * (x1322 * x67 - x1335 * x71 + x1337 + x70 * (x1315 * x67 - x1330 * x71 + x1338))
    )
    x1340 = x14 * x747
    x1341 = x1317 * x56
    x1342 = x1 * (-x1340 - x1341 + x428 * x758)
    x1343 = x14 * x750
    x1344 = x1310 * x56
    x1345 = x1 * (-x1343 - x1344 + x428 * x752)
    x1346 = -x1343 + x428 * x752
    x1347 = -x11 * x1344 + x1346 * x67
    x1348 = -x1340 + x428 * x758
    x1349 = -x11 * x1341 + x1347 * x70 + x1348 * x67
    x1350 = (
        -x1322 * x71 + x1342 + x1349 * x67 + x70 * (-x1315 * x71 + x1345 + x1347 * x67)
    )
    x1351 = -x1298 + x428 * x767
    x1352 = -x11 * x1300 + x1336 * x78 + x1351 * x67
    x1353 = x1 * (-x1303 - x1325 + x428 * x700)
    x1354 = x428 * x772
    x1355 = x435 * x804
    x1356 = x1354 - x1355
    x1357 = x428 * x776
    x1358 = x435 * x807
    x1359 = x1357 - x1358
    x1360 = x1328 * x67 - x1359 * x71
    x1361 = x428 * x781
    x1362 = x435 * x811
    x1363 = x1361 - x1362
    x1364 = x1333 * x67 + x1360 * x70 - x1363 * x71
    x1365 = x1324 * x67 - x1356 * x71 + x1364 * x76
    x1366 = x1 * (-x1319 - x1334 + x428 * x717)
    x1367 = x1 * (-x1312 - x1329 + x428 * x709)
    x1368 = x428 * x769 - x435 * x821
    x1369 = (
        x1301
        + x1339 * x26
        + x1352 * x67
        + x26 * (x1339 + x1350 * x26)
        - x71 * (x1299 * x67 + x1365 * x78 - x1368 * x71)
        + x78
        * (
            x1336 * x67
            + x1353
            - x1365 * x71
            + x76
            * (
                x1335 * x67
                - x1364 * x71
                + x1366
                + x70 * (x1330 * x67 - x1360 * x71 + x1367)
            )
        )
    )
    x1370 = x1369 + x24 * x517
    x1371 = x1320 * x70 - x14 * x850 + x428 * x825
    x1372 = x1371 * x56
    x1373 = x1317 * x70 - x14 * x826 + x428 * x845
    x1374 = x1 * (-x1372 + x1373)
    x1375 = x428 * x830
    x1376 = x14 * x840
    x1377 = x1313 * x70 + x1375 - x1376
    x1378 = x1377 * x56
    x1379 = x1310 * x70 - x14 * x831 + x428 * x833
    x1380 = x1 * (-x1378 + x1379)
    x1381 = -x11 * x1378 + x1379 * x67
    x1382 = x428 * x839
    x1383 = x14 * x867
    x1384 = x1328 * x70 + x1382 - x1383
    x1385 = x1384 * x56
    x1386 = -x11 * x1385 + x1377 * x67
    x1387 = -x11 * x1372 + x1373 * x67 + x1381 * x70
    x1388 = x1333 * x70 - x14 * x871 + x428 * x849
    x1389 = x1388 * x56
    x1390 = -x11 * x1389 + x1371 * x67 + x1386 * x70
    x1391 = x1374 + x1387 * x67 - x1390 * x71 + x70 * (x1380 + x1381 * x67 - x1386 * x71)
    x1392 = x1350 * x27 + x1391
    x1393 = x1324 * x70 - x14 * x863 + x428 * x857
    x1394 = x1393 * x56
    x1395 = x1304 * x70 - x14 * x858 + x428 * x860
    x1396 = x1 * (-x1394 + x1395)
    x1397 = -x11 * x1394 + x1390 * x76 + x1395 * x67
    x1398 = x1 * (x1371 - x1389)
    x1399 = x1 * (x1377 - x1385)
    x1400 = x428 * x866
    x1401 = x435 * x889
    x1402 = x1359 * x70 + x1400 - x1401
    x1403 = x1384 * x67 - x1402 * x71
    x1404 = x428 * x870
    x1405 = x435 * x895
    x1406 = x1363 * x70 + x1404 - x1405
    x1407 = x1388 * x67 + x1403 * x70 - x1406 * x71
    x1408 = x1356 * x70 + x428 * x862 - x435 * x900
    x1409 = (
        x1396
        + x1397 * x67
        - x71 * (x1393 * x67 + x1407 * x76 - x1408 * x71)
        + x76
        * (x1390 * x67 + x1398 - x1407 * x71 + x70 * (x1386 * x67 + x1399 - x1403 * x71))
    )
    x1410 = x1339 * x27 + x1392 * x26 + x1409
    x1411 = x1410 + x24 * x583
    x1412 = x435 * x903
    x1413 = x435 * x915
    x1414 = -x1413 + x428 * x903
    x1415 = x1414 * x56
    x1416 = x1 * (-x1412 - x1415 + x428 * x70 * x714)
    x1417 = x70 * x714
    x1418 = -x1412 + x1417 * x428
    x1419 = x435 * x905
    x1420 = x1120 * x428 - x1419
    x1421 = x435 * x909
    x1422 = -x1421 + x428 * x905
    x1423 = x1422 * x56
    x1424 = -x11 * x1423 + x1420 * x67
    x1425 = -x11 * x1415 + x1418 * x67 + x1424 * x70
    x1426 = x1 * (-x1419 - x1423 + x428 * x70 * x706)
    x1427 = -x14 * x938 + x428 * x909
    x1428 = x1427 * x56
    x1429 = -x11 * x1428 + x1422 * x67
    x1430 = -x14 * x942 + x428 * x915
    x1431 = x1430 * x56
    x1432 = -x11 * x1431 + x1414 * x67 + x1429 * x70
    x1433 = x1416 + x1425 * x67 - x1432 * x71 + x70 * (x1424 * x67 + x1426 - x1429 * x71)
    x1434 = x1350 * x28 + x1433
    x1435 = x435 * x920
    x1436 = -x14 * x946 + x428 * x920
    x1437 = x1436 * x56
    x1438 = x1 * (-x1435 - x1437 + x428 * x70 * x700)
    x1439 = x70 * x700
    x1440 = -x1435 + x1439 * x428
    x1441 = -x11 * x1437 + x1432 * x76 + x1440 * x67
    x1442 = x1 * (-x1413 - x1431 + x428 * x70 * x717)
    x1443 = x1 * (-x1421 - x1428 + x428 * x70 * x709)
    x1444 = x1357 * x70 - x1358 * x70
    x1445 = x1427 * x67 - x1444 * x71
    x1446 = x1361 * x70 - x1362 * x70
    x1447 = x1430 * x67 + x1445 * x70 - x1446 * x71
    x1448 = x1354 * x70 - x1355 * x70
    x1449 = (
        x1438
        + x1441 * x67
        - x71 * (x1436 * x67 + x1447 * x76 - x1448 * x71)
        + x76
        * (x1432 * x67 + x1442 - x1447 * x71 + x70 * (x1429 * x67 + x1443 - x1445 * x71))
    )
    x1450 = x1339 * x28 + x1434 * x26 + x1449
    x1451 = x1450 + x24 * x600
    x1452 = x1388 * x76 - x14 * x974 + x428 * x952
    x1453 = x1452 * x56
    x1454 = x1371 * x76 - x14 * x953 + x428 * x971
    x1455 = x1 * (-x1453 + x1454)
    x1456 = x1384 * x76 - x14 * x966 + x428 * x957
    x1457 = x1456 * x56
    x1458 = x1377 * x76 - x14 * x958 + x428 * x960
    x1459 = x1 * (-x1457 + x1458)
    x1460 = -x11 * x1457 + x1458 * x67
    x1461 = x428 * x965
    x1462 = x435 * x983
    x1463 = x1402 * x76 + x1461 - x1462
    x1464 = x1456 * x67 - x1463 * x71
    x1465 = -x11 * x1453 + x1454 * x67 + x1460 * x70
    x1466 = x1406 * x76 + x428 * x973 - x435 * x988
    x1467 = (
        x1391 * x27
        + x1455
        + x1465 * x67
        + x70 * (x1459 + x1460 * x67 - x1464 * x71)
        - x71 * (x1452 * x67 + x1464 * x70 - x1466 * x71)
    )
    x1468 = x1392 * x27 + x1467
    x1469 = x1468 + x24 * x625
    x1470 = -x1011 * x14 + x1430 * x70 + x428 * x991
    x1471 = x1470 * x56
    x1472 = x70 * x825
    x1473 = x1414 * x70 + x1472 * x428 - x435 * x991
    x1474 = x1 * (-x1471 + x1473)
    x1475 = -x1007 * x14 + x1427 * x70 + x428 * x993
    x1476 = x1475 * x56
    x1477 = x1065 * x428 + x1422 * x70 - x435 * x993
    x1478 = x1 * (-x1476 + x1477)
    x1479 = -x11 * x1476 + x1477 * x67
    x1480 = x1400 * x70 - x1401 * x70 + x1444 * x70
    x1481 = x1475 * x67 - x1480 * x71
    x1482 = -x11 * x1471 + x1473 * x67 + x1479 * x70
    x1483 = x1404 * x70 - x1405 * x70 + x1446 * x70
    x1484 = (
        x1474
        + x1482 * x67
        + x70 * (x1478 + x1479 * x67 - x1481 * x71)
        - x71 * (x1470 * x67 + x1481 * x70 - x1483 * x71)
    )
    x1485 = x1391 * x28 + x1484
    x1486 = x1434 * x27 + x1485
    x1487 = x1486 + x24 * x636
    x1488 = x1018 * x1319
    x1489 = x1018 * x1331 - x1018 * x1332
    x1490 = x1489 * x56
    x1491 = x1 * (2 * x1017 * x428 * x717 - x1488 - x1490)
    x1492 = x1018 * x1312
    x1493 = x1018 * x1326 - x1018 * x1327
    x1494 = x1493 * x56
    x1495 = x1 * (2 * x1017 * x428 * x709 - x1492 - x1494)
    x1496 = x1018 * x1311 - x1492
    x1497 = -x11 * x1494 + x1496 * x67
    x1498 = x1018 * x1357 - x1018 * x1358
    x1499 = x1493 * x67 - x1498 * x71
    x1500 = x1018 * x1318 - x1488
    x1501 = -x11 * x1490 + x1497 * x70 + x1500 * x67
    x1502 = x1018 * x1361 - x1018 * x1362
    x1503 = (
        x1433 * x28
        + x1491
        + x1501 * x67
        + x70 * (x1495 + x1497 * x67 - x1499 * x71)
        - x71 * (x1489 * x67 + x1499 * x70 - x1502 * x71)
    )
    x1504 = x1434 * x28 + x1503
    x1505 = x1504 + x24 * x641
    x1506 = x1379 * x56
    x1507 = -x1040 * x14 + x1042 * x428 + x1346 * x70
    x1508 = x1 * (-x1506 + x1507)
    x1509 = -x11 * x1506 + x1507 * x67
    x1510 = -x1381 * x71 + x1508 + x1509 * x67
    x1511 = x1391 * x26 + x1409 + x26 * (x1391 + x1510 * x26)
    x1512 = x1511 + x24 * x652
    x1513 = x1458 * x56
    x1514 = -x1052 * x14 + x1054 * x428 + x1379 * x76
    x1515 = x1 * (-x1513 + x1514)
    x1516 = -x11 * x1513 + x1514 * x67
    x1517 = -x1460 * x71 + x1515 + x1516 * x67
    x1518 = x1510 * x27 + x1517
    x1519 = x1467 + x1518 * x26
    x1520 = x1519 + x24 * x666
    x1521 = x1477 * x56
    x1522 = x70 * x833
    x1523 = -x1065 * x435 + x1420 * x70 + x1522 * x428
    x1524 = x1 * (-x1521 + x1523)
    x1525 = -x11 * x1521 + x1523 * x67
    x1526 = -x1479 * x71 + x1524 + x1525 * x67
    x1527 = x1510 * x28 + x1526
    x1528 = x1485 + x1527 * x26
    x1529 = x1528 + x24 * x672
    x1530 = x1079 * x428 - x1086 * x14 + x1456 * x78
    x1531 = x1530 * x56
    x1532 = -x1080 * x14 + x1082 * x428 + x1458 * x78
    x1533 = x1 * (-x1531 + x1532)
    x1534 = -x11 * x1531 + x1532 * x67
    x1535 = x1085 * x428 - x1093 * x435 + x1463 * x78
    x1536 = (
        x1517 * x27
        + x1518 * x27
        + x1533
        + x1534 * x67
        - x71 * (x1530 * x67 - x1535 * x71)
    )
    x1537 = x1536 + x24 * x686
    x1538 = x1095 * x428 - x1104 * x14 + x1475 * x76
    x1539 = x1538 * x56
    x1540 = x70 * x960
    x1541 = -x1095 * x435 + x1477 * x76 + x1540 * x428
    x1542 = x1 * (-x1539 + x1541)
    x1543 = -x11 * x1539 + x1541 * x67
    x1544 = x1461 * x70 - x1462 * x70 + x1480 * x76
    x1545 = x1542 + x1543 * x67 - x71 * (x1538 * x67 - x1544 * x71)
    x1546 = x1517 * x28 + x1527 * x27 + x1545
    x1547 = x1546 + x24 * x691
    x1548 = x1018 * x1382 - x1018 * x1383 + x1493 * x70
    x1549 = x1548 * x56
    x1550 = x1018 * x1375 - x1018 * x1376 + x1496 * x70
    x1551 = x1 * (-x1549 + x1550)
    x1552 = -x11 * x1549 + x1550 * x67
    x1553 = x1018 * x1400 - x1018 * x1401 + x1498 * x70
    x1554 = x1526 * x28 + x1551 + x1552 * x67 - x71 * (x1548 * x67 - x1553 * x71)
    x1555 = x1527 * x28 + x1554
    x1556 = x1555 + x24 * x694
    x1557 = x1120 * x435
    x1558 = x1420 * x56
    x1559 = x1 * (-x1557 - x1558 + x428 * x70 * x752)
    x1560 = x70 * x752
    x1561 = -x1557 + x1560 * x428
    x1562 = -x11 * x1558 + x1561 * x67
    x1563 = -x1424 * x71 + x1559 + x1562 * x67
    x1564 = x1433 * x26 + x1449 + x26 * (x1433 + x1563 * x26)
    x1565 = x1126 * x23 + x1564
    x1566 = x1526 + x1563 * x27
    x1567 = x1433 * x27 + x1484 + x1566 * x26
    x1568 = x1130 * x23 + x1567
    x1569 = x1018 * x1309
    x1570 = x1496 * x56
    x1571 = x1 * (2 * x1017 * x428 * x706 - x1569 - x1570)
    x1572 = x1018 * x1308 - x1569
    x1573 = -x11 * x1570 + x1572 * x67
    x1574 = -x1497 * x71 + x1571 + x1573 * x67
    x1575 = x1563 * x28 + x1574
    x1576 = x1503 + x1575 * x26
    x1577 = x1139 * x23 + x1576
    x1578 = x1526 * x27 + x1545 + x1566 * x27
    x1579 = x1143 * x23 + x1578
    x1580 = x1554 + x1575 * x27
    x1581 = x1145 * x23 + x1580
    x1582 = x1148 * x1312
    x1583 = x1148 * x1326 - x1148 * x1327
    x1584 = x1583 * x56
    x1585 = x1 * (6 * x1147 * x428 * x709 - x1582 - x1584)
    x1586 = x1148 * x1311 - x1582
    x1587 = -x11 * x1584 + x1586 * x67
    x1588 = x1148 * x1357 - x1148 * x1358
    x1589 = (
        x1574 * x28
        + x1575 * x28
        + x1585
        + x1587 * x67
        - x71 * (x1583 * x67 - x1588 * x71)
    )
    x1590 = x1156 * x23 + x1589
    x1591 = -x16 * x770 + x66 + x697 * x764
    x1592 = x1591 * x56
    x1593 = x114 - x16 * x765 + x697 * x767
    x1594 = x1 * (-x1592 + x1593)
    x1595 = x123 - x16 * x724 + x697 * x700
    x1596 = x1595 * x56
    x1597 = -x16 * x701 + x163 + x697 * x703
    x1598 = x1 * (-x1596 + x1597)
    x1599 = x697 * x706
    x1600 = x16 * x710
    x1601 = x1599 - x1600 + x171
    x1602 = x697 * x709
    x1603 = x16 * x728
    x1604 = x126 + x1602 - x1603
    x1605 = x1604 * x56
    x1606 = -x11 * x1605 + x1601 * x67
    x1607 = -x16 * x718 + x170 + x697 * x714
    x1608 = x697 * x717
    x1609 = x16 * x734
    x1610 = x125 + x1608 - x1609
    x1611 = x1610 * x56
    x1612 = -x11 * x1611 + x1606 * x70 + x1607 * x67
    x1613 = -x11 * x1596 + x1597 * x67 + x1612 * x76
    x1614 = -x16 * x773 + x697 * x723 + x95
    x1615 = x1614 * x56
    x1616 = x697 * x727
    x1617 = x16 * x777
    x1618 = x1616 - x1617 + x98
    x1619 = x1618 * x56
    x1620 = -x11 * x1619 + x1604 * x67
    x1621 = x697 * x733
    x1622 = x16 * x782
    x1623 = x1621 - x1622 + x97
    x1624 = x1623 * x56
    x1625 = -x11 * x1624 + x1610 * x67 + x1620 * x70
    x1626 = -x11 * x1615 + x1595 * x67 + x1625 * x76
    x1627 = x1 * (x1607 - x1611)
    x1628 = x1 * (x1601 - x1605)
    x1629 = (
        x1598
        + x1613 * x67
        - x1626 * x71
        + x76
        * (x1612 * x67 - x1625 * x71 + x1627 + x70 * (x1606 * x67 - x1620 * x71 + x1628))
    )
    x1630 = x1607 * x56
    x1631 = -x16 * x747 + x192 + x697 * x758
    x1632 = x1 * (-x1630 + x1631)
    x1633 = x1601 * x56
    x1634 = -x16 * x750 + x184 + x697 * x752
    x1635 = x1 * (-x1633 + x1634)
    x1636 = -x11 * x1633 + x1634 * x67
    x1637 = -x11 * x1630 + x1631 * x67 + x1636 * x70
    x1638 = (
        -x1612 * x71 + x1632 + x1637 * x67 + x70 * (-x1606 * x71 + x1635 + x1636 * x67)
    )
    x1639 = -x11 * x1592 + x1593 * x67 + x1626 * x78
    x1640 = x1 * (x1595 - x1615)
    x1641 = x697 * x772
    x1642 = x704 * x804
    x1643 = x152 + x1641 - x1642
    x1644 = x697 * x776
    x1645 = x704 * x807
    x1646 = x154 + x1644 - x1645
    x1647 = x1618 * x67 - x1646 * x71
    x1648 = x697 * x781
    x1649 = x704 * x811
    x1650 = x153 + x1648 - x1649
    x1651 = x1623 * x67 + x1647 * x70 - x1650 * x71
    x1652 = x1614 * x67 - x1643 * x71 + x1651 * x76
    x1653 = x1 * (x1610 - x1624)
    x1654 = x1 * (x1604 - x1619)
    x1655 = x142 + x697 * x769 - x704 * x821
    x1656 = (
        x1594
        + x1629 * x26
        + x1639 * x67
        + x26 * (x1629 + x1638 * x26)
        - x71 * (x1591 * x67 + x1652 * x78 - x1655 * x71)
        + x78
        * (
            x1626 * x67
            + x1640
            - x1652 * x71
            + x76
            * (
                x1625 * x67
                - x1651 * x71
                + x1653
                + x70 * (x1620 * x67 - x1647 * x71 + x1654)
            )
        )
    )
    x1657 = x1656 + x24 * x798
    x1658 = -x16 * x850 + x241 + x697 * x825
    x1659 = x1658 * x56
    x1660 = -x16 * x826 + x239 + x697 * x845
    x1661 = x1 * (-x1659 + x1660)
    x1662 = x697 * x830
    x1663 = x16 * x840
    x1664 = x1662 - x1663 + x230
    x1665 = x1664 * x56
    x1666 = -x16 * x831 + x228 + x697 * x833
    x1667 = x1 * (-x1665 + x1666)
    x1668 = -x11 * x1665 + x1666 * x67
    x1669 = x697 * x839
    x1670 = x16 * x867
    x1671 = x1669 - x1670 + x278
    x1672 = x1671 * x56
    x1673 = -x11 * x1672 + x1664 * x67
    x1674 = -x11 * x1659 + x1660 * x67 + x1668 * x70
    x1675 = -x16 * x871 + x277 + x697 * x849
    x1676 = x1675 * x56
    x1677 = -x11 * x1676 + x1658 * x67 + x1673 * x70
    x1678 = x1661 + x1674 * x67 - x1677 * x71 + x70 * (x1667 + x1668 * x67 - x1673 * x71)
    x1679 = x1638 * x27 + x1678
    x1680 = -x16 * x863 + x264 + x697 * x857
    x1681 = x1680 * x56
    x1682 = -x16 * x858 + x262 + x697 * x860
    x1683 = x1 * (-x1681 + x1682)
    x1684 = -x11 * x1681 + x1677 * x76 + x1682 * x67
    x1685 = x1 * (x1658 - x1676)
    x1686 = x1 * (x1664 - x1672)
    x1687 = x697 * x866
    x1688 = x704 * x889
    x1689 = x1687 - x1688 + x297
    x1690 = x1671 * x67 - x1689 * x71
    x1691 = x697 * x870
    x1692 = x704 * x895
    x1693 = x1691 - x1692 + x302
    x1694 = x1675 * x67 + x1690 * x70 - x1693 * x71
    x1695 = x307 + x697 * x862 - x704 * x900
    x1696 = (
        x1683
        + x1684 * x67
        - x71 * (x1680 * x67 + x1694 * x76 - x1695 * x71)
        + x76
        * (x1677 * x67 + x1685 - x1694 * x71 + x70 * (x1673 * x67 + x1686 - x1690 * x71))
    )
    x1697 = x1629 * x27 + x1679 * x26 + x1696
    x1698 = x1697 + x24 * x883
    x1699 = x1610 * x70 + x697 * x903 - x704 * x915
    x1700 = x1699 * x56
    x1701 = x1417 * x697 + x1607 * x70 - x704 * x903
    x1702 = x1 * (-x1700 + x1701)
    x1703 = x1604 * x70 + x697 * x905 - x704 * x909
    x1704 = x1703 * x56
    x1705 = x1120 * x697 + x1601 * x70 - x704 * x905
    x1706 = x1 * (-x1704 + x1705)
    x1707 = -x11 * x1704 + x1705 * x67
    x1708 = -x16 * x938 + x1618 * x70 + x697 * x909
    x1709 = x1708 * x56
    x1710 = -x11 * x1709 + x1703 * x67
    x1711 = -x11 * x1700 + x1701 * x67 + x1707 * x70
    x1712 = -x16 * x942 + x1623 * x70 + x697 * x915
    x1713 = x1712 * x56
    x1714 = -x11 * x1713 + x1699 * x67 + x1710 * x70
    x1715 = x1702 + x1711 * x67 - x1714 * x71 + x70 * (x1706 + x1707 * x67 - x1710 * x71)
    x1716 = x1638 * x28 + x1715
    x1717 = -x16 * x946 + x1614 * x70 + x697 * x920
    x1718 = x1717 * x56
    x1719 = x1439 * x697 + x1595 * x70 - x704 * x920
    x1720 = x1 * (-x1718 + x1719)
    x1721 = -x11 * x1718 + x1714 * x76 + x1719 * x67
    x1722 = x1 * (x1699 - x1713)
    x1723 = x1 * (x1703 - x1709)
    x1724 = x1644 * x70 - x1645 * x70 + x1646 * x70
    x1725 = x1708 * x67 - x1724 * x71
    x1726 = x1648 * x70 - x1649 * x70 + x1650 * x70
    x1727 = x1712 * x67 + x1725 * x70 - x1726 * x71
    x1728 = x1641 * x70 - x1642 * x70 + x1643 * x70
    x1729 = (
        x1720
        + x1721 * x67
        - x71 * (x1717 * x67 + x1727 * x76 - x1728 * x71)
        + x76
        * (x1714 * x67 + x1722 - x1727 * x71 + x70 * (x1710 * x67 + x1723 - x1725 * x71))
    )
    x1730 = x1629 * x28 + x1716 * x26 + x1729
    x1731 = x1730 + x24 * x934
    x1732 = -x16 * x974 + x344 + x697 * x952
    x1733 = x1732 * x56
    x1734 = -x16 * x953 + x342 + x697 * x971
    x1735 = x1 * (-x1733 + x1734)
    x1736 = -x16 * x966 + x334 + x697 * x957
    x1737 = x1736 * x56
    x1738 = -x16 * x958 + x332 + x697 * x960
    x1739 = x1 * (-x1737 + x1738)
    x1740 = -x11 * x1737 + x1738 * x67
    x1741 = x697 * x965
    x1742 = x704 * x983
    x1743 = x1741 - x1742 + x356
    x1744 = x1736 * x67 - x1743 * x71
    x1745 = -x11 * x1733 + x1734 * x67 + x1740 * x70
    x1746 = x361 + x697 * x973 - x704 * x988
    x1747 = (
        x1678 * x27
        + x1735
        + x1745 * x67
        + x70 * (x1739 + x1740 * x67 - x1744 * x71)
        - x71 * (x1732 * x67 + x1744 * x70 - x1746 * x71)
    )
    x1748 = x1679 * x27 + x1747
    x1749 = x1748 + x24 * x979
    x1750 = -x1011 * x16 + x1675 * x70 + x697 * x991
    x1751 = x1750 * x56
    x1752 = x1472 * x697 + x1658 * x70 - x704 * x991
    x1753 = x1 * (-x1751 + x1752)
    x1754 = -x1007 * x16 + x1671 * x70 + x697 * x993
    x1755 = x1754 * x56
    x1756 = x1065 * x697 + x1664 * x70 - x704 * x993
    x1757 = x1 * (-x1755 + x1756)
    x1758 = -x11 * x1755 + x1756 * x67
    x1759 = x1687 * x70 - x1688 * x70 + x1689 * x70
    x1760 = x1754 * x67 - x1759 * x71
    x1761 = -x11 * x1751 + x1752 * x67 + x1758 * x70
    x1762 = x1691 * x70 - x1692 * x70 + x1693 * x70
    x1763 = (
        x1753
        + x1761 * x67
        + x70 * (x1757 + x1758 * x67 - x1760 * x71)
        - x71 * (x1750 * x67 + x1760 * x70 - x1762 * x71)
    )
    x1764 = x1678 * x28 + x1763
    x1765 = x1716 * x27 + x1764
    x1766 = x1005 * x24 + x1765
    x1767 = x1018 * x1621 - x1018 * x1622 + x1712 * x76
    x1768 = x1767 * x56
    x1769 = x1018 * x1608 - x1018 * x1609 + x1699 * x76
    x1770 = x1 * (-x1768 + x1769)
    x1771 = x1018 * x1616 - x1018 * x1617 + x1708 * x76
    x1772 = x1771 * x56
    x1773 = x1018 * x1602 - x1018 * x1603 + x1703 * x76
    x1774 = x1 * (-x1772 + x1773)
    x1775 = -x11 * x1772 + x1773 * x67
    x1776 = x1018 * x1644 - x1018 * x1645 + x1724 * x76
    x1777 = x1771 * x67 - x1776 * x71
    x1778 = -x11 * x1768 + x1769 * x67 + x1775 * x70
    x1779 = x1018 * x1648 - x1018 * x1649 + x1726 * x76
    x1780 = (
        x1715 * x28
        + x1770
        + x1778 * x67
        + x70 * (x1774 + x1775 * x67 - x1777 * x71)
        - x71 * (x1767 * x67 + x1777 * x70 - x1779 * x71)
    )
    x1781 = x1716 * x28 + x1780
    x1782 = x1031 * x24 + x1781
    x1783 = x1666 * x56
    x1784 = -x1040 * x16 + x1042 * x697 + x374
    x1785 = x1 * (-x1783 + x1784)
    x1786 = -x11 * x1783 + x1784 * x67
    x1787 = -x1668 * x71 + x1785 + x1786 * x67
    x1788 = x1678 * x26 + x1696 + x26 * (x1678 + x1787 * x26)
    x1789 = x1047 * x24 + x1788
    x1790 = x1738 * x56
    x1791 = -x1052 * x16 + x1054 * x697 + x388
    x1792 = x1 * (-x1790 + x1791)
    x1793 = -x11 * x1790 + x1791 * x67
    x1794 = -x1740 * x71 + x1792 + x1793 * x67
    x1795 = x1787 * x27 + x1794
    x1796 = x1747 + x1795 * x26
    x1797 = x1060 * x24 + x1796
    x1798 = x1756 * x56
    x1799 = -x1065 * x704 + x1522 * x697 + x1666 * x70
    x1800 = x1 * (-x1798 + x1799)
    x1801 = -x11 * x1798 + x1799 * x67
    x1802 = -x1758 * x71 + x1800 + x1801 * x67
    x1803 = x1787 * x28 + x1802
    x1804 = x1764 + x1803 * x26
    x1805 = x1072 * x24 + x1804
    x1806 = x1079 * x697 - x1086 * x16 + x405
    x1807 = x1806 * x56
    x1808 = -x1080 * x16 + x1082 * x697 + x416
    x1809 = x1 * (-x1807 + x1808)
    x1810 = -x11 * x1807 + x1808 * x67
    x1811 = x1085 * x697 - x1093 * x704 + x421
    x1812 = (
        x1794 * x27
        + x1795 * x27
        + x1809
        + x1810 * x67
        - x71 * (x1806 * x67 - x1811 * x71)
    )
    x1813 = x1090 * x24 + x1812
    x1814 = x1095 * x697 - x1104 * x16 + x1736 * x70
    x1815 = x1814 * x56
    x1816 = -x1095 * x704 + x1540 * x697 + x1738 * x70
    x1817 = x1 * (-x1815 + x1816)
    x1818 = -x11 * x1815 + x1816 * x67
    x1819 = x1741 * x70 - x1742 * x70 + x1743 * x70
    x1820 = x1817 + x1818 * x67 - x71 * (x1814 * x67 - x1819 * x71)
    x1821 = x1794 * x28 + x1803 * x27 + x1820
    x1822 = x1102 * x24 + x1821
    x1823 = x1018 * x1669 - x1018 * x1670 + x1754 * x76
    x1824 = x1823 * x56
    x1825 = x1018 * x1662 - x1018 * x1663 + x1756 * x76
    x1826 = x1 * (-x1824 + x1825)
    x1827 = -x11 * x1824 + x1825 * x67
    x1828 = x1018 * x1687 - x1018 * x1688 + x1759 * x76
    x1829 = x1802 * x28 + x1826 + x1827 * x67 - x71 * (x1823 * x67 - x1828 * x71)
    x1830 = x1803 * x28 + x1829
    x1831 = x1115 * x24 + x1830
    x1832 = x1126 * x24
    x1833 = x1705 * x56
    x1834 = -x1120 * x704 + x1560 * x697 + x1634 * x70
    x1835 = x1 * (-x1833 + x1834)
    x1836 = -x11 * x1833 + x1834 * x67
    x1837 = -x1707 * x71 + x1835 + x1836 * x67
    x1838 = x1715 * x26 + x1729 + x26 * (x1715 + x1837 * x26)
    x1839 = x1130 * x24
    x1840 = x1802 + x1837 * x27
    x1841 = x1715 * x27 + x1763 + x1840 * x26
    x1842 = x1139 * x24
    x1843 = x1773 * x56
    x1844 = x1018 * x1599 - x1018 * x1600 + x1705 * x76
    x1845 = x1 * (-x1843 + x1844)
    x1846 = -x11 * x1843 + x1844 * x67
    x1847 = -x1775 * x71 + x1845 + x1846 * x67
    x1848 = x1837 * x28 + x1847
    x1849 = x1780 + x1848 * x26
    x1850 = x1143 * x24
    x1851 = x1802 * x27 + x1820 + x1840 * x27
    x1852 = x1145 * x24
    x1853 = x1829 + x1848 * x27
    x1854 = x1156 * x24
    x1855 = x1148 * x1616 - x1148 * x1617 + x1771 * x78
    x1856 = x1855 * x56
    x1857 = x1148 * x1602 - x1148 * x1603 + x1773 * x78
    x1858 = x1 * (-x1856 + x1857)
    x1859 = -x11 * x1856 + x1857 * x67
    x1860 = x1148 * x1644 - x1148 * x1645 + x1776 * x78
    x1861 = (
        x1847 * x28
        + x1848 * x28
        + x1858
        + x1859 * x67
        - x71 * (x1855 * x67 - x1860 * x71)
    )
    x1862 = x26 * x483
    x1863 = x26 * x449 + x26 * (x1862 + x449) + x493
    x1864 = x27 * x483
    x1865 = x1864 + x554
    x1866 = x1865 * x26 + x27 * x449 + x565
    x1867 = x1862 * x28 + x28 * x449
    x1868 = x27 * x554 + x618
    x1869 = x1865 * x27 + x1868
    x1870 = x28 * x554
    x1871 = x1864 * x28 + x1870
    x1872 = x26 * x648
    x1873 = x26 * x554 + x26 * (x1872 + x554) + x565
    x1874 = x27 * x648
    x1875 = x1874 + x662
    x1876 = x1868 + x1875 * x26
    x1877 = x1870 + x1872 * x28
    x1878 = x1875 * x27 + x27 * x662 + x680
    x1879 = x1874 * x28 + x28 * x662
    x1880 = x1194 * x26
    x1881 = x1174 * x26 + x1197 + x26 * (x1174 + x1880)
    x1882 = x1863 * x23 + x1881
    x1883 = x1194 * x27
    x1884 = x1223 + x1883
    x1885 = x1174 * x27 + x1233 + x1884 * x26
    x1886 = x1866 * x23 + x1885
    x1887 = x1174 * x28 + x1880 * x28
    x1888 = x1867 * x23 + x1887
    x1889 = x1223 * x27 + x1257
    x1890 = x1884 * x27 + x1889
    x1891 = x1869 * x23 + x1890
    x1892 = x1223 * x28
    x1893 = x1883 * x28 + x1892
    x1894 = x1871 * x23 + x1893
    x1895 = x1194 * x29
    x1896 = x1895 + x483 * x640
    x1897 = x1270 * x26
    x1898 = x1223 * x26 + x1233 + x26 * (x1223 + x1897)
    x1899 = x1873 * x23 + x1898
    x1900 = x1270 * x27
    x1901 = x1279 + x1900
    x1902 = x1889 + x1901 * x26
    x1903 = x1876 * x23 + x1902
    x1904 = x1892 + x1897 * x28
    x1905 = x1877 * x23 + x1904
    x1906 = x1279 * x27 + x1290 + x1901 * x27
    x1907 = x1878 * x23 + x1906
    x1908 = x1279 * x28 + x1900 * x28
    x1909 = x1879 * x23 + x1908
    x1910 = x1270 * x29
    x1911 = x1910 + x640 * x648
    x1912 = x1323 * x26 + x1352 + x26 * (x1323 + x1349 * x26)
    x1913 = x1863 * x24 + x1912
    x1914 = x1349 * x27 + x1387
    x1915 = x1323 * x27 + x1397 + x1914 * x26
    x1916 = x1866 * x24 + x1915
    x1917 = x1349 * x28 + x1425
    x1918 = x1323 * x28 + x1441 + x1917 * x26
    x1919 = x1867 * x24 + x1918
    x1920 = x1387 * x27 + x1465
    x1921 = x1914 * x27 + x1920
    x1922 = x1869 * x24 + x1921
    x1923 = x1387 * x28 + x1482
    x1924 = x1917 * x27 + x1923
    x1925 = x1871 * x24 + x1924
    x1926 = x1425 * x28 + x1501
    x1927 = x1917 * x28 + x1926
    x1928 = x1016 * x483 + x1927
    x1929 = x1387 * x26 + x1397 + x26 * (x1387 + x1509 * x26)
    x1930 = x1873 * x24 + x1929
    x1931 = x1509 * x27 + x1516
    x1932 = x1920 + x1931 * x26
    x1933 = x1876 * x24 + x1932
    x1934 = x1509 * x28 + x1525
    x1935 = x1923 + x1934 * x26
    x1936 = x1877 * x24 + x1935
    x1937 = x1516 * x27 + x1534 + x1931 * x27
    x1938 = x1878 * x24 + x1937
    x1939 = x1516 * x28 + x1543 + x1934 * x27
    x1940 = x1879 * x24 + x1939
    x1941 = x1525 * x28 + x1552
    x1942 = x1934 * x28 + x1941
    x1943 = x1016 * x648 + x1942
    x1944 = x1425 * x26 + x1441 + x26 * (x1425 + x1562 * x26)
    x1945 = x1564 + x1944 * x22
    x1946 = x1525 + x1562 * x27
    x1947 = x1425 * x27 + x1482 + x1946 * x26
    x1948 = x1567 + x1947 * x22
    x1949 = x1562 * x28 + x1573
    x1950 = x1926 + x1949 * x26
    x1951 = x1576 + x1950 * x22
    x1952 = x1525 * x27 + x1543 + x1946 * x27
    x1953 = x1578 + x1952 * x22
    x1954 = x1941 + x1949 * x27
    x1955 = x1580 + x1954 * x22
    x1956 = x1573 * x28 + x1587 + x1949 * x28
    x1957 = x1589 + x1956 * x22
    x1958 = -x1163 * x14 + x1164 * x428 + 2 * x433
    x1959 = x1162 * x428 - x1176 * x14 + 2 * x507
    x1960 = x1166 * x428 - x1168 * x14 + 2 * x465
    x1961 = x1167 * x428 - x1178 * x14 + 2 * x510
    x1962 = x1170 * x428 - x1172 * x14 + 2 * x464
    x1963 = x1171 * x428 - x1181 * x14 + 2 * x509
    x1964 = (
        x1958 * x67
        - x1959 * x71
        + x76 * (x1962 * x67 - x1963 * x71 + x70 * (x1960 * x67 - x1961 * x71))
    )
    x1965 = -x1190 * x14 + x1191 * x428 + 2 * x476
    x1966 = -x1187 * x14 + x1188 * x428 + 2 * x473
    x1967 = -x1962 * x71 + x1966 * x67 + x70 * (-x1960 * x71 + x1965 * x67)
    x1968 = x1967 * x26
    x1969 = -x1159 * x14 + x1160 * x428 + 2 * x491
    x1970 = x1175 * x428 - x1199 * x435 + 2 * x522
    x1971 = x1177 * x428 - x1200 * x435 + 2 * x530
    x1972 = x1180 * x428 - x1202 * x435 + 2 * x529
    x1973 = x1158 * x428 - x1207 * x435 + 2 * x534
    x1974 = (
        x1881 * x23
        + x1964 * x26
        + x1969 * x67
        - x1973 * x71
        + x26 * (x1964 + x1968)
        + x78
        * (
            x1959 * x67
            - x1970 * x71
            + x76 * (x1963 * x67 - x1972 * x71 + x70 * (x1961 * x67 - x1971 * x71))
        )
    )
    x1975 = x1967 * x27
    x1976 = -x1216 * x14 + x1217 * x428 + x1960 * x70 + 2 * x545
    x1977 = x1215 * x428 - x1221 * x14 + x1961 * x70 + 2 * x577
    x1978 = -x1212 * x14 + x1213 * x428 + x1962 * x70 + 2 * x541
    x1979 = x1211 * x428 - x1225 * x14 + x1963 * x70 + 2 * x576
    x1980 = x1978 * x67 - x1979 * x71 + x70 * (x1976 * x67 - x1977 * x71)
    x1981 = x1975 + x1980
    x1982 = -x1230 * x14 + x1231 * x428 + x1959 * x70 + 2 * x564
    x1983 = x1220 * x428 - x1236 * x435 + x1971 * x70 + 2 * x588
    x1984 = x1224 * x428 - x1238 * x435 + x1972 * x70 + 2 * x592
    x1985 = x1229 * x428 - x1240 * x435 + x1970 * x70 + 2 * x596
    x1986 = (
        x1982 * x67
        - x1985 * x71
        + x76 * (x1979 * x67 - x1984 * x71 + x70 * (x1977 * x67 - x1983 * x71))
    )
    x1987 = x1885 * x23 + x1964 * x27 + x1981 * x26 + x1986
    x1988 = x1887 * x23 + x1964 * x28 + x1968 * x28
    x1989 = -x1251 * x14 + x1252 * x428 + x1977 * x76 + 2 * x610
    x1990 = x1250 * x428 - x1255 * x435 + x1983 * x76 + 2 * x627
    x1991 = -x1247 * x14 + x1248 * x428 + x1979 * x76 + 2 * x606
    x1992 = x1246 * x428 - x1258 * x435 + x1984 * x76 + 2 * x631
    x1993 = x1980 * x27 + x1991 * x67 - x1992 * x71 + x70 * (x1989 * x67 - x1990 * x71)
    x1994 = x1890 * x23 + x1981 * x27 + x1993
    x1995 = x1980 * x28
    x1996 = x1893 * x23 + x1975 * x28 + x1995
    x1997 = x1895 * x23 + x1967 * x29
    x1998 = -x1267 * x14 + x1268 * x428 + x1965 * x70 + 2 * x646
    x1999 = -x1976 * x71 + x1998 * x67
    x2000 = x1999 * x26
    x2001 = x1898 * x23 + x1980 * x26 + x1986 + x26 * (x1980 + x2000)
    x2002 = x1999 * x27
    x2003 = -x1276 * x14 + x1277 * x428 + x1976 * x76 + 2 * x660
    x2004 = -x1989 * x71 + x2003 * x67
    x2005 = x2002 + x2004
    x2006 = x1902 * x23 + x1993 + x2005 * x26
    x2007 = x1904 * x23 + x1995 + x2000 * x28
    x2008 = -x1287 * x14 + x1288 * x428 + x1989 * x78 + 2 * x678
    x2009 = x1286 * x428 - x1291 * x435 + x1990 * x78 + 2 * x688
    x2010 = x1906 * x23 + x2004 * x27 + x2005 * x27 + x2008 * x67 - x2009 * x71
    x2011 = x1908 * x23 + x2002 * x28 + x2004 * x28
    x2012 = x1910 * x23 + x1999 * x29
    x2013 = -x1305 * x14 + x1307 * x428 + x702
    x2014 = x1304 * x428 - x1325 * x14 + x788
    x2015 = x1310 * x428 - x1314 * x14 + x740
    x2016 = x1313 * x428 - x1329 * x14 + x791
    x2017 = x1317 * x428 - x1321 * x14 + x739
    x2018 = x1320 * x428 - x1334 * x14 + x790
    x2019 = (
        x2013 * x67
        - x2014 * x71
        + x76 * (x2017 * x67 - x2018 * x71 + x70 * (x2015 * x67 - x2016 * x71))
    )
    x2020 = -x1344 * x14 + x1346 * x428 + x751
    x2021 = -x1341 * x14 + x1348 * x428 + x748
    x2022 = -x2017 * x71 + x2021 * x67 + x70 * (-x2015 * x71 + x2020 * x67)
    x2023 = -x1300 * x14 + x1351 * x428 + x766
    x2024 = x1324 * x428 - x1356 * x435 + x802
    x2025 = x1328 * x428 - x1359 * x435 + x816
    x2026 = x1333 * x428 - x1363 * x435 + x815
    x2027 = x1299 * x428 - x1368 * x435 + x820
    x2028 = (
        x2019 * x26
        + x2023 * x67
        - x2027 * x71
        + x26 * (x2019 + x2022 * x26)
        + x78
        * (
            x2014 * x67
            - x2024 * x71
            + x76 * (x2018 * x67 - x2026 * x71 + x70 * (x2016 * x67 - x2025 * x71))
        )
    )
    x2029 = x1881 * x24 + x2028
    x2030 = -x1378 * x14 + x1379 * x428 + x2015 * x70 + x832
    x2031 = x1377 * x428 - x1385 * x14 + x2016 * x70 + x877
    x2032 = -x1372 * x14 + x1373 * x428 + x2017 * x70 + x827
    x2033 = x1371 * x428 - x1389 * x14 + x2018 * x70 + x876
    x2034 = x2032 * x67 - x2033 * x71 + x70 * (x2030 * x67 - x2031 * x71)
    x2035 = x2022 * x27 + x2034
    x2036 = -x1394 * x14 + x1395 * x428 + x2014 * x70 + x859
    x2037 = x1384 * x428 - x1402 * x435 + x2025 * x70 + x887
    x2038 = x1388 * x428 - x1406 * x435 + x2026 * x70 + x893
    x2039 = x1393 * x428 - x1408 * x435 + x2024 * x70 + x899
    x2040 = (
        x2036 * x67
        - x2039 * x71
        + x76 * (x2033 * x67 - x2038 * x71 + x70 * (x2031 * x67 - x2037 * x71))
    )
    x2041 = x2019 * x27 + x2035 * x26 + x2040
    x2042 = x1885 * x24 + x2041
    x2043 = -x14 * x1423 + x1420 * x428 + x906
    x2044 = -x14 * x1428 + x1422 * x428 + x928
    x2045 = -x14 * x1415 + x1418 * x428 + x904
    x2046 = -x14 * x1431 + x1414 * x428 + x927
    x2047 = x2045 * x67 - x2046 * x71 + x70 * (x2043 * x67 - x2044 * x71)
    x2048 = x2022 * x28 + x2047
    x2049 = -x14 * x1437 + x1440 * x428 + x921
    x2050 = x1427 * x428 - x1444 * x435 + x939
    x2051 = x1430 * x428 - x1446 * x435 + x943
    x2052 = x1436 * x428 - x1448 * x435 + x947
    x2053 = (
        x2049 * x67
        - x2052 * x71
        + x76 * (x2046 * x67 - x2051 * x71 + x70 * (x2044 * x67 - x2050 * x71))
    )
    x2054 = x2019 * x28 + x2048 * x26 + x2053
    x2055 = x1887 * x24 + x2054
    x2056 = -x14 * x1457 + x1458 * x428 + x2031 * x76 + x959
    x2057 = x1456 * x428 - x1463 * x435 + x2037 * x76 + x981
    x2058 = -x14 * x1453 + x1454 * x428 + x2033 * x76 + x954
    x2059 = x1452 * x428 - x1466 * x435 + x2038 * x76 + x987
    x2060 = x2034 * x27 + x2058 * x67 - x2059 * x71 + x70 * (x2056 * x67 - x2057 * x71)
    x2061 = x2035 * x27 + x2060
    x2062 = x1890 * x24 + x2061
    x2063 = -x14 * x1476 + x1477 * x428 + x2044 * x70 + x994
    x2064 = x1008 + x1475 * x428 - x1480 * x435 + x2050 * x70
    x2065 = -x14 * x1471 + x1473 * x428 + x2046 * x70 + x992
    x2066 = x1012 + x1470 * x428 - x1483 * x435 + x2051 * x70
    x2067 = x2065 * x67 - x2066 * x71 + x70 * (x2063 * x67 - x2064 * x71)
    x2068 = x2034 * x28 + x2067
    x2069 = x2048 * x27 + x2068
    x2070 = x1893 * x24 + x2069
    x2071 = x1020 - x14 * x1494 + x1496 * x428
    x2072 = x1033 + x1493 * x428 - x1498 * x435
    x2073 = x1019 - x14 * x1490 + x1500 * x428
    x2074 = x1036 + x1489 * x428 - x1502 * x435
    x2075 = x2047 * x28 + x2073 * x67 - x2074 * x71 + x70 * (x2071 * x67 - x2072 * x71)
    x2076 = x2048 * x28 + x2075
    x2077 = x1895 * x24 + x2076
    x2078 = x1041 - x14 * x1506 + x1507 * x428 + x2020 * x70
    x2079 = -x2030 * x71 + x2078 * x67
    x2080 = x2034 * x26 + x2040 + x26 * (x2034 + x2079 * x26)
    x2081 = x1898 * x24 + x2080
    x2082 = x1053 - x14 * x1513 + x1514 * x428 + x2030 * x76
    x2083 = -x2056 * x71 + x2082 * x67
    x2084 = x2079 * x27 + x2083
    x2085 = x2060 + x2084 * x26
    x2086 = x1902 * x24 + x2085
    x2087 = x1066 - x14 * x1521 + x1523 * x428 + x2043 * x70
    x2088 = -x2063 * x71 + x2087 * x67
    x2089 = x2079 * x28 + x2088
    x2090 = x2068 + x2089 * x26
    x2091 = x1904 * x24 + x2090
    x2092 = x1081 - x14 * x1531 + x1532 * x428 + x2056 * x78
    x2093 = x1092 + x1530 * x428 - x1535 * x435 + x2057 * x78
    x2094 = x2083 * x27 + x2084 * x27 + x2092 * x67 - x2093 * x71
    x2095 = x1906 * x24 + x2094
    x2096 = x1096 - x14 * x1539 + x1541 * x428 + x2063 * x76
    x2097 = x1105 + x1538 * x428 - x1544 * x435 + x2064 * x76
    x2098 = x2096 * x67 - x2097 * x71
    x2099 = x2083 * x28 + x2089 * x27 + x2098
    x2100 = x1908 * x24 + x2099
    x2101 = x1108 - x14 * x1549 + x1550 * x428 + x2071 * x70
    x2102 = x1117 + x1548 * x428 - x1553 * x435 + x2072 * x70
    x2103 = x2088 * x28 + x2101 * x67 - x2102 * x71
    x2104 = x2089 * x28 + x2103
    x2105 = x1910 * x24 + x2104
    x2106 = x1121 - x14 * x1558 + x1561 * x428
    x2107 = -x2043 * x71 + x2106 * x67
    x2108 = x2047 * x26 + x2053 + x26 * (x2047 + x2107 * x26)
    x2109 = x1944 * x23 + x2108
    x2110 = x2088 + x2107 * x27
    x2111 = x2047 * x27 + x2067 + x2110 * x26
    x2112 = x1947 * x23 + x2111
    x2113 = x1133 - x14 * x1570 + x1572 * x428
    x2114 = -x2071 * x71 + x2113 * x67
    x2115 = x2107 * x28 + x2114
    x2116 = x2075 + x2115 * x26
    x2117 = x1950 * x23 + x2116
    x2118 = x2088 * x27 + x2098 + x2110 * x27
    x2119 = x1952 * x23 + x2118
    x2120 = x2103 + x2115 * x27
    x2121 = x1954 * x23 + x2120
    x2122 = x1152 - x14 * x1584 + x1586 * x428
    x2123 = x1155 + x1583 * x428 - x1588 * x435
    x2124 = x2114 * x28 + x2115 * x28 + x2122 * x67 - x2123 * x71
    x2125 = x1956 * x23 + x2124
    x2126 = -x14 * x1596 + x1597 * x428
    x2127 = -x14 * x1615 + x1595 * x428
    x2128 = -x14 * x1605 + x1601 * x428
    x2129 = -x14 * x1619 + x1604 * x428
    x2130 = -x14 * x1611 + x1607 * x428
    x2131 = -x14 * x1624 + x1610 * x428
    x2132 = (
        x2126 * x67
        - x2127 * x71
        + x76 * (x2130 * x67 - x2131 * x71 + x70 * (x2128 * x67 - x2129 * x71))
    )
    x2133 = -x14 * x1633 + x1634 * x428
    x2134 = -x14 * x1630 + x1631 * x428
    x2135 = -x2130 * x71 + x2134 * x67 + x70 * (-x2128 * x71 + x2133 * x67)
    x2136 = -x14 * x1592 + x1593 * x428
    x2137 = x1614 * x428 - x1643 * x435
    x2138 = x1618 * x428 - x1646 * x435
    x2139 = x1623 * x428 - x1650 * x435
    x2140 = x1591 * x428 - x1655 * x435
    x2141 = (
        x2132 * x26
        + x2136 * x67
        - x2140 * x71
        + x26 * (x2132 + x2135 * x26)
        + x78
        * (
            x2127 * x67
            - x2137 * x71
            + x76 * (x2131 * x67 - x2139 * x71 + x70 * (x2129 * x67 - x2138 * x71))
        )
    )
    x2142 = x1912 * x24 + x2141
    x2143 = -x14 * x1665 + x1666 * x428 + x2128 * x70
    x2144 = -x14 * x1672 + x1664 * x428 + x2129 * x70
    x2145 = -x14 * x1659 + x1660 * x428 + x2130 * x70
    x2146 = -x14 * x1676 + x1658 * x428 + x2131 * x70
    x2147 = x2145 * x67 - x2146 * x71 + x70 * (x2143 * x67 - x2144 * x71)
    x2148 = x2135 * x27 + x2147
    x2149 = -x14 * x1681 + x1682 * x428 + x2127 * x70
    x2150 = x1671 * x428 - x1689 * x435 + x2138 * x70
    x2151 = x1675 * x428 - x1693 * x435 + x2139 * x70
    x2152 = x1680 * x428 - x1695 * x435 + x2137 * x70
    x2153 = (
        x2149 * x67
        - x2152 * x71
        + x76 * (x2146 * x67 - x2151 * x71 + x70 * (x2144 * x67 - x2150 * x71))
    )
    x2154 = x2132 * x27 + x2148 * x26 + x2153
    x2155 = x1915 * x24 + x2154
    x2156 = -x14 * x1704 + x1705 * x428
    x2157 = -x14 * x1709 + x1703 * x428
    x2158 = -x14 * x1700 + x1701 * x428
    x2159 = -x14 * x1713 + x1699 * x428
    x2160 = x2158 * x67 - x2159 * x71 + x70 * (x2156 * x67 - x2157 * x71)
    x2161 = x2135 * x28 + x2160
    x2162 = -x14 * x1718 + x1719 * x428
    x2163 = x1708 * x428 - x1724 * x435
    x2164 = x1712 * x428 - x1726 * x435
    x2165 = x1717 * x428 - x1728 * x435
    x2166 = (
        x2162 * x67
        - x2165 * x71
        + x76 * (x2159 * x67 - x2164 * x71 + x70 * (x2157 * x67 - x2163 * x71))
    )
    x2167 = x2132 * x28 + x2161 * x26 + x2166
    x2168 = x1918 * x24 + x2167
    x2169 = -x14 * x1737 + x1738 * x428 + x2144 * x76
    x2170 = x1736 * x428 - x1743 * x435 + x2150 * x76
    x2171 = -x14 * x1733 + x1734 * x428 + x2146 * x76
    x2172 = x1732 * x428 - x1746 * x435 + x2151 * x76
    x2173 = x2147 * x27 + x2171 * x67 - x2172 * x71 + x70 * (x2169 * x67 - x2170 * x71)
    x2174 = x2148 * x27 + x2173
    x2175 = x1921 * x24 + x2174
    x2176 = -x14 * x1755 + x1756 * x428 + x2157 * x70
    x2177 = x1754 * x428 - x1759 * x435 + x2163 * x70
    x2178 = -x14 * x1751 + x1752 * x428 + x2159 * x70
    x2179 = x1750 * x428 - x1762 * x435 + x2164 * x70
    x2180 = x2178 * x67 - x2179 * x71 + x70 * (x2176 * x67 - x2177 * x71)
    x2181 = x2147 * x28 + x2180
    x2182 = x2161 * x27 + x2181
    x2183 = x1924 * x24 + x2182
    x2184 = -x14 * x1772 + x1773 * x428
    x2185 = x1771 * x428 - x1776 * x435
    x2186 = -x14 * x1768 + x1769 * x428
    x2187 = x1767 * x428 - x1779 * x435
    x2188 = x2160 * x28 + x2186 * x67 - x2187 * x71 + x70 * (x2184 * x67 - x2185 * x71)
    x2189 = x2161 * x28 + x2188
    x2190 = x1927 * x24 + x2189
    x2191 = -x14 * x1783 + x1784 * x428 + x2133 * x70
    x2192 = -x2143 * x71 + x2191 * x67
    x2193 = x2147 * x26 + x2153 + x26 * (x2147 + x2192 * x26)
    x2194 = x1929 * x24 + x2193
    x2195 = -x14 * x1790 + x1791 * x428 + x2143 * x76
    x2196 = -x2169 * x71 + x2195 * x67
    x2197 = x2192 * x27 + x2196
    x2198 = x2173 + x2197 * x26
    x2199 = x1932 * x24 + x2198
    x2200 = -x14 * x1798 + x1799 * x428 + x2156 * x70
    x2201 = -x2176 * x71 + x2200 * x67
    x2202 = x2192 * x28 + x2201
    x2203 = x2181 + x2202 * x26
    x2204 = x1935 * x24 + x2203
    x2205 = -x14 * x1807 + x1808 * x428 + x2169 * x78
    x2206 = x1806 * x428 - x1811 * x435 + x2170 * x78
    x2207 = x2196 * x27 + x2197 * x27 + x2205 * x67 - x2206 * x71
    x2208 = x1937 * x24 + x2207
    x2209 = -x14 * x1815 + x1816 * x428 + x2176 * x76
    x2210 = x1814 * x428 - x1819 * x435 + x2177 * x76
    x2211 = x2209 * x67 - x2210 * x71
    x2212 = x2196 * x28 + x2202 * x27 + x2211
    x2213 = x1939 * x24 + x2212
    x2214 = -x14 * x1824 + x1825 * x428 + x2184 * x70
    x2215 = x1823 * x428 - x1828 * x435 + x2185 * x70
    x2216 = x2201 * x28 + x2214 * x67 - x2215 * x71
    x2217 = x2202 * x28 + x2216
    x2218 = x1942 * x24 + x2217
    x2219 = x1944 * x24
    x2220 = -x14 * x1833 + x1834 * x428
    x2221 = -x2156 * x71 + x2220 * x67
    x2222 = x2160 * x26 + x2166 + x26 * (x2160 + x2221 * x26)
    x2223 = x1947 * x24
    x2224 = x2201 + x2221 * x27
    x2225 = x2160 * x27 + x2180 + x2224 * x26
    x2226 = x1950 * x24
    x2227 = -x14 * x1843 + x1844 * x428
    x2228 = -x2184 * x71 + x2227 * x67
    x2229 = x2221 * x28 + x2228
    x2230 = x2188 + x2229 * x26
    x2231 = x1952 * x24
    x2232 = x2201 * x27 + x2211 + x2224 * x27
    x2233 = x1954 * x24
    x2234 = x2216 + x2229 * x27
    x2235 = x1956 * x24
    x2236 = -x14 * x1856 + x1857 * x428
    x2237 = x1855 * x428 - x1860 * x435
    x2238 = x2228 * x28 + x2229 * x28 + x2236 * x67 - x2237 * x71
    x2239 = x26 * x720 + x26 * (x26 * x759 + x720) + x768
    x2240 = x27 * x759 + x846
    x2241 = x2240 * x26 + x27 * x720 + x861
    x2242 = x28 * x759 + x914
    x2243 = x2242 * x26 + x28 * x720 + x922
    x2244 = x27 * x846 + x972
    x2245 = x2240 * x27 + x2244
    x2246 = x1000 + x28 * x846
    x2247 = x2242 * x27 + x2246
    x2248 = x1026 + x28 * x914
    x2249 = x2242 * x28 + x2248
    x2250 = x26 * x846 + x26 * (x1044 * x26 + x846) + x861
    x2251 = x1044 * x27 + x1056
    x2252 = x2244 + x2251 * x26
    x2253 = x1044 * x28 + x1068
    x2254 = x2246 + x2253 * x26
    x2255 = x1056 * x27 + x1084 + x2251 * x27
    x2256 = x1056 * x28 + x1098 + x2253 * x27
    x2257 = x1068 * x28 + x1110
    x2258 = x2253 * x28 + x2257
    x2259 = x26 * x914 + x26 * (x1123 * x26 + x914) + x922
    x2260 = x1068 + x1123 * x27
    x2261 = x1000 + x2260 * x26 + x27 * x914
    x2262 = x1123 * x28 + x1135
    x2263 = x2248 + x2262 * x26
    x2264 = x1068 * x27 + x1098 + x2260 * x27
    x2265 = x2257 + x2262 * x27
    x2266 = x1135 * x28 + x1153 + x2262 * x28
    x2267 = x1912 + x2239 * x23
    x2268 = x1915 + x2241 * x23
    x2269 = x1918 + x2243 * x23
    x2270 = x1921 + x2245 * x23
    x2271 = x1924 + x2247 * x23
    x2272 = x1927 + x2249 * x23
    x2273 = x1929 + x2250 * x23
    x2274 = x1932 + x2252 * x23
    x2275 = x1935 + x2254 * x23
    x2276 = x1937 + x2255 * x23
    x2277 = x1939 + x2256 * x23
    x2278 = x1942 + x2258 * x23
    x2279 = x1944 + x2259 * x23
    x2280 = x1947 + x2261 * x23
    x2281 = x1950 + x2263 * x23
    x2282 = x1952 + x2264 * x23
    x2283 = x1954 + x2265 * x23
    x2284 = x1956 + x2266 * x23
    x2285 = x1613 * x26 + x1639 + x26 * (x1613 + x1637 * x26)
    x2286 = x2239 * x24 + x2285
    x2287 = x1637 * x27 + x1674
    x2288 = x1613 * x27 + x1684 + x2287 * x26
    x2289 = x2241 * x24 + x2288
    x2290 = x1637 * x28 + x1711
    x2291 = x1613 * x28 + x1721 + x2290 * x26
    x2292 = x2243 * x24 + x2291
    x2293 = x1674 * x27 + x1745
    x2294 = x2287 * x27 + x2293
    x2295 = x2245 * x24 + x2294
    x2296 = x1674 * x28 + x1761
    x2297 = x2290 * x27 + x2296
    x2298 = x2247 * x24 + x2297
    x2299 = x1711 * x28 + x1778
    x2300 = x2290 * x28 + x2299
    x2301 = x2249 * x24 + x2300
    x2302 = x1674 * x26 + x1684 + x26 * (x1674 + x1786 * x26)
    x2303 = x2250 * x24 + x2302
    x2304 = x1786 * x27 + x1793
    x2305 = x2293 + x2304 * x26
    x2306 = x2252 * x24 + x2305
    x2307 = x1786 * x28 + x1801
    x2308 = x2296 + x2307 * x26
    x2309 = x2254 * x24 + x2308
    x2310 = x1793 * x27 + x1810 + x2304 * x27
    x2311 = x2255 * x24 + x2310
    x2312 = x1793 * x28 + x1818 + x2307 * x27
    x2313 = x2256 * x24 + x2312
    x2314 = x1801 * x28 + x1827
    x2315 = x2307 * x28 + x2314
    x2316 = x2258 * x24 + x2315
    x2317 = x1711 * x26 + x1721 + x26 * (x1711 + x1836 * x26)
    x2318 = x2259 * x24 + x2317
    x2319 = x1801 + x1836 * x27
    x2320 = x1711 * x27 + x1761 + x2319 * x26
    x2321 = x2261 * x24 + x2320
    x2322 = x1836 * x28 + x1846
    x2323 = x2299 + x2322 * x26
    x2324 = x2263 * x24 + x2323
    x2325 = x1801 * x27 + x1818 + x2319 * x27
    x2326 = x2264 * x24 + x2325
    x2327 = x2314 + x2322 * x27
    x2328 = x2265 * x24 + x2327
    x2329 = x1846 * x28 + x1859 + x2322 * x28
    x2330 = x2266 * x24 + x2329
    x2331 = x1912 * x23 + x2028
    x2332 = x1915 * x23 + x2041
    x2333 = x1918 * x23 + x2054
    x2334 = x1921 * x23 + x2061
    x2335 = x1924 * x23 + x2069
    x2336 = x1927 * x23 + x2076
    x2337 = x1929 * x23 + x2080
    x2338 = x1932 * x23 + x2085
    x2339 = x1935 * x23 + x2090
    x2340 = x1937 * x23 + x2094
    x2341 = x1939 * x23 + x2099
    x2342 = x1942 * x23 + x2104
    x2343 = x2219 + x2222
    x2344 = x2223 + x2225
    x2345 = x2226 + x2230
    x2346 = x2231 + x2232
    x2347 = x2233 + x2234
    x2348 = x2235 + x2238
    x2349 = -x1596 * x16 + x1597 * x697 + 2 * x702
    x2350 = x1595 * x697 - x16 * x1615 + 2 * x788
    x2351 = -x16 * x1605 + x1601 * x697 + 2 * x740
    x2352 = -x16 * x1619 + x1604 * x697 + 2 * x791
    x2353 = -x16 * x1611 + x1607 * x697 + 2 * x739
    x2354 = -x16 * x1624 + x1610 * x697 + 2 * x790
    x2355 = (
        x2349 * x67
        - x2350 * x71
        + x76 * (x2353 * x67 - x2354 * x71 + x70 * (x2351 * x67 - x2352 * x71))
    )
    x2356 = -x16 * x1633 + x1634 * x697 + 2 * x751
    x2357 = -x16 * x1630 + x1631 * x697 + 2 * x748
    x2358 = -x2353 * x71 + x2357 * x67 + x70 * (-x2351 * x71 + x2356 * x67)
    x2359 = -x1592 * x16 + x1593 * x697 + 2 * x766
    x2360 = x1614 * x697 - x1643 * x704 + 2 * x802
    x2361 = x1618 * x697 - x1646 * x704 + 2 * x816
    x2362 = x1623 * x697 - x1650 * x704 + 2 * x815
    x2363 = x1591 * x697 - x1655 * x704 + 2 * x820
    x2364 = (
        x2285 * x24
        + x2355 * x26
        + x2359 * x67
        - x2363 * x71
        + x26 * (x2355 + x2358 * x26)
        + x78
        * (
            x2350 * x67
            - x2360 * x71
            + x76 * (x2354 * x67 - x2362 * x71 + x70 * (x2352 * x67 - x2361 * x71))
        )
    )
    x2365 = -x16 * x1665 + x1666 * x697 + 2 * x832
    x2366 = -x16 * x1672 + x1664 * x697 + 2 * x877
    x2367 = -x16 * x1659 + x1660 * x697 + 2 * x827
    x2368 = -x16 * x1676 + x1658 * x697 + 2 * x876
    x2369 = x2367 * x67 - x2368 * x71 + x70 * (x2365 * x67 - x2366 * x71)
    x2370 = x2358 * x27 + x2369
    x2371 = -x16 * x1681 + x1682 * x697 + 2 * x859
    x2372 = x1671 * x697 - x1689 * x704 + 2 * x887
    x2373 = x1675 * x697 - x1693 * x704 + 2 * x893
    x2374 = x1680 * x697 - x1695 * x704 + 2 * x899
    x2375 = (
        x2371 * x67
        - x2374 * x71
        + x76 * (x2368 * x67 - x2373 * x71 + x70 * (x2366 * x67 - x2372 * x71))
    )
    x2376 = x2288 * x24 + x2355 * x27 + x2370 * x26 + x2375
    x2377 = -x16 * x1704 + x1705 * x697 + x2351 * x70 + 2 * x906
    x2378 = -x16 * x1709 + x1703 * x697 + x2352 * x70 + 2 * x928
    x2379 = -x16 * x1700 + x1701 * x697 + x2353 * x70 + 2 * x904
    x2380 = -x16 * x1713 + x1699 * x697 + x2354 * x70 + 2 * x927
    x2381 = x2379 * x67 - x2380 * x71 + x70 * (x2377 * x67 - x2378 * x71)
    x2382 = x2358 * x28 + x2381
    x2383 = -x16 * x1718 + x1719 * x697 + x2350 * x70 + 2 * x921
    x2384 = x1708 * x697 - x1724 * x704 + x2361 * x70 + 2 * x939
    x2385 = x1712 * x697 - x1726 * x704 + x2362 * x70 + 2 * x943
    x2386 = x1717 * x697 - x1728 * x704 + x2360 * x70 + 2 * x947
    x2387 = (
        x2383 * x67
        - x2386 * x71
        + x76 * (x2380 * x67 - x2385 * x71 + x70 * (x2378 * x67 - x2384 * x71))
    )
    x2388 = x2291 * x24 + x2355 * x28 + x2382 * x26 + x2387
    x2389 = -x16 * x1737 + x1738 * x697 + 2 * x959
    x2390 = x1736 * x697 - x1743 * x704 + 2 * x981
    x2391 = -x16 * x1733 + x1734 * x697 + 2 * x954
    x2392 = x1732 * x697 - x1746 * x704 + 2 * x987
    x2393 = x2369 * x27 + x2391 * x67 - x2392 * x71 + x70 * (x2389 * x67 - x2390 * x71)
    x2394 = x2294 * x24 + x2370 * x27 + x2393
    x2395 = -x16 * x1755 + x1756 * x697 + x2366 * x70 + 2 * x994
    x2396 = 2 * x1008 + x1754 * x697 - x1759 * x704 + x2372 * x70
    x2397 = -x16 * x1751 + x1752 * x697 + x2368 * x70 + 2 * x992
    x2398 = 2 * x1012 + x1750 * x697 - x1762 * x704 + x2373 * x70
    x2399 = x2397 * x67 - x2398 * x71 + x70 * (x2395 * x67 - x2396 * x71)
    x2400 = x2369 * x28 + x2399
    x2401 = x2297 * x24 + x2382 * x27 + x2400
    x2402 = 2 * x1020 - x16 * x1772 + x1773 * x697 + x2378 * x76
    x2403 = 2 * x1033 + x1771 * x697 - x1776 * x704 + x2384 * x76
    x2404 = 2 * x1019 - x16 * x1768 + x1769 * x697 + x2380 * x76
    x2405 = 2 * x1036 + x1767 * x697 - x1779 * x704 + x2385 * x76
    x2406 = x2381 * x28 + x2404 * x67 - x2405 * x71 + x70 * (x2402 * x67 - x2403 * x71)
    x2407 = x2300 * x24 + x2382 * x28 + x2406
    x2408 = 2 * x1041 - x16 * x1783 + x1784 * x697
    x2409 = -x2365 * x71 + x2408 * x67
    x2410 = x2302 * x24 + x2369 * x26 + x2375 + x26 * (x2369 + x2409 * x26)
    x2411 = 2 * x1053 - x16 * x1790 + x1791 * x697
    x2412 = -x2389 * x71 + x2411 * x67
    x2413 = x2409 * x27 + x2412
    x2414 = x2305 * x24 + x2393 + x2413 * x26
    x2415 = 2 * x1066 - x16 * x1798 + x1799 * x697 + x2365 * x70
    x2416 = -x2395 * x71 + x2415 * x67
    x2417 = x2409 * x28 + x2416
    x2418 = x2308 * x24 + x2400 + x2417 * x26
    x2419 = 2 * x1081 - x16 * x1807 + x1808 * x697
    x2420 = 2 * x1092 + x1806 * x697 - x1811 * x704
    x2421 = x2310 * x24 + x2412 * x27 + x2413 * x27 + x2419 * x67 - x2420 * x71
    x2422 = 2 * x1096 - x16 * x1815 + x1816 * x697 + x2389 * x70
    x2423 = 2 * x1105 + x1814 * x697 - x1819 * x704 + x2390 * x70
    x2424 = x2422 * x67 - x2423 * x71
    x2425 = x2312 * x24 + x2412 * x28 + x2417 * x27 + x2424
    x2426 = 2 * x1108 - x16 * x1824 + x1825 * x697 + x2395 * x76
    x2427 = 2 * x1117 + x1823 * x697 - x1828 * x704 + x2396 * x76
    x2428 = x2416 * x28 + x2426 * x67 - x2427 * x71
    x2429 = x2315 * x24 + x2417 * x28 + x2428
    x2430 = 2 * x1121 - x16 * x1833 + x1834 * x697 + x2356 * x70
    x2431 = -x2377 * x71 + x2430 * x67
    x2432 = x2317 * x24 + x2381 * x26 + x2387 + x26 * (x2381 + x2431 * x26)
    x2433 = x2416 + x2431 * x27
    x2434 = x2320 * x24 + x2381 * x27 + x2399 + x2433 * x26
    x2435 = 2 * x1133 - x16 * x1843 + x1844 * x697 + x2377 * x76
    x2436 = -x2402 * x71 + x2435 * x67
    x2437 = x2431 * x28 + x2436
    x2438 = x2323 * x24 + x2406 + x2437 * x26
    x2439 = x2325 * x24 + x2416 * x27 + x2424 + x2433 * x27
    x2440 = x2327 * x24 + x2428 + x2437 * x27
    x2441 = 2 * x1152 - x16 * x1856 + x1857 * x697 + x2402 * x78
    x2442 = 2 * x1155 + x1855 * x697 - x1860 * x704 + x2403 * x78
    x2443 = x2329 * x24 + x2436 * x28 + x2437 * x28 + x2441 * x67 - x2442 * x71
    x2444 = x1188 * x26
    x2445 = x1160 + x1164 * x26 + x26 * (x1164 + x2444)
    x2446 = x1188 * x27
    x2447 = x1213 + x2446
    x2448 = x1164 * x27 + x1231 + x2447 * x26
    x2449 = x1164 * x28 + x2444 * x28
    x2450 = x1213 * x27 + x1248
    x2451 = x2447 * x27 + x2450
    x2452 = x1213 * x28
    x2453 = x2446 * x28 + x2452
    x2454 = x1268 * x26
    x2455 = x1213 * x26 + x1231 + x26 * (x1213 + x2454)
    x2456 = x1268 * x27
    x2457 = x1277 + x2456
    x2458 = x2450 + x2457 * x26
    x2459 = x2452 + x2454 * x28
    x2460 = x1277 * x27 + x1288 + x2457 * x27
    x2461 = x1277 * x28 + x2456 * x28
    x2462 = x1966 * x26
    x2463 = x1958 * x26 + x1969 + x26 * (x1958 + x2462)
    x2464 = x23 * x2445 + x2463
    x2465 = x1966 * x27
    x2466 = x1978 + x2465
    x2467 = x1958 * x27 + x1982 + x2466 * x26
    x2468 = x23 * x2448 + x2467
    x2469 = x1958 * x28 + x2462 * x28
    x2470 = x23 * x2449 + x2469
    x2471 = x1978 * x27 + x1991
    x2472 = x2466 * x27 + x2471
    x2473 = x23 * x2451 + x2472
    x2474 = x1978 * x28
    x2475 = x2465 * x28 + x2474
    x2476 = x23 * x2453 + x2475
    x2477 = x1966 * x29
    x2478 = x1188 * x640 + x2477
    x2479 = x1998 * x26
    x2480 = x1978 * x26 + x1982 + x26 * (x1978 + x2479)
    x2481 = x23 * x2455 + x2480
    x2482 = x1998 * x27
    x2483 = x2003 + x2482
    x2484 = x2471 + x2483 * x26
    x2485 = x23 * x2458 + x2484
    x2486 = x2474 + x2479 * x28
    x2487 = x23 * x2459 + x2486
    x2488 = x2003 * x27 + x2008 + x2483 * x27
    x2489 = x23 * x2460 + x2488
    x2490 = x2003 * x28 + x2482 * x28
    x2491 = x23 * x2461 + x2490
    x2492 = x1998 * x29
    x2493 = x1268 * x640 + x2492
    x2494 = x2013 * x26 + x2023 + x26 * (x2013 + x2021 * x26)
    x2495 = x24 * x2445 + x2494
    x2496 = x2021 * x27 + x2032
    x2497 = x2013 * x27 + x2036 + x2496 * x26
    x2498 = x24 * x2448 + x2497
    x2499 = x2021 * x28 + x2045
    x2500 = x2013 * x28 + x2049 + x2499 * x26
    x2501 = x24 * x2449 + x2500
    x2502 = x2032 * x27 + x2058
    x2503 = x2496 * x27 + x2502
    x2504 = x24 * x2451 + x2503
    x2505 = x2032 * x28 + x2065
    x2506 = x2499 * x27 + x2505
    x2507 = x24 * x2453 + x2506
    x2508 = x2045 * x28 + x2073
    x2509 = x2499 * x28 + x2508
    x2510 = x1016 * x1188 + x2509
    x2511 = x2032 * x26 + x2036 + x26 * (x2032 + x2078 * x26)
    x2512 = x24 * x2455 + x2511
    x2513 = x2078 * x27 + x2082
    x2514 = x2502 + x2513 * x26
    x2515 = x24 * x2458 + x2514
    x2516 = x2078 * x28 + x2087
    x2517 = x2505 + x2516 * x26
    x2518 = x24 * x2459 + x2517
    x2519 = x2082 * x27 + x2092 + x2513 * x27
    x2520 = x24 * x2460 + x2519
    x2521 = x2082 * x28 + x2096 + x2516 * x27
    x2522 = x24 * x2461 + x2521
    x2523 = x2087 * x28 + x2101
    x2524 = x2516 * x28 + x2523
    x2525 = x1016 * x1268 + x2524
    x2526 = x2045 * x26 + x2049 + x26 * (x2045 + x2106 * x26)
    x2527 = x2087 + x2106 * x27
    x2528 = x2045 * x27 + x2065 + x2527 * x26
    x2529 = x2106 * x28 + x2113
    x2530 = x2508 + x2529 * x26
    x2531 = x2087 * x27 + x2096 + x2527 * x27
    x2532 = x2523 + x2529 * x27
    x2533 = x2113 * x28 + x2122 + x2529 * x28
    x2534 = 3 * x1165 + x1958 * x428 - x1959 * x435
    x2535 = 3 * x1189 - x1962 * x435 + x1966 * x428
    x2536 = x2535 * x26
    x2537 = x2535 * x27
    x2538 = (
        3 * x1214
        + x1978 * x428
        - x1979 * x435
        + x70 * (3 * x1184 + x1962 * x428 - x1963 * x435)
    )
    x2539 = x2537 + x2538
    x2540 = (
        3 * x1232
        + x1982 * x428
        - x1985 * x435
        + x70 * (3 * x1198 + x1959 * x428 - x1970 * x435)
    )
    x2541 = (
        3 * x1249
        + x1991 * x428
        - x1992 * x435
        + x2538 * x27
        + x76
        * (
            3 * x1234
            + x1979 * x428
            - x1984 * x435
            + x70 * (3 * x1205 + x1963 * x428 - x1972 * x435)
        )
    )
    x2542 = x2538 * x28
    x2543 = (
        3 * x1269
        - x1976 * x435
        + x1998 * x428
        + x70 * (3 * x1192 - x1960 * x435 + x1965 * x428)
    )
    x2544 = x2543 * x26
    x2545 = x2543 * x27
    x2546 = (
        3 * x1278
        - x1989 * x435
        + x2003 * x428
        + x76
        * (
            3 * x1218
            + x1976 * x428
            - x1977 * x435
            + x70 * (3 * x1185 + x1960 * x428 - x1961 * x435)
        )
    )
    x2547 = x2545 + x2546
    x2548 = 2 * x1306 + x2013 * x428 - x2014 * x435
    x2549 = 2 * x1342 - x2017 * x435 + x2021 * x428
    x2550 = (
        2 * x1301
        + x2023 * x428
        - x2027 * x435
        + x2548 * x26
        + x26 * (x2548 + x2549 * x26)
    )
    x2551 = (
        2 * x1374
        + x2032 * x428
        - x2033 * x435
        + x70 * (2 * x1337 + x2017 * x428 - x2018 * x435)
    )
    x2552 = x2549 * x27 + x2551
    x2553 = (
        2 * x1396
        + x2036 * x428
        - x2039 * x435
        + x70 * (2 * x1353 + x2014 * x428 - x2024 * x435)
    )
    x2554 = x2548 * x27 + x2552 * x26 + x2553
    x2555 = 2 * x1416 + x2045 * x428 - x2046 * x435
    x2556 = x2549 * x28 + x2555
    x2557 = 2 * x1438 + x2049 * x428 - x2052 * x435
    x2558 = x2548 * x28 + x2556 * x26 + x2557
    x2559 = (
        2 * x1455
        + x2058 * x428
        - x2059 * x435
        + x2551 * x27
        + x76
        * (
            2 * x1398
            + x2033 * x428
            - x2038 * x435
            + x70 * (2 * x1366 + x2018 * x428 - x2026 * x435)
        )
    )
    x2560 = x2552 * x27 + x2559
    x2561 = (
        2 * x1474
        + x2065 * x428
        - x2066 * x435
        + x70 * (2 * x1442 + x2046 * x428 - x2051 * x435)
    )
    x2562 = x2551 * x28 + x2561
    x2563 = x2556 * x27 + x2562
    x2564 = 2 * x1491 + x2073 * x428 - x2074 * x435 + x2555 * x28
    x2565 = x2556 * x28 + x2564
    x2566 = (
        2 * x1508
        - x2030 * x435
        + x2078 * x428
        + x70 * (2 * x1345 - x2015 * x435 + x2020 * x428)
    )
    x2567 = x2551 * x26 + x2553 + x26 * (x2551 + x2566 * x26)
    x2568 = (
        2 * x1515
        - x2056 * x435
        + x2082 * x428
        + x76
        * (
            2 * x1380
            + x2030 * x428
            - x2031 * x435
            + x70 * (2 * x1338 + x2015 * x428 - x2016 * x435)
        )
    )
    x2569 = x2566 * x27 + x2568
    x2570 = x2559 + x2569 * x26
    x2571 = (
        2 * x1524
        - x2063 * x435
        + x2087 * x428
        + x70 * (2 * x1426 + x2043 * x428 - x2044 * x435)
    )
    x2572 = x2566 * x28 + x2571
    x2573 = x2562 + x2572 * x26
    x2574 = (
        2 * x1533
        + x2092 * x428
        - x2093 * x435
        + x2568 * x27
        + x2569 * x27
        + x78
        * (
            2 * x1459
            + x2056 * x428
            - x2057 * x435
            + x76
            * (
                2 * x1399
                + x2031 * x428
                - x2037 * x435
                + x70 * (2 * x1367 + x2016 * x428 - x2025 * x435)
            )
        )
    )
    x2575 = (
        2 * x1542
        + x2096 * x428
        - x2097 * x435
        + x76
        * (
            2 * x1478
            + x2063 * x428
            - x2064 * x435
            + x70 * (2 * x1443 + x2044 * x428 - x2050 * x435)
        )
    )
    x2576 = x2568 * x28 + x2572 * x27 + x2575
    x2577 = (
        2 * x1551
        + x2101 * x428
        - x2102 * x435
        + x2571 * x28
        + x70 * (2 * x1495 + x2071 * x428 - x2072 * x435)
    )
    x2578 = x2572 * x28 + x2577
    x2579 = 2 * x1559 - x2043 * x435 + x2106 * x428
    x2580 = x23 * x2526 + x2555 * x26 + x2557 + x26 * (x2555 + x2579 * x26)
    x2581 = x2571 + x2579 * x27
    x2582 = x23 * x2528 + x2555 * x27 + x2561 + x2581 * x26
    x2583 = 2 * x1571 - x2071 * x435 + x2113 * x428
    x2584 = x2579 * x28 + x2583
    x2585 = x23 * x2530 + x2564 + x2584 * x26
    x2586 = x23 * x2531 + x2571 * x27 + x2575 + x2581 * x27
    x2587 = x23 * x2532 + x2577 + x2584 * x27
    x2588 = (
        2 * x1585 + x2122 * x428 - x2123 * x435 + x23 * x2533 + x2583 * x28 + x2584 * x28
    )
    x2589 = x1598 + x2126 * x428 - x2127 * x435
    x2590 = x1632 - x2130 * x435 + x2134 * x428
    x2591 = (
        x1594 + x2136 * x428 - x2140 * x435 + x2589 * x26 + x26 * (x2589 + x2590 * x26)
    )
    x2592 = x24 * x2494 + x2591
    x2593 = (
        x1661 + x2145 * x428 - x2146 * x435 + x70 * (x1627 + x2130 * x428 - x2131 * x435)
    )
    x2594 = x2590 * x27 + x2593
    x2595 = (
        x1683 + x2149 * x428 - x2152 * x435 + x70 * (x1640 + x2127 * x428 - x2137 * x435)
    )
    x2596 = x2589 * x27 + x2594 * x26 + x2595
    x2597 = x24 * x2497 + x2596
    x2598 = x1702 + x2158 * x428 - x2159 * x435
    x2599 = x2590 * x28 + x2598
    x2600 = x1720 + x2162 * x428 - x2165 * x435
    x2601 = x2589 * x28 + x2599 * x26 + x2600
    x2602 = x24 * x2500 + x2601
    x2603 = (
        x1735
        + x2171 * x428
        - x2172 * x435
        + x2593 * x27
        + x76
        * (
            x1685
            + x2146 * x428
            - x2151 * x435
            + x70 * (x1653 + x2131 * x428 - x2139 * x435)
        )
    )
    x2604 = x2594 * x27 + x2603
    x2605 = x24 * x2503 + x2604
    x2606 = (
        x1753 + x2178 * x428 - x2179 * x435 + x70 * (x1722 + x2159 * x428 - x2164 * x435)
    )
    x2607 = x2593 * x28 + x2606
    x2608 = x2599 * x27 + x2607
    x2609 = x24 * x2506 + x2608
    x2610 = x1770 + x2186 * x428 - x2187 * x435 + x2598 * x28
    x2611 = x2599 * x28 + x2610
    x2612 = x24 * x2509 + x2611
    x2613 = (
        x1785 - x2143 * x435 + x2191 * x428 + x70 * (x1635 - x2128 * x435 + x2133 * x428)
    )
    x2614 = x2593 * x26 + x2595 + x26 * (x2593 + x26 * x2613)
    x2615 = x24 * x2511 + x2614
    x2616 = (
        x1792
        - x2169 * x435
        + x2195 * x428
        + x76
        * (
            x1667
            + x2143 * x428
            - x2144 * x435
            + x70 * (x1628 + x2128 * x428 - x2129 * x435)
        )
    )
    x2617 = x2613 * x27 + x2616
    x2618 = x26 * x2617 + x2603
    x2619 = x24 * x2514 + x2618
    x2620 = (
        x1800 - x2176 * x435 + x2200 * x428 + x70 * (x1706 + x2156 * x428 - x2157 * x435)
    )
    x2621 = x2613 * x28 + x2620
    x2622 = x26 * x2621 + x2607
    x2623 = x24 * x2517 + x2622
    x2624 = (
        x1809
        + x2205 * x428
        - x2206 * x435
        + x2616 * x27
        + x2617 * x27
        + x78
        * (
            x1739
            + x2169 * x428
            - x2170 * x435
            + x76
            * (
                x1686
                + x2144 * x428
                - x2150 * x435
                + x70 * (x1654 + x2129 * x428 - x2138 * x435)
            )
        )
    )
    x2625 = x24 * x2519 + x2624
    x2626 = (
        x1817
        + x2209 * x428
        - x2210 * x435
        + x76
        * (
            x1757
            + x2176 * x428
            - x2177 * x435
            + x70 * (x1723 + x2157 * x428 - x2163 * x435)
        )
    )
    x2627 = x2616 * x28 + x2621 * x27 + x2626
    x2628 = x24 * x2521 + x2627
    x2629 = (
        x1826
        + x2214 * x428
        - x2215 * x435
        + x2620 * x28
        + x70 * (x1774 + x2184 * x428 - x2185 * x435)
    )
    x2630 = x2621 * x28 + x2629
    x2631 = x24 * x2524 + x2630
    x2632 = x24 * x2526
    x2633 = x1835 - x2156 * x435 + x2220 * x428
    x2634 = x2598 * x26 + x26 * (x2598 + x26 * x2633) + x2600
    x2635 = x24 * x2528
    x2636 = x2620 + x2633 * x27
    x2637 = x2598 * x27 + x26 * x2636 + x2606
    x2638 = x24 * x2530
    x2639 = x1845 - x2184 * x435 + x2227 * x428
    x2640 = x2633 * x28 + x2639
    x2641 = x26 * x2640 + x2610
    x2642 = x24 * x2531
    x2643 = x2620 * x27 + x2626 + x2636 * x27
    x2644 = x24 * x2532
    x2645 = x2629 + x2640 * x27
    x2646 = x24 * x2533
    x2647 = x1858 + x2236 * x428 - x2237 * x435 + x2639 * x28 + x2640 * x28
    x2648 = x1307 * x26 + x1351 + x26 * (x1307 + x1348 * x26)
    x2649 = x1348 * x27 + x1373
    x2650 = x1307 * x27 + x1395 + x26 * x2649
    x2651 = x1348 * x28 + x1418
    x2652 = x1307 * x28 + x1440 + x26 * x2651
    x2653 = x1373 * x27 + x1454
    x2654 = x2649 * x27 + x2653
    x2655 = x1373 * x28 + x1473
    x2656 = x2651 * x27 + x2655
    x2657 = x1418 * x28 + x1500
    x2658 = x2651 * x28 + x2657
    x2659 = x1373 * x26 + x1395 + x26 * (x1373 + x1507 * x26)
    x2660 = x1507 * x27 + x1514
    x2661 = x26 * x2660 + x2653
    x2662 = x1507 * x28 + x1523
    x2663 = x26 * x2662 + x2655
    x2664 = x1514 * x27 + x1532 + x2660 * x27
    x2665 = x1514 * x28 + x1541 + x2662 * x27
    x2666 = x1523 * x28 + x1550
    x2667 = x2662 * x28 + x2666
    x2668 = x1418 * x26 + x1440 + x26 * (x1418 + x1561 * x26)
    x2669 = x1523 + x1561 * x27
    x2670 = x1418 * x27 + x1473 + x26 * x2669
    x2671 = x1561 * x28 + x1572
    x2672 = x26 * x2671 + x2657
    x2673 = x1523 * x27 + x1541 + x2669 * x27
    x2674 = x2666 + x2671 * x27
    x2675 = x1572 * x28 + x1586 + x2671 * x28
    x2676 = x23 * x2648 + x2494
    x2677 = x23 * x2650 + x2497
    x2678 = x23 * x2652 + x2500
    x2679 = x23 * x2654 + x2503
    x2680 = x23 * x2656 + x2506
    x2681 = x23 * x2658 + x2509
    x2682 = x23 * x2659 + x2511
    x2683 = x23 * x2661 + x2514
    x2684 = x23 * x2663 + x2517
    x2685 = x23 * x2664 + x2519
    x2686 = x23 * x2665 + x2521
    x2687 = x23 * x2667 + x2524
    x2688 = x23 * x2668 + x2526
    x2689 = x23 * x2670 + x2528
    x2690 = x23 * x2672 + x2530
    x2691 = x23 * x2673 + x2531
    x2692 = x23 * x2674 + x2532
    x2693 = x23 * x2675 + x2533
    x2694 = x2126 * x26 + x2136 + x26 * (x2126 + x2134 * x26)
    x2695 = x24 * x2648 + x2694
    x2696 = x2134 * x27 + x2145
    x2697 = x2126 * x27 + x2149 + x26 * x2696
    x2698 = x24 * x2650 + x2697
    x2699 = x2134 * x28 + x2158
    x2700 = x2126 * x28 + x2162 + x26 * x2699
    x2701 = x24 * x2652 + x2700
    x2702 = x2145 * x27 + x2171
    x2703 = x2696 * x27 + x2702
    x2704 = x24 * x2654 + x2703
    x2705 = x2145 * x28 + x2178
    x2706 = x2699 * x27 + x2705
    x2707 = x24 * x2656 + x2706
    x2708 = x2158 * x28 + x2186
    x2709 = x2699 * x28 + x2708
    x2710 = x24 * x2658 + x2709
    x2711 = x2145 * x26 + x2149 + x26 * (x2145 + x2191 * x26)
    x2712 = x24 * x2659 + x2711
    x2713 = x2191 * x27 + x2195
    x2714 = x26 * x2713 + x2702
    x2715 = x24 * x2661 + x2714
    x2716 = x2191 * x28 + x2200
    x2717 = x26 * x2716 + x2705
    x2718 = x24 * x2663 + x2717
    x2719 = x2195 * x27 + x2205 + x27 * x2713
    x2720 = x24 * x2664 + x2719
    x2721 = x2195 * x28 + x2209 + x27 * x2716
    x2722 = x24 * x2665 + x2721
    x2723 = x2200 * x28 + x2214
    x2724 = x2716 * x28 + x2723
    x2725 = x24 * x2667 + x2724
    x2726 = x2158 * x26 + x2162 + x26 * (x2158 + x2220 * x26)
    x2727 = x24 * x2668 + x2726
    x2728 = x2200 + x2220 * x27
    x2729 = x2158 * x27 + x2178 + x26 * x2728
    x2730 = x24 * x2670 + x2729
    x2731 = x2220 * x28 + x2227
    x2732 = x26 * x2731 + x2708
    x2733 = x24 * x2672 + x2732
    x2734 = x2200 * x27 + x2209 + x27 * x2728
    x2735 = x24 * x2673 + x2734
    x2736 = x27 * x2731 + x2723
    x2737 = x24 * x2674 + x2736
    x2738 = x2227 * x28 + x2236 + x2731 * x28
    x2739 = x24 * x2675 + x2738
    x2740 = x2349 * x428 - x2350 * x435
    x2741 = -x2353 * x435 + x2357 * x428
    x2742 = (
        x2359 * x428
        - x2363 * x435
        + x24 * x2694
        + x26 * x2740
        + x26 * (x26 * x2741 + x2740)
    )
    x2743 = x2367 * x428 - x2368 * x435 + x70 * (x2353 * x428 - x2354 * x435)
    x2744 = x27 * x2741 + x2743
    x2745 = x2371 * x428 - x2374 * x435 + x70 * (x2350 * x428 - x2360 * x435)
    x2746 = x24 * x2697 + x26 * x2744 + x27 * x2740 + x2745
    x2747 = x2379 * x428 - x2380 * x435
    x2748 = x2741 * x28 + x2747
    x2749 = x2383 * x428 - x2386 * x435
    x2750 = x24 * x2700 + x26 * x2748 + x2740 * x28 + x2749
    x2751 = (
        x2391 * x428
        - x2392 * x435
        + x27 * x2743
        + x76 * (x2368 * x428 - x2373 * x435 + x70 * (x2354 * x428 - x2362 * x435))
    )
    x2752 = x24 * x2703 + x27 * x2744 + x2751
    x2753 = x2397 * x428 - x2398 * x435 + x70 * (x2380 * x428 - x2385 * x435)
    x2754 = x2743 * x28 + x2753
    x2755 = x24 * x2706 + x27 * x2748 + x2754
    x2756 = x2404 * x428 - x2405 * x435 + x2747 * x28
    x2757 = x24 * x2709 + x2748 * x28 + x2756
    x2758 = -x2365 * x435 + x2408 * x428 + x70 * (-x2351 * x435 + x2356 * x428)
    x2759 = x24 * x2711 + x26 * x2743 + x26 * (x26 * x2758 + x2743) + x2745
    x2760 = (
        -x2389 * x435
        + x2411 * x428
        + x76 * (x2365 * x428 - x2366 * x435 + x70 * (x2351 * x428 - x2352 * x435))
    )
    x2761 = x27 * x2758 + x2760
    x2762 = x24 * x2714 + x26 * x2761 + x2751
    x2763 = -x2395 * x435 + x2415 * x428 + x70 * (x2377 * x428 - x2378 * x435)
    x2764 = x2758 * x28 + x2763
    x2765 = x24 * x2717 + x26 * x2764 + x2754
    x2766 = (
        x24 * x2719
        + x2419 * x428
        - x2420 * x435
        + x27 * x2760
        + x27 * x2761
        + x78
        * (
            x2389 * x428
            - x2390 * x435
            + x76 * (x2366 * x428 - x2372 * x435 + x70 * (x2352 * x428 - x2361 * x435))
        )
    )
    x2767 = (
        x2422 * x428
        - x2423 * x435
        + x76 * (x2395 * x428 - x2396 * x435 + x70 * (x2378 * x428 - x2384 * x435))
    )
    x2768 = x24 * x2721 + x27 * x2764 + x2760 * x28 + x2767
    x2769 = (
        x2426 * x428 - x2427 * x435 + x2763 * x28 + x70 * (x2402 * x428 - x2403 * x435)
    )
    x2770 = x24 * x2724 + x2764 * x28 + x2769
    x2771 = -x2377 * x435 + x2430 * x428
    x2772 = x24 * x2726 + x26 * x2747 + x26 * (x26 * x2771 + x2747) + x2749
    x2773 = x27 * x2771 + x2763
    x2774 = x24 * x2729 + x26 * x2773 + x27 * x2747 + x2753
    x2775 = -x2402 * x435 + x2435 * x428
    x2776 = x2771 * x28 + x2775
    x2777 = x24 * x2732 + x26 * x2776 + x2756
    x2778 = x24 * x2734 + x27 * x2763 + x27 * x2773 + x2767
    x2779 = x24 * x2736 + x27 * x2776 + x2769
    x2780 = x24 * x2738 + x2441 * x428 - x2442 * x435 + x2775 * x28 + x2776 * x28
    x2781 = x1593 + x1597 * x26 + x26 * (x1597 + x1631 * x26)
    x2782 = x1631 * x27 + x1660
    x2783 = x1597 * x27 + x1682 + x26 * x2782
    x2784 = x1631 * x28 + x1701
    x2785 = x1597 * x28 + x1719 + x26 * x2784
    x2786 = x1660 * x27 + x1734
    x2787 = x27 * x2782 + x2786
    x2788 = x1660 * x28 + x1752
    x2789 = x27 * x2784 + x2788
    x2790 = x1701 * x28 + x1769
    x2791 = x2784 * x28 + x2790
    x2792 = x1660 * x26 + x1682 + x26 * (x1660 + x1784 * x26)
    x2793 = x1784 * x27 + x1791
    x2794 = x26 * x2793 + x2786
    x2795 = x1784 * x28 + x1799
    x2796 = x26 * x2795 + x2788
    x2797 = x1791 * x27 + x1808 + x27 * x2793
    x2798 = x1791 * x28 + x1816 + x27 * x2795
    x2799 = x1799 * x28 + x1825
    x2800 = x2795 * x28 + x2799
    x2801 = x1701 * x26 + x1719 + x26 * (x1701 + x1834 * x26)
    x2802 = x1799 + x1834 * x27
    x2803 = x1701 * x27 + x1752 + x26 * x2802
    x2804 = x1834 * x28 + x1844
    x2805 = x26 * x2804 + x2790
    x2806 = x1799 * x27 + x1816 + x27 * x2802
    x2807 = x27 * x2804 + x2799
    x2808 = x1844 * x28 + x1857 + x28 * x2804
    x2809 = x23 * x2781 + x2694
    x2810 = x23 * x2783 + x2697
    x2811 = x23 * x2785 + x2700
    x2812 = x23 * x2787 + x2703
    x2813 = x23 * x2789 + x2706
    x2814 = x23 * x2791 + x2709
    x2815 = x23 * x2792 + x2711
    x2816 = x23 * x2794 + x2714
    x2817 = x23 * x2796 + x2717
    x2818 = x23 * x2797 + x2719
    x2819 = x23 * x2798 + x2721
    x2820 = x23 * x2800 + x2724
    x2821 = x23 * x2801 + x2726
    x2822 = x23 * x2803 + x2729
    x2823 = x23 * x2805 + x2732
    x2824 = x23 * x2806 + x2734
    x2825 = x23 * x2807 + x2736
    x2826 = x23 * x2808 + x2738
    x2827 = x2349 * x26 + x2359 + x26 * (x2349 + x2357 * x26)
    x2828 = x24 * x2781 + x2827
    x2829 = x2357 * x27 + x2367
    x2830 = x2349 * x27 + x2371 + x26 * x2829
    x2831 = x24 * x2783 + x2830
    x2832 = x2357 * x28 + x2379
    x2833 = x2349 * x28 + x2383 + x26 * x2832
    x2834 = x24 * x2785 + x2833
    x2835 = x2367 * x27 + x2391
    x2836 = x27 * x2829 + x2835
    x2837 = x24 * x2787 + x2836
    x2838 = x2367 * x28 + x2397
    x2839 = x27 * x2832 + x2838
    x2840 = x24 * x2789 + x2839
    x2841 = x2379 * x28 + x2404
    x2842 = x28 * x2832 + x2841
    x2843 = x24 * x2791 + x2842
    x2844 = x2367 * x26 + x2371 + x26 * (x2367 + x2408 * x26)
    x2845 = x24 * x2792 + x2844
    x2846 = x2408 * x27 + x2411
    x2847 = x26 * x2846 + x2835
    x2848 = x24 * x2794 + x2847
    x2849 = x2408 * x28 + x2415
    x2850 = x26 * x2849 + x2838
    x2851 = x24 * x2796 + x2850
    x2852 = x2411 * x27 + x2419 + x27 * x2846
    x2853 = x24 * x2797 + x2852
    x2854 = x2411 * x28 + x2422 + x27 * x2849
    x2855 = x24 * x2798 + x2854
    x2856 = x2415 * x28 + x2426
    x2857 = x28 * x2849 + x2856
    x2858 = x24 * x2800 + x2857
    x2859 = x2379 * x26 + x2383 + x26 * (x2379 + x2430 * x26)
    x2860 = x24 * x2801 + x2859
    x2861 = x2415 + x2430 * x27
    x2862 = x2379 * x27 + x2397 + x26 * x2861
    x2863 = x24 * x2803 + x2862
    x2864 = x2430 * x28 + x2435
    x2865 = x26 * x2864 + x2841
    x2866 = x24 * x2805 + x2865
    x2867 = x2415 * x27 + x2422 + x27 * x2861
    x2868 = x24 * x2806 + x2867
    x2869 = x27 * x2864 + x2856
    x2870 = x24 * x2807 + x2869
    x2871 = x2435 * x28 + x2441 + x28 * x2864
    x2872 = x24 * x2808 + x2871
    x2873 = 3 * x1598 + x2349 * x697 - x2350 * x704
    x2874 = 3 * x1632 - x2353 * x704 + x2357 * x697
    x2875 = 3 * x1661 + x2367 * x697 - x2368 * x704
    x2876 = x27 * x2874 + x2875
    x2877 = 3 * x1683 + x2371 * x697 - x2374 * x704
    x2878 = (
        3 * x1702
        + x2379 * x697
        - x2380 * x704
        + x70 * (3 * x1627 + x2353 * x697 - x2354 * x704)
    )
    x2879 = x28 * x2874 + x2878
    x2880 = (
        3 * x1720
        + x2383 * x697
        - x2386 * x704
        + x70 * (3 * x1640 + x2350 * x697 - x2360 * x704)
    )
    x2881 = 3 * x1735 + x2391 * x697 - x2392 * x704 + x27 * x2875
    x2882 = (
        3 * x1753
        + x2397 * x697
        - x2398 * x704
        + x70 * (3 * x1685 + x2368 * x697 - x2373 * x704)
    )
    x2883 = x28 * x2875 + x2882
    x2884 = (
        3 * x1770
        + x2404 * x697
        - x2405 * x704
        + x28 * x2878
        + x76
        * (
            3 * x1722
            + x2380 * x697
            - x2385 * x704
            + x70 * (3 * x1653 + x2354 * x697 - x2362 * x704)
        )
    )
    x2885 = 3 * x1785 - x2365 * x704 + x2408 * x697
    x2886 = 3 * x1792 - x2389 * x704 + x2411 * x697
    x2887 = x27 * x2885 + x2886
    x2888 = (
        3 * x1800
        - x2395 * x704
        + x2415 * x697
        + x70 * (3 * x1667 + x2365 * x697 - x2366 * x704)
    )
    x2889 = x28 * x2885 + x2888
    x2890 = (
        3 * x1817
        + x2422 * x697
        - x2423 * x704
        + x70 * (3 * x1739 + x2389 * x697 - x2390 * x704)
    )
    x2891 = (
        3 * x1826
        + x2426 * x697
        - x2427 * x704
        + x28 * x2888
        + x76
        * (
            3 * x1757
            + x2395 * x697
            - x2396 * x704
            + x70 * (3 * x1686 + x2366 * x697 - x2372 * x704)
        )
    )
    x2892 = (
        3 * x1835
        - x2377 * x704
        + x2430 * x697
        + x70 * (3 * x1635 - x2351 * x704 + x2356 * x697)
    )
    x2893 = x27 * x2892 + x2888
    x2894 = (
        3 * x1845
        - x2402 * x704
        + x2435 * x697
        + x76
        * (
            3 * x1706
            + x2377 * x697
            - x2378 * x704
            + x70 * (3 * x1628 + x2351 * x697 - x2352 * x704)
        )
    )
    x2895 = x28 * x2892 + x2894

    # 648 item(s)
    S = numpy.array(
        [
            x133 * (-x105 + x132)
            + x141 * x67
            + x182 * x26
            + x200 * x22
            + x22 * (x200 + x202 * x22)
            + x26 * (x182 + x198)
            - x71
            * (
                x104 * x67
                + x134 * (x79 - x94)
                + x160 * x78
                - x71
                * (
                    x142
                    + x157 * x78
                    + x67 * x93
                    - x71 * (-x148 * x71 + x151 * x78 + x67 * x86)
                )
            )
            + x78
            * (
                x133 * (x131 - x135)
                + x140 * x67
                - x160 * x71
                + x76
                * (
                    x133 * (x130 - x138)
                    + x139 * x67
                    - x159 * x71
                    + x70 * (x133 * (x128 - x136) + x137 * x67 - x158 * x71)
                )
            ),
            x182 * x27 + x22 * x290 + x22 * (x22 * x293 + x290) + x26 * x296 + x310,
            x182 * x28 + x198 * x28 + x22 * x311 + x22 * (x22 * x312 + x311),
            x22 * x353 + x22 * (x22 * x355 + x353) + x27 * x296 + x363,
            x22 * x365 + x22 * (x22 * x367 + x365) + x28 * x294 + x368,
            x197 * x29 + x22 * x369 + x22 * (x195 * x370 + x369),
            x22 * x379
            + x22 * (x22 * x381 + x379)
            + x26 * x295
            + x26 * (x295 + x383)
            + x310,
            x22 * x393 + x22 * (x22 * x396 + x393) + x26 * x399 + x363,
            x22 * x400 + x22 * (x22 * x401 + x400) + x28 * x383 + x368,
            x133 * (-x413 + x419)
            + x22 * x423
            + x22 * (x22 * x424 + x423)
            + x27 * x398
            + x27 * x399
            + x420 * x67
            - x71
            * (
                x134 * (x404 * x67 - x406 - x411)
                + x412 * x67
                - x71 * (x410 * x67 + x421 - x71 * (x408 * x67 - x422 * x71))
            ),
            x22 * x425 + x22 * (x22 * x426 + x425) + x28 * x397 + x28 * x398,
            x22 * x427 + x22 * (x370 * x375 + x427) + x29 * x382,
            0,
            0,
            0,
            0,
            0,
            0,
            x200 * x23 + x22 * x518 + x536,
            x22 * x584 + x23 * x290 + x599,
            x22 * x601 + x23 * x311 + x602,
            x22 * x626 + x23 * x353 + x634,
            x22 * x637 + x23 * x365 + x639,
            x22 * x642 + x23 * x369 + x643,
            x22 * x653 + x23 * x379 + x656,
            x22 * x667 + x23 * x393 + x671,
            x22 * x673 + x23 * x400 + x674,
            x22 * x687 + x23 * x423 + x690,
            x22 * x692 + x23 * x425 + x693,
            x22 * x695 + x23 * x427 + x696,
            0,
            0,
            0,
            0,
            0,
            0,
            x200 * x24 + x22 * x799 + x822,
            x22 * x884 + x24 * x290 + x902,
            x22 * x935 + x24 * x311 + x949,
            x22 * x980 + x24 * x353 + x990,
            x1006 * x22 + x1015 + x24 * x365,
            x1032 * x22 + x1038 + x24 * x369,
            x1048 * x22 + x1050 + x24 * x379,
            x1061 * x22 + x1064 + x24 * x393,
            x1073 * x22 + x1076 + x24 * x400,
            x1091 * x22 + x1094 + x24 * x423,
            x1103 * x22 + x1107 + x24 * x425,
            x1116 * x22 + x1119 + x24 * x427,
            x1128,
            x1132,
            x1142,
            x1144,
            x1146,
            x1157,
            x1209 + x23 * x518,
            x1243 + x23 * x584,
            x1245 + x23 * x601,
            x1261 + x23 * x626,
            x1264 + x23 * x637,
            x1266 + x23 * x642,
            x1274 + x23 * x653,
            x1283 + x23 * x667,
            x1285 + x23 * x673,
            x1293 + x23 * x687,
            x1295 + x23 * x692,
            x1297 + x23 * x695,
            0,
            0,
            0,
            0,
            0,
            0,
            x1370 + x23 * x799,
            x1411 + x23 * x884,
            x1451 + x23 * x935,
            x1469 + x23 * x980,
            x1006 * x23 + x1487,
            x1032 * x23 + x1505,
            x1048 * x23 + x1512,
            x1061 * x23 + x1520,
            x1073 * x23 + x1529,
            x1091 * x23 + x1537,
            x1103 * x23 + x1547,
            x1116 * x23 + x1556,
            x1565,
            x1568,
            x1577,
            x1579,
            x1581,
            x1590,
            x1657 + x24 * x799,
            x1698 + x24 * x884,
            x1731 + x24 * x935,
            x1749 + x24 * x980,
            x1006 * x24 + x1766,
            x1032 * x24 + x1782,
            x1048 * x24 + x1789,
            x1061 * x24 + x1797,
            x1073 * x24 + x1805,
            x1091 * x24 + x1813,
            x1103 * x24 + x1822,
            x1116 * x24 + x1831,
            2 * x1832 + x1838,
            2 * x1839 + x1841,
            2 * x1842 + x1849,
            2 * x1850 + x1851,
            2 * x1852 + x1853,
            2 * x1854 + x1861,
            x22 * x517 + x22 * (x1863 * x22 + x517) + x536,
            x22 * x583 + x22 * (x1866 * x22 + x583) + x599,
            x22 * x600 + x22 * (x1867 * x22 + x600) + x602,
            x22 * x625 + x22 * (x1869 * x22 + x625) + x634,
            x22 * x636 + x22 * (x1871 * x22 + x636) + x639,
            x22 * x641 + x22 * (x370 * x483 + x641) + x643,
            x22 * x652 + x22 * (x1873 * x22 + x652) + x656,
            x22 * x666 + x22 * (x1876 * x22 + x666) + x671,
            x22 * x672 + x22 * (x1877 * x22 + x672) + x674,
            x22 * x686 + x22 * (x1878 * x22 + x686) + x690,
            x22 * x691 + x22 * (x1879 * x22 + x691) + x693,
            x22 * x694 + x22 * (x370 * x648 + x694) + x696,
            0,
            0,
            0,
            0,
            0,
            0,
            x1209 + x1882 * x22,
            x1243 + x1886 * x22,
            x1245 + x1888 * x22,
            x1261 + x1891 * x22,
            x1264 + x1894 * x22,
            x1266 + x1896 * x22,
            x1274 + x1899 * x22,
            x1283 + x1903 * x22,
            x1285 + x1905 * x22,
            x1293 + x1907 * x22,
            x1295 + x1909 * x22,
            x1297 + x1911 * x22,
            0,
            0,
            0,
            0,
            0,
            0,
            x1370 + x1913 * x22,
            x1411 + x1916 * x22,
            x1451 + x1919 * x22,
            x1469 + x1922 * x22,
            x1487 + x1925 * x22,
            x1505 + x1928 * x22,
            x1512 + x1930 * x22,
            x1520 + x1933 * x22,
            x1529 + x1936 * x22,
            x1537 + x1938 * x22,
            x1547 + x1940 * x22,
            x1556 + x1943 * x22,
            x1945,
            x1948,
            x1951,
            x1953,
            x1955,
            x1957,
            x1882 * x23 + x1974,
            x1886 * x23 + x1987,
            x1888 * x23 + x1988,
            x1891 * x23 + x1994,
            x1894 * x23 + x1996,
            x1896 * x23 + x1997,
            x1899 * x23 + x2001,
            x1903 * x23 + x2006,
            x1905 * x23 + x2007,
            x1907 * x23 + x2010,
            x1909 * x23 + x2011,
            x1911 * x23 + x2012,
            0,
            0,
            0,
            0,
            0,
            0,
            x1913 * x23 + x2029,
            x1916 * x23 + x2042,
            x1919 * x23 + x2055,
            x1922 * x23 + x2062,
            x1925 * x23 + x2070,
            x1928 * x23 + x2077,
            x1930 * x23 + x2081,
            x1933 * x23 + x2086,
            x1936 * x23 + x2091,
            x1938 * x23 + x2095,
            x1940 * x23 + x2100,
            x1943 * x23 + x2105,
            x2109,
            x2112,
            x2117,
            x2119,
            x2121,
            x2125,
            x1913 * x24 + x2142,
            x1916 * x24 + x2155,
            x1919 * x24 + x2168,
            x1922 * x24 + x2175,
            x1925 * x24 + x2183,
            x1928 * x24 + x2190,
            x1930 * x24 + x2194,
            x1933 * x24 + x2199,
            x1936 * x24 + x2204,
            x1938 * x24 + x2208,
            x1940 * x24 + x2213,
            x1943 * x24 + x2218,
            2 * x2219 + x2222,
            2 * x2223 + x2225,
            2 * x2226 + x2230,
            2 * x2231 + x2232,
            2 * x2233 + x2234,
            2 * x2235 + x2238,
            x22 * x798 + x22 * (x22 * x2239 + x798) + x822,
            x22 * x883 + x22 * (x22 * x2241 + x883) + x902,
            x22 * x934 + x22 * (x22 * x2243 + x934) + x949,
            x22 * x979 + x22 * (x22 * x2245 + x979) + x990,
            x1005 * x22 + x1015 + x22 * (x1005 + x22 * x2247),
            x1031 * x22 + x1038 + x22 * (x1031 + x22 * x2249),
            x1047 * x22 + x1050 + x22 * (x1047 + x22 * x2250),
            x1060 * x22 + x1064 + x22 * (x1060 + x22 * x2252),
            x1072 * x22 + x1076 + x22 * (x1072 + x22 * x2254),
            x1090 * x22 + x1094 + x22 * (x1090 + x22 * x2255),
            x1102 * x22 + x1107 + x22 * (x1102 + x22 * x2256),
            x1115 * x22 + x1119 + x22 * (x1115 + x22 * x2258),
            x1128 + x22 * (x1126 + x22 * x2259),
            x1132 + x22 * (x1130 + x22 * x2261),
            x1142 + x22 * (x1139 + x22 * x2263),
            x1144 + x22 * (x1143 + x22 * x2264),
            x1146 + x22 * (x1145 + x22 * x2265),
            x1157 + x22 * (x1156 + x22 * x2266),
            x1369 + x22 * x2267 + x23 * x798,
            x1410 + x22 * x2268 + x23 * x883,
            x1450 + x22 * x2269 + x23 * x934,
            x1468 + x22 * x2270 + x23 * x979,
            x1005 * x23 + x1486 + x22 * x2271,
            x1031 * x23 + x1504 + x22 * x2272,
            x1047 * x23 + x1511 + x22 * x2273,
            x1060 * x23 + x1519 + x22 * x2274,
            x1072 * x23 + x1528 + x22 * x2275,
            x1090 * x23 + x1536 + x22 * x2276,
            x1102 * x23 + x1546 + x22 * x2277,
            x1115 * x23 + x1555 + x22 * x2278,
            x1565 + x22 * x2279,
            x1568 + x22 * x2280,
            x1577 + x22 * x2281,
            x1579 + x22 * x2282,
            x1581 + x22 * x2283,
            x1590 + x22 * x2284,
            x1657 + x22 * x2286,
            x1698 + x22 * x2289,
            x1731 + x22 * x2292,
            x1749 + x22 * x2295,
            x1766 + x22 * x2298,
            x1782 + x22 * x2301,
            x1789 + x22 * x2303,
            x1797 + x22 * x2306,
            x1805 + x22 * x2309,
            x1813 + x22 * x2311,
            x1822 + x22 * x2313,
            x1831 + x22 * x2316,
            x1832 + x1838 + x22 * x2318,
            x1839 + x1841 + x22 * x2321,
            x1842 + x1849 + x22 * x2324,
            x1850 + x1851 + x22 * x2326,
            x1852 + x1853 + x22 * x2328,
            x1854 + x1861 + x22 * x2330,
            x2267 * x23 + x2331,
            x2268 * x23 + x2332,
            x2269 * x23 + x2333,
            x2270 * x23 + x2334,
            x2271 * x23 + x2335,
            x2272 * x23 + x2336,
            x2273 * x23 + x2337,
            x2274 * x23 + x2338,
            x2275 * x23 + x2339,
            x2276 * x23 + x2340,
            x2277 * x23 + x2341,
            x2278 * x23 + x2342,
            x2109 + x2279 * x23,
            x2112 + x2280 * x23,
            x2117 + x2281 * x23,
            x2119 + x2282 * x23,
            x2121 + x2283 * x23,
            x2125 + x2284 * x23,
            x2142 + x2286 * x23,
            x2155 + x2289 * x23,
            x2168 + x2292 * x23,
            x2175 + x2295 * x23,
            x2183 + x2298 * x23,
            x2190 + x23 * x2301,
            x2194 + x23 * x2303,
            x2199 + x23 * x2306,
            x2204 + x23 * x2309,
            x2208 + x23 * x2311,
            x2213 + x23 * x2313,
            x2218 + x23 * x2316,
            x23 * x2318 + x2343,
            x23 * x2321 + x2344,
            x23 * x2324 + x2345,
            x23 * x2326 + x2346,
            x23 * x2328 + x2347,
            x23 * x2330 + x2348,
            x2286 * x24 + x2364,
            x2289 * x24 + x2376,
            x2292 * x24 + x2388,
            x2295 * x24 + x2394,
            x2298 * x24 + x2401,
            x2301 * x24 + x2407,
            x2303 * x24 + x2410,
            x2306 * x24 + x2414,
            x2309 * x24 + x2418,
            x2311 * x24 + x2421,
            x2313 * x24 + x2425,
            x2316 * x24 + x2429,
            x2318 * x24 + x2432,
            x2321 * x24 + x2434,
            x2324 * x24 + x2438,
            x2326 * x24 + x2439,
            x2328 * x24 + x2440,
            x2330 * x24 + x2443,
            x1208 + x1881 * x22 + x22 * (x1881 + x22 * x2445),
            x1242 + x1885 * x22 + x22 * (x1885 + x22 * x2448),
            x1244 + x1887 * x22 + x22 * (x1887 + x22 * x2449),
            x1260 + x1890 * x22 + x22 * (x1890 + x22 * x2451),
            x1263 + x1893 * x22 + x22 * (x1893 + x22 * x2453),
            x1265 + x1895 * x22 + x22 * (x1188 * x370 + x1895),
            x1273 + x1898 * x22 + x22 * (x1898 + x22 * x2455),
            x1282 + x1902 * x22 + x22 * (x1902 + x22 * x2458),
            x1284 + x1904 * x22 + x22 * (x1904 + x22 * x2459),
            x1292 + x1906 * x22 + x22 * (x1906 + x22 * x2460),
            x1294 + x1908 * x22 + x22 * (x1908 + x22 * x2461),
            x1296 + x1910 * x22 + x22 * (x1268 * x370 + x1910),
            0,
            0,
            0,
            0,
            0,
            0,
            x1974 + x22 * x2464,
            x1987 + x22 * x2468,
            x1988 + x22 * x2470,
            x1994 + x22 * x2473,
            x1996 + x22 * x2476,
            x1997 + x22 * x2478,
            x2001 + x22 * x2481,
            x2006 + x22 * x2485,
            x2007 + x22 * x2487,
            x2010 + x22 * x2489,
            x2011 + x22 * x2491,
            x2012 + x22 * x2493,
            0,
            0,
            0,
            0,
            0,
            0,
            x2029 + x22 * x2495,
            x2042 + x22 * x2498,
            x2055 + x22 * x2501,
            x2062 + x22 * x2504,
            x2070 + x22 * x2507,
            x2077 + x22 * x2510,
            x2081 + x22 * x2512,
            x2086 + x22 * x2515,
            x2091 + x22 * x2518,
            x2095 + x22 * x2520,
            x2100 + x22 * x2522,
            x2105 + x22 * x2525,
            x2108 + x22 * x2526,
            x2111 + x22 * x2528,
            x2116 + x22 * x2530,
            x2118 + x22 * x2531,
            x2120 + x22 * x2532,
            x2124 + x22 * x2533,
            3 * x1161
            + x1969 * x428
            - x1973 * x435
            + x23 * x2463
            + x23 * x2464
            + x2534 * x26
            + x26 * (x2534 + x2536),
            x23 * x2467 + x23 * x2468 + x2534 * x27 + x2539 * x26 + x2540,
            x23 * x2469 + x23 * x2470 + x2534 * x28 + x2536 * x28,
            x23 * x2472 + x23 * x2473 + x2539 * x27 + x2541,
            x23 * x2475 + x23 * x2476 + x2537 * x28 + x2542,
            x23 * x2477 + x23 * x2478 + x2535 * x29,
            x23 * x2480 + x23 * x2481 + x2538 * x26 + x2540 + x26 * (x2538 + x2544),
            x23 * x2484 + x23 * x2485 + x2541 + x2547 * x26,
            x23 * x2486 + x23 * x2487 + x2542 + x2544 * x28,
            3 * x1289
            + x2008 * x428
            - x2009 * x435
            + x23 * x2488
            + x23 * x2489
            + x2546 * x27
            + x2547 * x27
            + x78
            * (
                3 * x1253
                + x1989 * x428
                - x1990 * x435
                + x76
                * (
                    3 * x1235
                    + x1977 * x428
                    - x1983 * x435
                    + x70 * (3 * x1206 + x1961 * x428 - x1971 * x435)
                )
            ),
            x23 * x2490 + x23 * x2491 + x2545 * x28 + x2546 * x28,
            x23 * x2492 + x23 * x2493 + x2543 * x29,
            0,
            0,
            0,
            0,
            0,
            0,
            x23 * x2495 + x24 * x2463 + x2550,
            x23 * x2498 + x24 * x2467 + x2554,
            x23 * x2501 + x24 * x2469 + x2558,
            x23 * x2504 + x24 * x2472 + x2560,
            x23 * x2507 + x24 * x2475 + x2563,
            x23 * x2510 + x24 * x2477 + x2565,
            x23 * x2512 + x24 * x2480 + x2567,
            x23 * x2515 + x24 * x2484 + x2570,
            x23 * x2518 + x24 * x2486 + x2573,
            x23 * x2520 + x24 * x2488 + x2574,
            x23 * x2522 + x24 * x2490 + x2576,
            x23 * x2525 + x24 * x2492 + x2578,
            x2580,
            x2582,
            x2585,
            x2586,
            x2587,
            x2588,
            x24 * x2495 + x2592,
            x24 * x2498 + x2597,
            x24 * x2501 + x2602,
            x24 * x2504 + x2605,
            x24 * x2507 + x2609,
            x24 * x2510 + x2612,
            x24 * x2512 + x2615,
            x24 * x2515 + x2619,
            x24 * x2518 + x2623,
            x24 * x2520 + x2625,
            x24 * x2522 + x2628,
            x24 * x2525 + x2631,
            2 * x2632 + x2634,
            2 * x2635 + x2637,
            2 * x2638 + x2641,
            2 * x2642 + x2643,
            2 * x2644 + x2645,
            2 * x2646 + x2647,
            x1369 + x1912 * x22 + x22 * (x1912 + x22 * x2648),
            x1410 + x1915 * x22 + x22 * (x1915 + x22 * x2650),
            x1450 + x1918 * x22 + x22 * (x1918 + x22 * x2652),
            x1468 + x1921 * x22 + x22 * (x1921 + x22 * x2654),
            x1486 + x1924 * x22 + x22 * (x1924 + x22 * x2656),
            x1504 + x1927 * x22 + x22 * (x1927 + x22 * x2658),
            x1511 + x1929 * x22 + x22 * (x1929 + x22 * x2659),
            x1519 + x1932 * x22 + x22 * (x1932 + x22 * x2661),
            x1528 + x1935 * x22 + x22 * (x1935 + x22 * x2663),
            x1536 + x1937 * x22 + x22 * (x1937 + x22 * x2664),
            x1546 + x1939 * x22 + x22 * (x1939 + x22 * x2665),
            x1555 + x1942 * x22 + x22 * (x1942 + x22 * x2667),
            x1945 + x22 * (x1944 + x22 * x2668),
            x1948 + x22 * (x1947 + x22 * x2670),
            x1951 + x22 * (x1950 + x22 * x2672),
            x1953 + x22 * (x1952 + x22 * x2673),
            x1955 + x22 * (x1954 + x22 * x2674),
            x1957 + x22 * (x1956 + x22 * x2675),
            x22 * x2676 + x2331,
            x22 * x2677 + x2332,
            x22 * x2678 + x2333,
            x22 * x2679 + x2334,
            x22 * x2680 + x2335,
            x22 * x2681 + x2336,
            x22 * x2682 + x2337,
            x22 * x2683 + x2338,
            x22 * x2684 + x2339,
            x22 * x2685 + x2340,
            x22 * x2686 + x2341,
            x22 * x2687 + x2342,
            x2109 + x22 * x2688,
            x2112 + x22 * x2689,
            x2117 + x22 * x2690,
            x2119 + x22 * x2691,
            x2121 + x22 * x2692,
            x2125 + x22 * x2693,
            x2142 + x22 * x2695,
            x2155 + x22 * x2698,
            x2168 + x22 * x2701,
            x2175 + x22 * x2704,
            x2183 + x22 * x2707,
            x2190 + x22 * x2710,
            x2194 + x22 * x2712,
            x2199 + x22 * x2715,
            x22 * x2718 + x2204,
            x22 * x2720 + x2208,
            x22 * x2722 + x2213,
            x22 * x2725 + x2218,
            x22 * x2727 + x2343,
            x22 * x2730 + x2344,
            x22 * x2733 + x2345,
            x22 * x2735 + x2346,
            x22 * x2737 + x2347,
            x22 * x2739 + x2348,
            x23 * x2494 + x23 * x2676 + x2550,
            x23 * x2497 + x23 * x2677 + x2554,
            x23 * x2500 + x23 * x2678 + x2558,
            x23 * x2503 + x23 * x2679 + x2560,
            x23 * x2506 + x23 * x2680 + x2563,
            x23 * x2509 + x23 * x2681 + x2565,
            x23 * x2511 + x23 * x2682 + x2567,
            x23 * x2514 + x23 * x2683 + x2570,
            x23 * x2517 + x23 * x2684 + x2573,
            x23 * x2519 + x23 * x2685 + x2574,
            x23 * x2521 + x23 * x2686 + x2576,
            x23 * x2524 + x23 * x2687 + x2578,
            x23 * x2688 + x2580,
            x23 * x2689 + x2582,
            x23 * x2690 + x2585,
            x23 * x2691 + x2586,
            x23 * x2692 + x2587,
            x23 * x2693 + x2588,
            x23 * x2695 + x2592,
            x23 * x2698 + x2597,
            x23 * x2701 + x2602,
            x23 * x2704 + x2605,
            x23 * x2707 + x2609,
            x23 * x2710 + x2612,
            x23 * x2712 + x2615,
            x23 * x2715 + x2619,
            x23 * x2718 + x2623,
            x23 * x2720 + x2625,
            x23 * x2722 + x2628,
            x23 * x2725 + x2631,
            x23 * x2727 + x2632 + x2634,
            x23 * x2730 + x2635 + x2637,
            x23 * x2733 + x2638 + x2641,
            x23 * x2735 + x2642 + x2643,
            x23 * x2737 + x2644 + x2645,
            x23 * x2739 + x2646 + x2647,
            x24 * x2695 + x2742,
            x24 * x2698 + x2746,
            x24 * x2701 + x2750,
            x24 * x2704 + x2752,
            x24 * x2707 + x2755,
            x24 * x2710 + x2757,
            x24 * x2712 + x2759,
            x24 * x2715 + x2762,
            x24 * x2718 + x2765,
            x24 * x2720 + x2766,
            x24 * x2722 + x2768,
            x24 * x2725 + x2770,
            x24 * x2727 + x2772,
            x24 * x2730 + x2774,
            x24 * x2733 + x2777,
            x24 * x2735 + x2778,
            x24 * x2737 + x2779,
            x24 * x2739 + x2780,
            x1656 + x22 * x2285 + x22 * (x22 * x2781 + x2285),
            x1697 + x22 * x2288 + x22 * (x22 * x2783 + x2288),
            x1730 + x22 * x2291 + x22 * (x22 * x2785 + x2291),
            x1748 + x22 * x2294 + x22 * (x22 * x2787 + x2294),
            x1765 + x22 * x2297 + x22 * (x22 * x2789 + x2297),
            x1781 + x22 * x2300 + x22 * (x22 * x2791 + x2300),
            x1788 + x22 * x2302 + x22 * (x22 * x2792 + x2302),
            x1796 + x22 * x2305 + x22 * (x22 * x2794 + x2305),
            x1804 + x22 * x2308 + x22 * (x22 * x2796 + x2308),
            x1812 + x22 * x2310 + x22 * (x22 * x2797 + x2310),
            x1821 + x22 * x2312 + x22 * (x22 * x2798 + x2312),
            x1830 + x22 * x2315 + x22 * (x22 * x2800 + x2315),
            x1838 + x22 * x2317 + x22 * (x22 * x2801 + x2317),
            x1841 + x22 * x2320 + x22 * (x22 * x2803 + x2320),
            x1849 + x22 * x2323 + x22 * (x22 * x2805 + x2323),
            x1851 + x22 * x2325 + x22 * (x22 * x2806 + x2325),
            x1853 + x22 * x2327 + x22 * (x22 * x2807 + x2327),
            x1861 + x22 * x2329 + x22 * (x22 * x2808 + x2329),
            x2141 + x22 * x2809 + x2285 * x23,
            x2154 + x22 * x2810 + x2288 * x23,
            x2167 + x22 * x2811 + x2291 * x23,
            x2174 + x22 * x2812 + x2294 * x23,
            x2182 + x22 * x2813 + x2297 * x23,
            x2189 + x22 * x2814 + x23 * x2300,
            x2193 + x22 * x2815 + x23 * x2302,
            x2198 + x22 * x2816 + x23 * x2305,
            x22 * x2817 + x2203 + x23 * x2308,
            x22 * x2818 + x2207 + x23 * x2310,
            x22 * x2819 + x2212 + x23 * x2312,
            x22 * x2820 + x2217 + x23 * x2315,
            x22 * x2821 + x2222 + x23 * x2317,
            x22 * x2822 + x2225 + x23 * x2320,
            x22 * x2823 + x2230 + x23 * x2323,
            x22 * x2824 + x2232 + x23 * x2325,
            x22 * x2825 + x2234 + x23 * x2327,
            x22 * x2826 + x2238 + x23 * x2329,
            x22 * x2828 + x2364,
            x22 * x2831 + x2376,
            x22 * x2834 + x2388,
            x22 * x2837 + x2394,
            x22 * x2840 + x2401,
            x22 * x2843 + x2407,
            x22 * x2845 + x2410,
            x22 * x2848 + x2414,
            x22 * x2851 + x2418,
            x22 * x2853 + x2421,
            x22 * x2855 + x2425,
            x22 * x2858 + x2429,
            x22 * x2860 + x2432,
            x22 * x2863 + x2434,
            x22 * x2866 + x2438,
            x22 * x2868 + x2439,
            x22 * x2870 + x2440,
            x22 * x2872 + x2443,
            x23 * x2694 + x23 * x2809 + x2591,
            x23 * x2697 + x23 * x2810 + x2596,
            x23 * x2700 + x23 * x2811 + x2601,
            x23 * x2703 + x23 * x2812 + x2604,
            x23 * x2706 + x23 * x2813 + x2608,
            x23 * x2709 + x23 * x2814 + x2611,
            x23 * x2711 + x23 * x2815 + x2614,
            x23 * x2714 + x23 * x2816 + x2618,
            x23 * x2717 + x23 * x2817 + x2622,
            x23 * x2719 + x23 * x2818 + x2624,
            x23 * x2721 + x23 * x2819 + x2627,
            x23 * x2724 + x23 * x2820 + x2630,
            x23 * x2726 + x23 * x2821 + x2634,
            x23 * x2729 + x23 * x2822 + x2637,
            x23 * x2732 + x23 * x2823 + x2641,
            x23 * x2734 + x23 * x2824 + x2643,
            x23 * x2736 + x23 * x2825 + x2645,
            x23 * x2738 + x23 * x2826 + x2647,
            x23 * x2828 + x2742,
            x23 * x2831 + x2746,
            x23 * x2834 + x2750,
            x23 * x2837 + x2752,
            x23 * x2840 + x2755,
            x23 * x2843 + x2757,
            x23 * x2845 + x2759,
            x23 * x2848 + x2762,
            x23 * x2851 + x2765,
            x23 * x2853 + x2766,
            x23 * x2855 + x2768,
            x23 * x2858 + x2770,
            x23 * x2860 + x2772,
            x23 * x2863 + x2774,
            x23 * x2866 + x2777,
            x23 * x2868 + x2778,
            x23 * x2870 + x2779,
            x23 * x2872 + x2780,
            3 * x1594
            + x2359 * x697
            - x2363 * x704
            + x24 * x2827
            + x24 * x2828
            + x26 * x2873
            + x26 * (x26 * x2874 + x2873),
            x24 * x2830 + x24 * x2831 + x26 * x2876 + x27 * x2873 + x2877,
            x24 * x2833 + x24 * x2834 + x26 * x2879 + x28 * x2873 + x2880,
            x24 * x2836 + x24 * x2837 + x27 * x2876 + x2881,
            x24 * x2839 + x24 * x2840 + x27 * x2879 + x2883,
            x24 * x2842 + x24 * x2843 + x28 * x2879 + x2884,
            x24 * x2844 + x24 * x2845 + x26 * x2875 + x26 * (x26 * x2885 + x2875) + x2877,
            x24 * x2847 + x24 * x2848 + x26 * x2887 + x2881,
            x24 * x2850 + x24 * x2851 + x26 * x2889 + x2883,
            3 * x1809
            + x24 * x2852
            + x24 * x2853
            + x2419 * x697
            - x2420 * x704
            + x27 * x2886
            + x27 * x2887,
            x24 * x2854 + x24 * x2855 + x27 * x2889 + x28 * x2886 + x2890,
            x24 * x2857 + x24 * x2858 + x28 * x2889 + x2891,
            x24 * x2859 + x24 * x2860 + x26 * x2878 + x26 * (x26 * x2892 + x2878) + x2880,
            x24 * x2862 + x24 * x2863 + x26 * x2893 + x27 * x2878 + x2882,
            x24 * x2865 + x24 * x2866 + x26 * x2895 + x2884,
            x24 * x2867 + x24 * x2868 + x27 * x2888 + x27 * x2893 + x2890,
            x24 * x2869 + x24 * x2870 + x27 * x2895 + x2891,
            3 * x1858
            + x24 * x2871
            + x24 * x2872
            + x2441 * x697
            - x2442 * x704
            + x28 * x2894
            + x28 * x2895
            + x78
            * (
                3 * x1774
                + x2402 * x697
                - x2403 * x704
                + x76
                * (
                    3 * x1723
                    + x2378 * x697
                    - x2384 * x704
                    + x70 * (3 * x1654 + x2352 * x697 - x2361 * x704)
                )
            ),
        ]
    )
    return S


def eri_2220(a, A, b, B, c, C, d, D):
    """Cartesian [dd|ds] 2-electron electron repulsion integral.

    Generated code; DO NOT modify by hand!"""

    x0 = 2 * a + 2 * b
    x1 = x0 ** (-1.0)
    x2 = 2 * c + 2 * d
    x3 = x2 ** (-1.0)
    x4 = numpy.pi**2.5
    x5 = a + b
    x6 = c + d
    x7 = x5 * x6
    x8 = x5 + x6
    x9 = (x7 + numpy.sqrt(x8)) ** (-1.0)
    x10 = x5 ** (-1.0)
    x11 = A[0] - B[0]
    x12 = A[1] - B[1]
    x13 = A[2] - B[2]
    x14 = numpy.exp(-a * b * x10 * (x11**2 + x12**2 + x13**2))
    x15 = x6 ** (-1.0)
    x16 = numpy.exp(
        -c * d * x15 * ((C[0] - D[0]) ** 2 + (C[1] - D[1]) ** 2 + (C[2] - D[2]) ** 2)
    )
    x17 = x8 ** (-1.0)
    x18 = x15 * (c * C[0] + d * D[0])
    x19 = -x10 * (a * A[0] + b * B[0])
    x20 = -x18 - x19
    x21 = x15 * (c * C[1] + d * D[1])
    x22 = -x10 * (a * A[1] + b * B[1])
    x23 = -x21 - x22
    x24 = -x10 * (a * A[2] + b * B[2])
    x25 = -x15 * (c * C[2] + d * D[2]) - x24
    x26 = x17 * x7 * (x20**2 + x23**2 + x25**2)
    x27 = boys(2, x26)
    x28 = -2 * x14 * x16 * x27 * x4 * x9
    x29 = x17 * x5
    x30 = boys(3, x26)
    x31 = 2 * x14 * x16 * x4 * x9
    x32 = x30 * x31
    x33 = x3 * (-x28 - x29 * x32)
    x34 = x18 - C[0]
    x35 = x27 * x31
    x36 = x20 * x29
    x37 = x32 * x36 + x34 * x35
    x38 = boys(4, x26)
    x39 = x31 * x38
    x40 = x32 * x34 + x36 * x39
    x41 = x33 + x34 * x37 + x36 * x40
    x42 = x17 * x6
    x43 = x41 * x42
    x44 = boys(1, x26)
    x45 = x3 * (2 * x14 * x16 * x4 * x44 * x9 - x29 * x35)
    x46 = x31 * x44
    x47 = x34 * x46 + x35 * x36
    x48 = x34 * x47 + x36 * x37 + x45
    x49 = x1 * (-x43 + x48)
    x50 = -x19 - A[0]
    x51 = x0 + x2
    x52 = x51 ** (-1.0)
    x53 = x20 * x42
    x54 = x39 * x53
    x55 = x32 * x50 - x54
    x56 = x40 * x42
    x57 = -x20 * x56 + x37 * x50 + x52 * x55
    x58 = 2 * x52
    x59 = -x20 * x43 + x48 * x50 + x57 * x58
    x60 = -2 * x14 * x16 * x30 * x4 * x9
    x61 = x3 * (-x29 * x39 - x60)
    x62 = x31 * boys(5, x26)
    x63 = x34 * x39 + x36 * x62
    x64 = x34 * x40 + x36 * x63 + x61
    x65 = x42 * x64
    x66 = x39 * x50 - x53 * x62
    x67 = x42 * x63
    x68 = -x20 * x67 + x40 * x50 + x52 * x66
    x69 = -x20 * x65 + x41 * x50 + x58 * x68
    x70 = x42 * x69
    x71 = x1 * (x37 - x56)
    x72 = x1 * (-x39 * x42 - x60)
    x73 = x42 * x66
    x74 = -x20 * x73 + x50 * x55 + x72
    x75 = x42 * x68
    x76 = -x20 * x75 + x50 * x57 + x52 * x74 + x71
    x77 = -x20 * x70 + x49 + x50 * x59 + x58 * x76
    x78 = x42 * x77
    x79 = x42 * x48
    x80 = boys(0, x26)
    x81 = x3 * (2 * x14 * x16 * x4 * x80 * x9 - x29 * x46)
    x82 = x31 * x80
    x83 = x34 * (x34 * x82 + x36 * x46) + x36 * x47 + x81
    x84 = x1 * (-x79 + x83)
    x85 = x32 * x53
    x86 = x35 * x50 - x85
    x87 = x37 * x42
    x88 = -x20 * x87 + x47 * x50 + x52 * x86
    x89 = -x20 * x79 + x50 * x83 + x58 * x88
    x90 = x42 * x59
    x91 = x1 * (x47 - x87)
    x92 = x1 * (-x28 - x32 * x42)
    x93 = x42 * x55
    x94 = -x20 * x93 + x50 * x86 + x92
    x95 = x42 * x57
    x96 = -x20 * x95 + x50 * x88 + x52 * x94 + x91
    x97 = -x20 * x90 + x50 * x89 + x58 * x96 + x84
    x98 = 3 * x1
    x99 = x42 * x74
    x100 = 2 * x1
    x101 = (
        x100 * (2 * x14 * x16 * x27 * x4 * x50 * x9 - x85 - x93) - x20 * x99 + x50 * x94
    )
    x102 = -2 * x14 * x16 * x38 * x4 * x9
    x103 = x1 * (-x102 - x42 * x62)
    x104 = x31 * boys(6, x26)
    x105 = -x104 * x53 + x50 * x62
    x106 = x103 - x105 * x53 + x50 * x66
    x107 = (
        x100 * (2 * x14 * x16 * x30 * x4 * x50 * x9 - x54 - x73) - x106 * x53 + x50 * x74
    )
    x108 = x42 * x76
    x109 = x100 * (x88 - x95) + x101 * x52 - x108 * x20 + x50 * x96
    x110 = x1 * (x40 - x67)
    x111 = x104 * x36 + x34 * x62
    x112 = x105 * x52 - x111 * x53 + x50 * x63
    x113 = x106 * x52 + x110 - x112 * x53 + x50 * x68
    x114 = x100 * (x57 - x75) + x107 * x52 - x113 * x53 + x50 * x76
    x115 = x100 * (x89 - x90) + x109 * x58 - x20 * x78 + x50 * x97
    x116 = x1 * (x41 - x65)
    x117 = x3 * (-x102 - x29 * x62)
    x118 = x111 * x36 + x117 + x34 * x63
    x119 = x21 - C[1]
    x120 = x23 * x29
    x121 = x119 * x32 + x120 * x39
    x122 = x121 * x42
    x123 = x119 * x35 + x120 * x32
    x124 = x1 * (-x122 + x123)
    x125 = x122 * x20
    x126 = x123 * x50 - x125
    x127 = x119 * x39 + x120 * x62
    x128 = x127 * x42
    x129 = x121 * x50 - x128 * x20
    x130 = x129 * x42
    x131 = x124 + x126 * x50 - x130 * x20
    x132 = x131 * x42
    x133 = x123 * x42
    x134 = x119 * x46 + x120 * x35
    x135 = x1 * (-x133 + x134)
    x136 = x133 * x20
    x137 = x134 * x50 - x136
    x138 = x126 * x42
    x139 = x135 + x137 * x50 - x138 * x20
    x140 = x100 * (x134 * x50 - x136 - x138) - x132 * x20 + x139 * x50
    x141 = x1 * (x121 - x128)
    x142 = x104 * x120 + x119 * x62
    x143 = x127 * x50 - x142 * x53
    x144 = x129 * x50 + x141 - x143 * x53
    x145 = x100 * (x123 * x50 - x125 - x130) + x131 * x50 - x144 * x53
    x146 = x121 * x36 + x123 * x34
    x147 = x146 * x42
    x148 = x123 * x36 + x134 * x34
    x149 = x1 * (-x147 + x148)
    x150 = x126 * x52 - x147 * x20 + x148 * x50
    x151 = x121 * x34 + x127 * x36
    x152 = x151 * x42
    x153 = x129 * x52 + x146 * x50 - x152 * x20
    x154 = x153 * x42
    x155 = x131 * x52 + x149 + x150 * x50 - x154 * x20
    x156 = x155 * x42
    x157 = x148 * x42
    x158 = x119 * x82 + x120 * x46
    x159 = x134 * x36 + x158 * x34
    x160 = x1 * (-x157 + x159)
    x161 = x137 * x52 - x157 * x20 + x159 * x50
    x162 = x150 * x42
    x163 = x139 * x52 + x160 + x161 * x50 - x162 * x20
    x164 = x100 * (x161 - x162) + x140 * x52 - x156 * x20 + x163 * x50
    x165 = x1 * (x146 - x152)
    x166 = x127 * x34 + x142 * x36
    x167 = x119 * x123 + x120 * x121 + x33
    x168 = x167 * x42
    x169 = x119 * x134 + x120 * x123 + x45
    x170 = x1 * (-x168 + x169)
    x171 = x168 * x20
    x172 = x169 * x50 - x171
    x173 = x119 * x121 + x120 * x127 + x61
    x174 = x173 * x42
    x175 = x167 * x50 - x174 * x20
    x176 = x175 * x42
    x177 = x170 + x172 * x50 - x176 * x20
    x178 = x177 * x42
    x179 = x169 * x42
    x180 = x119 * x158 + x120 * x134 + x81
    x181 = x1 * (-x179 + x180)
    x182 = x179 * x20
    x183 = x172 * x42
    x184 = x181 - x183 * x20 + x50 * (x180 * x50 - x182)
    x185 = x100 * (x180 * x50 - x182 - x183) - x178 * x20 + x184 * x50
    x186 = x1 * (x167 - x174)
    x187 = x117 + x119 * x127 + x120 * x142
    x188 = -x22 - A[1]
    x189 = x23 * x79
    x190 = x23 * x43
    x191 = x188 * x48 - x190
    x192 = x191 * x42
    x193 = x1 * (x188 * x83 - x189 - x192)
    x194 = x188 * x83 - x189
    x195 = x23 * x42
    x196 = x195 * x32
    x197 = x188 * x35 - x196
    x198 = x195 * x39
    x199 = x188 * x32 - x198
    x200 = x199 * x42
    x201 = x20 * x200
    x202 = x197 * x50 - x201
    x203 = x23 * x87
    x204 = x188 * x47 - x203
    x205 = x23 * x56
    x206 = x188 * x37 - x205
    x207 = x206 * x42
    x208 = -x20 * x207 + x202 * x52 + x204 * x50
    x209 = -x192 * x20 + x194 * x50 + x208 * x58
    x210 = x188 * x41 - x23 * x65
    x211 = x210 * x42
    x212 = x188 * x39 - x195 * x62
    x213 = x212 * x42
    x214 = x199 * x50 - x20 * x213
    x215 = x188 * x40 - x23 * x67
    x216 = x215 * x42
    x217 = -x20 * x216 + x206 * x50 + x214 * x52
    x218 = x191 * x50 - x20 * x211 + x217 * x58
    x219 = x218 * x42
    x220 = x1 * (x188 * x47 - x203 - x207)
    x221 = x1 * (2 * x14 * x16 * x188 * x27 * x4 * x9 - x196 - x200)
    x222 = x214 * x42
    x223 = -x20 * x222 + x202 * x50 + x221
    x224 = x217 * x42
    x225 = -x20 * x224 + x208 * x50 + x220 + x223 * x52
    x226 = x193 - x20 * x219 + x209 * x50 + x225 * x58
    x227 = x12 * x97 + x226
    x228 = x1 * (2 * x14 * x16 * x188 * x30 * x4 * x9 - x198 - x213)
    x229 = -x104 * x195 + x188 * x62
    x230 = x212 * x50 - x229 * x53
    x231 = x214 * x50 + x228 - x230 * x53
    x232 = x1 * (x188 * x37 - x205 - x216)
    x233 = -x111 * x195 + x188 * x63
    x234 = x215 * x50 + x230 * x52 - x233 * x53
    x235 = x217 * x50 + x231 * x52 + x232 - x234 * x53
    x236 = x1 * (x188 * x48 - x190 - x211)
    x237 = -x118 * x195 + x188 * x64
    x238 = (
        x100 * (x209 - x219)
        + x226 * x50
        - x53
        * (x218 * x50 + x235 * x58 + x236 - x53 * (x210 * x50 + x234 * x58 - x237 * x53))
        + x58
        * (
            x100 * (x208 - x224)
            + x225 * x50
            - x235 * x53
            + x52 * (x100 * (x197 * x50 - x201 - x222) + x223 * x50 - x231 * x53)
        )
    )
    x239 = -x147 * x23 + x148 * x188 + x206 * x52
    x240 = x239 * x42
    x241 = -x157 * x23 + x159 * x188 + x204 * x52
    x242 = x1 * (-x240 + x241)
    x243 = -x122 * x23 + x123 * x188 + x199 * x52
    x244 = x243 * x42
    x245 = -x133 * x23 + x134 * x188 + x197 * x52
    x246 = x1 * (-x244 + x245)
    x247 = x20 * x244
    x248 = x245 * x50 - x247
    x249 = x121 * x188 - x128 * x23 + x212 * x52
    x250 = x249 * x42
    x251 = -x20 * x250 + x243 * x50
    x252 = x251 * x42
    x253 = -x20 * x252 + x246 + x248 * x50
    x254 = -x20 * x240 + x241 * x50 + x248 * x52
    x255 = x146 * x188 - x152 * x23 + x215 * x52
    x256 = x255 * x42
    x257 = -x20 * x256 + x239 * x50 + x251 * x52
    x258 = x257 * x42
    x259 = -x20 * x258 + x242 + x253 * x52 + x254 * x50
    x260 = x12 * x163 + x259
    x261 = x1 * (x243 - x250)
    x262 = x127 * x188 - x142 * x195 + x229 * x52
    x263 = x249 * x50 - x262 * x53
    x264 = x251 * x50 + x261 - x263 * x53
    x265 = x1 * (x239 - x256)
    x266 = x151 * x188 - x166 * x195 + x233 * x52
    x267 = (
        x100 * (x254 - x258)
        + x259 * x50
        + x52 * (x100 * (x245 * x50 - x247 - x252) + x253 * x50 - x264 * x53)
        - x53
        * (x257 * x50 + x264 * x52 + x265 - x53 * (x255 * x50 + x263 * x52 - x266 * x53))
    )
    x268 = -x168 * x23 + x169 * x188 + x243 * x58
    x269 = x268 * x42
    x270 = -x179 * x23 + x180 * x188 + x245 * x58
    x271 = x1 * (-x269 + x270)
    x272 = x20 * x269
    x273 = x270 * x50 - x272
    x274 = x167 * x188 - x174 * x23 + x249 * x58
    x275 = x274 * x42
    x276 = -x20 * x275 + x268 * x50
    x277 = x276 * x42
    x278 = -x20 * x277 + x271 + x273 * x50
    x279 = x12 * x184 + x278
    x280 = x1 * (x268 - x275)
    x281 = x173 * x188 - x187 * x195 + x262 * x58
    x282 = (
        x100 * (x270 * x50 - x272 - x277)
        + x278 * x50
        - x53 * (x276 * x50 + x280 - x53 * (x274 * x50 - x281 * x53))
    )
    x283 = -x24 - A[2]
    x284 = x25 * x79
    x285 = x25 * x43
    x286 = x283 * x48 - x285
    x287 = x286 * x42
    x288 = x1 * (x283 * x83 - x284 - x287)
    x289 = x283 * x83 - x284
    x290 = x25 * x42
    x291 = x290 * x32
    x292 = x283 * x35 - x291
    x293 = x292 * x50
    x294 = x290 * x39
    x295 = x283 * x32 - x294
    x296 = x295 * x42
    x297 = x20 * x296
    x298 = x293 - x297
    x299 = x25 * x87
    x300 = x283 * x47 - x299
    x301 = x300 * x50
    x302 = x25 * x56
    x303 = x283 * x37 - x302
    x304 = x303 * x42
    x305 = -x20 * x304 + x298 * x52 + x301
    x306 = -x20 * x287 + x289 * x50 + x305 * x58
    x307 = -x25 * x65 + x283 * x41
    x308 = x307 * x42
    x309 = x295 * x50
    x310 = x283 * x39 - x290 * x62
    x311 = x310 * x42
    x312 = x20 * x311
    x313 = x309 - x312
    x314 = x303 * x50
    x315 = -x25 * x67 + x283 * x40
    x316 = x315 * x42
    x317 = x20 * x316
    x318 = x313 * x52 + x314 - x317
    x319 = -x20 * x308 + x286 * x50 + x318 * x58
    x320 = x319 * x42
    x321 = x1 * (x283 * x47 - x299 - x304)
    x322 = x1 * (2 * x14 * x16 * x27 * x283 * x4 * x9 - x291 - x296)
    x323 = x313 * x42
    x324 = -x20 * x323 + x298 * x50 + x322
    x325 = x318 * x42
    x326 = -x20 * x325 + x305 * x50 + x321 + x324 * x52
    x327 = -x20 * x320 + x288 + x306 * x50 + x326 * x58
    x328 = x13 * x97 + x327
    x329 = x1 * (2 * x14 * x16 * x283 * x30 * x4 * x9 - x294 - x311)
    x330 = x310 * x50
    x331 = -x104 * x290 + x283 * x62
    x332 = x331 * x53
    x333 = x330 - x332
    x334 = x313 * x50 + x329 - x333 * x53
    x335 = x1 * (x283 * x37 - x302 - x316)
    x336 = x315 * x50
    x337 = -x111 * x290 + x283 * x63
    x338 = x337 * x53
    x339 = x333 * x52 + x336 - x338
    x340 = x318 * x50 + x334 * x52 + x335 - x339 * x53
    x341 = x1 * (x283 * x48 - x285 - x308)
    x342 = -x118 * x290 + x283 * x64
    x343 = (
        x100 * (x306 - x320)
        + x327 * x50
        - x53
        * (x319 * x50 + x340 * x58 + x341 - x53 * (x307 * x50 + x339 * x58 - x342 * x53))
        + x58
        * (
            x100 * (x305 - x325)
            + x326 * x50
            - x340 * x53
            + x52 * (x100 * (x292 * x50 - x297 - x323) + x324 * x50 - x334 * x53)
        )
    )
    x344 = x157 * x25
    x345 = x147 * x25
    x346 = x148 * x283 - x345
    x347 = x346 * x42
    x348 = x1 * (x159 * x283 - x344 - x347)
    x349 = x133 * x25
    x350 = x122 * x25
    x351 = x123 * x283 - x350
    x352 = x351 * x42
    x353 = x1 * (x134 * x283 - x349 - x352)
    x354 = x134 * x283 - x349
    x355 = x354 * x50
    x356 = x20 * x352
    x357 = x355 - x356
    x358 = x351 * x50
    x359 = x121 * x283 - x128 * x25
    x360 = x359 * x42
    x361 = x20 * x360
    x362 = x358 - x361
    x363 = x362 * x42
    x364 = -x20 * x363 + x353 + x357 * x50
    x365 = x159 * x283 - x344
    x366 = -x20 * x347 + x357 * x52 + x365 * x50
    x367 = x146 * x283 - x152 * x25
    x368 = x367 * x42
    x369 = -x20 * x368 + x346 * x50 + x362 * x52
    x370 = x369 * x42
    x371 = -x20 * x370 + x348 + x364 * x52 + x366 * x50
    x372 = x13 * x163 + x371
    x373 = x1 * (x123 * x283 - x350 - x360)
    x374 = x359 * x50
    x375 = x127 * x283 - x142 * x290
    x376 = x375 * x53
    x377 = x374 - x376
    x378 = x362 * x50 + x373 - x377 * x53
    x379 = x1 * (x148 * x283 - x345 - x368)
    x380 = x151 * x283 - x166 * x290
    x381 = (
        x100 * (x366 - x370)
        + x371 * x50
        + x52 * (x100 * (x354 * x50 - x356 - x363) + x364 * x50 - x378 * x53)
        - x53
        * (x369 * x50 + x378 * x52 + x379 - x53 * (x367 * x50 + x377 * x52 - x380 * x53))
    )
    x382 = x309 * x52 - x312 * x52
    x383 = x314 * x52 - x317 * x52 + x382 * x52
    x384 = x383 * x42
    x385 = x295 * x52
    x386 = x385 * x53
    x387 = x293 * x52 - x386
    x388 = x303 * x52
    x389 = x301 * x52 + x387 * x52 - x388 * x53
    x390 = x382 * x42
    x391 = x1 * (x292 * x52 - x385 * x42)
    x392 = -x20 * x390 + x387 * x50 + x391
    x393 = x311 * x52
    x394 = x1 * (x295 * x52 - x393)
    x395 = x330 * x52 - x332 * x52
    x396 = x382 * x50 + x394 - x395 * x53
    x397 = x1 * (x300 * x52 - x388 * x42)
    x398 = -x20 * x384 + x389 * x50 + x392 * x52 + x397
    x399 = x316 * x52
    x400 = x1 * (x303 * x52 - x399)
    x401 = (
        x100 * (-x384 + x389)
        + x11 * x398
        + x398 * x50
        + x52 * (x100 * (x292 * x50 * x52 - x386 - x390) + x392 * x50 - x396 * x53)
        - x53
        * (x383 * x50 + x396 * x52 + x400 - x53 * (x336 * x52 - x338 * x52 + x395 * x52))
    )
    x402 = x179 * x25
    x403 = x168 * x25
    x404 = x169 * x283 - x403
    x405 = x404 * x42
    x406 = x1 * (x180 * x283 - x402 - x405)
    x407 = x180 * x283 - x402
    x408 = x20 * x405
    x409 = x407 * x50 - x408
    x410 = x167 * x283 - x174 * x25
    x411 = x410 * x42
    x412 = -x20 * x411 + x404 * x50
    x413 = x412 * x42
    x414 = -x20 * x413 + x406 + x409 * x50
    x415 = x13 * x184 + x414
    x416 = x1 * (x169 * x283 - x403 - x411)
    x417 = x173 * x283 - x187 * x290
    x418 = (
        x100 * (x407 * x50 - x408 - x413)
        + x414 * x50
        - x53 * (x412 * x50 + x416 - x53 * (x410 * x50 - x417 * x53))
    )
    x419 = x351 * x52
    x420 = x419 * x53
    x421 = x358 * x52 - x361 * x52
    x422 = x42 * x421
    x423 = x1 * (x354 * x52 - x419 * x42)
    x424 = x355 * x52 - x420
    x425 = -x20 * x422 + x423 + x424 * x50
    x426 = x360 * x52
    x427 = x1 * (x351 * x52 - x426)
    x428 = (
        x100 * (x354 * x50 * x52 - x420 - x422)
        + x11 * x425
        + x425 * x50
        - x53 * (x421 * x50 + x427 - x53 * (x374 * x52 - x376 * x52))
    )
    x429 = x51 ** (-2.0)
    x430 = 2 * x429
    x431 = x297 * x430
    x432 = x309 * x430 - x312 * x430
    x433 = x42 * x432
    x434 = x1 * (2 * x292 * x429 - x296 * x430)
    x435 = x293 * x430 - x431
    x436 = -x20 * x433 + x434 + x435 * x50
    x437 = x1 * (2 * x295 * x429 - x311 * x430)
    x438 = (
        x100 * (2 * x292 * x429 * x50 - x431 - x433)
        + x11 * x436
        + x436 * x50
        - x53 * (x432 * x50 + x437 - x53 * (x330 * x430 - x332 * x430))
    )
    x439 = x188 * x191 - x211 * x23 + x49
    x440 = x42 * x439
    x441 = x188 * x194 - x192 * x23 + x84
    x442 = x1 * (-x440 + x441)
    x443 = x188 * x197 - x200 * x23 + x92
    x444 = x188 * x199 - x213 * x23 + x72
    x445 = x42 * x444
    x446 = -x20 * x445 + x443 * x50
    x447 = x188 * x204 - x207 * x23 + x91
    x448 = x188 * x206 - x216 * x23 + x71
    x449 = x42 * x448
    x450 = -x20 * x449 + x446 * x52 + x447 * x50
    x451 = -x20 * x440 + x441 * x50 + x450 * x58
    x452 = x1 * (x447 - x449)
    x453 = x1 * (x443 - x445)
    x454 = x103 + x188 * x212 - x195 * x229
    x455 = x444 * x50 - x454 * x53
    x456 = x110 + x188 * x215 - x195 * x233
    x457 = x448 * x50 + x455 * x52 - x456 * x53
    x458 = x116 + x188 * x210 - x195 * x237
    x459 = (
        x442
        + x451 * x50
        - x53 * (x439 * x50 + x457 * x58 - x458 * x53)
        + x58 * (x450 * x50 + x452 - x457 * x53 + x52 * (x446 * x50 + x453 - x455 * x53))
    )
    x460 = x12 * x226 + x459
    x461 = x149 + x188 * x239 - x23 * x256 + x448 * x52
    x462 = x42 * x461
    x463 = x160 + x188 * x241 - x23 * x240 + x447 * x52
    x464 = x1 * (-x462 + x463)
    x465 = x124 + x188 * x243 - x23 * x250 + x444 * x52
    x466 = x42 * x465
    x467 = x135 + x188 * x245 - x23 * x244 + x443 * x52
    x468 = x1 * (-x466 + x467)
    x469 = -x20 * x466 + x467 * x50
    x470 = x141 + x188 * x249 - x195 * x262 + x454 * x52
    x471 = x465 * x50 - x470 * x53
    x472 = -x20 * x462 + x463 * x50 + x469 * x52
    x473 = x165 + x188 * x255 - x195 * x266 + x456 * x52
    x474 = (
        x464
        + x472 * x50
        + x52 * (x468 + x469 * x50 - x471 * x53)
        - x53 * (x461 * x50 + x471 * x52 - x473 * x53)
    )
    x475 = x12 * x259 + x474
    x476 = x170 + x188 * x268 - x23 * x275 + x465 * x58
    x477 = x42 * x476
    x478 = x181 + x188 * x270 - x23 * x269 + x467 * x58
    x479 = x1 * (-x477 + x478)
    x480 = -x20 * x477 + x478 * x50
    x481 = x186 + x188 * x274 - x195 * x281 + x470 * x58
    x482 = x479 + x480 * x50 - x53 * (x476 * x50 - x481 * x53)
    x483 = x12 * x278 + x482
    x484 = x23 * x287
    x485 = x188 * x286 - x23 * x308
    x486 = x42 * x485
    x487 = x1 * (x188 * x289 - x484 - x486)
    x488 = x188 * x289 - x484
    x489 = x188 * x292
    x490 = x23 * x296
    x491 = x489 - x490
    x492 = x188 * x295
    x493 = x23 * x311
    x494 = x492 - x493
    x495 = x42 * x494
    x496 = -x20 * x495 + x491 * x50
    x497 = x23 * x304
    x498 = x188 * x300 - x497
    x499 = x188 * x303 - x23 * x316
    x500 = x42 * x499
    x501 = -x20 * x500 + x496 * x52 + x498 * x50
    x502 = -x20 * x486 + x488 * x50 + x501 * x58
    x503 = x1 * (x188 * x300 - x497 - x500)
    x504 = x1 * (x188 * x292 - x490 - x495)
    x505 = x188 * x310
    x506 = x195 * x331
    x507 = x505 - x506
    x508 = x494 * x50 - x507 * x53
    x509 = x188 * x315
    x510 = x195 * x337
    x511 = x509 - x510
    x512 = x499 * x50 + x508 * x52 - x511 * x53
    x513 = x188 * x307 - x195 * x342
    x514 = (
        x487
        + x50 * x502
        - x53 * (x485 * x50 + x512 * x58 - x513 * x53)
        + x58 * (x50 * x501 + x503 - x512 * x53 + x52 * (x496 * x50 + x504 - x508 * x53))
    )
    x515 = x13 * x226 + x514
    x516 = x188 * x346 - x23 * x368 + x499 * x52
    x517 = x42 * x516
    x518 = x188 * x365 - x23 * x347 + x498 * x52
    x519 = x1 * (-x517 + x518)
    x520 = x188 * x351 - x23 * x360 + x494 * x52
    x521 = x42 * x520
    x522 = x188 * x354 - x23 * x352 + x491 * x52
    x523 = x1 * (-x521 + x522)
    x524 = -x20 * x521 + x50 * x522
    x525 = x188 * x359
    x526 = x195 * x375
    x527 = x507 * x52 + x525 - x526
    x528 = x50 * x520 - x527 * x53
    x529 = -x20 * x517 + x50 * x518 + x52 * x524
    x530 = x188 * x367 - x195 * x380 + x511 * x52
    x531 = (
        x50 * x529
        + x519
        + x52 * (x50 * x524 + x523 - x528 * x53)
        - x53 * (x50 * x516 + x52 * x528 - x53 * x530)
    )
    x532 = x13 * x259 + x531
    x533 = x195 * x388
    x534 = x188 * x388 - x23 * x399
    x535 = x42 * x534
    x536 = x1 * (x188 * x300 * x52 - x533 - x535)
    x537 = x195 * x385
    x538 = x188 * x385 - x23 * x393
    x539 = x42 * x538
    x540 = x1 * (x188 * x292 * x52 - x537 - x539)
    x541 = x292 * x52
    x542 = x188 * x541 - x537
    x543 = -x20 * x539 + x50 * x542
    x544 = x505 * x52 - x506 * x52
    x545 = x50 * x538 - x53 * x544
    x546 = x300 * x52
    x547 = x188 * x546 - x533
    x548 = -x20 * x535 + x50 * x547 + x52 * x543
    x549 = x509 * x52 - x510 * x52
    x550 = (
        x50 * x548
        + x52 * (x50 * x543 - x53 * x545 + x540)
        - x53 * (x50 * x534 + x52 * x545 - x53 * x549)
        + x536
    )
    x551 = x12 * x398 + x550
    x552 = x188 * x404 - x23 * x411 + x520 * x58
    x553 = x42 * x552
    x554 = x188 * x407 - x23 * x405 + x522 * x58
    x555 = x1 * (-x553 + x554)
    x556 = -x20 * x553 + x50 * x554
    x557 = x188 * x410 - x195 * x417 + x527 * x58
    x558 = x50 * x556 - x53 * (x50 * x552 - x53 * x557) + x555
    x559 = x13 * x278 + x558
    x560 = x188 * x419 - x23 * x426 + x52 * x538
    x561 = x42 * x560
    x562 = x354 * x52
    x563 = x188 * x562 - x195 * x419 + x52 * x542
    x564 = x1 * (-x561 + x563)
    x565 = -x20 * x561 + x50 * x563
    x566 = x52 * x525 - x52 * x526 + x52 * x544
    x567 = x50 * x565 - x53 * (x50 * x560 - x53 * x566) + x564
    x568 = x12 * x425 + x567
    x569 = x430 * x490
    x570 = x430 * x492 - x430 * x493
    x571 = x42 * x570
    x572 = x1 * (2 * x188 * x292 * x429 - x569 - x571)
    x573 = x430 * x489 - x569
    x574 = -x20 * x571 + x50 * x573
    x575 = x430 * x505 - x430 * x506
    x576 = x50 * x574 - x53 * (x50 * x570 - x53 * x575) + x572
    x577 = x12 * x436 + x576
    x578 = -x25 * x308 + x283 * x286 + x49
    x579 = x42 * x578
    x580 = -x25 * x287 + x283 * x289 + x84
    x581 = x1 * (-x579 + x580)
    x582 = x283 * x292
    x583 = x25 * x296
    x584 = x582 - x583 + x92
    x585 = x283 * x295
    x586 = x25 * x311
    x587 = x585 - x586 + x72
    x588 = x42 * x587
    x589 = -x20 * x588 + x50 * x584
    x590 = -x25 * x304 + x283 * x300 + x91
    x591 = -x25 * x316 + x283 * x303 + x71
    x592 = x42 * x591
    x593 = -x20 * x592 + x50 * x590 + x52 * x589
    x594 = -x20 * x579 + x50 * x580 + x58 * x593
    x595 = x1 * (x590 - x592)
    x596 = x1 * (x584 - x588)
    x597 = x283 * x310
    x598 = x290 * x331
    x599 = x103 + x597 - x598
    x600 = x50 * x587 - x53 * x599
    x601 = x283 * x315
    x602 = x290 * x337
    x603 = x110 + x601 - x602
    x604 = x50 * x591 + x52 * x600 - x53 * x603
    x605 = x116 + x283 * x307 - x290 * x342
    x606 = (
        x50 * x594
        - x53 * (x50 * x578 - x53 * x605 + x58 * x604)
        + x58 * (x50 * x593 + x52 * (x50 * x589 - x53 * x600 + x596) - x53 * x604 + x595)
        + x581
    )
    x607 = x13 * x327 + x606
    x608 = x149 - x25 * x368 + x283 * x346
    x609 = x42 * x608
    x610 = x160 - x25 * x347 + x283 * x365
    x611 = x1 * (-x609 + x610)
    x612 = x124 - x25 * x360 + x283 * x351
    x613 = x42 * x612
    x614 = x135 - x25 * x352 + x283 * x354
    x615 = x1 * (-x613 + x614)
    x616 = -x20 * x613 + x50 * x614
    x617 = x283 * x359
    x618 = x290 * x375
    x619 = x141 + x617 - x618
    x620 = x50 * x612 - x53 * x619
    x621 = -x20 * x609 + x50 * x610 + x52 * x616
    x622 = x165 + x283 * x367 - x290 * x380
    x623 = (
        x50 * x621
        + x52 * (x50 * x616 - x53 * x620 + x615)
        - x53 * (x50 * x608 + x52 * x620 - x53 * x622)
        + x611
    )
    x624 = x13 * x371 + x623
    x625 = x13 * x398
    x626 = -x25 * x399 + x283 * x388 + x52 * x591
    x627 = x42 * x626
    x628 = x283 * x546 - x290 * x388 + x52 * x590
    x629 = x1 * (-x627 + x628)
    x630 = -x25 * x393 + x283 * x385 + x52 * x587
    x631 = x42 * x630
    x632 = x283 * x541 - x290 * x385 + x52 * x584
    x633 = x1 * (-x631 + x632)
    x634 = -x20 * x631 + x50 * x632
    x635 = x52 * x597 - x52 * x598 + x52 * x599
    x636 = x50 * x630 - x53 * x635
    x637 = -x20 * x627 + x50 * x628 + x52 * x634
    x638 = x52 * x601 - x52 * x602 + x52 * x603
    x639 = (
        x50 * x637
        + x52 * (x50 * x634 - x53 * x636 + x633)
        - x53 * (x50 * x626 + x52 * x636 - x53 * x638)
        + x629
    )
    x640 = x170 - x25 * x411 + x283 * x404
    x641 = x42 * x640
    x642 = x181 - x25 * x405 + x283 * x407
    x643 = x1 * (-x641 + x642)
    x644 = -x20 * x641 + x50 * x642
    x645 = x186 + x283 * x410 - x290 * x417
    x646 = x50 * x644 - x53 * (x50 * x640 - x53 * x645) + x643
    x647 = x13 * x414 + x646
    x648 = x13 * x425
    x649 = -x25 * x426 + x283 * x419 + x52 * x612
    x650 = x42 * x649
    x651 = x283 * x562 - x290 * x419 + x52 * x614
    x652 = x1 * (-x650 + x651)
    x653 = -x20 * x650 + x50 * x651
    x654 = x52 * x617 - x52 * x618 + x52 * x619
    x655 = x50 * x653 - x53 * (x50 * x649 - x53 * x654) + x652
    x656 = x13 * x436
    x657 = x430 * x585 - x430 * x586 + x58 * x630
    x658 = x42 * x657
    x659 = x430 * x582 - x430 * x583 + x58 * x632
    x660 = x1 * (-x658 + x659)
    x661 = -x20 * x658 + x50 * x659
    x662 = x430 * x597 - x430 * x598 + x58 * x635
    x663 = x50 * x661 - x53 * (x50 * x657 - x53 * x662) + x660
    x664 = x12 * x209 + x451
    x665 = x12 * x254 + x472
    x666 = x12 * x273 + x480
    x667 = x13 * x209 + x502
    x668 = x13 * x254 + x529
    x669 = x11 * x548 + x550
    x670 = x13 * x273 + x556
    x671 = x11 * x565 + x567
    x672 = x11 * x574 + x576
    x673 = x188 * x441 + 2 * x193 - x23 * x440
    x674 = x188 * x443 + 2 * x221 - x23 * x445
    x675 = x188 * x444 - x195 * x454 + 2 * x228
    x676 = x188 * x447 + 2 * x220 - x23 * x449
    x677 = x188 * x448 - x195 * x456 + 2 * x232
    x678 = x188 * x439 - x195 * x458 + 2 * x236
    x679 = (
        x12 * x451
        + x50 * x673
        - x53 * x678
        + x58 * (x50 * x676 + x52 * (x50 * x674 - x53 * x675) - x53 * x677)
    )
    x680 = x188 * x467 - x23 * x466 + 2 * x246 + x52 * x674
    x681 = x188 * x465 - x195 * x470 + 2 * x261 + x52 * x675
    x682 = x188 * x463 - x23 * x462 + 2 * x242 + x52 * x676
    x683 = x188 * x461 - x195 * x473 + 2 * x265 + x52 * x677
    x684 = x12 * x472 + x50 * x682 + x52 * (x50 * x680 - x53 * x681) - x53 * x683
    x685 = x188 * x478 - x23 * x477 + 2 * x271 + x58 * x680
    x686 = x188 * x476 - x195 * x481 + 2 * x280 + x58 * x681
    x687 = x12 * x480 + x50 * x685 - x53 * x686
    x688 = x188 * x488 - x23 * x486 + x288
    x689 = x188 * x491 - x23 * x495 + x322
    x690 = x188 * x494 - x195 * x507 + x329
    x691 = x188 * x498 - x23 * x500 + x321
    x692 = x188 * x499 - x195 * x511 + x335
    x693 = x188 * x485 - x195 * x513 + x341
    x694 = (
        x50 * x688
        - x53 * x693
        + x58 * (x50 * x691 + x52 * (x50 * x689 - x53 * x690) - x53 * x692)
    )
    x695 = x13 * x451 + x694
    x696 = x188 * x522 - x23 * x521 + x353 + x52 * x689
    x697 = x188 * x520 - x195 * x527 + x373 + x52 * x690
    x698 = x188 * x518 - x23 * x517 + x348 + x52 * x691
    x699 = x188 * x516 - x195 * x530 + x379 + x52 * x692
    x700 = x50 * x698 + x52 * (x50 * x696 - x53 * x697) - x53 * x699
    x701 = x13 * x472 + x700
    x702 = x188 * x542 - x23 * x539 + x391
    x703 = x188 * x538 - x195 * x544 + x394
    x704 = x188 * x547 - x23 * x535 + x397
    x705 = x188 * x534 - x195 * x549 + x400
    x706 = x50 * x704 + x52 * (x50 * x702 - x53 * x703) - x53 * x705
    x707 = x12 * x548 + x706
    x708 = x188 * x554 - x23 * x553 + x406 + x58 * x696
    x709 = x188 * x552 - x195 * x557 + x416 + x58 * x697
    x710 = x50 * x708 - x53 * x709
    x711 = x13 * x480 + x710
    x712 = x188 * x563 - x23 * x561 + x423 + x52 * x702
    x713 = x188 * x560 - x195 * x566 + x427 + x52 * x703
    x714 = x50 * x712 - x53 * x713
    x715 = x12 * x565 + x714
    x716 = x188 * x573 - x23 * x571 + x434
    x717 = x188 * x570 - x195 * x575 + x437
    x718 = x50 * x716 - x53 * x717
    x719 = x12 * x574 + x718
    x720 = x188 * x580 - x23 * x579
    x721 = x188 * x584 - x23 * x588
    x722 = x188 * x587 - x195 * x599
    x723 = x188 * x590 - x23 * x592
    x724 = x188 * x591 - x195 * x603
    x725 = x188 * x578 - x195 * x605
    x726 = (
        x50 * x720
        - x53 * x725
        + x58 * (x50 * x723 + x52 * (x50 * x721 - x53 * x722) - x53 * x724)
    )
    x727 = x13 * x502 + x726
    x728 = x188 * x614 - x23 * x613 + x52 * x721
    x729 = x188 * x612 - x195 * x619 + x52 * x722
    x730 = x188 * x610 - x23 * x609 + x52 * x723
    x731 = x188 * x608 - x195 * x622 + x52 * x724
    x732 = x50 * x730 + x52 * (x50 * x728 - x53 * x729) - x53 * x731
    x733 = x13 * x529 + x732
    x734 = x13 * x548
    x735 = x188 * x632 - x23 * x631
    x736 = x188 * x630 - x195 * x635
    x737 = x188 * x628 - x23 * x627
    x738 = x188 * x626 - x195 * x638
    x739 = x50 * x737 + x52 * (x50 * x735 - x53 * x736) - x53 * x738
    x740 = x188 * x642 - x23 * x641 + x58 * x728
    x741 = x188 * x640 - x195 * x645 + x58 * x729
    x742 = x50 * x740 - x53 * x741
    x743 = x13 * x556 + x742
    x744 = x13 * x565
    x745 = x188 * x651 - x23 * x650 + x52 * x735
    x746 = x188 * x649 - x195 * x654 + x52 * x736
    x747 = x50 * x745 - x53 * x746
    x748 = x13 * x574
    x749 = x188 * x659 - x23 * x658
    x750 = x188 * x657 - x195 * x662
    x751 = x50 * x749 - x53 * x750
    x752 = x12 * x306 + x502
    x753 = x12 * x366 + x529
    x754 = x12 * x389 + x548
    x755 = x12 * x409 + x556
    x756 = x12 * x424 + x565
    x757 = x12 * x435 + x574
    x758 = x13 * x306 + x594
    x759 = x13 * x366 + x621
    x760 = x13 * x389 + x637
    x761 = x13 * x409 + x644
    x762 = x13 * x424 + x653
    x763 = x13 * x435 + x661
    x764 = x12 * x502 + x694
    x765 = x12 * x529 + x700
    x766 = x12 * x556 + x710
    x767 = x734 + x739
    x768 = x744 + x747
    x769 = x748 + x751
    x770 = -x25 * x579 + x283 * x580 + 2 * x288
    x771 = -x25 * x588 + x283 * x584 + 2 * x322
    x772 = x283 * x587 - x290 * x599 + 2 * x329
    x773 = -x25 * x592 + x283 * x590 + 2 * x321
    x774 = x283 * x591 - x290 * x603 + 2 * x335
    x775 = x283 * x578 - x290 * x605 + 2 * x341
    x776 = (
        x13 * x594
        + x50 * x770
        - x53 * x775
        + x58 * (x50 * x773 + x52 * (x50 * x771 - x53 * x772) - x53 * x774)
    )
    x777 = -x25 * x613 + x283 * x614 + 2 * x353
    x778 = x283 * x612 - x290 * x619 + 2 * x373
    x779 = -x25 * x609 + x283 * x610 + 2 * x348
    x780 = x283 * x608 - x290 * x622 + 2 * x379
    x781 = x13 * x621 + x50 * x779 + x52 * (x50 * x777 - x53 * x778) - x53 * x780
    x782 = -x25 * x631 + x283 * x632 + 2 * x391 + x52 * x771
    x783 = x283 * x630 - x290 * x635 + 2 * x394 + x52 * x772
    x784 = -x25 * x627 + x283 * x628 + 2 * x397 + x52 * x773
    x785 = x283 * x626 - x290 * x638 + 2 * x400 + x52 * x774
    x786 = x13 * x637 + x50 * x784 + x52 * (x50 * x782 - x53 * x783) - x53 * x785
    x787 = -x25 * x641 + x283 * x642 + 2 * x406
    x788 = x283 * x640 - x290 * x645 + 2 * x416
    x789 = x13 * x644 + x50 * x787 - x53 * x788
    x790 = -x25 * x650 + x283 * x651 + 2 * x423 + x52 * x777
    x791 = x283 * x649 - x290 * x654 + 2 * x427 + x52 * x778
    x792 = x13 * x653 + x50 * x790 - x53 * x791
    x793 = -x25 * x658 + x283 * x659 + 2 * x434 + x58 * x782
    x794 = x283 * x657 - x290 * x662 + 2 * x437 + x58 * x783
    x795 = x13 * x661 + x50 * x793 - x53 * x794
    x796 = x12 * x441 + x673
    x797 = x12 * x463 + x682
    x798 = x12 * x478 + x685
    x799 = x13 * x441 + x688
    x800 = x13 * x463 + x698
    x801 = x13 * x478 + x708
    x802 = x188 * x688 - x195 * x693 + 2 * x487
    x803 = (
        x188 * x698
        - x195 * x699
        + 2 * x519
        + x52 * (x188 * x691 - x195 * x692 + 2 * x503)
    )
    x804 = x12 * x704 + x188 * x704 - x195 * x705 + 2 * x536
    x805 = (
        x188 * x708
        - x195 * x709
        + 2 * x555
        + x58
        * (
            x188 * x696
            - x195 * x697
            + x52 * (x188 * x689 - x195 * x690 + 2 * x504)
            + 2 * x523
        )
    )
    x806 = (
        x12 * x712
        + x188 * x712
        - x195 * x713
        + x52 * (x188 * x702 - x195 * x703 + 2 * x540)
        + 2 * x564
    )
    x807 = x12 * x716 + x188 * x716 - x195 * x717 + 2 * x572
    x808 = x188 * x720 - x195 * x725 + x581
    x809 = x13 * x688 + x808
    x810 = x188 * x730 - x195 * x731 + x52 * (x188 * x723 - x195 * x724 + x595) + x611
    x811 = x13 * x698 + x810
    x812 = x13 * x704
    x813 = x188 * x737 - x195 * x738 + x629
    x814 = (
        x188 * x740
        - x195 * x741
        + x58
        * (x188 * x728 - x195 * x729 + x52 * (x188 * x721 - x195 * x722 + x596) + x615)
        + x643
    )
    x815 = x13 * x708 + x814
    x816 = x13 * x712
    x817 = x188 * x745 - x195 * x746 + x52 * (x188 * x735 - x195 * x736 + x633) + x652
    x818 = x13 * x716
    x819 = x188 * x749 - x195 * x750 + x660
    x820 = x12 * x488 + x688
    x821 = x12 * x518 + x698
    x822 = x12 * x547 + x704
    x823 = x12 * x554 + x708
    x824 = x12 * x563 + x712
    x825 = x12 * x573 + x716
    x826 = x13 * x488 + x720
    x827 = x13 * x518 + x730
    x828 = x13 * x547 + x737
    x829 = x13 * x554 + x740
    x830 = x13 * x563 + x745
    x831 = x13 * x573 + x749
    x832 = x13 * x720 + x188 * x770 - x195 * x775
    x833 = x13 * x730 + x188 * x779 - x195 * x780 + x52 * (x188 * x773 - x195 * x774)
    x834 = x13 * x737 + x188 * x784 - x195 * x785
    x835 = (
        x13 * x740
        + x188 * x787
        - x195 * x788
        + x58 * (x188 * x777 - x195 * x778 + x52 * (x188 * x771 - x195 * x772))
    )
    x836 = x13 * x745 + x188 * x790 - x195 * x791 + x52 * (x188 * x782 - x195 * x783)
    x837 = x13 * x749 + x188 * x793 - x195 * x794
    x838 = x12 * x580 + x720
    x839 = x12 * x610 + x730
    x840 = x12 * x628 + x737
    x841 = x12 * x642 + x740
    x842 = x12 * x651 + x745
    x843 = x12 * x659 + x749
    x844 = x13 * x580 + x770
    x845 = x13 * x610 + x779
    x846 = x13 * x628 + x784
    x847 = x13 * x642 + x787
    x848 = x13 * x651 + x790
    x849 = x13 * x659 + x793

    # 216 item(s)
    S = numpy.array(
        [
            x11 * x115
            + x11 * (x11 * x97 + x115)
            + x115 * x50
            - x53
            * (
                x100 * (x59 - x70)
                + x114 * x58
                + x50 * x77
                - x53
                * (
                    x113 * x58
                    + x116
                    + x50 * x69
                    - x53 * (x112 * x58 - x118 * x53 + x50 * x64)
                )
            )
            + x58
            * (
                x109 * x50
                - x114 * x53
                + x52 * (x101 * x50 - x107 * x53 + x98 * (x94 - x99))
                + x98 * (-x108 + x96)
            )
            + x98 * (-x78 + x97),
            x11 * x164
            + x11 * (x11 * x163 + x164)
            + x164 * x50
            + x52 * (x140 * x50 - x145 * x53 + x98 * (-x132 + x139))
            - x53
            * (
                x100 * (x150 - x154)
                + x145 * x52
                + x155 * x50
                - x53
                * (
                    x144 * x52
                    + x153 * x50
                    + x165
                    - x53 * (x143 * x52 + x151 * x50 - x166 * x53)
                )
            )
            + x98 * (-x156 + x163),
            0,
            x11 * x185
            + x11 * (x11 * x184 + x185)
            + x185 * x50
            - x53
            * (
                x100 * (x169 * x50 - x171 - x176)
                + x177 * x50
                - x53 * (x175 * x50 + x186 - x53 * (x173 * x50 - x187 * x53))
            )
            + x98 * (-x178 + x184),
            0,
            0,
            x11 * x227 + x115 * x12 + x238,
            x11 * x260 + x12 * x164 + x267,
            0,
            x11 * x279 + x12 * x185 + x282,
            0,
            0,
            x11 * x328 + x115 * x13 + x343,
            x11 * x372 + x13 * x164 + x381,
            x401,
            x11 * x415 + x13 * x185 + x418,
            x428,
            x438,
            x12 * x227 + x460,
            x12 * x260 + x475,
            0,
            x12 * x279 + x483,
            0,
            0,
            x12 * x328 + x515,
            x12 * x372 + x532,
            x551,
            x12 * x415 + x559,
            x568,
            x577,
            x13 * x328 + x607,
            x13 * x372 + x624,
            2 * x625 + x639,
            x13 * x415 + x647,
            2 * x648 + x655,
            2 * x656 + x663,
            x11 * x226 + x11 * (x11 * x209 + x226) + x238,
            x11 * x259 + x11 * (x11 * x254 + x259) + x267,
            0,
            x11 * x278 + x11 * (x11 * x273 + x278) + x282,
            0,
            0,
            x11 * x664 + x460,
            x11 * x665 + x475,
            0,
            x11 * x666 + x483,
            0,
            0,
            x11 * x667 + x515,
            x11 * x668 + x532,
            x669,
            x11 * x670 + x559,
            x671,
            x672,
            x12 * x664 + x679,
            x12 * x665 + x684,
            0,
            x12 * x666 + x687,
            0,
            0,
            x12 * x667 + x695,
            x12 * x668 + x701,
            x707,
            x12 * x670 + x711,
            x715,
            x719,
            x13 * x667 + x727,
            x13 * x668 + x733,
            2 * x734 + x739,
            x13 * x670 + x743,
            2 * x744 + x747,
            2 * x748 + x751,
            x11 * x327 + x11 * (x11 * x306 + x327) + x343,
            x11 * x371 + x11 * (x11 * x366 + x371) + x381,
            x11 * (x11 * x389 + x398) + x401,
            x11 * x414 + x11 * (x11 * x409 + x414) + x418,
            x11 * (x11 * x424 + x425) + x428,
            x11 * (x11 * x435 + x436) + x438,
            x11 * x752 + x12 * x327 + x514,
            x11 * x753 + x12 * x371 + x531,
            x11 * x754 + x551,
            x11 * x755 + x12 * x414 + x558,
            x11 * x756 + x568,
            x11 * x757 + x577,
            x11 * x758 + x607,
            x11 * x759 + x624,
            x11 * x760 + x625 + x639,
            x11 * x761 + x647,
            x11 * x762 + x648 + x655,
            x11 * x763 + x656 + x663,
            x12 * x752 + x764,
            x12 * x753 + x765,
            x12 * x754 + x707,
            x12 * x755 + x766,
            x12 * x756 + x715,
            x12 * x757 + x719,
            x12 * x758 + x727,
            x12 * x759 + x733,
            x12 * x760 + x767,
            x12 * x761 + x743,
            x12 * x762 + x768,
            x12 * x763 + x769,
            x13 * x758 + x776,
            x13 * x759 + x781,
            x13 * x760 + x786,
            x13 * x761 + x789,
            x13 * x762 + x792,
            x13 * x763 + x795,
            x11 * x451 + x11 * (x11 * x441 + x451) + x459,
            x11 * x472 + x11 * (x11 * x463 + x472) + x474,
            0,
            x11 * x480 + x11 * (x11 * x478 + x480) + x482,
            0,
            0,
            x11 * x796 + x679,
            x11 * x797 + x684,
            0,
            x11 * x798 + x687,
            0,
            0,
            x11 * x799 + x695,
            x11 * x800 + x701,
            x11 * x704 + x706,
            x11 * x801 + x711,
            x11 * x712 + x714,
            x11 * x716 + x718,
            x12 * x673 + x12 * x796 + x188 * x673 - x195 * x678 + 3 * x442,
            x12 * x682
            + x12 * x797
            + x188 * x682
            - x195 * x683
            + 3 * x464
            + x52 * (x188 * x676 - x195 * x677 + 3 * x452),
            0,
            x12 * x685
            + x12 * x798
            + x188 * x685
            - x195 * x686
            + 3 * x479
            + x58
            * (
                x188 * x680
                - x195 * x681
                + 3 * x468
                + x52 * (x188 * x674 - x195 * x675 + 3 * x453)
            ),
            0,
            0,
            x12 * x799 + x13 * x673 + x802,
            x12 * x800 + x13 * x682 + x803,
            x804,
            x12 * x801 + x13 * x685 + x805,
            x806,
            x807,
            x13 * x799 + x809,
            x13 * x800 + x811,
            2 * x812 + x813,
            x13 * x801 + x815,
            2 * x816 + x817,
            2 * x818 + x819,
            x11 * x502 + x11 * (x11 * x488 + x502) + x514,
            x11 * x529 + x11 * (x11 * x518 + x529) + x531,
            x11 * (x11 * x547 + x548) + x669,
            x11 * x556 + x11 * (x11 * x554 + x556) + x558,
            x11 * (x11 * x563 + x565) + x671,
            x11 * (x11 * x573 + x574) + x672,
            x11 * x820 + x764,
            x11 * x821 + x765,
            x11 * x822 + x707,
            x11 * x823 + x766,
            x11 * x824 + x715,
            x11 * x825 + x719,
            x11 * x826 + x727,
            x11 * x827 + x733,
            x11 * x828 + x767,
            x11 * x829 + x743,
            x11 * x830 + x768,
            x11 * x831 + x769,
            x12 * x688 + x12 * x820 + x802,
            x12 * x698 + x12 * x821 + x803,
            x12 * x822 + x804,
            x12 * x708 + x12 * x823 + x805,
            x12 * x824 + x806,
            x12 * x825 + x807,
            x12 * x826 + x809,
            x12 * x827 + x811,
            x12 * x828 + x812 + x813,
            x12 * x829 + x815,
            x12 * x830 + x816 + x817,
            x12 * x831 + x818 + x819,
            x13 * x826 + x832,
            x13 * x827 + x833,
            x13 * x828 + x834,
            x13 * x829 + x835,
            x13 * x830 + x836,
            x13 * x831 + x837,
            x11 * x594 + x11 * (x11 * x580 + x594) + x606,
            x11 * x621 + x11 * (x11 * x610 + x621) + x623,
            x11 * x637 + x11 * (x11 * x628 + x637) + x639,
            x11 * x644 + x11 * (x11 * x642 + x644) + x646,
            x11 * x653 + x11 * (x11 * x651 + x653) + x655,
            x11 * x661 + x11 * (x11 * x659 + x661) + x663,
            x11 * x838 + x12 * x594 + x726,
            x11 * x839 + x12 * x621 + x732,
            x11 * x840 + x12 * x637 + x739,
            x11 * x841 + x12 * x644 + x742,
            x11 * x842 + x12 * x653 + x747,
            x11 * x843 + x12 * x661 + x751,
            x11 * x844 + x776,
            x11 * x845 + x781,
            x11 * x846 + x786,
            x11 * x847 + x789,
            x11 * x848 + x792,
            x11 * x849 + x795,
            x12 * x720 + x12 * x838 + x808,
            x12 * x730 + x12 * x839 + x810,
            x12 * x737 + x12 * x840 + x813,
            x12 * x740 + x12 * x841 + x814,
            x12 * x745 + x12 * x842 + x817,
            x12 * x749 + x12 * x843 + x819,
            x12 * x844 + x832,
            x12 * x845 + x833,
            x12 * x846 + x834,
            x12 * x847 + x835,
            x12 * x848 + x836,
            x12 * x849 + x837,
            x13 * x770 + x13 * x844 + x283 * x770 - x290 * x775 + 3 * x581,
            x13 * x779 + x13 * x845 + x283 * x779 - x290 * x780 + 3 * x611,
            x13 * x784
            + x13 * x846
            + x283 * x784
            - x290 * x785
            + x52 * (x283 * x773 - x290 * x774 + 3 * x595)
            + 3 * x629,
            x13 * x787 + x13 * x847 + x283 * x787 - x290 * x788 + 3 * x643,
            x13 * x790
            + x13 * x848
            + x283 * x790
            - x290 * x791
            + x52 * (x283 * x777 - x290 * x778 + 3 * x615)
            + 3 * x652,
            x13 * x793
            + x13 * x849
            + x283 * x793
            - x290 * x794
            + x58
            * (
                x283 * x782
                - x290 * x783
                + x52 * (x283 * x771 - x290 * x772 + 3 * x596)
                + 3 * x633
            )
            + 3 * x660,
        ]
    )
    return S


def eri_2221(a, A, b, B, c, C, d, D):
    """Cartesian [dd|dp] 2-electron electron repulsion integral.

    Generated code; DO NOT modify by hand!"""

    x0 = 2 * a + 2 * b
    x1 = x0 ** (-1.0)
    x2 = c + d
    x3 = x2 ** (-1.0)
    x4 = x3 * (c * C[0] + d * D[0])
    x5 = x4 - C[0]
    x6 = a + b
    x7 = x2 + x6
    x8 = x7 ** (-1.0)
    x9 = x6 ** (-1.0)
    x10 = -x9 * (a * A[0] + b * B[0])
    x11 = -x10 - x4
    x12 = x3 * (c * C[1] + d * D[1])
    x13 = -x9 * (a * A[1] + b * B[1])
    x14 = -x12 - x13
    x15 = -x9 * (a * A[2] + b * B[2])
    x16 = -x15 - x3 * (c * C[2] + d * D[2])
    x17 = x2 * x6
    x18 = x17 * x8 * (x11**2 + x14**2 + x16**2)
    x19 = boys(3, x18)
    x20 = numpy.pi**2.5
    x21 = (x17 + numpy.sqrt(x7)) ** (-1.0)
    x22 = A[0] - B[0]
    x23 = A[1] - B[1]
    x24 = A[2] - B[2]
    x25 = numpy.exp(-a * b * x9 * (x22**2 + x23**2 + x24**2))
    x26 = C[0] - D[0]
    x27 = C[1] - D[1]
    x28 = C[2] - D[2]
    x29 = numpy.exp(-c * d * x3 * (x26**2 + x27**2 + x28**2))
    x30 = 2 * x20 * x21 * x25 * x29
    x31 = x19 * x30
    x32 = x6 * x8
    x33 = x11 * x32
    x34 = boys(4, x18)
    x35 = x30 * x34
    x36 = x31 * x5 + x33 * x35
    x37 = x32 * x36
    x38 = boys(2, x18)
    x39 = x30 * x38
    x40 = x31 * x33 + x39 * x5
    x41 = 2 * c + 2 * d
    x42 = x41 ** (-1.0)
    x43 = 2 * x42
    x44 = -2 * x20 * x21 * x25 * x29 * x38
    x45 = x42 * (-x31 * x32 - x44)
    x46 = x11 * x37 + x40 * x5 + x45
    x47 = -2 * x19 * x20 * x21 * x25 * x29
    x48 = x42 * (-x32 * x35 - x47)
    x49 = boys(5, x18)
    x50 = x30 * x49
    x51 = x33 * x50 + x35 * x5
    x52 = x32 * x51
    x53 = x11 * x52 + x36 * x5 + x48
    x54 = x33 * x53 + x43 * (-x37 + x40) + x46 * x5
    x55 = x2 * x8
    x56 = x54 * x55
    x57 = x32 * x40
    x58 = boys(1, x18)
    x59 = x30 * x58
    x60 = x33 * x39 + x5 * x59
    x61 = x42 * (2 * x20 * x21 * x25 * x29 * x58 - x32 * x39)
    x62 = x11 * x57 + x5 * x60 + x61
    x63 = x33 * x46 + x43 * (-x57 + x60) + x5 * x62
    x64 = x1 * (-x56 + x63)
    x65 = -x10 - A[0]
    x66 = x53 * x55
    x67 = x0 + x41
    x68 = x67 ** (-1.0)
    x69 = x11 * x55
    x70 = x50 * x69
    x71 = x35 * x65 - x70
    x72 = x51 * x55
    x73 = -x11 * x72 + x36 * x65 + x68 * x71
    x74 = 2 * x68
    x75 = -x11 * x66 + x46 * x65 + x73 * x74
    x76 = 3 * x68
    x77 = -x11 * x56 + x63 * x65 + x75 * x76
    x78 = -2 * x20 * x21 * x25 * x29 * x34
    x79 = x42 * (-x32 * x50 - x78)
    x80 = x30 * boys(6, x18)
    x81 = x33 * x80 + x5 * x50
    x82 = x32 * x81
    x83 = x11 * x82 + x5 * x51 + x79
    x84 = x33 * x83 + x43 * (x36 - x52) + x5 * x53
    x85 = x55 * x84
    x86 = x55 * x83
    x87 = x50 * x65 - x69 * x80
    x88 = x55 * x81
    x89 = -x11 * x88 + x51 * x65 + x68 * x87
    x90 = -x11 * x86 + x53 * x65 + x74 * x89
    x91 = -x11 * x85 + x54 * x65 + x76 * x90
    x92 = x55 * x91
    x93 = x1 * (x46 - x66)
    x94 = x55 * x90
    x95 = x1 * (x36 - x72)
    x96 = x1 * (-x50 * x55 - x78)
    x97 = x55 * x87
    x98 = -x11 * x97 + x65 * x71 + x96
    x99 = x55 * x89
    x100 = -x11 * x99 + x65 * x73 + x68 * x98 + x95
    x101 = x100 * x74 - x11 * x94 + x65 * x75 + x93
    x102 = x101 * x76 - x11 * x92 + x64 + x65 * x77
    x103 = x102 * x55
    x104 = x55 * x63
    x105 = x32 * x60
    x106 = boys(0, x18)
    x107 = x106 * x30
    x108 = x107 * x5 + x33 * x59
    x109 = x42 * (2 * x106 * x20 * x21 * x25 * x29 - x32 * x59)
    x110 = x105 * x11 + x108 * x5 + x109
    x111 = x110 * x5 + x33 * x62 + x43 * (-x105 + x108)
    x112 = x1 * (-x104 + x111)
    x113 = x46 * x55
    x114 = x35 * x69
    x115 = -x114 + x31 * x65
    x116 = x36 * x55
    x117 = -x11 * x116 + x115 * x68 + x40 * x65
    x118 = -x11 * x113 + x117 * x74 + x62 * x65
    x119 = -x104 * x11 + x111 * x65 + x118 * x76
    x120 = x55 * x77
    x121 = x1 * (-x113 + x62)
    x122 = x55 * x75
    x123 = x1 * (-x116 + x40)
    x124 = x1 * (-x35 * x55 - x47)
    x125 = x55 * x71
    x126 = -x11 * x125 + x115 * x65 + x124
    x127 = x55 * x73
    x128 = -x11 * x127 + x117 * x65 + x123 + x126 * x68
    x129 = -x11 * x122 + x118 * x65 + x121 + x128 * x74
    x130 = -x11 * x120 + x112 + x119 * x65 + x129 * x76
    x131 = 3 * x1
    x132 = 2 * x1
    x133 = x101 * x55
    x134 = x55 * x98
    x135 = (
        -x11 * x134
        + x126 * x65
        + x132 * (-x114 - x125 + 2 * x19 * x20 * x21 * x25 * x29 * x65)
    )
    x136 = x100 * x55
    x137 = -x11 * x136 + x128 * x65 + x132 * (x117 - x127) + x135 * x68
    x138 = -x11 * x133 + x129 * x65 + x132 * (x118 - x122) + x137 * x74
    x139 = -x103 * x11 + x130 * x65 + x132 * (x119 - x120) + x138 * x76
    x140 = x1 * (x54 - x85)
    x141 = -2 * x20 * x21 * x25 * x29 * x49
    x142 = x42 * (-x141 - x32 * x80)
    x143 = x30 * boys(7, x18)
    x144 = x143 * x33 + x5 * x80
    x145 = x142 + x144 * x33 + x5 * x81
    x146 = x145 * x33 + x43 * (x51 - x82) + x5 * x83
    x147 = -x143 * x69 + x65 * x80
    x148 = -x144 * x69 + x147 * x68 + x65 * x81
    x149 = -x145 * x69 + x148 * x74 + x65 * x83
    x150 = x1 * (x53 - x86)
    x151 = x1 * (x51 - x88)
    x152 = x1 * (-x141 - x55 * x80)
    x153 = -x147 * x69 + x152 + x65 * x87
    x154 = -x148 * x69 + x151 + x153 * x68 + x65 * x89
    x155 = -x149 * x69 + x150 + x154 * x74 + x65 * x90
    x156 = (
        x132 * (2 * x20 * x21 * x25 * x29 * x34 * x65 - x70 - x97)
        - x153 * x69
        + x65 * x98
    )
    x157 = x100 * x65 + x132 * (x73 - x99) - x154 * x69 + x156 * x68
    x158 = x101 * x65 + x132 * (x75 - x94) - x155 * x69 + x157 * x74
    x159 = x129 * x55
    x160 = x55 * x62
    x161 = x1 * (x110 - x160)
    x162 = x31 * x69
    x163 = -x162 + x39 * x65
    x164 = x40 * x55
    x165 = -x11 * x164 + x163 * x68 + x60 * x65
    x166 = -x11 * x160 + x110 * x65 + x165 * x74
    x167 = x118 * x55
    x168 = x1 * (-x164 + x60)
    x169 = x1 * (-x31 * x55 - x44)
    x170 = x115 * x55
    x171 = -x11 * x170 + x163 * x65 + x169
    x172 = x117 * x55
    x173 = -x11 * x172 + x165 * x65 + x168 + x171 * x68
    x174 = -x11 * x167 + x161 + x166 * x65 + x173 * x74
    x175 = x126 * x55
    x176 = (
        -x11 * x175
        + x132 * (-x162 - x170 + 2 * x20 * x21 * x25 * x29 * x38 * x65)
        + x171 * x65
    )
    x177 = x128 * x55
    x178 = -x11 * x177 + x132 * (x165 - x172) + x173 * x65 + x176 * x68
    x179 = -x11 * x159 + x132 * (x166 - x167) + x174 * x65 + x178 * x74
    x180 = (
        x131 * (-x159 + x174)
        - x138 * x69
        + x179 * x65
        + x74
        * (
            x131 * (x173 - x177)
            - x137 * x69
            + x178 * x65
            + x68 * (x131 * (x171 - x175) - x135 * x69 + x176 * x65)
        )
    )
    x181 = x139 + x179 * x26
    x182 = x130 + x174 * x26
    x183 = x12 - C[1]
    x184 = x14 * x32
    x185 = x183 * x39 + x184 * x31
    x186 = x185 * x32
    x187 = x183 * x59 + x184 * x39
    x188 = x42 * (-x186 + x187)
    x189 = x11 * x186 + x187 * x5
    x190 = x183 * x31 + x184 * x35
    x191 = x190 * x32
    x192 = x11 * x191 + x185 * x5
    x193 = x188 + x189 * x5 + x192 * x33
    x194 = x42 * (x185 - x191)
    x195 = x183 * x35 + x184 * x50
    x196 = x195 * x32
    x197 = x11 * x196 + x190 * x5
    x198 = x192 * x5 + x194 + x197 * x33
    x199 = x198 * x55
    x200 = x195 * x55
    x201 = x11 * x200
    x202 = x190 * x65 - x201
    x203 = x197 * x55
    x204 = -x11 * x203 + x192 * x65 + x202 * x68
    x205 = -x11 * x199 + x193 * x65 + x204 * x74
    x206 = x205 * x55
    x207 = x187 * x32
    x208 = x107 * x183 + x184 * x59
    x209 = x42 * (-x207 + x208)
    x210 = x11 * x207 + x208 * x5
    x211 = x189 * x33 + x209 + x210 * x5
    x212 = x193 * x55
    x213 = x190 * x55
    x214 = x11 * x213
    x215 = x185 * x65 - x214
    x216 = x192 * x55
    x217 = -x11 * x216 + x189 * x65 + x215 * x68
    x218 = -x11 * x212 + x211 * x65 + x217 * x74
    x219 = x1 * (x211 - x212)
    x220 = x1 * (x189 - x216)
    x221 = x1 * (x185 - x213)
    x222 = x202 * x55
    x223 = -x11 * x222 + x215 * x65 + x221
    x224 = x204 * x55
    x225 = -x11 * x224 + x217 * x65 + x220 + x223 * x68
    x226 = -x11 * x206 + x218 * x65 + x219 + x225 * x74
    x227 = x1 * (x193 - x199)
    x228 = x42 * (x190 - x196)
    x229 = x183 * x50 + x184 * x80
    x230 = x229 * x32
    x231 = x11 * x230 + x195 * x5
    x232 = x197 * x5 + x228 + x231 * x33
    x233 = x232 * x55
    x234 = x229 * x55
    x235 = -x11 * x234 + x195 * x65
    x236 = x231 * x55
    x237 = -x11 * x236 + x197 * x65 + x235 * x68
    x238 = -x11 * x233 + x198 * x65 + x237 * x74
    x239 = x238 * x55
    x240 = x1 * (x192 - x203)
    x241 = x1 * (x190 - x200)
    x242 = x235 * x55
    x243 = -x11 * x242 + x202 * x65 + x241
    x244 = x237 * x55
    x245 = -x11 * x244 + x204 * x65 + x240 + x243 * x68
    x246 = -x11 * x239 + x205 * x65 + x227 + x245 * x74
    x247 = x246 * x55
    x248 = x243 * x55
    x249 = -x11 * x248 + x132 * (x185 * x65 - x214 - x222) + x223 * x65
    x250 = x245 * x55
    x251 = -x11 * x250 + x132 * (x217 - x224) + x225 * x65 + x249 * x68
    x252 = -x11 * x247 + x132 * (-x206 + x218) + x226 * x65 + x251 * x74
    x253 = x179 * x27 + x252
    x254 = x174 * x27 + x226
    x255 = x1 * (x195 - x234)
    x256 = x143 * x184 + x183 * x80
    x257 = x229 * x65 - x256 * x69
    x258 = x235 * x65 + x255 - x257 * x69
    x259 = x132 * (x190 * x65 - x201 - x242) + x243 * x65 - x258 * x69
    x260 = x1 * (x197 - x236)
    x261 = x229 * x5 + x256 * x33
    x262 = x231 * x65 + x257 * x68 - x261 * x69
    x263 = x237 * x65 + x258 * x68 + x260 - x262 * x69
    x264 = x132 * (x204 - x244) + x245 * x65 + x259 * x68 - x263 * x69
    x265 = x1 * (x198 - x233)
    x266 = x42 * (x195 - x230)
    x267 = x231 * x5 + x261 * x33 + x266
    x268 = (
        x131 * (x226 - x247)
        + x252 * x65
        - x69
        * (
            x132 * (x205 - x239)
            + x246 * x65
            + x264 * x74
            - x69
            * (
                x238 * x65
                + x263 * x74
                + x265
                - x69 * (x232 * x65 + x262 * x74 - x267 * x69)
            )
        )
        + x74
        * (
            x131 * (x225 - x250)
            + x251 * x65
            - x264 * x69
            + x68 * (x131 * (x223 - x248) + x249 * x65 - x259 * x69)
        )
    )
    x269 = x179 * x28
    x270 = x22 * x28
    x271 = x217 * x55
    x272 = x185 * x55
    x273 = x11 * x272
    x274 = x187 * x65 - x273
    x275 = x189 * x55
    x276 = -x11 * x275 + x210 * x65 + x274 * x68
    x277 = x215 * x55
    x278 = x1 * (x187 - x272)
    x279 = -x11 * x277 + x274 * x65 + x278
    x280 = x223 * x55
    x281 = -x11 * x280 + x132 * (x187 * x65 - x273 - x277) + x279 * x65
    x282 = x1 * (x210 - x275)
    x283 = -x11 * x271 + x276 * x65 + x279 * x68 + x282
    x284 = x225 * x55
    x285 = -x11 * x284 + x132 * (-x271 + x276) + x281 * x68 + x283 * x65
    x286 = x252 + x26 * x285
    x287 = x226 + x26 * x283
    x288 = (
        x131 * (x283 - x284)
        - x251 * x69
        + x285 * x65
        + x68 * (x131 * (x279 - x280) - x249 * x69 + x281 * x65)
    )
    x289 = x14 * x191 + x183 * x185 + x45
    x290 = x14 * x196 + x183 * x190 + x48
    x291 = x290 * x55
    x292 = x11 * x291
    x293 = x289 * x65 - x292
    x294 = x14 * x186 + x183 * x187 + x61
    x295 = x289 * x33 + x294 * x5
    x296 = x289 * x5 + x290 * x33
    x297 = x296 * x55
    x298 = -x11 * x297 + x293 * x68 + x295 * x65
    x299 = x298 * x55
    x300 = x289 * x55
    x301 = x11 * x300
    x302 = x294 * x65 - x301
    x303 = x109 + x14 * x207 + x183 * x208
    x304 = x294 * x33 + x303 * x5
    x305 = x295 * x55
    x306 = -x11 * x305 + x302 * x68 + x304 * x65
    x307 = x293 * x55
    x308 = x1 * (x294 - x300)
    x309 = -x11 * x307 + x302 * x65 + x308
    x310 = x1 * (x289 - x291)
    x311 = x14 * x230 + x183 * x195 + x79
    x312 = x311 * x55
    x313 = -x11 * x312 + x290 * x65
    x314 = x313 * x55
    x315 = -x11 * x314 + x293 * x65 + x310
    x316 = x315 * x55
    x317 = -x11 * x316 + x132 * (x294 * x65 - x301 - x307) + x309 * x65
    x318 = x1 * (x304 - x305)
    x319 = -x11 * x299 + x306 * x65 + x309 * x68 + x318
    x320 = x1 * (x295 - x297)
    x321 = x290 * x5 + x311 * x33
    x322 = x321 * x55
    x323 = -x11 * x322 + x296 * x65 + x313 * x68
    x324 = x323 * x55
    x325 = -x11 * x324 + x298 * x65 + x315 * x68 + x320
    x326 = x325 * x55
    x327 = -x11 * x326 + x132 * (-x299 + x306) + x317 * x68 + x319 * x65
    x328 = x27 * x285 + x327
    x329 = x27 * x283 + x319
    x330 = x1 * (x290 - x312)
    x331 = x142 + x183 * x229 + x184 * x256
    x332 = x311 * x65 - x331 * x69
    x333 = x313 * x65 + x330 - x332 * x69
    x334 = x132 * (x289 * x65 - x292 - x314) + x315 * x65 - x333 * x69
    x335 = x1 * (x296 - x322)
    x336 = x311 * x5 + x33 * x331
    x337 = (
        x131 * (x319 - x326)
        + x327 * x65
        + x68 * (x131 * (x309 - x316) + x317 * x65 - x334 * x69)
        - x69
        * (
            x132 * (x298 - x324)
            + x325 * x65
            + x334 * x68
            - x69
            * (
                x323 * x65
                + x333 * x68
                + x335
                - x69 * (x321 * x65 + x332 * x68 - x336 * x69)
            )
        )
    )
    x338 = x28 * x285
    x339 = x294 * x55
    x340 = x11 * x339
    x341 = x302 * x55
    x342 = x1 * (x303 - x339)
    x343 = -x11 * x341 + x342 + x65 * (x303 * x65 - x340)
    x344 = x309 * x55
    x345 = -x11 * x344 + x132 * (x303 * x65 - x340 - x341) + x343 * x65
    x346 = x26 * x345 + x327
    x347 = x26 * x343 + x319
    x348 = x131 * (x343 - x344) - x317 * x69 + x345 * x65
    x349 = x183 * x289 + x184 * x290 + 2 * x194
    x350 = x349 * x55
    x351 = x183 * x294 + x184 * x289 + 2 * x188
    x352 = x1 * (-x350 + x351)
    x353 = x11 * x350
    x354 = x351 * x65 - x353
    x355 = x183 * x290 + x184 * x311 + 2 * x228
    x356 = x355 * x55
    x357 = -x11 * x356 + x349 * x65
    x358 = x357 * x55
    x359 = -x11 * x358 + x352 + x354 * x65
    x360 = x359 * x55
    x361 = x351 * x55
    x362 = x183 * x303 + x184 * x294 + 2 * x209
    x363 = x1 * (-x361 + x362)
    x364 = x11 * x361
    x365 = x354 * x55
    x366 = -x11 * x365 + x363 + x65 * (x362 * x65 - x364)
    x367 = -x11 * x360 + x132 * (x362 * x65 - x364 - x365) + x366 * x65
    x368 = x1 * (x349 - x356)
    x369 = x183 * x311 + x184 * x331 + 2 * x266
    x370 = x27 * x345 + x367
    x371 = x27 * x343 + x366
    x372 = x28 * x345
    x373 = -x13 - A[1]
    x374 = x14 * x160
    x375 = x113 * x14
    x376 = x373 * x62 - x375
    x377 = x376 * x55
    x378 = x1 * (x110 * x373 - x374 - x377)
    x379 = x110 * x373 - x374
    x380 = x14 * x55
    x381 = x31 * x380
    x382 = x373 * x39 - x381
    x383 = x35 * x380
    x384 = x31 * x373 - x383
    x385 = x384 * x55
    x386 = x11 * x385
    x387 = x382 * x65 - x386
    x388 = x14 * x164
    x389 = x373 * x60 - x388
    x390 = x116 * x14
    x391 = x373 * x40 - x390
    x392 = x391 * x55
    x393 = -x11 * x392 + x387 * x68 + x389 * x65
    x394 = -x11 * x377 + x379 * x65 + x393 * x74
    x395 = x14 * x66
    x396 = x373 * x46 - x395
    x397 = x396 * x55
    x398 = x380 * x50
    x399 = x35 * x373 - x398
    x400 = x399 * x55
    x401 = x11 * x400
    x402 = x384 * x65 - x401
    x403 = x14 * x72
    x404 = x36 * x373 - x403
    x405 = x404 * x55
    x406 = -x11 * x405 + x391 * x65 + x402 * x68
    x407 = -x11 * x397 + x376 * x65 + x406 * x74
    x408 = x407 * x55
    x409 = x1 * (x373 * x60 - x388 - x392)
    x410 = x1 * (2 * x20 * x21 * x25 * x29 * x373 * x38 - x381 - x385)
    x411 = x402 * x55
    x412 = -x11 * x411 + x387 * x65 + x410
    x413 = x406 * x55
    x414 = -x11 * x413 + x393 * x65 + x409 + x412 * x68
    x415 = -x11 * x408 + x378 + x394 * x65 + x414 * x74
    x416 = x104 * x14
    x417 = x14 * x56
    x418 = x373 * x63 - x417
    x419 = x418 * x55
    x420 = x1 * (x111 * x373 - x416 - x419)
    x421 = x111 * x373 - x416
    x422 = -x11 * x419 + x407 * x76 + x421 * x65
    x423 = -x14 * x85 + x373 * x54
    x424 = x423 * x55
    x425 = -x14 * x86 + x373 * x53
    x426 = x425 * x55
    x427 = x373 * x50 - x380 * x80
    x428 = x427 * x55
    x429 = -x11 * x428 + x399 * x65
    x430 = -x14 * x88 + x373 * x51
    x431 = x430 * x55
    x432 = -x11 * x431 + x404 * x65 + x429 * x68
    x433 = -x11 * x426 + x396 * x65 + x432 * x74
    x434 = -x11 * x424 + x418 * x65 + x433 * x76
    x435 = x434 * x55
    x436 = x1 * (x373 * x62 - x375 - x397)
    x437 = x433 * x55
    x438 = x1 * (x373 * x40 - x390 - x405)
    x439 = x1 * (2 * x19 * x20 * x21 * x25 * x29 * x373 - x383 - x400)
    x440 = x429 * x55
    x441 = -x11 * x440 + x402 * x65 + x439
    x442 = x432 * x55
    x443 = -x11 * x442 + x406 * x65 + x438 + x441 * x68
    x444 = -x11 * x437 + x407 * x65 + x436 + x443 * x74
    x445 = -x11 * x435 + x420 + x422 * x65 + x444 * x76
    x446 = x26 * x415 + x445
    x447 = x182 * x23 + x446
    x448 = (
        x132 * (x394 - x408)
        + x415 * x65
        - x444 * x69
        + x74
        * (
            x132 * (x393 - x413)
            + x414 * x65
            - x443 * x69
            + x68 * (x132 * (x382 * x65 - x386 - x411) + x412 * x65 - x441 * x69)
        )
    )
    x449 = x1 * (x373 * x46 - x395 - x426)
    x450 = -x145 * x380 + x373 * x83
    x451 = -x143 * x380 + x373 * x80
    x452 = x427 * x65 - x451 * x69
    x453 = -x144 * x380 + x373 * x81
    x454 = x430 * x65 + x452 * x68 - x453 * x69
    x455 = x425 * x65 - x450 * x69 + x454 * x74
    x456 = x1 * (x36 * x373 - x403 - x431)
    x457 = x1 * (2 * x20 * x21 * x25 * x29 * x34 * x373 - x398 - x428)
    x458 = x429 * x65 - x452 * x69 + x457
    x459 = x432 * x65 - x454 * x69 + x456 + x458 * x68
    x460 = x433 * x65 + x449 - x455 * x69 + x459 * x74
    x461 = x1 * (x373 * x63 - x417 - x424)
    x462 = -x146 * x380 + x373 * x84
    x463 = (
        x132 * (x422 - x435)
        + x26 * x448
        + x445 * x65
        - x69
        * (x434 * x65 + x460 * x76 + x461 - x69 * (x423 * x65 + x455 * x76 - x462 * x69))
        + x76
        * (
            x132 * (x407 - x437)
            + x444 * x65
            - x460 * x69
            + x74
            * (
                x132 * (x406 - x442)
                + x443 * x65
                - x459 * x69
                + x68 * (x132 * (x384 * x65 - x401 - x440) + x441 * x65 - x458 * x69)
            )
        )
    )
    x464 = -x14 * x199 + x193 * x373 + x396 * x68
    x465 = x464 * x55
    x466 = -x14 * x212 + x211 * x373 + x376 * x68
    x467 = x1 * (-x465 + x466)
    x468 = -x14 * x213 + x185 * x373 + x384 * x68
    x469 = -x14 * x200 + x190 * x373 + x399 * x68
    x470 = x469 * x55
    x471 = x11 * x470
    x472 = x468 * x65 - x471
    x473 = -x14 * x216 + x189 * x373 + x391 * x68
    x474 = -x14 * x203 + x192 * x373 + x404 * x68
    x475 = x474 * x55
    x476 = -x11 * x475 + x472 * x68 + x473 * x65
    x477 = -x11 * x465 + x466 * x65 + x476 * x74
    x478 = -x14 * x233 + x198 * x373 + x425 * x68
    x479 = x478 * x55
    x480 = -x14 * x234 + x195 * x373 + x427 * x68
    x481 = x480 * x55
    x482 = -x11 * x481 + x469 * x65
    x483 = -x14 * x236 + x197 * x373 + x430 * x68
    x484 = x483 * x55
    x485 = -x11 * x484 + x474 * x65 + x482 * x68
    x486 = -x11 * x479 + x464 * x65 + x485 * x74
    x487 = x486 * x55
    x488 = x1 * (x473 - x475)
    x489 = x1 * (x468 - x470)
    x490 = x482 * x55
    x491 = -x11 * x490 + x472 * x65 + x489
    x492 = x485 * x55
    x493 = -x11 * x492 + x476 * x65 + x488 + x491 * x68
    x494 = -x11 * x487 + x467 + x477 * x65 + x493 * x74
    x495 = x27 * x415 + x494
    x496 = x23 * x254 + x495
    x497 = x1 * (x469 - x481)
    x498 = x229 * x373 - x256 * x380 + x451 * x68
    x499 = x480 * x65 - x498 * x69
    x500 = x482 * x65 + x497 - x499 * x69
    x501 = x1 * (x474 - x484)
    x502 = x231 * x373 - x261 * x380 + x453 * x68
    x503 = x483 * x65 + x499 * x68 - x502 * x69
    x504 = x485 * x65 + x500 * x68 + x501 - x503 * x69
    x505 = x1 * (x464 - x479)
    x506 = x232 * x373 - x267 * x380 + x450 * x68
    x507 = (
        x132 * (x477 - x487)
        + x494 * x65
        - x69
        * (x486 * x65 + x504 * x74 + x505 - x69 * (x478 * x65 + x503 * x74 - x506 * x69))
        + x74
        * (
            x132 * (x476 - x492)
            + x493 * x65
            - x504 * x69
            + x68 * (x132 * (x468 * x65 - x471 - x490) + x491 * x65 - x500 * x69)
        )
    )
    x508 = x27 * x448 + x507
    x509 = x23 * x28
    x510 = x28 * x415
    x511 = x174 * x509 + x510
    x512 = x28 * x448
    x513 = x473 * x55
    x514 = -x14 * x275 + x210 * x373 + x389 * x68
    x515 = x1 * (-x513 + x514)
    x516 = x468 * x55
    x517 = -x14 * x272 + x187 * x373 + x382 * x68
    x518 = x1 * (-x516 + x517)
    x519 = x11 * x516
    x520 = x517 * x65 - x519
    x521 = x472 * x55
    x522 = -x11 * x521 + x518 + x520 * x65
    x523 = -x11 * x513 + x514 * x65 + x520 * x68
    x524 = x476 * x55
    x525 = -x11 * x524 + x515 + x522 * x68 + x523 * x65
    x526 = x26 * x525 + x494
    x527 = x23 * x287 + x526
    x528 = (
        x132 * (x523 - x524)
        - x493 * x69
        + x525 * x65
        + x68 * (x132 * (x517 * x65 - x519 - x521) - x491 * x69 + x522 * x65)
    )
    x529 = x26 * x528 + x507
    x530 = -x14 * x297 + x295 * x373 + x474 * x74
    x531 = x530 * x55
    x532 = -x14 * x305 + x304 * x373 + x473 * x74
    x533 = x1 * (-x531 + x532)
    x534 = -x14 * x291 + x289 * x373 + x469 * x74
    x535 = x534 * x55
    x536 = -x14 * x300 + x294 * x373 + x468 * x74
    x537 = x1 * (-x535 + x536)
    x538 = x11 * x535
    x539 = x536 * x65 - x538
    x540 = -x14 * x312 + x290 * x373 + x480 * x74
    x541 = x540 * x55
    x542 = -x11 * x541 + x534 * x65
    x543 = x542 * x55
    x544 = -x11 * x543 + x537 + x539 * x65
    x545 = -x11 * x531 + x532 * x65 + x539 * x68
    x546 = -x14 * x322 + x296 * x373 + x483 * x74
    x547 = x546 * x55
    x548 = -x11 * x547 + x530 * x65 + x542 * x68
    x549 = x548 * x55
    x550 = -x11 * x549 + x533 + x544 * x68 + x545 * x65
    x551 = x27 * x525 + x550
    x552 = x23 * x329 + x551
    x553 = x1 * (x534 - x541)
    x554 = x311 * x373 - x331 * x380 + x498 * x74
    x555 = x540 * x65 - x554 * x69
    x556 = x542 * x65 + x553 - x555 * x69
    x557 = x1 * (x530 - x547)
    x558 = x321 * x373 - x336 * x380 + x502 * x74
    x559 = (
        x132 * (x545 - x549)
        + x550 * x65
        + x68 * (x132 * (x536 * x65 - x538 - x543) + x544 * x65 - x556 * x69)
        - x69
        * (x548 * x65 + x556 * x68 + x557 - x69 * (x546 * x65 + x555 * x68 - x558 * x69))
    )
    x560 = x27 * x528 + x559
    x561 = x28 * x525
    x562 = x283 * x509 + x561
    x563 = x28 * x528
    x564 = x536 * x55
    x565 = -x14 * x339 + x303 * x373 + x517 * x74
    x566 = x1 * (-x564 + x565)
    x567 = x11 * x564
    x568 = x565 * x65 - x567
    x569 = x539 * x55
    x570 = -x11 * x569 + x566 + x568 * x65
    x571 = x26 * x570 + x550
    x572 = x23 * x347 + x571
    x573 = x132 * (x565 * x65 - x567 - x569) - x544 * x69 + x570 * x65
    x574 = x26 * x573 + x559
    x575 = -x14 * x350 + x351 * x373 + x534 * x76
    x576 = x55 * x575
    x577 = -x14 * x361 + x362 * x373 + x536 * x76
    x578 = x1 * (-x576 + x577)
    x579 = x11 * x576
    x580 = x577 * x65 - x579
    x581 = -x14 * x356 + x349 * x373 + x540 * x76
    x582 = x55 * x581
    x583 = -x11 * x582 + x575 * x65
    x584 = x55 * x583
    x585 = -x11 * x584 + x578 + x580 * x65
    x586 = x27 * x570 + x585
    x587 = x23 * x371 + x586
    x588 = x1 * (x575 - x582)
    x589 = x355 * x373 - x369 * x380 + x554 * x76
    x590 = (
        x132 * (x577 * x65 - x579 - x584)
        + x27 * x573
        + x585 * x65
        - x69 * (x583 * x65 + x588 - x69 * (x581 * x65 - x589 * x69))
    )
    x591 = x28 * x570
    x592 = x343 * x509 + x591
    x593 = x28 * x573
    x594 = -x15 - A[2]
    x595 = x16 * x160
    x596 = x113 * x16
    x597 = x594 * x62 - x596
    x598 = x55 * x597
    x599 = x1 * (x110 * x594 - x595 - x598)
    x600 = x110 * x594 - x595
    x601 = x16 * x55
    x602 = x31 * x601
    x603 = x39 * x594 - x602
    x604 = x603 * x65
    x605 = x35 * x601
    x606 = x31 * x594 - x605
    x607 = x55 * x606
    x608 = x11 * x607
    x609 = x604 - x608
    x610 = x16 * x164
    x611 = x594 * x60 - x610
    x612 = x611 * x65
    x613 = x116 * x16
    x614 = x40 * x594 - x613
    x615 = x55 * x614
    x616 = -x11 * x615 + x609 * x68 + x612
    x617 = -x11 * x598 + x600 * x65 + x616 * x74
    x618 = x597 * x65
    x619 = x16 * x66
    x620 = x46 * x594 - x619
    x621 = x55 * x620
    x622 = x606 * x65
    x623 = x50 * x601
    x624 = x35 * x594 - x623
    x625 = x55 * x624
    x626 = x11 * x625
    x627 = x622 - x626
    x628 = x614 * x65
    x629 = x16 * x72
    x630 = x36 * x594 - x629
    x631 = x55 * x630
    x632 = x11 * x631
    x633 = x627 * x68 + x628 - x632
    x634 = -x11 * x621 + x618 + x633 * x74
    x635 = x55 * x634
    x636 = x1 * (x594 * x60 - x610 - x615)
    x637 = x1 * (2 * x20 * x21 * x25 * x29 * x38 * x594 - x602 - x607)
    x638 = x55 * x627
    x639 = -x11 * x638 + x609 * x65 + x637
    x640 = x55 * x633
    x641 = -x11 * x640 + x616 * x65 + x636 + x639 * x68
    x642 = -x11 * x635 + x599 + x617 * x65 + x641 * x74
    x643 = x104 * x16
    x644 = x16 * x56
    x645 = x594 * x63 - x644
    x646 = x55 * x645
    x647 = x1 * (x111 * x594 - x643 - x646)
    x648 = x111 * x594 - x643
    x649 = -x11 * x646 + x634 * x76 + x648 * x65
    x650 = -x16 * x85 + x54 * x594
    x651 = x55 * x650
    x652 = x620 * x65
    x653 = -x16 * x86 + x53 * x594
    x654 = x55 * x653
    x655 = x11 * x654
    x656 = x624 * x65
    x657 = x50 * x594 - x601 * x80
    x658 = x55 * x657
    x659 = x11 * x658
    x660 = x656 - x659
    x661 = x630 * x65
    x662 = -x16 * x88 + x51 * x594
    x663 = x55 * x662
    x664 = x11 * x663
    x665 = x660 * x68 + x661 - x664
    x666 = x652 - x655 + x665 * x74
    x667 = -x11 * x651 + x645 * x65 + x666 * x76
    x668 = x55 * x667
    x669 = x1 * (x594 * x62 - x596 - x621)
    x670 = x55 * x666
    x671 = x1 * (x40 * x594 - x613 - x631)
    x672 = x1 * (2 * x19 * x20 * x21 * x25 * x29 * x594 - x605 - x625)
    x673 = x55 * x660
    x674 = -x11 * x673 + x627 * x65 + x672
    x675 = x55 * x665
    x676 = -x11 * x675 + x633 * x65 + x671 + x674 * x68
    x677 = -x11 * x670 + x634 * x65 + x669 + x676 * x74
    x678 = -x11 * x668 + x647 + x649 * x65 + x677 * x76
    x679 = x26 * x642 + x678
    x680 = x182 * x24 + x679
    x681 = (
        x132 * (x617 - x635)
        + x642 * x65
        - x677 * x69
        + x74
        * (
            x132 * (x616 - x640)
            + x641 * x65
            - x676 * x69
            + x68 * (x132 * (x603 * x65 - x608 - x638) + x639 * x65 - x674 * x69)
        )
    )
    x682 = x1 * (x46 * x594 - x619 - x654)
    x683 = x65 * x653
    x684 = -x145 * x601 + x594 * x83
    x685 = x684 * x69
    x686 = x65 * x657
    x687 = -x143 * x601 + x594 * x80
    x688 = x687 * x69
    x689 = x686 - x688
    x690 = x65 * x662
    x691 = -x144 * x601 + x594 * x81
    x692 = x69 * x691
    x693 = x68 * x689 + x690 - x692
    x694 = x683 - x685 + x693 * x74
    x695 = x1 * (x36 * x594 - x629 - x663)
    x696 = x1 * (2 * x20 * x21 * x25 * x29 * x34 * x594 - x623 - x658)
    x697 = x65 * x660 - x689 * x69 + x696
    x698 = x65 * x665 + x68 * x697 - x69 * x693 + x695
    x699 = x65 * x666 + x682 - x69 * x694 + x698 * x74
    x700 = x1 * (x594 * x63 - x644 - x651)
    x701 = -x146 * x601 + x594 * x84
    x702 = (
        x132 * (x649 - x668)
        + x26 * x681
        + x65 * x678
        - x69
        * (x65 * x667 - x69 * (x65 * x650 - x69 * x701 + x694 * x76) + x699 * x76 + x700)
        + x76
        * (
            x132 * (x634 - x670)
            + x65 * x677
            - x69 * x699
            + x74
            * (
                x132 * (x633 - x675)
                + x65 * x676
                + x68 * (x132 * (x606 * x65 - x626 - x673) + x65 * x674 - x69 * x697)
                - x69 * x698
            )
        )
    )
    x703 = x16 * x212
    x704 = x16 * x199
    x705 = x193 * x594 - x704
    x706 = x55 * x705
    x707 = x1 * (x211 * x594 - x703 - x706)
    x708 = x211 * x594 - x703
    x709 = x16 * x216
    x710 = x189 * x594 - x709
    x711 = x65 * x710
    x712 = x16 * x213
    x713 = x185 * x594 - x712
    x714 = x65 * x713
    x715 = x16 * x200
    x716 = x190 * x594 - x715
    x717 = x55 * x716
    x718 = x11 * x717
    x719 = x714 - x718
    x720 = x16 * x203
    x721 = x192 * x594 - x720
    x722 = x55 * x721
    x723 = -x11 * x722 + x68 * x719 + x711
    x724 = -x11 * x706 + x65 * x708 + x723 * x74
    x725 = -x16 * x233 + x198 * x594
    x726 = x55 * x725
    x727 = x65 * x721
    x728 = x65 * x716
    x729 = -x16 * x234 + x195 * x594
    x730 = x55 * x729
    x731 = x11 * x730
    x732 = x728 - x731
    x733 = -x16 * x236 + x197 * x594
    x734 = x55 * x733
    x735 = x11 * x734
    x736 = x68 * x732 + x727 - x735
    x737 = -x11 * x726 + x65 * x705 + x736 * x74
    x738 = x55 * x737
    x739 = x1 * (x189 * x594 - x709 - x722)
    x740 = x1 * (x185 * x594 - x712 - x717)
    x741 = x55 * x732
    x742 = -x11 * x741 + x65 * x719 + x740
    x743 = x55 * x736
    x744 = -x11 * x743 + x65 * x723 + x68 * x742 + x739
    x745 = -x11 * x738 + x65 * x724 + x707 + x74 * x744
    x746 = x27 * x642 + x745
    x747 = x24 * x254 + x746
    x748 = x1 * (x190 * x594 - x715 - x730)
    x749 = x65 * x729
    x750 = x229 * x594 - x256 * x601
    x751 = x69 * x750
    x752 = x749 - x751
    x753 = x65 * x732 - x69 * x752 + x748
    x754 = x1 * (x192 * x594 - x720 - x734)
    x755 = x65 * x733
    x756 = x231 * x594 - x261 * x601
    x757 = x69 * x756
    x758 = x68 * x752 + x755 - x757
    x759 = x65 * x736 + x68 * x753 - x69 * x758 + x754
    x760 = x1 * (x193 * x594 - x704 - x726)
    x761 = x232 * x594 - x267 * x601
    x762 = (
        x132 * (x724 - x738)
        + x65 * x745
        - x69
        * (x65 * x737 - x69 * (x65 * x725 - x69 * x761 + x74 * x758) + x74 * x759 + x760)
        + x74
        * (
            x132 * (x723 - x743)
            + x65 * x744
            + x68 * (x132 * (x65 * x713 - x718 - x741) + x65 * x742 - x69 * x753)
            - x69 * x759
        )
    )
    x763 = x27 * x681 + x762
    x764 = x24 * x28
    x765 = x620 * x68
    x766 = x1 * (-x55 * x765 + x597 * x68)
    x767 = x624 * x68
    x768 = x69 * x767
    x769 = x622 * x68 - x768
    x770 = x630 * x68
    x771 = x628 * x68 + x68 * x769 - x69 * x770
    x772 = x618 * x68 - x69 * x765 + x74 * x771
    x773 = x656 * x68 - x659 * x68
    x774 = x661 * x68 - x664 * x68 + x68 * x773
    x775 = x652 * x68 - x655 * x68 + x74 * x774
    x776 = x55 * x775
    x777 = x1 * (-x55 * x770 + x614 * x68)
    x778 = x1 * (-x55 * x767 + x606 * x68)
    x779 = x55 * x773
    x780 = -x11 * x779 + x65 * x769 + x778
    x781 = x55 * x774
    x782 = -x11 * x781 + x65 * x771 + x68 * x780 + x777
    x783 = -x11 * x776 + x65 * x772 + x74 * x782 + x766
    x784 = x28 * x642 + x783
    x785 = x174 * x764 + x784
    x786 = x658 * x68
    x787 = x1 * (x624 * x68 - x786)
    x788 = x68 * x686 - x68 * x688
    x789 = x65 * x773 - x69 * x788 + x787
    x790 = x663 * x68
    x791 = x1 * (x630 * x68 - x790)
    x792 = x68 * x690 - x68 * x692 + x68 * x788
    x793 = x65 * x774 + x68 * x789 - x69 * x792 + x791
    x794 = x654 * x68
    x795 = x1 * (x620 * x68 - x794)
    x796 = (
        x132 * (x772 - x776)
        + x65 * x783
        - x69
        * (x65 * x775 - x69 * (x68 * x683 - x68 * x685 + x74 * x792) + x74 * x793 + x795)
        + x74
        * (
            x132 * (x771 - x781)
            + x65 * x782
            + x68 * (x132 * (x606 * x65 * x68 - x768 - x779) + x65 * x780 - x69 * x789)
            - x69 * x793
        )
    )
    x797 = x28 * x681 + x796
    x798 = x16 * x275
    x799 = x55 * x710
    x800 = x1 * (x210 * x594 - x798 - x799)
    x801 = x16 * x272
    x802 = x55 * x713
    x803 = x1 * (x187 * x594 - x801 - x802)
    x804 = x187 * x594 - x801
    x805 = x65 * x804
    x806 = x11 * x802
    x807 = x805 - x806
    x808 = x55 * x719
    x809 = -x11 * x808 + x65 * x807 + x803
    x810 = x210 * x594 - x798
    x811 = -x11 * x799 + x65 * x810 + x68 * x807
    x812 = x55 * x723
    x813 = -x11 * x812 + x65 * x811 + x68 * x809 + x800
    x814 = x26 * x813 + x745
    x815 = x24 * x287 + x814
    x816 = (
        x132 * (x811 - x812)
        + x65 * x813
        + x68 * (x132 * (x65 * x804 - x806 - x808) + x65 * x809 - x69 * x742)
        - x69 * x744
    )
    x817 = x26 * x816 + x762
    x818 = x16 * x305
    x819 = x16 * x297
    x820 = x295 * x594 - x819
    x821 = x55 * x820
    x822 = x1 * (x304 * x594 - x818 - x821)
    x823 = x16 * x300
    x824 = x16 * x291
    x825 = x289 * x594 - x824
    x826 = x55 * x825
    x827 = x1 * (x294 * x594 - x823 - x826)
    x828 = x294 * x594 - x823
    x829 = x65 * x828
    x830 = x11 * x826
    x831 = x829 - x830
    x832 = x65 * x825
    x833 = -x16 * x312 + x290 * x594
    x834 = x55 * x833
    x835 = x11 * x834
    x836 = x832 - x835
    x837 = x55 * x836
    x838 = -x11 * x837 + x65 * x831 + x827
    x839 = x304 * x594 - x818
    x840 = -x11 * x821 + x65 * x839 + x68 * x831
    x841 = -x16 * x322 + x296 * x594
    x842 = x55 * x841
    x843 = -x11 * x842 + x65 * x820 + x68 * x836
    x844 = x55 * x843
    x845 = -x11 * x844 + x65 * x840 + x68 * x838 + x822
    x846 = x27 * x813 + x845
    x847 = x24 * x329 + x846
    x848 = x1 * (x289 * x594 - x824 - x834)
    x849 = x65 * x833
    x850 = x311 * x594 - x331 * x601
    x851 = x69 * x850
    x852 = x849 - x851
    x853 = x65 * x836 - x69 * x852 + x848
    x854 = x1 * (x295 * x594 - x819 - x842)
    x855 = x321 * x594 - x336 * x601
    x856 = (
        x132 * (x840 - x844)
        + x65 * x845
        + x68 * (x132 * (x65 * x828 - x830 - x837) + x65 * x838 - x69 * x853)
        - x69
        * (x65 * x843 + x68 * x853 - x69 * (x65 * x841 + x68 * x852 - x69 * x855) + x854)
    )
    x857 = x27 * x816 + x856
    x858 = x68 * x721
    x859 = x1 * (-x55 * x858 + x68 * x710)
    x860 = x68 * x716
    x861 = x1 * (-x55 * x860 + x68 * x713)
    x862 = x69 * x860
    x863 = x68 * x714 - x862
    x864 = x68 * x728 - x68 * x731
    x865 = x55 * x864
    x866 = -x11 * x865 + x65 * x863 + x861
    x867 = x68 * x711 + x68 * x863 - x69 * x858
    x868 = x68 * x727 - x68 * x735 + x68 * x864
    x869 = x55 * x868
    x870 = -x11 * x869 + x65 * x867 + x68 * x866 + x859
    x871 = x28 * x813 + x870
    x872 = x283 * x764 + x871
    x873 = x68 * x730
    x874 = x1 * (x68 * x716 - x873)
    x875 = x68 * x749 - x68 * x751
    x876 = x65 * x864 - x69 * x875 + x874
    x877 = x68 * x734
    x878 = x1 * (x68 * x721 - x877)
    x879 = (
        x132 * (x867 - x869)
        + x65 * x870
        + x68 * (x132 * (x65 * x68 * x713 - x862 - x865) + x65 * x866 - x69 * x876)
        - x69
        * (x65 * x868 + x68 * x876 - x69 * (x68 * x755 - x68 * x757 + x68 * x875) + x878)
    )
    x880 = x28 * x816 + x879
    x881 = x614 * x68
    x882 = x1 * (-x55 * x881 + x611 * x68)
    x883 = x606 * x68
    x884 = x1 * (-x55 * x883 + x603 * x68)
    x885 = x69 * x883
    x886 = x604 * x68 - x885
    x887 = x55 * x769
    x888 = -x11 * x887 + x65 * x886 + x884
    x889 = x612 * x68 + x68 * x886 - x69 * x881
    x890 = x55 * x771
    x891 = -x11 * x890 + x65 * x889 + x68 * x888 + x882
    x892 = x26 * x891 + x783
    x893 = (
        x132 * (x889 - x890)
        + x65 * x891
        + x68 * (x132 * (x603 * x65 * x68 - x885 - x887) + x65 * x888 - x69 * x780)
        - x69 * x782
    )
    x894 = x22 * x892 + x26 * x893 + x796
    x895 = x27 * x891 + x870
    x896 = x22 * x895 + x27 * x893 + x879
    x897 = x67 ** (-2.0)
    x898 = 2 * x897
    x899 = x1 * (2 * x614 * x897 - x631 * x898)
    x900 = x1 * (2 * x606 * x897 - x625 * x898)
    x901 = x626 * x898
    x902 = x622 * x898 - x901
    x903 = x656 * x898 - x659 * x898
    x904 = x55 * x903
    x905 = -x11 * x904 + x65 * x902 + x900
    x906 = x628 * x898 - x632 * x898 + x68 * x902
    x907 = x661 * x898 - x664 * x898 + x68 * x903
    x908 = x55 * x907
    x909 = -x11 * x908 + x65 * x906 + x68 * x905 + x899
    x910 = x28 * x891 + x909
    x911 = x1 * (2 * x624 * x897 - x658 * x898)
    x912 = x686 * x898 - x688 * x898
    x913 = x65 * x903 - x69 * x912 + x911
    x914 = x1 * (2 * x630 * x897 - x663 * x898)
    x915 = (
        x132 * (x906 - x908)
        + x65 * x909
        + x68 * (x132 * (2 * x606 * x65 * x897 - x901 - x904) + x65 * x905 - x69 * x913)
        - x69
        * (
            x65 * x907
            + x68 * x913
            - x69 * (x68 * x912 + x690 * x898 - x692 * x898)
            + x914
        )
    )
    x916 = x22 * x910 + x28 * x893 + x915
    x917 = x16 * x339
    x918 = x55 * x828
    x919 = x1 * (x303 * x594 - x917 - x918)
    x920 = x303 * x594 - x917
    x921 = x11 * x918
    x922 = x65 * x920 - x921
    x923 = x55 * x831
    x924 = -x11 * x923 + x65 * x922 + x919
    x925 = x26 * x924 + x845
    x926 = x24 * x347 + x925
    x927 = x132 * (x65 * x920 - x921 - x923) + x65 * x924 - x69 * x838
    x928 = x26 * x927 + x856
    x929 = x16 * x361
    x930 = x16 * x350
    x931 = x351 * x594 - x930
    x932 = x55 * x931
    x933 = x1 * (x362 * x594 - x929 - x932)
    x934 = x362 * x594 - x929
    x935 = x11 * x932
    x936 = x65 * x934 - x935
    x937 = -x16 * x356 + x349 * x594
    x938 = x55 * x937
    x939 = -x11 * x938 + x65 * x931
    x940 = x55 * x939
    x941 = -x11 * x940 + x65 * x936 + x933
    x942 = x27 * x924 + x941
    x943 = x24 * x371 + x942
    x944 = x1 * (x351 * x594 - x930 - x938)
    x945 = x355 * x594 - x369 * x601
    x946 = (
        x132 * (x65 * x934 - x935 - x940)
        + x27 * x927
        + x65 * x941
        - x69 * (x65 * x939 - x69 * (x65 * x937 - x69 * x945) + x944)
    )
    x947 = x68 * x825
    x948 = x1 * (-x55 * x947 + x68 * x828)
    x949 = x69 * x947
    x950 = x68 * x829 - x949
    x951 = x68 * x832 - x68 * x835
    x952 = x55 * x951
    x953 = -x11 * x952 + x65 * x950 + x948
    x954 = x28 * x924 + x953
    x955 = x343 * x764 + x954
    x956 = x68 * x834
    x957 = x1 * (x68 * x825 - x956)
    x958 = (
        x132 * (x65 * x68 * x828 - x949 - x952)
        + x65 * x953
        - x69 * (x65 * x951 - x69 * (x68 * x849 - x68 * x851) + x957)
    )
    x959 = x28 * x927 + x958
    x960 = x68 * x713
    x961 = x1 * (-x55 * x960 + x68 * x804)
    x962 = x69 * x960
    x963 = x68 * x805 - x962
    x964 = x55 * x863
    x965 = -x11 * x964 + x65 * x963 + x961
    x966 = x26 * x965 + x870
    x967 = x132 * (x65 * x68 * x804 - x962 - x964) + x65 * x965 - x69 * x866
    x968 = x22 * x966 + x26 * x967 + x879
    x969 = x27 * x965 + x953
    x970 = x22 * x969 + x27 * x967 + x958
    x971 = x1 * (2 * x713 * x897 - x717 * x898)
    x972 = x718 * x898
    x973 = x714 * x898 - x972
    x974 = x728 * x898 - x731 * x898
    x975 = x55 * x974
    x976 = -x11 * x975 + x65 * x973 + x971
    x977 = x28 * x965 + x976
    x978 = x1 * (2 * x716 * x897 - x730 * x898)
    x979 = (
        x132 * (2 * x65 * x713 * x897 - x972 - x975)
        + x65 * x976
        - x69 * (x65 * x974 - x69 * (x749 * x898 - x751 * x898) + x978)
    )
    x980 = x22 * x977 + x28 * x967 + x979
    x981 = x1 * (2 * x603 * x897 - x607 * x898)
    x982 = x608 * x898
    x983 = x604 * x898 - x982
    x984 = x55 * x902
    x985 = -x11 * x984 + x65 * x983 + x981
    x986 = x26 * x985 + x909
    x987 = x132 * (2 * x603 * x65 * x897 - x982 - x984) + x65 * x985 - x69 * x905
    x988 = x22 * x986 + x26 * x987 + x915
    x989 = x27 * x985 + x976
    x990 = x22 * x989 + x27 * x987 + x979
    x991 = x67 ** (-3.0)
    x992 = 6 * x991
    x993 = x626 * x992
    x994 = x656 * x992 - x659 * x992
    x995 = x55 * x994
    x996 = x1 * (6 * x606 * x991 - x625 * x992)
    x997 = x622 * x992 - x993
    x998 = -x11 * x995 + x65 * x997 + x996
    x999 = x1 * (6 * x624 * x991 - x658 * x992)
    x1000 = x28 * x985 + x998
    x1001 = (
        x1000 * x22
        + x132 * (6 * x606 * x65 * x991 - x993 - x995)
        + x28 * x987
        + x65 * x998
        - x69 * (x65 * x994 - x69 * (x686 * x992 - x688 * x992) + x999)
    )
    x1002 = -x14 * x424 + x373 * x418 + x64
    x1003 = x1002 * x55
    x1004 = x112 - x14 * x419 + x373 * x421
    x1005 = x1 * (-x1003 + x1004)
    x1006 = x121 - x14 * x397 + x373 * x376
    x1007 = x1006 * x55
    x1008 = -x14 * x377 + x161 + x373 * x379
    x1009 = x1 * (-x1007 + x1008)
    x1010 = -x14 * x385 + x169 + x373 * x382
    x1011 = x124 - x14 * x400 + x373 * x384
    x1012 = x1011 * x55
    x1013 = x1010 * x65 - x1012 * x11
    x1014 = -x14 * x392 + x168 + x373 * x389
    x1015 = x123 - x14 * x405 + x373 * x391
    x1016 = x1015 * x55
    x1017 = x1013 * x68 + x1014 * x65 - x1016 * x11
    x1018 = -x1007 * x11 + x1008 * x65 + x1017 * x74
    x1019 = -x14 * x426 + x373 * x396 + x93
    x1020 = x1019 * x55
    x1021 = -x14 * x428 + x373 * x399 + x96
    x1022 = x1021 * x55
    x1023 = x1011 * x65 - x1022 * x11
    x1024 = -x14 * x431 + x373 * x404 + x95
    x1025 = x1024 * x55
    x1026 = x1015 * x65 + x1023 * x68 - x1025 * x11
    x1027 = x1006 * x65 - x1020 * x11 + x1026 * x74
    x1028 = x1 * (x1014 - x1016)
    x1029 = x1 * (x1010 - x1012)
    x1030 = (
        x1009
        + x1018 * x65
        - x1027 * x69
        + x74
        * (x1017 * x65 - x1026 * x69 + x1028 + x68 * (x1013 * x65 - x1023 * x69 + x1029))
    )
    x1031 = -x1003 * x11 + x1004 * x65 + x1027 * x76
    x1032 = x1 * (x1006 - x1020)
    x1033 = x150 + x373 * x425 - x380 * x450
    x1034 = x152 + x373 * x427 - x380 * x451
    x1035 = x1021 * x65 - x1034 * x69
    x1036 = x151 + x373 * x430 - x380 * x453
    x1037 = x1024 * x65 + x1035 * x68 - x1036 * x69
    x1038 = x1019 * x65 - x1033 * x69 + x1037 * x74
    x1039 = x1 * (x1015 - x1025)
    x1040 = x1 * (x1011 - x1022)
    x1041 = x140 + x373 * x423 - x380 * x462
    x1042 = (
        x1005
        + x1030 * x26
        + x1031 * x65
        - x69 * (x1002 * x65 + x1038 * x76 - x1041 * x69)
        + x76
        * (
            x1027 * x65
            + x1032
            - x1038 * x69
            + x74
            * (
                x1026 * x65
                - x1037 * x69
                + x1039
                + x68 * (x1023 * x65 - x1035 * x69 + x1040)
            )
        )
    )
    x1043 = x1042 + x23 * x446
    x1044 = x1019 * x68 - x14 * x479 + x227 + x373 * x464
    x1045 = x1044 * x55
    x1046 = x1006 * x68 - x14 * x465 + x219 + x373 * x466
    x1047 = x1 * (-x1045 + x1046)
    x1048 = x1011 * x68 - x14 * x470 + x221 + x373 * x468
    x1049 = x1021 * x68 - x14 * x481 + x241 + x373 * x469
    x1050 = x1049 * x55
    x1051 = x1048 * x65 - x1050 * x11
    x1052 = x1015 * x68 - x14 * x475 + x220 + x373 * x473
    x1053 = x1024 * x68 - x14 * x484 + x240 + x373 * x474
    x1054 = x1053 * x55
    x1055 = x1051 * x68 + x1052 * x65 - x1054 * x11
    x1056 = -x1045 * x11 + x1046 * x65 + x1055 * x74
    x1057 = x1 * (x1052 - x1054)
    x1058 = x1 * (x1048 - x1050)
    x1059 = x1034 * x68 + x255 + x373 * x480 - x380 * x498
    x1060 = x1049 * x65 - x1059 * x69
    x1061 = x1036 * x68 + x260 + x373 * x483 - x380 * x502
    x1062 = x1053 * x65 + x1060 * x68 - x1061 * x69
    x1063 = x1033 * x68 + x265 + x373 * x478 - x380 * x506
    x1064 = (
        x1047
        + x1056 * x65
        - x69 * (x1044 * x65 + x1062 * x74 - x1063 * x69)
        + x74
        * (x1055 * x65 + x1057 - x1062 * x69 + x68 * (x1051 * x65 + x1058 - x1060 * x69))
    )
    x1065 = x1030 * x27 + x1064
    x1066 = x1065 + x23 * x495
    x1067 = x1030 * x28
    x1068 = x1067 + x23 * x510
    x1069 = x1052 * x55
    x1070 = x1014 * x68 - x14 * x513 + x282 + x373 * x514
    x1071 = x1 * (-x1069 + x1070)
    x1072 = x1048 * x55
    x1073 = x1010 * x68 - x14 * x516 + x278 + x373 * x517
    x1074 = x1 * (-x1072 + x1073)
    x1075 = -x1072 * x11 + x1073 * x65
    x1076 = -x1069 * x11 + x1070 * x65 + x1075 * x68
    x1077 = (
        -x1055 * x69 + x1071 + x1076 * x65 + x68 * (-x1051 * x69 + x1074 + x1075 * x65)
    )
    x1078 = x1064 + x1077 * x26
    x1079 = x1078 + x23 * x526
    x1080 = x1053 * x74 - x14 * x547 + x320 + x373 * x530
    x1081 = x1080 * x55
    x1082 = x1052 * x74 - x14 * x531 + x318 + x373 * x532
    x1083 = x1 * (-x1081 + x1082)
    x1084 = x1049 * x74 - x14 * x541 + x310 + x373 * x534
    x1085 = x1084 * x55
    x1086 = x1048 * x74 - x14 * x535 + x308 + x373 * x536
    x1087 = x1 * (-x1085 + x1086)
    x1088 = -x1085 * x11 + x1086 * x65
    x1089 = x1059 * x74 + x330 + x373 * x540 - x380 * x554
    x1090 = x1084 * x65 - x1089 * x69
    x1091 = -x1081 * x11 + x1082 * x65 + x1088 * x68
    x1092 = x1061 * x74 + x335 + x373 * x546 - x380 * x558
    x1093 = (
        x1083
        + x1091 * x65
        + x68 * (x1087 + x1088 * x65 - x1090 * x69)
        - x69 * (x1080 * x65 + x1090 * x68 - x1092 * x69)
    )
    x1094 = x1077 * x27 + x1093
    x1095 = x1094 + x23 * x551
    x1096 = x1077 * x28
    x1097 = x1096 + x23 * x561
    x1098 = x1086 * x55
    x1099 = x1073 * x74 - x14 * x564 + x342 + x373 * x565
    x1100 = x1 * (-x1098 + x1099)
    x1101 = -x1098 * x11 + x1099 * x65
    x1102 = -x1088 * x69 + x1100 + x1101 * x65
    x1103 = x1093 + x1102 * x26
    x1104 = x1103 + x23 * x571
    x1105 = x1084 * x76 - x14 * x582 + x352 + x373 * x575
    x1106 = x1105 * x55
    x1107 = x1086 * x76 - x14 * x576 + x363 + x373 * x577
    x1108 = x1 * (-x1106 + x1107)
    x1109 = -x11 * x1106 + x1107 * x65
    x1110 = x1089 * x76 + x368 + x373 * x581 - x380 * x589
    x1111 = x1102 * x27 + x1108 + x1109 * x65 - x69 * (x1105 * x65 - x1110 * x69)
    x1112 = x1111 + x23 * x586
    x1113 = x1102 * x28
    x1114 = x1113 + x23 * x591
    x1115 = x14 * x646
    x1116 = -x14 * x651 + x373 * x645
    x1117 = x1116 * x55
    x1118 = x1 * (-x1115 - x1117 + x373 * x648)
    x1119 = x14 * x598
    x1120 = x14 * x621
    x1121 = -x1120 + x373 * x597
    x1122 = x1121 * x55
    x1123 = x1 * (-x1119 - x1122 + x373 * x600)
    x1124 = -x1119 + x373 * x600
    x1125 = x373 * x603
    x1126 = x14 * x607
    x1127 = x1125 - x1126
    x1128 = x373 * x606
    x1129 = x14 * x625
    x1130 = x1128 - x1129
    x1131 = x1130 * x55
    x1132 = -x11 * x1131 + x1127 * x65
    x1133 = x14 * x615
    x1134 = -x1133 + x373 * x611
    x1135 = x373 * x614
    x1136 = x14 * x631
    x1137 = x1135 - x1136
    x1138 = x1137 * x55
    x1139 = -x11 * x1138 + x1132 * x68 + x1134 * x65
    x1140 = -x11 * x1122 + x1124 * x65 + x1139 * x74
    x1141 = -x14 * x654 + x373 * x620
    x1142 = x1141 * x55
    x1143 = x373 * x624
    x1144 = x14 * x658
    x1145 = x1143 - x1144
    x1146 = x1145 * x55
    x1147 = -x11 * x1146 + x1130 * x65
    x1148 = x373 * x630
    x1149 = x14 * x663
    x1150 = x1148 - x1149
    x1151 = x1150 * x55
    x1152 = -x11 * x1151 + x1137 * x65 + x1147 * x68
    x1153 = -x11 * x1142 + x1121 * x65 + x1152 * x74
    x1154 = x1 * (-x1133 - x1138 + x373 * x611)
    x1155 = x1 * (-x1126 - x1131 + x373 * x603)
    x1156 = (
        x1123
        + x1140 * x65
        - x1153 * x69
        + x74
        * (x1139 * x65 - x1152 * x69 + x1154 + x68 * (x1132 * x65 - x1147 * x69 + x1155))
    )
    x1157 = -x1115 + x373 * x648
    x1158 = -x11 * x1117 + x1153 * x76 + x1157 * x65
    x1159 = x1 * (-x1120 - x1142 + x373 * x597)
    x1160 = x373 * x653
    x1161 = x380 * x684
    x1162 = x1160 - x1161
    x1163 = x373 * x657
    x1164 = x380 * x687
    x1165 = x1163 - x1164
    x1166 = x1145 * x65 - x1165 * x69
    x1167 = x373 * x662
    x1168 = x380 * x691
    x1169 = x1167 - x1168
    x1170 = x1150 * x65 + x1166 * x68 - x1169 * x69
    x1171 = x1141 * x65 - x1162 * x69 + x1170 * x74
    x1172 = x1 * (-x1136 - x1151 + x373 * x614)
    x1173 = x1 * (-x1129 - x1146 + x373 * x606)
    x1174 = x373 * x650 - x380 * x701
    x1175 = (
        x1118
        + x1156 * x26
        + x1158 * x65
        - x69 * (x1116 * x65 + x1171 * x76 - x1174 * x69)
        + x76
        * (
            x1153 * x65
            + x1159
            - x1171 * x69
            + x74
            * (
                x1152 * x65
                - x1170 * x69
                + x1172
                + x68 * (x1147 * x65 - x1166 * x69 + x1173)
            )
        )
    )
    x1176 = x1175 + x24 * x446
    x1177 = x1141 * x68 - x14 * x726 + x373 * x705
    x1178 = x1177 * x55
    x1179 = x1121 * x68 - x14 * x706 + x373 * x708
    x1180 = x1 * (-x1178 + x1179)
    x1181 = x373 * x713
    x1182 = x14 * x717
    x1183 = x1130 * x68 + x1181 - x1182
    x1184 = x373 * x716
    x1185 = x14 * x730
    x1186 = x1145 * x68 + x1184 - x1185
    x1187 = x1186 * x55
    x1188 = -x11 * x1187 + x1183 * x65
    x1189 = x1137 * x68 - x14 * x722 + x373 * x710
    x1190 = x1150 * x68 - x14 * x734 + x373 * x721
    x1191 = x1190 * x55
    x1192 = -x11 * x1191 + x1188 * x68 + x1189 * x65
    x1193 = -x11 * x1178 + x1179 * x65 + x1192 * x74
    x1194 = x1 * (x1189 - x1191)
    x1195 = x1 * (x1183 - x1187)
    x1196 = x373 * x729
    x1197 = x380 * x750
    x1198 = x1165 * x68 + x1196 - x1197
    x1199 = x1186 * x65 - x1198 * x69
    x1200 = x373 * x733
    x1201 = x380 * x756
    x1202 = x1169 * x68 + x1200 - x1201
    x1203 = x1190 * x65 + x1199 * x68 - x1202 * x69
    x1204 = x1162 * x68 + x373 * x725 - x380 * x761
    x1205 = (
        x1180
        + x1193 * x65
        - x69 * (x1177 * x65 + x1203 * x74 - x1204 * x69)
        + x74
        * (x1192 * x65 + x1194 - x1203 * x69 + x68 * (x1188 * x65 + x1195 - x1199 * x69))
    )
    x1206 = x1156 * x27 + x1205
    x1207 = x1206 + x24 * x495
    x1208 = x380 * x765
    x1209 = -x14 * x794 + x373 * x765
    x1210 = x1209 * x55
    x1211 = x1 * (-x1208 - x1210 + x373 * x597 * x68)
    x1212 = x597 * x68
    x1213 = -x1208 + x1212 * x373
    x1214 = x380 * x770
    x1215 = -x1214 + x373 * x881
    x1216 = -x14 * x790 + x373 * x770
    x1217 = x1216 * x55
    x1218 = x380 * x767
    x1219 = -x1218 + x373 * x883
    x1220 = -x14 * x786 + x373 * x767
    x1221 = x1220 * x55
    x1222 = -x11 * x1221 + x1219 * x65
    x1223 = -x11 * x1217 + x1215 * x65 + x1222 * x68
    x1224 = -x11 * x1210 + x1213 * x65 + x1223 * x74
    x1225 = x1 * (-x1214 - x1217 + x373 * x614 * x68)
    x1226 = x1 * (-x1218 - x1221 + x373 * x606 * x68)
    x1227 = x1163 * x68 - x1164 * x68
    x1228 = x1220 * x65 - x1227 * x69
    x1229 = x1167 * x68 - x1168 * x68
    x1230 = x1216 * x65 + x1228 * x68 - x1229 * x69
    x1231 = x1160 * x68 - x1161 * x68
    x1232 = (
        x1211
        + x1224 * x65
        - x69 * (x1209 * x65 + x1230 * x74 - x1231 * x69)
        + x74
        * (x1223 * x65 + x1225 - x1230 * x69 + x68 * (x1222 * x65 + x1226 - x1228 * x69))
    )
    x1233 = x1156 * x28 + x1232
    x1234 = x1233 + x24 * x510
    x1235 = x1189 * x55
    x1236 = x1134 * x68 - x14 * x799 + x373 * x810
    x1237 = x1 * (-x1235 + x1236)
    x1238 = x1183 * x55
    x1239 = x1127 * x68 - x14 * x802 + x373 * x804
    x1240 = x1 * (-x1238 + x1239)
    x1241 = -x11 * x1238 + x1239 * x65
    x1242 = -x11 * x1235 + x1236 * x65 + x1241 * x68
    x1243 = (
        -x1192 * x69 + x1237 + x1242 * x65 + x68 * (-x1188 * x69 + x1240 + x1241 * x65)
    )
    x1244 = x1205 + x1243 * x26
    x1245 = x1244 + x24 * x526
    x1246 = x1190 * x74 - x14 * x842 + x373 * x820
    x1247 = x1246 * x55
    x1248 = x1189 * x74 - x14 * x821 + x373 * x839
    x1249 = x1 * (-x1247 + x1248)
    x1250 = x1186 * x74 - x14 * x834 + x373 * x825
    x1251 = x1250 * x55
    x1252 = x1183 * x74 - x14 * x826 + x373 * x828
    x1253 = x1 * (-x1251 + x1252)
    x1254 = -x11 * x1251 + x1252 * x65
    x1255 = x373 * x833
    x1256 = x380 * x850
    x1257 = x1198 * x74 + x1255 - x1256
    x1258 = x1250 * x65 - x1257 * x69
    x1259 = -x11 * x1247 + x1248 * x65 + x1254 * x68
    x1260 = x1202 * x74 + x373 * x841 - x380 * x855
    x1261 = (
        x1249
        + x1259 * x65
        + x68 * (x1253 + x1254 * x65 - x1258 * x69)
        - x69 * (x1246 * x65 + x1258 * x68 - x1260 * x69)
    )
    x1262 = x1243 * x27 + x1261
    x1263 = x1262 + x24 * x551
    x1264 = x1216 * x68 - x14 * x877 + x373 * x858
    x1265 = x1264 * x55
    x1266 = x68 * x710
    x1267 = x1215 * x68 + x1266 * x373 - x380 * x858
    x1268 = x1 * (-x1265 + x1267)
    x1269 = x1220 * x68 - x14 * x873 + x373 * x860
    x1270 = x1269 * x55
    x1271 = x1219 * x68 + x373 * x960 - x380 * x860
    x1272 = x1 * (-x1270 + x1271)
    x1273 = -x11 * x1270 + x1271 * x65
    x1274 = x1196 * x68 - x1197 * x68 + x1227 * x68
    x1275 = x1269 * x65 - x1274 * x69
    x1276 = -x11 * x1265 + x1267 * x65 + x1273 * x68
    x1277 = x1200 * x68 - x1201 * x68 + x1229 * x68
    x1278 = (
        x1268
        + x1276 * x65
        + x68 * (x1272 + x1273 * x65 - x1275 * x69)
        - x69 * (x1264 * x65 + x1275 * x68 - x1277 * x69)
    )
    x1279 = x1243 * x28 + x1278
    x1280 = x1279 + x24 * x561
    x1281 = x380 * x881
    x1282 = x1215 * x55
    x1283 = x1 * (-x1281 - x1282 + x373 * x611 * x68)
    x1284 = x611 * x68
    x1285 = -x1281 + x1284 * x373
    x1286 = x603 * x68
    x1287 = x380 * x883
    x1288 = x1286 * x373 - x1287
    x1289 = x1219 * x55
    x1290 = -x11 * x1289 + x1288 * x65
    x1291 = -x11 * x1282 + x1285 * x65 + x1290 * x68
    x1292 = x1 * (-x1287 - x1289 + x373 * x603 * x68)
    x1293 = (
        -x1223 * x69 + x1283 + x1291 * x65 + x68 * (-x1222 * x69 + x1290 * x65 + x1292)
    )
    x1294 = x1232 + x1293 * x26
    x1295 = x1294 + x23 * x892
    x1296 = x1278 + x1293 * x27
    x1297 = x1296 + x23 * x895
    x1298 = x1136 * x898
    x1299 = x1148 * x898 - x1149 * x898
    x1300 = x1299 * x55
    x1301 = x1 * (-x1298 - x1300 + 2 * x373 * x614 * x897)
    x1302 = x1129 * x898
    x1303 = x1143 * x898 - x1144 * x898
    x1304 = x1303 * x55
    x1305 = x1 * (-x1302 - x1304 + 2 * x373 * x606 * x897)
    x1306 = x1128 * x898 - x1302
    x1307 = -x11 * x1304 + x1306 * x65
    x1308 = x1163 * x898 - x1164 * x898
    x1309 = x1303 * x65 - x1308 * x69
    x1310 = x1135 * x898 - x1298
    x1311 = -x11 * x1300 + x1307 * x68 + x1310 * x65
    x1312 = x1167 * x898 - x1168 * x898
    x1313 = (
        x1301
        + x1311 * x65
        + x68 * (x1305 + x1307 * x65 - x1309 * x69)
        - x69 * (x1299 * x65 + x1309 * x68 - x1312 * x69)
    )
    x1314 = x1293 * x28 + x1313
    x1315 = x1314 + x23 * x910
    x1316 = x1252 * x55
    x1317 = x1239 * x74 - x14 * x918 + x373 * x920
    x1318 = x1 * (-x1316 + x1317)
    x1319 = -x11 * x1316 + x1317 * x65
    x1320 = -x1254 * x69 + x1318 + x1319 * x65
    x1321 = x1261 + x1320 * x26
    x1322 = x1321 + x24 * x571
    x1323 = x1250 * x76 - x14 * x938 + x373 * x931
    x1324 = x1323 * x55
    x1325 = x1252 * x76 - x14 * x932 + x373 * x934
    x1326 = x1 * (-x1324 + x1325)
    x1327 = -x11 * x1324 + x1325 * x65
    x1328 = x1257 * x76 + x373 * x937 - x380 * x945
    x1329 = x1320 * x27 + x1326 + x1327 * x65 - x69 * (x1323 * x65 - x1328 * x69)
    x1330 = x1329 + x24 * x586
    x1331 = x1269 * x74 - x14 * x956 + x373 * x947
    x1332 = x1331 * x55
    x1333 = x68 * x828
    x1334 = x1271 * x74 + x1333 * x373 - x380 * x947
    x1335 = x1 * (-x1332 + x1334)
    x1336 = -x11 * x1332 + x1334 * x65
    x1337 = x1255 * x68 - x1256 * x68 + x1274 * x74
    x1338 = x1335 + x1336 * x65 - x69 * (x1331 * x65 - x1337 * x69)
    x1339 = x1320 * x28 + x1338
    x1340 = x1339 + x24 * x591
    x1341 = x1271 * x55
    x1342 = x68 * x804
    x1343 = x1288 * x68 + x1342 * x373 - x380 * x960
    x1344 = x1 * (-x1341 + x1343)
    x1345 = -x11 * x1341 + x1343 * x65
    x1346 = -x1273 * x69 + x1344 + x1345 * x65
    x1347 = x1278 + x1346 * x26
    x1348 = x1347 + x23 * x966
    x1349 = x1338 + x1346 * x27
    x1350 = x1349 + x23 * x969
    x1351 = x1184 * x898 - x1185 * x898 + x1303 * x68
    x1352 = x1351 * x55
    x1353 = x1181 * x898 - x1182 * x898 + x1306 * x68
    x1354 = x1 * (-x1352 + x1353)
    x1355 = -x11 * x1352 + x1353 * x65
    x1356 = x1196 * x898 - x1197 * x898 + x1308 * x68
    x1357 = x1354 + x1355 * x65 - x69 * (x1351 * x65 - x1356 * x69)
    x1358 = x1346 * x28 + x1357
    x1359 = x1358 + x23 * x977
    x1360 = x1126 * x898
    x1361 = x1306 * x55
    x1362 = x1 * (-x1360 - x1361 + 2 * x373 * x603 * x897)
    x1363 = x1125 * x898 - x1360
    x1364 = -x11 * x1361 + x1363 * x65
    x1365 = -x1307 * x69 + x1362 + x1364 * x65
    x1366 = x1313 + x1365 * x26
    x1367 = x1366 + x23 * x986
    x1368 = x1357 + x1365 * x27
    x1369 = x1368 + x23 * x989
    x1370 = x1129 * x992
    x1371 = x1143 * x992 - x1144 * x992
    x1372 = x1371 * x55
    x1373 = x1 * (-x1370 - x1372 + 6 * x373 * x606 * x991)
    x1374 = x1128 * x992 - x1370
    x1375 = -x11 * x1372 + x1374 * x65
    x1376 = x1163 * x992 - x1164 * x992
    x1377 = x1365 * x28 + x1373 + x1375 * x65 - x69 * (x1371 * x65 - x1376 * x69)
    x1378 = x1000 * x23 + x1377
    x1379 = -x16 * x651 + x594 * x645 + x64
    x1380 = x1379 * x55
    x1381 = x112 - x16 * x646 + x594 * x648
    x1382 = x1 * (-x1380 + x1381)
    x1383 = x121 - x16 * x621 + x594 * x597
    x1384 = x1383 * x55
    x1385 = -x16 * x598 + x161 + x594 * x600
    x1386 = x1 * (-x1384 + x1385)
    x1387 = x594 * x603
    x1388 = x16 * x607
    x1389 = x1387 - x1388 + x169
    x1390 = x594 * x606
    x1391 = x16 * x625
    x1392 = x124 + x1390 - x1391
    x1393 = x1392 * x55
    x1394 = -x11 * x1393 + x1389 * x65
    x1395 = -x16 * x615 + x168 + x594 * x611
    x1396 = x594 * x614
    x1397 = x16 * x631
    x1398 = x123 + x1396 - x1397
    x1399 = x1398 * x55
    x1400 = -x11 * x1399 + x1394 * x68 + x1395 * x65
    x1401 = -x11 * x1384 + x1385 * x65 + x1400 * x74
    x1402 = -x16 * x654 + x594 * x620 + x93
    x1403 = x1402 * x55
    x1404 = x594 * x624
    x1405 = x16 * x658
    x1406 = x1404 - x1405 + x96
    x1407 = x1406 * x55
    x1408 = -x11 * x1407 + x1392 * x65
    x1409 = x594 * x630
    x1410 = x16 * x663
    x1411 = x1409 - x1410 + x95
    x1412 = x1411 * x55
    x1413 = -x11 * x1412 + x1398 * x65 + x1408 * x68
    x1414 = -x11 * x1403 + x1383 * x65 + x1413 * x74
    x1415 = x1 * (x1395 - x1399)
    x1416 = x1 * (x1389 - x1393)
    x1417 = (
        x1386
        + x1401 * x65
        - x1414 * x69
        + x74
        * (x1400 * x65 - x1413 * x69 + x1415 + x68 * (x1394 * x65 - x1408 * x69 + x1416))
    )
    x1418 = -x11 * x1380 + x1381 * x65 + x1414 * x76
    x1419 = x1 * (x1383 - x1403)
    x1420 = x594 * x653
    x1421 = x601 * x684
    x1422 = x1420 - x1421 + x150
    x1423 = x594 * x657
    x1424 = x601 * x687
    x1425 = x1423 - x1424 + x152
    x1426 = x1406 * x65 - x1425 * x69
    x1427 = x594 * x662
    x1428 = x601 * x691
    x1429 = x1427 - x1428 + x151
    x1430 = x1411 * x65 + x1426 * x68 - x1429 * x69
    x1431 = x1402 * x65 - x1422 * x69 + x1430 * x74
    x1432 = x1 * (x1398 - x1412)
    x1433 = x1 * (x1392 - x1407)
    x1434 = x140 + x594 * x650 - x601 * x701
    x1435 = (
        x1382
        + x1417 * x26
        + x1418 * x65
        - x69 * (x1379 * x65 + x1431 * x76 - x1434 * x69)
        + x76
        * (
            x1414 * x65
            + x1419
            - x1431 * x69
            + x74
            * (
                x1413 * x65
                - x1430 * x69
                + x1432
                + x68 * (x1408 * x65 - x1426 * x69 + x1433)
            )
        )
    )
    x1436 = x1435 + x24 * x679
    x1437 = -x16 * x726 + x227 + x594 * x705
    x1438 = x1437 * x55
    x1439 = -x16 * x706 + x219 + x594 * x708
    x1440 = x1 * (-x1438 + x1439)
    x1441 = x594 * x713
    x1442 = x16 * x717
    x1443 = x1441 - x1442 + x221
    x1444 = x594 * x716
    x1445 = x16 * x730
    x1446 = x1444 - x1445 + x241
    x1447 = x1446 * x55
    x1448 = -x11 * x1447 + x1443 * x65
    x1449 = -x16 * x722 + x220 + x594 * x710
    x1450 = -x16 * x734 + x240 + x594 * x721
    x1451 = x1450 * x55
    x1452 = -x11 * x1451 + x1448 * x68 + x1449 * x65
    x1453 = -x11 * x1438 + x1439 * x65 + x1452 * x74
    x1454 = x1 * (x1449 - x1451)
    x1455 = x1 * (x1443 - x1447)
    x1456 = x594 * x729
    x1457 = x601 * x750
    x1458 = x1456 - x1457 + x255
    x1459 = x1446 * x65 - x1458 * x69
    x1460 = x594 * x733
    x1461 = x601 * x756
    x1462 = x1460 - x1461 + x260
    x1463 = x1450 * x65 + x1459 * x68 - x1462 * x69
    x1464 = x265 + x594 * x725 - x601 * x761
    x1465 = (
        x1440
        + x1453 * x65
        - x69 * (x1437 * x65 + x1463 * x74 - x1464 * x69)
        + x74
        * (x1452 * x65 + x1454 - x1463 * x69 + x68 * (x1448 * x65 + x1455 - x1459 * x69))
    )
    x1466 = x1417 * x27 + x1465
    x1467 = x1466 + x24 * x746
    x1468 = x1402 * x68 - x16 * x794 + x594 * x765
    x1469 = x1468 * x55
    x1470 = x1212 * x594 + x1383 * x68 - x601 * x765
    x1471 = x1 * (-x1469 + x1470)
    x1472 = x1392 * x68 + x594 * x883 - x601 * x767
    x1473 = x1406 * x68 - x16 * x786 + x594 * x767
    x1474 = x1473 * x55
    x1475 = -x11 * x1474 + x1472 * x65
    x1476 = x1398 * x68 + x594 * x881 - x601 * x770
    x1477 = x1411 * x68 - x16 * x790 + x594 * x770
    x1478 = x1477 * x55
    x1479 = -x11 * x1478 + x1475 * x68 + x1476 * x65
    x1480 = -x11 * x1469 + x1470 * x65 + x1479 * x74
    x1481 = x1 * (x1476 - x1478)
    x1482 = x1 * (x1472 - x1474)
    x1483 = x1423 * x68 - x1424 * x68 + x1425 * x68
    x1484 = x1473 * x65 - x1483 * x69
    x1485 = x1427 * x68 - x1428 * x68 + x1429 * x68
    x1486 = x1477 * x65 + x1484 * x68 - x1485 * x69
    x1487 = x1420 * x68 - x1421 * x68 + x1422 * x68
    x1488 = (
        x1471
        + x1480 * x65
        - x69 * (x1468 * x65 + x1486 * x74 - x1487 * x69)
        + x74
        * (x1479 * x65 + x1481 - x1486 * x69 + x68 * (x1475 * x65 + x1482 - x1484 * x69))
    )
    x1489 = x1417 * x28 + x1488
    x1490 = x1489 + x24 * x784
    x1491 = x1449 * x55
    x1492 = -x16 * x799 + x282 + x594 * x810
    x1493 = x1 * (-x1491 + x1492)
    x1494 = x1443 * x55
    x1495 = -x16 * x802 + x278 + x594 * x804
    x1496 = x1 * (-x1494 + x1495)
    x1497 = -x11 * x1494 + x1495 * x65
    x1498 = -x11 * x1491 + x1492 * x65 + x1497 * x68
    x1499 = (
        -x1452 * x69 + x1493 + x1498 * x65 + x68 * (-x1448 * x69 + x1496 + x1497 * x65)
    )
    x1500 = x1465 + x1499 * x26
    x1501 = x1500 + x24 * x814
    x1502 = -x16 * x842 + x320 + x594 * x820
    x1503 = x1502 * x55
    x1504 = -x16 * x821 + x318 + x594 * x839
    x1505 = x1 * (-x1503 + x1504)
    x1506 = -x16 * x834 + x310 + x594 * x825
    x1507 = x1506 * x55
    x1508 = -x16 * x826 + x308 + x594 * x828
    x1509 = x1 * (-x1507 + x1508)
    x1510 = -x11 * x1507 + x1508 * x65
    x1511 = x594 * x833
    x1512 = x601 * x850
    x1513 = x1511 - x1512 + x330
    x1514 = x1506 * x65 - x1513 * x69
    x1515 = -x11 * x1503 + x1504 * x65 + x1510 * x68
    x1516 = x335 + x594 * x841 - x601 * x855
    x1517 = (
        x1505
        + x1515 * x65
        + x68 * (x1509 + x1510 * x65 - x1514 * x69)
        - x69 * (x1502 * x65 + x1514 * x68 - x1516 * x69)
    )
    x1518 = x1499 * x27 + x1517
    x1519 = x1518 + x24 * x846
    x1520 = x1450 * x68 - x16 * x877 + x594 * x858
    x1521 = x1520 * x55
    x1522 = x1266 * x594 + x1449 * x68 - x601 * x858
    x1523 = x1 * (-x1521 + x1522)
    x1524 = x1446 * x68 - x16 * x873 + x594 * x860
    x1525 = x1524 * x55
    x1526 = x1443 * x68 + x594 * x960 - x601 * x860
    x1527 = x1 * (-x1525 + x1526)
    x1528 = -x11 * x1525 + x1526 * x65
    x1529 = x1456 * x68 - x1457 * x68 + x1458 * x68
    x1530 = x1524 * x65 - x1529 * x69
    x1531 = -x11 * x1521 + x1522 * x65 + x1528 * x68
    x1532 = x1460 * x68 - x1461 * x68 + x1462 * x68
    x1533 = (
        x1523
        + x1531 * x65
        + x68 * (x1527 + x1528 * x65 - x1530 * x69)
        - x69 * (x1520 * x65 + x1530 * x68 - x1532 * x69)
    )
    x1534 = x1499 * x28 + x1533
    x1535 = x1534 + x24 * x871
    x1536 = x24 * x892
    x1537 = x1476 * x55
    x1538 = x1284 * x594 + x1395 * x68 - x601 * x881
    x1539 = x1 * (-x1537 + x1538)
    x1540 = x1472 * x55
    x1541 = x1286 * x594 + x1389 * x68 - x601 * x883
    x1542 = x1 * (-x1540 + x1541)
    x1543 = -x11 * x1540 + x1541 * x65
    x1544 = -x11 * x1537 + x1538 * x65 + x1543 * x68
    x1545 = (
        -x1479 * x69 + x1539 + x1544 * x65 + x68 * (-x1475 * x69 + x1542 + x1543 * x65)
    )
    x1546 = x1488 + x1545 * x26
    x1547 = x24 * x895
    x1548 = x1533 + x1545 * x27
    x1549 = x24 * x910
    x1550 = x1409 * x898 - x1410 * x898 + x1477 * x74
    x1551 = x1550 * x55
    x1552 = x1396 * x898 - x1397 * x898 + x1476 * x74
    x1553 = x1 * (-x1551 + x1552)
    x1554 = x1404 * x898 - x1405 * x898 + x1473 * x74
    x1555 = x1554 * x55
    x1556 = x1390 * x898 - x1391 * x898 + x1472 * x74
    x1557 = x1 * (-x1555 + x1556)
    x1558 = -x11 * x1555 + x1556 * x65
    x1559 = x1423 * x898 - x1424 * x898 + x1483 * x74
    x1560 = x1554 * x65 - x1559 * x69
    x1561 = -x11 * x1551 + x1552 * x65 + x1558 * x68
    x1562 = x1427 * x898 - x1428 * x898 + x1485 * x74
    x1563 = (
        x1553
        + x1561 * x65
        + x68 * (x1557 + x1558 * x65 - x1560 * x69)
        - x69 * (x1550 * x65 + x1560 * x68 - x1562 * x69)
    )
    x1564 = x1545 * x28 + x1563
    x1565 = x1508 * x55
    x1566 = -x16 * x918 + x342 + x594 * x920
    x1567 = x1 * (-x1565 + x1566)
    x1568 = -x11 * x1565 + x1566 * x65
    x1569 = -x1510 * x69 + x1567 + x1568 * x65
    x1570 = x1517 + x1569 * x26
    x1571 = x1570 + x24 * x925
    x1572 = -x16 * x938 + x352 + x594 * x931
    x1573 = x1572 * x55
    x1574 = -x16 * x932 + x363 + x594 * x934
    x1575 = x1 * (-x1573 + x1574)
    x1576 = -x11 * x1573 + x1574 * x65
    x1577 = x368 + x594 * x937 - x601 * x945
    x1578 = x1569 * x27 + x1575 + x1576 * x65 - x69 * (x1572 * x65 - x1577 * x69)
    x1579 = x1578 + x24 * x942
    x1580 = x1506 * x68 - x16 * x956 + x594 * x947
    x1581 = x1580 * x55
    x1582 = x1333 * x594 + x1508 * x68 - x601 * x947
    x1583 = x1 * (-x1581 + x1582)
    x1584 = -x11 * x1581 + x1582 * x65
    x1585 = x1511 * x68 - x1512 * x68 + x1513 * x68
    x1586 = x1583 + x1584 * x65 - x69 * (x1580 * x65 - x1585 * x69)
    x1587 = x1569 * x28 + x1586
    x1588 = x1587 + x24 * x954
    x1589 = x24 * x966
    x1590 = x1526 * x55
    x1591 = x1342 * x594 + x1495 * x68 - x601 * x960
    x1592 = x1 * (-x1590 + x1591)
    x1593 = -x11 * x1590 + x1591 * x65
    x1594 = -x1528 * x69 + x1592 + x1593 * x65
    x1595 = x1533 + x1594 * x26
    x1596 = x24 * x969
    x1597 = x1586 + x1594 * x27
    x1598 = x24 * x977
    x1599 = x1444 * x898 - x1445 * x898 + x1524 * x74
    x1600 = x1599 * x55
    x1601 = x1441 * x898 - x1442 * x898 + x1526 * x74
    x1602 = x1 * (-x1600 + x1601)
    x1603 = -x11 * x1600 + x1601 * x65
    x1604 = x1456 * x898 - x1457 * x898 + x1529 * x74
    x1605 = x1602 + x1603 * x65 - x69 * (x1599 * x65 - x1604 * x69)
    x1606 = x1594 * x28 + x1605
    x1607 = x24 * x986
    x1608 = x1556 * x55
    x1609 = x1387 * x898 - x1388 * x898 + x1541 * x74
    x1610 = x1 * (-x1608 + x1609)
    x1611 = -x11 * x1608 + x1609 * x65
    x1612 = -x1558 * x69 + x1610 + x1611 * x65
    x1613 = x1563 + x1612 * x26
    x1614 = x24 * x989
    x1615 = x1605 + x1612 * x27
    x1616 = x1000 * x24
    x1617 = x1404 * x992 - x1405 * x992 + x1554 * x76
    x1618 = x1617 * x55
    x1619 = x1390 * x992 - x1391 * x992 + x1556 * x76
    x1620 = x1 * (-x1618 + x1619)
    x1621 = -x11 * x1618 + x1619 * x65
    x1622 = x1423 * x992 - x1424 * x992 + x1559 * x76
    x1623 = x1612 * x28 + x1620 + x1621 * x65 - x69 * (x1617 * x65 - x1622 * x69)
    x1624 = x26 * x394 + x422
    x1625 = x27 * x394 + x477
    x1626 = x26 * x523 + x477
    x1627 = x27 * x523 + x545
    x1628 = x26 * x568 + x545
    x1629 = x27 * x568 + x580
    x1630 = x1018 * x26 + x1031
    x1631 = x1624 * x23 + x1630
    x1632 = x1018 * x27 + x1056
    x1633 = x1625 * x23 + x1632
    x1634 = x1018 * x28
    x1635 = x1634 + x394 * x509
    x1636 = x1056 + x1076 * x26
    x1637 = x1626 * x23 + x1636
    x1638 = x1076 * x27 + x1091
    x1639 = x1627 * x23 + x1638
    x1640 = x1076 * x28
    x1641 = x1640 + x509 * x523
    x1642 = x1091 + x1101 * x26
    x1643 = x1628 * x23 + x1642
    x1644 = x1101 * x27 + x1109
    x1645 = x1629 * x23 + x1644
    x1646 = x1101 * x28
    x1647 = x1646 + x509 * x568
    x1648 = x1140 * x26 + x1158
    x1649 = x1624 * x24 + x1648
    x1650 = x1140 * x27 + x1193
    x1651 = x1625 * x24 + x1650
    x1652 = x1140 * x28 + x1224
    x1653 = x1652 + x394 * x764
    x1654 = x1193 + x1242 * x26
    x1655 = x1626 * x24 + x1654
    x1656 = x1242 * x27 + x1259
    x1657 = x1627 * x24 + x1656
    x1658 = x1242 * x28 + x1276
    x1659 = x1658 + x523 * x764
    x1660 = x1224 + x1291 * x26
    x1661 = x1294 + x1660 * x22
    x1662 = x1276 + x1291 * x27
    x1663 = x1296 + x1662 * x22
    x1664 = x1291 * x28 + x1311
    x1665 = x1314 + x1664 * x22
    x1666 = x1259 + x1319 * x26
    x1667 = x1628 * x24 + x1666
    x1668 = x1319 * x27 + x1327
    x1669 = x1629 * x24 + x1668
    x1670 = x1319 * x28 + x1336
    x1671 = x1670 + x568 * x764
    x1672 = x1276 + x1345 * x26
    x1673 = x1347 + x1672 * x22
    x1674 = x1336 + x1345 * x27
    x1675 = x1349 + x1674 * x22
    x1676 = x1345 * x28 + x1355
    x1677 = x1358 + x1676 * x22
    x1678 = x1311 + x1364 * x26
    x1679 = x1366 + x1678 * x22
    x1680 = x1355 + x1364 * x27
    x1681 = x1368 + x1680 * x22
    x1682 = x1364 * x28 + x1375
    x1683 = x1377 + x1682 * x22
    x1684 = -x1007 * x14 + x1008 * x373 + 2 * x378
    x1685 = x1006 * x373 - x1020 * x14 + 2 * x436
    x1686 = x1010 * x373 - x1012 * x14 + 2 * x410
    x1687 = x1011 * x373 - x1022 * x14 + 2 * x439
    x1688 = x1014 * x373 - x1016 * x14 + 2 * x409
    x1689 = x1015 * x373 - x1025 * x14 + 2 * x438
    x1690 = (
        x1684 * x65
        - x1685 * x69
        + x74 * (x1688 * x65 - x1689 * x69 + x68 * (x1686 * x65 - x1687 * x69))
    )
    x1691 = -x1003 * x14 + x1004 * x373 + 2 * x420
    x1692 = x1019 * x373 - x1033 * x380 + 2 * x449
    x1693 = x1021 * x373 - x1034 * x380 + 2 * x457
    x1694 = x1024 * x373 - x1036 * x380 + 2 * x456
    x1695 = x1002 * x373 - x1041 * x380 + 2 * x461
    x1696 = (
        x1630 * x23
        + x1690 * x26
        + x1691 * x65
        - x1695 * x69
        + x76
        * (
            x1685 * x65
            - x1692 * x69
            + x74 * (x1689 * x65 - x1694 * x69 + x68 * (x1687 * x65 - x1693 * x69))
        )
    )
    x1697 = -x1045 * x14 + x1046 * x373 + x1685 * x68 + 2 * x467
    x1698 = x1048 * x373 - x1050 * x14 + x1687 * x68 + 2 * x489
    x1699 = x1049 * x373 - x1059 * x380 + x1693 * x68 + 2 * x497
    x1700 = x1052 * x373 - x1054 * x14 + x1689 * x68 + 2 * x488
    x1701 = x1053 * x373 - x1061 * x380 + x1694 * x68 + 2 * x501
    x1702 = x1044 * x373 - x1063 * x380 + x1692 * x68 + 2 * x505
    x1703 = (
        x1697 * x65
        - x1702 * x69
        + x74 * (x1700 * x65 - x1701 * x69 + x68 * (x1698 * x65 - x1699 * x69))
    )
    x1704 = x1632 * x23 + x1690 * x27 + x1703
    x1705 = x1634 * x23 + x1690 * x28
    x1706 = -x1072 * x14 + x1073 * x373 + x1686 * x68 + 2 * x518
    x1707 = -x1069 * x14 + x1070 * x373 + x1688 * x68 + 2 * x515
    x1708 = -x1700 * x69 + x1707 * x65 + x68 * (-x1698 * x69 + x1706 * x65)
    x1709 = x1636 * x23 + x1703 + x1708 * x26
    x1710 = -x1085 * x14 + x1086 * x373 + x1698 * x74 + 2 * x537
    x1711 = x1084 * x373 - x1089 * x380 + x1699 * x74 + 2 * x553
    x1712 = -x1081 * x14 + x1082 * x373 + x1700 * x74 + 2 * x533
    x1713 = x1080 * x373 - x1092 * x380 + x1701 * x74 + 2 * x557
    x1714 = x1712 * x65 - x1713 * x69 + x68 * (x1710 * x65 - x1711 * x69)
    x1715 = x1638 * x23 + x1708 * x27 + x1714
    x1716 = x1640 * x23 + x1708 * x28
    x1717 = -x1098 * x14 + x1099 * x373 + x1706 * x74 + 2 * x566
    x1718 = -x1710 * x69 + x1717 * x65
    x1719 = x1642 * x23 + x1714 + x1718 * x26
    x1720 = -x1106 * x14 + x1107 * x373 + x1710 * x76 + 2 * x578
    x1721 = x1105 * x373 - x1110 * x380 + x1711 * x76 + 2 * x588
    x1722 = x1644 * x23 + x1718 * x27 + x1720 * x65 - x1721 * x69
    x1723 = x1646 * x23 + x1718 * x28
    x1724 = -x1122 * x14 + x1124 * x373 + x599
    x1725 = x1121 * x373 - x1142 * x14 + x669
    x1726 = x1127 * x373 - x1131 * x14 + x637
    x1727 = x1130 * x373 - x1146 * x14 + x672
    x1728 = x1134 * x373 - x1138 * x14 + x636
    x1729 = x1137 * x373 - x1151 * x14 + x671
    x1730 = (
        x1724 * x65
        - x1725 * x69
        + x74 * (x1728 * x65 - x1729 * x69 + x68 * (x1726 * x65 - x1727 * x69))
    )
    x1731 = -x1117 * x14 + x1157 * x373 + x647
    x1732 = x1141 * x373 - x1162 * x380 + x682
    x1733 = x1145 * x373 - x1165 * x380 + x696
    x1734 = x1150 * x373 - x1169 * x380 + x695
    x1735 = x1116 * x373 - x1174 * x380 + x700
    x1736 = (
        x1730 * x26
        + x1731 * x65
        - x1735 * x69
        + x76
        * (
            x1725 * x65
            - x1732 * x69
            + x74 * (x1729 * x65 - x1734 * x69 + x68 * (x1727 * x65 - x1733 * x69))
        )
    )
    x1737 = x1630 * x24 + x1736
    x1738 = -x1178 * x14 + x1179 * x373 + x1725 * x68 + x707
    x1739 = x1183 * x373 - x1187 * x14 + x1727 * x68 + x740
    x1740 = x1186 * x373 - x1198 * x380 + x1733 * x68 + x748
    x1741 = x1189 * x373 - x1191 * x14 + x1729 * x68 + x739
    x1742 = x1190 * x373 - x1202 * x380 + x1734 * x68 + x754
    x1743 = x1177 * x373 - x1204 * x380 + x1732 * x68 + x760
    x1744 = (
        x1738 * x65
        - x1743 * x69
        + x74 * (x1741 * x65 - x1742 * x69 + x68 * (x1739 * x65 - x1740 * x69))
    )
    x1745 = x1730 * x27 + x1744
    x1746 = x1632 * x24 + x1745
    x1747 = -x1210 * x14 + x1213 * x373 + x766
    x1748 = x1219 * x373 - x1221 * x14 + x778
    x1749 = x1220 * x373 - x1227 * x380 + x787
    x1750 = x1215 * x373 - x1217 * x14 + x777
    x1751 = x1216 * x373 - x1229 * x380 + x791
    x1752 = x1209 * x373 - x1231 * x380 + x795
    x1753 = (
        x1747 * x65
        - x1752 * x69
        + x74 * (x1750 * x65 - x1751 * x69 + x68 * (x1748 * x65 - x1749 * x69))
    )
    x1754 = x1730 * x28 + x1753
    x1755 = x1634 * x24 + x1754
    x1756 = -x1238 * x14 + x1239 * x373 + x1726 * x68 + x803
    x1757 = -x1235 * x14 + x1236 * x373 + x1728 * x68 + x800
    x1758 = -x1741 * x69 + x1757 * x65 + x68 * (-x1739 * x69 + x1756 * x65)
    x1759 = x1744 + x1758 * x26
    x1760 = x1636 * x24 + x1759
    x1761 = -x1251 * x14 + x1252 * x373 + x1739 * x74 + x827
    x1762 = x1250 * x373 - x1257 * x380 + x1740 * x74 + x848
    x1763 = -x1247 * x14 + x1248 * x373 + x1741 * x74 + x822
    x1764 = x1246 * x373 - x1260 * x380 + x1742 * x74 + x854
    x1765 = x1763 * x65 - x1764 * x69 + x68 * (x1761 * x65 - x1762 * x69)
    x1766 = x1758 * x27 + x1765
    x1767 = x1638 * x24 + x1766
    x1768 = -x1270 * x14 + x1271 * x373 + x1748 * x68 + x861
    x1769 = x1269 * x373 - x1274 * x380 + x1749 * x68 + x874
    x1770 = -x1265 * x14 + x1267 * x373 + x1750 * x68 + x859
    x1771 = x1264 * x373 - x1277 * x380 + x1751 * x68 + x878
    x1772 = x1770 * x65 - x1771 * x69 + x68 * (x1768 * x65 - x1769 * x69)
    x1773 = x1758 * x28 + x1772
    x1774 = x1640 * x24 + x1773
    x1775 = x1288 * x373 - x1289 * x14 + x884
    x1776 = -x1282 * x14 + x1285 * x373 + x882
    x1777 = -x1750 * x69 + x1776 * x65 + x68 * (-x1748 * x69 + x1775 * x65)
    x1778 = x1753 + x1777 * x26
    x1779 = x1660 * x23 + x1778
    x1780 = x1772 + x1777 * x27
    x1781 = x1662 * x23 + x1780
    x1782 = -x1304 * x14 + x1306 * x373 + x900
    x1783 = x1303 * x373 - x1308 * x380 + x911
    x1784 = -x1300 * x14 + x1310 * x373 + x899
    x1785 = x1299 * x373 - x1312 * x380 + x914
    x1786 = x1784 * x65 - x1785 * x69 + x68 * (x1782 * x65 - x1783 * x69)
    x1787 = x1777 * x28 + x1786
    x1788 = x1664 * x23 + x1787
    x1789 = -x1316 * x14 + x1317 * x373 + x1756 * x74 + x919
    x1790 = -x1761 * x69 + x1789 * x65
    x1791 = x1765 + x1790 * x26
    x1792 = x1642 * x24 + x1791
    x1793 = -x1324 * x14 + x1325 * x373 + x1761 * x76 + x933
    x1794 = x1323 * x373 - x1328 * x380 + x1762 * x76 + x944
    x1795 = x1790 * x27 + x1793 * x65 - x1794 * x69
    x1796 = x1644 * x24 + x1795
    x1797 = -x1332 * x14 + x1334 * x373 + x1768 * x74 + x948
    x1798 = x1331 * x373 - x1337 * x380 + x1769 * x74 + x957
    x1799 = x1797 * x65 - x1798 * x69
    x1800 = x1790 * x28 + x1799
    x1801 = x1646 * x24 + x1800
    x1802 = -x1341 * x14 + x1343 * x373 + x1775 * x68 + x961
    x1803 = -x1768 * x69 + x1802 * x65
    x1804 = x1772 + x1803 * x26
    x1805 = x1672 * x23 + x1804
    x1806 = x1799 + x1803 * x27
    x1807 = x1674 * x23 + x1806
    x1808 = -x1352 * x14 + x1353 * x373 + x1782 * x68 + x971
    x1809 = x1351 * x373 - x1356 * x380 + x1783 * x68 + x978
    x1810 = x1808 * x65 - x1809 * x69
    x1811 = x1803 * x28 + x1810
    x1812 = x1676 * x23 + x1811
    x1813 = -x1361 * x14 + x1363 * x373 + x981
    x1814 = -x1782 * x69 + x1813 * x65
    x1815 = x1786 + x1814 * x26
    x1816 = x1678 * x23 + x1815
    x1817 = x1810 + x1814 * x27
    x1818 = x1680 * x23 + x1817
    x1819 = -x1372 * x14 + x1374 * x373 + x996
    x1820 = x1371 * x373 - x1376 * x380 + x999
    x1821 = x1814 * x28 + x1819 * x65 - x1820 * x69
    x1822 = x1682 * x23 + x1821
    x1823 = -x1384 * x14 + x1385 * x373
    x1824 = x1383 * x373 - x14 * x1403
    x1825 = x1389 * x373 - x1393 * x14
    x1826 = x1392 * x373 - x14 * x1407
    x1827 = x1395 * x373 - x1399 * x14
    x1828 = x1398 * x373 - x14 * x1412
    x1829 = (
        x1823 * x65
        - x1824 * x69
        + x74 * (x1827 * x65 - x1828 * x69 + x68 * (x1825 * x65 - x1826 * x69))
    )
    x1830 = -x1380 * x14 + x1381 * x373
    x1831 = x1402 * x373 - x1422 * x380
    x1832 = x1406 * x373 - x1425 * x380
    x1833 = x1411 * x373 - x1429 * x380
    x1834 = x1379 * x373 - x1434 * x380
    x1835 = (
        x1829 * x26
        + x1830 * x65
        - x1834 * x69
        + x76
        * (
            x1824 * x65
            - x1831 * x69
            + x74 * (x1828 * x65 - x1833 * x69 + x68 * (x1826 * x65 - x1832 * x69))
        )
    )
    x1836 = x1648 * x24 + x1835
    x1837 = -x14 * x1438 + x1439 * x373 + x1824 * x68
    x1838 = -x14 * x1447 + x1443 * x373 + x1826 * x68
    x1839 = x1446 * x373 - x1458 * x380 + x1832 * x68
    x1840 = -x14 * x1451 + x1449 * x373 + x1828 * x68
    x1841 = x1450 * x373 - x1462 * x380 + x1833 * x68
    x1842 = x1437 * x373 - x1464 * x380 + x1831 * x68
    x1843 = (
        x1837 * x65
        - x1842 * x69
        + x74 * (x1840 * x65 - x1841 * x69 + x68 * (x1838 * x65 - x1839 * x69))
    )
    x1844 = x1829 * x27 + x1843
    x1845 = x1650 * x24 + x1844
    x1846 = -x14 * x1469 + x1470 * x373
    x1847 = -x14 * x1474 + x1472 * x373
    x1848 = x1473 * x373 - x1483 * x380
    x1849 = -x14 * x1478 + x1476 * x373
    x1850 = x1477 * x373 - x1485 * x380
    x1851 = x1468 * x373 - x1487 * x380
    x1852 = (
        x1846 * x65
        - x1851 * x69
        + x74 * (x1849 * x65 - x1850 * x69 + x68 * (x1847 * x65 - x1848 * x69))
    )
    x1853 = x1829 * x28 + x1852
    x1854 = x1652 * x24 + x1853
    x1855 = -x14 * x1494 + x1495 * x373 + x1825 * x68
    x1856 = -x14 * x1491 + x1492 * x373 + x1827 * x68
    x1857 = -x1840 * x69 + x1856 * x65 + x68 * (-x1838 * x69 + x1855 * x65)
    x1858 = x1843 + x1857 * x26
    x1859 = x1654 * x24 + x1858
    x1860 = -x14 * x1507 + x1508 * x373 + x1838 * x74
    x1861 = x1506 * x373 - x1513 * x380 + x1839 * x74
    x1862 = -x14 * x1503 + x1504 * x373 + x1840 * x74
    x1863 = x1502 * x373 - x1516 * x380 + x1841 * x74
    x1864 = x1862 * x65 - x1863 * x69 + x68 * (x1860 * x65 - x1861 * x69)
    x1865 = x1857 * x27 + x1864
    x1866 = x1656 * x24 + x1865
    x1867 = -x14 * x1525 + x1526 * x373 + x1847 * x68
    x1868 = x1524 * x373 - x1529 * x380 + x1848 * x68
    x1869 = -x14 * x1521 + x1522 * x373 + x1849 * x68
    x1870 = x1520 * x373 - x1532 * x380 + x1850 * x68
    x1871 = x1869 * x65 - x1870 * x69 + x68 * (x1867 * x65 - x1868 * x69)
    x1872 = x1857 * x28 + x1871
    x1873 = x1658 * x24 + x1872
    x1874 = x1660 * x24
    x1875 = -x14 * x1540 + x1541 * x373
    x1876 = -x14 * x1537 + x1538 * x373
    x1877 = -x1849 * x69 + x1876 * x65 + x68 * (-x1847 * x69 + x1875 * x65)
    x1878 = x1852 + x1877 * x26
    x1879 = x1662 * x24
    x1880 = x1871 + x1877 * x27
    x1881 = x1664 * x24
    x1882 = -x14 * x1555 + x1556 * x373
    x1883 = x1554 * x373 - x1559 * x380
    x1884 = -x14 * x1551 + x1552 * x373
    x1885 = x1550 * x373 - x1562 * x380
    x1886 = x1884 * x65 - x1885 * x69 + x68 * (x1882 * x65 - x1883 * x69)
    x1887 = x1877 * x28 + x1886
    x1888 = -x14 * x1565 + x1566 * x373 + x1855 * x74
    x1889 = -x1860 * x69 + x1888 * x65
    x1890 = x1864 + x1889 * x26
    x1891 = x1666 * x24 + x1890
    x1892 = -x14 * x1573 + x1574 * x373 + x1860 * x76
    x1893 = x1572 * x373 - x1577 * x380 + x1861 * x76
    x1894 = x1889 * x27 + x1892 * x65 - x1893 * x69
    x1895 = x1668 * x24 + x1894
    x1896 = -x14 * x1581 + x1582 * x373 + x1867 * x74
    x1897 = x1580 * x373 - x1585 * x380 + x1868 * x74
    x1898 = x1896 * x65 - x1897 * x69
    x1899 = x1889 * x28 + x1898
    x1900 = x1670 * x24 + x1899
    x1901 = x1672 * x24
    x1902 = -x14 * x1590 + x1591 * x373 + x1875 * x68
    x1903 = -x1867 * x69 + x1902 * x65
    x1904 = x1871 + x1903 * x26
    x1905 = x1674 * x24
    x1906 = x1898 + x1903 * x27
    x1907 = x1676 * x24
    x1908 = -x14 * x1600 + x1601 * x373 + x1882 * x68
    x1909 = x1599 * x373 - x1604 * x380 + x1883 * x68
    x1910 = x1908 * x65 - x1909 * x69
    x1911 = x1903 * x28 + x1910
    x1912 = x1678 * x24
    x1913 = -x14 * x1608 + x1609 * x373
    x1914 = -x1882 * x69 + x1913 * x65
    x1915 = x1886 + x1914 * x26
    x1916 = x1680 * x24
    x1917 = x1910 + x1914 * x27
    x1918 = x1682 * x24
    x1919 = -x14 * x1618 + x1619 * x373
    x1920 = x1617 * x373 - x1622 * x380
    x1921 = x1914 * x28 + x1919 * x65 - x1920 * x69
    x1922 = x26 * x617 + x649
    x1923 = x27 * x617 + x724
    x1924 = x28 * x617 + x772
    x1925 = x26 * x811 + x724
    x1926 = x27 * x811 + x840
    x1927 = x28 * x811 + x867
    x1928 = x26 * x889 + x772
    x1929 = x27 * x889 + x867
    x1930 = x28 * x889 + x906
    x1931 = x26 * x922 + x840
    x1932 = x27 * x922 + x936
    x1933 = x28 * x922 + x950
    x1934 = x26 * x963 + x867
    x1935 = x27 * x963 + x950
    x1936 = x28 * x963 + x973
    x1937 = x26 * x983 + x906
    x1938 = x27 * x983 + x973
    x1939 = x28 * x983 + x997
    x1940 = x1648 + x1922 * x23
    x1941 = x1650 + x1923 * x23
    x1942 = x1652 + x1924 * x23
    x1943 = x1654 + x1925 * x23
    x1944 = x1656 + x1926 * x23
    x1945 = x1658 + x1927 * x23
    x1946 = x1660 + x1928 * x23
    x1947 = x1662 + x1929 * x23
    x1948 = x1664 + x1930 * x23
    x1949 = x1666 + x1931 * x23
    x1950 = x1668 + x1932 * x23
    x1951 = x1670 + x1933 * x23
    x1952 = x1672 + x1934 * x23
    x1953 = x1674 + x1935 * x23
    x1954 = x1676 + x1936 * x23
    x1955 = x1678 + x1937 * x23
    x1956 = x1680 + x1938 * x23
    x1957 = x1682 + x1939 * x23
    x1958 = x1401 * x26 + x1418
    x1959 = x1922 * x24 + x1958
    x1960 = x1401 * x27 + x1453
    x1961 = x1923 * x24 + x1960
    x1962 = x1401 * x28 + x1480
    x1963 = x1924 * x24 + x1962
    x1964 = x1453 + x1498 * x26
    x1965 = x1925 * x24 + x1964
    x1966 = x1498 * x27 + x1515
    x1967 = x1926 * x24 + x1966
    x1968 = x1498 * x28 + x1531
    x1969 = x1927 * x24 + x1968
    x1970 = x1480 + x1544 * x26
    x1971 = x1928 * x24 + x1970
    x1972 = x1531 + x1544 * x27
    x1973 = x1929 * x24 + x1972
    x1974 = x1544 * x28 + x1561
    x1975 = x1930 * x24 + x1974
    x1976 = x1515 + x1568 * x26
    x1977 = x1931 * x24 + x1976
    x1978 = x1568 * x27 + x1576
    x1979 = x1932 * x24 + x1978
    x1980 = x1568 * x28 + x1584
    x1981 = x1933 * x24 + x1980
    x1982 = x1531 + x1593 * x26
    x1983 = x1934 * x24 + x1982
    x1984 = x1584 + x1593 * x27
    x1985 = x1935 * x24 + x1984
    x1986 = x1593 * x28 + x1603
    x1987 = x1936 * x24 + x1986
    x1988 = x1561 + x1611 * x26
    x1989 = x1937 * x24 + x1988
    x1990 = x1603 + x1611 * x27
    x1991 = x1938 * x24 + x1990
    x1992 = x1611 * x28 + x1621
    x1993 = x1939 * x24 + x1992
    x1994 = x1648 * x23 + x1736
    x1995 = x1650 * x23 + x1745
    x1996 = x1652 * x23 + x1754
    x1997 = x1654 * x23 + x1759
    x1998 = x1656 * x23 + x1766
    x1999 = x1658 * x23 + x1773
    x2000 = x1666 * x23 + x1791
    x2001 = x1668 * x23 + x1795
    x2002 = x1670 * x23 + x1800
    x2003 = x1874 + x1878
    x2004 = x1879 + x1880
    x2005 = x1881 + x1887
    x2006 = x1901 + x1904
    x2007 = x1905 + x1906
    x2008 = x1907 + x1911
    x2009 = x1912 + x1915
    x2010 = x1916 + x1917
    x2011 = x1918 + x1921
    x2012 = -x1384 * x16 + x1385 * x594 + 2 * x599
    x2013 = x1383 * x594 - x1403 * x16 + 2 * x669
    x2014 = x1389 * x594 - x1393 * x16 + 2 * x637
    x2015 = x1392 * x594 - x1407 * x16 + 2 * x672
    x2016 = x1395 * x594 - x1399 * x16 + 2 * x636
    x2017 = x1398 * x594 - x1412 * x16 + 2 * x671
    x2018 = (
        x2012 * x65
        - x2013 * x69
        + x74 * (x2016 * x65 - x2017 * x69 + x68 * (x2014 * x65 - x2015 * x69))
    )
    x2019 = -x1380 * x16 + x1381 * x594 + 2 * x647
    x2020 = x1402 * x594 - x1422 * x601 + 2 * x682
    x2021 = x1406 * x594 - x1425 * x601 + 2 * x696
    x2022 = x1411 * x594 - x1429 * x601 + 2 * x695
    x2023 = x1379 * x594 - x1434 * x601 + 2 * x700
    x2024 = (
        x1958 * x24
        + x2018 * x26
        + x2019 * x65
        - x2023 * x69
        + x76
        * (
            x2013 * x65
            - x2020 * x69
            + x74 * (x2017 * x65 - x2022 * x69 + x68 * (x2015 * x65 - x2021 * x69))
        )
    )
    x2025 = -x1438 * x16 + x1439 * x594 + 2 * x707
    x2026 = x1443 * x594 - x1447 * x16 + 2 * x740
    x2027 = x1446 * x594 - x1458 * x601 + 2 * x748
    x2028 = x1449 * x594 - x1451 * x16 + 2 * x739
    x2029 = x1450 * x594 - x1462 * x601 + 2 * x754
    x2030 = x1437 * x594 - x1464 * x601 + 2 * x760
    x2031 = (
        x2025 * x65
        - x2030 * x69
        + x74 * (x2028 * x65 - x2029 * x69 + x68 * (x2026 * x65 - x2027 * x69))
    )
    x2032 = x1960 * x24 + x2018 * x27 + x2031
    x2033 = -x1469 * x16 + x1470 * x594 + x2013 * x68 + 2 * x766
    x2034 = x1472 * x594 - x1474 * x16 + x2015 * x68 + 2 * x778
    x2035 = x1473 * x594 - x1483 * x601 + x2021 * x68 + 2 * x787
    x2036 = x1476 * x594 - x1478 * x16 + x2017 * x68 + 2 * x777
    x2037 = x1477 * x594 - x1485 * x601 + x2022 * x68 + 2 * x791
    x2038 = x1468 * x594 - x1487 * x601 + x2020 * x68 + 2 * x795
    x2039 = (
        x2033 * x65
        - x2038 * x69
        + x74 * (x2036 * x65 - x2037 * x69 + x68 * (x2034 * x65 - x2035 * x69))
    )
    x2040 = x1962 * x24 + x2018 * x28 + x2039
    x2041 = -x1494 * x16 + x1495 * x594 + 2 * x803
    x2042 = -x1491 * x16 + x1492 * x594 + 2 * x800
    x2043 = -x2028 * x69 + x2042 * x65 + x68 * (-x2026 * x69 + x2041 * x65)
    x2044 = x1964 * x24 + x2031 + x2043 * x26
    x2045 = -x1507 * x16 + x1508 * x594 + 2 * x827
    x2046 = x1506 * x594 - x1513 * x601 + 2 * x848
    x2047 = -x1503 * x16 + x1504 * x594 + 2 * x822
    x2048 = x1502 * x594 - x1516 * x601 + 2 * x854
    x2049 = x2047 * x65 - x2048 * x69 + x68 * (x2045 * x65 - x2046 * x69)
    x2050 = x1966 * x24 + x2043 * x27 + x2049
    x2051 = -x1525 * x16 + x1526 * x594 + x2026 * x68 + 2 * x861
    x2052 = x1524 * x594 - x1529 * x601 + x2027 * x68 + 2 * x874
    x2053 = -x1521 * x16 + x1522 * x594 + x2028 * x68 + 2 * x859
    x2054 = x1520 * x594 - x1532 * x601 + x2029 * x68 + 2 * x878
    x2055 = x2053 * x65 - x2054 * x69 + x68 * (x2051 * x65 - x2052 * x69)
    x2056 = x1968 * x24 + x2043 * x28 + x2055
    x2057 = -x1540 * x16 + x1541 * x594 + x2014 * x68 + 2 * x884
    x2058 = -x1537 * x16 + x1538 * x594 + x2016 * x68 + 2 * x882
    x2059 = -x2036 * x69 + x2058 * x65 + x68 * (-x2034 * x69 + x2057 * x65)
    x2060 = x1970 * x24 + x2039 + x2059 * x26
    x2061 = x1972 * x24 + x2055 + x2059 * x27
    x2062 = -x1555 * x16 + x1556 * x594 + x2034 * x74 + 2 * x900
    x2063 = x1554 * x594 - x1559 * x601 + x2035 * x74 + 2 * x911
    x2064 = -x1551 * x16 + x1552 * x594 + x2036 * x74 + 2 * x899
    x2065 = x1550 * x594 - x1562 * x601 + x2037 * x74 + 2 * x914
    x2066 = x2064 * x65 - x2065 * x69 + x68 * (x2062 * x65 - x2063 * x69)
    x2067 = x1974 * x24 + x2059 * x28 + x2066
    x2068 = -x1565 * x16 + x1566 * x594 + 2 * x919
    x2069 = -x2045 * x69 + x2068 * x65
    x2070 = x1976 * x24 + x2049 + x2069 * x26
    x2071 = -x1573 * x16 + x1574 * x594 + 2 * x933
    x2072 = x1572 * x594 - x1577 * x601 + 2 * x944
    x2073 = x1978 * x24 + x2069 * x27 + x2071 * x65 - x2072 * x69
    x2074 = -x1581 * x16 + x1582 * x594 + x2045 * x68 + 2 * x948
    x2075 = x1580 * x594 - x1585 * x601 + x2046 * x68 + 2 * x957
    x2076 = x2074 * x65 - x2075 * x69
    x2077 = x1980 * x24 + x2069 * x28 + x2076
    x2078 = -x1590 * x16 + x1591 * x594 + x2041 * x68 + 2 * x961
    x2079 = -x2051 * x69 + x2078 * x65
    x2080 = x1982 * x24 + x2055 + x2079 * x26
    x2081 = x1984 * x24 + x2076 + x2079 * x27
    x2082 = -x16 * x1600 + x1601 * x594 + x2051 * x74 + 2 * x971
    x2083 = x1599 * x594 - x1604 * x601 + x2052 * x74 + 2 * x978
    x2084 = x2082 * x65 - x2083 * x69
    x2085 = x1986 * x24 + x2079 * x28 + x2084
    x2086 = -x16 * x1608 + x1609 * x594 + x2057 * x74 + 2 * x981
    x2087 = -x2062 * x69 + x2086 * x65
    x2088 = x1988 * x24 + x2066 + x2087 * x26
    x2089 = x1990 * x24 + x2084 + x2087 * x27
    x2090 = -x16 * x1618 + x1619 * x594 + x2062 * x76 + 2 * x996
    x2091 = x1617 * x594 - x1622 * x601 + x2063 * x76 + 2 * x999
    x2092 = x1992 * x24 + x2087 * x28 + x2090 * x65 - x2091 * x69
    x2093 = x1004 + x1008 * x26
    x2094 = x1008 * x27 + x1046
    x2095 = x1046 + x1070 * x26
    x2096 = x1070 * x27 + x1082
    x2097 = x1082 + x1099 * x26
    x2098 = x1099 * x27 + x1107
    x2099 = x1684 * x26 + x1691
    x2100 = x2093 * x23 + x2099
    x2101 = x1684 * x27 + x1697
    x2102 = x2094 * x23 + x2101
    x2103 = x1684 * x28
    x2104 = x1008 * x509 + x2103
    x2105 = x1697 + x1707 * x26
    x2106 = x2095 * x23 + x2105
    x2107 = x1707 * x27 + x1712
    x2108 = x2096 * x23 + x2107
    x2109 = x1707 * x28
    x2110 = x1070 * x509 + x2109
    x2111 = x1712 + x1717 * x26
    x2112 = x2097 * x23 + x2111
    x2113 = x1717 * x27 + x1720
    x2114 = x2098 * x23 + x2113
    x2115 = x1717 * x28
    x2116 = x1099 * x509 + x2115
    x2117 = x1724 * x26 + x1731
    x2118 = x2093 * x24 + x2117
    x2119 = x1724 * x27 + x1738
    x2120 = x2094 * x24 + x2119
    x2121 = x1724 * x28 + x1747
    x2122 = x1008 * x764 + x2121
    x2123 = x1738 + x1757 * x26
    x2124 = x2095 * x24 + x2123
    x2125 = x1757 * x27 + x1763
    x2126 = x2096 * x24 + x2125
    x2127 = x1757 * x28 + x1770
    x2128 = x1070 * x764 + x2127
    x2129 = x1747 + x1776 * x26
    x2130 = x1770 + x1776 * x27
    x2131 = x1776 * x28 + x1784
    x2132 = x1763 + x1789 * x26
    x2133 = x2097 * x24 + x2132
    x2134 = x1789 * x27 + x1793
    x2135 = x2098 * x24 + x2134
    x2136 = x1789 * x28 + x1797
    x2137 = x1099 * x764 + x2136
    x2138 = x1770 + x1802 * x26
    x2139 = x1797 + x1802 * x27
    x2140 = x1802 * x28 + x1808
    x2141 = x1784 + x1813 * x26
    x2142 = x1808 + x1813 * x27
    x2143 = x1813 * x28 + x1819
    x2144 = 3 * x1009 + x1684 * x373 - x1685 * x380
    x2145 = (
        3 * x1047
        + x1697 * x373
        - x1702 * x380
        + x68 * (3 * x1032 + x1685 * x373 - x1692 * x380)
    )
    x2146 = (
        3 * x1071
        - x1700 * x380
        + x1707 * x373
        + x68 * (3 * x1028 + x1688 * x373 - x1689 * x380)
    )
    x2147 = (
        3 * x1083
        + x1712 * x373
        - x1713 * x380
        + x74
        * (
            3 * x1057
            + x1700 * x373
            - x1701 * x380
            + x68 * (3 * x1039 + x1689 * x373 - x1694 * x380)
        )
    )
    x2148 = (
        3 * x1100
        - x1710 * x380
        + x1717 * x373
        + x74
        * (
            3 * x1074
            - x1698 * x380
            + x1706 * x373
            + x68 * (3 * x1029 + x1686 * x373 - x1687 * x380)
        )
    )
    x2149 = 2 * x1123 + x1724 * x373 - x1725 * x380
    x2150 = 2 * x1118 + x1731 * x373 - x1735 * x380 + x2149 * x26
    x2151 = (
        2 * x1180
        + x1738 * x373
        - x1743 * x380
        + x68 * (2 * x1159 + x1725 * x373 - x1732 * x380)
    )
    x2152 = x2149 * x27 + x2151
    x2153 = 2 * x1211 + x1747 * x373 - x1752 * x380
    x2154 = x2149 * x28 + x2153
    x2155 = (
        2 * x1237
        - x1741 * x380
        + x1757 * x373
        + x68 * (2 * x1154 + x1728 * x373 - x1729 * x380)
    )
    x2156 = x2151 + x2155 * x26
    x2157 = (
        2 * x1249
        + x1763 * x373
        - x1764 * x380
        + x74
        * (
            2 * x1194
            + x1741 * x373
            - x1742 * x380
            + x68 * (2 * x1172 + x1729 * x373 - x1734 * x380)
        )
    )
    x2158 = x2155 * x27 + x2157
    x2159 = (
        2 * x1268
        + x1770 * x373
        - x1771 * x380
        + x68 * (2 * x1225 + x1750 * x373 - x1751 * x380)
    )
    x2160 = x2155 * x28 + x2159
    x2161 = 2 * x1283 - x1750 * x380 + x1776 * x373
    x2162 = x2129 * x23 + x2153 + x2161 * x26
    x2163 = x2130 * x23 + x2159 + x2161 * x27
    x2164 = 2 * x1301 + x1784 * x373 - x1785 * x380
    x2165 = x2131 * x23 + x2161 * x28 + x2164
    x2166 = (
        2 * x1318
        - x1761 * x380
        + x1789 * x373
        + x74
        * (
            2 * x1240
            - x1739 * x380
            + x1756 * x373
            + x68 * (2 * x1155 + x1726 * x373 - x1727 * x380)
        )
    )
    x2167 = x2157 + x2166 * x26
    x2168 = (
        2 * x1326
        + x1793 * x373
        - x1794 * x380
        + x2166 * x27
        + x76
        * (
            2 * x1253
            + x1761 * x373
            - x1762 * x380
            + x74
            * (
                2 * x1195
                + x1739 * x373
                - x1740 * x380
                + x68 * (2 * x1173 + x1727 * x373 - x1733 * x380)
            )
        )
    )
    x2169 = (
        2 * x1335
        + x1797 * x373
        - x1798 * x380
        + x74
        * (
            2 * x1272
            + x1768 * x373
            - x1769 * x380
            + x68 * (2 * x1226 + x1748 * x373 - x1749 * x380)
        )
    )
    x2170 = x2166 * x28 + x2169
    x2171 = (
        2 * x1344
        - x1768 * x380
        + x1802 * x373
        + x68 * (2 * x1292 - x1748 * x380 + x1775 * x373)
    )
    x2172 = x2138 * x23 + x2159 + x2171 * x26
    x2173 = x2139 * x23 + x2169 + x2171 * x27
    x2174 = (
        2 * x1354
        + x1808 * x373
        - x1809 * x380
        + x68 * (2 * x1305 + x1782 * x373 - x1783 * x380)
    )
    x2175 = x2140 * x23 + x2171 * x28 + x2174
    x2176 = 2 * x1362 - x1782 * x380 + x1813 * x373
    x2177 = x2141 * x23 + x2164 + x2176 * x26
    x2178 = x2142 * x23 + x2174 + x2176 * x27
    x2179 = 2 * x1373 + x1819 * x373 - x1820 * x380 + x2143 * x23 + x2176 * x28
    x2180 = x1386 + x1823 * x373 - x1824 * x380
    x2181 = x1382 + x1830 * x373 - x1834 * x380 + x2180 * x26
    x2182 = x2117 * x24 + x2181
    x2183 = (
        x1440 + x1837 * x373 - x1842 * x380 + x68 * (x1419 + x1824 * x373 - x1831 * x380)
    )
    x2184 = x2180 * x27 + x2183
    x2185 = x2119 * x24 + x2184
    x2186 = x1471 + x1846 * x373 - x1851 * x380
    x2187 = x2180 * x28 + x2186
    x2188 = x2121 * x24 + x2187
    x2189 = (
        x1493 - x1840 * x380 + x1856 * x373 + x68 * (x1415 + x1827 * x373 - x1828 * x380)
    )
    x2190 = x2183 + x2189 * x26
    x2191 = x2123 * x24 + x2190
    x2192 = (
        x1505
        + x1862 * x373
        - x1863 * x380
        + x74
        * (
            x1454
            + x1840 * x373
            - x1841 * x380
            + x68 * (x1432 + x1828 * x373 - x1833 * x380)
        )
    )
    x2193 = x2189 * x27 + x2192
    x2194 = x2125 * x24 + x2193
    x2195 = (
        x1523 + x1869 * x373 - x1870 * x380 + x68 * (x1481 + x1849 * x373 - x1850 * x380)
    )
    x2196 = x2189 * x28 + x2195
    x2197 = x2127 * x24 + x2196
    x2198 = x2129 * x24
    x2199 = x1539 - x1849 * x380 + x1876 * x373
    x2200 = x2186 + x2199 * x26
    x2201 = x2130 * x24
    x2202 = x2195 + x2199 * x27
    x2203 = x2131 * x24
    x2204 = x1553 + x1884 * x373 - x1885 * x380
    x2205 = x2199 * x28 + x2204
    x2206 = (
        x1567
        - x1860 * x380
        + x1888 * x373
        + x74
        * (
            x1496
            - x1838 * x380
            + x1855 * x373
            + x68 * (x1416 + x1825 * x373 - x1826 * x380)
        )
    )
    x2207 = x2192 + x2206 * x26
    x2208 = x2132 * x24 + x2207
    x2209 = (
        x1575
        + x1892 * x373
        - x1893 * x380
        + x2206 * x27
        + x76
        * (
            x1509
            + x1860 * x373
            - x1861 * x380
            + x74
            * (
                x1455
                + x1838 * x373
                - x1839 * x380
                + x68 * (x1433 + x1826 * x373 - x1832 * x380)
            )
        )
    )
    x2210 = x2134 * x24 + x2209
    x2211 = (
        x1583
        + x1896 * x373
        - x1897 * x380
        + x74
        * (
            x1527
            + x1867 * x373
            - x1868 * x380
            + x68 * (x1482 + x1847 * x373 - x1848 * x380)
        )
    )
    x2212 = x2206 * x28 + x2211
    x2213 = x2136 * x24 + x2212
    x2214 = x2138 * x24
    x2215 = (
        x1592 - x1867 * x380 + x1902 * x373 + x68 * (x1542 - x1847 * x380 + x1875 * x373)
    )
    x2216 = x2195 + x2215 * x26
    x2217 = x2139 * x24
    x2218 = x2211 + x2215 * x27
    x2219 = x2140 * x24
    x2220 = (
        x1602 + x1908 * x373 - x1909 * x380 + x68 * (x1557 + x1882 * x373 - x1883 * x380)
    )
    x2221 = x2215 * x28 + x2220
    x2222 = x2141 * x24
    x2223 = x1610 - x1882 * x380 + x1913 * x373
    x2224 = x2204 + x2223 * x26
    x2225 = x2142 * x24
    x2226 = x2220 + x2223 * x27
    x2227 = x2143 * x24
    x2228 = x1620 + x1919 * x373 - x1920 * x380 + x2223 * x28
    x2229 = x1124 * x26 + x1157
    x2230 = x1124 * x27 + x1179
    x2231 = x1124 * x28 + x1213
    x2232 = x1179 + x1236 * x26
    x2233 = x1236 * x27 + x1248
    x2234 = x1236 * x28 + x1267
    x2235 = x1213 + x1285 * x26
    x2236 = x1267 + x1285 * x27
    x2237 = x1285 * x28 + x1310
    x2238 = x1248 + x1317 * x26
    x2239 = x1317 * x27 + x1325
    x2240 = x1317 * x28 + x1334
    x2241 = x1267 + x1343 * x26
    x2242 = x1334 + x1343 * x27
    x2243 = x1343 * x28 + x1353
    x2244 = x1310 + x1363 * x26
    x2245 = x1353 + x1363 * x27
    x2246 = x1363 * x28 + x1374
    x2247 = x2117 + x2229 * x23
    x2248 = x2119 + x2230 * x23
    x2249 = x2121 + x2231 * x23
    x2250 = x2123 + x2232 * x23
    x2251 = x2125 + x2233 * x23
    x2252 = x2127 + x2234 * x23
    x2253 = x2129 + x2235 * x23
    x2254 = x2130 + x2236 * x23
    x2255 = x2131 + x2237 * x23
    x2256 = x2132 + x2238 * x23
    x2257 = x2134 + x2239 * x23
    x2258 = x2136 + x2240 * x23
    x2259 = x2138 + x2241 * x23
    x2260 = x2139 + x2242 * x23
    x2261 = x2140 + x2243 * x23
    x2262 = x2141 + x2244 * x23
    x2263 = x2142 + x2245 * x23
    x2264 = x2143 + x2246 * x23
    x2265 = x1823 * x26 + x1830
    x2266 = x2229 * x24 + x2265
    x2267 = x1823 * x27 + x1837
    x2268 = x2230 * x24 + x2267
    x2269 = x1823 * x28 + x1846
    x2270 = x2231 * x24 + x2269
    x2271 = x1837 + x1856 * x26
    x2272 = x2232 * x24 + x2271
    x2273 = x1856 * x27 + x1862
    x2274 = x2233 * x24 + x2273
    x2275 = x1856 * x28 + x1869
    x2276 = x2234 * x24 + x2275
    x2277 = x1846 + x1876 * x26
    x2278 = x2235 * x24 + x2277
    x2279 = x1869 + x1876 * x27
    x2280 = x2236 * x24 + x2279
    x2281 = x1876 * x28 + x1884
    x2282 = x2237 * x24 + x2281
    x2283 = x1862 + x1888 * x26
    x2284 = x2238 * x24 + x2283
    x2285 = x1888 * x27 + x1892
    x2286 = x2239 * x24 + x2285
    x2287 = x1888 * x28 + x1896
    x2288 = x2240 * x24 + x2287
    x2289 = x1869 + x1902 * x26
    x2290 = x2241 * x24 + x2289
    x2291 = x1896 + x1902 * x27
    x2292 = x2242 * x24 + x2291
    x2293 = x1902 * x28 + x1908
    x2294 = x2243 * x24 + x2293
    x2295 = x1884 + x1913 * x26
    x2296 = x2244 * x24 + x2295
    x2297 = x1908 + x1913 * x27
    x2298 = x2245 * x24 + x2297
    x2299 = x1913 * x28 + x1919
    x2300 = x2246 * x24 + x2299
    x2301 = x2012 * x373 - x2013 * x380
    x2302 = x2019 * x373 - x2023 * x380 + x2265 * x24 + x2301 * x26
    x2303 = x2025 * x373 - x2030 * x380 + x68 * (x2013 * x373 - x2020 * x380)
    x2304 = x2267 * x24 + x2301 * x27 + x2303
    x2305 = x2033 * x373 - x2038 * x380
    x2306 = x2269 * x24 + x2301 * x28 + x2305
    x2307 = -x2028 * x380 + x2042 * x373 + x68 * (x2016 * x373 - x2017 * x380)
    x2308 = x2271 * x24 + x2303 + x2307 * x26
    x2309 = (
        x2047 * x373
        - x2048 * x380
        + x74 * (x2028 * x373 - x2029 * x380 + x68 * (x2017 * x373 - x2022 * x380))
    )
    x2310 = x2273 * x24 + x2307 * x27 + x2309
    x2311 = x2053 * x373 - x2054 * x380 + x68 * (x2036 * x373 - x2037 * x380)
    x2312 = x2275 * x24 + x2307 * x28 + x2311
    x2313 = -x2036 * x380 + x2058 * x373
    x2314 = x2277 * x24 + x2305 + x2313 * x26
    x2315 = x2279 * x24 + x2311 + x2313 * x27
    x2316 = x2064 * x373 - x2065 * x380
    x2317 = x2281 * x24 + x2313 * x28 + x2316
    x2318 = (
        -x2045 * x380
        + x2068 * x373
        + x74 * (-x2026 * x380 + x2041 * x373 + x68 * (x2014 * x373 - x2015 * x380))
    )
    x2319 = x2283 * x24 + x2309 + x2318 * x26
    x2320 = (
        x2071 * x373
        - x2072 * x380
        + x2285 * x24
        + x2318 * x27
        + x76
        * (
            x2045 * x373
            - x2046 * x380
            + x74 * (x2026 * x373 - x2027 * x380 + x68 * (x2015 * x373 - x2021 * x380))
        )
    )
    x2321 = (
        x2074 * x373
        - x2075 * x380
        + x74 * (x2051 * x373 - x2052 * x380 + x68 * (x2034 * x373 - x2035 * x380))
    )
    x2322 = x2287 * x24 + x2318 * x28 + x2321
    x2323 = -x2051 * x380 + x2078 * x373 + x68 * (-x2034 * x380 + x2057 * x373)
    x2324 = x2289 * x24 + x2311 + x2323 * x26
    x2325 = x2291 * x24 + x2321 + x2323 * x27
    x2326 = x2082 * x373 - x2083 * x380 + x68 * (x2062 * x373 - x2063 * x380)
    x2327 = x2293 * x24 + x2323 * x28 + x2326
    x2328 = -x2062 * x380 + x2086 * x373
    x2329 = x2295 * x24 + x2316 + x2328 * x26
    x2330 = x2297 * x24 + x2326 + x2328 * x27
    x2331 = x2090 * x373 - x2091 * x380 + x2299 * x24 + x2328 * x28
    x2332 = x1381 + x1385 * x26
    x2333 = x1385 * x27 + x1439
    x2334 = x1385 * x28 + x1470
    x2335 = x1439 + x1492 * x26
    x2336 = x1492 * x27 + x1504
    x2337 = x1492 * x28 + x1522
    x2338 = x1470 + x1538 * x26
    x2339 = x1522 + x1538 * x27
    x2340 = x1538 * x28 + x1552
    x2341 = x1504 + x1566 * x26
    x2342 = x1566 * x27 + x1574
    x2343 = x1566 * x28 + x1582
    x2344 = x1522 + x1591 * x26
    x2345 = x1582 + x1591 * x27
    x2346 = x1591 * x28 + x1601
    x2347 = x1552 + x1609 * x26
    x2348 = x1601 + x1609 * x27
    x2349 = x1609 * x28 + x1619
    x2350 = x2265 + x23 * x2332
    x2351 = x2267 + x23 * x2333
    x2352 = x2269 + x23 * x2334
    x2353 = x2271 + x23 * x2335
    x2354 = x2273 + x23 * x2336
    x2355 = x2275 + x23 * x2337
    x2356 = x2277 + x23 * x2338
    x2357 = x2279 + x23 * x2339
    x2358 = x2281 + x23 * x2340
    x2359 = x2283 + x23 * x2341
    x2360 = x2285 + x23 * x2342
    x2361 = x2287 + x23 * x2343
    x2362 = x2289 + x23 * x2344
    x2363 = x2291 + x23 * x2345
    x2364 = x2293 + x23 * x2346
    x2365 = x2295 + x23 * x2347
    x2366 = x2297 + x23 * x2348
    x2367 = x2299 + x23 * x2349
    x2368 = x2012 * x26 + x2019
    x2369 = x2332 * x24 + x2368
    x2370 = x2012 * x27 + x2025
    x2371 = x2333 * x24 + x2370
    x2372 = x2012 * x28 + x2033
    x2373 = x2334 * x24 + x2372
    x2374 = x2025 + x2042 * x26
    x2375 = x2335 * x24 + x2374
    x2376 = x2042 * x27 + x2047
    x2377 = x2336 * x24 + x2376
    x2378 = x2042 * x28 + x2053
    x2379 = x2337 * x24 + x2378
    x2380 = x2033 + x2058 * x26
    x2381 = x2338 * x24 + x2380
    x2382 = x2053 + x2058 * x27
    x2383 = x2339 * x24 + x2382
    x2384 = x2058 * x28 + x2064
    x2385 = x2340 * x24 + x2384
    x2386 = x2047 + x2068 * x26
    x2387 = x2341 * x24 + x2386
    x2388 = x2068 * x27 + x2071
    x2389 = x2342 * x24 + x2388
    x2390 = x2068 * x28 + x2074
    x2391 = x2343 * x24 + x2390
    x2392 = x2053 + x2078 * x26
    x2393 = x2344 * x24 + x2392
    x2394 = x2074 + x2078 * x27
    x2395 = x2345 * x24 + x2394
    x2396 = x2078 * x28 + x2082
    x2397 = x2346 * x24 + x2396
    x2398 = x2064 + x2086 * x26
    x2399 = x2347 * x24 + x2398
    x2400 = x2082 + x2086 * x27
    x2401 = x2348 * x24 + x2400
    x2402 = x2086 * x28 + x2090
    x2403 = x2349 * x24 + x2402
    x2404 = 3 * x1386 + x2012 * x594 - x2013 * x601
    x2405 = 3 * x1440 + x2025 * x594 - x2030 * x601
    x2406 = (
        3 * x1471
        + x2033 * x594
        - x2038 * x601
        + x68 * (3 * x1419 + x2013 * x594 - x2020 * x601)
    )
    x2407 = 3 * x1493 - x2028 * x601 + x2042 * x594
    x2408 = 3 * x1505 + x2047 * x594 - x2048 * x601
    x2409 = (
        3 * x1523
        + x2053 * x594
        - x2054 * x601
        + x68 * (3 * x1454 + x2028 * x594 - x2029 * x601)
    )
    x2410 = (
        3 * x1539
        - x2036 * x601
        + x2058 * x594
        + x68 * (3 * x1415 + x2016 * x594 - x2017 * x601)
    )
    x2411 = (
        3 * x1553
        + x2064 * x594
        - x2065 * x601
        + x74
        * (
            3 * x1481
            + x2036 * x594
            - x2037 * x601
            + x68 * (3 * x1432 + x2017 * x594 - x2022 * x601)
        )
    )
    x2412 = 3 * x1567 - x2045 * x601 + x2068 * x594
    x2413 = (
        3 * x1583
        + x2074 * x594
        - x2075 * x601
        + x68 * (3 * x1509 + x2045 * x594 - x2046 * x601)
    )
    x2414 = (
        3 * x1592
        - x2051 * x601
        + x2078 * x594
        + x68 * (3 * x1496 - x2026 * x601 + x2041 * x594)
    )
    x2415 = (
        3 * x1602
        + x2082 * x594
        - x2083 * x601
        + x74
        * (
            3 * x1527
            + x2051 * x594
            - x2052 * x601
            + x68 * (3 * x1455 + x2026 * x594 - x2027 * x601)
        )
    )
    x2416 = (
        3 * x1610
        - x2062 * x601
        + x2086 * x594
        + x74
        * (
            3 * x1542
            - x2034 * x601
            + x2057 * x594
            + x68 * (3 * x1416 + x2014 * x594 - x2015 * x601)
        )
    )

    # 648 item(s)
    S = numpy.array(
        [
            x131 * (-x103 + x130)
            + x139 * x65
            + x180 * x26
            + x181 * x22
            + x22 * (x181 + x182 * x22)
            - x69
            * (
                x102 * x65
                + x132 * (x77 - x92)
                + x158 * x76
                - x69
                * (
                    x140
                    + x155 * x76
                    + x65 * x91
                    - x69 * (-x146 * x69 + x149 * x76 + x65 * x84)
                )
            )
            + x76
            * (
                x131 * (x129 - x133)
                + x138 * x65
                - x158 * x69
                + x74
                * (
                    x131 * (x128 - x136)
                    + x137 * x65
                    - x157 * x69
                    + x68 * (x131 * (x126 - x134) + x135 * x65 - x156 * x69)
                )
            ),
            x180 * x27 + x22 * x253 + x22 * (x22 * x254 + x253) + x268,
            x180 * x28 + x22 * x269 + x22 * (x174 * x270 + x269),
            x22 * x286 + x22 * (x22 * x287 + x286) + x26 * x288 + x268,
            x22 * x328 + x22 * (x22 * x329 + x328) + x27 * x288 + x337,
            x22 * x338 + x22 * (x270 * x283 + x338) + x28 * x288,
            0,
            0,
            0,
            x22 * x346 + x22 * (x22 * x347 + x346) + x26 * x348 + x337,
            x131 * (-x360 + x366)
            + x22 * x370
            + x22 * (x22 * x371 + x370)
            + x27 * x348
            + x367 * x65
            - x69
            * (
                x132 * (x351 * x65 - x353 - x358)
                + x359 * x65
                - x69 * (x357 * x65 + x368 - x69 * (x355 * x65 - x369 * x69))
            ),
            x22 * x372 + x22 * (x270 * x343 + x372) + x28 * x348,
            0,
            0,
            0,
            0,
            0,
            0,
            x181 * x23 + x22 * x447 + x463,
            x22 * x496 + x23 * x253 + x508,
            x22 * x511 + x23 * x269 + x512,
            x22 * x527 + x23 * x286 + x529,
            x22 * x552 + x23 * x328 + x560,
            x22 * x562 + x23 * x338 + x563,
            0,
            0,
            0,
            x22 * x572 + x23 * x346 + x574,
            x22 * x587 + x23 * x370 + x590,
            x22 * x592 + x23 * x372 + x593,
            0,
            0,
            0,
            0,
            0,
            0,
            x181 * x24 + x22 * x680 + x702,
            x22 * x747 + x24 * x253 + x763,
            x22 * x785 + x24 * x269 + x797,
            x22 * x815 + x24 * x286 + x817,
            x22 * x847 + x24 * x328 + x857,
            x22 * x872 + x24 * x338 + x880,
            x894,
            x896,
            x916,
            x22 * x926 + x24 * x346 + x928,
            x22 * x943 + x24 * x370 + x946,
            x22 * x955 + x24 * x372 + x959,
            x968,
            x970,
            x980,
            x988,
            x990,
            x1001,
            x1043 + x23 * x447,
            x1066 + x23 * x496,
            x1068 + x23 * x511,
            x1079 + x23 * x527,
            x1095 + x23 * x552,
            x1097 + x23 * x562,
            0,
            0,
            0,
            x1104 + x23 * x572,
            x1112 + x23 * x587,
            x1114 + x23 * x592,
            0,
            0,
            0,
            0,
            0,
            0,
            x1176 + x23 * x680,
            x1207 + x23 * x747,
            x1234 + x23 * x785,
            x1245 + x23 * x815,
            x1263 + x23 * x847,
            x1280 + x23 * x872,
            x1295,
            x1297,
            x1315,
            x1322 + x23 * x926,
            x1330 + x23 * x943,
            x1340 + x23 * x955,
            x1348,
            x1350,
            x1359,
            x1367,
            x1369,
            x1378,
            x1436 + x24 * x680,
            x1467 + x24 * x747,
            x1490 + x24 * x785,
            x1501 + x24 * x815,
            x1519 + x24 * x847,
            x1535 + x24 * x872,
            2 * x1536 + x1546,
            2 * x1547 + x1548,
            2 * x1549 + x1564,
            x1571 + x24 * x926,
            x1579 + x24 * x943,
            x1588 + x24 * x955,
            2 * x1589 + x1595,
            2 * x1596 + x1597,
            2 * x1598 + x1606,
            2 * x1607 + x1613,
            2 * x1614 + x1615,
            2 * x1616 + x1623,
            x22 * x446 + x22 * (x1624 * x22 + x446) + x463,
            x22 * x495 + x22 * (x1625 * x22 + x495) + x508,
            x22 * x510 + x22 * (x270 * x394 + x510) + x512,
            x22 * x526 + x22 * (x1626 * x22 + x526) + x529,
            x22 * x551 + x22 * (x1627 * x22 + x551) + x560,
            x22 * x561 + x22 * (x270 * x523 + x561) + x563,
            0,
            0,
            0,
            x22 * x571 + x22 * (x1628 * x22 + x571) + x574,
            x22 * x586 + x22 * (x1629 * x22 + x586) + x590,
            x22 * x591 + x22 * (x270 * x568 + x591) + x593,
            0,
            0,
            0,
            0,
            0,
            0,
            x1043 + x1631 * x22,
            x1066 + x1633 * x22,
            x1068 + x1635 * x22,
            x1079 + x1637 * x22,
            x1095 + x1639 * x22,
            x1097 + x1641 * x22,
            0,
            0,
            0,
            x1104 + x1643 * x22,
            x1112 + x1645 * x22,
            x1114 + x1647 * x22,
            0,
            0,
            0,
            0,
            0,
            0,
            x1176 + x1649 * x22,
            x1207 + x1651 * x22,
            x1234 + x1653 * x22,
            x1245 + x1655 * x22,
            x1263 + x1657 * x22,
            x1280 + x1659 * x22,
            x1661,
            x1663,
            x1665,
            x1322 + x1667 * x22,
            x1330 + x1669 * x22,
            x1340 + x1671 * x22,
            x1673,
            x1675,
            x1677,
            x1679,
            x1681,
            x1683,
            x1631 * x23 + x1696,
            x1633 * x23 + x1704,
            x1635 * x23 + x1705,
            x1637 * x23 + x1709,
            x1639 * x23 + x1715,
            x1641 * x23 + x1716,
            0,
            0,
            0,
            x1643 * x23 + x1719,
            x1645 * x23 + x1722,
            x1647 * x23 + x1723,
            0,
            0,
            0,
            0,
            0,
            0,
            x1649 * x23 + x1737,
            x1651 * x23 + x1746,
            x1653 * x23 + x1755,
            x1655 * x23 + x1760,
            x1657 * x23 + x1767,
            x1659 * x23 + x1774,
            x1779,
            x1781,
            x1788,
            x1667 * x23 + x1792,
            x1669 * x23 + x1796,
            x1671 * x23 + x1801,
            x1805,
            x1807,
            x1812,
            x1816,
            x1818,
            x1822,
            x1649 * x24 + x1836,
            x1651 * x24 + x1845,
            x1653 * x24 + x1854,
            x1655 * x24 + x1859,
            x1657 * x24 + x1866,
            x1659 * x24 + x1873,
            2 * x1874 + x1878,
            2 * x1879 + x1880,
            2 * x1881 + x1887,
            x1667 * x24 + x1891,
            x1669 * x24 + x1895,
            x1671 * x24 + x1900,
            2 * x1901 + x1904,
            2 * x1905 + x1906,
            2 * x1907 + x1911,
            2 * x1912 + x1915,
            2 * x1916 + x1917,
            2 * x1918 + x1921,
            x22 * x679 + x22 * (x1922 * x22 + x679) + x702,
            x22 * x746 + x22 * (x1923 * x22 + x746) + x763,
            x22 * x784 + x22 * (x1924 * x22 + x784) + x797,
            x22 * x814 + x22 * (x1925 * x22 + x814) + x817,
            x22 * x846 + x22 * (x1926 * x22 + x846) + x857,
            x22 * x871 + x22 * (x1927 * x22 + x871) + x880,
            x22 * (x1928 * x22 + x892) + x894,
            x22 * (x1929 * x22 + x895) + x896,
            x22 * (x1930 * x22 + x910) + x916,
            x22 * x925 + x22 * (x1931 * x22 + x925) + x928,
            x22 * x942 + x22 * (x1932 * x22 + x942) + x946,
            x22 * x954 + x22 * (x1933 * x22 + x954) + x959,
            x22 * (x1934 * x22 + x966) + x968,
            x22 * (x1935 * x22 + x969) + x970,
            x22 * (x1936 * x22 + x977) + x980,
            x22 * (x1937 * x22 + x986) + x988,
            x22 * (x1938 * x22 + x989) + x990,
            x1001 + x22 * (x1000 + x1939 * x22),
            x1175 + x1940 * x22 + x23 * x679,
            x1206 + x1941 * x22 + x23 * x746,
            x1233 + x1942 * x22 + x23 * x784,
            x1244 + x1943 * x22 + x23 * x814,
            x1262 + x1944 * x22 + x23 * x846,
            x1279 + x1945 * x22 + x23 * x871,
            x1295 + x1946 * x22,
            x1297 + x1947 * x22,
            x1315 + x1948 * x22,
            x1321 + x1949 * x22 + x23 * x925,
            x1329 + x1950 * x22 + x23 * x942,
            x1339 + x1951 * x22 + x23 * x954,
            x1348 + x1952 * x22,
            x1350 + x1953 * x22,
            x1359 + x1954 * x22,
            x1367 + x1955 * x22,
            x1369 + x1956 * x22,
            x1378 + x1957 * x22,
            x1436 + x1959 * x22,
            x1467 + x1961 * x22,
            x1490 + x1963 * x22,
            x1501 + x1965 * x22,
            x1519 + x1967 * x22,
            x1535 + x1969 * x22,
            x1536 + x1546 + x1971 * x22,
            x1547 + x1548 + x1973 * x22,
            x1549 + x1564 + x1975 * x22,
            x1571 + x1977 * x22,
            x1579 + x1979 * x22,
            x1588 + x1981 * x22,
            x1589 + x1595 + x1983 * x22,
            x1596 + x1597 + x1985 * x22,
            x1598 + x1606 + x1987 * x22,
            x1607 + x1613 + x1989 * x22,
            x1614 + x1615 + x1991 * x22,
            x1616 + x1623 + x1993 * x22,
            x1940 * x23 + x1994,
            x1941 * x23 + x1995,
            x1942 * x23 + x1996,
            x1943 * x23 + x1997,
            x1944 * x23 + x1998,
            x1945 * x23 + x1999,
            x1779 + x1946 * x23,
            x1781 + x1947 * x23,
            x1788 + x1948 * x23,
            x1949 * x23 + x2000,
            x1950 * x23 + x2001,
            x1951 * x23 + x2002,
            x1805 + x1952 * x23,
            x1807 + x1953 * x23,
            x1812 + x1954 * x23,
            x1816 + x1955 * x23,
            x1818 + x1956 * x23,
            x1822 + x1957 * x23,
            x1836 + x1959 * x23,
            x1845 + x1961 * x23,
            x1854 + x1963 * x23,
            x1859 + x1965 * x23,
            x1866 + x1967 * x23,
            x1873 + x1969 * x23,
            x1971 * x23 + x2003,
            x1973 * x23 + x2004,
            x1975 * x23 + x2005,
            x1891 + x1977 * x23,
            x1895 + x1979 * x23,
            x1900 + x1981 * x23,
            x1983 * x23 + x2006,
            x1985 * x23 + x2007,
            x1987 * x23 + x2008,
            x1989 * x23 + x2009,
            x1991 * x23 + x2010,
            x1993 * x23 + x2011,
            x1959 * x24 + x2024,
            x1961 * x24 + x2032,
            x1963 * x24 + x2040,
            x1965 * x24 + x2044,
            x1967 * x24 + x2050,
            x1969 * x24 + x2056,
            x1971 * x24 + x2060,
            x1973 * x24 + x2061,
            x1975 * x24 + x2067,
            x1977 * x24 + x2070,
            x1979 * x24 + x2073,
            x1981 * x24 + x2077,
            x1983 * x24 + x2080,
            x1985 * x24 + x2081,
            x1987 * x24 + x2085,
            x1989 * x24 + x2088,
            x1991 * x24 + x2089,
            x1993 * x24 + x2092,
            x1042 + x1630 * x22 + x22 * (x1630 + x2093 * x22),
            x1065 + x1632 * x22 + x22 * (x1632 + x2094 * x22),
            x1067 + x1634 * x22 + x22 * (x1008 * x270 + x1634),
            x1078 + x1636 * x22 + x22 * (x1636 + x2095 * x22),
            x1094 + x1638 * x22 + x22 * (x1638 + x2096 * x22),
            x1096 + x1640 * x22 + x22 * (x1070 * x270 + x1640),
            0,
            0,
            0,
            x1103 + x1642 * x22 + x22 * (x1642 + x2097 * x22),
            x1111 + x1644 * x22 + x22 * (x1644 + x2098 * x22),
            x1113 + x1646 * x22 + x22 * (x1099 * x270 + x1646),
            0,
            0,
            0,
            0,
            0,
            0,
            x1696 + x2100 * x22,
            x1704 + x2102 * x22,
            x1705 + x2104 * x22,
            x1709 + x2106 * x22,
            x1715 + x2108 * x22,
            x1716 + x2110 * x22,
            0,
            0,
            0,
            x1719 + x2112 * x22,
            x1722 + x2114 * x22,
            x1723 + x2116 * x22,
            0,
            0,
            0,
            0,
            0,
            0,
            x1737 + x2118 * x22,
            x1746 + x2120 * x22,
            x1755 + x2122 * x22,
            x1760 + x2124 * x22,
            x1767 + x2126 * x22,
            x1774 + x2128 * x22,
            x1778 + x2129 * x22,
            x1780 + x2130 * x22,
            x1787 + x2131 * x22,
            x1792 + x2133 * x22,
            x1796 + x2135 * x22,
            x1801 + x2137 * x22,
            x1804 + x2138 * x22,
            x1806 + x2139 * x22,
            x1811 + x2140 * x22,
            x1815 + x2141 * x22,
            x1817 + x2142 * x22,
            x1821 + x2143 * x22,
            3 * x1005
            + x1691 * x373
            - x1695 * x380
            + x2099 * x23
            + x2100 * x23
            + x2144 * x26,
            x2101 * x23 + x2102 * x23 + x2144 * x27 + x2145,
            x2103 * x23 + x2104 * x23 + x2144 * x28,
            x2105 * x23 + x2106 * x23 + x2145 + x2146 * x26,
            x2107 * x23 + x2108 * x23 + x2146 * x27 + x2147,
            x2109 * x23 + x2110 * x23 + x2146 * x28,
            0,
            0,
            0,
            x2111 * x23 + x2112 * x23 + x2147 + x2148 * x26,
            3 * x1108
            + x1720 * x373
            - x1721 * x380
            + x2113 * x23
            + x2114 * x23
            + x2148 * x27
            + x76
            * (
                3 * x1087
                + x1710 * x373
                - x1711 * x380
                + x74
                * (
                    3 * x1058
                    + x1698 * x373
                    - x1699 * x380
                    + x68 * (3 * x1040 + x1687 * x373 - x1693 * x380)
                )
            ),
            x2115 * x23 + x2116 * x23 + x2148 * x28,
            0,
            0,
            0,
            0,
            0,
            0,
            x2099 * x24 + x2118 * x23 + x2150,
            x2101 * x24 + x2120 * x23 + x2152,
            x2103 * x24 + x2122 * x23 + x2154,
            x2105 * x24 + x2124 * x23 + x2156,
            x2107 * x24 + x2126 * x23 + x2158,
            x2109 * x24 + x2128 * x23 + x2160,
            x2162,
            x2163,
            x2165,
            x2111 * x24 + x2133 * x23 + x2167,
            x2113 * x24 + x2135 * x23 + x2168,
            x2115 * x24 + x2137 * x23 + x2170,
            x2172,
            x2173,
            x2175,
            x2177,
            x2178,
            x2179,
            x2118 * x24 + x2182,
            x2120 * x24 + x2185,
            x2122 * x24 + x2188,
            x2124 * x24 + x2191,
            x2126 * x24 + x2194,
            x2128 * x24 + x2197,
            2 * x2198 + x2200,
            2 * x2201 + x2202,
            2 * x2203 + x2205,
            x2133 * x24 + x2208,
            x2135 * x24 + x2210,
            x2137 * x24 + x2213,
            2 * x2214 + x2216,
            2 * x2217 + x2218,
            2 * x2219 + x2221,
            2 * x2222 + x2224,
            2 * x2225 + x2226,
            2 * x2227 + x2228,
            x1175 + x1648 * x22 + x22 * (x1648 + x22 * x2229),
            x1206 + x1650 * x22 + x22 * (x1650 + x22 * x2230),
            x1233 + x1652 * x22 + x22 * (x1652 + x22 * x2231),
            x1244 + x1654 * x22 + x22 * (x1654 + x22 * x2232),
            x1262 + x1656 * x22 + x22 * (x1656 + x22 * x2233),
            x1279 + x1658 * x22 + x22 * (x1658 + x22 * x2234),
            x1661 + x22 * (x1660 + x22 * x2235),
            x1663 + x22 * (x1662 + x22 * x2236),
            x1665 + x22 * (x1664 + x22 * x2237),
            x1321 + x1666 * x22 + x22 * (x1666 + x22 * x2238),
            x1329 + x1668 * x22 + x22 * (x1668 + x22 * x2239),
            x1339 + x1670 * x22 + x22 * (x1670 + x22 * x2240),
            x1673 + x22 * (x1672 + x22 * x2241),
            x1675 + x22 * (x1674 + x22 * x2242),
            x1677 + x22 * (x1676 + x22 * x2243),
            x1679 + x22 * (x1678 + x22 * x2244),
            x1681 + x22 * (x1680 + x22 * x2245),
            x1683 + x22 * (x1682 + x22 * x2246),
            x1994 + x22 * x2247,
            x1995 + x22 * x2248,
            x1996 + x22 * x2249,
            x1997 + x22 * x2250,
            x1998 + x22 * x2251,
            x1999 + x22 * x2252,
            x1779 + x22 * x2253,
            x1781 + x22 * x2254,
            x1788 + x22 * x2255,
            x2000 + x22 * x2256,
            x2001 + x22 * x2257,
            x2002 + x22 * x2258,
            x1805 + x22 * x2259,
            x1807 + x22 * x2260,
            x1812 + x22 * x2261,
            x1816 + x22 * x2262,
            x1818 + x22 * x2263,
            x1822 + x22 * x2264,
            x1836 + x22 * x2266,
            x1845 + x22 * x2268,
            x1854 + x22 * x2270,
            x1859 + x22 * x2272,
            x1866 + x22 * x2274,
            x1873 + x22 * x2276,
            x2003 + x22 * x2278,
            x2004 + x22 * x2280,
            x2005 + x22 * x2282,
            x1891 + x22 * x2284,
            x1895 + x22 * x2286,
            x1900 + x22 * x2288,
            x2006 + x22 * x2290,
            x2007 + x22 * x2292,
            x2008 + x22 * x2294,
            x2009 + x22 * x2296,
            x2010 + x22 * x2298,
            x2011 + x22 * x2300,
            x2117 * x23 + x2150 + x2247 * x23,
            x2119 * x23 + x2152 + x2248 * x23,
            x2121 * x23 + x2154 + x2249 * x23,
            x2123 * x23 + x2156 + x2250 * x23,
            x2125 * x23 + x2158 + x2251 * x23,
            x2127 * x23 + x2160 + x2252 * x23,
            x2162 + x2253 * x23,
            x2163 + x2254 * x23,
            x2165 + x2255 * x23,
            x2132 * x23 + x2167 + x2256 * x23,
            x2134 * x23 + x2168 + x2257 * x23,
            x2136 * x23 + x2170 + x2258 * x23,
            x2172 + x2259 * x23,
            x2173 + x2260 * x23,
            x2175 + x2261 * x23,
            x2177 + x2262 * x23,
            x2178 + x2263 * x23,
            x2179 + x2264 * x23,
            x2182 + x2266 * x23,
            x2185 + x2268 * x23,
            x2188 + x2270 * x23,
            x2191 + x2272 * x23,
            x2194 + x2274 * x23,
            x2197 + x2276 * x23,
            x2198 + x2200 + x2278 * x23,
            x2201 + x2202 + x2280 * x23,
            x2203 + x2205 + x2282 * x23,
            x2208 + x2284 * x23,
            x2210 + x2286 * x23,
            x2213 + x2288 * x23,
            x2214 + x2216 + x2290 * x23,
            x2217 + x2218 + x2292 * x23,
            x2219 + x2221 + x2294 * x23,
            x2222 + x2224 + x2296 * x23,
            x2225 + x2226 + x2298 * x23,
            x2227 + x2228 + x23 * x2300,
            x2266 * x24 + x2302,
            x2268 * x24 + x2304,
            x2270 * x24 + x2306,
            x2272 * x24 + x2308,
            x2274 * x24 + x2310,
            x2276 * x24 + x2312,
            x2278 * x24 + x2314,
            x2280 * x24 + x2315,
            x2282 * x24 + x2317,
            x2284 * x24 + x2319,
            x2286 * x24 + x2320,
            x2288 * x24 + x2322,
            x2290 * x24 + x2324,
            x2292 * x24 + x2325,
            x2294 * x24 + x2327,
            x2296 * x24 + x2329,
            x2298 * x24 + x2330,
            x2300 * x24 + x2331,
            x1435 + x1958 * x22 + x22 * (x1958 + x22 * x2332),
            x1466 + x1960 * x22 + x22 * (x1960 + x22 * x2333),
            x1489 + x1962 * x22 + x22 * (x1962 + x22 * x2334),
            x1500 + x1964 * x22 + x22 * (x1964 + x22 * x2335),
            x1518 + x1966 * x22 + x22 * (x1966 + x22 * x2336),
            x1534 + x1968 * x22 + x22 * (x1968 + x22 * x2337),
            x1546 + x1970 * x22 + x22 * (x1970 + x22 * x2338),
            x1548 + x1972 * x22 + x22 * (x1972 + x22 * x2339),
            x1564 + x1974 * x22 + x22 * (x1974 + x22 * x2340),
            x1570 + x1976 * x22 + x22 * (x1976 + x22 * x2341),
            x1578 + x1978 * x22 + x22 * (x1978 + x22 * x2342),
            x1587 + x1980 * x22 + x22 * (x1980 + x22 * x2343),
            x1595 + x1982 * x22 + x22 * (x1982 + x22 * x2344),
            x1597 + x1984 * x22 + x22 * (x1984 + x22 * x2345),
            x1606 + x1986 * x22 + x22 * (x1986 + x22 * x2346),
            x1613 + x1988 * x22 + x22 * (x1988 + x22 * x2347),
            x1615 + x1990 * x22 + x22 * (x1990 + x22 * x2348),
            x1623 + x1992 * x22 + x22 * (x1992 + x22 * x2349),
            x1835 + x1958 * x23 + x22 * x2350,
            x1844 + x1960 * x23 + x22 * x2351,
            x1853 + x1962 * x23 + x22 * x2352,
            x1858 + x1964 * x23 + x22 * x2353,
            x1865 + x1966 * x23 + x22 * x2354,
            x1872 + x1968 * x23 + x22 * x2355,
            x1878 + x1970 * x23 + x22 * x2356,
            x1880 + x1972 * x23 + x22 * x2357,
            x1887 + x1974 * x23 + x22 * x2358,
            x1890 + x1976 * x23 + x22 * x2359,
            x1894 + x1978 * x23 + x22 * x2360,
            x1899 + x1980 * x23 + x22 * x2361,
            x1904 + x1982 * x23 + x22 * x2362,
            x1906 + x1984 * x23 + x22 * x2363,
            x1911 + x1986 * x23 + x22 * x2364,
            x1915 + x1988 * x23 + x22 * x2365,
            x1917 + x1990 * x23 + x22 * x2366,
            x1921 + x1992 * x23 + x22 * x2367,
            x2024 + x22 * x2369,
            x2032 + x22 * x2371,
            x2040 + x22 * x2373,
            x2044 + x22 * x2375,
            x2050 + x22 * x2377,
            x2056 + x22 * x2379,
            x2060 + x22 * x2381,
            x2061 + x22 * x2383,
            x2067 + x22 * x2385,
            x2070 + x22 * x2387,
            x2073 + x22 * x2389,
            x2077 + x22 * x2391,
            x2080 + x22 * x2393,
            x2081 + x22 * x2395,
            x2085 + x22 * x2397,
            x2088 + x22 * x2399,
            x2089 + x22 * x2401,
            x2092 + x22 * x2403,
            x2181 + x2265 * x23 + x23 * x2350,
            x2184 + x2267 * x23 + x23 * x2351,
            x2187 + x2269 * x23 + x23 * x2352,
            x2190 + x2271 * x23 + x23 * x2353,
            x2193 + x2273 * x23 + x23 * x2354,
            x2196 + x2275 * x23 + x23 * x2355,
            x2200 + x2277 * x23 + x23 * x2356,
            x2202 + x2279 * x23 + x23 * x2357,
            x2205 + x2281 * x23 + x23 * x2358,
            x2207 + x2283 * x23 + x23 * x2359,
            x2209 + x2285 * x23 + x23 * x2360,
            x2212 + x2287 * x23 + x23 * x2361,
            x2216 + x2289 * x23 + x23 * x2362,
            x2218 + x2291 * x23 + x23 * x2363,
            x2221 + x2293 * x23 + x23 * x2364,
            x2224 + x2295 * x23 + x23 * x2365,
            x2226 + x2297 * x23 + x23 * x2366,
            x2228 + x2299 * x23 + x23 * x2367,
            x23 * x2369 + x2302,
            x23 * x2371 + x2304,
            x23 * x2373 + x2306,
            x23 * x2375 + x2308,
            x23 * x2377 + x2310,
            x23 * x2379 + x2312,
            x23 * x2381 + x2314,
            x23 * x2383 + x2315,
            x23 * x2385 + x2317,
            x23 * x2387 + x2319,
            x23 * x2389 + x2320,
            x23 * x2391 + x2322,
            x23 * x2393 + x2324,
            x23 * x2395 + x2325,
            x23 * x2397 + x2327,
            x23 * x2399 + x2329,
            x23 * x2401 + x2330,
            x23 * x2403 + x2331,
            3 * x1382
            + x2019 * x594
            - x2023 * x601
            + x2368 * x24
            + x2369 * x24
            + x2404 * x26,
            x2370 * x24 + x2371 * x24 + x2404 * x27 + x2405,
            x2372 * x24 + x2373 * x24 + x2404 * x28 + x2406,
            x2374 * x24 + x2375 * x24 + x2405 + x2407 * x26,
            x2376 * x24 + x2377 * x24 + x2407 * x27 + x2408,
            x2378 * x24 + x2379 * x24 + x2407 * x28 + x2409,
            x2380 * x24 + x2381 * x24 + x2406 + x2410 * x26,
            x2382 * x24 + x2383 * x24 + x2409 + x2410 * x27,
            x2384 * x24 + x2385 * x24 + x2410 * x28 + x2411,
            x2386 * x24 + x2387 * x24 + x2408 + x2412 * x26,
            3 * x1575
            + x2071 * x594
            - x2072 * x601
            + x2388 * x24
            + x2389 * x24
            + x2412 * x27,
            x2390 * x24 + x2391 * x24 + x2412 * x28 + x2413,
            x2392 * x24 + x2393 * x24 + x2409 + x2414 * x26,
            x2394 * x24 + x2395 * x24 + x2413 + x2414 * x27,
            x2396 * x24 + x2397 * x24 + x2414 * x28 + x2415,
            x2398 * x24 + x2399 * x24 + x2411 + x2416 * x26,
            x24 * x2400 + x24 * x2401 + x2415 + x2416 * x27,
            3 * x1620
            + x2090 * x594
            - x2091 * x601
            + x24 * x2402
            + x24 * x2403
            + x2416 * x28
            + x76
            * (
                3 * x1557
                + x2062 * x594
                - x2063 * x601
                + x74
                * (
                    3 * x1482
                    + x2034 * x594
                    - x2035 * x601
                    + x68 * (3 * x1433 + x2015 * x594 - x2021 * x601)
                )
            ),
        ]
    )
    return S


def eri_2222(a, A, b, B, c, C, d, D):
    """Cartesian [dd|dd] 2-electron electron repulsion integral.

    Generated code; DO NOT modify by hand!"""

    x0 = 2 * a + 2 * b
    x1 = x0 ** (-1.0)
    x2 = 2 * c + 2 * d
    x3 = x2 ** (-1.0)
    x4 = numpy.pi**2.5
    x5 = a + b
    x6 = c + d
    x7 = x5 * x6
    x8 = x5 + x6
    x9 = (x7 + numpy.sqrt(x8)) ** (-1.0)
    x10 = x5 ** (-1.0)
    x11 = A[0] - B[0]
    x12 = A[1] - B[1]
    x13 = A[2] - B[2]
    x14 = numpy.exp(-a * b * x10 * (x11**2 + x12**2 + x13**2))
    x15 = x6 ** (-1.0)
    x16 = C[0] - D[0]
    x17 = C[1] - D[1]
    x18 = C[2] - D[2]
    x19 = x18**2
    x20 = numpy.exp(-c * d * x15 * (x16**2 + x17**2 + x19))
    x21 = x8 ** (-1.0)
    x22 = x15 * (c * C[0] + d * D[0])
    x23 = -x10 * (a * A[0] + b * B[0])
    x24 = -x22 - x23
    x25 = x15 * (c * C[1] + d * D[1])
    x26 = -x10 * (a * A[1] + b * B[1])
    x27 = -x25 - x26
    x28 = -x10 * (a * A[2] + b * B[2])
    x29 = -x15 * (c * C[2] + d * D[2]) - x28
    x30 = x21 * x7 * (x24**2 + x27**2 + x29**2)
    x31 = boys(3, x30)
    x32 = -2 * x14 * x20 * x31 * x4 * x9
    x33 = x21 * x5
    x34 = boys(4, x30)
    x35 = 2 * x14 * x20 * x4 * x9
    x36 = x34 * x35
    x37 = x3 * (-x32 - x33 * x36)
    x38 = x22 - C[0]
    x39 = x31 * x35
    x40 = x24 * x33
    x41 = x36 * x40 + x38 * x39
    x42 = boys(5, x30)
    x43 = x35 * x42
    x44 = x36 * x38 + x40 * x43
    x45 = x33 * x44
    x46 = x24 * x45 + x37 + x38 * x41
    x47 = x33 * x46
    x48 = boys(2, x30)
    x49 = -2 * x14 * x20 * x4 * x48 * x9
    x50 = x3 * (-x33 * x39 - x49)
    x51 = x35 * x48
    x52 = x38 * x51 + x39 * x40
    x53 = x33 * x41
    x54 = x24 * x53 + x38 * x52 + x50
    x55 = 3 * x3
    x56 = 2 * x3
    x57 = x24 * x47 + x38 * x54 + x56 * (x52 - x53)
    x58 = -2 * x14 * x20 * x34 * x4 * x9
    x59 = x3 * (-x33 * x43 - x58)
    x60 = boys(6, x30)
    x61 = x35 * x60
    x62 = x38 * x43 + x40 * x61
    x63 = x33 * x62
    x64 = x24 * x63 + x38 * x44 + x59
    x65 = x33 * x64
    x66 = x24 * x65 + x38 * x46 + x56 * (x41 - x45)
    x67 = x38 * x57 + x40 * x66 + x55 * (-x47 + x54)
    x68 = x21 * x6
    x69 = x67 * x68
    x70 = x33 * x54
    x71 = boys(1, x30)
    x72 = x3 * (2 * x14 * x20 * x4 * x71 * x9 - x33 * x51)
    x73 = x35 * x71
    x74 = x38 * x73 + x40 * x51
    x75 = x33 * x52
    x76 = x24 * x75 + x38 * x74 + x72
    x77 = x24 * x70 + x38 * x76 + x56 * (x74 - x75)
    x78 = x38 * x77 + x40 * x57 + x55 * (-x70 + x76)
    x79 = x1 * (-x69 + x78)
    x80 = -x23 - A[0]
    x81 = x66 * x68
    x82 = x64 * x68
    x83 = x0 + x2
    x84 = x83 ** (-1.0)
    x85 = x24 * x68
    x86 = x61 * x85
    x87 = x43 * x80 - x86
    x88 = x62 * x68
    x89 = -x24 * x88 + x44 * x80 + x84 * x87
    x90 = 2 * x84
    x91 = -x24 * x82 + x46 * x80 + x89 * x90
    x92 = 3 * x84
    x93 = -x24 * x81 + x57 * x80 + x91 * x92
    x94 = 4 * x84
    x95 = -x24 * x69 + x78 * x80 + x93 * x94
    x96 = -2 * x14 * x20 * x4 * x42 * x9
    x97 = x3 * (-x33 * x61 - x96)
    x98 = x35 * boys(7, x30)
    x99 = x38 * x61 + x40 * x98
    x100 = x33 * x99
    x101 = x100 * x24 + x38 * x62 + x97
    x102 = x101 * x33
    x103 = x102 * x24 + x38 * x64 + x56 * (x44 - x63)
    x104 = x103 * x40 + x38 * x66 + x55 * (x46 - x65)
    x105 = x104 * x68
    x106 = x103 * x68
    x107 = x101 * x68
    x108 = x61 * x80 - x85 * x98
    x109 = x68 * x99
    x110 = x108 * x84 - x109 * x24 + x62 * x80
    x111 = -x107 * x24 + x110 * x90 + x64 * x80
    x112 = -x106 * x24 + x111 * x92 + x66 * x80
    x113 = -x105 * x24 + x112 * x94 + x67 * x80
    x114 = x113 * x68
    x115 = x1 * (x57 - x81)
    x116 = x112 * x68
    x117 = x1 * (x46 - x82)
    x118 = x111 * x68
    x119 = x1 * (x44 - x88)
    x120 = x1 * (-x61 * x68 - x96)
    x121 = x108 * x68
    x122 = x120 - x121 * x24 + x80 * x87
    x123 = x110 * x68
    x124 = x119 + x122 * x84 - x123 * x24 + x80 * x89
    x125 = x117 - x118 * x24 + x124 * x90 + x80 * x91
    x126 = x115 - x116 * x24 + x125 * x92 + x80 * x93
    x127 = -x114 * x24 + x126 * x94 + x79 + x80 * x95
    x128 = x127 * x68
    x129 = x68 * x78
    x130 = x33 * x76
    x131 = boys(0, x30)
    x132 = x3 * (2 * x131 * x14 * x20 * x4 * x9 - x33 * x73)
    x133 = x131 * x35
    x134 = x133 * x38 + x40 * x73
    x135 = x33 * x74
    x136 = x132 + x134 * x38 + x135 * x24
    x137 = x130 * x24 + x136 * x38 + x56 * (x134 - x135)
    x138 = x137 * x38 + x40 * x77 + x55 * (-x130 + x136)
    x139 = x1 * (-x129 + x138)
    x140 = x57 * x68
    x141 = x46 * x68
    x142 = x43 * x85
    x143 = -x142 + x36 * x80
    x144 = x44 * x68
    x145 = x143 * x84 - x144 * x24 + x41 * x80
    x146 = -x141 * x24 + x145 * x90 + x54 * x80
    x147 = -x140 * x24 + x146 * x92 + x77 * x80
    x148 = -x129 * x24 + x138 * x80 + x147 * x94
    x149 = x68 * x95
    x150 = x1 * (-x140 + x77)
    x151 = x68 * x93
    x152 = x1 * (-x141 + x54)
    x153 = x68 * x91
    x154 = x1 * (-x144 + x41)
    x155 = x1 * (-x43 * x68 - x58)
    x156 = x68 * x87
    x157 = x143 * x80 + x155 - x156 * x24
    x158 = x68 * x89
    x159 = x145 * x80 + x154 + x157 * x84 - x158 * x24
    x160 = x146 * x80 + x152 - x153 * x24 + x159 * x90
    x161 = x147 * x80 + x150 - x151 * x24 + x160 * x92
    x162 = x139 + x148 * x80 - x149 * x24 + x161 * x94
    x163 = 3 * x1
    x164 = 2 * x1
    x165 = x126 * x68
    x166 = x125 * x68
    x167 = x122 * x68
    x168 = (
        x157 * x80
        + x164 * (2 * x14 * x20 * x34 * x4 * x80 * x9 - x142 - x156)
        - x167 * x24
    )
    x169 = x124 * x68
    x170 = x159 * x80 + x164 * (x145 - x158) + x168 * x84 - x169 * x24
    x171 = x160 * x80 + x164 * (x146 - x153) - x166 * x24 + x170 * x90
    x172 = x161 * x80 + x164 * (x147 - x151) - x165 * x24 + x171 * x92
    x173 = -x128 * x24 + x162 * x80 + x164 * (x148 - x149) + x172 * x94
    x174 = x1 * (-x105 + x67)
    x175 = -2 * x14 * x20 * x4 * x60 * x9
    x176 = x3 * (-x175 - x33 * x98)
    x177 = x35 * boys(8, x30)
    x178 = x177 * x40 + x38 * x98
    x179 = x176 + x178 * x40 + x38 * x99
    x180 = x101 * x38 + x179 * x40 + x56 * (-x100 + x62)
    x181 = x103 * x38 + x180 * x40 + x55 * (-x102 + x64)
    x182 = -x177 * x85 + x80 * x98
    x183 = -x178 * x85 + x182 * x84 + x80 * x99
    x184 = x101 * x80 - x179 * x85 + x183 * x90
    x185 = x103 * x80 - x180 * x85 + x184 * x92
    x186 = x1 * (-x106 + x66)
    x187 = x1 * (-x107 + x64)
    x188 = x1 * (-x109 + x62)
    x189 = x1 * (-x175 - x68 * x98)
    x190 = x108 * x80 - x182 * x85 + x189
    x191 = x110 * x80 - x183 * x85 + x188 + x190 * x84
    x192 = x111 * x80 - x184 * x85 + x187 + x191 * x90
    x193 = x112 * x80 - x185 * x85 + x186 + x192 * x92
    x194 = (
        x122 * x80
        + x164 * (-x121 + 2 * x14 * x20 * x4 * x42 * x80 * x9 - x86)
        - x190 * x85
    )
    x195 = x124 * x80 + x164 * (-x123 + x89) - x191 * x85 + x194 * x84
    x196 = x125 * x80 + x164 * (-x118 + x91) - x192 * x85 + x195 * x90
    x197 = x126 * x80 + x164 * (-x116 + x93) - x193 * x85 + x196 * x92
    x198 = x161 * x68
    x199 = x68 * x77
    x200 = x1 * (x137 - x199)
    x201 = x54 * x68
    x202 = x36 * x85
    x203 = -x202 + x39 * x80
    x204 = x41 * x68
    x205 = x203 * x84 - x204 * x24 + x52 * x80
    x206 = -x201 * x24 + x205 * x90 + x76 * x80
    x207 = x137 * x80 - x199 * x24 + x206 * x92
    x208 = x147 * x68
    x209 = x1 * (-x201 + x76)
    x210 = x146 * x68
    x211 = x1 * (-x204 + x52)
    x212 = x1 * (-x32 - x36 * x68)
    x213 = x143 * x68
    x214 = x203 * x80 + x212 - x213 * x24
    x215 = x145 * x68
    x216 = x205 * x80 + x211 + x214 * x84 - x215 * x24
    x217 = x206 * x80 + x209 - x210 * x24 + x216 * x90
    x218 = x200 + x207 * x80 - x208 * x24 + x217 * x92
    x219 = x160 * x68
    x220 = x157 * x68
    x221 = (
        x164 * (2 * x14 * x20 * x31 * x4 * x80 * x9 - x202 - x213)
        + x214 * x80
        - x220 * x24
    )
    x222 = x159 * x68
    x223 = x164 * (x205 - x215) + x216 * x80 + x221 * x84 - x222 * x24
    x224 = x164 * (x206 - x210) + x217 * x80 - x219 * x24 + x223 * x90
    x225 = x164 * (x207 - x208) - x198 * x24 + x218 * x80 + x224 * x92
    x226 = (
        x163 * (-x198 + x218)
        - x172 * x85
        + x225 * x80
        + x92
        * (
            x163 * (x217 - x219)
            - x171 * x85
            + x224 * x80
            + x90
            * (
                x163 * (x216 - x222)
                - x170 * x85
                + x223 * x80
                + x84 * (x163 * (x214 - x220) - x168 * x85 + x221 * x80)
            )
        )
    )
    x227 = x217 * x68
    x228 = x68 * x76
    x229 = x1 * (x136 - x228)
    x230 = x39 * x85
    x231 = -x230 + x51 * x80
    x232 = x52 * x68
    x233 = x231 * x84 - x232 * x24 + x74 * x80
    x234 = x136 * x80 - x228 * x24 + x233 * x90
    x235 = x206 * x68
    x236 = x1 * (-x232 + x74)
    x237 = x1 * (-x39 * x68 - x49)
    x238 = x203 * x68
    x239 = x231 * x80 + x237 - x238 * x24
    x240 = x205 * x68
    x241 = x233 * x80 + x236 + x239 * x84 - x24 * x240
    x242 = x229 + x234 * x80 - x235 * x24 + x241 * x90
    x243 = x214 * x68
    x244 = (
        x164 * (2 * x14 * x20 * x4 * x48 * x80 * x9 - x230 - x238)
        + x239 * x80
        - x24 * x243
    )
    x245 = x216 * x68
    x246 = x164 * (x233 - x240) - x24 * x245 + x241 * x80 + x244 * x84
    x247 = x164 * (x234 - x235) - x227 * x24 + x242 * x80 + x246 * x90
    x248 = (
        x163 * (-x227 + x242)
        - x224 * x85
        + x247 * x80
        + x90
        * (
            x163 * (x241 - x245)
            - x223 * x85
            + x246 * x80
            + x84 * (x163 * (x239 - x243) - x221 * x85 + x244 * x80)
        )
    )
    x249 = x16 * x248
    x250 = x16 * x247
    x251 = x16 * x225 + x16 * (x225 + x250) + x173
    x252 = x16 * x242
    x253 = x16 * x218 + x16 * (x218 + x252) + x162
    x254 = x17 * x247
    x255 = x25 - C[1]
    x256 = x27 * x33
    x257 = x255 * x51 + x256 * x39
    x258 = x257 * x33
    x259 = x255 * x73 + x256 * x51
    x260 = x3 * (-x258 + x259)
    x261 = x24 * x258 + x259 * x38
    x262 = x255 * x39 + x256 * x36
    x263 = x262 * x33
    x264 = x24 * x263 + x257 * x38
    x265 = x264 * x33
    x266 = x24 * x265 + x260 + x261 * x38
    x267 = x3 * (x257 - x263)
    x268 = x255 * x36 + x256 * x43
    x269 = x268 * x33
    x270 = x24 * x269 + x262 * x38
    x271 = x270 * x33
    x272 = x24 * x271 + x264 * x38 + x267
    x273 = x272 * x68
    x274 = x268 * x68
    x275 = x24 * x274
    x276 = x262 * x80 - x275
    x277 = x270 * x68
    x278 = -x24 * x277 + x264 * x80 + x276 * x84
    x279 = -x24 * x273 + x266 * x80 + x278 * x90
    x280 = x279 * x68
    x281 = x259 * x33
    x282 = x133 * x255 + x256 * x73
    x283 = x3 * (-x281 + x282)
    x284 = x24 * x281 + x282 * x38
    x285 = x261 * x33
    x286 = x24 * x285 + x283 + x284 * x38
    x287 = x266 * x68
    x288 = x262 * x68
    x289 = x24 * x288
    x290 = x257 * x80 - x289
    x291 = x264 * x68
    x292 = -x24 * x291 + x261 * x80 + x290 * x84
    x293 = -x24 * x287 + x286 * x80 + x292 * x90
    x294 = x1 * (x286 - x287)
    x295 = x1 * (x261 - x291)
    x296 = x1 * (x257 - x288)
    x297 = x276 * x68
    x298 = -x24 * x297 + x290 * x80 + x296
    x299 = x278 * x68
    x300 = -x24 * x299 + x292 * x80 + x295 + x298 * x84
    x301 = -x24 * x280 + x293 * x80 + x294 + x300 * x90
    x302 = x1 * (x266 - x273)
    x303 = x3 * (x262 - x269)
    x304 = x255 * x43 + x256 * x61
    x305 = x304 * x33
    x306 = x24 * x305 + x268 * x38
    x307 = x306 * x33
    x308 = x24 * x307 + x270 * x38 + x303
    x309 = x308 * x68
    x310 = x304 * x68
    x311 = x24 * x310
    x312 = x268 * x80 - x311
    x313 = x306 * x68
    x314 = -x24 * x313 + x270 * x80 + x312 * x84
    x315 = -x24 * x309 + x272 * x80 + x314 * x90
    x316 = x315 * x68
    x317 = x1 * (x264 - x277)
    x318 = x1 * (x262 - x274)
    x319 = x312 * x68
    x320 = -x24 * x319 + x276 * x80 + x318
    x321 = x314 * x68
    x322 = -x24 * x321 + x278 * x80 + x317 + x320 * x84
    x323 = -x24 * x316 + x279 * x80 + x302 + x322 * x90
    x324 = x323 * x68
    x325 = x320 * x68
    x326 = x164 * (x257 * x80 - x289 - x297) - x24 * x325 + x298 * x80
    x327 = x322 * x68
    x328 = x164 * (x292 - x299) - x24 * x327 + x300 * x80 + x326 * x84
    x329 = x164 * (-x280 + x293) - x24 * x324 + x301 * x80 + x328 * x90
    x330 = x254 + x329
    x331 = x266 * x38 + x272 * x40 + x56 * (x261 - x265)
    x332 = x272 * x38 + x308 * x40 + x56 * (x264 - x271)
    x333 = x332 * x68
    x334 = -x24 * x333 + x315 * x92 + x331 * x80
    x335 = x334 * x68
    x336 = x266 * x40 + x286 * x38 + x56 * (x284 - x285)
    x337 = x331 * x68
    x338 = -x24 * x337 + x279 * x92 + x336 * x80
    x339 = x1 * (x336 - x337)
    x340 = -x24 * x335 + x323 * x92 + x338 * x80 + x339
    x341 = x1 * (x331 - x333)
    x342 = x3 * (x268 - x305)
    x343 = x255 * x61 + x256 * x98
    x344 = x33 * x343
    x345 = x24 * x344 + x304 * x38
    x346 = x33 * x345
    x347 = x24 * x346 + x306 * x38 + x342
    x348 = x308 * x38 + x347 * x40 + x56 * (x270 - x307)
    x349 = x348 * x68
    x350 = x347 * x68
    x351 = x343 * x68
    x352 = -x24 * x351 + x304 * x80
    x353 = x345 * x68
    x354 = -x24 * x353 + x306 * x80 + x352 * x84
    x355 = -x24 * x350 + x308 * x80 + x354 * x90
    x356 = -x24 * x349 + x332 * x80 + x355 * x92
    x357 = x356 * x68
    x358 = x1 * (x272 - x309)
    x359 = x355 * x68
    x360 = x1 * (x270 - x313)
    x361 = x1 * (x268 - x310)
    x362 = x352 * x68
    x363 = -x24 * x362 + x312 * x80 + x361
    x364 = x354 * x68
    x365 = -x24 * x364 + x314 * x80 + x360 + x363 * x84
    x366 = -x24 * x359 + x315 * x80 + x358 + x365 * x90
    x367 = -x24 * x357 + x334 * x80 + x341 + x366 * x92
    x368 = x367 * x68
    x369 = x366 * x68
    x370 = x363 * x68
    x371 = x164 * (x262 * x80 - x275 - x319) - x24 * x370 + x320 * x80
    x372 = x365 * x68
    x373 = x164 * (x278 - x321) - x24 * x372 + x322 * x80 + x371 * x84
    x374 = x164 * (x279 - x316) - x24 * x369 + x323 * x80 + x373 * x90
    x375 = x164 * (-x335 + x338) - x24 * x368 + x340 * x80 + x374 * x92
    x376 = x16 * x330 + x17 * x225 + x375
    x377 = x17 * x242
    x378 = x301 + x377
    x379 = x16 * x378 + x17 * x218 + x340
    x380 = x17 * x248
    x381 = (
        x163 * (x301 - x324)
        + x329 * x80
        - x374 * x85
        + x90
        * (
            x163 * (x300 - x327)
            + x328 * x80
            - x373 * x85
            + x84 * (x163 * (x298 - x325) + x326 * x80 - x371 * x85)
        )
    )
    x382 = x380 + x381
    x383 = x1 * (x304 - x351)
    x384 = x177 * x256 + x255 * x98
    x385 = x343 * x80 - x384 * x85
    x386 = x352 * x80 + x383 - x385 * x85
    x387 = x164 * (x268 * x80 - x311 - x362) + x363 * x80 - x386 * x85
    x388 = x1 * (x306 - x353)
    x389 = x343 * x38 + x384 * x40
    x390 = x345 * x80 + x385 * x84 - x389 * x85
    x391 = x354 * x80 + x386 * x84 + x388 - x390 * x85
    x392 = x164 * (x314 - x364) + x365 * x80 + x387 * x84 - x391 * x85
    x393 = x1 * (x308 - x350)
    x394 = x3 * (x304 - x344)
    x395 = x345 * x38 + x389 * x40 + x394
    x396 = x347 * x80 + x390 * x90 - x395 * x85
    x397 = x355 * x80 + x391 * x90 + x393 - x396 * x85
    x398 = x164 * (x315 - x359) + x366 * x80 + x392 * x90 - x397 * x85
    x399 = x1 * (x332 - x349)
    x400 = x347 * x38 + x395 * x40 + x56 * (x306 - x346)
    x401 = (
        x163 * (x340 - x368)
        + x375 * x80
        - x85
        * (
            x164 * (x334 - x357)
            + x367 * x80
            + x398 * x92
            - x85
            * (
                x356 * x80
                + x397 * x92
                + x399
                - x85 * (x348 * x80 + x396 * x92 - x400 * x85)
            )
        )
        + x92
        * (
            x163 * (x323 - x369)
            + x374 * x80
            - x398 * x85
            + x90
            * (
                x163 * (x322 - x372)
                + x373 * x80
                - x392 * x85
                + x84 * (x163 * (x320 - x370) + x371 * x80 - x387 * x85)
            )
        )
    )
    x402 = x18 * x225 + x18 * x250
    x403 = x18 * x218 + x18 * x252
    x404 = x255 * x257 + x263 * x27 + x50
    x405 = x33 * x404
    x406 = x255 * x259 + x258 * x27 + x72
    x407 = x3 * (-x405 + x406)
    x408 = x24 * x405 + x38 * x406
    x409 = x255 * x262 + x269 * x27 + x37
    x410 = x33 * x409
    x411 = x24 * x410 + x38 * x404
    x412 = x38 * x408 + x40 * x411 + x407
    x413 = x3 * (x404 - x410)
    x414 = x255 * x268 + x27 * x305 + x59
    x415 = x33 * x414
    x416 = x24 * x415 + x38 * x409
    x417 = x38 * x411 + x40 * x416 + x413
    x418 = x417 * x68
    x419 = x414 * x68
    x420 = x24 * x419
    x421 = x409 * x80 - x420
    x422 = x416 * x68
    x423 = -x24 * x422 + x411 * x80 + x421 * x84
    x424 = -x24 * x418 + x412 * x80 + x423 * x90
    x425 = x424 * x68
    x426 = x33 * x406
    x427 = x132 + x255 * x282 + x27 * x281
    x428 = x3 * (-x426 + x427)
    x429 = x24 * x426 + x38 * x427
    x430 = x38 * x429 + x40 * x408 + x428
    x431 = x412 * x68
    x432 = x409 * x68
    x433 = x24 * x432
    x434 = x404 * x80 - x433
    x435 = x411 * x68
    x436 = -x24 * x435 + x408 * x80 + x434 * x84
    x437 = -x24 * x431 + x430 * x80 + x436 * x90
    x438 = x1 * (x430 - x431)
    x439 = x1 * (x408 - x435)
    x440 = x1 * (x404 - x432)
    x441 = x421 * x68
    x442 = -x24 * x441 + x434 * x80 + x440
    x443 = x423 * x68
    x444 = -x24 * x443 + x436 * x80 + x439 + x442 * x84
    x445 = -x24 * x425 + x437 * x80 + x438 + x444 * x90
    x446 = x1 * (x412 - x418)
    x447 = x3 * (x409 - x415)
    x448 = x255 * x304 + x27 * x344 + x97
    x449 = x33 * x448
    x450 = x24 * x449 + x38 * x414
    x451 = x38 * x416 + x40 * x450 + x447
    x452 = x451 * x68
    x453 = x448 * x68
    x454 = -x24 * x453 + x414 * x80
    x455 = x450 * x68
    x456 = -x24 * x455 + x416 * x80 + x454 * x84
    x457 = -x24 * x452 + x417 * x80 + x456 * x90
    x458 = x457 * x68
    x459 = x1 * (x411 - x422)
    x460 = x1 * (x409 - x419)
    x461 = x454 * x68
    x462 = -x24 * x461 + x421 * x80 + x460
    x463 = x456 * x68
    x464 = -x24 * x463 + x423 * x80 + x459 + x462 * x84
    x465 = -x24 * x458 + x424 * x80 + x446 + x464 * x90
    x466 = x465 * x68
    x467 = x462 * x68
    x468 = x164 * (x404 * x80 - x433 - x441) - x24 * x467 + x442 * x80
    x469 = x464 * x68
    x470 = x164 * (x436 - x443) - x24 * x469 + x444 * x80 + x468 * x84
    x471 = x164 * (-x425 + x437) - x24 * x466 + x445 * x80 + x470 * x90
    x472 = x17 * x329 + x471
    x473 = x17 * x330 + x472
    x474 = x17 * x301 + x445
    x475 = x17 * x378 + x474
    x476 = x1 * (x414 - x453)
    x477 = x176 + x255 * x343 + x256 * x384
    x478 = x448 * x80 - x477 * x85
    x479 = x454 * x80 + x476 - x478 * x85
    x480 = x164 * (x409 * x80 - x420 - x461) + x462 * x80 - x479 * x85
    x481 = x1 * (x416 - x455)
    x482 = x38 * x448 + x40 * x477
    x483 = x450 * x80 + x478 * x84 - x482 * x85
    x484 = x456 * x80 + x479 * x84 + x481 - x483 * x85
    x485 = x164 * (x423 - x463) + x464 * x80 + x480 * x84 - x484 * x85
    x486 = x1 * (x417 - x452)
    x487 = x3 * (x414 - x449)
    x488 = x38 * x450 + x40 * x482 + x487
    x489 = (
        x163 * (x445 - x466)
        + x471 * x80
        - x85
        * (
            x164 * (x424 - x458)
            + x465 * x80
            + x485 * x90
            - x85
            * (
                x457 * x80
                + x484 * x90
                + x486
                - x85 * (x451 * x80 + x483 * x90 - x488 * x85)
            )
        )
        + x90
        * (
            x163 * (x444 - x469)
            + x470 * x80
            - x485 * x85
            + x84 * (x163 * (x442 - x467) + x468 * x80 - x480 * x85)
        )
    )
    x490 = x17 * x381 + x489
    x491 = x18 * x329
    x492 = x18 * x254 + x491
    x493 = x18 * x301
    x494 = x18 * x377 + x493
    x495 = x18 * x381
    x496 = x19 * x247
    x497 = x11 * x19
    x498 = x292 * x68
    x499 = x257 * x68
    x500 = x24 * x499
    x501 = x259 * x80 - x500
    x502 = x261 * x68
    x503 = -x24 * x502 + x284 * x80 + x501 * x84
    x504 = x290 * x68
    x505 = x1 * (x259 - x499)
    x506 = -x24 * x504 + x501 * x80 + x505
    x507 = x298 * x68
    x508 = x164 * (x259 * x80 - x500 - x504) - x24 * x507 + x506 * x80
    x509 = x1 * (x284 - x502)
    x510 = -x24 * x498 + x503 * x80 + x506 * x84 + x509
    x511 = x300 * x68
    x512 = x164 * (-x498 + x503) - x24 * x511 + x508 * x84 + x510 * x80
    x513 = x16 * x512
    x514 = x16 * x329 + x16 * (x329 + x513) + x375
    x515 = x16 * x510
    x516 = x16 * x301 + x16 * (x301 + x515) + x340
    x517 = (
        x163 * (x510 - x511)
        - x328 * x85
        + x512 * x80
        + x84 * (x163 * (x506 - x507) - x326 * x85 + x508 * x80)
    )
    x518 = x16 * x517
    x519 = x17 * x512
    x520 = x436 * x68
    x521 = x404 * x68
    x522 = x24 * x521
    x523 = x406 * x80 - x522
    x524 = x408 * x68
    x525 = -x24 * x524 + x429 * x80 + x523 * x84
    x526 = x434 * x68
    x527 = x1 * (x406 - x521)
    x528 = -x24 * x526 + x523 * x80 + x527
    x529 = x442 * x68
    x530 = x164 * (x406 * x80 - x522 - x526) - x24 * x529 + x528 * x80
    x531 = x1 * (x429 - x524)
    x532 = -x24 * x520 + x525 * x80 + x528 * x84 + x531
    x533 = x444 * x68
    x534 = x164 * (-x520 + x525) - x24 * x533 + x530 * x84 + x532 * x80
    x535 = x519 + x534
    x536 = x16 * x535 + x472
    x537 = x17 * x510
    x538 = x532 + x537
    x539 = x16 * x538 + x474
    x540 = x17 * x517
    x541 = (
        x163 * (x532 - x533)
        - x470 * x85
        + x534 * x80
        + x84 * (x163 * (x528 - x529) - x468 * x85 + x530 * x80)
    )
    x542 = x540 + x541
    x543 = x18 * x513 + x491
    x544 = x18 * x515 + x493
    x545 = x255 * x404 + 2 * x267 + x27 * x410
    x546 = x255 * x409 + x27 * x415 + 2 * x303
    x547 = x546 * x68
    x548 = x24 * x547
    x549 = x545 * x80 - x548
    x550 = x255 * x406 + 2 * x260 + x27 * x405
    x551 = x38 * x550 + x40 * x545
    x552 = x38 * x545 + x40 * x546
    x553 = x552 * x68
    x554 = -x24 * x553 + x549 * x84 + x551 * x80
    x555 = x554 * x68
    x556 = x545 * x68
    x557 = x24 * x556
    x558 = x550 * x80 - x557
    x559 = x255 * x427 + x27 * x426 + 2 * x283
    x560 = x38 * x559 + x40 * x550
    x561 = x551 * x68
    x562 = -x24 * x561 + x558 * x84 + x560 * x80
    x563 = x549 * x68
    x564 = x1 * (x550 - x556)
    x565 = -x24 * x563 + x558 * x80 + x564
    x566 = x1 * (x545 - x547)
    x567 = x255 * x414 + x27 * x449 + 2 * x342
    x568 = x567 * x68
    x569 = -x24 * x568 + x546 * x80
    x570 = x569 * x68
    x571 = -x24 * x570 + x549 * x80 + x566
    x572 = x571 * x68
    x573 = x164 * (x550 * x80 - x557 - x563) - x24 * x572 + x565 * x80
    x574 = x1 * (x560 - x561)
    x575 = -x24 * x555 + x562 * x80 + x565 * x84 + x574
    x576 = x1 * (x551 - x553)
    x577 = x38 * x546 + x40 * x567
    x578 = x577 * x68
    x579 = -x24 * x578 + x552 * x80 + x569 * x84
    x580 = x579 * x68
    x581 = -x24 * x580 + x554 * x80 + x571 * x84 + x576
    x582 = x581 * x68
    x583 = x164 * (-x555 + x562) - x24 * x582 + x573 * x84 + x575 * x80
    x584 = x17 * x534 + x583
    x585 = x17 * x535 + x584
    x586 = x17 * x532 + x575
    x587 = x17 * x538 + x586
    x588 = x1 * (x546 - x568)
    x589 = x255 * x448 + x256 * x477 + 2 * x394
    x590 = x567 * x80 - x589 * x85
    x591 = x569 * x80 + x588 - x590 * x85
    x592 = x164 * (x545 * x80 - x548 - x570) + x571 * x80 - x591 * x85
    x593 = x1 * (x552 - x578)
    x594 = x38 * x567 + x40 * x589
    x595 = (
        x163 * (x575 - x582)
        + x17 * x541
        + x583 * x80
        + x84 * (x163 * (x565 - x572) + x573 * x80 - x592 * x85)
        - x85
        * (
            x164 * (x554 - x580)
            + x581 * x80
            + x592 * x84
            - x85
            * (
                x579 * x80
                + x591 * x84
                + x593
                - x85 * (x577 * x80 + x590 * x84 - x594 * x85)
            )
        )
    )
    x596 = x18 * x534
    x597 = x18 * x519 + x596
    x598 = x18 * x532
    x599 = x18 * x537 + x598
    x600 = x18 * x541
    x601 = x19 * x512
    x602 = x406 * x68
    x603 = x24 * x602
    x604 = x523 * x68
    x605 = x1 * (x427 - x602)
    x606 = -x24 * x604 + x605 + x80 * (x427 * x80 - x603)
    x607 = x528 * x68
    x608 = x164 * (x427 * x80 - x603 - x604) - x24 * x607 + x606 * x80
    x609 = x16 * x608
    x610 = x16 * x534 + x16 * (x534 + x609) + x471
    x611 = x16 * x606
    x612 = x16 * x532 + x16 * (x532 + x611) + x445
    x613 = x163 * (x606 - x607) - x530 * x85 + x608 * x80
    x614 = x16 * x613
    x615 = x17 * x608
    x616 = x550 * x68
    x617 = x24 * x616
    x618 = x558 * x68
    x619 = x1 * (x559 - x616)
    x620 = -x24 * x618 + x619 + x80 * (x559 * x80 - x617)
    x621 = x565 * x68
    x622 = x164 * (x559 * x80 - x617 - x618) - x24 * x621 + x620 * x80
    x623 = x615 + x622
    x624 = x16 * x623 + x584
    x625 = x17 * x606
    x626 = x620 + x625
    x627 = x16 * x626 + x586
    x628 = x17 * x613
    x629 = x163 * (x620 - x621) - x573 * x85 + x622 * x80
    x630 = x628 + x629
    x631 = x18 * x609 + x596
    x632 = x18 * x611 + x598
    x633 = x255 * x545 + x256 * x546 + 3 * x413
    x634 = x633 * x68
    x635 = x255 * x550 + x256 * x545 + 3 * x407
    x636 = x1 * (-x634 + x635)
    x637 = x24 * x634
    x638 = x635 * x80 - x637
    x639 = x255 * x546 + x256 * x567 + 3 * x447
    x640 = x639 * x68
    x641 = -x24 * x640 + x633 * x80
    x642 = x641 * x68
    x643 = -x24 * x642 + x636 + x638 * x80
    x644 = x643 * x68
    x645 = x635 * x68
    x646 = x255 * x559 + x256 * x550 + 3 * x428
    x647 = x1 * (-x645 + x646)
    x648 = x24 * x645
    x649 = x638 * x68
    x650 = -x24 * x649 + x647 + x80 * (x646 * x80 - x648)
    x651 = x164 * (x646 * x80 - x648 - x649) - x24 * x644 + x650 * x80
    x652 = x1 * (x633 - x640)
    x653 = x255 * x567 + x256 * x589 + 3 * x487
    x654 = x17 * x622 + x17 * x623 + x651
    x655 = x17 * x620 + x17 * x626 + x650
    x656 = x18 * x615 + x18 * x622
    x657 = x18 * x620 + x18 * x625
    x658 = x19 * x608
    x659 = -x26 - A[1]
    x660 = x199 * x27
    x661 = x140 * x27
    x662 = x659 * x77 - x661
    x663 = x662 * x68
    x664 = x1 * (x137 * x659 - x660 - x663)
    x665 = x137 * x659 - x660
    x666 = x201 * x27
    x667 = x659 * x76 - x666
    x668 = x141 * x27
    x669 = x54 * x659 - x668
    x670 = x669 * x68
    x671 = x27 * x68
    x672 = x36 * x671
    x673 = x39 * x659 - x672
    x674 = x43 * x671
    x675 = x36 * x659 - x674
    x676 = x675 * x68
    x677 = x24 * x676
    x678 = x673 * x80 - x677
    x679 = x204 * x27
    x680 = x52 * x659 - x679
    x681 = x144 * x27
    x682 = x41 * x659 - x681
    x683 = x68 * x682
    x684 = -x24 * x683 + x678 * x84 + x680 * x80
    x685 = -x24 * x670 + x667 * x80 + x684 * x90
    x686 = -x24 * x663 + x665 * x80 + x685 * x92
    x687 = x27 * x81
    x688 = x57 * x659 - x687
    x689 = x68 * x688
    x690 = x27 * x82
    x691 = x46 * x659 - x690
    x692 = x68 * x691
    x693 = x61 * x671
    x694 = x43 * x659 - x693
    x695 = x68 * x694
    x696 = x24 * x695
    x697 = x675 * x80 - x696
    x698 = x27 * x88
    x699 = x44 * x659 - x698
    x700 = x68 * x699
    x701 = -x24 * x700 + x682 * x80 + x697 * x84
    x702 = -x24 * x692 + x669 * x80 + x701 * x90
    x703 = -x24 * x689 + x662 * x80 + x702 * x92
    x704 = x68 * x703
    x705 = x1 * (x659 * x76 - x666 - x670)
    x706 = x68 * x702
    x707 = x1 * (x52 * x659 - x679 - x683)
    x708 = x1 * (2 * x14 * x20 * x31 * x4 * x659 * x9 - x672 - x676)
    x709 = x68 * x697
    x710 = -x24 * x709 + x678 * x80 + x708
    x711 = x68 * x701
    x712 = -x24 * x711 + x684 * x80 + x707 + x710 * x84
    x713 = -x24 * x706 + x685 * x80 + x705 + x712 * x90
    x714 = -x24 * x704 + x664 + x686 * x80 + x713 * x92
    x715 = x228 * x27
    x716 = x667 * x68
    x717 = x1 * (x136 * x659 - x715 - x716)
    x718 = x136 * x659 - x715
    x719 = x39 * x671
    x720 = x51 * x659 - x719
    x721 = x673 * x68
    x722 = x24 * x721
    x723 = x720 * x80 - x722
    x724 = x232 * x27
    x725 = x659 * x74 - x724
    x726 = x68 * x680
    x727 = -x24 * x726 + x723 * x84 + x725 * x80
    x728 = -x24 * x716 + x718 * x80 + x727 * x90
    x729 = x68 * x685
    x730 = x1 * (x659 * x74 - x724 - x726)
    x731 = x1 * (2 * x14 * x20 * x4 * x48 * x659 * x9 - x719 - x721)
    x732 = x678 * x68
    x733 = -x24 * x732 + x723 * x80 + x731
    x734 = x68 * x684
    x735 = -x24 * x734 + x727 * x80 + x730 + x733 * x84
    x736 = -x24 * x729 + x717 + x728 * x80 + x735 * x90
    x737 = x16 * x736
    x738 = x129 * x27
    x739 = x27 * x69
    x740 = x659 * x78 - x739
    x741 = x68 * x740
    x742 = x1 * (x138 * x659 - x738 - x741)
    x743 = x138 * x659 - x738
    x744 = -x24 * x741 + x703 * x94 + x743 * x80
    x745 = -x105 * x27 + x659 * x67
    x746 = x68 * x745
    x747 = -x106 * x27 + x659 * x66
    x748 = x68 * x747
    x749 = -x107 * x27 + x64 * x659
    x750 = x68 * x749
    x751 = x61 * x659 - x671 * x98
    x752 = x68 * x751
    x753 = -x24 * x752 + x694 * x80
    x754 = -x109 * x27 + x62 * x659
    x755 = x68 * x754
    x756 = -x24 * x755 + x699 * x80 + x753 * x84
    x757 = -x24 * x750 + x691 * x80 + x756 * x90
    x758 = -x24 * x748 + x688 * x80 + x757 * x92
    x759 = -x24 * x746 + x740 * x80 + x758 * x94
    x760 = x68 * x759
    x761 = x1 * (x659 * x77 - x661 - x689)
    x762 = x68 * x758
    x763 = x1 * (x54 * x659 - x668 - x692)
    x764 = x68 * x757
    x765 = x1 * (x41 * x659 - x681 - x700)
    x766 = x1 * (2 * x14 * x20 * x34 * x4 * x659 * x9 - x674 - x695)
    x767 = x68 * x753
    x768 = -x24 * x767 + x697 * x80 + x766
    x769 = x68 * x756
    x770 = -x24 * x769 + x701 * x80 + x765 + x768 * x84
    x771 = -x24 * x764 + x702 * x80 + x763 + x770 * x90
    x772 = -x24 * x762 + x703 * x80 + x761 + x771 * x92
    x773 = -x24 * x760 + x742 + x744 * x80 + x772 * x94
    x774 = x16 * x714 + x16 * (x714 + x737) + x773
    x775 = x12 * x253 + x774
    x776 = (
        x164 * (x686 - x704)
        + x714 * x80
        - x772 * x85
        + x92
        * (
            x164 * (x685 - x706)
            + x713 * x80
            - x771 * x85
            + x90
            * (
                x164 * (x684 - x711)
                + x712 * x80
                - x770 * x85
                + x84 * (x164 * (x673 * x80 - x677 - x709) + x710 * x80 - x768 * x85)
            )
        )
    )
    x777 = (
        x164 * (x728 - x729)
        - x713 * x85
        + x736 * x80
        + x90
        * (
            x164 * (x727 - x734)
            - x712 * x85
            + x735 * x80
            + x84 * (x164 * (x720 * x80 - x722 - x732) - x710 * x85 + x733 * x80)
        )
    )
    x778 = x16 * x777
    x779 = x1 * (x57 * x659 - x687 - x748)
    x780 = x103 * x659 - x180 * x671
    x781 = x101 * x659 - x179 * x671
    x782 = -x177 * x671 + x659 * x98
    x783 = x751 * x80 - x782 * x85
    x784 = -x178 * x671 + x659 * x99
    x785 = x754 * x80 + x783 * x84 - x784 * x85
    x786 = x749 * x80 - x781 * x85 + x785 * x90
    x787 = x747 * x80 - x780 * x85 + x786 * x92
    x788 = x1 * (x46 * x659 - x690 - x750)
    x789 = x1 * (x44 * x659 - x698 - x755)
    x790 = x1 * (2 * x14 * x20 * x4 * x42 * x659 * x9 - x693 - x752)
    x791 = x753 * x80 - x783 * x85 + x790
    x792 = x756 * x80 - x785 * x85 + x789 + x791 * x84
    x793 = x757 * x80 - x786 * x85 + x788 + x792 * x90
    x794 = x758 * x80 + x779 - x787 * x85 + x793 * x92
    x795 = x1 * (x659 * x78 - x739 - x746)
    x796 = x104 * x659 - x181 * x671
    x797 = (
        x16 * x776
        + x16 * (x776 + x778)
        + x164 * (x744 - x760)
        + x773 * x80
        - x85
        * (x759 * x80 + x794 * x94 + x795 - x85 * (x745 * x80 + x787 * x94 - x796 * x85))
        + x94
        * (
            x164 * (x703 - x762)
            + x772 * x80
            - x794 * x85
            + x92
            * (
                x164 * (x702 - x764)
                + x771 * x80
                - x793 * x85
                + x90
                * (
                    x164 * (x701 - x769)
                    + x770 * x80
                    - x792 * x85
                    + x84 * (x164 * (x675 * x80 - x696 - x767) + x768 * x80 - x791 * x85)
                )
            )
        )
    )
    x798 = x17 * x736
    x799 = x266 * x659 - x27 * x273 + x669 * x84
    x800 = x68 * x799
    x801 = -x27 * x287 + x286 * x659 + x667 * x84
    x802 = x1 * (-x800 + x801)
    x803 = x257 * x659 - x27 * x288 + x673 * x84
    x804 = x262 * x659 - x27 * x274 + x675 * x84
    x805 = x68 * x804
    x806 = x24 * x805
    x807 = x80 * x803 - x806
    x808 = x261 * x659 - x27 * x291 + x680 * x84
    x809 = x264 * x659 - x27 * x277 + x682 * x84
    x810 = x68 * x809
    x811 = -x24 * x810 + x80 * x808 + x807 * x84
    x812 = -x24 * x800 + x80 * x801 + x811 * x90
    x813 = -x27 * x309 + x272 * x659 + x691 * x84
    x814 = x68 * x813
    x815 = x268 * x659 - x27 * x310 + x694 * x84
    x816 = x68 * x815
    x817 = x24 * x816
    x818 = x80 * x804 - x817
    x819 = -x27 * x313 + x270 * x659 + x699 * x84
    x820 = x68 * x819
    x821 = -x24 * x820 + x80 * x809 + x818 * x84
    x822 = -x24 * x814 + x799 * x80 + x821 * x90
    x823 = x68 * x822
    x824 = x1 * (x808 - x810)
    x825 = x1 * (x803 - x805)
    x826 = x68 * x818
    x827 = -x24 * x826 + x80 * x807 + x825
    x828 = x68 * x821
    x829 = -x24 * x828 + x80 * x811 + x824 + x827 * x84
    x830 = -x24 * x823 + x80 * x812 + x802 + x829 * x90
    x831 = x798 + x830
    x832 = -x27 * x333 + x331 * x659 + x688 * x84
    x833 = x68 * x832
    x834 = -x27 * x337 + x336 * x659 + x662 * x84
    x835 = x1 * (-x833 + x834)
    x836 = -x24 * x833 + x80 * x834 + x822 * x92
    x837 = -x27 * x349 + x332 * x659 + x747 * x84
    x838 = x68 * x837
    x839 = -x27 * x350 + x308 * x659 + x749 * x84
    x840 = x68 * x839
    x841 = -x27 * x351 + x304 * x659 + x751 * x84
    x842 = x68 * x841
    x843 = -x24 * x842 + x80 * x815
    x844 = -x27 * x353 + x306 * x659 + x754 * x84
    x845 = x68 * x844
    x846 = -x24 * x845 + x80 * x819 + x84 * x843
    x847 = -x24 * x840 + x80 * x813 + x846 * x90
    x848 = -x24 * x838 + x80 * x832 + x847 * x92
    x849 = x68 * x848
    x850 = x1 * (x799 - x814)
    x851 = x68 * x847
    x852 = x1 * (x809 - x820)
    x853 = x1 * (x804 - x816)
    x854 = x68 * x843
    x855 = -x24 * x854 + x80 * x818 + x853
    x856 = x68 * x846
    x857 = -x24 * x856 + x80 * x821 + x84 * x855 + x852
    x858 = -x24 * x851 + x80 * x822 + x850 + x857 * x90
    x859 = -x24 * x849 + x80 * x836 + x835 + x858 * x92
    x860 = x16 * x831 + x17 * x714 + x859
    x861 = x12 * x379 + x860
    x862 = x17 * x777
    x863 = (
        x164 * (x812 - x823)
        + x80 * x830
        - x85 * x858
        + x90
        * (
            x164 * (x811 - x828)
            + x80 * x829
            + x84 * (x164 * (x80 * x803 - x806 - x826) + x80 * x827 - x85 * x855)
            - x85 * x857
        )
    )
    x864 = x862 + x863
    x865 = x1 * (x813 - x840)
    x866 = x347 * x659 - x395 * x671 + x781 * x84
    x867 = x343 * x659 - x384 * x671 + x782 * x84
    x868 = x80 * x841 - x85 * x867
    x869 = x345 * x659 - x389 * x671 + x784 * x84
    x870 = x80 * x844 + x84 * x868 - x85 * x869
    x871 = x80 * x839 - x85 * x866 + x870 * x90
    x872 = x1 * (x819 - x845)
    x873 = x1 * (x815 - x842)
    x874 = x80 * x843 - x85 * x868 + x873
    x875 = x80 * x846 + x84 * x874 - x85 * x870 + x872
    x876 = x80 * x847 - x85 * x871 + x865 + x875 * x90
    x877 = x1 * (x832 - x838)
    x878 = x348 * x659 - x400 * x671 + x780 * x84
    x879 = (
        x164 * (x836 - x849)
        + x80 * x859
        - x85
        * (x80 * x848 - x85 * (x80 * x837 - x85 * x878 + x871 * x92) + x876 * x92 + x877)
        + x92
        * (
            x164 * (x822 - x851)
            + x80 * x858
            - x85 * x876
            + x90
            * (
                x164 * (x821 - x856)
                + x80 * x857
                + x84 * (x164 * (x80 * x804 - x817 - x854) + x80 * x855 - x85 * x874)
                - x85 * x875
            )
        )
    )
    x880 = x16 * x864 + x17 * x776 + x879
    x881 = x18 * x714 + x18 * x737
    x882 = x12 * x403 + x881
    x883 = x18 * x776 + x18 * x778
    x884 = -x27 * x418 + x412 * x659 + x813 * x90
    x885 = x68 * x884
    x886 = -x27 * x431 + x430 * x659 + x799 * x90
    x887 = x1 * (-x885 + x886)
    x888 = -x27 * x432 + x404 * x659 + x804 * x90
    x889 = -x27 * x419 + x409 * x659 + x815 * x90
    x890 = x68 * x889
    x891 = x24 * x890
    x892 = x80 * x888 - x891
    x893 = -x27 * x435 + x408 * x659 + x809 * x90
    x894 = -x27 * x422 + x411 * x659 + x819 * x90
    x895 = x68 * x894
    x896 = -x24 * x895 + x80 * x893 + x84 * x892
    x897 = -x24 * x885 + x80 * x886 + x896 * x90
    x898 = -x27 * x452 + x417 * x659 + x839 * x90
    x899 = x68 * x898
    x900 = -x27 * x453 + x414 * x659 + x841 * x90
    x901 = x68 * x900
    x902 = -x24 * x901 + x80 * x889
    x903 = -x27 * x455 + x416 * x659 + x844 * x90
    x904 = x68 * x903
    x905 = -x24 * x904 + x80 * x894 + x84 * x902
    x906 = -x24 * x899 + x80 * x884 + x90 * x905
    x907 = x68 * x906
    x908 = x1 * (x893 - x895)
    x909 = x1 * (x888 - x890)
    x910 = x68 * x902
    x911 = -x24 * x910 + x80 * x892 + x909
    x912 = x68 * x905
    x913 = -x24 * x912 + x80 * x896 + x84 * x911 + x908
    x914 = -x24 * x907 + x80 * x897 + x887 + x90 * x913
    x915 = x17 * x830 + x914
    x916 = x17 * x831 + x915
    x917 = x12 * x475 + x916
    x918 = x1 * (x889 - x901)
    x919 = x448 * x659 - x477 * x671 + x867 * x90
    x920 = x80 * x900 - x85 * x919
    x921 = x80 * x902 - x85 * x920 + x918
    x922 = x1 * (x894 - x904)
    x923 = x450 * x659 - x482 * x671 + x869 * x90
    x924 = x80 * x903 + x84 * x920 - x85 * x923
    x925 = x80 * x905 + x84 * x921 - x85 * x924 + x922
    x926 = x1 * (x884 - x899)
    x927 = x451 * x659 - x488 * x671 + x866 * x90
    x928 = (
        x164 * (x897 - x907)
        + x80 * x914
        - x85
        * (x80 * x906 - x85 * (x80 * x898 - x85 * x927 + x90 * x924) + x90 * x925 + x926)
        + x90
        * (
            x164 * (x896 - x912)
            + x80 * x913
            + x84 * (x164 * (x80 * x888 - x891 - x910) + x80 * x911 - x85 * x921)
            - x85 * x925
        )
    )
    x929 = x17 * x863 + x928
    x930 = x17 * x864 + x929
    x931 = x18 * x830
    x932 = x18 * x798 + x931
    x933 = x12 * x494 + x932
    x934 = x18 * x863
    x935 = x18 * x862 + x934
    x936 = x12 * x19
    x937 = x19 * x736
    x938 = x242 * x936 + x937
    x939 = x19 * x777
    x940 = x68 * x808
    x941 = -x27 * x502 + x284 * x659 + x725 * x84
    x942 = x1 * (-x940 + x941)
    x943 = x68 * x803
    x944 = x259 * x659 - x27 * x499 + x720 * x84
    x945 = x1 * (-x943 + x944)
    x946 = x24 * x943
    x947 = x80 * x944 - x946
    x948 = x68 * x807
    x949 = -x24 * x948 + x80 * x947 + x945
    x950 = -x24 * x940 + x80 * x941 + x84 * x947
    x951 = x68 * x811
    x952 = -x24 * x951 + x80 * x950 + x84 * x949 + x942
    x953 = x16 * x952
    x954 = x16 * x830 + x16 * (x830 + x953) + x859
    x955 = x12 * x516 + x954
    x956 = (
        x164 * (x950 - x951)
        + x80 * x952
        - x829 * x85
        + x84 * (x164 * (x80 * x944 - x946 - x948) + x80 * x949 - x827 * x85)
    )
    x957 = x16 * x956
    x958 = x16 * x863 + x16 * (x863 + x957) + x879
    x959 = x17 * x952
    x960 = x68 * x893
    x961 = -x27 * x524 + x429 * x659 + x808 * x90
    x962 = x1 * (-x960 + x961)
    x963 = x68 * x888
    x964 = -x27 * x521 + x406 * x659 + x803 * x90
    x965 = x1 * (-x963 + x964)
    x966 = x24 * x963
    x967 = x80 * x964 - x966
    x968 = x68 * x892
    x969 = -x24 * x968 + x80 * x967 + x965
    x970 = -x24 * x960 + x80 * x961 + x84 * x967
    x971 = x68 * x896
    x972 = -x24 * x971 + x80 * x970 + x84 * x969 + x962
    x973 = x959 + x972
    x974 = x16 * x973 + x915
    x975 = x12 * x539 + x974
    x976 = x17 * x956
    x977 = (
        x164 * (x970 - x971)
        + x80 * x972
        + x84 * (x164 * (x80 * x964 - x966 - x968) + x80 * x969 - x85 * x911)
        - x85 * x913
    )
    x978 = x976 + x977
    x979 = x16 * x978 + x929
    x980 = x18 * x953 + x931
    x981 = x12 * x544 + x980
    x982 = x18 * x957 + x934
    x983 = -x27 * x553 + x551 * x659 + x894 * x92
    x984 = x68 * x983
    x985 = -x27 * x561 + x560 * x659 + x893 * x92
    x986 = x1 * (-x984 + x985)
    x987 = -x27 * x547 + x545 * x659 + x889 * x92
    x988 = x68 * x987
    x989 = -x27 * x556 + x550 * x659 + x888 * x92
    x990 = x1 * (-x988 + x989)
    x991 = x24 * x988
    x992 = x80 * x989 - x991
    x993 = -x27 * x568 + x546 * x659 + x900 * x92
    x994 = x68 * x993
    x995 = -x24 * x994 + x80 * x987
    x996 = x68 * x995
    x997 = -x24 * x996 + x80 * x992 + x990
    x998 = -x24 * x984 + x80 * x985 + x84 * x992
    x999 = -x27 * x578 + x552 * x659 + x903 * x92
    x1000 = x68 * x999
    x1001 = -x1000 * x24 + x80 * x983 + x84 * x995
    x1002 = x1001 * x68
    x1003 = -x1002 * x24 + x80 * x998 + x84 * x997 + x986
    x1004 = x1003 + x17 * x972
    x1005 = x1004 + x17 * x973
    x1006 = x1005 + x12 * x587
    x1007 = x1 * (x987 - x994)
    x1008 = x567 * x659 - x589 * x671 + x919 * x92
    x1009 = -x1008 * x85 + x80 * x993
    x1010 = x1007 - x1009 * x85 + x80 * x995
    x1011 = x1 * (-x1000 + x983)
    x1012 = x577 * x659 - x594 * x671 + x92 * x923
    x1013 = (
        x1003 * x80
        + x164 * (-x1002 + x998)
        + x17 * x977
        + x84 * (-x1010 * x85 + x164 * (x80 * x989 - x991 - x996) + x80 * x997)
        - x85
        * (
            x1001 * x80
            + x1010 * x84
            + x1011
            - x85 * (x1009 * x84 - x1012 * x85 + x80 * x999)
        )
    )
    x1014 = x1013 + x17 * x978
    x1015 = x18 * x972
    x1016 = x1015 + x18 * x959
    x1017 = x1016 + x12 * x599
    x1018 = x18 * x977
    x1019 = x1018 + x18 * x976
    x1020 = x19 * x952
    x1021 = x1020 + x510 * x936
    x1022 = x19 * x956
    x1023 = x68 * x964
    x1024 = -x27 * x602 + x427 * x659 + x90 * x944
    x1025 = x1 * (-x1023 + x1024)
    x1026 = x1023 * x24
    x1027 = x1024 * x80 - x1026
    x1028 = x68 * x967
    x1029 = x1025 + x1027 * x80 - x1028 * x24
    x1030 = x1029 * x16
    x1031 = x16 * x972 + x16 * (x1030 + x972) + x914
    x1032 = x1031 + x12 * x612
    x1033 = x1029 * x80 + x164 * (x1024 * x80 - x1026 - x1028) - x85 * x969
    x1034 = x1033 * x16
    x1035 = x16 * x977 + x16 * (x1034 + x977) + x928
    x1036 = x1029 * x17
    x1037 = x68 * x989
    x1038 = -x27 * x616 + x559 * x659 + x92 * x964
    x1039 = x1 * (-x1037 + x1038)
    x1040 = x1037 * x24
    x1041 = x1038 * x80 - x1040
    x1042 = x68 * x992
    x1043 = x1039 + x1041 * x80 - x1042 * x24
    x1044 = x1036 + x1043
    x1045 = x1004 + x1044 * x16
    x1046 = x1045 + x12 * x627
    x1047 = x1033 * x17
    x1048 = x1043 * x80 + x164 * (x1038 * x80 - x1040 - x1042) - x85 * x997
    x1049 = x1047 + x1048
    x1050 = x1013 + x1049 * x16
    x1051 = x1015 + x1030 * x18
    x1052 = x1051 + x12 * x632
    x1053 = x1018 + x1034 * x18
    x1054 = -x27 * x634 + x635 * x659 + x94 * x987
    x1055 = x1054 * x68
    x1056 = -x27 * x645 + x646 * x659 + x94 * x989
    x1057 = x1 * (-x1055 + x1056)
    x1058 = x1055 * x24
    x1059 = x1056 * x80 - x1058
    x1060 = -x27 * x640 + x633 * x659 + x94 * x993
    x1061 = x1060 * x68
    x1062 = x1054 * x80 - x1061 * x24
    x1063 = x1062 * x68
    x1064 = x1057 + x1059 * x80 - x1063 * x24
    x1065 = x1043 * x17 + x1044 * x17 + x1064
    x1066 = x1065 + x12 * x655
    x1067 = x1 * (x1054 - x1061)
    x1068 = x1008 * x94 + x639 * x659 - x653 * x671
    x1069 = (
        x1048 * x17
        + x1049 * x17
        + x1064 * x80
        + x164 * (x1056 * x80 - x1058 - x1063)
        - x85 * (x1062 * x80 + x1067 - x85 * (x1060 * x80 - x1068 * x85))
    )
    x1070 = x1036 * x18 + x1043 * x18
    x1071 = x1070 + x12 * x657
    x1072 = x1047 * x18 + x1048 * x18
    x1073 = x1029 * x19
    x1074 = x1073 + x606 * x936
    x1075 = x1033 * x19
    x1076 = -x28 - A[2]
    x1077 = x199 * x29
    x1078 = x140 * x29
    x1079 = x1076 * x77 - x1078
    x1080 = x1079 * x68
    x1081 = x1 * (x1076 * x137 - x1077 - x1080)
    x1082 = x1076 * x137 - x1077
    x1083 = x201 * x29
    x1084 = x1076 * x76 - x1083
    x1085 = x1084 * x80
    x1086 = x141 * x29
    x1087 = x1076 * x54 - x1086
    x1088 = x1087 * x68
    x1089 = x29 * x68
    x1090 = x1089 * x36
    x1091 = x1076 * x39 - x1090
    x1092 = x1091 * x80
    x1093 = x1089 * x43
    x1094 = x1076 * x36 - x1093
    x1095 = x1094 * x68
    x1096 = x1095 * x24
    x1097 = x1092 - x1096
    x1098 = x204 * x29
    x1099 = x1076 * x52 - x1098
    x1100 = x1099 * x80
    x1101 = x144 * x29
    x1102 = x1076 * x41 - x1101
    x1103 = x1102 * x68
    x1104 = x1103 * x24
    x1105 = x1097 * x84 + x1100 - x1104
    x1106 = x1085 - x1088 * x24 + x1105 * x90
    x1107 = -x1080 * x24 + x1082 * x80 + x1106 * x92
    x1108 = x1079 * x80
    x1109 = x29 * x81
    x1110 = x1076 * x57 - x1109
    x1111 = x1110 * x68
    x1112 = x1087 * x80
    x1113 = x29 * x82
    x1114 = x1076 * x46 - x1113
    x1115 = x1114 * x68
    x1116 = x1115 * x24
    x1117 = x1094 * x80
    x1118 = x1089 * x61
    x1119 = x1076 * x43 - x1118
    x1120 = x1119 * x68
    x1121 = x1120 * x24
    x1122 = x1117 - x1121
    x1123 = x1102 * x80
    x1124 = x29 * x88
    x1125 = x1076 * x44 - x1124
    x1126 = x1125 * x68
    x1127 = x1126 * x24
    x1128 = x1122 * x84 + x1123 - x1127
    x1129 = x1112 - x1116 + x1128 * x90
    x1130 = x1108 - x1111 * x24 + x1129 * x92
    x1131 = x1130 * x68
    x1132 = x1 * (x1076 * x76 - x1083 - x1088)
    x1133 = x1129 * x68
    x1134 = x1 * (x1076 * x52 - x1098 - x1103)
    x1135 = x1 * (2 * x1076 * x14 * x20 * x31 * x4 * x9 - x1090 - x1095)
    x1136 = x1122 * x68
    x1137 = x1097 * x80 + x1135 - x1136 * x24
    x1138 = x1128 * x68
    x1139 = x1105 * x80 + x1134 + x1137 * x84 - x1138 * x24
    x1140 = x1106 * x80 + x1132 - x1133 * x24 + x1139 * x90
    x1141 = x1081 + x1107 * x80 - x1131 * x24 + x1140 * x92
    x1142 = x228 * x29
    x1143 = x1084 * x68
    x1144 = x1 * (x1076 * x136 - x1142 - x1143)
    x1145 = x1076 * x136 - x1142
    x1146 = x1089 * x39
    x1147 = x1076 * x51 - x1146
    x1148 = x1147 * x80
    x1149 = x1091 * x68
    x1150 = x1149 * x24
    x1151 = x1148 - x1150
    x1152 = x232 * x29
    x1153 = x1076 * x74 - x1152
    x1154 = x1153 * x80
    x1155 = x1099 * x68
    x1156 = x1151 * x84 + x1154 - x1155 * x24
    x1157 = -x1143 * x24 + x1145 * x80 + x1156 * x90
    x1158 = x1106 * x68
    x1159 = x1 * (x1076 * x74 - x1152 - x1155)
    x1160 = x1 * (2 * x1076 * x14 * x20 * x4 * x48 * x9 - x1146 - x1149)
    x1161 = x1097 * x68
    x1162 = x1151 * x80 + x1160 - x1161 * x24
    x1163 = x1105 * x68
    x1164 = x1156 * x80 + x1159 + x1162 * x84 - x1163 * x24
    x1165 = x1144 + x1157 * x80 - x1158 * x24 + x1164 * x90
    x1166 = x129 * x29
    x1167 = x29 * x69
    x1168 = x1076 * x78 - x1167
    x1169 = x1168 * x68
    x1170 = x1 * (x1076 * x138 - x1166 - x1169)
    x1171 = x1076 * x138 - x1166
    x1172 = x1130 * x94 - x1169 * x24 + x1171 * x80
    x1173 = -x105 * x29 + x1076 * x67
    x1174 = x1173 * x68
    x1175 = x1110 * x80
    x1176 = -x106 * x29 + x1076 * x66
    x1177 = x1176 * x68
    x1178 = x1177 * x24
    x1179 = x1114 * x80
    x1180 = -x107 * x29 + x1076 * x64
    x1181 = x1180 * x68
    x1182 = x1181 * x24
    x1183 = x1119 * x80
    x1184 = x1076 * x61 - x1089 * x98
    x1185 = x1184 * x68
    x1186 = x1185 * x24
    x1187 = x1183 - x1186
    x1188 = x1125 * x80
    x1189 = x1076 * x62 - x109 * x29
    x1190 = x1189 * x68
    x1191 = x1190 * x24
    x1192 = x1187 * x84 + x1188 - x1191
    x1193 = x1179 - x1182 + x1192 * x90
    x1194 = x1175 - x1178 + x1193 * x92
    x1195 = x1168 * x80 - x1174 * x24 + x1194 * x94
    x1196 = x1195 * x68
    x1197 = x1 * (x1076 * x77 - x1078 - x1111)
    x1198 = x1194 * x68
    x1199 = x1 * (x1076 * x54 - x1086 - x1115)
    x1200 = x1193 * x68
    x1201 = x1 * (x1076 * x41 - x1101 - x1126)
    x1202 = x1 * (2 * x1076 * x14 * x20 * x34 * x4 * x9 - x1093 - x1120)
    x1203 = x1187 * x68
    x1204 = x1122 * x80 + x1202 - x1203 * x24
    x1205 = x1192 * x68
    x1206 = x1128 * x80 + x1201 + x1204 * x84 - x1205 * x24
    x1207 = x1129 * x80 + x1199 - x1200 * x24 + x1206 * x90
    x1208 = x1130 * x80 + x1197 - x1198 * x24 + x1207 * x92
    x1209 = x1170 + x1172 * x80 - x1196 * x24 + x1208 * x94
    x1210 = x1141 * x16 + x1209 + x16 * (x1141 + x1165 * x16)
    x1211 = x1210 + x13 * x253
    x1212 = (
        x1141 * x80
        - x1208 * x85
        + x164 * (x1107 - x1131)
        + x92
        * (
            x1140 * x80
            - x1207 * x85
            + x164 * (x1106 - x1133)
            + x90
            * (
                x1139 * x80
                - x1206 * x85
                + x164 * (x1105 - x1138)
                + x84 * (x1137 * x80 - x1204 * x85 + x164 * (x1091 * x80 - x1096 - x1136))
            )
        )
    )
    x1213 = (
        -x1140 * x85
        + x1165 * x80
        + x164 * (x1157 - x1158)
        + x90
        * (
            -x1139 * x85
            + x1164 * x80
            + x164 * (x1156 - x1163)
            + x84 * (-x1137 * x85 + x1162 * x80 + x164 * (x1147 * x80 - x1150 - x1161))
        )
    )
    x1214 = x1 * (x1076 * x57 - x1109 - x1177)
    x1215 = x1176 * x80
    x1216 = x103 * x1076 - x1089 * x180
    x1217 = x1216 * x85
    x1218 = x1180 * x80
    x1219 = x101 * x1076 - x1089 * x179
    x1220 = x1219 * x85
    x1221 = x1184 * x80
    x1222 = x1076 * x98 - x1089 * x177
    x1223 = x1222 * x85
    x1224 = x1221 - x1223
    x1225 = x1189 * x80
    x1226 = x1076 * x99 - x1089 * x178
    x1227 = x1226 * x85
    x1228 = x1224 * x84 + x1225 - x1227
    x1229 = x1218 - x1220 + x1228 * x90
    x1230 = x1215 - x1217 + x1229 * x92
    x1231 = x1 * (x1076 * x46 - x1113 - x1181)
    x1232 = x1 * (x1076 * x44 - x1124 - x1190)
    x1233 = x1 * (2 * x1076 * x14 * x20 * x4 * x42 * x9 - x1118 - x1185)
    x1234 = x1187 * x80 - x1224 * x85 + x1233
    x1235 = x1192 * x80 - x1228 * x85 + x1232 + x1234 * x84
    x1236 = x1193 * x80 - x1229 * x85 + x1231 + x1235 * x90
    x1237 = x1194 * x80 + x1214 - x1230 * x85 + x1236 * x92
    x1238 = x1 * (x1076 * x78 - x1167 - x1174)
    x1239 = x104 * x1076 - x1089 * x181
    x1240 = (
        x1209 * x80
        + x1212 * x16
        + x16 * (x1212 + x1213 * x16)
        + x164 * (x1172 - x1196)
        - x85
        * (
            x1195 * x80
            + x1237 * x94
            + x1238
            - x85 * (x1173 * x80 + x1230 * x94 - x1239 * x85)
        )
        + x94
        * (
            x1208 * x80
            - x1237 * x85
            + x164 * (x1130 - x1198)
            + x92
            * (
                x1207 * x80
                - x1236 * x85
                + x164 * (x1129 - x1200)
                + x90
                * (
                    x1206 * x80
                    - x1235 * x85
                    + x164 * (x1128 - x1205)
                    + x84
                    * (x1204 * x80 - x1234 * x85 + x164 * (x1094 * x80 - x1121 - x1203))
                )
            )
        )
    )
    x1241 = x287 * x29
    x1242 = x273 * x29
    x1243 = x1076 * x266 - x1242
    x1244 = x1243 * x68
    x1245 = x1 * (x1076 * x286 - x1241 - x1244)
    x1246 = x1076 * x286 - x1241
    x1247 = x29 * x291
    x1248 = x1076 * x261 - x1247
    x1249 = x1248 * x80
    x1250 = x288 * x29
    x1251 = x1076 * x257 - x1250
    x1252 = x1251 * x80
    x1253 = x274 * x29
    x1254 = x1076 * x262 - x1253
    x1255 = x1254 * x68
    x1256 = x1255 * x24
    x1257 = x1252 - x1256
    x1258 = x277 * x29
    x1259 = x1076 * x264 - x1258
    x1260 = x1259 * x68
    x1261 = x1249 + x1257 * x84 - x1260 * x24
    x1262 = -x1244 * x24 + x1246 * x80 + x1261 * x90
    x1263 = x1243 * x80
    x1264 = x29 * x309
    x1265 = x1076 * x272 - x1264
    x1266 = x1265 * x68
    x1267 = x1259 * x80
    x1268 = x1254 * x80
    x1269 = x29 * x310
    x1270 = x1076 * x268 - x1269
    x1271 = x1270 * x68
    x1272 = x1271 * x24
    x1273 = x1268 - x1272
    x1274 = x29 * x313
    x1275 = x1076 * x270 - x1274
    x1276 = x1275 * x68
    x1277 = x1276 * x24
    x1278 = x1267 + x1273 * x84 - x1277
    x1279 = x1263 - x1266 * x24 + x1278 * x90
    x1280 = x1279 * x68
    x1281 = x1 * (x1076 * x261 - x1247 - x1260)
    x1282 = x1 * (x1076 * x257 - x1250 - x1255)
    x1283 = x1273 * x68
    x1284 = x1257 * x80 + x1282 - x1283 * x24
    x1285 = x1278 * x68
    x1286 = x1261 * x80 + x1281 + x1284 * x84 - x1285 * x24
    x1287 = x1245 + x1262 * x80 - x1280 * x24 + x1286 * x90
    x1288 = x1165 * x17 + x1287
    x1289 = x29 * x337
    x1290 = x29 * x333
    x1291 = x1076 * x331 - x1290
    x1292 = x1291 * x68
    x1293 = x1 * (x1076 * x336 - x1289 - x1292)
    x1294 = x1076 * x336 - x1289
    x1295 = x1279 * x92 - x1292 * x24 + x1294 * x80
    x1296 = x1076 * x332 - x29 * x349
    x1297 = x1296 * x68
    x1298 = x1265 * x80
    x1299 = x1076 * x308 - x29 * x350
    x1300 = x1299 * x68
    x1301 = x1300 * x24
    x1302 = x1275 * x80
    x1303 = x1270 * x80
    x1304 = x1076 * x304 - x29 * x351
    x1305 = x1304 * x68
    x1306 = x1305 * x24
    x1307 = x1303 - x1306
    x1308 = x1076 * x306 - x29 * x353
    x1309 = x1308 * x68
    x1310 = x1309 * x24
    x1311 = x1302 + x1307 * x84 - x1310
    x1312 = x1298 - x1301 + x1311 * x90
    x1313 = x1291 * x80 - x1297 * x24 + x1312 * x92
    x1314 = x1313 * x68
    x1315 = x1 * (x1076 * x266 - x1242 - x1266)
    x1316 = x1312 * x68
    x1317 = x1 * (x1076 * x264 - x1258 - x1276)
    x1318 = x1 * (x1076 * x262 - x1253 - x1271)
    x1319 = x1307 * x68
    x1320 = x1273 * x80 + x1318 - x1319 * x24
    x1321 = x1311 * x68
    x1322 = x1278 * x80 + x1317 + x1320 * x84 - x1321 * x24
    x1323 = x1279 * x80 + x1315 - x1316 * x24 + x1322 * x90
    x1324 = x1293 + x1295 * x80 - x1314 * x24 + x1323 * x92
    x1325 = x1141 * x17 + x1288 * x16 + x1324
    x1326 = x13 * x379 + x1325
    x1327 = (
        x1287 * x80
        - x1323 * x85
        + x164 * (x1262 - x1280)
        + x90
        * (
            x1286 * x80
            - x1322 * x85
            + x164 * (x1261 - x1285)
            + x84 * (x1284 * x80 - x1320 * x85 + x164 * (x1251 * x80 - x1256 - x1283))
        )
    )
    x1328 = x1213 * x17 + x1327
    x1329 = x1 * (x1076 * x272 - x1264 - x1300)
    x1330 = x1299 * x80
    x1331 = x1076 * x347 - x1089 * x395
    x1332 = x1331 * x85
    x1333 = x1308 * x80
    x1334 = x1304 * x80
    x1335 = x1076 * x343 - x1089 * x384
    x1336 = x1335 * x85
    x1337 = x1334 - x1336
    x1338 = x1076 * x345 - x1089 * x389
    x1339 = x1338 * x85
    x1340 = x1333 + x1337 * x84 - x1339
    x1341 = x1330 - x1332 + x1340 * x90
    x1342 = x1 * (x1076 * x270 - x1274 - x1309)
    x1343 = x1 * (x1076 * x268 - x1269 - x1305)
    x1344 = x1307 * x80 - x1337 * x85 + x1343
    x1345 = x1311 * x80 - x1340 * x85 + x1342 + x1344 * x84
    x1346 = x1312 * x80 + x1329 - x1341 * x85 + x1345 * x90
    x1347 = x1 * (x1076 * x331 - x1290 - x1297)
    x1348 = x1076 * x348 - x1089 * x400
    x1349 = (
        x1324 * x80
        + x164 * (x1295 - x1314)
        - x85
        * (
            x1313 * x80
            + x1346 * x92
            + x1347
            - x85 * (x1296 * x80 + x1341 * x92 - x1348 * x85)
        )
        + x92
        * (
            x1323 * x80
            - x1346 * x85
            + x164 * (x1279 - x1316)
            + x90
            * (
                x1322 * x80
                - x1345 * x85
                + x164 * (x1278 - x1321)
                + x84 * (x1320 * x80 - x1344 * x85 + x164 * (x1254 * x80 - x1272 - x1319))
            )
        )
    )
    x1350 = x1212 * x17 + x1328 * x16 + x1349
    x1351 = x1087 * x84
    x1352 = x1 * (x1084 * x84 - x1351 * x68)
    x1353 = x1094 * x84
    x1354 = x1353 * x85
    x1355 = x1092 * x84 - x1354
    x1356 = x1102 * x84
    x1357 = x1100 * x84 + x1355 * x84 - x1356 * x85
    x1358 = x1085 * x84 - x1351 * x85 + x1357 * x90
    x1359 = x1114 * x84
    x1360 = x1119 * x84
    x1361 = x1360 * x85
    x1362 = x1117 * x84 - x1361
    x1363 = x1125 * x84
    x1364 = x1123 * x84 + x1362 * x84 - x1363 * x85
    x1365 = x1112 * x84 - x1359 * x85 + x1364 * x90
    x1366 = x1365 * x68
    x1367 = x1 * (x1099 * x84 - x1356 * x68)
    x1368 = x1 * (x1091 * x84 - x1353 * x68)
    x1369 = x1362 * x68
    x1370 = x1355 * x80 + x1368 - x1369 * x24
    x1371 = x1364 * x68
    x1372 = x1357 * x80 + x1367 + x1370 * x84 - x1371 * x24
    x1373 = x1352 + x1358 * x80 - x1366 * x24 + x1372 * x90
    x1374 = x1165 * x18 + x1373
    x1375 = x1110 * x84
    x1376 = x1 * (x1079 * x84 - x1375 * x68)
    x1377 = x1108 * x84 + x1365 * x92 - x1375 * x85
    x1378 = x1183 * x84 - x1186 * x84
    x1379 = x1188 * x84 - x1191 * x84 + x1378 * x84
    x1380 = x1179 * x84 - x1182 * x84 + x1379 * x90
    x1381 = x1175 * x84 - x1178 * x84 + x1380 * x92
    x1382 = x1381 * x68
    x1383 = x1 * (x1087 * x84 - x1359 * x68)
    x1384 = x1380 * x68
    x1385 = x1 * (x1102 * x84 - x1363 * x68)
    x1386 = x1 * (x1094 * x84 - x1360 * x68)
    x1387 = x1378 * x68
    x1388 = x1362 * x80 + x1386 - x1387 * x24
    x1389 = x1379 * x68
    x1390 = x1364 * x80 + x1385 + x1388 * x84 - x1389 * x24
    x1391 = x1365 * x80 + x1383 - x1384 * x24 + x1390 * x90
    x1392 = x1376 + x1377 * x80 - x1382 * x24 + x1391 * x92
    x1393 = x1141 * x18 + x1374 * x16 + x1392
    x1394 = x13 * x403 + x1393
    x1395 = (
        x1373 * x80
        - x1391 * x85
        + x164 * (x1358 - x1366)
        + x90
        * (
            x1372 * x80
            - x1390 * x85
            + x164 * (x1357 - x1371)
            + x84
            * (x1370 * x80 - x1388 * x85 + x164 * (x1091 * x80 * x84 - x1354 - x1369))
        )
    )
    x1396 = x1213 * x18 + x1395
    x1397 = x1181 * x84
    x1398 = x1 * (x1114 * x84 - x1397)
    x1399 = x1221 * x84 - x1223 * x84
    x1400 = x1225 * x84 - x1227 * x84 + x1399 * x84
    x1401 = x1218 * x84 - x1220 * x84 + x1400 * x90
    x1402 = x1190 * x84
    x1403 = x1 * (x1125 * x84 - x1402)
    x1404 = x1185 * x84
    x1405 = x1 * (x1119 * x84 - x1404)
    x1406 = x1378 * x80 - x1399 * x85 + x1405
    x1407 = x1379 * x80 - x1400 * x85 + x1403 + x1406 * x84
    x1408 = x1380 * x80 + x1398 - x1401 * x85 + x1407 * x90
    x1409 = x1177 * x84
    x1410 = x1 * (x1110 * x84 - x1409)
    x1411 = (
        x1392 * x80
        + x164 * (x1377 - x1382)
        - x85
        * (
            x1381 * x80
            + x1408 * x92
            + x1410
            - x85 * (x1215 * x84 - x1217 * x84 + x1401 * x92)
        )
        + x92
        * (
            x1391 * x80
            - x1408 * x85
            + x164 * (x1365 - x1384)
            + x90
            * (
                x1390 * x80
                - x1407 * x85
                + x164 * (x1364 - x1389)
                + x84
                * (x1388 * x80 - x1406 * x85 + x164 * (x1094 * x80 * x84 - x1361 - x1387))
            )
        )
    )
    x1412 = x1212 * x18 + x1396 * x16 + x1411
    x1413 = x29 * x431
    x1414 = x29 * x418
    x1415 = x1076 * x412 - x1414
    x1416 = x1415 * x68
    x1417 = x1 * (x1076 * x430 - x1413 - x1416)
    x1418 = x1076 * x430 - x1413
    x1419 = x29 * x435
    x1420 = x1076 * x408 - x1419
    x1421 = x1420 * x80
    x1422 = x29 * x432
    x1423 = x1076 * x404 - x1422
    x1424 = x1423 * x80
    x1425 = x29 * x419
    x1426 = x1076 * x409 - x1425
    x1427 = x1426 * x68
    x1428 = x1427 * x24
    x1429 = x1424 - x1428
    x1430 = x29 * x422
    x1431 = x1076 * x411 - x1430
    x1432 = x1431 * x68
    x1433 = x1421 + x1429 * x84 - x1432 * x24
    x1434 = -x1416 * x24 + x1418 * x80 + x1433 * x90
    x1435 = x1076 * x417 - x29 * x452
    x1436 = x1435 * x68
    x1437 = x1431 * x80
    x1438 = x1426 * x80
    x1439 = x1076 * x414 - x29 * x453
    x1440 = x1439 * x68
    x1441 = x1440 * x24
    x1442 = x1438 - x1441
    x1443 = x1076 * x416 - x29 * x455
    x1444 = x1443 * x68
    x1445 = x1444 * x24
    x1446 = x1437 + x1442 * x84 - x1445
    x1447 = x1415 * x80 - x1436 * x24 + x1446 * x90
    x1448 = x1447 * x68
    x1449 = x1 * (x1076 * x408 - x1419 - x1432)
    x1450 = x1 * (x1076 * x404 - x1422 - x1427)
    x1451 = x1442 * x68
    x1452 = x1429 * x80 + x1450 - x1451 * x24
    x1453 = x1446 * x68
    x1454 = x1433 * x80 + x1449 + x1452 * x84 - x1453 * x24
    x1455 = x1417 + x1434 * x80 - x1448 * x24 + x1454 * x90
    x1456 = x1287 * x17 + x1455
    x1457 = x1288 * x17 + x1456
    x1458 = x13 * x475 + x1457
    x1459 = x1 * (x1076 * x409 - x1425 - x1440)
    x1460 = x1439 * x80
    x1461 = x1076 * x448 - x1089 * x477
    x1462 = x1461 * x85
    x1463 = x1460 - x1462
    x1464 = x1442 * x80 + x1459 - x1463 * x85
    x1465 = x1 * (x1076 * x411 - x1430 - x1444)
    x1466 = x1443 * x80
    x1467 = x1076 * x450 - x1089 * x482
    x1468 = x1467 * x85
    x1469 = x1463 * x84 + x1466 - x1468
    x1470 = x1446 * x80 + x1464 * x84 + x1465 - x1469 * x85
    x1471 = x1 * (x1076 * x412 - x1414 - x1436)
    x1472 = x1076 * x451 - x1089 * x488
    x1473 = (
        x1455 * x80
        + x164 * (x1434 - x1448)
        - x85
        * (
            x1447 * x80
            + x1470 * x90
            + x1471
            - x85 * (x1435 * x80 + x1469 * x90 - x1472 * x85)
        )
        + x90
        * (
            x1454 * x80
            - x1470 * x85
            + x164 * (x1433 - x1453)
            + x84 * (x1452 * x80 - x1464 * x85 + x164 * (x1423 * x80 - x1428 - x1451))
        )
    )
    x1474 = x1327 * x17 + x1473
    x1475 = x1328 * x17 + x1474
    x1476 = x1265 * x84
    x1477 = x1 * (x1243 * x84 - x1476 * x68)
    x1478 = x1270 * x84
    x1479 = x1478 * x85
    x1480 = x1268 * x84 - x1479
    x1481 = x1275 * x84
    x1482 = x1267 * x84 + x1480 * x84 - x1481 * x85
    x1483 = x1263 * x84 - x1476 * x85 + x1482 * x90
    x1484 = x1303 * x84 - x1306 * x84
    x1485 = x1302 * x84 - x1310 * x84 + x1484 * x84
    x1486 = x1298 * x84 - x1301 * x84 + x1485 * x90
    x1487 = x1486 * x68
    x1488 = x1 * (x1259 * x84 - x1481 * x68)
    x1489 = x1 * (x1254 * x84 - x1478 * x68)
    x1490 = x1484 * x68
    x1491 = x1480 * x80 + x1489 - x1490 * x24
    x1492 = x1485 * x68
    x1493 = x1482 * x80 + x1488 + x1491 * x84 - x1492 * x24
    x1494 = x1477 + x1483 * x80 - x1487 * x24 + x1493 * x90
    x1495 = x1287 * x18 + x1494
    x1496 = x1374 * x17 + x1495
    x1497 = x13 * x494 + x1496
    x1498 = x1305 * x84
    x1499 = x1 * (x1270 * x84 - x1498)
    x1500 = x1334 * x84 - x1336 * x84
    x1501 = x1484 * x80 + x1499 - x1500 * x85
    x1502 = x1309 * x84
    x1503 = x1 * (x1275 * x84 - x1502)
    x1504 = x1333 * x84 - x1339 * x84 + x1500 * x84
    x1505 = x1485 * x80 + x1501 * x84 + x1503 - x1504 * x85
    x1506 = x1300 * x84
    x1507 = x1 * (x1265 * x84 - x1506)
    x1508 = (
        x1494 * x80
        + x164 * (x1483 - x1487)
        - x85
        * (
            x1486 * x80
            + x1505 * x90
            + x1507
            - x85 * (x1330 * x84 - x1332 * x84 + x1504 * x90)
        )
        + x90
        * (
            x1493 * x80
            - x1505 * x85
            + x164 * (x1482 - x1492)
            + x84
            * (x1491 * x80 - x1501 * x85 + x164 * (x1254 * x80 * x84 - x1479 - x1490))
        )
    )
    x1509 = x1327 * x18 + x1508
    x1510 = x1396 * x17 + x1509
    x1511 = x13 * x19
    x1512 = x83 ** (-2.0)
    x1513 = 2 * x1512
    x1514 = x1 * (2 * x1087 * x1512 - x1115 * x1513)
    x1515 = x1121 * x1513
    x1516 = x1117 * x1513 - x1515
    x1517 = x1123 * x1513 - x1127 * x1513 + x1516 * x84
    x1518 = x1112 * x1513 - x1116 * x1513 + x1517 * x90
    x1519 = x1183 * x1513 - x1186 * x1513
    x1520 = x1188 * x1513 - x1191 * x1513 + x1519 * x84
    x1521 = x1179 * x1513 - x1182 * x1513 + x1520 * x90
    x1522 = x1521 * x68
    x1523 = x1 * (2 * x1102 * x1512 - x1126 * x1513)
    x1524 = x1 * (2 * x1094 * x1512 - x1120 * x1513)
    x1525 = x1519 * x68
    x1526 = x1516 * x80 + x1524 - x1525 * x24
    x1527 = x1520 * x68
    x1528 = x1517 * x80 + x1523 + x1526 * x84 - x1527 * x24
    x1529 = x1514 + x1518 * x80 - x1522 * x24 + x1528 * x90
    x1530 = x1373 * x18 + x1529
    x1531 = x1374 * x18 + x1530
    x1532 = x1511 * x242 + x1531
    x1533 = x1 * (2 * x1119 * x1512 - x1185 * x1513)
    x1534 = x1221 * x1513 - x1223 * x1513
    x1535 = x1519 * x80 + x1533 - x1534 * x85
    x1536 = x1 * (2 * x1125 * x1512 - x1190 * x1513)
    x1537 = x1225 * x1513 - x1227 * x1513 + x1534 * x84
    x1538 = x1520 * x80 + x1535 * x84 + x1536 - x1537 * x85
    x1539 = x1 * (2 * x1114 * x1512 - x1181 * x1513)
    x1540 = (
        x1529 * x80
        + x164 * (x1518 - x1522)
        - x85
        * (
            x1521 * x80
            + x1538 * x90
            + x1539
            - x85 * (x1218 * x1513 - x1220 * x1513 + x1537 * x90)
        )
        + x90
        * (
            x1528 * x80
            - x1538 * x85
            + x164 * (x1517 - x1527)
            + x84
            * (
                x1526 * x80
                - x1535 * x85
                + x164 * (2 * x1094 * x1512 * x80 - x1515 - x1525)
            )
        )
    )
    x1541 = x1395 * x18 + x1540
    x1542 = x1396 * x18 + x1541
    x1543 = x29 * x502
    x1544 = x1248 * x68
    x1545 = x1 * (x1076 * x284 - x1543 - x1544)
    x1546 = x29 * x499
    x1547 = x1251 * x68
    x1548 = x1 * (x1076 * x259 - x1546 - x1547)
    x1549 = x1076 * x259 - x1546
    x1550 = x1549 * x80
    x1551 = x1547 * x24
    x1552 = x1550 - x1551
    x1553 = x1257 * x68
    x1554 = x1548 + x1552 * x80 - x1553 * x24
    x1555 = x1076 * x284 - x1543
    x1556 = -x1544 * x24 + x1552 * x84 + x1555 * x80
    x1557 = x1261 * x68
    x1558 = x1545 + x1554 * x84 + x1556 * x80 - x1557 * x24
    x1559 = x1287 * x16 + x1324 + x16 * (x1287 + x1558 * x16)
    x1560 = x13 * x516 + x1559
    x1561 = (
        -x1286 * x85
        + x1558 * x80
        + x164 * (x1556 - x1557)
        + x84 * (-x1284 * x85 + x1554 * x80 + x164 * (x1549 * x80 - x1551 - x1553))
    )
    x1562 = x1327 * x16 + x1349 + x16 * (x1327 + x1561 * x16)
    x1563 = x29 * x524
    x1564 = x1420 * x68
    x1565 = x1 * (x1076 * x429 - x1563 - x1564)
    x1566 = x29 * x521
    x1567 = x1423 * x68
    x1568 = x1 * (x1076 * x406 - x1566 - x1567)
    x1569 = x1076 * x406 - x1566
    x1570 = x1569 * x80
    x1571 = x1567 * x24
    x1572 = x1570 - x1571
    x1573 = x1429 * x68
    x1574 = x1568 + x1572 * x80 - x1573 * x24
    x1575 = x1076 * x429 - x1563
    x1576 = -x1564 * x24 + x1572 * x84 + x1575 * x80
    x1577 = x1433 * x68
    x1578 = x1565 + x1574 * x84 + x1576 * x80 - x1577 * x24
    x1579 = x1558 * x17 + x1578
    x1580 = x1456 + x1579 * x16
    x1581 = x13 * x539 + x1580
    x1582 = (
        -x1454 * x85
        + x1578 * x80
        + x164 * (x1576 - x1577)
        + x84 * (-x1452 * x85 + x1574 * x80 + x164 * (x1569 * x80 - x1571 - x1573))
    )
    x1583 = x1561 * x17 + x1582
    x1584 = x1474 + x1583 * x16
    x1585 = x1259 * x84
    x1586 = x1 * (x1248 * x84 - x1585 * x68)
    x1587 = x1254 * x84
    x1588 = x1 * (x1251 * x84 - x1587 * x68)
    x1589 = x1587 * x85
    x1590 = x1252 * x84 - x1589
    x1591 = x1480 * x68
    x1592 = x1588 + x1590 * x80 - x1591 * x24
    x1593 = x1249 * x84 - x1585 * x85 + x1590 * x84
    x1594 = x1482 * x68
    x1595 = x1586 + x1592 * x84 + x1593 * x80 - x1594 * x24
    x1596 = x1558 * x18 + x1595
    x1597 = x1495 + x1596 * x16
    x1598 = x13 * x544 + x1597
    x1599 = (
        -x1493 * x85
        + x1595 * x80
        + x164 * (x1593 - x1594)
        + x84 * (-x1491 * x85 + x1592 * x80 + x164 * (x1251 * x80 * x84 - x1589 - x1591))
    )
    x1600 = x1561 * x18 + x1599
    x1601 = x1509 + x16 * x1600
    x1602 = x29 * x561
    x1603 = x29 * x553
    x1604 = x1076 * x551 - x1603
    x1605 = x1604 * x68
    x1606 = x1 * (x1076 * x560 - x1602 - x1605)
    x1607 = x29 * x556
    x1608 = x29 * x547
    x1609 = x1076 * x545 - x1608
    x1610 = x1609 * x68
    x1611 = x1 * (x1076 * x550 - x1607 - x1610)
    x1612 = x1076 * x550 - x1607
    x1613 = x1612 * x80
    x1614 = x1610 * x24
    x1615 = x1613 - x1614
    x1616 = x1609 * x80
    x1617 = x1076 * x546 - x29 * x568
    x1618 = x1617 * x68
    x1619 = x1618 * x24
    x1620 = x1616 - x1619
    x1621 = x1620 * x68
    x1622 = x1611 + x1615 * x80 - x1621 * x24
    x1623 = x1076 * x560 - x1602
    x1624 = -x1605 * x24 + x1615 * x84 + x1623 * x80
    x1625 = x1076 * x552 - x29 * x578
    x1626 = x1625 * x68
    x1627 = x1604 * x80 + x1620 * x84 - x1626 * x24
    x1628 = x1627 * x68
    x1629 = x1606 + x1622 * x84 + x1624 * x80 - x1628 * x24
    x1630 = x1578 * x17 + x1629
    x1631 = x1579 * x17 + x1630
    x1632 = x13 * x587 + x1631
    x1633 = x1 * (x1076 * x545 - x1608 - x1618)
    x1634 = x1617 * x80
    x1635 = x1076 * x567 - x1089 * x589
    x1636 = x1635 * x85
    x1637 = x1634 - x1636
    x1638 = x1620 * x80 + x1633 - x1637 * x85
    x1639 = x1 * (x1076 * x551 - x1603 - x1626)
    x1640 = x1076 * x577 - x1089 * x594
    x1641 = (
        x1582 * x17
        + x1629 * x80
        + x164 * (x1624 - x1628)
        + x84 * (x1622 * x80 - x1638 * x85 + x164 * (x1612 * x80 - x1614 - x1621))
        - x85
        * (
            x1627 * x80
            + x1638 * x84
            + x1639
            - x85 * (x1625 * x80 + x1637 * x84 - x1640 * x85)
        )
    )
    x1642 = x1583 * x17 + x1641
    x1643 = x1431 * x84
    x1644 = x1 * (x1420 * x84 - x1643 * x68)
    x1645 = x1426 * x84
    x1646 = x1 * (x1423 * x84 - x1645 * x68)
    x1647 = x1645 * x85
    x1648 = x1424 * x84 - x1647
    x1649 = x1438 * x84 - x1441 * x84
    x1650 = x1649 * x68
    x1651 = x1646 + x1648 * x80 - x1650 * x24
    x1652 = x1421 * x84 - x1643 * x85 + x1648 * x84
    x1653 = x1437 * x84 - x1445 * x84 + x1649 * x84
    x1654 = x1653 * x68
    x1655 = x1644 + x1651 * x84 + x1652 * x80 - x1654 * x24
    x1656 = x1578 * x18 + x1655
    x1657 = x1596 * x17 + x1656
    x1658 = x13 * x599 + x1657
    x1659 = x1440 * x84
    x1660 = x1 * (x1426 * x84 - x1659)
    x1661 = x1460 * x84 - x1462 * x84
    x1662 = x1649 * x80 + x1660 - x1661 * x85
    x1663 = x1444 * x84
    x1664 = x1 * (x1431 * x84 - x1663)
    x1665 = (
        x164 * (x1652 - x1654)
        + x1655 * x80
        + x84 * (x164 * (x1423 * x80 * x84 - x1647 - x1650) + x1651 * x80 - x1662 * x85)
        - x85
        * (
            x1653 * x80
            + x1662 * x84
            + x1664
            - x85 * (x1466 * x84 - x1468 * x84 + x1661 * x84)
        )
    )
    x1666 = x1582 * x18 + x1665
    x1667 = x1600 * x17 + x1666
    x1668 = x1 * (2 * x1259 * x1512 - x1276 * x1513)
    x1669 = x1 * (2 * x1254 * x1512 - x1271 * x1513)
    x1670 = x1272 * x1513
    x1671 = x1268 * x1513 - x1670
    x1672 = x1303 * x1513 - x1306 * x1513
    x1673 = x1672 * x68
    x1674 = x1669 + x1671 * x80 - x1673 * x24
    x1675 = x1267 * x1513 - x1277 * x1513 + x1671 * x84
    x1676 = x1302 * x1513 - x1310 * x1513 + x1672 * x84
    x1677 = x1676 * x68
    x1678 = x1668 + x1674 * x84 + x1675 * x80 - x1677 * x24
    x1679 = x1595 * x18 + x1678
    x1680 = x1596 * x18 + x1679
    x1681 = x1511 * x510 + x1680
    x1682 = x1 * (2 * x1270 * x1512 - x1305 * x1513)
    x1683 = x1334 * x1513 - x1336 * x1513
    x1684 = x1672 * x80 + x1682 - x1683 * x85
    x1685 = x1 * (2 * x1275 * x1512 - x1309 * x1513)
    x1686 = (
        x164 * (x1675 - x1677)
        + x1678 * x80
        + x84
        * (x164 * (2 * x1254 * x1512 * x80 - x1670 - x1673) + x1674 * x80 - x1684 * x85)
        - x85
        * (
            x1676 * x80
            + x1684 * x84
            + x1685
            - x85 * (x1333 * x1513 - x1339 * x1513 + x1683 * x84)
        )
    )
    x1687 = x1599 * x18 + x1686
    x1688 = x1600 * x18 + x1687
    x1689 = x1099 * x84
    x1690 = x1 * (x1153 * x84 - x1689 * x68)
    x1691 = x1091 * x84
    x1692 = x1 * (x1147 * x84 - x1691 * x68)
    x1693 = x1691 * x85
    x1694 = x1148 * x84 - x1693
    x1695 = x1355 * x68
    x1696 = x1692 + x1694 * x80 - x1695 * x24
    x1697 = x1154 * x84 - x1689 * x85 + x1694 * x84
    x1698 = x1357 * x68
    x1699 = x1690 + x1696 * x84 + x1697 * x80 - x1698 * x24
    x1700 = x1373 * x16 + x1392 + x16 * (x1373 + x16 * x1699)
    x1701 = (
        -x1372 * x85
        + x164 * (x1697 - x1698)
        + x1699 * x80
        + x84 * (-x1370 * x85 + x164 * (x1147 * x80 * x84 - x1693 - x1695) + x1696 * x80)
    )
    x1702 = x11 * x1700 + x1395 * x16 + x1411 + x16 * (x1395 + x16 * x1701)
    x1703 = x1595 + x1699 * x17
    x1704 = x1373 * x17 + x1494 + x16 * x1703
    x1705 = x1599 + x17 * x1701
    x1706 = x11 * x1704 + x1395 * x17 + x1508 + x16 * x1705
    x1707 = x1 * (2 * x1099 * x1512 - x1103 * x1513)
    x1708 = x1 * (2 * x1091 * x1512 - x1095 * x1513)
    x1709 = x1096 * x1513
    x1710 = x1092 * x1513 - x1709
    x1711 = x1516 * x68
    x1712 = x1708 + x1710 * x80 - x1711 * x24
    x1713 = x1100 * x1513 - x1104 * x1513 + x1710 * x84
    x1714 = x1517 * x68
    x1715 = x1707 + x1712 * x84 + x1713 * x80 - x1714 * x24
    x1716 = x1699 * x18 + x1715
    x1717 = x1530 + x16 * x1716
    x1718 = (
        -x1528 * x85
        + x164 * (x1713 - x1714)
        + x1715 * x80
        + x84
        * (-x1526 * x85 + x164 * (2 * x1091 * x1512 * x80 - x1709 - x1711) + x1712 * x80)
    )
    x1719 = x1701 * x18 + x1718
    x1720 = x11 * x1717 + x1541 + x16 * x1719
    x1721 = x1595 * x17 + x1655
    x1722 = x17 * x1703 + x1721
    x1723 = x1599 * x17 + x1665
    x1724 = x11 * x1722 + x17 * x1705 + x1723
    x1725 = x1679 + x17 * x1716
    x1726 = x11 * x1725 + x1687 + x17 * x1719
    x1727 = x83 ** (-3.0)
    x1728 = 6 * x1727
    x1729 = x1 * (6 * x1102 * x1727 - x1126 * x1728)
    x1730 = x1 * (6 * x1094 * x1727 - x1120 * x1728)
    x1731 = x1121 * x1728
    x1732 = x1117 * x1728 - x1731
    x1733 = x1183 * x1728 - x1186 * x1728
    x1734 = x1733 * x68
    x1735 = x1730 + x1732 * x80 - x1734 * x24
    x1736 = x1123 * x1728 - x1127 * x1728 + x1732 * x84
    x1737 = x1188 * x1728 - x1191 * x1728 + x1733 * x84
    x1738 = x1737 * x68
    x1739 = x1729 + x1735 * x84 + x1736 * x80 - x1738 * x24
    x1740 = x1715 * x18 + x1739
    x1741 = x1716 * x18 + x1740
    x1742 = x1 * (6 * x1119 * x1727 - x1185 * x1728)
    x1743 = x1221 * x1728 - x1223 * x1728
    x1744 = x1733 * x80 + x1742 - x1743 * x85
    x1745 = x1 * (6 * x1125 * x1727 - x1190 * x1728)
    x1746 = (
        x164 * (x1736 - x1738)
        + x1718 * x18
        + x1739 * x80
        + x84
        * (x164 * (6 * x1094 * x1727 * x80 - x1731 - x1734) + x1735 * x80 - x1744 * x85)
        - x85
        * (
            x1737 * x80
            + x1744 * x84
            + x1745
            - x85 * (x1225 * x1728 - x1227 * x1728 + x1743 * x84)
        )
    )
    x1747 = x11 * x1741 + x1719 * x18 + x1746
    x1748 = x29 * x602
    x1749 = x1569 * x68
    x1750 = x1 * (x1076 * x427 - x1748 - x1749)
    x1751 = x1076 * x427 - x1748
    x1752 = x1749 * x24
    x1753 = x1751 * x80 - x1752
    x1754 = x1572 * x68
    x1755 = x1750 + x1753 * x80 - x1754 * x24
    x1756 = x1455 + x1578 * x16 + x16 * (x1578 + x16 * x1755)
    x1757 = x13 * x612 + x1756
    x1758 = -x1574 * x85 + x164 * (x1751 * x80 - x1752 - x1754) + x1755 * x80
    x1759 = x1473 + x1582 * x16 + x16 * (x1582 + x16 * x1758)
    x1760 = x29 * x616
    x1761 = x1612 * x68
    x1762 = x1 * (x1076 * x559 - x1760 - x1761)
    x1763 = x1076 * x559 - x1760
    x1764 = x1761 * x24
    x1765 = x1763 * x80 - x1764
    x1766 = x1615 * x68
    x1767 = x1762 + x1765 * x80 - x1766 * x24
    x1768 = x17 * x1755 + x1767
    x1769 = x16 * x1768 + x1630
    x1770 = x13 * x627 + x1769
    x1771 = -x1622 * x85 + x164 * (x1763 * x80 - x1764 - x1766) + x1767 * x80
    x1772 = x17 * x1758 + x1771
    x1773 = x16 * x1772 + x1641
    x1774 = x1423 * x84
    x1775 = x1 * (x1569 * x84 - x1774 * x68)
    x1776 = x1774 * x85
    x1777 = x1570 * x84 - x1776
    x1778 = x1648 * x68
    x1779 = x1775 + x1777 * x80 - x1778 * x24
    x1780 = x1755 * x18 + x1779
    x1781 = x16 * x1780 + x1656
    x1782 = x13 * x632 + x1781
    x1783 = x164 * (x1569 * x80 * x84 - x1776 - x1778) - x1651 * x85 + x1779 * x80
    x1784 = x1758 * x18 + x1783
    x1785 = x16 * x1784 + x1666
    x1786 = x29 * x645
    x1787 = x29 * x634
    x1788 = x1076 * x635 - x1787
    x1789 = x1788 * x68
    x1790 = x1 * (x1076 * x646 - x1786 - x1789)
    x1791 = x1076 * x646 - x1786
    x1792 = x1789 * x24
    x1793 = x1791 * x80 - x1792
    x1794 = x1076 * x633 - x29 * x640
    x1795 = x1794 * x68
    x1796 = x1788 * x80 - x1795 * x24
    x1797 = x1796 * x68
    x1798 = x1790 + x1793 * x80 - x1797 * x24
    x1799 = x17 * x1767 + x17 * x1768 + x1798
    x1800 = x13 * x655 + x1799
    x1801 = x1 * (x1076 * x635 - x1787 - x1795)
    x1802 = x1076 * x639 - x1089 * x653
    x1803 = (
        x164 * (x1791 * x80 - x1792 - x1797)
        + x17 * x1771
        + x17 * x1772
        + x1798 * x80
        - x85 * (x1796 * x80 + x1801 - x85 * (x1794 * x80 - x1802 * x85))
    )
    x1804 = x1609 * x84
    x1805 = x1 * (x1612 * x84 - x1804 * x68)
    x1806 = x1804 * x85
    x1807 = x1613 * x84 - x1806
    x1808 = x1616 * x84 - x1619 * x84
    x1809 = x1808 * x68
    x1810 = x1805 + x1807 * x80 - x1809 * x24
    x1811 = x17 * x1780 + x1767 * x18 + x1810
    x1812 = x13 * x657 + x1811
    x1813 = x1618 * x84
    x1814 = x1 * (x1609 * x84 - x1813)
    x1815 = (
        x164 * (x1612 * x80 * x84 - x1806 - x1809)
        + x1810 * x80
        - x85 * (x1808 * x80 + x1814 - x85 * (x1634 * x84 - x1636 * x84))
    )
    x1816 = x17 * x1784 + x1771 * x18 + x1815
    x1817 = x1 * (2 * x1423 * x1512 - x1427 * x1513)
    x1818 = x1428 * x1513
    x1819 = x1424 * x1513 - x1818
    x1820 = x1438 * x1513 - x1441 * x1513
    x1821 = x1820 * x68
    x1822 = x1817 + x1819 * x80 - x1821 * x24
    x1823 = x1779 * x18 + x1822
    x1824 = x1780 * x18 + x1823
    x1825 = x1511 * x606 + x1824
    x1826 = x1 * (2 * x1426 * x1512 - x1440 * x1513)
    x1827 = (
        x164 * (2 * x1423 * x1512 * x80 - x1818 - x1821)
        + x1822 * x80
        - x85 * (x1820 * x80 + x1826 - x85 * (x1460 * x1513 - x1462 * x1513))
    )
    x1828 = x1783 * x18 + x1827
    x1829 = x1784 * x18 + x1828
    x1830 = x1251 * x84
    x1831 = x1 * (x1549 * x84 - x1830 * x68)
    x1832 = x1830 * x85
    x1833 = x1550 * x84 - x1832
    x1834 = x1590 * x68
    x1835 = x1831 + x1833 * x80 - x1834 * x24
    x1836 = x1494 + x1595 * x16 + x16 * (x1595 + x16 * x1835)
    x1837 = -x1592 * x85 + x164 * (x1549 * x80 * x84 - x1832 - x1834) + x1835 * x80
    x1838 = x11 * x1836 + x1508 + x1599 * x16 + x16 * (x1599 + x16 * x1837)
    x1839 = x17 * x1835 + x1779
    x1840 = x16 * x1839 + x1721
    x1841 = x17 * x1837 + x1783
    x1842 = x11 * x1840 + x16 * x1841 + x1723
    x1843 = x1 * (2 * x1251 * x1512 - x1255 * x1513)
    x1844 = x1256 * x1513
    x1845 = x1252 * x1513 - x1844
    x1846 = x1671 * x68
    x1847 = x1843 + x1845 * x80 - x1846 * x24
    x1848 = x18 * x1835 + x1847
    x1849 = x16 * x1848 + x1679
    x1850 = x164 * (2 * x1251 * x1512 * x80 - x1844 - x1846) - x1674 * x85 + x1847 * x80
    x1851 = x18 * x1837 + x1850
    x1852 = x11 * x1849 + x16 * x1851 + x1687
    x1853 = x17 * x1779 + x17 * x1839 + x1810
    x1854 = x11 * x1853 + x17 * x1783 + x17 * x1841 + x1815
    x1855 = x17 * x1848 + x1823
    x1856 = x11 * x1855 + x17 * x1851 + x1828
    x1857 = x1 * (6 * x1254 * x1727 - x1271 * x1728)
    x1858 = x1272 * x1728
    x1859 = x1268 * x1728 - x1858
    x1860 = x1303 * x1728 - x1306 * x1728
    x1861 = x1860 * x68
    x1862 = x1857 + x1859 * x80 - x1861 * x24
    x1863 = x18 * x1847 + x1862
    x1864 = x18 * x1848 + x1863
    x1865 = x1 * (6 * x1270 * x1727 - x1305 * x1728)
    x1866 = (
        x164 * (6 * x1254 * x1727 * x80 - x1858 - x1861)
        + x18 * x1850
        + x1862 * x80
        - x85 * (x1860 * x80 + x1865 - x85 * (x1334 * x1728 - x1336 * x1728))
    )
    x1867 = x11 * x1864 + x18 * x1851 + x1866
    x1868 = x1 * (2 * x1147 * x1512 - x1149 * x1513)
    x1869 = x1150 * x1513
    x1870 = x1148 * x1513 - x1869
    x1871 = x1710 * x68
    x1872 = x1868 + x1870 * x80 - x1871 * x24
    x1873 = x1529 + x16 * x1715 + x16 * (x16 * x1872 + x1715)
    x1874 = x164 * (2 * x1147 * x1512 * x80 - x1869 - x1871) - x1712 * x85 + x1872 * x80
    x1875 = x11 * x1873 + x1540 + x16 * x1718 + x16 * (x16 * x1874 + x1718)
    x1876 = x17 * x1872 + x1847
    x1877 = x16 * x1876 + x1678 + x17 * x1715
    x1878 = x17 * x1874 + x1850
    x1879 = x11 * x1877 + x16 * x1878 + x1686 + x17 * x1718
    x1880 = x1 * (6 * x1091 * x1727 - x1095 * x1728)
    x1881 = x1096 * x1728
    x1882 = x1092 * x1728 - x1881
    x1883 = x1732 * x68
    x1884 = x1880 + x1882 * x80 - x1883 * x24
    x1885 = x18 * x1872 + x1884
    x1886 = x16 * x1885 + x1740
    x1887 = x164 * (6 * x1091 * x1727 * x80 - x1881 - x1883) - x1735 * x85 + x1884 * x80
    x1888 = x18 * x1874 + x1887
    x1889 = x11 * x1886 + x16 * x1888 + x1746
    x1890 = x17 * x1847 + x17 * x1876 + x1822
    x1891 = x11 * x1890 + x17 * x1850 + x17 * x1878 + x1827
    x1892 = x17 * x1885 + x1863
    x1893 = x11 * x1892 + x17 * x1888 + x1866
    x1894 = x83 ** (-4.0)
    x1895 = 24 * x1894
    x1896 = x1121 * x1895
    x1897 = x1183 * x1895 - x1186 * x1895
    x1898 = x1897 * x68
    x1899 = x1 * (24 * x1094 * x1894 - x1120 * x1895)
    x1900 = x1117 * x1895 - x1896
    x1901 = -x1898 * x24 + x1899 + x1900 * x80
    x1902 = x1 * (24 * x1119 * x1894 - x1185 * x1895)
    x1903 = x18 * x1884 + x18 * x1885 + x1901
    x1904 = (
        x11 * x1903
        + x164 * (24 * x1094 * x1894 * x80 - x1896 - x1898)
        + x18 * x1887
        + x18 * x1888
        + x1901 * x80
        - x85 * (x1897 * x80 + x1902 - x85 * (x1221 * x1895 - x1223 * x1895))
    )
    x1905 = -x27 * x746 + x659 * x740 + x79
    x1906 = x1905 * x68
    x1907 = x139 - x27 * x741 + x659 * x743
    x1908 = x1 * (-x1906 + x1907)
    x1909 = x150 - x27 * x689 + x659 * x662
    x1910 = x1909 * x68
    x1911 = x200 - x27 * x663 + x659 * x665
    x1912 = x1 * (-x1910 + x1911)
    x1913 = x209 - x27 * x670 + x659 * x667
    x1914 = x152 - x27 * x692 + x659 * x669
    x1915 = x1914 * x68
    x1916 = x212 - x27 * x676 + x659 * x673
    x1917 = x155 - x27 * x695 + x659 * x675
    x1918 = x1917 * x68
    x1919 = x1916 * x80 - x1918 * x24
    x1920 = x211 - x27 * x683 + x659 * x680
    x1921 = x154 - x27 * x700 + x659 * x682
    x1922 = x1921 * x68
    x1923 = x1919 * x84 + x1920 * x80 - x1922 * x24
    x1924 = x1913 * x80 - x1915 * x24 + x1923 * x90
    x1925 = -x1910 * x24 + x1911 * x80 + x1924 * x92
    x1926 = x115 - x27 * x748 + x659 * x688
    x1927 = x1926 * x68
    x1928 = x117 - x27 * x750 + x659 * x691
    x1929 = x1928 * x68
    x1930 = x120 - x27 * x752 + x659 * x694
    x1931 = x1930 * x68
    x1932 = x1917 * x80 - x1931 * x24
    x1933 = x119 - x27 * x755 + x659 * x699
    x1934 = x1933 * x68
    x1935 = x1921 * x80 + x1932 * x84 - x1934 * x24
    x1936 = x1914 * x80 - x1929 * x24 + x1935 * x90
    x1937 = x1909 * x80 - x1927 * x24 + x1936 * x92
    x1938 = x1 * (x1913 - x1915)
    x1939 = x1 * (x1920 - x1922)
    x1940 = x1 * (x1916 - x1918)
    x1941 = (
        x1912
        + x1925 * x80
        - x1937 * x85
        + x92
        * (
            x1924 * x80
            - x1936 * x85
            + x1938
            + x90
            * (
                x1923 * x80
                - x1935 * x85
                + x1939
                + x84 * (x1919 * x80 - x1932 * x85 + x1940)
            )
        )
    )
    x1942 = x1913 * x68
    x1943 = x229 - x27 * x716 + x659 * x718
    x1944 = x1 * (-x1942 + x1943)
    x1945 = x237 - x27 * x721 + x659 * x720
    x1946 = x1916 * x68
    x1947 = x1945 * x80 - x1946 * x24
    x1948 = x236 - x27 * x726 + x659 * x725
    x1949 = x1920 * x68
    x1950 = x1947 * x84 + x1948 * x80 - x1949 * x24
    x1951 = -x1942 * x24 + x1943 * x80 + x1950 * x90
    x1952 = x1 * (x1948 - x1949)
    x1953 = x1 * (x1945 - x1946)
    x1954 = (
        -x1924 * x85
        + x1944
        + x1951 * x80
        + x90
        * (
            -x1923 * x85
            + x1950 * x80
            + x1952
            + x84 * (-x1919 * x85 + x1947 * x80 + x1953)
        )
    )
    x1955 = x16 * x1954
    x1956 = -x1906 * x24 + x1907 * x80 + x1937 * x94
    x1957 = x1 * (x1909 - x1927)
    x1958 = x186 + x659 * x747 - x671 * x780
    x1959 = x187 + x659 * x749 - x671 * x781
    x1960 = x189 + x659 * x751 - x671 * x782
    x1961 = x1930 * x80 - x1960 * x85
    x1962 = x188 + x659 * x754 - x671 * x784
    x1963 = x1933 * x80 + x1961 * x84 - x1962 * x85
    x1964 = x1928 * x80 - x1959 * x85 + x1963 * x90
    x1965 = x1926 * x80 - x1958 * x85 + x1964 * x92
    x1966 = x1 * (x1914 - x1929)
    x1967 = x1 * (x1921 - x1934)
    x1968 = x1 * (x1917 - x1931)
    x1969 = x174 + x659 * x745 - x671 * x796
    x1970 = (
        x16 * x1941
        + x16 * (x1941 + x1955)
        + x1908
        + x1956 * x80
        - x85 * (x1905 * x80 + x1965 * x94 - x1969 * x85)
        + x94
        * (
            x1937 * x80
            + x1957
            - x1965 * x85
            + x92
            * (
                x1936 * x80
                - x1964 * x85
                + x1966
                + x90
                * (
                    x1935 * x80
                    - x1963 * x85
                    + x1967
                    + x84 * (x1932 * x80 - x1961 * x85 + x1968)
                )
            )
        )
    )
    x1971 = x12 * x774 + x1970
    x1972 = x17 * x1954
    x1973 = x1914 * x84 - x27 * x814 + x302 + x659 * x799
    x1974 = x1973 * x68
    x1975 = x1913 * x84 - x27 * x800 + x294 + x659 * x801
    x1976 = x1 * (-x1974 + x1975)
    x1977 = x1916 * x84 - x27 * x805 + x296 + x659 * x803
    x1978 = x1917 * x84 - x27 * x816 + x318 + x659 * x804
    x1979 = x1978 * x68
    x1980 = x1977 * x80 - x1979 * x24
    x1981 = x1920 * x84 - x27 * x810 + x295 + x659 * x808
    x1982 = x1921 * x84 - x27 * x820 + x317 + x659 * x809
    x1983 = x1982 * x68
    x1984 = x1980 * x84 + x1981 * x80 - x1983 * x24
    x1985 = -x1974 * x24 + x1975 * x80 + x1984 * x90
    x1986 = x1928 * x84 - x27 * x840 + x358 + x659 * x813
    x1987 = x1986 * x68
    x1988 = x1930 * x84 - x27 * x842 + x361 + x659 * x815
    x1989 = x1988 * x68
    x1990 = x1978 * x80 - x1989 * x24
    x1991 = x1933 * x84 - x27 * x845 + x360 + x659 * x819
    x1992 = x1991 * x68
    x1993 = x1982 * x80 + x1990 * x84 - x1992 * x24
    x1994 = x1973 * x80 - x1987 * x24 + x1993 * x90
    x1995 = x1 * (x1981 - x1983)
    x1996 = x1 * (x1977 - x1979)
    x1997 = (
        x1976
        + x1985 * x80
        - x1994 * x85
        + x90
        * (x1984 * x80 - x1993 * x85 + x1995 + x84 * (x1980 * x80 - x1990 * x85 + x1996))
    )
    x1998 = x1972 + x1997
    x1999 = x1926 * x84 - x27 * x838 + x341 + x659 * x832
    x2000 = x1999 * x68
    x2001 = x1909 * x84 - x27 * x833 + x339 + x659 * x834
    x2002 = x1 * (-x2000 + x2001)
    x2003 = x1994 * x92 - x2000 * x24 + x2001 * x80
    x2004 = x1 * (x1973 - x1987)
    x2005 = x1959 * x84 + x393 + x659 * x839 - x671 * x866
    x2006 = x1960 * x84 + x383 + x659 * x841 - x671 * x867
    x2007 = x1988 * x80 - x2006 * x85
    x2008 = x1962 * x84 + x388 + x659 * x844 - x671 * x869
    x2009 = x1991 * x80 + x2007 * x84 - x2008 * x85
    x2010 = x1986 * x80 - x2005 * x85 + x2009 * x90
    x2011 = x1 * (x1982 - x1992)
    x2012 = x1 * (x1978 - x1989)
    x2013 = x1958 * x84 + x399 + x659 * x837 - x671 * x878
    x2014 = (
        x2002
        + x2003 * x80
        - x85 * (x1999 * x80 + x2010 * x92 - x2013 * x85)
        + x92
        * (
            x1994 * x80
            + x2004
            - x2010 * x85
            + x90
            * (
                x1993 * x80
                - x2009 * x85
                + x2011
                + x84 * (x1990 * x80 - x2007 * x85 + x2012)
            )
        )
    )
    x2015 = x16 * x1998 + x17 * x1941 + x2014
    x2016 = x12 * x860 + x2015
    x2017 = x18 * x1941 + x18 * x1955
    x2018 = x12 * x881 + x2017
    x2019 = x1986 * x90 - x27 * x899 + x446 + x659 * x884
    x2020 = x2019 * x68
    x2021 = x1973 * x90 - x27 * x885 + x438 + x659 * x886
    x2022 = x1 * (-x2020 + x2021)
    x2023 = x1978 * x90 - x27 * x890 + x440 + x659 * x888
    x2024 = x1988 * x90 - x27 * x901 + x460 + x659 * x889
    x2025 = x2024 * x68
    x2026 = x2023 * x80 - x2025 * x24
    x2027 = x1982 * x90 - x27 * x895 + x439 + x659 * x893
    x2028 = x1991 * x90 - x27 * x904 + x459 + x659 * x894
    x2029 = x2028 * x68
    x2030 = x2026 * x84 + x2027 * x80 - x2029 * x24
    x2031 = -x2020 * x24 + x2021 * x80 + x2030 * x90
    x2032 = x1 * (x2027 - x2029)
    x2033 = x1 * (x2023 - x2025)
    x2034 = x2006 * x90 + x476 + x659 * x900 - x671 * x919
    x2035 = x2024 * x80 - x2034 * x85
    x2036 = x2008 * x90 + x481 + x659 * x903 - x671 * x923
    x2037 = x2028 * x80 + x2035 * x84 - x2036 * x85
    x2038 = x2005 * x90 + x486 + x659 * x898 - x671 * x927
    x2039 = (
        x2022
        + x2031 * x80
        - x85 * (x2019 * x80 + x2037 * x90 - x2038 * x85)
        + x90
        * (x2030 * x80 + x2032 - x2037 * x85 + x84 * (x2026 * x80 + x2033 - x2035 * x85))
    )
    x2040 = x17 * x1997 + x2039
    x2041 = x17 * x1998 + x2040
    x2042 = x12 * x916 + x2041
    x2043 = x18 * x1997
    x2044 = x18 * x1972 + x2043
    x2045 = x12 * x932 + x2044
    x2046 = x19 * x1954
    x2047 = x12 * x937 + x2046
    x2048 = x1981 * x68
    x2049 = x1948 * x84 - x27 * x940 + x509 + x659 * x941
    x2050 = x1 * (-x2048 + x2049)
    x2051 = x1977 * x68
    x2052 = x1945 * x84 - x27 * x943 + x505 + x659 * x944
    x2053 = x1 * (-x2051 + x2052)
    x2054 = -x2051 * x24 + x2052 * x80
    x2055 = -x2048 * x24 + x2049 * x80 + x2054 * x84
    x2056 = (
        -x1984 * x85 + x2050 + x2055 * x80 + x84 * (-x1980 * x85 + x2053 + x2054 * x80)
    )
    x2057 = x16 * x2056
    x2058 = x16 * x1997 + x16 * (x1997 + x2057) + x2014
    x2059 = x12 * x954 + x2058
    x2060 = x17 * x2056
    x2061 = x2027 * x68
    x2062 = x1981 * x90 - x27 * x960 + x531 + x659 * x961
    x2063 = x1 * (-x2061 + x2062)
    x2064 = x2023 * x68
    x2065 = x1977 * x90 - x27 * x963 + x527 + x659 * x964
    x2066 = x1 * (-x2064 + x2065)
    x2067 = -x2064 * x24 + x2065 * x80
    x2068 = -x2061 * x24 + x2062 * x80 + x2067 * x84
    x2069 = (
        -x2030 * x85 + x2063 + x2068 * x80 + x84 * (-x2026 * x85 + x2066 + x2067 * x80)
    )
    x2070 = x2060 + x2069
    x2071 = x16 * x2070 + x2040
    x2072 = x12 * x974 + x2071
    x2073 = x18 * x2057 + x2043
    x2074 = x12 * x980 + x2073
    x2075 = -x1000 * x27 + x2028 * x92 + x576 + x659 * x983
    x2076 = x2075 * x68
    x2077 = x2027 * x92 - x27 * x984 + x574 + x659 * x985
    x2078 = x1 * (-x2076 + x2077)
    x2079 = x2024 * x92 - x27 * x994 + x566 + x659 * x987
    x2080 = x2079 * x68
    x2081 = x2023 * x92 - x27 * x988 + x564 + x659 * x989
    x2082 = x1 * (-x2080 + x2081)
    x2083 = -x2080 * x24 + x2081 * x80
    x2084 = -x1008 * x671 + x2034 * x92 + x588 + x659 * x993
    x2085 = x2079 * x80 - x2084 * x85
    x2086 = -x2076 * x24 + x2077 * x80 + x2083 * x84
    x2087 = -x1012 * x671 + x2036 * x92 + x593 + x659 * x999
    x2088 = (
        x17 * x2069
        + x2078
        + x2086 * x80
        + x84 * (x2082 + x2083 * x80 - x2085 * x85)
        - x85 * (x2075 * x80 + x2085 * x84 - x2087 * x85)
    )
    x2089 = x17 * x2070 + x2088
    x2090 = x1005 * x12 + x2089
    x2091 = x18 * x2069
    x2092 = x18 * x2060 + x2091
    x2093 = x1016 * x12 + x2092
    x2094 = x19 * x2056
    x2095 = x1020 * x12 + x2094
    x2096 = x2065 * x68
    x2097 = -x1023 * x27 + x1024 * x659 + x2052 * x90 + x605
    x2098 = x1 * (-x2096 + x2097)
    x2099 = -x2096 * x24 + x2097 * x80
    x2100 = -x2067 * x85 + x2098 + x2099 * x80
    x2101 = x16 * x2100
    x2102 = x16 * x2069 + x16 * (x2069 + x2101) + x2039
    x2103 = x1031 * x12 + x2102
    x2104 = x17 * x2100
    x2105 = x2081 * x68
    x2106 = -x1037 * x27 + x1038 * x659 + x2065 * x92 + x619
    x2107 = x1 * (-x2105 + x2106)
    x2108 = -x2105 * x24 + x2106 * x80
    x2109 = -x2083 * x85 + x2107 + x2108 * x80
    x2110 = x2104 + x2109
    x2111 = x16 * x2110 + x2088
    x2112 = x1045 * x12 + x2111
    x2113 = x18 * x2101 + x2091
    x2114 = x1051 * x12 + x2113
    x2115 = x1054 * x659 - x1061 * x27 + x2079 * x94 + x636
    x2116 = x2115 * x68
    x2117 = -x1055 * x27 + x1056 * x659 + x2081 * x94 + x647
    x2118 = x1 * (-x2116 + x2117)
    x2119 = -x2116 * x24 + x2117 * x80
    x2120 = x1060 * x659 - x1068 * x671 + x2084 * x94 + x652
    x2121 = (
        x17 * x2109
        + x17 * x2110
        + x2118
        + x2119 * x80
        - x85 * (x2115 * x80 - x2120 * x85)
    )
    x2122 = x1065 * x12 + x2121
    x2123 = x18 * x2104 + x18 * x2109
    x2124 = x1070 * x12 + x2123
    x2125 = x19 * x2100
    x2126 = x1073 * x12 + x2125
    x2127 = x1169 * x27
    x2128 = x1168 * x659 - x1174 * x27
    x2129 = x2128 * x68
    x2130 = x1 * (x1171 * x659 - x2127 - x2129)
    x2131 = x1080 * x27
    x2132 = x1111 * x27
    x2133 = x1079 * x659 - x2132
    x2134 = x2133 * x68
    x2135 = x1 * (x1082 * x659 - x2131 - x2134)
    x2136 = x1082 * x659 - x2131
    x2137 = x1088 * x27
    x2138 = x1084 * x659 - x2137
    x2139 = x1087 * x659
    x2140 = x1115 * x27
    x2141 = x2139 - x2140
    x2142 = x2141 * x68
    x2143 = x1091 * x659
    x2144 = x1095 * x27
    x2145 = x2143 - x2144
    x2146 = x1094 * x659
    x2147 = x1120 * x27
    x2148 = x2146 - x2147
    x2149 = x2148 * x68
    x2150 = x2145 * x80 - x2149 * x24
    x2151 = x1099 * x659
    x2152 = x1103 * x27
    x2153 = x2151 - x2152
    x2154 = x1102 * x659
    x2155 = x1126 * x27
    x2156 = x2154 - x2155
    x2157 = x2156 * x68
    x2158 = x2150 * x84 + x2153 * x80 - x2157 * x24
    x2159 = x2138 * x80 - x2142 * x24 + x2158 * x90
    x2160 = -x2134 * x24 + x2136 * x80 + x2159 * x92
    x2161 = x1110 * x659 - x1177 * x27
    x2162 = x2161 * x68
    x2163 = x1114 * x659
    x2164 = x1181 * x27
    x2165 = x2163 - x2164
    x2166 = x2165 * x68
    x2167 = x1119 * x659
    x2168 = x1185 * x27
    x2169 = x2167 - x2168
    x2170 = x2169 * x68
    x2171 = x2148 * x80 - x2170 * x24
    x2172 = x1125 * x659
    x2173 = x1190 * x27
    x2174 = x2172 - x2173
    x2175 = x2174 * x68
    x2176 = x2156 * x80 + x2171 * x84 - x2175 * x24
    x2177 = x2141 * x80 - x2166 * x24 + x2176 * x90
    x2178 = x2133 * x80 - x2162 * x24 + x2177 * x92
    x2179 = x1 * (x1084 * x659 - x2137 - x2142)
    x2180 = x1 * (x1099 * x659 - x2152 - x2157)
    x2181 = x1 * (x1091 * x659 - x2144 - x2149)
    x2182 = (
        x2135
        + x2160 * x80
        - x2178 * x85
        + x92
        * (
            x2159 * x80
            - x2177 * x85
            + x2179
            + x90
            * (
                x2158 * x80
                - x2176 * x85
                + x2180
                + x84 * (x2150 * x80 - x2171 * x85 + x2181)
            )
        )
    )
    x2183 = x1143 * x27
    x2184 = x2138 * x68
    x2185 = x1 * (x1145 * x659 - x2183 - x2184)
    x2186 = x1145 * x659 - x2183
    x2187 = x1147 * x659
    x2188 = x1149 * x27
    x2189 = x2187 - x2188
    x2190 = x2145 * x68
    x2191 = x2189 * x80 - x2190 * x24
    x2192 = x1155 * x27
    x2193 = x1153 * x659 - x2192
    x2194 = x2153 * x68
    x2195 = x2191 * x84 + x2193 * x80 - x2194 * x24
    x2196 = -x2184 * x24 + x2186 * x80 + x2195 * x90
    x2197 = x1 * (x1153 * x659 - x2192 - x2194)
    x2198 = x1 * (x1147 * x659 - x2188 - x2190)
    x2199 = (
        -x2159 * x85
        + x2185
        + x2196 * x80
        + x90
        * (
            -x2158 * x85
            + x2195 * x80
            + x2197
            + x84 * (-x2150 * x85 + x2191 * x80 + x2198)
        )
    )
    x2200 = x1171 * x659 - x2127
    x2201 = -x2129 * x24 + x2178 * x94 + x2200 * x80
    x2202 = x1 * (x1079 * x659 - x2132 - x2162)
    x2203 = x1176 * x659
    x2204 = x1216 * x671
    x2205 = x2203 - x2204
    x2206 = x1180 * x659
    x2207 = x1219 * x671
    x2208 = x2206 - x2207
    x2209 = x1184 * x659
    x2210 = x1222 * x671
    x2211 = x2209 - x2210
    x2212 = x2169 * x80 - x2211 * x85
    x2213 = x1189 * x659
    x2214 = x1226 * x671
    x2215 = x2213 - x2214
    x2216 = x2174 * x80 + x2212 * x84 - x2215 * x85
    x2217 = x2165 * x80 - x2208 * x85 + x2216 * x90
    x2218 = x2161 * x80 - x2205 * x85 + x2217 * x92
    x2219 = x1 * (x1087 * x659 - x2140 - x2166)
    x2220 = x1 * (x1102 * x659 - x2155 - x2175)
    x2221 = x1 * (x1094 * x659 - x2147 - x2170)
    x2222 = x1173 * x659 - x1239 * x671
    x2223 = (
        x16 * x2182
        + x16 * (x16 * x2199 + x2182)
        + x2130
        + x2201 * x80
        - x85 * (x2128 * x80 + x2218 * x94 - x2222 * x85)
        + x94
        * (
            x2178 * x80
            + x2202
            - x2218 * x85
            + x92
            * (
                x2177 * x80
                - x2217 * x85
                + x2219
                + x90
                * (
                    x2176 * x80
                    - x2216 * x85
                    + x2220
                    + x84 * (x2171 * x80 - x2212 * x85 + x2221)
                )
            )
        )
    )
    x2224 = x13 * x774 + x2223
    x2225 = x1243 * x659 - x1266 * x27 + x2141 * x84
    x2226 = x2225 * x68
    x2227 = -x1244 * x27 + x1246 * x659 + x2138 * x84
    x2228 = x1 * (-x2226 + x2227)
    x2229 = x1251 * x659
    x2230 = x1255 * x27
    x2231 = x2145 * x84 + x2229 - x2230
    x2232 = x1254 * x659
    x2233 = x1271 * x27
    x2234 = x2148 * x84 + x2232 - x2233
    x2235 = x2234 * x68
    x2236 = x2231 * x80 - x2235 * x24
    x2237 = x1248 * x659 - x1260 * x27 + x2153 * x84
    x2238 = x1259 * x659
    x2239 = x1276 * x27
    x2240 = x2156 * x84 + x2238 - x2239
    x2241 = x2240 * x68
    x2242 = x2236 * x84 + x2237 * x80 - x2241 * x24
    x2243 = -x2226 * x24 + x2227 * x80 + x2242 * x90
    x2244 = x1265 * x659 - x1300 * x27 + x2165 * x84
    x2245 = x2244 * x68
    x2246 = x1270 * x659
    x2247 = x1305 * x27
    x2248 = x2169 * x84 + x2246 - x2247
    x2249 = x2248 * x68
    x2250 = x2234 * x80 - x2249 * x24
    x2251 = x1275 * x659
    x2252 = x1309 * x27
    x2253 = x2174 * x84 + x2251 - x2252
    x2254 = x2253 * x68
    x2255 = x2240 * x80 + x2250 * x84 - x2254 * x24
    x2256 = x2225 * x80 - x2245 * x24 + x2255 * x90
    x2257 = x1 * (x2237 - x2241)
    x2258 = x1 * (x2231 - x2235)
    x2259 = (
        x2228
        + x2243 * x80
        - x2256 * x85
        + x90
        * (x2242 * x80 - x2255 * x85 + x2257 + x84 * (x2236 * x80 - x2250 * x85 + x2258))
    )
    x2260 = x17 * x2199 + x2259
    x2261 = x1291 * x659 - x1297 * x27 + x2161 * x84
    x2262 = x2261 * x68
    x2263 = -x1292 * x27 + x1294 * x659 + x2133 * x84
    x2264 = x1 * (-x2262 + x2263)
    x2265 = x2256 * x92 - x2262 * x24 + x2263 * x80
    x2266 = x1 * (x2225 - x2245)
    x2267 = x1299 * x659
    x2268 = x1331 * x671
    x2269 = x2208 * x84 + x2267 - x2268
    x2270 = x1304 * x659
    x2271 = x1335 * x671
    x2272 = x2211 * x84 + x2270 - x2271
    x2273 = x2248 * x80 - x2272 * x85
    x2274 = x1308 * x659
    x2275 = x1338 * x671
    x2276 = x2215 * x84 + x2274 - x2275
    x2277 = x2253 * x80 + x2273 * x84 - x2276 * x85
    x2278 = x2244 * x80 - x2269 * x85 + x2277 * x90
    x2279 = x1 * (x2240 - x2254)
    x2280 = x1 * (x2234 - x2249)
    x2281 = x1296 * x659 - x1348 * x671 + x2205 * x84
    x2282 = (
        x2264
        + x2265 * x80
        - x85 * (x2261 * x80 + x2278 * x92 - x2281 * x85)
        + x92
        * (
            x2256 * x80
            + x2266
            - x2278 * x85
            + x90
            * (
                x2255 * x80
                - x2277 * x85
                + x2279
                + x84 * (x2250 * x80 - x2273 * x85 + x2280)
            )
        )
    )
    x2283 = x16 * x2260 + x17 * x2182 + x2282
    x2284 = x13 * x860 + x2283
    x2285 = x1351 * x671
    x2286 = x1359 * x671
    x2287 = x1351 * x659 - x2286
    x2288 = x2287 * x68
    x2289 = x1 * (x1084 * x659 * x84 - x2285 - x2288)
    x2290 = x1084 * x84
    x2291 = -x2285 + x2290 * x659
    x2292 = x1356 * x671
    x2293 = x1689 * x659 - x2292
    x2294 = x1363 * x671
    x2295 = x1356 * x659 - x2294
    x2296 = x2295 * x68
    x2297 = x1353 * x671
    x2298 = x1691 * x659 - x2297
    x2299 = x1360 * x671
    x2300 = x1353 * x659 - x2299
    x2301 = x2300 * x68
    x2302 = x2298 * x80 - x2301 * x24
    x2303 = x2293 * x80 - x2296 * x24 + x2302 * x84
    x2304 = -x2288 * x24 + x2291 * x80 + x2303 * x90
    x2305 = x1359 * x659 - x1397 * x27
    x2306 = x2305 * x68
    x2307 = x1363 * x659 - x1402 * x27
    x2308 = x2307 * x68
    x2309 = x1360 * x659 - x1404 * x27
    x2310 = x2309 * x68
    x2311 = x2300 * x80 - x2310 * x24
    x2312 = x2295 * x80 - x2308 * x24 + x2311 * x84
    x2313 = x2287 * x80 - x2306 * x24 + x2312 * x90
    x2314 = x1 * (x1099 * x659 * x84 - x2292 - x2296)
    x2315 = x1 * (x1091 * x659 * x84 - x2297 - x2301)
    x2316 = (
        x2289
        + x2304 * x80
        - x2313 * x85
        + x90
        * (x2303 * x80 - x2312 * x85 + x2314 + x84 * (x2302 * x80 - x2311 * x85 + x2315))
    )
    x2317 = x18 * x2199 + x2316
    x2318 = x1375 * x671
    x2319 = x1375 * x659 - x1409 * x27
    x2320 = x2319 * x68
    x2321 = x1 * (x1079 * x659 * x84 - x2318 - x2320)
    x2322 = x1079 * x84
    x2323 = -x2318 + x2322 * x659
    x2324 = x2313 * x92 - x2320 * x24 + x2323 * x80
    x2325 = x1 * (x1087 * x659 * x84 - x2286 - x2306)
    x2326 = x2206 * x84 - x2207 * x84
    x2327 = x2213 * x84 - x2214 * x84
    x2328 = x2209 * x84 - x2210 * x84
    x2329 = x2309 * x80 - x2328 * x85
    x2330 = x2307 * x80 - x2327 * x85 + x2329 * x84
    x2331 = x2305 * x80 - x2326 * x85 + x2330 * x90
    x2332 = x1 * (x1102 * x659 * x84 - x2294 - x2308)
    x2333 = x1 * (x1094 * x659 * x84 - x2299 - x2310)
    x2334 = x2203 * x84 - x2204 * x84
    x2335 = (
        x2321
        + x2324 * x80
        - x85 * (x2319 * x80 + x2331 * x92 - x2334 * x85)
        + x92
        * (
            x2313 * x80
            + x2325
            - x2331 * x85
            + x90
            * (
                x2312 * x80
                - x2330 * x85
                + x2332
                + x84 * (x2311 * x80 - x2329 * x85 + x2333)
            )
        )
    )
    x2336 = x16 * x2317 + x18 * x2182 + x2335
    x2337 = x13 * x881 + x2336
    x2338 = x1415 * x659 - x1436 * x27 + x2244 * x90
    x2339 = x2338 * x68
    x2340 = -x1416 * x27 + x1418 * x659 + x2225 * x90
    x2341 = x1 * (-x2339 + x2340)
    x2342 = x1423 * x659
    x2343 = x1427 * x27
    x2344 = x2234 * x90 + x2342 - x2343
    x2345 = x1426 * x659
    x2346 = x1440 * x27
    x2347 = x2248 * x90 + x2345 - x2346
    x2348 = x2347 * x68
    x2349 = x2344 * x80 - x2348 * x24
    x2350 = x1420 * x659 - x1432 * x27 + x2240 * x90
    x2351 = x1431 * x659 - x1444 * x27 + x2253 * x90
    x2352 = x2351 * x68
    x2353 = x2349 * x84 + x2350 * x80 - x2352 * x24
    x2354 = -x2339 * x24 + x2340 * x80 + x2353 * x90
    x2355 = x1 * (x2350 - x2352)
    x2356 = x1 * (x2344 - x2348)
    x2357 = x1439 * x659
    x2358 = x1461 * x671
    x2359 = x2272 * x90 + x2357 - x2358
    x2360 = x2347 * x80 - x2359 * x85
    x2361 = x1443 * x659
    x2362 = x1467 * x671
    x2363 = x2276 * x90 + x2361 - x2362
    x2364 = x2351 * x80 + x2360 * x84 - x2363 * x85
    x2365 = x1435 * x659 - x1472 * x671 + x2269 * x90
    x2366 = (
        x2341
        + x2354 * x80
        - x85 * (x2338 * x80 + x2364 * x90 - x2365 * x85)
        + x90
        * (x2353 * x80 + x2355 - x2364 * x85 + x84 * (x2349 * x80 + x2356 - x2360 * x85))
    )
    x2367 = x17 * x2259 + x2366
    x2368 = x17 * x2260 + x2367
    x2369 = x13 * x916 + x2368
    x2370 = x1476 * x659 - x1506 * x27 + x2305 * x84
    x2371 = x2370 * x68
    x2372 = x1243 * x84
    x2373 = -x1476 * x671 + x2287 * x84 + x2372 * x659
    x2374 = x1 * (-x2371 + x2373)
    x2375 = -x1481 * x671 + x1585 * x659 + x2295 * x84
    x2376 = -x1478 * x671 + x1587 * x659 + x2300 * x84
    x2377 = x1478 * x659 - x1498 * x27 + x2309 * x84
    x2378 = x2377 * x68
    x2379 = x2376 * x80 - x2378 * x24
    x2380 = x1481 * x659 - x1502 * x27 + x2307 * x84
    x2381 = x2380 * x68
    x2382 = x2375 * x80 + x2379 * x84 - x2381 * x24
    x2383 = -x2371 * x24 + x2373 * x80 + x2382 * x90
    x2384 = x1 * (x2375 - x2381)
    x2385 = x1 * (x2376 - x2378)
    x2386 = x2270 * x84 - x2271 * x84 + x2328 * x84
    x2387 = x2377 * x80 - x2386 * x85
    x2388 = x2274 * x84 - x2275 * x84 + x2327 * x84
    x2389 = x2380 * x80 + x2387 * x84 - x2388 * x85
    x2390 = x2267 * x84 - x2268 * x84 + x2326 * x84
    x2391 = (
        x2374
        + x2383 * x80
        - x85 * (x2370 * x80 + x2389 * x90 - x2390 * x85)
        + x90
        * (x2382 * x80 + x2384 - x2389 * x85 + x84 * (x2379 * x80 + x2385 - x2387 * x85))
    )
    x2392 = x18 * x2259 + x2391
    x2393 = x17 * x2317 + x2392
    x2394 = x13 * x932 + x2393
    x2395 = x1513 * x2140
    x2396 = x1513 * x2163 - x1513 * x2164
    x2397 = x2396 * x68
    x2398 = x1 * (2 * x1087 * x1512 * x659 - x2395 - x2397)
    x2399 = x1513 * x2139 - x2395
    x2400 = x1513 * x2155
    x2401 = x1513 * x2154 - x2400
    x2402 = x1513 * x2172 - x1513 * x2173
    x2403 = x2402 * x68
    x2404 = x1513 * x2147
    x2405 = x1513 * x2146 - x2404
    x2406 = x1513 * x2167 - x1513 * x2168
    x2407 = x2406 * x68
    x2408 = -x24 * x2407 + x2405 * x80
    x2409 = -x24 * x2403 + x2401 * x80 + x2408 * x84
    x2410 = -x2397 * x24 + x2399 * x80 + x2409 * x90
    x2411 = x1 * (2 * x1102 * x1512 * x659 - x2400 - x2403)
    x2412 = x1 * (2 * x1094 * x1512 * x659 - x2404 - x2407)
    x2413 = x1513 * x2209 - x1513 * x2210
    x2414 = x2406 * x80 - x2413 * x85
    x2415 = x1513 * x2213 - x1513 * x2214
    x2416 = x2402 * x80 + x2414 * x84 - x2415 * x85
    x2417 = x1513 * x2206 - x1513 * x2207
    x2418 = (
        x2398
        + x2410 * x80
        - x85 * (x2396 * x80 + x2416 * x90 - x2417 * x85)
        + x90
        * (x2409 * x80 + x2411 - x2416 * x85 + x84 * (x2408 * x80 + x2412 - x2414 * x85))
    )
    x2419 = x18 * x2316 + x2418
    x2420 = x18 * x2317 + x2419
    x2421 = x13 * x937 + x2420
    x2422 = x2237 * x68
    x2423 = -x1544 * x27 + x1555 * x659 + x2193 * x84
    x2424 = x1 * (-x2422 + x2423)
    x2425 = x2231 * x68
    x2426 = -x1547 * x27 + x1549 * x659 + x2189 * x84
    x2427 = x1 * (-x2425 + x2426)
    x2428 = -x24 * x2425 + x2426 * x80
    x2429 = -x24 * x2422 + x2423 * x80 + x2428 * x84
    x2430 = (
        -x2242 * x85 + x2424 + x2429 * x80 + x84 * (-x2236 * x85 + x2427 + x2428 * x80)
    )
    x2431 = x16 * x2259 + x16 * (x16 * x2430 + x2259) + x2282
    x2432 = x13 * x954 + x2431
    x2433 = x2350 * x68
    x2434 = -x1564 * x27 + x1575 * x659 + x2237 * x90
    x2435 = x1 * (-x2433 + x2434)
    x2436 = x2344 * x68
    x2437 = -x1567 * x27 + x1569 * x659 + x2231 * x90
    x2438 = x1 * (-x2436 + x2437)
    x2439 = -x24 * x2436 + x2437 * x80
    x2440 = -x24 * x2433 + x2434 * x80 + x2439 * x84
    x2441 = (
        -x2353 * x85 + x2435 + x2440 * x80 + x84 * (-x2349 * x85 + x2438 + x2439 * x80)
    )
    x2442 = x17 * x2430 + x2441
    x2443 = x16 * x2442 + x2367
    x2444 = x13 * x974 + x2443
    x2445 = x2375 * x68
    x2446 = x1248 * x84
    x2447 = -x1585 * x671 + x2293 * x84 + x2446 * x659
    x2448 = x1 * (-x2445 + x2447)
    x2449 = x2376 * x68
    x2450 = -x1587 * x671 + x1830 * x659 + x2298 * x84
    x2451 = x1 * (-x2449 + x2450)
    x2452 = -x24 * x2449 + x2450 * x80
    x2453 = -x24 * x2445 + x2447 * x80 + x2452 * x84
    x2454 = (
        -x2382 * x85 + x2448 + x2453 * x80 + x84 * (-x2379 * x85 + x2451 + x2452 * x80)
    )
    x2455 = x18 * x2430 + x2454
    x2456 = x16 * x2455 + x2392
    x2457 = x13 * x980 + x2456
    x2458 = x1604 * x659 - x1626 * x27 + x2351 * x92
    x2459 = x2458 * x68
    x2460 = -x1605 * x27 + x1623 * x659 + x2350 * x92
    x2461 = x1 * (-x2459 + x2460)
    x2462 = x1609 * x659 - x1618 * x27 + x2347 * x92
    x2463 = x2462 * x68
    x2464 = -x1610 * x27 + x1612 * x659 + x2344 * x92
    x2465 = x1 * (-x2463 + x2464)
    x2466 = -x24 * x2463 + x2464 * x80
    x2467 = x1617 * x659
    x2468 = x1635 * x671
    x2469 = x2359 * x92 + x2467 - x2468
    x2470 = x2462 * x80 - x2469 * x85
    x2471 = -x24 * x2459 + x2460 * x80 + x2466 * x84
    x2472 = x1625 * x659 - x1640 * x671 + x2363 * x92
    x2473 = (
        x17 * x2441
        + x2461
        + x2471 * x80
        + x84 * (x2465 + x2466 * x80 - x2470 * x85)
        - x85 * (x2458 * x80 + x2470 * x84 - x2472 * x85)
    )
    x2474 = x17 * x2442 + x2473
    x2475 = x1005 * x13 + x2474
    x2476 = x1643 * x659 - x1663 * x27 + x2380 * x90
    x2477 = x2476 * x68
    x2478 = x1420 * x84
    x2479 = -x1643 * x671 + x2375 * x90 + x2478 * x659
    x2480 = x1 * (-x2477 + x2479)
    x2481 = x1645 * x659 - x1659 * x27 + x2377 * x90
    x2482 = x2481 * x68
    x2483 = -x1645 * x671 + x1774 * x659 + x2376 * x90
    x2484 = x1 * (-x2482 + x2483)
    x2485 = -x24 * x2482 + x2483 * x80
    x2486 = x2357 * x84 - x2358 * x84 + x2386 * x90
    x2487 = x2481 * x80 - x2486 * x85
    x2488 = -x24 * x2477 + x2479 * x80 + x2485 * x84
    x2489 = x2361 * x84 - x2362 * x84 + x2388 * x90
    x2490 = (
        x2480
        + x2488 * x80
        + x84 * (x2484 + x2485 * x80 - x2487 * x85)
        - x85 * (x2476 * x80 + x2487 * x84 - x2489 * x85)
    )
    x2491 = x18 * x2441 + x2490
    x2492 = x17 * x2455 + x2491
    x2493 = x1016 * x13 + x2492
    x2494 = x1513 * x2251 - x1513 * x2252 + x2402 * x84
    x2495 = x2494 * x68
    x2496 = x1513 * x2238 - x1513 * x2239 + x2401 * x84
    x2497 = x1 * (-x2495 + x2496)
    x2498 = x1513 * x2246 - x1513 * x2247 + x2406 * x84
    x2499 = x2498 * x68
    x2500 = x1513 * x2232 - x1513 * x2233 + x2405 * x84
    x2501 = x1 * (-x2499 + x2500)
    x2502 = -x24 * x2499 + x2500 * x80
    x2503 = x1513 * x2270 - x1513 * x2271 + x2413 * x84
    x2504 = x2498 * x80 - x2503 * x85
    x2505 = -x24 * x2495 + x2496 * x80 + x2502 * x84
    x2506 = x1513 * x2274 - x1513 * x2275 + x2415 * x84
    x2507 = (
        x2497
        + x2505 * x80
        + x84 * (x2501 + x2502 * x80 - x2504 * x85)
        - x85 * (x2494 * x80 + x2504 * x84 - x2506 * x85)
    )
    x2508 = x18 * x2454 + x2507
    x2509 = x18 * x2455 + x2508
    x2510 = x1020 * x13 + x2509
    x2511 = x1689 * x671
    x2512 = x2293 * x68
    x2513 = x1 * (x1153 * x659 * x84 - x2511 - x2512)
    x2514 = x1153 * x84
    x2515 = -x2511 + x2514 * x659
    x2516 = x1147 * x84
    x2517 = x1691 * x671
    x2518 = x2516 * x659 - x2517
    x2519 = x2298 * x68
    x2520 = -x24 * x2519 + x2518 * x80
    x2521 = -x24 * x2512 + x2515 * x80 + x2520 * x84
    x2522 = x1 * (x1147 * x659 * x84 - x2517 - x2519)
    x2523 = (
        -x2303 * x85 + x2513 + x2521 * x80 + x84 * (-x2302 * x85 + x2520 * x80 + x2522)
    )
    x2524 = x16 * x2316 + x16 * (x16 * x2523 + x2316) + x2335
    x2525 = x12 * x1700 + x2524
    x2526 = x17 * x2523 + x2454
    x2527 = x16 * x2526 + x17 * x2316 + x2391
    x2528 = x12 * x1704 + x2527
    x2529 = x1513 * x2152
    x2530 = x2401 * x68
    x2531 = x1 * (2 * x1099 * x1512 * x659 - x2529 - x2530)
    x2532 = x1513 * x2151 - x2529
    x2533 = x1513 * x2144
    x2534 = x1513 * x2143 - x2533
    x2535 = x2405 * x68
    x2536 = -x24 * x2535 + x2534 * x80
    x2537 = -x24 * x2530 + x2532 * x80 + x2536 * x84
    x2538 = x1 * (2 * x1091 * x1512 * x659 - x2533 - x2535)
    x2539 = (
        -x2409 * x85 + x2531 + x2537 * x80 + x84 * (-x2408 * x85 + x2536 * x80 + x2538)
    )
    x2540 = x18 * x2523 + x2539
    x2541 = x16 * x2540 + x2419
    x2542 = x12 * x1717 + x2541
    x2543 = x17 * x2454 + x2490
    x2544 = x17 * x2526 + x2543
    x2545 = x12 * x1722 + x2544
    x2546 = x17 * x2540 + x2508
    x2547 = x12 * x1725 + x2546
    x2548 = x1728 * x2155
    x2549 = x1728 * x2172 - x1728 * x2173
    x2550 = x2549 * x68
    x2551 = x1 * (6 * x1102 * x1727 * x659 - x2548 - x2550)
    x2552 = x1728 * x2147
    x2553 = x1728 * x2167 - x1728 * x2168
    x2554 = x2553 * x68
    x2555 = x1 * (6 * x1094 * x1727 * x659 - x2552 - x2554)
    x2556 = x1728 * x2146 - x2552
    x2557 = -x24 * x2554 + x2556 * x80
    x2558 = x1728 * x2209 - x1728 * x2210
    x2559 = x2553 * x80 - x2558 * x85
    x2560 = x1728 * x2154 - x2548
    x2561 = -x24 * x2550 + x2557 * x84 + x2560 * x80
    x2562 = x1728 * x2213 - x1728 * x2214
    x2563 = (
        x18 * x2539
        + x2551
        + x2561 * x80
        + x84 * (x2555 + x2557 * x80 - x2559 * x85)
        - x85 * (x2549 * x80 + x2559 * x84 - x2562 * x85)
    )
    x2564 = x18 * x2540 + x2563
    x2565 = x12 * x1741 + x2564
    x2566 = x2437 * x68
    x2567 = -x1749 * x27 + x1751 * x659 + x2426 * x90
    x2568 = x1 * (-x2566 + x2567)
    x2569 = -x24 * x2566 + x2567 * x80
    x2570 = -x2439 * x85 + x2568 + x2569 * x80
    x2571 = x16 * x2441 + x16 * (x16 * x2570 + x2441) + x2366
    x2572 = x1031 * x13 + x2571
    x2573 = x2464 * x68
    x2574 = -x1761 * x27 + x1763 * x659 + x2437 * x92
    x2575 = x1 * (-x2573 + x2574)
    x2576 = -x24 * x2573 + x2574 * x80
    x2577 = -x2466 * x85 + x2575 + x2576 * x80
    x2578 = x17 * x2570 + x2577
    x2579 = x16 * x2578 + x2473
    x2580 = x1045 * x13 + x2579
    x2581 = x2483 * x68
    x2582 = x1569 * x84
    x2583 = -x1774 * x671 + x2450 * x90 + x2582 * x659
    x2584 = x1 * (-x2581 + x2583)
    x2585 = -x24 * x2581 + x2583 * x80
    x2586 = -x2485 * x85 + x2584 + x2585 * x80
    x2587 = x18 * x2570 + x2586
    x2588 = x16 * x2587 + x2491
    x2589 = x1051 * x13 + x2588
    x2590 = x1788 * x659 - x1795 * x27 + x2462 * x94
    x2591 = x2590 * x68
    x2592 = -x1789 * x27 + x1791 * x659 + x2464 * x94
    x2593 = x1 * (-x2591 + x2592)
    x2594 = -x24 * x2591 + x2592 * x80
    x2595 = x1794 * x659 - x1802 * x671 + x2469 * x94
    x2596 = (
        x17 * x2577
        + x17 * x2578
        + x2593
        + x2594 * x80
        - x85 * (x2590 * x80 - x2595 * x85)
    )
    x2597 = x1065 * x13 + x2596
    x2598 = x1804 * x659 - x1813 * x27 + x2481 * x92
    x2599 = x2598 * x68
    x2600 = x1612 * x84
    x2601 = -x1804 * x671 + x2483 * x92 + x2600 * x659
    x2602 = x1 * (-x2599 + x2601)
    x2603 = -x24 * x2599 + x2601 * x80
    x2604 = x2467 * x84 - x2468 * x84 + x2486 * x92
    x2605 = x2602 + x2603 * x80 - x85 * (x2598 * x80 - x2604 * x85)
    x2606 = x17 * x2587 + x18 * x2577 + x2605
    x2607 = x1070 * x13 + x2606
    x2608 = x1513 * x2345 - x1513 * x2346 + x2498 * x90
    x2609 = x2608 * x68
    x2610 = x1513 * x2342 - x1513 * x2343 + x2500 * x90
    x2611 = x1 * (-x2609 + x2610)
    x2612 = -x24 * x2609 + x2610 * x80
    x2613 = x1513 * x2357 - x1513 * x2358 + x2503 * x90
    x2614 = x2611 + x2612 * x80 - x85 * (x2608 * x80 - x2613 * x85)
    x2615 = x18 * x2586 + x2614
    x2616 = x18 * x2587 + x2615
    x2617 = x1073 * x13 + x2616
    x2618 = x2450 * x68
    x2619 = x1549 * x84
    x2620 = -x1830 * x671 + x2518 * x84 + x2619 * x659
    x2621 = x1 * (-x2618 + x2620)
    x2622 = -x24 * x2618 + x2620 * x80
    x2623 = -x2452 * x85 + x2621 + x2622 * x80
    x2624 = x16 * x2454 + x16 * (x16 * x2623 + x2454) + x2391
    x2625 = x12 * x1836 + x2624
    x2626 = x17 * x2623 + x2586
    x2627 = x16 * x2626 + x2543
    x2628 = x12 * x1840 + x2627
    x2629 = x2500 * x68
    x2630 = x1513 * x2229 - x1513 * x2230 + x2534 * x84
    x2631 = x1 * (-x2629 + x2630)
    x2632 = -x24 * x2629 + x2630 * x80
    x2633 = -x2502 * x85 + x2631 + x2632 * x80
    x2634 = x18 * x2623 + x2633
    x2635 = x16 * x2634 + x2508
    x2636 = x12 * x1849 + x2635
    x2637 = x17 * x2586 + x17 * x2626 + x2605
    x2638 = x12 * x1853 + x2637
    x2639 = x17 * x2634 + x2615
    x2640 = x12 * x1855 + x2639
    x2641 = x1728 * x2246 - x1728 * x2247 + x2553 * x84
    x2642 = x2641 * x68
    x2643 = x1728 * x2232 - x1728 * x2233 + x2556 * x84
    x2644 = x1 * (-x2642 + x2643)
    x2645 = -x24 * x2642 + x2643 * x80
    x2646 = x1728 * x2270 - x1728 * x2271 + x2558 * x84
    x2647 = x18 * x2633 + x2644 + x2645 * x80 - x85 * (x2641 * x80 - x2646 * x85)
    x2648 = x18 * x2634 + x2647
    x2649 = x12 * x1864 + x2648
    x2650 = x1513 * x2188
    x2651 = x2534 * x68
    x2652 = x1 * (2 * x1147 * x1512 * x659 - x2650 - x2651)
    x2653 = x1513 * x2187 - x2650
    x2654 = -x24 * x2651 + x2653 * x80
    x2655 = -x2536 * x85 + x2652 + x2654 * x80
    x2656 = x16 * x2539 + x16 * (x16 * x2655 + x2539) + x2418
    x2657 = x12 * x1873 + x2656
    x2658 = x17 * x2655 + x2633
    x2659 = x16 * x2658 + x17 * x2539 + x2507
    x2660 = x12 * x1877 + x2659
    x2661 = x1728 * x2144
    x2662 = x2556 * x68
    x2663 = x1 * (6 * x1091 * x1727 * x659 - x2661 - x2662)
    x2664 = x1728 * x2143 - x2661
    x2665 = -x24 * x2662 + x2664 * x80
    x2666 = -x2557 * x85 + x2663 + x2665 * x80
    x2667 = x18 * x2655 + x2666
    x2668 = x16 * x2667 + x2563
    x2669 = x12 * x1886 + x2668
    x2670 = x17 * x2633 + x17 * x2658 + x2614
    x2671 = x12 * x1890 + x2670
    x2672 = x17 * x2667 + x2647
    x2673 = x12 * x1892 + x2672
    x2674 = x1895 * x2147
    x2675 = x1895 * x2167 - x1895 * x2168
    x2676 = x2675 * x68
    x2677 = x1 * (24 * x1094 * x1894 * x659 - x2674 - x2676)
    x2678 = x1895 * x2146 - x2674
    x2679 = -x24 * x2676 + x2678 * x80
    x2680 = x1895 * x2209 - x1895 * x2210
    x2681 = (
        x18 * x2666
        + x18 * x2667
        + x2677
        + x2679 * x80
        - x85 * (x2675 * x80 - x2680 * x85)
    )
    x2682 = x12 * x1903 + x2681
    x2683 = x1076 * x1168 - x1174 * x29 + x79
    x2684 = x2683 * x68
    x2685 = x1076 * x1171 - x1169 * x29 + x139
    x2686 = x1 * (-x2684 + x2685)
    x2687 = x1076 * x1079 - x1111 * x29 + x150
    x2688 = x2687 * x68
    x2689 = x1076 * x1082 - x1080 * x29 + x200
    x2690 = x1 * (-x2688 + x2689)
    x2691 = x1076 * x1084 - x1088 * x29 + x209
    x2692 = x1076 * x1087
    x2693 = x1115 * x29
    x2694 = x152 + x2692 - x2693
    x2695 = x2694 * x68
    x2696 = x1076 * x1091
    x2697 = x1095 * x29
    x2698 = x212 + x2696 - x2697
    x2699 = x1076 * x1094
    x2700 = x1120 * x29
    x2701 = x155 + x2699 - x2700
    x2702 = x2701 * x68
    x2703 = -x24 * x2702 + x2698 * x80
    x2704 = x1076 * x1099
    x2705 = x1103 * x29
    x2706 = x211 + x2704 - x2705
    x2707 = x1076 * x1102
    x2708 = x1126 * x29
    x2709 = x154 + x2707 - x2708
    x2710 = x2709 * x68
    x2711 = -x24 * x2710 + x2703 * x84 + x2706 * x80
    x2712 = -x24 * x2695 + x2691 * x80 + x2711 * x90
    x2713 = -x24 * x2688 + x2689 * x80 + x2712 * x92
    x2714 = x1076 * x1110 + x115 - x1177 * x29
    x2715 = x2714 * x68
    x2716 = x1076 * x1114
    x2717 = x1181 * x29
    x2718 = x117 + x2716 - x2717
    x2719 = x2718 * x68
    x2720 = x1076 * x1119
    x2721 = x1185 * x29
    x2722 = x120 + x2720 - x2721
    x2723 = x2722 * x68
    x2724 = -x24 * x2723 + x2701 * x80
    x2725 = x1076 * x1125
    x2726 = x1190 * x29
    x2727 = x119 + x2725 - x2726
    x2728 = x2727 * x68
    x2729 = -x24 * x2728 + x2709 * x80 + x2724 * x84
    x2730 = -x24 * x2719 + x2694 * x80 + x2729 * x90
    x2731 = -x24 * x2715 + x2687 * x80 + x2730 * x92
    x2732 = x1 * (x2691 - x2695)
    x2733 = x1 * (x2706 - x2710)
    x2734 = x1 * (x2698 - x2702)
    x2735 = (
        x2690
        + x2713 * x80
        - x2731 * x85
        + x92
        * (
            x2712 * x80
            - x2730 * x85
            + x2732
            + x90
            * (
                x2711 * x80
                - x2729 * x85
                + x2733
                + x84 * (x2703 * x80 - x2724 * x85 + x2734)
            )
        )
    )
    x2736 = x2691 * x68
    x2737 = x1076 * x1145 - x1143 * x29 + x229
    x2738 = x1 * (-x2736 + x2737)
    x2739 = x1076 * x1147
    x2740 = x1149 * x29
    x2741 = x237 + x2739 - x2740
    x2742 = x2698 * x68
    x2743 = -x24 * x2742 + x2741 * x80
    x2744 = x1076 * x1153 - x1155 * x29 + x236
    x2745 = x2706 * x68
    x2746 = -x24 * x2745 + x2743 * x84 + x2744 * x80
    x2747 = -x24 * x2736 + x2737 * x80 + x2746 * x90
    x2748 = x1 * (x2744 - x2745)
    x2749 = x1 * (x2741 - x2742)
    x2750 = (
        -x2712 * x85
        + x2738
        + x2747 * x80
        + x90
        * (
            -x2711 * x85
            + x2746 * x80
            + x2748
            + x84 * (-x2703 * x85 + x2743 * x80 + x2749)
        )
    )
    x2751 = -x24 * x2684 + x2685 * x80 + x2731 * x94
    x2752 = x1 * (x2687 - x2715)
    x2753 = x1076 * x1176
    x2754 = x1089 * x1216
    x2755 = x186 + x2753 - x2754
    x2756 = x1076 * x1180
    x2757 = x1089 * x1219
    x2758 = x187 + x2756 - x2757
    x2759 = x1076 * x1184
    x2760 = x1089 * x1222
    x2761 = x189 + x2759 - x2760
    x2762 = x2722 * x80 - x2761 * x85
    x2763 = x1076 * x1189
    x2764 = x1089 * x1226
    x2765 = x188 + x2763 - x2764
    x2766 = x2727 * x80 + x2762 * x84 - x2765 * x85
    x2767 = x2718 * x80 - x2758 * x85 + x2766 * x90
    x2768 = x2714 * x80 - x2755 * x85 + x2767 * x92
    x2769 = x1 * (x2694 - x2719)
    x2770 = x1 * (x2709 - x2728)
    x2771 = x1 * (x2701 - x2723)
    x2772 = x1076 * x1173 - x1089 * x1239 + x174
    x2773 = (
        x16 * x2735
        + x16 * (x16 * x2750 + x2735)
        + x2686
        + x2751 * x80
        - x85 * (x2683 * x80 + x2768 * x94 - x2772 * x85)
        + x94
        * (
            x2731 * x80
            + x2752
            - x2768 * x85
            + x92
            * (
                x2730 * x80
                - x2767 * x85
                + x2769
                + x90
                * (
                    x2729 * x80
                    - x2766 * x85
                    + x2770
                    + x84 * (x2724 * x80 - x2762 * x85 + x2771)
                )
            )
        )
    )
    x2774 = x1210 * x13 + x2773
    x2775 = x1076 * x1243 - x1266 * x29 + x302
    x2776 = x2775 * x68
    x2777 = x1076 * x1246 - x1244 * x29 + x294
    x2778 = x1 * (-x2776 + x2777)
    x2779 = x1076 * x1251
    x2780 = x1255 * x29
    x2781 = x2779 - x2780 + x296
    x2782 = x1076 * x1254
    x2783 = x1271 * x29
    x2784 = x2782 - x2783 + x318
    x2785 = x2784 * x68
    x2786 = -x24 * x2785 + x2781 * x80
    x2787 = x1076 * x1248 - x1260 * x29 + x295
    x2788 = x1076 * x1259
    x2789 = x1276 * x29
    x2790 = x2788 - x2789 + x317
    x2791 = x2790 * x68
    x2792 = -x24 * x2791 + x2786 * x84 + x2787 * x80
    x2793 = -x24 * x2776 + x2777 * x80 + x2792 * x90
    x2794 = x1076 * x1265 - x1300 * x29 + x358
    x2795 = x2794 * x68
    x2796 = x1076 * x1270
    x2797 = x1305 * x29
    x2798 = x2796 - x2797 + x361
    x2799 = x2798 * x68
    x2800 = -x24 * x2799 + x2784 * x80
    x2801 = x1076 * x1275
    x2802 = x1309 * x29
    x2803 = x2801 - x2802 + x360
    x2804 = x2803 * x68
    x2805 = -x24 * x2804 + x2790 * x80 + x2800 * x84
    x2806 = -x24 * x2795 + x2775 * x80 + x2805 * x90
    x2807 = x1 * (x2787 - x2791)
    x2808 = x1 * (x2781 - x2785)
    x2809 = (
        x2778
        + x2793 * x80
        - x2806 * x85
        + x90
        * (x2792 * x80 - x2805 * x85 + x2807 + x84 * (x2786 * x80 - x2800 * x85 + x2808))
    )
    x2810 = x17 * x2750 + x2809
    x2811 = x1076 * x1291 - x1297 * x29 + x341
    x2812 = x2811 * x68
    x2813 = x1076 * x1294 - x1292 * x29 + x339
    x2814 = x1 * (-x2812 + x2813)
    x2815 = -x24 * x2812 + x2806 * x92 + x2813 * x80
    x2816 = x1 * (x2775 - x2795)
    x2817 = x1076 * x1299
    x2818 = x1089 * x1331
    x2819 = x2817 - x2818 + x393
    x2820 = x1076 * x1304
    x2821 = x1089 * x1335
    x2822 = x2820 - x2821 + x383
    x2823 = x2798 * x80 - x2822 * x85
    x2824 = x1076 * x1308
    x2825 = x1089 * x1338
    x2826 = x2824 - x2825 + x388
    x2827 = x2803 * x80 + x2823 * x84 - x2826 * x85
    x2828 = x2794 * x80 - x2819 * x85 + x2827 * x90
    x2829 = x1 * (x2790 - x2804)
    x2830 = x1 * (x2784 - x2799)
    x2831 = x1076 * x1296 - x1089 * x1348 + x399
    x2832 = (
        x2814
        + x2815 * x80
        - x85 * (x2811 * x80 + x2828 * x92 - x2831 * x85)
        + x92
        * (
            x2806 * x80
            + x2816
            - x2828 * x85
            + x90
            * (
                x2805 * x80
                - x2827 * x85
                + x2829
                + x84 * (x2800 * x80 - x2823 * x85 + x2830)
            )
        )
    )
    x2833 = x16 * x2810 + x17 * x2735 + x2832
    x2834 = x13 * x1325 + x2833
    x2835 = x1076 * x1351 - x1089 * x1359 + x2694 * x84
    x2836 = x2835 * x68
    x2837 = x1076 * x2290 - x1089 * x1351 + x2691 * x84
    x2838 = x1 * (-x2836 + x2837)
    x2839 = x1076 * x1691 - x1089 * x1353 + x2698 * x84
    x2840 = x1076 * x1353 - x1089 * x1360 + x2701 * x84
    x2841 = x2840 * x68
    x2842 = -x24 * x2841 + x2839 * x80
    x2843 = x1076 * x1689 - x1089 * x1356 + x2706 * x84
    x2844 = x1076 * x1356 - x1089 * x1363 + x2709 * x84
    x2845 = x2844 * x68
    x2846 = -x24 * x2845 + x2842 * x84 + x2843 * x80
    x2847 = -x24 * x2836 + x2837 * x80 + x2846 * x90
    x2848 = x1076 * x1359 - x1397 * x29 + x2718 * x84
    x2849 = x2848 * x68
    x2850 = x1076 * x1360 - x1404 * x29 + x2722 * x84
    x2851 = x2850 * x68
    x2852 = -x24 * x2851 + x2840 * x80
    x2853 = x1076 * x1363 - x1402 * x29 + x2727 * x84
    x2854 = x2853 * x68
    x2855 = -x24 * x2854 + x2844 * x80 + x2852 * x84
    x2856 = -x24 * x2849 + x2835 * x80 + x2855 * x90
    x2857 = x1 * (x2843 - x2845)
    x2858 = x1 * (x2839 - x2841)
    x2859 = (
        x2838
        + x2847 * x80
        - x2856 * x85
        + x90
        * (x2846 * x80 - x2855 * x85 + x2857 + x84 * (x2842 * x80 - x2852 * x85 + x2858))
    )
    x2860 = x18 * x2750 + x2859
    x2861 = x1076 * x1375 - x1409 * x29 + x2714 * x84
    x2862 = x2861 * x68
    x2863 = x1076 * x2322 - x1089 * x1375 + x2687 * x84
    x2864 = x1 * (-x2862 + x2863)
    x2865 = -x24 * x2862 + x2856 * x92 + x2863 * x80
    x2866 = x1 * (x2835 - x2849)
    x2867 = x2756 * x84 - x2757 * x84 + x2758 * x84
    x2868 = x2759 * x84 - x2760 * x84 + x2761 * x84
    x2869 = x2850 * x80 - x2868 * x85
    x2870 = x2763 * x84 - x2764 * x84 + x2765 * x84
    x2871 = x2853 * x80 + x2869 * x84 - x2870 * x85
    x2872 = x2848 * x80 - x2867 * x85 + x2871 * x90
    x2873 = x1 * (x2844 - x2854)
    x2874 = x1 * (x2840 - x2851)
    x2875 = x2753 * x84 - x2754 * x84 + x2755 * x84
    x2876 = (
        x2864
        + x2865 * x80
        - x85 * (x2861 * x80 + x2872 * x92 - x2875 * x85)
        + x92
        * (
            x2856 * x80
            + x2866
            - x2872 * x85
            + x90
            * (
                x2855 * x80
                - x2871 * x85
                + x2873
                + x84 * (x2852 * x80 - x2869 * x85 + x2874)
            )
        )
    )
    x2877 = x16 * x2860 + x18 * x2735 + x2876
    x2878 = x13 * x1393 + x2877
    x2879 = x1076 * x1415 - x1436 * x29 + x446
    x2880 = x2879 * x68
    x2881 = x1076 * x1418 - x1416 * x29 + x438
    x2882 = x1 * (-x2880 + x2881)
    x2883 = x1076 * x1423
    x2884 = x1427 * x29
    x2885 = x2883 - x2884 + x440
    x2886 = x1076 * x1426
    x2887 = x1440 * x29
    x2888 = x2886 - x2887 + x460
    x2889 = x2888 * x68
    x2890 = -x24 * x2889 + x2885 * x80
    x2891 = x1076 * x1420 - x1432 * x29 + x439
    x2892 = x1076 * x1431 - x1444 * x29 + x459
    x2893 = x2892 * x68
    x2894 = -x24 * x2893 + x2890 * x84 + x2891 * x80
    x2895 = -x24 * x2880 + x2881 * x80 + x2894 * x90
    x2896 = x1 * (x2891 - x2893)
    x2897 = x1 * (x2885 - x2889)
    x2898 = x1076 * x1439
    x2899 = x1089 * x1461
    x2900 = x2898 - x2899 + x476
    x2901 = x2888 * x80 - x2900 * x85
    x2902 = x1076 * x1443
    x2903 = x1089 * x1467
    x2904 = x2902 - x2903 + x481
    x2905 = x2892 * x80 + x2901 * x84 - x2904 * x85
    x2906 = x1076 * x1435 - x1089 * x1472 + x486
    x2907 = (
        x2882
        + x2895 * x80
        - x85 * (x2879 * x80 + x2905 * x90 - x2906 * x85)
        + x90
        * (x2894 * x80 + x2896 - x2905 * x85 + x84 * (x2890 * x80 + x2897 - x2901 * x85))
    )
    x2908 = x17 * x2809 + x2907
    x2909 = x17 * x2810 + x2908
    x2910 = x13 * x1457 + x2909
    x2911 = x1076 * x1476 - x1506 * x29 + x2794 * x84
    x2912 = x2911 * x68
    x2913 = x1076 * x2372 - x1089 * x1476 + x2775 * x84
    x2914 = x1 * (-x2912 + x2913)
    x2915 = x1076 * x1587 - x1089 * x1478 + x2784 * x84
    x2916 = x1076 * x1478 - x1498 * x29 + x2798 * x84
    x2917 = x2916 * x68
    x2918 = -x24 * x2917 + x2915 * x80
    x2919 = x1076 * x1585 - x1089 * x1481 + x2790 * x84
    x2920 = x1076 * x1481 - x1502 * x29 + x2803 * x84
    x2921 = x2920 * x68
    x2922 = -x24 * x2921 + x2918 * x84 + x2919 * x80
    x2923 = -x24 * x2912 + x2913 * x80 + x2922 * x90
    x2924 = x1 * (x2919 - x2921)
    x2925 = x1 * (x2915 - x2917)
    x2926 = x2820 * x84 - x2821 * x84 + x2822 * x84
    x2927 = x2916 * x80 - x2926 * x85
    x2928 = x2824 * x84 - x2825 * x84 + x2826 * x84
    x2929 = x2920 * x80 + x2927 * x84 - x2928 * x85
    x2930 = x2817 * x84 - x2818 * x84 + x2819 * x84
    x2931 = (
        x2914
        + x2923 * x80
        - x85 * (x2911 * x80 + x2929 * x90 - x2930 * x85)
        + x90
        * (x2922 * x80 + x2924 - x2929 * x85 + x84 * (x2918 * x80 + x2925 - x2927 * x85))
    )
    x2932 = x18 * x2809 + x2931
    x2933 = x17 * x2860 + x2932
    x2934 = x13 * x1496 + x2933
    x2935 = x1513 * x2716 - x1513 * x2717 + x2848 * x90
    x2936 = x2935 * x68
    x2937 = x1513 * x2692 - x1513 * x2693 + x2835 * x90
    x2938 = x1 * (-x2936 + x2937)
    x2939 = x1513 * x2699 - x1513 * x2700 + x2840 * x90
    x2940 = x1513 * x2720 - x1513 * x2721 + x2850 * x90
    x2941 = x2940 * x68
    x2942 = -x24 * x2941 + x2939 * x80
    x2943 = x1513 * x2707 - x1513 * x2708 + x2844 * x90
    x2944 = x1513 * x2725 - x1513 * x2726 + x2853 * x90
    x2945 = x2944 * x68
    x2946 = -x24 * x2945 + x2942 * x84 + x2943 * x80
    x2947 = -x24 * x2936 + x2937 * x80 + x2946 * x90
    x2948 = x1 * (x2943 - x2945)
    x2949 = x1 * (x2939 - x2941)
    x2950 = x1513 * x2759 - x1513 * x2760 + x2868 * x90
    x2951 = x2940 * x80 - x2950 * x85
    x2952 = x1513 * x2763 - x1513 * x2764 + x2870 * x90
    x2953 = x2944 * x80 + x2951 * x84 - x2952 * x85
    x2954 = x1513 * x2756 - x1513 * x2757 + x2867 * x90
    x2955 = (
        x2938
        + x2947 * x80
        - x85 * (x2935 * x80 + x2953 * x90 - x2954 * x85)
        + x90
        * (x2946 * x80 + x2948 - x2953 * x85 + x84 * (x2942 * x80 + x2949 - x2951 * x85))
    )
    x2956 = x18 * x2859 + x2955
    x2957 = x18 * x2860 + x2956
    x2958 = x13 * x1531 + x2957
    x2959 = x2787 * x68
    x2960 = x1076 * x1555 - x1544 * x29 + x509
    x2961 = x1 * (-x2959 + x2960)
    x2962 = x2781 * x68
    x2963 = x1076 * x1549 - x1547 * x29 + x505
    x2964 = x1 * (-x2962 + x2963)
    x2965 = -x24 * x2962 + x2963 * x80
    x2966 = -x24 * x2959 + x2960 * x80 + x2965 * x84
    x2967 = (
        -x2792 * x85 + x2961 + x2966 * x80 + x84 * (-x2786 * x85 + x2964 + x2965 * x80)
    )
    x2968 = x16 * x2809 + x16 * (x16 * x2967 + x2809) + x2832
    x2969 = x13 * x1559 + x2968
    x2970 = x2891 * x68
    x2971 = x1076 * x1575 - x1564 * x29 + x531
    x2972 = x1 * (-x2970 + x2971)
    x2973 = x2885 * x68
    x2974 = x1076 * x1569 - x1567 * x29 + x527
    x2975 = x1 * (-x2973 + x2974)
    x2976 = -x24 * x2973 + x2974 * x80
    x2977 = -x24 * x2970 + x2971 * x80 + x2976 * x84
    x2978 = (
        -x2894 * x85 + x2972 + x2977 * x80 + x84 * (-x2890 * x85 + x2975 + x2976 * x80)
    )
    x2979 = x17 * x2967 + x2978
    x2980 = x16 * x2979 + x2908
    x2981 = x13 * x1580 + x2980
    x2982 = x2919 * x68
    x2983 = x1076 * x2446 - x1089 * x1585 + x2787 * x84
    x2984 = x1 * (-x2982 + x2983)
    x2985 = x2915 * x68
    x2986 = x1076 * x1830 - x1089 * x1587 + x2781 * x84
    x2987 = x1 * (-x2985 + x2986)
    x2988 = -x24 * x2985 + x2986 * x80
    x2989 = -x24 * x2982 + x2983 * x80 + x2988 * x84
    x2990 = (
        -x2922 * x85 + x2984 + x2989 * x80 + x84 * (-x2918 * x85 + x2987 + x2988 * x80)
    )
    x2991 = x18 * x2967 + x2990
    x2992 = x16 * x2991 + x2932
    x2993 = x13 * x1597 + x2992
    x2994 = x1076 * x1604 - x1626 * x29 + x576
    x2995 = x2994 * x68
    x2996 = x1076 * x1623 - x1605 * x29 + x574
    x2997 = x1 * (-x2995 + x2996)
    x2998 = x1076 * x1609 - x1618 * x29 + x566
    x2999 = x2998 * x68
    x3000 = x1076 * x1612 - x1610 * x29 + x564
    x3001 = x1 * (-x2999 + x3000)
    x3002 = -x24 * x2999 + x3000 * x80
    x3003 = x1076 * x1617
    x3004 = x1089 * x1635
    x3005 = x3003 - x3004 + x588
    x3006 = x2998 * x80 - x3005 * x85
    x3007 = -x24 * x2995 + x2996 * x80 + x3002 * x84
    x3008 = x1076 * x1625 - x1089 * x1640 + x593
    x3009 = (
        x17 * x2978
        + x2997
        + x3007 * x80
        + x84 * (x3001 + x3002 * x80 - x3006 * x85)
        - x85 * (x2994 * x80 + x3006 * x84 - x3008 * x85)
    )
    x3010 = x17 * x2979 + x3009
    x3011 = x13 * x1631 + x3010
    x3012 = x1076 * x1643 - x1663 * x29 + x2892 * x84
    x3013 = x3012 * x68
    x3014 = x1076 * x2478 - x1089 * x1643 + x2891 * x84
    x3015 = x1 * (-x3013 + x3014)
    x3016 = x1076 * x1645 - x1659 * x29 + x2888 * x84
    x3017 = x3016 * x68
    x3018 = x1076 * x1774 - x1089 * x1645 + x2885 * x84
    x3019 = x1 * (-x3017 + x3018)
    x3020 = -x24 * x3017 + x3018 * x80
    x3021 = x2898 * x84 - x2899 * x84 + x2900 * x84
    x3022 = x3016 * x80 - x3021 * x85
    x3023 = -x24 * x3013 + x3014 * x80 + x3020 * x84
    x3024 = x2902 * x84 - x2903 * x84 + x2904 * x84
    x3025 = (
        x3015
        + x3023 * x80
        + x84 * (x3019 + x3020 * x80 - x3022 * x85)
        - x85 * (x3012 * x80 + x3022 * x84 - x3024 * x85)
    )
    x3026 = x18 * x2978 + x3025
    x3027 = x17 * x2991 + x3026
    x3028 = x13 * x1657 + x3027
    x3029 = x1513 * x2801 - x1513 * x2802 + x2920 * x90
    x3030 = x3029 * x68
    x3031 = x1513 * x2788 - x1513 * x2789 + x2919 * x90
    x3032 = x1 * (-x3030 + x3031)
    x3033 = x1513 * x2796 - x1513 * x2797 + x2916 * x90
    x3034 = x3033 * x68
    x3035 = x1513 * x2782 - x1513 * x2783 + x2915 * x90
    x3036 = x1 * (-x3034 + x3035)
    x3037 = -x24 * x3034 + x3035 * x80
    x3038 = x1513 * x2820 - x1513 * x2821 + x2926 * x90
    x3039 = x3033 * x80 - x3038 * x85
    x3040 = -x24 * x3030 + x3031 * x80 + x3037 * x84
    x3041 = x1513 * x2824 - x1513 * x2825 + x2928 * x90
    x3042 = (
        x3032
        + x3040 * x80
        + x84 * (x3036 + x3037 * x80 - x3039 * x85)
        - x85 * (x3029 * x80 + x3039 * x84 - x3041 * x85)
    )
    x3043 = x18 * x2990 + x3042
    x3044 = x18 * x2991 + x3043
    x3045 = x13 * x1680 + x3044
    x3046 = x13 * x1700
    x3047 = x2843 * x68
    x3048 = x1076 * x2514 - x1089 * x1689 + x2744 * x84
    x3049 = x1 * (-x3047 + x3048)
    x3050 = x2839 * x68
    x3051 = x1076 * x2516 - x1089 * x1691 + x2741 * x84
    x3052 = x1 * (-x3050 + x3051)
    x3053 = -x24 * x3050 + x3051 * x80
    x3054 = -x24 * x3047 + x3048 * x80 + x3053 * x84
    x3055 = (
        -x2846 * x85 + x3049 + x3054 * x80 + x84 * (-x2842 * x85 + x3052 + x3053 * x80)
    )
    x3056 = x16 * x2859 + x16 * (x16 * x3055 + x2859) + x2876
    x3057 = x13 * x1704
    x3058 = x17 * x3055 + x2990
    x3059 = x16 * x3058 + x17 * x2859 + x2931
    x3060 = x13 * x1717
    x3061 = x2943 * x68
    x3062 = x1513 * x2704 - x1513 * x2705 + x2843 * x90
    x3063 = x1 * (-x3061 + x3062)
    x3064 = x2939 * x68
    x3065 = x1513 * x2696 - x1513 * x2697 + x2839 * x90
    x3066 = x1 * (-x3064 + x3065)
    x3067 = -x24 * x3064 + x3065 * x80
    x3068 = -x24 * x3061 + x3062 * x80 + x3067 * x84
    x3069 = (
        -x2946 * x85 + x3063 + x3068 * x80 + x84 * (-x2942 * x85 + x3066 + x3067 * x80)
    )
    x3070 = x18 * x3055 + x3069
    x3071 = x16 * x3070 + x2956
    x3072 = x13 * x1722
    x3073 = x17 * x2990 + x3025
    x3074 = x17 * x3058 + x3073
    x3075 = x13 * x1725
    x3076 = x17 * x3070 + x3043
    x3077 = x13 * x1741
    x3078 = x1728 * x2725 - x1728 * x2726 + x2944 * x92
    x3079 = x3078 * x68
    x3080 = x1728 * x2707 - x1728 * x2708 + x2943 * x92
    x3081 = x1 * (-x3079 + x3080)
    x3082 = x1728 * x2720 - x1728 * x2721 + x2940 * x92
    x3083 = x3082 * x68
    x3084 = x1728 * x2699 - x1728 * x2700 + x2939 * x92
    x3085 = x1 * (-x3083 + x3084)
    x3086 = -x24 * x3083 + x3084 * x80
    x3087 = x1728 * x2759 - x1728 * x2760 + x2950 * x92
    x3088 = x3082 * x80 - x3087 * x85
    x3089 = -x24 * x3079 + x3080 * x80 + x3086 * x84
    x3090 = x1728 * x2763 - x1728 * x2764 + x2952 * x92
    x3091 = (
        x18 * x3069
        + x3081
        + x3089 * x80
        + x84 * (x3085 + x3086 * x80 - x3088 * x85)
        - x85 * (x3078 * x80 + x3088 * x84 - x3090 * x85)
    )
    x3092 = x18 * x3070 + x3091
    x3093 = x2974 * x68
    x3094 = x1076 * x1751 - x1749 * x29 + x605
    x3095 = x1 * (-x3093 + x3094)
    x3096 = -x24 * x3093 + x3094 * x80
    x3097 = -x2976 * x85 + x3095 + x3096 * x80
    x3098 = x16 * x2978 + x16 * (x16 * x3097 + x2978) + x2907
    x3099 = x13 * x1756 + x3098
    x3100 = x3000 * x68
    x3101 = x1076 * x1763 - x1761 * x29 + x619
    x3102 = x1 * (-x3100 + x3101)
    x3103 = -x24 * x3100 + x3101 * x80
    x3104 = -x3002 * x85 + x3102 + x3103 * x80
    x3105 = x17 * x3097 + x3104
    x3106 = x16 * x3105 + x3009
    x3107 = x13 * x1769 + x3106
    x3108 = x3018 * x68
    x3109 = x1076 * x2582 - x1089 * x1774 + x2974 * x84
    x3110 = x1 * (-x3108 + x3109)
    x3111 = -x24 * x3108 + x3109 * x80
    x3112 = -x3020 * x85 + x3110 + x3111 * x80
    x3113 = x18 * x3097 + x3112
    x3114 = x16 * x3113 + x3026
    x3115 = x13 * x1781 + x3114
    x3116 = x1076 * x1788 - x1795 * x29 + x636
    x3117 = x3116 * x68
    x3118 = x1076 * x1791 - x1789 * x29 + x647
    x3119 = x1 * (-x3117 + x3118)
    x3120 = -x24 * x3117 + x3118 * x80
    x3121 = x1076 * x1794 - x1089 * x1802 + x652
    x3122 = (
        x17 * x3104
        + x17 * x3105
        + x3119
        + x3120 * x80
        - x85 * (x3116 * x80 - x3121 * x85)
    )
    x3123 = x13 * x1799 + x3122
    x3124 = x1076 * x1804 - x1813 * x29 + x2998 * x84
    x3125 = x3124 * x68
    x3126 = x1076 * x2600 - x1089 * x1804 + x3000 * x84
    x3127 = x1 * (-x3125 + x3126)
    x3128 = -x24 * x3125 + x3126 * x80
    x3129 = x3003 * x84 - x3004 * x84 + x3005 * x84
    x3130 = x3127 + x3128 * x80 - x85 * (x3124 * x80 - x3129 * x85)
    x3131 = x17 * x3113 + x18 * x3104 + x3130
    x3132 = x13 * x1811 + x3131
    x3133 = x1513 * x2886 - x1513 * x2887 + x3016 * x90
    x3134 = x3133 * x68
    x3135 = x1513 * x2883 - x1513 * x2884 + x3018 * x90
    x3136 = x1 * (-x3134 + x3135)
    x3137 = -x24 * x3134 + x3135 * x80
    x3138 = x1513 * x2898 - x1513 * x2899 + x3021 * x90
    x3139 = x3136 + x3137 * x80 - x85 * (x3133 * x80 - x3138 * x85)
    x3140 = x18 * x3112 + x3139
    x3141 = x18 * x3113 + x3140
    x3142 = x13 * x1824 + x3141
    x3143 = x13 * x1836
    x3144 = x2986 * x68
    x3145 = x1076 * x2619 - x1089 * x1830 + x2963 * x84
    x3146 = x1 * (-x3144 + x3145)
    x3147 = -x24 * x3144 + x3145 * x80
    x3148 = -x2988 * x85 + x3146 + x3147 * x80
    x3149 = x16 * x2990 + x16 * (x16 * x3148 + x2990) + x2931
    x3150 = x13 * x1840
    x3151 = x17 * x3148 + x3112
    x3152 = x16 * x3151 + x3073
    x3153 = x13 * x1849
    x3154 = x3035 * x68
    x3155 = x1513 * x2779 - x1513 * x2780 + x2986 * x90
    x3156 = x1 * (-x3154 + x3155)
    x3157 = -x24 * x3154 + x3155 * x80
    x3158 = -x3037 * x85 + x3156 + x3157 * x80
    x3159 = x18 * x3148 + x3158
    x3160 = x16 * x3159 + x3043
    x3161 = x13 * x1853
    x3162 = x17 * x3112 + x17 * x3151 + x3130
    x3163 = x13 * x1855
    x3164 = x17 * x3159 + x3140
    x3165 = x13 * x1864
    x3166 = x1728 * x2796 - x1728 * x2797 + x3033 * x92
    x3167 = x3166 * x68
    x3168 = x1728 * x2782 - x1728 * x2783 + x3035 * x92
    x3169 = x1 * (-x3167 + x3168)
    x3170 = -x24 * x3167 + x3168 * x80
    x3171 = x1728 * x2820 - x1728 * x2821 + x3038 * x92
    x3172 = x18 * x3158 + x3169 + x3170 * x80 - x85 * (x3166 * x80 - x3171 * x85)
    x3173 = x18 * x3159 + x3172
    x3174 = x13 * x1873
    x3175 = x3065 * x68
    x3176 = x1513 * x2739 - x1513 * x2740 + x3051 * x90
    x3177 = x1 * (-x3175 + x3176)
    x3178 = -x24 * x3175 + x3176 * x80
    x3179 = -x3067 * x85 + x3177 + x3178 * x80
    x3180 = x16 * x3069 + x16 * (x16 * x3179 + x3069) + x2955
    x3181 = x13 * x1877
    x3182 = x17 * x3179 + x3158
    x3183 = x16 * x3182 + x17 * x3069 + x3042
    x3184 = x13 * x1886
    x3185 = x3084 * x68
    x3186 = x1728 * x2696 - x1728 * x2697 + x3065 * x92
    x3187 = x1 * (-x3185 + x3186)
    x3188 = -x24 * x3185 + x3186 * x80
    x3189 = -x3086 * x85 + x3187 + x3188 * x80
    x3190 = x18 * x3179 + x3189
    x3191 = x16 * x3190 + x3091
    x3192 = x13 * x1890
    x3193 = x17 * x3158 + x17 * x3182 + x3139
    x3194 = x13 * x1892
    x3195 = x17 * x3190 + x3172
    x3196 = x13 * x1903
    x3197 = x1895 * x2720 - x1895 * x2721 + x3082 * x94
    x3198 = x3197 * x68
    x3199 = x1895 * x2699 - x1895 * x2700 + x3084 * x94
    x3200 = x1 * (-x3198 + x3199)
    x3201 = -x24 * x3198 + x3199 * x80
    x3202 = x1895 * x2759 - x1895 * x2760 + x3087 * x94
    x3203 = (
        x18 * x3189
        + x18 * x3190
        + x3200
        + x3201 * x80
        - x85 * (x3197 * x80 - x3202 * x85)
    )
    x3204 = x16 * x728
    x3205 = x16 * x686 + x16 * (x3204 + x686) + x744
    x3206 = x17 * x728
    x3207 = x3206 + x812
    x3208 = x16 * x3207 + x17 * x686 + x836
    x3209 = x18 * x3204 + x18 * x686
    x3210 = x17 * x812 + x897
    x3211 = x17 * x3207 + x3210
    x3212 = x18 * x812
    x3213 = x18 * x3206 + x3212
    x3214 = x16 * x950
    x3215 = x16 * x812 + x16 * (x3214 + x812) + x836
    x3216 = x17 * x950
    x3217 = x3216 + x970
    x3218 = x16 * x3217 + x3210
    x3219 = x18 * x3214 + x3212
    x3220 = x17 * x970 + x998
    x3221 = x17 * x3217 + x3220
    x3222 = x18 * x970
    x3223 = x18 * x3216 + x3222
    x3224 = x1027 * x16
    x3225 = x16 * x970 + x16 * (x3224 + x970) + x897
    x3226 = x1027 * x17
    x3227 = x1041 + x3226
    x3228 = x16 * x3227 + x3220
    x3229 = x18 * x3224 + x3222
    x3230 = x1041 * x17 + x1059 + x17 * x3227
    x3231 = x1041 * x18 + x18 * x3226
    x3232 = x16 * x1951
    x3233 = x16 * x1925 + x16 * (x1925 + x3232) + x1956
    x3234 = x12 * x3205 + x3233
    x3235 = x17 * x1951
    x3236 = x1985 + x3235
    x3237 = x16 * x3236 + x17 * x1925 + x2003
    x3238 = x12 * x3208 + x3237
    x3239 = x18 * x1925 + x18 * x3232
    x3240 = x12 * x3209 + x3239
    x3241 = x17 * x1985 + x2031
    x3242 = x17 * x3236 + x3241
    x3243 = x12 * x3211 + x3242
    x3244 = x18 * x1985
    x3245 = x18 * x3235 + x3244
    x3246 = x12 * x3213 + x3245
    x3247 = x19 * x1951
    x3248 = x3247 + x728 * x936
    x3249 = x16 * x2055
    x3250 = x16 * x1985 + x16 * (x1985 + x3249) + x2003
    x3251 = x12 * x3215 + x3250
    x3252 = x17 * x2055
    x3253 = x2068 + x3252
    x3254 = x16 * x3253 + x3241
    x3255 = x12 * x3218 + x3254
    x3256 = x18 * x3249 + x3244
    x3257 = x12 * x3219 + x3256
    x3258 = x17 * x2068 + x2086
    x3259 = x17 * x3253 + x3258
    x3260 = x12 * x3221 + x3259
    x3261 = x18 * x2068
    x3262 = x18 * x3252 + x3261
    x3263 = x12 * x3223 + x3262
    x3264 = x19 * x2055
    x3265 = x3264 + x936 * x950
    x3266 = x16 * x2099
    x3267 = x16 * x2068 + x16 * (x2068 + x3266) + x2031
    x3268 = x12 * x3225 + x3267
    x3269 = x17 * x2099
    x3270 = x2108 + x3269
    x3271 = x16 * x3270 + x3258
    x3272 = x12 * x3228 + x3271
    x3273 = x18 * x3266 + x3261
    x3274 = x12 * x3229 + x3273
    x3275 = x17 * x2108 + x17 * x3270 + x2119
    x3276 = x12 * x3230 + x3275
    x3277 = x18 * x2108 + x18 * x3269
    x3278 = x12 * x3231 + x3277
    x3279 = x19 * x2099
    x3280 = x1027 * x936 + x3279
    x3281 = x16 * x2160 + x16 * (x16 * x2196 + x2160) + x2201
    x3282 = x13 * x3205 + x3281
    x3283 = x17 * x2196 + x2243
    x3284 = x16 * x3283 + x17 * x2160 + x2265
    x3285 = x13 * x3208 + x3284
    x3286 = x18 * x2196 + x2304
    x3287 = x16 * x3286 + x18 * x2160 + x2324
    x3288 = x13 * x3209 + x3287
    x3289 = x17 * x2243 + x2354
    x3290 = x17 * x3283 + x3289
    x3291 = x13 * x3211 + x3290
    x3292 = x18 * x2243 + x2383
    x3293 = x17 * x3286 + x3292
    x3294 = x13 * x3213 + x3293
    x3295 = x18 * x2304 + x2410
    x3296 = x18 * x3286 + x3295
    x3297 = x1511 * x728 + x3296
    x3298 = x16 * x2243 + x16 * (x16 * x2429 + x2243) + x2265
    x3299 = x13 * x3215 + x3298
    x3300 = x17 * x2429 + x2440
    x3301 = x16 * x3300 + x3289
    x3302 = x13 * x3218 + x3301
    x3303 = x18 * x2429 + x2453
    x3304 = x16 * x3303 + x3292
    x3305 = x13 * x3219 + x3304
    x3306 = x17 * x2440 + x2471
    x3307 = x17 * x3300 + x3306
    x3308 = x13 * x3221 + x3307
    x3309 = x18 * x2440 + x2488
    x3310 = x17 * x3303 + x3309
    x3311 = x13 * x3223 + x3310
    x3312 = x18 * x2453 + x2505
    x3313 = x18 * x3303 + x3312
    x3314 = x1511 * x950 + x3313
    x3315 = x16 * x2304 + x16 * (x16 * x2521 + x2304) + x2324
    x3316 = x11 * x3315 + x2524
    x3317 = x17 * x2521 + x2453
    x3318 = x16 * x3317 + x17 * x2304 + x2383
    x3319 = x11 * x3318 + x2527
    x3320 = x18 * x2521 + x2537
    x3321 = x16 * x3320 + x3295
    x3322 = x11 * x3321 + x2541
    x3323 = x17 * x2453 + x2488
    x3324 = x17 * x3317 + x3323
    x3325 = x11 * x3324 + x2544
    x3326 = x17 * x3320 + x3312
    x3327 = x11 * x3326 + x2546
    x3328 = x18 * x2537 + x2561
    x3329 = x18 * x3320 + x3328
    x3330 = x11 * x3329 + x2564
    x3331 = x16 * x2440 + x16 * (x16 * x2569 + x2440) + x2354
    x3332 = x13 * x3225 + x3331
    x3333 = x17 * x2569 + x2576
    x3334 = x16 * x3333 + x3306
    x3335 = x13 * x3228 + x3334
    x3336 = x18 * x2569 + x2585
    x3337 = x16 * x3336 + x3309
    x3338 = x13 * x3229 + x3337
    x3339 = x17 * x2576 + x17 * x3333 + x2594
    x3340 = x13 * x3230 + x3339
    x3341 = x17 * x3336 + x18 * x2576 + x2603
    x3342 = x13 * x3231 + x3341
    x3343 = x18 * x2585 + x2612
    x3344 = x18 * x3336 + x3343
    x3345 = x1027 * x1511 + x3344
    x3346 = x16 * x2453 + x16 * (x16 * x2622 + x2453) + x2383
    x3347 = x11 * x3346 + x2624
    x3348 = x17 * x2622 + x2585
    x3349 = x16 * x3348 + x3323
    x3350 = x11 * x3349 + x2627
    x3351 = x18 * x2622 + x2632
    x3352 = x16 * x3351 + x3312
    x3353 = x11 * x3352 + x2635
    x3354 = x17 * x2585 + x17 * x3348 + x2603
    x3355 = x11 * x3354 + x2637
    x3356 = x17 * x3351 + x3343
    x3357 = x11 * x3356 + x2639
    x3358 = x18 * x2632 + x2645
    x3359 = x18 * x3351 + x3358
    x3360 = x11 * x3359 + x2648
    x3361 = x16 * x2537 + x16 * (x16 * x2654 + x2537) + x2410
    x3362 = x11 * x3361 + x2656
    x3363 = x17 * x2654 + x2632
    x3364 = x16 * x3363 + x17 * x2537 + x2505
    x3365 = x11 * x3364 + x2659
    x3366 = x18 * x2654 + x2665
    x3367 = x16 * x3366 + x3328
    x3368 = x11 * x3367 + x2668
    x3369 = x17 * x2632 + x17 * x3363 + x2612
    x3370 = x11 * x3369 + x2670
    x3371 = x17 * x3366 + x3358
    x3372 = x11 * x3371 + x2672
    x3373 = x18 * x2665 + x18 * x3366 + x2679
    x3374 = x11 * x3373 + x2681
    x3375 = -x1910 * x27 + x1911 * x659 + 2 * x664
    x3376 = x1909 * x659 - x1927 * x27 + 2 * x761
    x3377 = x1913 * x659 - x1915 * x27 + 2 * x705
    x3378 = x1914 * x659 - x1929 * x27 + 2 * x763
    x3379 = x1916 * x659 - x1918 * x27 + 2 * x708
    x3380 = x1917 * x659 - x1931 * x27 + 2 * x766
    x3381 = x1920 * x659 - x1922 * x27 + 2 * x707
    x3382 = x1921 * x659 - x1934 * x27 + 2 * x765
    x3383 = (
        x3375 * x80
        - x3376 * x85
        + x92
        * (
            x3377 * x80
            - x3378 * x85
            + x90 * (x3381 * x80 - x3382 * x85 + x84 * (x3379 * x80 - x3380 * x85))
        )
    )
    x3384 = -x1942 * x27 + x1943 * x659 + 2 * x717
    x3385 = x1945 * x659 - x1946 * x27 + 2 * x731
    x3386 = x1948 * x659 - x1949 * x27 + 2 * x730
    x3387 = (
        -x3377 * x85
        + x3384 * x80
        + x90 * (-x3381 * x85 + x3386 * x80 + x84 * (-x3379 * x85 + x3385 * x80))
    )
    x3388 = x16 * x3387
    x3389 = -x1906 * x27 + x1907 * x659 + 2 * x742
    x3390 = x1926 * x659 - x1958 * x671 + 2 * x779
    x3391 = x1928 * x659 - x1959 * x671 + 2 * x788
    x3392 = x1930 * x659 - x1960 * x671 + 2 * x790
    x3393 = x1933 * x659 - x1962 * x671 + 2 * x789
    x3394 = x1905 * x659 - x1969 * x671 + 2 * x795
    x3395 = (
        x12 * x3233
        + x16 * x3383
        + x16 * (x3383 + x3388)
        + x3389 * x80
        - x3394 * x85
        + x94
        * (
            x3376 * x80
            - x3390 * x85
            + x92
            * (
                x3378 * x80
                - x3391 * x85
                + x90 * (x3382 * x80 - x3393 * x85 + x84 * (x3380 * x80 - x3392 * x85))
            )
        )
    )
    x3396 = x17 * x3387
    x3397 = -x1974 * x27 + x1975 * x659 + x3377 * x84 + 2 * x802
    x3398 = x1973 * x659 - x1987 * x27 + x3378 * x84 + 2 * x850
    x3399 = x1977 * x659 - x1979 * x27 + x3379 * x84 + 2 * x825
    x3400 = x1978 * x659 - x1989 * x27 + x3380 * x84 + 2 * x853
    x3401 = x1981 * x659 - x1983 * x27 + x3381 * x84 + 2 * x824
    x3402 = x1982 * x659 - x1992 * x27 + x3382 * x84 + 2 * x852
    x3403 = (
        x3397 * x80
        - x3398 * x85
        + x90 * (x3401 * x80 - x3402 * x85 + x84 * (x3399 * x80 - x3400 * x85))
    )
    x3404 = x3396 + x3403
    x3405 = -x2000 * x27 + x2001 * x659 + x3376 * x84 + 2 * x835
    x3406 = x1986 * x659 - x2005 * x671 + x3391 * x84 + 2 * x865
    x3407 = x1988 * x659 - x2006 * x671 + x3392 * x84 + 2 * x873
    x3408 = x1991 * x659 - x2008 * x671 + x3393 * x84 + 2 * x872
    x3409 = x1999 * x659 - x2013 * x671 + x3390 * x84 + 2 * x877
    x3410 = (
        x3405 * x80
        - x3409 * x85
        + x92
        * (
            x3398 * x80
            - x3406 * x85
            + x90 * (x3402 * x80 - x3408 * x85 + x84 * (x3400 * x80 - x3407 * x85))
        )
    )
    x3411 = x12 * x3237 + x16 * x3404 + x17 * x3383 + x3410
    x3412 = x12 * x3239 + x18 * x3383 + x18 * x3388
    x3413 = -x2020 * x27 + x2021 * x659 + x3398 * x90 + 2 * x887
    x3414 = x2023 * x659 - x2025 * x27 + x3400 * x90 + 2 * x909
    x3415 = x2024 * x659 - x2034 * x671 + x3407 * x90 + 2 * x918
    x3416 = x2027 * x659 - x2029 * x27 + x3402 * x90 + 2 * x908
    x3417 = x2028 * x659 - x2036 * x671 + x3408 * x90 + 2 * x922
    x3418 = x2019 * x659 - x2038 * x671 + x3406 * x90 + 2 * x926
    x3419 = (
        x3413 * x80
        - x3418 * x85
        + x90 * (x3416 * x80 - x3417 * x85 + x84 * (x3414 * x80 - x3415 * x85))
    )
    x3420 = x17 * x3403 + x3419
    x3421 = x12 * x3242 + x17 * x3404 + x3420
    x3422 = x18 * x3403
    x3423 = x12 * x3245 + x18 * x3396 + x3422
    x3424 = x12 * x3247 + x19 * x3387
    x3425 = -x2051 * x27 + x2052 * x659 + x3385 * x84 + 2 * x945
    x3426 = -x2048 * x27 + x2049 * x659 + x3386 * x84 + 2 * x942
    x3427 = -x3401 * x85 + x3426 * x80 + x84 * (-x3399 * x85 + x3425 * x80)
    x3428 = x16 * x3427
    x3429 = x12 * x3250 + x16 * x3403 + x16 * (x3403 + x3428) + x3410
    x3430 = x17 * x3427
    x3431 = -x2064 * x27 + x2065 * x659 + x3399 * x90 + 2 * x965
    x3432 = -x2061 * x27 + x2062 * x659 + x3401 * x90 + 2 * x962
    x3433 = -x3416 * x85 + x3432 * x80 + x84 * (-x3414 * x85 + x3431 * x80)
    x3434 = x3430 + x3433
    x3435 = x12 * x3254 + x16 * x3434 + x3420
    x3436 = x12 * x3256 + x18 * x3428 + x3422
    x3437 = -x2080 * x27 + x2081 * x659 + x3414 * x92 + 2 * x990
    x3438 = 2 * x1007 + x2079 * x659 - x2084 * x671 + x3415 * x92
    x3439 = -x2076 * x27 + x2077 * x659 + x3416 * x92 + 2 * x986
    x3440 = 2 * x1011 + x2075 * x659 - x2087 * x671 + x3417 * x92
    x3441 = x17 * x3433 + x3439 * x80 - x3440 * x85 + x84 * (x3437 * x80 - x3438 * x85)
    x3442 = x12 * x3259 + x17 * x3434 + x3441
    x3443 = x18 * x3433
    x3444 = x12 * x3262 + x18 * x3430 + x3443
    x3445 = x12 * x3264 + x19 * x3427
    x3446 = 2 * x1025 - x2096 * x27 + x2097 * x659 + x3425 * x90
    x3447 = -x3431 * x85 + x3446 * x80
    x3448 = x16 * x3447
    x3449 = x12 * x3267 + x16 * x3433 + x16 * (x3433 + x3448) + x3419
    x3450 = x17 * x3447
    x3451 = 2 * x1039 - x2105 * x27 + x2106 * x659 + x3431 * x92
    x3452 = -x3437 * x85 + x3451 * x80
    x3453 = x3450 + x3452
    x3454 = x12 * x3271 + x16 * x3453 + x3441
    x3455 = x12 * x3273 + x18 * x3448 + x3443
    x3456 = 2 * x1057 - x2116 * x27 + x2117 * x659 + x3437 * x94
    x3457 = 2 * x1067 + x2115 * x659 - x2120 * x671 + x3438 * x94
    x3458 = x12 * x3275 + x17 * x3452 + x17 * x3453 + x3456 * x80 - x3457 * x85
    x3459 = x12 * x3277 + x18 * x3450 + x18 * x3452
    x3460 = x12 * x3279 + x19 * x3447
    x3461 = x1081 - x2134 * x27 + x2136 * x659
    x3462 = x1197 + x2133 * x659 - x2162 * x27
    x3463 = x1132 + x2138 * x659 - x2142 * x27
    x3464 = x1199 + x2141 * x659 - x2166 * x27
    x3465 = x1135 + x2145 * x659 - x2149 * x27
    x3466 = x1202 + x2148 * x659 - x2170 * x27
    x3467 = x1134 + x2153 * x659 - x2157 * x27
    x3468 = x1201 + x2156 * x659 - x2175 * x27
    x3469 = (
        x3461 * x80
        - x3462 * x85
        + x92
        * (
            x3463 * x80
            - x3464 * x85
            + x90 * (x3467 * x80 - x3468 * x85 + x84 * (x3465 * x80 - x3466 * x85))
        )
    )
    x3470 = x1144 - x2184 * x27 + x2186 * x659
    x3471 = x1160 + x2189 * x659 - x2190 * x27
    x3472 = x1159 + x2193 * x659 - x2194 * x27
    x3473 = (
        -x3463 * x85
        + x3470 * x80
        + x90 * (-x3467 * x85 + x3472 * x80 + x84 * (-x3465 * x85 + x3471 * x80))
    )
    x3474 = x1170 - x2129 * x27 + x2200 * x659
    x3475 = x1214 + x2161 * x659 - x2205 * x671
    x3476 = x1231 + x2165 * x659 - x2208 * x671
    x3477 = x1233 + x2169 * x659 - x2211 * x671
    x3478 = x1232 + x2174 * x659 - x2215 * x671
    x3479 = x1238 + x2128 * x659 - x2222 * x671
    x3480 = (
        x16 * x3469
        + x16 * (x16 * x3473 + x3469)
        + x3474 * x80
        - x3479 * x85
        + x94
        * (
            x3462 * x80
            - x3475 * x85
            + x92
            * (
                x3464 * x80
                - x3476 * x85
                + x90 * (x3468 * x80 - x3478 * x85 + x84 * (x3466 * x80 - x3477 * x85))
            )
        )
    )
    x3481 = x13 * x3233 + x3480
    x3482 = x1245 - x2226 * x27 + x2227 * x659 + x3463 * x84
    x3483 = x1315 + x2225 * x659 - x2245 * x27 + x3464 * x84
    x3484 = x1282 + x2231 * x659 - x2235 * x27 + x3465 * x84
    x3485 = x1318 + x2234 * x659 - x2249 * x27 + x3466 * x84
    x3486 = x1281 + x2237 * x659 - x2241 * x27 + x3467 * x84
    x3487 = x1317 + x2240 * x659 - x2254 * x27 + x3468 * x84
    x3488 = (
        x3482 * x80
        - x3483 * x85
        + x90 * (x3486 * x80 - x3487 * x85 + x84 * (x3484 * x80 - x3485 * x85))
    )
    x3489 = x17 * x3473 + x3488
    x3490 = x1293 - x2262 * x27 + x2263 * x659 + x3462 * x84
    x3491 = x1329 + x2244 * x659 - x2269 * x671 + x3476 * x84
    x3492 = x1343 + x2248 * x659 - x2272 * x671 + x3477 * x84
    x3493 = x1342 + x2253 * x659 - x2276 * x671 + x3478 * x84
    x3494 = x1347 + x2261 * x659 - x2281 * x671 + x3475 * x84
    x3495 = (
        x3490 * x80
        - x3494 * x85
        + x92
        * (
            x3483 * x80
            - x3491 * x85
            + x90 * (x3487 * x80 - x3493 * x85 + x84 * (x3485 * x80 - x3492 * x85))
        )
    )
    x3496 = x16 * x3489 + x17 * x3469 + x3495
    x3497 = x13 * x3237 + x3496
    x3498 = x1352 - x2288 * x27 + x2291 * x659
    x3499 = x1383 + x2287 * x659 - x2306 * x27
    x3500 = x1368 + x2298 * x659 - x2301 * x27
    x3501 = x1386 + x2300 * x659 - x2310 * x27
    x3502 = x1367 + x2293 * x659 - x2296 * x27
    x3503 = x1385 + x2295 * x659 - x2308 * x27
    x3504 = (
        x3498 * x80
        - x3499 * x85
        + x90 * (x3502 * x80 - x3503 * x85 + x84 * (x3500 * x80 - x3501 * x85))
    )
    x3505 = x18 * x3473 + x3504
    x3506 = x1376 - x2320 * x27 + x2323 * x659
    x3507 = x1398 + x2305 * x659 - x2326 * x671
    x3508 = x1405 + x2309 * x659 - x2328 * x671
    x3509 = x1403 + x2307 * x659 - x2327 * x671
    x3510 = x1410 + x2319 * x659 - x2334 * x671
    x3511 = (
        x3506 * x80
        - x3510 * x85
        + x92
        * (
            x3499 * x80
            - x3507 * x85
            + x90 * (x3503 * x80 - x3509 * x85 + x84 * (x3501 * x80 - x3508 * x85))
        )
    )
    x3512 = x16 * x3505 + x18 * x3469 + x3511
    x3513 = x13 * x3239 + x3512
    x3514 = x1417 - x2339 * x27 + x2340 * x659 + x3483 * x90
    x3515 = x1450 + x2344 * x659 - x2348 * x27 + x3485 * x90
    x3516 = x1459 + x2347 * x659 - x2359 * x671 + x3492 * x90
    x3517 = x1449 + x2350 * x659 - x2352 * x27 + x3487 * x90
    x3518 = x1465 + x2351 * x659 - x2363 * x671 + x3493 * x90
    x3519 = x1471 + x2338 * x659 - x2365 * x671 + x3491 * x90
    x3520 = (
        x3514 * x80
        - x3519 * x85
        + x90 * (x3517 * x80 - x3518 * x85 + x84 * (x3515 * x80 - x3516 * x85))
    )
    x3521 = x17 * x3488 + x3520
    x3522 = x17 * x3489 + x3521
    x3523 = x13 * x3242 + x3522
    x3524 = x1477 - x2371 * x27 + x2373 * x659 + x3499 * x84
    x3525 = x1489 + x2376 * x659 - x2378 * x27 + x3501 * x84
    x3526 = x1499 + x2377 * x659 - x2386 * x671 + x3508 * x84
    x3527 = x1488 + x2375 * x659 - x2381 * x27 + x3503 * x84
    x3528 = x1503 + x2380 * x659 - x2388 * x671 + x3509 * x84
    x3529 = x1507 + x2370 * x659 - x2390 * x671 + x3507 * x84
    x3530 = (
        x3524 * x80
        - x3529 * x85
        + x90 * (x3527 * x80 - x3528 * x85 + x84 * (x3525 * x80 - x3526 * x85))
    )
    x3531 = x18 * x3488 + x3530
    x3532 = x17 * x3505 + x3531
    x3533 = x13 * x3245 + x3532
    x3534 = x1514 - x2397 * x27 + x2399 * x659
    x3535 = x1524 + x2405 * x659 - x2407 * x27
    x3536 = x1533 + x2406 * x659 - x2413 * x671
    x3537 = x1523 + x2401 * x659 - x2403 * x27
    x3538 = x1536 + x2402 * x659 - x2415 * x671
    x3539 = x1539 + x2396 * x659 - x2417 * x671
    x3540 = (
        x3534 * x80
        - x3539 * x85
        + x90 * (x3537 * x80 - x3538 * x85 + x84 * (x3535 * x80 - x3536 * x85))
    )
    x3541 = x18 * x3504 + x3540
    x3542 = x18 * x3505 + x3541
    x3543 = x13 * x3247 + x3542
    x3544 = x1548 - x2425 * x27 + x2426 * x659 + x3471 * x84
    x3545 = x1545 - x2422 * x27 + x2423 * x659 + x3472 * x84
    x3546 = -x3486 * x85 + x3545 * x80 + x84 * (-x3484 * x85 + x3544 * x80)
    x3547 = x16 * x3488 + x16 * (x16 * x3546 + x3488) + x3495
    x3548 = x13 * x3250 + x3547
    x3549 = x1568 - x2436 * x27 + x2437 * x659 + x3484 * x90
    x3550 = x1565 - x2433 * x27 + x2434 * x659 + x3486 * x90
    x3551 = -x3517 * x85 + x3550 * x80 + x84 * (-x3515 * x85 + x3549 * x80)
    x3552 = x17 * x3546 + x3551
    x3553 = x16 * x3552 + x3521
    x3554 = x13 * x3254 + x3553
    x3555 = x1588 - x2449 * x27 + x2450 * x659 + x3500 * x84
    x3556 = x1586 - x2445 * x27 + x2447 * x659 + x3502 * x84
    x3557 = -x3527 * x85 + x3556 * x80 + x84 * (-x3525 * x85 + x3555 * x80)
    x3558 = x18 * x3546 + x3557
    x3559 = x16 * x3558 + x3531
    x3560 = x13 * x3256 + x3559
    x3561 = x1611 - x2463 * x27 + x2464 * x659 + x3515 * x92
    x3562 = x1633 + x2462 * x659 - x2469 * x671 + x3516 * x92
    x3563 = x1606 - x2459 * x27 + x2460 * x659 + x3517 * x92
    x3564 = x1639 + x2458 * x659 - x2472 * x671 + x3518 * x92
    x3565 = x17 * x3551 + x3563 * x80 - x3564 * x85 + x84 * (x3561 * x80 - x3562 * x85)
    x3566 = x17 * x3552 + x3565
    x3567 = x13 * x3259 + x3566
    x3568 = x1646 - x2482 * x27 + x2483 * x659 + x3525 * x90
    x3569 = x1660 + x2481 * x659 - x2486 * x671 + x3526 * x90
    x3570 = x1644 - x2477 * x27 + x2479 * x659 + x3527 * x90
    x3571 = x1664 + x2476 * x659 - x2489 * x671 + x3528 * x90
    x3572 = x3570 * x80 - x3571 * x85 + x84 * (x3568 * x80 - x3569 * x85)
    x3573 = x18 * x3551 + x3572
    x3574 = x17 * x3558 + x3573
    x3575 = x13 * x3262 + x3574
    x3576 = x1669 - x2499 * x27 + x2500 * x659 + x3535 * x84
    x3577 = x1682 + x2498 * x659 - x2503 * x671 + x3536 * x84
    x3578 = x1668 - x2495 * x27 + x2496 * x659 + x3537 * x84
    x3579 = x1685 + x2494 * x659 - x2506 * x671 + x3538 * x84
    x3580 = x3578 * x80 - x3579 * x85 + x84 * (x3576 * x80 - x3577 * x85)
    x3581 = x18 * x3557 + x3580
    x3582 = x18 * x3558 + x3581
    x3583 = x13 * x3264 + x3582
    x3584 = x1692 + x2518 * x659 - x2519 * x27
    x3585 = x1690 - x2512 * x27 + x2515 * x659
    x3586 = -x3502 * x85 + x3585 * x80 + x84 * (-x3500 * x85 + x3584 * x80)
    x3587 = x16 * x3504 + x16 * (x16 * x3586 + x3504) + x3511
    x3588 = x12 * x3315 + x3587
    x3589 = x17 * x3586 + x3557
    x3590 = x16 * x3589 + x17 * x3504 + x3530
    x3591 = x12 * x3318 + x3590
    x3592 = x1708 + x2534 * x659 - x2535 * x27
    x3593 = x1707 - x2530 * x27 + x2532 * x659
    x3594 = -x3537 * x85 + x3593 * x80 + x84 * (-x3535 * x85 + x3592 * x80)
    x3595 = x18 * x3586 + x3594
    x3596 = x16 * x3595 + x3541
    x3597 = x12 * x3321 + x3596
    x3598 = x17 * x3557 + x3572
    x3599 = x17 * x3589 + x3598
    x3600 = x12 * x3324 + x3599
    x3601 = x17 * x3595 + x3581
    x3602 = x12 * x3326 + x3601
    x3603 = x1730 - x2554 * x27 + x2556 * x659
    x3604 = x1742 + x2553 * x659 - x2558 * x671
    x3605 = x1729 - x2550 * x27 + x2560 * x659
    x3606 = x1745 + x2549 * x659 - x2562 * x671
    x3607 = x18 * x3594 + x3605 * x80 - x3606 * x85 + x84 * (x3603 * x80 - x3604 * x85)
    x3608 = x18 * x3595 + x3607
    x3609 = x12 * x3329 + x3608
    x3610 = x1750 - x2566 * x27 + x2567 * x659 + x3544 * x90
    x3611 = -x3549 * x85 + x3610 * x80
    x3612 = x16 * x3551 + x16 * (x16 * x3611 + x3551) + x3520
    x3613 = x13 * x3267 + x3612
    x3614 = x1762 - x2573 * x27 + x2574 * x659 + x3549 * x92
    x3615 = -x3561 * x85 + x3614 * x80
    x3616 = x17 * x3611 + x3615
    x3617 = x16 * x3616 + x3565
    x3618 = x13 * x3271 + x3617
    x3619 = x1775 - x2581 * x27 + x2583 * x659 + x3555 * x90
    x3620 = -x3568 * x85 + x3619 * x80
    x3621 = x18 * x3611 + x3620
    x3622 = x16 * x3621 + x3573
    x3623 = x13 * x3273 + x3622
    x3624 = x1790 - x2591 * x27 + x2592 * x659 + x3561 * x94
    x3625 = x1801 + x2590 * x659 - x2595 * x671 + x3562 * x94
    x3626 = x17 * x3615 + x17 * x3616 + x3624 * x80 - x3625 * x85
    x3627 = x13 * x3275 + x3626
    x3628 = x1805 - x2599 * x27 + x2601 * x659 + x3568 * x92
    x3629 = x1814 + x2598 * x659 - x2604 * x671 + x3569 * x92
    x3630 = x3628 * x80 - x3629 * x85
    x3631 = x17 * x3621 + x18 * x3615 + x3630
    x3632 = x13 * x3277 + x3631
    x3633 = x1817 - x2609 * x27 + x2610 * x659 + x3576 * x90
    x3634 = x1826 + x2608 * x659 - x2613 * x671 + x3577 * x90
    x3635 = x3633 * x80 - x3634 * x85
    x3636 = x18 * x3620 + x3635
    x3637 = x18 * x3621 + x3636
    x3638 = x13 * x3279 + x3637
    x3639 = x1831 - x2618 * x27 + x2620 * x659 + x3584 * x84
    x3640 = -x3555 * x85 + x3639 * x80
    x3641 = x16 * x3557 + x16 * (x16 * x3640 + x3557) + x3530
    x3642 = x12 * x3346 + x3641
    x3643 = x17 * x3640 + x3620
    x3644 = x16 * x3643 + x3598
    x3645 = x12 * x3349 + x3644
    x3646 = x1843 - x2629 * x27 + x2630 * x659 + x3592 * x84
    x3647 = -x3576 * x85 + x3646 * x80
    x3648 = x18 * x3640 + x3647
    x3649 = x16 * x3648 + x3581
    x3650 = x12 * x3352 + x3649
    x3651 = x17 * x3620 + x17 * x3643 + x3630
    x3652 = x12 * x3354 + x3651
    x3653 = x17 * x3648 + x3636
    x3654 = x12 * x3356 + x3653
    x3655 = x1857 - x2642 * x27 + x2643 * x659 + x3603 * x84
    x3656 = x1865 + x2641 * x659 - x2646 * x671 + x3604 * x84
    x3657 = x18 * x3647 + x3655 * x80 - x3656 * x85
    x3658 = x18 * x3648 + x3657
    x3659 = x12 * x3359 + x3658
    x3660 = x1868 - x2651 * x27 + x2653 * x659
    x3661 = -x3592 * x85 + x3660 * x80
    x3662 = x16 * x3594 + x16 * (x16 * x3661 + x3594) + x3540
    x3663 = x12 * x3361 + x3662
    x3664 = x17 * x3661 + x3647
    x3665 = x16 * x3664 + x17 * x3594 + x3580
    x3666 = x12 * x3364 + x3665
    x3667 = x1880 - x2662 * x27 + x2664 * x659
    x3668 = -x3603 * x85 + x3667 * x80
    x3669 = x18 * x3661 + x3668
    x3670 = x16 * x3669 + x3607
    x3671 = x12 * x3367 + x3670
    x3672 = x17 * x3647 + x17 * x3664 + x3635
    x3673 = x12 * x3369 + x3672
    x3674 = x17 * x3669 + x3657
    x3675 = x12 * x3371 + x3674
    x3676 = x1899 - x2676 * x27 + x2678 * x659
    x3677 = x1902 + x2675 * x659 - x2680 * x671
    x3678 = x18 * x3668 + x18 * x3669 + x3676 * x80 - x3677 * x85
    x3679 = x12 * x3373 + x3678
    x3680 = -x2688 * x27 + x2689 * x659
    x3681 = x2687 * x659 - x27 * x2715
    x3682 = x2691 * x659 - x2695 * x27
    x3683 = x2694 * x659 - x27 * x2719
    x3684 = x2698 * x659 - x27 * x2702
    x3685 = -x27 * x2723 + x2701 * x659
    x3686 = -x27 * x2710 + x2706 * x659
    x3687 = -x27 * x2728 + x2709 * x659
    x3688 = (
        x3680 * x80
        - x3681 * x85
        + x92
        * (
            x3682 * x80
            - x3683 * x85
            + x90 * (x3686 * x80 - x3687 * x85 + x84 * (x3684 * x80 - x3685 * x85))
        )
    )
    x3689 = -x27 * x2736 + x2737 * x659
    x3690 = -x27 * x2742 + x2741 * x659
    x3691 = -x27 * x2745 + x2744 * x659
    x3692 = (
        -x3682 * x85
        + x3689 * x80
        + x90 * (-x3686 * x85 + x3691 * x80 + x84 * (-x3684 * x85 + x3690 * x80))
    )
    x3693 = -x2684 * x27 + x2685 * x659
    x3694 = x2714 * x659 - x2755 * x671
    x3695 = x2718 * x659 - x2758 * x671
    x3696 = x2722 * x659 - x2761 * x671
    x3697 = x2727 * x659 - x2765 * x671
    x3698 = x2683 * x659 - x2772 * x671
    x3699 = (
        x16 * x3688
        + x16 * (x16 * x3692 + x3688)
        + x3693 * x80
        - x3698 * x85
        + x94
        * (
            x3681 * x80
            - x3694 * x85
            + x92
            * (
                x3683 * x80
                - x3695 * x85
                + x90 * (x3687 * x80 - x3697 * x85 + x84 * (x3685 * x80 - x3696 * x85))
            )
        )
    )
    x3700 = x13 * x3281 + x3699
    x3701 = -x27 * x2776 + x2777 * x659 + x3682 * x84
    x3702 = -x27 * x2795 + x2775 * x659 + x3683 * x84
    x3703 = -x27 * x2785 + x2781 * x659 + x3684 * x84
    x3704 = -x27 * x2799 + x2784 * x659 + x3685 * x84
    x3705 = -x27 * x2791 + x2787 * x659 + x3686 * x84
    x3706 = -x27 * x2804 + x2790 * x659 + x3687 * x84
    x3707 = (
        x3701 * x80
        - x3702 * x85
        + x90 * (x3705 * x80 - x3706 * x85 + x84 * (x3703 * x80 - x3704 * x85))
    )
    x3708 = x17 * x3692 + x3707
    x3709 = -x27 * x2812 + x2813 * x659 + x3681 * x84
    x3710 = x2794 * x659 - x2819 * x671 + x3695 * x84
    x3711 = x2798 * x659 - x2822 * x671 + x3696 * x84
    x3712 = x2803 * x659 - x2826 * x671 + x3697 * x84
    x3713 = x2811 * x659 - x2831 * x671 + x3694 * x84
    x3714 = (
        x3709 * x80
        - x3713 * x85
        + x92
        * (
            x3702 * x80
            - x3710 * x85
            + x90 * (x3706 * x80 - x3712 * x85 + x84 * (x3704 * x80 - x3711 * x85))
        )
    )
    x3715 = x16 * x3708 + x17 * x3688 + x3714
    x3716 = x13 * x3284 + x3715
    x3717 = -x27 * x2836 + x2837 * x659
    x3718 = -x27 * x2849 + x2835 * x659
    x3719 = -x27 * x2841 + x2839 * x659
    x3720 = -x27 * x2851 + x2840 * x659
    x3721 = -x27 * x2845 + x2843 * x659
    x3722 = -x27 * x2854 + x2844 * x659
    x3723 = (
        x3717 * x80
        - x3718 * x85
        + x90 * (x3721 * x80 - x3722 * x85 + x84 * (x3719 * x80 - x3720 * x85))
    )
    x3724 = x18 * x3692 + x3723
    x3725 = -x27 * x2862 + x2863 * x659
    x3726 = x2848 * x659 - x2867 * x671
    x3727 = x2850 * x659 - x2868 * x671
    x3728 = x2853 * x659 - x2870 * x671
    x3729 = x2861 * x659 - x2875 * x671
    x3730 = (
        x3725 * x80
        - x3729 * x85
        + x92
        * (
            x3718 * x80
            - x3726 * x85
            + x90 * (x3722 * x80 - x3728 * x85 + x84 * (x3720 * x80 - x3727 * x85))
        )
    )
    x3731 = x16 * x3724 + x18 * x3688 + x3730
    x3732 = x13 * x3287 + x3731
    x3733 = -x27 * x2880 + x2881 * x659 + x3702 * x90
    x3734 = -x27 * x2889 + x2885 * x659 + x3704 * x90
    x3735 = x2888 * x659 - x2900 * x671 + x3711 * x90
    x3736 = -x27 * x2893 + x2891 * x659 + x3706 * x90
    x3737 = x2892 * x659 - x2904 * x671 + x3712 * x90
    x3738 = x2879 * x659 - x2906 * x671 + x3710 * x90
    x3739 = (
        x3733 * x80
        - x3738 * x85
        + x90 * (x3736 * x80 - x3737 * x85 + x84 * (x3734 * x80 - x3735 * x85))
    )
    x3740 = x17 * x3707 + x3739
    x3741 = x17 * x3708 + x3740
    x3742 = x13 * x3290 + x3741
    x3743 = -x27 * x2912 + x2913 * x659 + x3718 * x84
    x3744 = -x27 * x2917 + x2915 * x659 + x3720 * x84
    x3745 = x2916 * x659 - x2926 * x671 + x3727 * x84
    x3746 = -x27 * x2921 + x2919 * x659 + x3722 * x84
    x3747 = x2920 * x659 - x2928 * x671 + x3728 * x84
    x3748 = x2911 * x659 - x2930 * x671 + x3726 * x84
    x3749 = (
        x3743 * x80
        - x3748 * x85
        + x90 * (x3746 * x80 - x3747 * x85 + x84 * (x3744 * x80 - x3745 * x85))
    )
    x3750 = x18 * x3707 + x3749
    x3751 = x17 * x3724 + x3750
    x3752 = x13 * x3293 + x3751
    x3753 = -x27 * x2936 + x2937 * x659
    x3754 = -x27 * x2941 + x2939 * x659
    x3755 = x2940 * x659 - x2950 * x671
    x3756 = -x27 * x2945 + x2943 * x659
    x3757 = x2944 * x659 - x2952 * x671
    x3758 = x2935 * x659 - x2954 * x671
    x3759 = (
        x3753 * x80
        - x3758 * x85
        + x90 * (x3756 * x80 - x3757 * x85 + x84 * (x3754 * x80 - x3755 * x85))
    )
    x3760 = x18 * x3723 + x3759
    x3761 = x18 * x3724 + x3760
    x3762 = x13 * x3296 + x3761
    x3763 = -x27 * x2962 + x2963 * x659 + x3690 * x84
    x3764 = -x27 * x2959 + x2960 * x659 + x3691 * x84
    x3765 = -x3705 * x85 + x3764 * x80 + x84 * (-x3703 * x85 + x3763 * x80)
    x3766 = x16 * x3707 + x16 * (x16 * x3765 + x3707) + x3714
    x3767 = x13 * x3298 + x3766
    x3768 = -x27 * x2973 + x2974 * x659 + x3703 * x90
    x3769 = -x27 * x2970 + x2971 * x659 + x3705 * x90
    x3770 = -x3736 * x85 + x3769 * x80 + x84 * (-x3734 * x85 + x3768 * x80)
    x3771 = x17 * x3765 + x3770
    x3772 = x16 * x3771 + x3740
    x3773 = x13 * x3301 + x3772
    x3774 = -x27 * x2985 + x2986 * x659 + x3719 * x84
    x3775 = -x27 * x2982 + x2983 * x659 + x3721 * x84
    x3776 = -x3746 * x85 + x3775 * x80 + x84 * (-x3744 * x85 + x3774 * x80)
    x3777 = x18 * x3765 + x3776
    x3778 = x16 * x3777 + x3750
    x3779 = x13 * x3304 + x3778
    x3780 = -x27 * x2999 + x3000 * x659 + x3734 * x92
    x3781 = x2998 * x659 - x3005 * x671 + x3735 * x92
    x3782 = -x27 * x2995 + x2996 * x659 + x3736 * x92
    x3783 = x2994 * x659 - x3008 * x671 + x3737 * x92
    x3784 = x17 * x3770 + x3782 * x80 - x3783 * x85 + x84 * (x3780 * x80 - x3781 * x85)
    x3785 = x17 * x3771 + x3784
    x3786 = x13 * x3307 + x3785
    x3787 = -x27 * x3017 + x3018 * x659 + x3744 * x90
    x3788 = x3016 * x659 - x3021 * x671 + x3745 * x90
    x3789 = -x27 * x3013 + x3014 * x659 + x3746 * x90
    x3790 = x3012 * x659 - x3024 * x671 + x3747 * x90
    x3791 = x3789 * x80 - x3790 * x85 + x84 * (x3787 * x80 - x3788 * x85)
    x3792 = x18 * x3770 + x3791
    x3793 = x17 * x3777 + x3792
    x3794 = x13 * x3310 + x3793
    x3795 = -x27 * x3034 + x3035 * x659 + x3754 * x84
    x3796 = x3033 * x659 - x3038 * x671 + x3755 * x84
    x3797 = -x27 * x3030 + x3031 * x659 + x3756 * x84
    x3798 = x3029 * x659 - x3041 * x671 + x3757 * x84
    x3799 = x3797 * x80 - x3798 * x85 + x84 * (x3795 * x80 - x3796 * x85)
    x3800 = x18 * x3776 + x3799
    x3801 = x18 * x3777 + x3800
    x3802 = x13 * x3313 + x3801
    x3803 = x13 * x3315
    x3804 = -x27 * x3050 + x3051 * x659
    x3805 = -x27 * x3047 + x3048 * x659
    x3806 = -x3721 * x85 + x3805 * x80 + x84 * (-x3719 * x85 + x3804 * x80)
    x3807 = x16 * x3723 + x16 * (x16 * x3806 + x3723) + x3730
    x3808 = x13 * x3318
    x3809 = x17 * x3806 + x3776
    x3810 = x16 * x3809 + x17 * x3723 + x3749
    x3811 = x13 * x3321
    x3812 = -x27 * x3064 + x3065 * x659
    x3813 = -x27 * x3061 + x3062 * x659
    x3814 = -x3756 * x85 + x3813 * x80 + x84 * (-x3754 * x85 + x3812 * x80)
    x3815 = x18 * x3806 + x3814
    x3816 = x16 * x3815 + x3760
    x3817 = x13 * x3324
    x3818 = x17 * x3776 + x3791
    x3819 = x17 * x3809 + x3818
    x3820 = x13 * x3326
    x3821 = x17 * x3815 + x3800
    x3822 = x13 * x3329
    x3823 = -x27 * x3083 + x3084 * x659
    x3824 = x3082 * x659 - x3087 * x671
    x3825 = -x27 * x3079 + x3080 * x659
    x3826 = x3078 * x659 - x3090 * x671
    x3827 = x18 * x3814 + x3825 * x80 - x3826 * x85 + x84 * (x3823 * x80 - x3824 * x85)
    x3828 = x18 * x3815 + x3827
    x3829 = -x27 * x3093 + x3094 * x659 + x3763 * x90
    x3830 = -x3768 * x85 + x3829 * x80
    x3831 = x16 * x3770 + x16 * (x16 * x3830 + x3770) + x3739
    x3832 = x13 * x3331 + x3831
    x3833 = -x27 * x3100 + x3101 * x659 + x3768 * x92
    x3834 = -x3780 * x85 + x3833 * x80
    x3835 = x17 * x3830 + x3834
    x3836 = x16 * x3835 + x3784
    x3837 = x13 * x3334 + x3836
    x3838 = -x27 * x3108 + x3109 * x659 + x3774 * x90
    x3839 = -x3787 * x85 + x3838 * x80
    x3840 = x18 * x3830 + x3839
    x3841 = x16 * x3840 + x3792
    x3842 = x13 * x3337 + x3841
    x3843 = -x27 * x3117 + x3118 * x659 + x3780 * x94
    x3844 = x3116 * x659 - x3121 * x671 + x3781 * x94
    x3845 = x17 * x3834 + x17 * x3835 + x3843 * x80 - x3844 * x85
    x3846 = x13 * x3339 + x3845
    x3847 = -x27 * x3125 + x3126 * x659 + x3787 * x92
    x3848 = x3124 * x659 - x3129 * x671 + x3788 * x92
    x3849 = x3847 * x80 - x3848 * x85
    x3850 = x17 * x3840 + x18 * x3834 + x3849
    x3851 = x13 * x3341 + x3850
    x3852 = -x27 * x3134 + x3135 * x659 + x3795 * x90
    x3853 = x3133 * x659 - x3138 * x671 + x3796 * x90
    x3854 = x3852 * x80 - x3853 * x85
    x3855 = x18 * x3839 + x3854
    x3856 = x18 * x3840 + x3855
    x3857 = x13 * x3344 + x3856
    x3858 = x13 * x3346
    x3859 = -x27 * x3144 + x3145 * x659 + x3804 * x84
    x3860 = -x3774 * x85 + x3859 * x80
    x3861 = x16 * x3776 + x16 * (x16 * x3860 + x3776) + x3749
    x3862 = x13 * x3349
    x3863 = x17 * x3860 + x3839
    x3864 = x16 * x3863 + x3818
    x3865 = x13 * x3352
    x3866 = -x27 * x3154 + x3155 * x659 + x3812 * x84
    x3867 = -x3795 * x85 + x3866 * x80
    x3868 = x18 * x3860 + x3867
    x3869 = x16 * x3868 + x3800
    x3870 = x13 * x3354
    x3871 = x17 * x3839 + x17 * x3863 + x3849
    x3872 = x13 * x3356
    x3873 = x17 * x3868 + x3855
    x3874 = x13 * x3359
    x3875 = -x27 * x3167 + x3168 * x659 + x3823 * x84
    x3876 = x3166 * x659 - x3171 * x671 + x3824 * x84
    x3877 = x18 * x3867 + x3875 * x80 - x3876 * x85
    x3878 = x18 * x3868 + x3877
    x3879 = x13 * x3361
    x3880 = -x27 * x3175 + x3176 * x659
    x3881 = -x3812 * x85 + x3880 * x80
    x3882 = x16 * x3814 + x16 * (x16 * x3881 + x3814) + x3759
    x3883 = x13 * x3364
    x3884 = x17 * x3881 + x3867
    x3885 = x16 * x3884 + x17 * x3814 + x3799
    x3886 = x13 * x3367
    x3887 = -x27 * x3185 + x3186 * x659
    x3888 = -x3823 * x85 + x3887 * x80
    x3889 = x18 * x3881 + x3888
    x3890 = x16 * x3889 + x3827
    x3891 = x13 * x3369
    x3892 = x17 * x3867 + x17 * x3884 + x3854
    x3893 = x13 * x3371
    x3894 = x17 * x3889 + x3877
    x3895 = x13 * x3373
    x3896 = -x27 * x3198 + x3199 * x659
    x3897 = x3197 * x659 - x3202 * x671
    x3898 = x18 * x3888 + x18 * x3889 + x3896 * x80 - x3897 * x85
    x3899 = x1107 * x16 + x1172 + x16 * (x1107 + x1157 * x16)
    x3900 = x1157 * x17 + x1262
    x3901 = x1107 * x17 + x1295 + x16 * x3900
    x3902 = x1157 * x18 + x1358
    x3903 = x1107 * x18 + x1377 + x16 * x3902
    x3904 = x1262 * x17 + x1434
    x3905 = x17 * x3900 + x3904
    x3906 = x1262 * x18 + x1483
    x3907 = x17 * x3902 + x3906
    x3908 = x1358 * x18 + x1518
    x3909 = x18 * x3902 + x3908
    x3910 = x1262 * x16 + x1295 + x16 * (x1262 + x1556 * x16)
    x3911 = x1556 * x17 + x1576
    x3912 = x16 * x3911 + x3904
    x3913 = x1556 * x18 + x1593
    x3914 = x16 * x3913 + x3906
    x3915 = x1576 * x17 + x1624
    x3916 = x17 * x3911 + x3915
    x3917 = x1576 * x18 + x1652
    x3918 = x17 * x3913 + x3917
    x3919 = x1593 * x18 + x1675
    x3920 = x18 * x3913 + x3919
    x3921 = x1358 * x16 + x1377 + x16 * (x1358 + x16 * x1697)
    x3922 = x1593 + x1697 * x17
    x3923 = x1358 * x17 + x1483 + x16 * x3922
    x3924 = x1697 * x18 + x1713
    x3925 = x16 * x3924 + x3908
    x3926 = x1593 * x17 + x1652
    x3927 = x17 * x3922 + x3926
    x3928 = x17 * x3924 + x3919
    x3929 = x1713 * x18 + x1736
    x3930 = x18 * x3924 + x3929
    x3931 = x1434 + x1576 * x16 + x16 * (x1576 + x16 * x1753)
    x3932 = x17 * x1753 + x1765
    x3933 = x16 * x3932 + x3915
    x3934 = x1753 * x18 + x1777
    x3935 = x16 * x3934 + x3917
    x3936 = x17 * x1765 + x17 * x3932 + x1793
    x3937 = x17 * x3934 + x1765 * x18 + x1807
    x3938 = x1777 * x18 + x1819
    x3939 = x18 * x3934 + x3938
    x3940 = x1483 + x1593 * x16 + x16 * (x1593 + x16 * x1833)
    x3941 = x17 * x1833 + x1777
    x3942 = x16 * x3941 + x3926
    x3943 = x18 * x1833 + x1845
    x3944 = x16 * x3943 + x3919
    x3945 = x17 * x1777 + x17 * x3941 + x1807
    x3946 = x17 * x3943 + x3938
    x3947 = x18 * x1845 + x1859
    x3948 = x18 * x3943 + x3947
    x3949 = x1518 + x16 * x1713 + x16 * (x16 * x1870 + x1713)
    x3950 = x17 * x1870 + x1845
    x3951 = x16 * x3950 + x1675 + x17 * x1713
    x3952 = x18 * x1870 + x1882
    x3953 = x16 * x3952 + x3929
    x3954 = x17 * x1845 + x17 * x3950 + x1819
    x3955 = x17 * x3952 + x3947
    x3956 = x18 * x1882 + x18 * x3952 + x1900
    x3957 = x12 * x3899 + x3281
    x3958 = x12 * x3901 + x3284
    x3959 = x12 * x3903 + x3287
    x3960 = x12 * x3905 + x3290
    x3961 = x12 * x3907 + x3293
    x3962 = x12 * x3909 + x3296
    x3963 = x12 * x3910 + x3298
    x3964 = x12 * x3912 + x3301
    x3965 = x12 * x3914 + x3304
    x3966 = x12 * x3916 + x3307
    x3967 = x12 * x3918 + x3310
    x3968 = x12 * x3920 + x3313
    x3969 = x12 * x3921 + x3315
    x3970 = x12 * x3923 + x3318
    x3971 = x12 * x3925 + x3321
    x3972 = x12 * x3927 + x3324
    x3973 = x12 * x3928 + x3326
    x3974 = x12 * x3930 + x3329
    x3975 = x12 * x3931 + x3331
    x3976 = x12 * x3933 + x3334
    x3977 = x12 * x3935 + x3337
    x3978 = x12 * x3936 + x3339
    x3979 = x12 * x3937 + x3341
    x3980 = x12 * x3939 + x3344
    x3981 = x12 * x3940 + x3346
    x3982 = x12 * x3942 + x3349
    x3983 = x12 * x3944 + x3352
    x3984 = x12 * x3945 + x3354
    x3985 = x12 * x3946 + x3356
    x3986 = x12 * x3948 + x3359
    x3987 = x12 * x3949 + x3361
    x3988 = x12 * x3951 + x3364
    x3989 = x12 * x3953 + x3367
    x3990 = x12 * x3954 + x3369
    x3991 = x12 * x3955 + x3371
    x3992 = x12 * x3956 + x3373
    x3993 = x16 * x2713 + x16 * (x16 * x2747 + x2713) + x2751
    x3994 = x13 * x3899 + x3993
    x3995 = x17 * x2747 + x2793
    x3996 = x16 * x3995 + x17 * x2713 + x2815
    x3997 = x13 * x3901 + x3996
    x3998 = x18 * x2747 + x2847
    x3999 = x16 * x3998 + x18 * x2713 + x2865
    x4000 = x13 * x3903 + x3999
    x4001 = x17 * x2793 + x2895
    x4002 = x17 * x3995 + x4001
    x4003 = x13 * x3905 + x4002
    x4004 = x18 * x2793 + x2923
    x4005 = x17 * x3998 + x4004
    x4006 = x13 * x3907 + x4005
    x4007 = x18 * x2847 + x2947
    x4008 = x18 * x3998 + x4007
    x4009 = x13 * x3909 + x4008
    x4010 = x16 * x2793 + x16 * (x16 * x2966 + x2793) + x2815
    x4011 = x13 * x3910 + x4010
    x4012 = x17 * x2966 + x2977
    x4013 = x16 * x4012 + x4001
    x4014 = x13 * x3912 + x4013
    x4015 = x18 * x2966 + x2989
    x4016 = x16 * x4015 + x4004
    x4017 = x13 * x3914 + x4016
    x4018 = x17 * x2977 + x3007
    x4019 = x17 * x4012 + x4018
    x4020 = x13 * x3916 + x4019
    x4021 = x18 * x2977 + x3023
    x4022 = x17 * x4015 + x4021
    x4023 = x13 * x3918 + x4022
    x4024 = x18 * x2989 + x3040
    x4025 = x18 * x4015 + x4024
    x4026 = x13 * x3920 + x4025
    x4027 = x16 * x2847 + x16 * (x16 * x3054 + x2847) + x2865
    x4028 = x13 * x3921 + x4027
    x4029 = x17 * x3054 + x2989
    x4030 = x16 * x4029 + x17 * x2847 + x2923
    x4031 = x13 * x3923 + x4030
    x4032 = x18 * x3054 + x3068
    x4033 = x16 * x4032 + x4007
    x4034 = x13 * x3925 + x4033
    x4035 = x17 * x2989 + x3023
    x4036 = x17 * x4029 + x4035
    x4037 = x13 * x3927 + x4036
    x4038 = x17 * x4032 + x4024
    x4039 = x13 * x3928 + x4038
    x4040 = x18 * x3068 + x3089
    x4041 = x18 * x4032 + x4040
    x4042 = x13 * x3930 + x4041
    x4043 = x16 * x2977 + x16 * (x16 * x3096 + x2977) + x2895
    x4044 = x13 * x3931 + x4043
    x4045 = x17 * x3096 + x3103
    x4046 = x16 * x4045 + x4018
    x4047 = x13 * x3933 + x4046
    x4048 = x18 * x3096 + x3111
    x4049 = x16 * x4048 + x4021
    x4050 = x13 * x3935 + x4049
    x4051 = x17 * x3103 + x17 * x4045 + x3120
    x4052 = x13 * x3936 + x4051
    x4053 = x17 * x4048 + x18 * x3103 + x3128
    x4054 = x13 * x3937 + x4053
    x4055 = x18 * x3111 + x3137
    x4056 = x18 * x4048 + x4055
    x4057 = x13 * x3939 + x4056
    x4058 = x16 * x2989 + x16 * (x16 * x3147 + x2989) + x2923
    x4059 = x13 * x3940 + x4058
    x4060 = x17 * x3147 + x3111
    x4061 = x16 * x4060 + x4035
    x4062 = x13 * x3942 + x4061
    x4063 = x18 * x3147 + x3157
    x4064 = x16 * x4063 + x4024
    x4065 = x13 * x3944 + x4064
    x4066 = x17 * x3111 + x17 * x4060 + x3128
    x4067 = x13 * x3945 + x4066
    x4068 = x17 * x4063 + x4055
    x4069 = x13 * x3946 + x4068
    x4070 = x18 * x3157 + x3170
    x4071 = x18 * x4063 + x4070
    x4072 = x13 * x3948 + x4071
    x4073 = x16 * x3068 + x16 * (x16 * x3178 + x3068) + x2947
    x4074 = x13 * x3949 + x4073
    x4075 = x17 * x3178 + x3157
    x4076 = x16 * x4075 + x17 * x3068 + x3040
    x4077 = x13 * x3951 + x4076
    x4078 = x18 * x3178 + x3188
    x4079 = x16 * x4078 + x4040
    x4080 = x13 * x3953 + x4079
    x4081 = x17 * x3157 + x17 * x4075 + x3137
    x4082 = x13 * x3954 + x4081
    x4083 = x17 * x4078 + x4070
    x4084 = x13 * x3955 + x4083
    x4085 = x18 * x3188 + x18 * x4078 + x3201
    x4086 = x13 * x3956 + x4085
    x4087 = x12 * x3281 + x3480
    x4088 = x12 * x3284 + x3496
    x4089 = x12 * x3287 + x3512
    x4090 = x12 * x3290 + x3522
    x4091 = x12 * x3293 + x3532
    x4092 = x12 * x3296 + x3542
    x4093 = x12 * x3298 + x3547
    x4094 = x12 * x3301 + x3553
    x4095 = x12 * x3304 + x3559
    x4096 = x12 * x3307 + x3566
    x4097 = x12 * x3310 + x3574
    x4098 = x12 * x3313 + x3582
    x4099 = x12 * x3331 + x3612
    x4100 = x12 * x3334 + x3617
    x4101 = x12 * x3337 + x3622
    x4102 = x12 * x3339 + x3626
    x4103 = x12 * x3341 + x3631
    x4104 = x12 * x3344 + x3637
    x4105 = x3803 + x3807
    x4106 = x3808 + x3810
    x4107 = x3811 + x3816
    x4108 = x3817 + x3819
    x4109 = x3820 + x3821
    x4110 = x3822 + x3828
    x4111 = x3858 + x3861
    x4112 = x3862 + x3864
    x4113 = x3865 + x3869
    x4114 = x3870 + x3871
    x4115 = x3872 + x3873
    x4116 = x3874 + x3878
    x4117 = x3879 + x3882
    x4118 = x3883 + x3885
    x4119 = x3886 + x3890
    x4120 = x3891 + x3892
    x4121 = x3893 + x3894
    x4122 = x3895 + x3898
    x4123 = x1076 * x2689 + 2 * x1081 - x2688 * x29
    x4124 = x1076 * x2687 + 2 * x1197 - x2715 * x29
    x4125 = x1076 * x2691 + 2 * x1132 - x2695 * x29
    x4126 = x1076 * x2694 + 2 * x1199 - x2719 * x29
    x4127 = x1076 * x2698 + 2 * x1135 - x2702 * x29
    x4128 = x1076 * x2701 + 2 * x1202 - x2723 * x29
    x4129 = x1076 * x2706 + 2 * x1134 - x2710 * x29
    x4130 = x1076 * x2709 + 2 * x1201 - x2728 * x29
    x4131 = (
        x4123 * x80
        - x4124 * x85
        + x92
        * (
            x4125 * x80
            - x4126 * x85
            + x90 * (x4129 * x80 - x4130 * x85 + x84 * (x4127 * x80 - x4128 * x85))
        )
    )
    x4132 = x1076 * x2737 + 2 * x1144 - x2736 * x29
    x4133 = x1076 * x2741 + 2 * x1160 - x2742 * x29
    x4134 = x1076 * x2744 + 2 * x1159 - x2745 * x29
    x4135 = (
        -x4125 * x85
        + x4132 * x80
        + x90 * (-x4129 * x85 + x4134 * x80 + x84 * (-x4127 * x85 + x4133 * x80))
    )
    x4136 = x1076 * x2685 + 2 * x1170 - x2684 * x29
    x4137 = x1076 * x2714 - x1089 * x2755 + 2 * x1214
    x4138 = x1076 * x2718 - x1089 * x2758 + 2 * x1231
    x4139 = x1076 * x2722 - x1089 * x2761 + 2 * x1233
    x4140 = x1076 * x2727 - x1089 * x2765 + 2 * x1232
    x4141 = x1076 * x2683 - x1089 * x2772 + 2 * x1238
    x4142 = (
        x13 * x3993
        + x16 * x4131
        + x16 * (x16 * x4135 + x4131)
        + x4136 * x80
        - x4141 * x85
        + x94
        * (
            x4124 * x80
            - x4137 * x85
            + x92
            * (
                x4126 * x80
                - x4138 * x85
                + x90 * (x4130 * x80 - x4140 * x85 + x84 * (x4128 * x80 - x4139 * x85))
            )
        )
    )
    x4143 = x1076 * x2777 + 2 * x1245 - x2776 * x29
    x4144 = x1076 * x2775 + 2 * x1315 - x2795 * x29
    x4145 = x1076 * x2781 + 2 * x1282 - x2785 * x29
    x4146 = x1076 * x2784 + 2 * x1318 - x2799 * x29
    x4147 = x1076 * x2787 + 2 * x1281 - x2791 * x29
    x4148 = x1076 * x2790 + 2 * x1317 - x2804 * x29
    x4149 = (
        x4143 * x80
        - x4144 * x85
        + x90 * (x4147 * x80 - x4148 * x85 + x84 * (x4145 * x80 - x4146 * x85))
    )
    x4150 = x17 * x4135 + x4149
    x4151 = x1076 * x2813 + 2 * x1293 - x2812 * x29
    x4152 = x1076 * x2794 - x1089 * x2819 + 2 * x1329
    x4153 = x1076 * x2798 - x1089 * x2822 + 2 * x1343
    x4154 = x1076 * x2803 - x1089 * x2826 + 2 * x1342
    x4155 = x1076 * x2811 - x1089 * x2831 + 2 * x1347
    x4156 = (
        x4151 * x80
        - x4155 * x85
        + x92
        * (
            x4144 * x80
            - x4152 * x85
            + x90 * (x4148 * x80 - x4154 * x85 + x84 * (x4146 * x80 - x4153 * x85))
        )
    )
    x4157 = x13 * x3996 + x16 * x4150 + x17 * x4131 + x4156
    x4158 = x1076 * x2837 + 2 * x1352 - x2836 * x29 + x4125 * x84
    x4159 = x1076 * x2835 + 2 * x1383 - x2849 * x29 + x4126 * x84
    x4160 = x1076 * x2839 + 2 * x1368 - x2841 * x29 + x4127 * x84
    x4161 = x1076 * x2840 + 2 * x1386 - x2851 * x29 + x4128 * x84
    x4162 = x1076 * x2843 + 2 * x1367 - x2845 * x29 + x4129 * x84
    x4163 = x1076 * x2844 + 2 * x1385 - x2854 * x29 + x4130 * x84
    x4164 = (
        x4158 * x80
        - x4159 * x85
        + x90 * (x4162 * x80 - x4163 * x85 + x84 * (x4160 * x80 - x4161 * x85))
    )
    x4165 = x18 * x4135 + x4164
    x4166 = x1076 * x2863 + 2 * x1376 - x2862 * x29 + x4124 * x84
    x4167 = x1076 * x2848 - x1089 * x2867 + 2 * x1398 + x4138 * x84
    x4168 = x1076 * x2850 - x1089 * x2868 + 2 * x1405 + x4139 * x84
    x4169 = x1076 * x2853 - x1089 * x2870 + 2 * x1403 + x4140 * x84
    x4170 = x1076 * x2861 - x1089 * x2875 + 2 * x1410 + x4137 * x84
    x4171 = (
        x4166 * x80
        - x4170 * x85
        + x92
        * (
            x4159 * x80
            - x4167 * x85
            + x90 * (x4163 * x80 - x4169 * x85 + x84 * (x4161 * x80 - x4168 * x85))
        )
    )
    x4172 = x13 * x3999 + x16 * x4165 + x18 * x4131 + x4171
    x4173 = x1076 * x2881 + 2 * x1417 - x2880 * x29
    x4174 = x1076 * x2885 + 2 * x1450 - x2889 * x29
    x4175 = x1076 * x2888 - x1089 * x2900 + 2 * x1459
    x4176 = x1076 * x2891 + 2 * x1449 - x2893 * x29
    x4177 = x1076 * x2892 - x1089 * x2904 + 2 * x1465
    x4178 = x1076 * x2879 - x1089 * x2906 + 2 * x1471
    x4179 = (
        x4173 * x80
        - x4178 * x85
        + x90 * (x4176 * x80 - x4177 * x85 + x84 * (x4174 * x80 - x4175 * x85))
    )
    x4180 = x17 * x4149 + x4179
    x4181 = x13 * x4002 + x17 * x4150 + x4180
    x4182 = x1076 * x2913 + 2 * x1477 - x29 * x2912 + x4144 * x84
    x4183 = x1076 * x2915 + 2 * x1489 - x29 * x2917 + x4146 * x84
    x4184 = x1076 * x2916 - x1089 * x2926 + 2 * x1499 + x4153 * x84
    x4185 = x1076 * x2919 + 2 * x1488 - x29 * x2921 + x4148 * x84
    x4186 = x1076 * x2920 - x1089 * x2928 + 2 * x1503 + x4154 * x84
    x4187 = x1076 * x2911 - x1089 * x2930 + 2 * x1507 + x4152 * x84
    x4188 = (
        x4182 * x80
        - x4187 * x85
        + x90 * (x4185 * x80 - x4186 * x85 + x84 * (x4183 * x80 - x4184 * x85))
    )
    x4189 = x18 * x4149 + x4188
    x4190 = x13 * x4005 + x17 * x4165 + x4189
    x4191 = x1076 * x2937 + 2 * x1514 - x29 * x2936 + x4159 * x90
    x4192 = x1076 * x2939 + 2 * x1524 - x29 * x2941 + x4161 * x90
    x4193 = x1076 * x2940 - x1089 * x2950 + 2 * x1533 + x4168 * x90
    x4194 = x1076 * x2943 + 2 * x1523 - x29 * x2945 + x4163 * x90
    x4195 = x1076 * x2944 - x1089 * x2952 + 2 * x1536 + x4169 * x90
    x4196 = x1076 * x2935 - x1089 * x2954 + 2 * x1539 + x4167 * x90
    x4197 = (
        x4191 * x80
        - x4196 * x85
        + x90 * (x4194 * x80 - x4195 * x85 + x84 * (x4192 * x80 - x4193 * x85))
    )
    x4198 = x18 * x4164 + x4197
    x4199 = x13 * x4008 + x18 * x4165 + x4198
    x4200 = x1076 * x2963 + 2 * x1548 - x29 * x2962
    x4201 = x1076 * x2960 + 2 * x1545 - x29 * x2959
    x4202 = -x4147 * x85 + x4201 * x80 + x84 * (-x4145 * x85 + x4200 * x80)
    x4203 = x13 * x4010 + x16 * x4149 + x16 * (x16 * x4202 + x4149) + x4156
    x4204 = x1076 * x2974 + 2 * x1568 - x29 * x2973
    x4205 = x1076 * x2971 + 2 * x1565 - x29 * x2970
    x4206 = -x4176 * x85 + x4205 * x80 + x84 * (-x4174 * x85 + x4204 * x80)
    x4207 = x17 * x4202 + x4206
    x4208 = x13 * x4013 + x16 * x4207 + x4180
    x4209 = x1076 * x2986 + 2 * x1588 - x29 * x2985 + x4145 * x84
    x4210 = x1076 * x2983 + 2 * x1586 - x29 * x2982 + x4147 * x84
    x4211 = -x4185 * x85 + x4210 * x80 + x84 * (-x4183 * x85 + x4209 * x80)
    x4212 = x18 * x4202 + x4211
    x4213 = x13 * x4016 + x16 * x4212 + x4189
    x4214 = x1076 * x3000 + 2 * x1611 - x29 * x2999
    x4215 = x1076 * x2998 - x1089 * x3005 + 2 * x1633
    x4216 = x1076 * x2996 + 2 * x1606 - x29 * x2995
    x4217 = x1076 * x2994 - x1089 * x3008 + 2 * x1639
    x4218 = x17 * x4206 + x4216 * x80 - x4217 * x85 + x84 * (x4214 * x80 - x4215 * x85)
    x4219 = x13 * x4019 + x17 * x4207 + x4218
    x4220 = x1076 * x3018 + 2 * x1646 - x29 * x3017 + x4174 * x84
    x4221 = x1076 * x3016 - x1089 * x3021 + 2 * x1660 + x4175 * x84
    x4222 = x1076 * x3014 + 2 * x1644 - x29 * x3013 + x4176 * x84
    x4223 = x1076 * x3012 - x1089 * x3024 + 2 * x1664 + x4177 * x84
    x4224 = x4222 * x80 - x4223 * x85 + x84 * (x4220 * x80 - x4221 * x85)
    x4225 = x18 * x4206 + x4224
    x4226 = x13 * x4022 + x17 * x4212 + x4225
    x4227 = x1076 * x3035 + 2 * x1669 - x29 * x3034 + x4183 * x90
    x4228 = x1076 * x3033 - x1089 * x3038 + 2 * x1682 + x4184 * x90
    x4229 = x1076 * x3031 + 2 * x1668 - x29 * x3030 + x4185 * x90
    x4230 = x1076 * x3029 - x1089 * x3041 + 2 * x1685 + x4186 * x90
    x4231 = x4229 * x80 - x4230 * x85 + x84 * (x4227 * x80 - x4228 * x85)
    x4232 = x18 * x4211 + x4231
    x4233 = x13 * x4025 + x18 * x4212 + x4232
    x4234 = x1076 * x3051 + 2 * x1692 - x29 * x3050 + x4133 * x84
    x4235 = x1076 * x3048 + 2 * x1690 - x29 * x3047 + x4134 * x84
    x4236 = -x4162 * x85 + x4235 * x80 + x84 * (-x4160 * x85 + x4234 * x80)
    x4237 = x13 * x4027 + x16 * x4164 + x16 * (x16 * x4236 + x4164) + x4171
    x4238 = x17 * x4236 + x4211
    x4239 = x13 * x4030 + x16 * x4238 + x17 * x4164 + x4188
    x4240 = x1076 * x3065 + 2 * x1708 - x29 * x3064 + x4160 * x90
    x4241 = x1076 * x3062 + 2 * x1707 - x29 * x3061 + x4162 * x90
    x4242 = -x4194 * x85 + x4241 * x80 + x84 * (-x4192 * x85 + x4240 * x80)
    x4243 = x18 * x4236 + x4242
    x4244 = x13 * x4033 + x16 * x4243 + x4198
    x4245 = x17 * x4211 + x4224
    x4246 = x13 * x4036 + x17 * x4238 + x4245
    x4247 = x13 * x4038 + x17 * x4243 + x4232
    x4248 = x1076 * x3084 + 2 * x1730 - x29 * x3083 + x4192 * x92
    x4249 = x1076 * x3082 - x1089 * x3087 + 2 * x1742 + x4193 * x92
    x4250 = x1076 * x3080 + 2 * x1729 - x29 * x3079 + x4194 * x92
    x4251 = x1076 * x3078 - x1089 * x3090 + 2 * x1745 + x4195 * x92
    x4252 = x18 * x4242 + x4250 * x80 - x4251 * x85 + x84 * (x4248 * x80 - x4249 * x85)
    x4253 = x13 * x4041 + x18 * x4243 + x4252
    x4254 = x1076 * x3094 + 2 * x1750 - x29 * x3093
    x4255 = -x4204 * x85 + x4254 * x80
    x4256 = x13 * x4043 + x16 * x4206 + x16 * (x16 * x4255 + x4206) + x4179
    x4257 = x1076 * x3101 + 2 * x1762 - x29 * x3100
    x4258 = -x4214 * x85 + x4257 * x80
    x4259 = x17 * x4255 + x4258
    x4260 = x13 * x4046 + x16 * x4259 + x4218
    x4261 = x1076 * x3109 + 2 * x1775 - x29 * x3108 + x4204 * x84
    x4262 = -x4220 * x85 + x4261 * x80
    x4263 = x18 * x4255 + x4262
    x4264 = x13 * x4049 + x16 * x4263 + x4225
    x4265 = x1076 * x3118 + 2 * x1790 - x29 * x3117
    x4266 = x1076 * x3116 - x1089 * x3121 + 2 * x1801
    x4267 = x13 * x4051 + x17 * x4258 + x17 * x4259 + x4265 * x80 - x4266 * x85
    x4268 = x1076 * x3126 + 2 * x1805 - x29 * x3125 + x4214 * x84
    x4269 = x1076 * x3124 - x1089 * x3129 + 2 * x1814 + x4215 * x84
    x4270 = x4268 * x80 - x4269 * x85
    x4271 = x13 * x4053 + x17 * x4263 + x18 * x4258 + x4270
    x4272 = x1076 * x3135 + 2 * x1817 - x29 * x3134 + x4220 * x90
    x4273 = x1076 * x3133 - x1089 * x3138 + 2 * x1826 + x4221 * x90
    x4274 = x4272 * x80 - x4273 * x85
    x4275 = x18 * x4262 + x4274
    x4276 = x13 * x4056 + x18 * x4263 + x4275
    x4277 = x1076 * x3145 + 2 * x1831 - x29 * x3144 + x4200 * x84
    x4278 = -x4209 * x85 + x4277 * x80
    x4279 = x13 * x4058 + x16 * x4211 + x16 * (x16 * x4278 + x4211) + x4188
    x4280 = x17 * x4278 + x4262
    x4281 = x13 * x4061 + x16 * x4280 + x4245
    x4282 = x1076 * x3155 + 2 * x1843 - x29 * x3154 + x4209 * x90
    x4283 = -x4227 * x85 + x4282 * x80
    x4284 = x18 * x4278 + x4283
    x4285 = x13 * x4064 + x16 * x4284 + x4232
    x4286 = x13 * x4066 + x17 * x4262 + x17 * x4280 + x4270
    x4287 = x13 * x4068 + x17 * x4284 + x4275
    x4288 = x1076 * x3168 + 2 * x1857 - x29 * x3167 + x4227 * x92
    x4289 = x1076 * x3166 - x1089 * x3171 + 2 * x1865 + x4228 * x92
    x4290 = x18 * x4283 + x4288 * x80 - x4289 * x85
    x4291 = x13 * x4071 + x18 * x4284 + x4290
    x4292 = x1076 * x3176 + 2 * x1868 - x29 * x3175 + x4234 * x90
    x4293 = -x4240 * x85 + x4292 * x80
    x4294 = x13 * x4073 + x16 * x4242 + x16 * (x16 * x4293 + x4242) + x4197
    x4295 = x17 * x4293 + x4283
    x4296 = x13 * x4076 + x16 * x4295 + x17 * x4242 + x4231
    x4297 = x1076 * x3186 + 2 * x1880 - x29 * x3185 + x4240 * x92
    x4298 = -x4248 * x85 + x4297 * x80
    x4299 = x18 * x4293 + x4298
    x4300 = x13 * x4079 + x16 * x4299 + x4252
    x4301 = x13 * x4081 + x17 * x4283 + x17 * x4295 + x4274
    x4302 = x13 * x4083 + x17 * x4299 + x4290
    x4303 = x1076 * x3199 + 2 * x1899 - x29 * x3198 + x4248 * x94
    x4304 = x1076 * x3197 - x1089 * x3202 + 2 * x1902 + x4249 * x94
    x4305 = x13 * x4085 + x18 * x4298 + x18 * x4299 + x4303 * x80 - x4304 * x85
    x4306 = x16 * x1943
    x4307 = x16 * x1911 + x16 * (x1911 + x4306) + x1907
    x4308 = x17 * x1943
    x4309 = x1975 + x4308
    x4310 = x16 * x4309 + x17 * x1911 + x2001
    x4311 = x18 * x1911 + x18 * x4306
    x4312 = x17 * x1975 + x2021
    x4313 = x17 * x4309 + x4312
    x4314 = x18 * x1975
    x4315 = x18 * x4308 + x4314
    x4316 = x16 * x2049
    x4317 = x16 * x1975 + x16 * (x1975 + x4316) + x2001
    x4318 = x17 * x2049
    x4319 = x2062 + x4318
    x4320 = x16 * x4319 + x4312
    x4321 = x18 * x4316 + x4314
    x4322 = x17 * x2062 + x2077
    x4323 = x17 * x4319 + x4322
    x4324 = x18 * x2062
    x4325 = x18 * x4318 + x4324
    x4326 = x16 * x2097
    x4327 = x16 * x2062 + x16 * (x2062 + x4326) + x2021
    x4328 = x17 * x2097
    x4329 = x2106 + x4328
    x4330 = x16 * x4329 + x4322
    x4331 = x18 * x4326 + x4324
    x4332 = x17 * x2106 + x17 * x4329 + x2117
    x4333 = x18 * x2106 + x18 * x4328
    x4334 = x16 * x3384
    x4335 = x16 * x3375 + x16 * (x3375 + x4334) + x3389
    x4336 = x12 * x4307 + x4335
    x4337 = x17 * x3384
    x4338 = x3397 + x4337
    x4339 = x16 * x4338 + x17 * x3375 + x3405
    x4340 = x12 * x4310 + x4339
    x4341 = x18 * x3375 + x18 * x4334
    x4342 = x12 * x4311 + x4341
    x4343 = x17 * x3397 + x3413
    x4344 = x17 * x4338 + x4343
    x4345 = x12 * x4313 + x4344
    x4346 = x18 * x3397
    x4347 = x18 * x4337 + x4346
    x4348 = x12 * x4315 + x4347
    x4349 = x19 * x3384
    x4350 = x1943 * x936 + x4349
    x4351 = x16 * x3426
    x4352 = x16 * x3397 + x16 * (x3397 + x4351) + x3405
    x4353 = x12 * x4317 + x4352
    x4354 = x17 * x3426
    x4355 = x3432 + x4354
    x4356 = x16 * x4355 + x4343
    x4357 = x12 * x4320 + x4356
    x4358 = x18 * x4351 + x4346
    x4359 = x12 * x4321 + x4358
    x4360 = x17 * x3432 + x3439
    x4361 = x17 * x4355 + x4360
    x4362 = x12 * x4323 + x4361
    x4363 = x18 * x3432
    x4364 = x18 * x4354 + x4363
    x4365 = x12 * x4325 + x4364
    x4366 = x19 * x3426
    x4367 = x2049 * x936 + x4366
    x4368 = x16 * x3446
    x4369 = x16 * x3432 + x16 * (x3432 + x4368) + x3413
    x4370 = x12 * x4327 + x4369
    x4371 = x17 * x3446
    x4372 = x3451 + x4371
    x4373 = x16 * x4372 + x4360
    x4374 = x12 * x4330 + x4373
    x4375 = x18 * x4368 + x4363
    x4376 = x12 * x4331 + x4375
    x4377 = x17 * x3451 + x17 * x4372 + x3456
    x4378 = x12 * x4332 + x4377
    x4379 = x18 * x3451 + x18 * x4371
    x4380 = x12 * x4333 + x4379
    x4381 = x19 * x3446
    x4382 = x2097 * x936 + x4381
    x4383 = x16 * x3461 + x16 * (x16 * x3470 + x3461) + x3474
    x4384 = x13 * x4307 + x4383
    x4385 = x17 * x3470 + x3482
    x4386 = x16 * x4385 + x17 * x3461 + x3490
    x4387 = x13 * x4310 + x4386
    x4388 = x18 * x3470 + x3498
    x4389 = x16 * x4388 + x18 * x3461 + x3506
    x4390 = x13 * x4311 + x4389
    x4391 = x17 * x3482 + x3514
    x4392 = x17 * x4385 + x4391
    x4393 = x13 * x4313 + x4392
    x4394 = x18 * x3482 + x3524
    x4395 = x17 * x4388 + x4394
    x4396 = x13 * x4315 + x4395
    x4397 = x18 * x3498 + x3534
    x4398 = x18 * x4388 + x4397
    x4399 = x1511 * x1943 + x4398
    x4400 = x16 * x3482 + x16 * (x16 * x3545 + x3482) + x3490
    x4401 = x13 * x4317 + x4400
    x4402 = x17 * x3545 + x3550
    x4403 = x16 * x4402 + x4391
    x4404 = x13 * x4320 + x4403
    x4405 = x18 * x3545 + x3556
    x4406 = x16 * x4405 + x4394
    x4407 = x13 * x4321 + x4406
    x4408 = x17 * x3550 + x3563
    x4409 = x17 * x4402 + x4408
    x4410 = x13 * x4323 + x4409
    x4411 = x18 * x3550 + x3570
    x4412 = x17 * x4405 + x4411
    x4413 = x13 * x4325 + x4412
    x4414 = x18 * x3556 + x3578
    x4415 = x18 * x4405 + x4414
    x4416 = x1511 * x2049 + x4415
    x4417 = x16 * x3498 + x16 * (x16 * x3585 + x3498) + x3506
    x4418 = x17 * x3585 + x3556
    x4419 = x16 * x4418 + x17 * x3498 + x3524
    x4420 = x18 * x3585 + x3593
    x4421 = x16 * x4420 + x4397
    x4422 = x17 * x3556 + x3570
    x4423 = x17 * x4418 + x4422
    x4424 = x17 * x4420 + x4414
    x4425 = x18 * x3593 + x3605
    x4426 = x18 * x4420 + x4425
    x4427 = x16 * x3550 + x16 * (x16 * x3610 + x3550) + x3514
    x4428 = x13 * x4327 + x4427
    x4429 = x17 * x3610 + x3614
    x4430 = x16 * x4429 + x4408
    x4431 = x13 * x4330 + x4430
    x4432 = x18 * x3610 + x3619
    x4433 = x16 * x4432 + x4411
    x4434 = x13 * x4331 + x4433
    x4435 = x17 * x3614 + x17 * x4429 + x3624
    x4436 = x13 * x4332 + x4435
    x4437 = x17 * x4432 + x18 * x3614 + x3628
    x4438 = x13 * x4333 + x4437
    x4439 = x18 * x3619 + x3633
    x4440 = x18 * x4432 + x4439
    x4441 = x1511 * x2097 + x4440
    x4442 = x16 * x3556 + x16 * (x16 * x3639 + x3556) + x3524
    x4443 = x17 * x3639 + x3619
    x4444 = x16 * x4443 + x4422
    x4445 = x18 * x3639 + x3646
    x4446 = x16 * x4445 + x4414
    x4447 = x17 * x3619 + x17 * x4443 + x3628
    x4448 = x17 * x4445 + x4439
    x4449 = x18 * x3646 + x3655
    x4450 = x18 * x4445 + x4449
    x4451 = x16 * x3593 + x16 * (x16 * x3660 + x3593) + x3534
    x4452 = x17 * x3660 + x3646
    x4453 = x16 * x4452 + x17 * x3593 + x3578
    x4454 = x18 * x3660 + x3667
    x4455 = x16 * x4454 + x4425
    x4456 = x17 * x3646 + x17 * x4452 + x3633
    x4457 = x17 * x4454 + x4449
    x4458 = x18 * x3667 + x18 * x4454 + x3676
    x4459 = 3 * x1912 + x3375 * x659 - x3376 * x671
    x4460 = 3 * x1944 - x3377 * x671 + x3384 * x659
    x4461 = x16 * x4460
    x4462 = x17 * x4460
    x4463 = (
        3 * x1976
        + x3397 * x659
        - x3398 * x671
        + x84 * (3 * x1938 + x3377 * x659 - x3378 * x671)
    )
    x4464 = x4462 + x4463
    x4465 = (
        3 * x2002
        + x3405 * x659
        - x3409 * x671
        + x84 * (3 * x1957 + x3376 * x659 - x3390 * x671)
    )
    x4466 = (
        3 * x2022
        + x3413 * x659
        - x3418 * x671
        + x90
        * (
            3 * x2004
            + x3398 * x659
            - x3406 * x671
            + x84 * (3 * x1966 + x3378 * x659 - x3391 * x671)
        )
    )
    x4467 = x17 * x4463 + x4466
    x4468 = x18 * x4463
    x4469 = (
        3 * x2050
        - x3401 * x671
        + x3426 * x659
        + x84 * (3 * x1952 - x3381 * x671 + x3386 * x659)
    )
    x4470 = x16 * x4469
    x4471 = x17 * x4469
    x4472 = (
        3 * x2063
        - x3416 * x671
        + x3432 * x659
        + x90
        * (
            3 * x1995
            + x3401 * x659
            - x3402 * x671
            + x84 * (3 * x1939 + x3381 * x659 - x3382 * x671)
        )
    )
    x4473 = x4471 + x4472
    x4474 = (
        x17 * x4472
        + 3 * x2078
        + x3439 * x659
        - x3440 * x671
        + x92
        * (
            3 * x2032
            + x3416 * x659
            - x3417 * x671
            + x90
            * (
                3 * x2011
                + x3402 * x659
                - x3408 * x671
                + x84 * (3 * x1967 + x3382 * x659 - x3393 * x671)
            )
        )
    )
    x4475 = x18 * x4472
    x4476 = (
        3 * x2098
        - x3431 * x671
        + x3446 * x659
        + x90
        * (
            3 * x2053
            - x3399 * x671
            + x3425 * x659
            + x84 * (3 * x1953 - x3379 * x671 + x3385 * x659)
        )
    )
    x4477 = x16 * x4476
    x4478 = x17 * x4476
    x4479 = (
        3 * x2107
        - x3437 * x671
        + x3451 * x659
        + x92
        * (
            3 * x2066
            - x3414 * x671
            + x3431 * x659
            + x90
            * (
                3 * x1996
                + x3399 * x659
                - x3400 * x671
                + x84 * (3 * x1940 + x3379 * x659 - x3380 * x671)
            )
        )
    )
    x4480 = x4478 + x4479
    x4481 = 2 * x2135 + x3461 * x659 - x3462 * x671
    x4482 = 2 * x2185 - x3463 * x671 + x3470 * x659
    x4483 = (
        x16 * x4481
        + x16 * (x16 * x4482 + x4481)
        + 2 * x2130
        + x3474 * x659
        - x3479 * x671
    )
    x4484 = (
        2 * x2228
        + x3482 * x659
        - x3483 * x671
        + x84 * (2 * x2179 + x3463 * x659 - x3464 * x671)
    )
    x4485 = x17 * x4482 + x4484
    x4486 = (
        2 * x2264
        + x3490 * x659
        - x3494 * x671
        + x84 * (2 * x2202 + x3462 * x659 - x3475 * x671)
    )
    x4487 = x16 * x4485 + x17 * x4481 + x4486
    x4488 = 2 * x2289 + x3498 * x659 - x3499 * x671
    x4489 = x18 * x4482 + x4488
    x4490 = 2 * x2321 + x3506 * x659 - x3510 * x671
    x4491 = x16 * x4489 + x18 * x4481 + x4490
    x4492 = (
        2 * x2341
        + x3514 * x659
        - x3519 * x671
        + x90
        * (
            2 * x2266
            + x3483 * x659
            - x3491 * x671
            + x84 * (2 * x2219 + x3464 * x659 - x3476 * x671)
        )
    )
    x4493 = x17 * x4484 + x4492
    x4494 = x17 * x4485 + x4493
    x4495 = (
        2 * x2374
        + x3524 * x659
        - x3529 * x671
        + x84 * (2 * x2325 + x3499 * x659 - x3507 * x671)
    )
    x4496 = x18 * x4484 + x4495
    x4497 = x17 * x4489 + x4496
    x4498 = 2 * x2398 + x3534 * x659 - x3539 * x671
    x4499 = x18 * x4488 + x4498
    x4500 = x18 * x4489 + x4499
    x4501 = (
        2 * x2424
        - x3486 * x671
        + x3545 * x659
        + x84 * (2 * x2197 - x3467 * x671 + x3472 * x659)
    )
    x4502 = x16 * x4484 + x16 * (x16 * x4501 + x4484) + x4486
    x4503 = (
        2 * x2435
        - x3517 * x671
        + x3550 * x659
        + x90
        * (
            2 * x2257
            + x3486 * x659
            - x3487 * x671
            + x84 * (2 * x2180 + x3467 * x659 - x3468 * x671)
        )
    )
    x4504 = x17 * x4501 + x4503
    x4505 = x16 * x4504 + x4493
    x4506 = (
        2 * x2448
        - x3527 * x671
        + x3556 * x659
        + x84 * (2 * x2314 + x3502 * x659 - x3503 * x671)
    )
    x4507 = x18 * x4501 + x4506
    x4508 = x16 * x4507 + x4496
    x4509 = (
        x17 * x4503
        + 2 * x2461
        + x3563 * x659
        - x3564 * x671
        + x92
        * (
            2 * x2355
            + x3517 * x659
            - x3518 * x671
            + x90
            * (
                2 * x2279
                + x3487 * x659
                - x3493 * x671
                + x84 * (2 * x2220 + x3468 * x659 - x3478 * x671)
            )
        )
    )
    x4510 = x17 * x4504 + x4509
    x4511 = (
        2 * x2480
        + x3570 * x659
        - x3571 * x671
        + x90
        * (
            2 * x2384
            + x3527 * x659
            - x3528 * x671
            + x84 * (2 * x2332 + x3503 * x659 - x3509 * x671)
        )
    )
    x4512 = x18 * x4503 + x4511
    x4513 = x17 * x4507 + x4512
    x4514 = (
        2 * x2497
        + x3578 * x659
        - x3579 * x671
        + x84 * (2 * x2411 + x3537 * x659 - x3538 * x671)
    )
    x4515 = x18 * x4506 + x4514
    x4516 = x18 * x4507 + x4515
    x4517 = 2 * x2513 - x3502 * x671 + x3585 * x659
    x4518 = x12 * x4417 + x16 * x4488 + x16 * (x16 * x4517 + x4488) + x4490
    x4519 = x17 * x4517 + x4506
    x4520 = x12 * x4419 + x16 * x4519 + x17 * x4488 + x4495
    x4521 = 2 * x2531 - x3537 * x671 + x3593 * x659
    x4522 = x18 * x4517 + x4521
    x4523 = x12 * x4421 + x16 * x4522 + x4499
    x4524 = x17 * x4506 + x4511
    x4525 = x12 * x4423 + x17 * x4519 + x4524
    x4526 = x12 * x4424 + x17 * x4522 + x4515
    x4527 = x18 * x4521 + 2 * x2551 + x3605 * x659 - x3606 * x671
    x4528 = x12 * x4426 + x18 * x4522 + x4527
    x4529 = (
        2 * x2568
        - x3549 * x671
        + x3610 * x659
        + x90
        * (
            2 * x2427
            - x3484 * x671
            + x3544 * x659
            + x84 * (2 * x2198 - x3465 * x671 + x3471 * x659)
        )
    )
    x4530 = x16 * x4503 + x16 * (x16 * x4529 + x4503) + x4492
    x4531 = (
        2 * x2575
        - x3561 * x671
        + x3614 * x659
        + x92
        * (
            2 * x2438
            - x3515 * x671
            + x3549 * x659
            + x90
            * (
                2 * x2258
                + x3484 * x659
                - x3485 * x671
                + x84 * (2 * x2181 + x3465 * x659 - x3466 * x671)
            )
        )
    )
    x4532 = x17 * x4529 + x4531
    x4533 = x16 * x4532 + x4509
    x4534 = (
        2 * x2584
        - x3568 * x671
        + x3619 * x659
        + x90
        * (
            2 * x2451
            - x3525 * x671
            + x3555 * x659
            + x84 * (2 * x2315 + x3500 * x659 - x3501 * x671)
        )
    )
    x4535 = x18 * x4529 + x4534
    x4536 = x16 * x4535 + x4512
    x4537 = (
        x17 * x4531
        + x17 * x4532
        + 2 * x2593
        + x3624 * x659
        - x3625 * x671
        + x94
        * (
            2 * x2465
            + x3561 * x659
            - x3562 * x671
            + x92
            * (
                2 * x2356
                + x3515 * x659
                - x3516 * x671
                + x90
                * (
                    2 * x2280
                    + x3485 * x659
                    - x3492 * x671
                    + x84 * (2 * x2221 + x3466 * x659 - x3477 * x671)
                )
            )
        )
    )
    x4538 = (
        2 * x2602
        + x3628 * x659
        - x3629 * x671
        + x92
        * (
            2 * x2484
            + x3568 * x659
            - x3569 * x671
            + x90
            * (
                2 * x2385
                + x3525 * x659
                - x3526 * x671
                + x84 * (2 * x2333 + x3501 * x659 - x3508 * x671)
            )
        )
    )
    x4539 = x17 * x4535 + x18 * x4531 + x4538
    x4540 = (
        2 * x2611
        + x3633 * x659
        - x3634 * x671
        + x90
        * (
            2 * x2501
            + x3576 * x659
            - x3577 * x671
            + x84 * (2 * x2412 + x3535 * x659 - x3536 * x671)
        )
    )
    x4541 = x18 * x4534 + x4540
    x4542 = x18 * x4535 + x4541
    x4543 = (
        2 * x2621
        - x3555 * x671
        + x3639 * x659
        + x84 * (2 * x2522 - x3500 * x671 + x3584 * x659)
    )
    x4544 = x12 * x4442 + x16 * x4506 + x16 * (x16 * x4543 + x4506) + x4495
    x4545 = x17 * x4543 + x4534
    x4546 = x12 * x4444 + x16 * x4545 + x4524
    x4547 = (
        2 * x2631
        - x3576 * x671
        + x3646 * x659
        + x84 * (2 * x2538 - x3535 * x671 + x3592 * x659)
    )
    x4548 = x18 * x4543 + x4547
    x4549 = x12 * x4446 + x16 * x4548 + x4515
    x4550 = x12 * x4447 + x17 * x4534 + x17 * x4545 + x4538
    x4551 = x12 * x4448 + x17 * x4548 + x4541
    x4552 = (
        x18 * x4547
        + 2 * x2644
        + x3655 * x659
        - x3656 * x671
        + x84 * (2 * x2555 + x3603 * x659 - x3604 * x671)
    )
    x4553 = x12 * x4450 + x18 * x4548 + x4552
    x4554 = 2 * x2652 - x3592 * x671 + x3660 * x659
    x4555 = x12 * x4451 + x16 * x4521 + x16 * (x16 * x4554 + x4521) + x4498
    x4556 = x17 * x4554 + x4547
    x4557 = x12 * x4453 + x16 * x4556 + x17 * x4521 + x4514
    x4558 = 2 * x2663 - x3603 * x671 + x3667 * x659
    x4559 = x18 * x4554 + x4558
    x4560 = x12 * x4455 + x16 * x4559 + x4527
    x4561 = x12 * x4456 + x17 * x4547 + x17 * x4556 + x4540
    x4562 = x12 * x4457 + x17 * x4559 + x4552
    x4563 = (
        x12 * x4458 + x18 * x4558 + x18 * x4559 + 2 * x2677 + x3676 * x659 - x3677 * x671
    )
    x4564 = x2690 + x3680 * x659 - x3681 * x671
    x4565 = x2738 - x3682 * x671 + x3689 * x659
    x4566 = (
        x16 * x4564 + x16 * (x16 * x4565 + x4564) + x2686 + x3693 * x659 - x3698 * x671
    )
    x4567 = x13 * x4383 + x4566
    x4568 = (
        x2778 + x3701 * x659 - x3702 * x671 + x84 * (x2732 + x3682 * x659 - x3683 * x671)
    )
    x4569 = x17 * x4565 + x4568
    x4570 = (
        x2814 + x3709 * x659 - x3713 * x671 + x84 * (x2752 + x3681 * x659 - x3694 * x671)
    )
    x4571 = x16 * x4569 + x17 * x4564 + x4570
    x4572 = x13 * x4386 + x4571
    x4573 = x2838 + x3717 * x659 - x3718 * x671
    x4574 = x18 * x4565 + x4573
    x4575 = x2864 + x3725 * x659 - x3729 * x671
    x4576 = x16 * x4574 + x18 * x4564 + x4575
    x4577 = x13 * x4389 + x4576
    x4578 = (
        x2882
        + x3733 * x659
        - x3738 * x671
        + x90
        * (
            x2816
            + x3702 * x659
            - x3710 * x671
            + x84 * (x2769 + x3683 * x659 - x3695 * x671)
        )
    )
    x4579 = x17 * x4568 + x4578
    x4580 = x17 * x4569 + x4579
    x4581 = x13 * x4392 + x4580
    x4582 = (
        x2914 + x3743 * x659 - x3748 * x671 + x84 * (x2866 + x3718 * x659 - x3726 * x671)
    )
    x4583 = x18 * x4568 + x4582
    x4584 = x17 * x4574 + x4583
    x4585 = x13 * x4395 + x4584
    x4586 = x2938 + x3753 * x659 - x3758 * x671
    x4587 = x18 * x4573 + x4586
    x4588 = x18 * x4574 + x4587
    x4589 = x13 * x4398 + x4588
    x4590 = (
        x2961 - x3705 * x671 + x3764 * x659 + x84 * (x2748 - x3686 * x671 + x3691 * x659)
    )
    x4591 = x16 * x4568 + x16 * (x16 * x4590 + x4568) + x4570
    x4592 = x13 * x4400 + x4591
    x4593 = (
        x2972
        - x3736 * x671
        + x3769 * x659
        + x90
        * (
            x2807
            + x3705 * x659
            - x3706 * x671
            + x84 * (x2733 + x3686 * x659 - x3687 * x671)
        )
    )
    x4594 = x17 * x4590 + x4593
    x4595 = x16 * x4594 + x4579
    x4596 = x13 * x4403 + x4595
    x4597 = (
        x2984 - x3746 * x671 + x3775 * x659 + x84 * (x2857 + x3721 * x659 - x3722 * x671)
    )
    x4598 = x18 * x4590 + x4597
    x4599 = x16 * x4598 + x4583
    x4600 = x13 * x4406 + x4599
    x4601 = (
        x17 * x4593
        + x2997
        + x3782 * x659
        - x3783 * x671
        + x92
        * (
            x2896
            + x3736 * x659
            - x3737 * x671
            + x90
            * (
                x2829
                + x3706 * x659
                - x3712 * x671
                + x84 * (x2770 + x3687 * x659 - x3697 * x671)
            )
        )
    )
    x4602 = x17 * x4594 + x4601
    x4603 = x13 * x4409 + x4602
    x4604 = (
        x3015
        + x3789 * x659
        - x3790 * x671
        + x90
        * (
            x2924
            + x3746 * x659
            - x3747 * x671
            + x84 * (x2873 + x3722 * x659 - x3728 * x671)
        )
    )
    x4605 = x18 * x4593 + x4604
    x4606 = x17 * x4598 + x4605
    x4607 = x13 * x4412 + x4606
    x4608 = (
        x3032 + x3797 * x659 - x3798 * x671 + x84 * (x2948 + x3756 * x659 - x3757 * x671)
    )
    x4609 = x18 * x4597 + x4608
    x4610 = x18 * x4598 + x4609
    x4611 = x13 * x4415 + x4610
    x4612 = x13 * x4417
    x4613 = x3049 - x3721 * x671 + x3805 * x659
    x4614 = x16 * x4573 + x16 * (x16 * x4613 + x4573) + x4575
    x4615 = x13 * x4419
    x4616 = x17 * x4613 + x4597
    x4617 = x16 * x4616 + x17 * x4573 + x4582
    x4618 = x13 * x4421
    x4619 = x3063 - x3756 * x671 + x3813 * x659
    x4620 = x18 * x4613 + x4619
    x4621 = x16 * x4620 + x4587
    x4622 = x13 * x4423
    x4623 = x17 * x4597 + x4604
    x4624 = x17 * x4616 + x4623
    x4625 = x13 * x4424
    x4626 = x17 * x4620 + x4609
    x4627 = x13 * x4426
    x4628 = x18 * x4619 + x3081 + x3825 * x659 - x3826 * x671
    x4629 = x18 * x4620 + x4628
    x4630 = (
        x3095
        - x3768 * x671
        + x3829 * x659
        + x90
        * (
            x2964
            - x3703 * x671
            + x3763 * x659
            + x84 * (x2749 - x3684 * x671 + x3690 * x659)
        )
    )
    x4631 = x16 * x4593 + x16 * (x16 * x4630 + x4593) + x4578
    x4632 = x13 * x4427 + x4631
    x4633 = (
        x3102
        - x3780 * x671
        + x3833 * x659
        + x92
        * (
            x2975
            - x3734 * x671
            + x3768 * x659
            + x90
            * (
                x2808
                + x3703 * x659
                - x3704 * x671
                + x84 * (x2734 + x3684 * x659 - x3685 * x671)
            )
        )
    )
    x4634 = x17 * x4630 + x4633
    x4635 = x16 * x4634 + x4601
    x4636 = x13 * x4430 + x4635
    x4637 = (
        x3110
        - x3787 * x671
        + x3838 * x659
        + x90
        * (
            x2987
            - x3744 * x671
            + x3774 * x659
            + x84 * (x2858 + x3719 * x659 - x3720 * x671)
        )
    )
    x4638 = x18 * x4630 + x4637
    x4639 = x16 * x4638 + x4605
    x4640 = x13 * x4433 + x4639
    x4641 = (
        x17 * x4633
        + x17 * x4634
        + x3119
        + x3843 * x659
        - x3844 * x671
        + x94
        * (
            x3001
            + x3780 * x659
            - x3781 * x671
            + x92
            * (
                x2897
                + x3734 * x659
                - x3735 * x671
                + x90
                * (
                    x2830
                    + x3704 * x659
                    - x3711 * x671
                    + x84 * (x2771 + x3685 * x659 - x3696 * x671)
                )
            )
        )
    )
    x4642 = x13 * x4435 + x4641
    x4643 = (
        x3127
        + x3847 * x659
        - x3848 * x671
        + x92
        * (
            x3019
            + x3787 * x659
            - x3788 * x671
            + x90
            * (
                x2925
                + x3744 * x659
                - x3745 * x671
                + x84 * (x2874 + x3720 * x659 - x3727 * x671)
            )
        )
    )
    x4644 = x17 * x4638 + x18 * x4633 + x4643
    x4645 = x13 * x4437 + x4644
    x4646 = (
        x3136
        + x3852 * x659
        - x3853 * x671
        + x90
        * (
            x3036
            + x3795 * x659
            - x3796 * x671
            + x84 * (x2949 + x3754 * x659 - x3755 * x671)
        )
    )
    x4647 = x18 * x4637 + x4646
    x4648 = x18 * x4638 + x4647
    x4649 = x13 * x4440 + x4648
    x4650 = x13 * x4442
    x4651 = (
        x3146 - x3774 * x671 + x3859 * x659 + x84 * (x3052 - x3719 * x671 + x3804 * x659)
    )
    x4652 = x16 * x4597 + x16 * (x16 * x4651 + x4597) + x4582
    x4653 = x13 * x4444
    x4654 = x17 * x4651 + x4637
    x4655 = x16 * x4654 + x4623
    x4656 = x13 * x4446
    x4657 = (
        x3156 - x3795 * x671 + x3866 * x659 + x84 * (x3066 - x3754 * x671 + x3812 * x659)
    )
    x4658 = x18 * x4651 + x4657
    x4659 = x16 * x4658 + x4609
    x4660 = x13 * x4447
    x4661 = x17 * x4637 + x17 * x4654 + x4643
    x4662 = x13 * x4448
    x4663 = x17 * x4658 + x4647
    x4664 = x13 * x4450
    x4665 = (
        x18 * x4657
        + x3169
        + x3875 * x659
        - x3876 * x671
        + x84 * (x3085 + x3823 * x659 - x3824 * x671)
    )
    x4666 = x18 * x4658 + x4665
    x4667 = x13 * x4451
    x4668 = x3177 - x3812 * x671 + x3880 * x659
    x4669 = x16 * x4619 + x16 * (x16 * x4668 + x4619) + x4586
    x4670 = x13 * x4453
    x4671 = x17 * x4668 + x4657
    x4672 = x16 * x4671 + x17 * x4619 + x4608
    x4673 = x13 * x4455
    x4674 = x3187 - x3823 * x671 + x3887 * x659
    x4675 = x18 * x4668 + x4674
    x4676 = x16 * x4675 + x4628
    x4677 = x13 * x4456
    x4678 = x17 * x4657 + x17 * x4671 + x4646
    x4679 = x13 * x4457
    x4680 = x17 * x4675 + x4665
    x4681 = x13 * x4458
    x4682 = x18 * x4674 + x18 * x4675 + x3200 + x3896 * x659 - x3897 * x671
    x4683 = x16 * x2136 + x16 * (x16 * x2186 + x2136) + x2200
    x4684 = x17 * x2186 + x2227
    x4685 = x16 * x4684 + x17 * x2136 + x2263
    x4686 = x18 * x2186 + x2291
    x4687 = x16 * x4686 + x18 * x2136 + x2323
    x4688 = x17 * x2227 + x2340
    x4689 = x17 * x4684 + x4688
    x4690 = x18 * x2227 + x2373
    x4691 = x17 * x4686 + x4690
    x4692 = x18 * x2291 + x2399
    x4693 = x18 * x4686 + x4692
    x4694 = x16 * x2227 + x16 * (x16 * x2423 + x2227) + x2263
    x4695 = x17 * x2423 + x2434
    x4696 = x16 * x4695 + x4688
    x4697 = x18 * x2423 + x2447
    x4698 = x16 * x4697 + x4690
    x4699 = x17 * x2434 + x2460
    x4700 = x17 * x4695 + x4699
    x4701 = x18 * x2434 + x2479
    x4702 = x17 * x4697 + x4701
    x4703 = x18 * x2447 + x2496
    x4704 = x18 * x4697 + x4703
    x4705 = x16 * x2291 + x16 * (x16 * x2515 + x2291) + x2323
    x4706 = x17 * x2515 + x2447
    x4707 = x16 * x4706 + x17 * x2291 + x2373
    x4708 = x18 * x2515 + x2532
    x4709 = x16 * x4708 + x4692
    x4710 = x17 * x2447 + x2479
    x4711 = x17 * x4706 + x4710
    x4712 = x17 * x4708 + x4703
    x4713 = x18 * x2532 + x2560
    x4714 = x18 * x4708 + x4713
    x4715 = x16 * x2434 + x16 * (x16 * x2567 + x2434) + x2340
    x4716 = x17 * x2567 + x2574
    x4717 = x16 * x4716 + x4699
    x4718 = x18 * x2567 + x2583
    x4719 = x16 * x4718 + x4701
    x4720 = x17 * x2574 + x17 * x4716 + x2592
    x4721 = x17 * x4718 + x18 * x2574 + x2601
    x4722 = x18 * x2583 + x2610
    x4723 = x18 * x4718 + x4722
    x4724 = x16 * x2447 + x16 * (x16 * x2620 + x2447) + x2373
    x4725 = x17 * x2620 + x2583
    x4726 = x16 * x4725 + x4710
    x4727 = x18 * x2620 + x2630
    x4728 = x16 * x4727 + x4703
    x4729 = x17 * x2583 + x17 * x4725 + x2601
    x4730 = x17 * x4727 + x4722
    x4731 = x18 * x2630 + x2643
    x4732 = x18 * x4727 + x4731
    x4733 = x16 * x2532 + x16 * (x16 * x2653 + x2532) + x2399
    x4734 = x17 * x2653 + x2630
    x4735 = x16 * x4734 + x17 * x2532 + x2496
    x4736 = x18 * x2653 + x2664
    x4737 = x16 * x4736 + x4713
    x4738 = x17 * x2630 + x17 * x4734 + x2610
    x4739 = x17 * x4736 + x4731
    x4740 = x18 * x2664 + x18 * x4736 + x2678
    x4741 = x12 * x4683 + x4383
    x4742 = x12 * x4685 + x4386
    x4743 = x12 * x4687 + x4389
    x4744 = x12 * x4689 + x4392
    x4745 = x12 * x4691 + x4395
    x4746 = x12 * x4693 + x4398
    x4747 = x12 * x4694 + x4400
    x4748 = x12 * x4696 + x4403
    x4749 = x12 * x4698 + x4406
    x4750 = x12 * x4700 + x4409
    x4751 = x12 * x4702 + x4412
    x4752 = x12 * x4704 + x4415
    x4753 = x12 * x4705 + x4417
    x4754 = x12 * x4707 + x4419
    x4755 = x12 * x4709 + x4421
    x4756 = x12 * x4711 + x4423
    x4757 = x12 * x4712 + x4424
    x4758 = x12 * x4714 + x4426
    x4759 = x12 * x4715 + x4427
    x4760 = x12 * x4717 + x4430
    x4761 = x12 * x4719 + x4433
    x4762 = x12 * x4720 + x4435
    x4763 = x12 * x4721 + x4437
    x4764 = x12 * x4723 + x4440
    x4765 = x12 * x4724 + x4442
    x4766 = x12 * x4726 + x4444
    x4767 = x12 * x4728 + x4446
    x4768 = x12 * x4729 + x4447
    x4769 = x12 * x4730 + x4448
    x4770 = x12 * x4732 + x4450
    x4771 = x12 * x4733 + x4451
    x4772 = x12 * x4735 + x4453
    x4773 = x12 * x4737 + x4455
    x4774 = x12 * x4738 + x4456
    x4775 = x12 * x4739 + x4457
    x4776 = x12 * x4740 + x4458
    x4777 = x16 * x3680 + x16 * (x16 * x3689 + x3680) + x3693
    x4778 = x13 * x4683 + x4777
    x4779 = x17 * x3689 + x3701
    x4780 = x16 * x4779 + x17 * x3680 + x3709
    x4781 = x13 * x4685 + x4780
    x4782 = x18 * x3689 + x3717
    x4783 = x16 * x4782 + x18 * x3680 + x3725
    x4784 = x13 * x4687 + x4783
    x4785 = x17 * x3701 + x3733
    x4786 = x17 * x4779 + x4785
    x4787 = x13 * x4689 + x4786
    x4788 = x18 * x3701 + x3743
    x4789 = x17 * x4782 + x4788
    x4790 = x13 * x4691 + x4789
    x4791 = x18 * x3717 + x3753
    x4792 = x18 * x4782 + x4791
    x4793 = x13 * x4693 + x4792
    x4794 = x16 * x3701 + x16 * (x16 * x3764 + x3701) + x3709
    x4795 = x13 * x4694 + x4794
    x4796 = x17 * x3764 + x3769
    x4797 = x16 * x4796 + x4785
    x4798 = x13 * x4696 + x4797
    x4799 = x18 * x3764 + x3775
    x4800 = x16 * x4799 + x4788
    x4801 = x13 * x4698 + x4800
    x4802 = x17 * x3769 + x3782
    x4803 = x17 * x4796 + x4802
    x4804 = x13 * x4700 + x4803
    x4805 = x18 * x3769 + x3789
    x4806 = x17 * x4799 + x4805
    x4807 = x13 * x4702 + x4806
    x4808 = x18 * x3775 + x3797
    x4809 = x18 * x4799 + x4808
    x4810 = x13 * x4704 + x4809
    x4811 = x16 * x3717 + x16 * (x16 * x3805 + x3717) + x3725
    x4812 = x13 * x4705 + x4811
    x4813 = x17 * x3805 + x3775
    x4814 = x16 * x4813 + x17 * x3717 + x3743
    x4815 = x13 * x4707 + x4814
    x4816 = x18 * x3805 + x3813
    x4817 = x16 * x4816 + x4791
    x4818 = x13 * x4709 + x4817
    x4819 = x17 * x3775 + x3789
    x4820 = x17 * x4813 + x4819
    x4821 = x13 * x4711 + x4820
    x4822 = x17 * x4816 + x4808
    x4823 = x13 * x4712 + x4822
    x4824 = x18 * x3813 + x3825
    x4825 = x18 * x4816 + x4824
    x4826 = x13 * x4714 + x4825
    x4827 = x16 * x3769 + x16 * (x16 * x3829 + x3769) + x3733
    x4828 = x13 * x4715 + x4827
    x4829 = x17 * x3829 + x3833
    x4830 = x16 * x4829 + x4802
    x4831 = x13 * x4717 + x4830
    x4832 = x18 * x3829 + x3838
    x4833 = x16 * x4832 + x4805
    x4834 = x13 * x4719 + x4833
    x4835 = x17 * x3833 + x17 * x4829 + x3843
    x4836 = x13 * x4720 + x4835
    x4837 = x17 * x4832 + x18 * x3833 + x3847
    x4838 = x13 * x4721 + x4837
    x4839 = x18 * x3838 + x3852
    x4840 = x18 * x4832 + x4839
    x4841 = x13 * x4723 + x4840
    x4842 = x16 * x3775 + x16 * (x16 * x3859 + x3775) + x3743
    x4843 = x13 * x4724 + x4842
    x4844 = x17 * x3859 + x3838
    x4845 = x16 * x4844 + x4819
    x4846 = x13 * x4726 + x4845
    x4847 = x18 * x3859 + x3866
    x4848 = x16 * x4847 + x4808
    x4849 = x13 * x4728 + x4848
    x4850 = x17 * x3838 + x17 * x4844 + x3847
    x4851 = x13 * x4729 + x4850
    x4852 = x17 * x4847 + x4839
    x4853 = x13 * x4730 + x4852
    x4854 = x18 * x3866 + x3875
    x4855 = x18 * x4847 + x4854
    x4856 = x13 * x4732 + x4855
    x4857 = x16 * x3813 + x16 * (x16 * x3880 + x3813) + x3753
    x4858 = x13 * x4733 + x4857
    x4859 = x17 * x3880 + x3866
    x4860 = x16 * x4859 + x17 * x3813 + x3797
    x4861 = x13 * x4735 + x4860
    x4862 = x18 * x3880 + x3887
    x4863 = x16 * x4862 + x4824
    x4864 = x13 * x4737 + x4863
    x4865 = x17 * x3866 + x17 * x4859 + x3852
    x4866 = x13 * x4738 + x4865
    x4867 = x17 * x4862 + x4854
    x4868 = x13 * x4739 + x4867
    x4869 = x18 * x3887 + x18 * x4862 + x3896
    x4870 = x13 * x4740 + x4869
    x4871 = x4123 * x659 - x4124 * x671
    x4872 = -x4125 * x671 + x4132 * x659
    x4873 = (
        x13 * x4777
        + x16 * x4871
        + x16 * (x16 * x4872 + x4871)
        + x4136 * x659
        - x4141 * x671
    )
    x4874 = x4143 * x659 - x4144 * x671 + x84 * (x4125 * x659 - x4126 * x671)
    x4875 = x17 * x4872 + x4874
    x4876 = x4151 * x659 - x4155 * x671 + x84 * (x4124 * x659 - x4137 * x671)
    x4877 = x13 * x4780 + x16 * x4875 + x17 * x4871 + x4876
    x4878 = x4158 * x659 - x4159 * x671
    x4879 = x18 * x4872 + x4878
    x4880 = x4166 * x659 - x4170 * x671
    x4881 = x13 * x4783 + x16 * x4879 + x18 * x4871 + x4880
    x4882 = (
        x4173 * x659
        - x4178 * x671
        + x90 * (x4144 * x659 - x4152 * x671 + x84 * (x4126 * x659 - x4138 * x671))
    )
    x4883 = x17 * x4874 + x4882
    x4884 = x13 * x4786 + x17 * x4875 + x4883
    x4885 = x4182 * x659 - x4187 * x671 + x84 * (x4159 * x659 - x4167 * x671)
    x4886 = x18 * x4874 + x4885
    x4887 = x13 * x4789 + x17 * x4879 + x4886
    x4888 = x4191 * x659 - x4196 * x671
    x4889 = x18 * x4878 + x4888
    x4890 = x13 * x4792 + x18 * x4879 + x4889
    x4891 = -x4147 * x671 + x4201 * x659 + x84 * (-x4129 * x671 + x4134 * x659)
    x4892 = x13 * x4794 + x16 * x4874 + x16 * (x16 * x4891 + x4874) + x4876
    x4893 = (
        -x4176 * x671
        + x4205 * x659
        + x90 * (x4147 * x659 - x4148 * x671 + x84 * (x4129 * x659 - x4130 * x671))
    )
    x4894 = x17 * x4891 + x4893
    x4895 = x13 * x4797 + x16 * x4894 + x4883
    x4896 = -x4185 * x671 + x4210 * x659 + x84 * (x4162 * x659 - x4163 * x671)
    x4897 = x18 * x4891 + x4896
    x4898 = x13 * x4800 + x16 * x4897 + x4886
    x4899 = (
        x17 * x4893
        + x4216 * x659
        - x4217 * x671
        + x92
        * (
            x4176 * x659
            - x4177 * x671
            + x90 * (x4148 * x659 - x4154 * x671 + x84 * (x4130 * x659 - x4140 * x671))
        )
    )
    x4900 = x13 * x4803 + x17 * x4894 + x4899
    x4901 = (
        x4222 * x659
        - x4223 * x671
        + x90 * (x4185 * x659 - x4186 * x671 + x84 * (x4163 * x659 - x4169 * x671))
    )
    x4902 = x18 * x4893 + x4901
    x4903 = x13 * x4806 + x17 * x4897 + x4902
    x4904 = x4229 * x659 - x4230 * x671 + x84 * (x4194 * x659 - x4195 * x671)
    x4905 = x18 * x4896 + x4904
    x4906 = x13 * x4809 + x18 * x4897 + x4905
    x4907 = -x4162 * x671 + x4235 * x659
    x4908 = x13 * x4811 + x16 * x4878 + x16 * (x16 * x4907 + x4878) + x4880
    x4909 = x17 * x4907 + x4896
    x4910 = x13 * x4814 + x16 * x4909 + x17 * x4878 + x4885
    x4911 = -x4194 * x671 + x4241 * x659
    x4912 = x18 * x4907 + x4911
    x4913 = x13 * x4817 + x16 * x4912 + x4889
    x4914 = x17 * x4896 + x4901
    x4915 = x13 * x4820 + x17 * x4909 + x4914
    x4916 = x13 * x4822 + x17 * x4912 + x4905
    x4917 = x18 * x4911 + x4250 * x659 - x4251 * x671
    x4918 = x13 * x4825 + x18 * x4912 + x4917
    x4919 = (
        -x4204 * x671
        + x4254 * x659
        + x90 * (-x4145 * x671 + x4200 * x659 + x84 * (-x4127 * x671 + x4133 * x659))
    )
    x4920 = x13 * x4827 + x16 * x4893 + x16 * (x16 * x4919 + x4893) + x4882
    x4921 = (
        -x4214 * x671
        + x4257 * x659
        + x92
        * (
            -x4174 * x671
            + x4204 * x659
            + x90 * (x4145 * x659 - x4146 * x671 + x84 * (x4127 * x659 - x4128 * x671))
        )
    )
    x4922 = x17 * x4919 + x4921
    x4923 = x13 * x4830 + x16 * x4922 + x4899
    x4924 = (
        -x4220 * x671
        + x4261 * x659
        + x90 * (-x4183 * x671 + x4209 * x659 + x84 * (x4160 * x659 - x4161 * x671))
    )
    x4925 = x18 * x4919 + x4924
    x4926 = x13 * x4833 + x16 * x4925 + x4902
    x4927 = (
        x13 * x4835
        + x17 * x4921
        + x17 * x4922
        + x4265 * x659
        - x4266 * x671
        + x94
        * (
            x4214 * x659
            - x4215 * x671
            + x92
            * (
                x4174 * x659
                - x4175 * x671
                + x90
                * (x4146 * x659 - x4153 * x671 + x84 * (x4128 * x659 - x4139 * x671))
            )
        )
    )
    x4928 = (
        x4268 * x659
        - x4269 * x671
        + x92
        * (
            x4220 * x659
            - x4221 * x671
            + x90 * (x4183 * x659 - x4184 * x671 + x84 * (x4161 * x659 - x4168 * x671))
        )
    )
    x4929 = x13 * x4837 + x17 * x4925 + x18 * x4921 + x4928
    x4930 = (
        x4272 * x659
        - x4273 * x671
        + x90 * (x4227 * x659 - x4228 * x671 + x84 * (x4192 * x659 - x4193 * x671))
    )
    x4931 = x18 * x4924 + x4930
    x4932 = x13 * x4840 + x18 * x4925 + x4931
    x4933 = -x4209 * x671 + x4277 * x659 + x84 * (-x4160 * x671 + x4234 * x659)
    x4934 = x13 * x4842 + x16 * x4896 + x16 * (x16 * x4933 + x4896) + x4885
    x4935 = x17 * x4933 + x4924
    x4936 = x13 * x4845 + x16 * x4935 + x4914
    x4937 = -x4227 * x671 + x4282 * x659 + x84 * (-x4192 * x671 + x4240 * x659)
    x4938 = x18 * x4933 + x4937
    x4939 = x13 * x4848 + x16 * x4938 + x4905
    x4940 = x13 * x4850 + x17 * x4924 + x17 * x4935 + x4928
    x4941 = x13 * x4852 + x17 * x4938 + x4931
    x4942 = (
        x18 * x4937 + x4288 * x659 - x4289 * x671 + x84 * (x4248 * x659 - x4249 * x671)
    )
    x4943 = x13 * x4855 + x18 * x4938 + x4942
    x4944 = -x4240 * x671 + x4292 * x659
    x4945 = x13 * x4857 + x16 * x4911 + x16 * (x16 * x4944 + x4911) + x4888
    x4946 = x17 * x4944 + x4937
    x4947 = x13 * x4860 + x16 * x4946 + x17 * x4911 + x4904
    x4948 = -x4248 * x671 + x4297 * x659
    x4949 = x18 * x4944 + x4948
    x4950 = x13 * x4863 + x16 * x4949 + x4917
    x4951 = x13 * x4865 + x17 * x4937 + x17 * x4946 + x4930
    x4952 = x13 * x4867 + x17 * x4949 + x4942
    x4953 = x13 * x4869 + x18 * x4948 + x18 * x4949 + x4303 * x659 - x4304 * x671
    x4954 = x16 * x2689 + x16 * (x16 * x2737 + x2689) + x2685
    x4955 = x17 * x2737 + x2777
    x4956 = x16 * x4955 + x17 * x2689 + x2813
    x4957 = x18 * x2737 + x2837
    x4958 = x16 * x4957 + x18 * x2689 + x2863
    x4959 = x17 * x2777 + x2881
    x4960 = x17 * x4955 + x4959
    x4961 = x18 * x2777 + x2913
    x4962 = x17 * x4957 + x4961
    x4963 = x18 * x2837 + x2937
    x4964 = x18 * x4957 + x4963
    x4965 = x16 * x2777 + x16 * (x16 * x2960 + x2777) + x2813
    x4966 = x17 * x2960 + x2971
    x4967 = x16 * x4966 + x4959
    x4968 = x18 * x2960 + x2983
    x4969 = x16 * x4968 + x4961
    x4970 = x17 * x2971 + x2996
    x4971 = x17 * x4966 + x4970
    x4972 = x18 * x2971 + x3014
    x4973 = x17 * x4968 + x4972
    x4974 = x18 * x2983 + x3031
    x4975 = x18 * x4968 + x4974
    x4976 = x16 * x2837 + x16 * (x16 * x3048 + x2837) + x2863
    x4977 = x17 * x3048 + x2983
    x4978 = x16 * x4977 + x17 * x2837 + x2913
    x4979 = x18 * x3048 + x3062
    x4980 = x16 * x4979 + x4963
    x4981 = x17 * x2983 + x3014
    x4982 = x17 * x4977 + x4981
    x4983 = x17 * x4979 + x4974
    x4984 = x18 * x3062 + x3080
    x4985 = x18 * x4979 + x4984
    x4986 = x16 * x2971 + x16 * (x16 * x3094 + x2971) + x2881
    x4987 = x17 * x3094 + x3101
    x4988 = x16 * x4987 + x4970
    x4989 = x18 * x3094 + x3109
    x4990 = x16 * x4989 + x4972
    x4991 = x17 * x3101 + x17 * x4987 + x3118
    x4992 = x17 * x4989 + x18 * x3101 + x3126
    x4993 = x18 * x3109 + x3135
    x4994 = x18 * x4989 + x4993
    x4995 = x16 * x2983 + x16 * (x16 * x3145 + x2983) + x2913
    x4996 = x17 * x3145 + x3109
    x4997 = x16 * x4996 + x4981
    x4998 = x18 * x3145 + x3155
    x4999 = x16 * x4998 + x4974
    x5000 = x17 * x3109 + x17 * x4996 + x3126
    x5001 = x17 * x4998 + x4993
    x5002 = x18 * x3155 + x3168
    x5003 = x18 * x4998 + x5002
    x5004 = x16 * x3062 + x16 * (x16 * x3176 + x3062) + x2937
    x5005 = x17 * x3176 + x3155
    x5006 = x16 * x5005 + x17 * x3062 + x3031
    x5007 = x18 * x3176 + x3186
    x5008 = x16 * x5007 + x4984
    x5009 = x17 * x3155 + x17 * x5005 + x3135
    x5010 = x17 * x5007 + x5002
    x5011 = x18 * x3186 + x18 * x5007 + x3199
    x5012 = x12 * x4954 + x4777
    x5013 = x12 * x4956 + x4780
    x5014 = x12 * x4958 + x4783
    x5015 = x12 * x4960 + x4786
    x5016 = x12 * x4962 + x4789
    x5017 = x12 * x4964 + x4792
    x5018 = x12 * x4965 + x4794
    x5019 = x12 * x4967 + x4797
    x5020 = x12 * x4969 + x4800
    x5021 = x12 * x4971 + x4803
    x5022 = x12 * x4973 + x4806
    x5023 = x12 * x4975 + x4809
    x5024 = x12 * x4976 + x4811
    x5025 = x12 * x4978 + x4814
    x5026 = x12 * x4980 + x4817
    x5027 = x12 * x4982 + x4820
    x5028 = x12 * x4983 + x4822
    x5029 = x12 * x4985 + x4825
    x5030 = x12 * x4986 + x4827
    x5031 = x12 * x4988 + x4830
    x5032 = x12 * x4990 + x4833
    x5033 = x12 * x4991 + x4835
    x5034 = x12 * x4992 + x4837
    x5035 = x12 * x4994 + x4840
    x5036 = x12 * x4995 + x4842
    x5037 = x12 * x4997 + x4845
    x5038 = x12 * x4999 + x4848
    x5039 = x12 * x5000 + x4850
    x5040 = x12 * x5001 + x4852
    x5041 = x12 * x5003 + x4855
    x5042 = x12 * x5004 + x4857
    x5043 = x12 * x5006 + x4860
    x5044 = x12 * x5008 + x4863
    x5045 = x12 * x5009 + x4865
    x5046 = x12 * x5010 + x4867
    x5047 = x12 * x5011 + x4869
    x5048 = x16 * x4123 + x16 * (x16 * x4132 + x4123) + x4136
    x5049 = x13 * x4954 + x5048
    x5050 = x17 * x4132 + x4143
    x5051 = x16 * x5050 + x17 * x4123 + x4151
    x5052 = x13 * x4956 + x5051
    x5053 = x18 * x4132 + x4158
    x5054 = x16 * x5053 + x18 * x4123 + x4166
    x5055 = x13 * x4958 + x5054
    x5056 = x17 * x4143 + x4173
    x5057 = x17 * x5050 + x5056
    x5058 = x13 * x4960 + x5057
    x5059 = x18 * x4143 + x4182
    x5060 = x17 * x5053 + x5059
    x5061 = x13 * x4962 + x5060
    x5062 = x18 * x4158 + x4191
    x5063 = x18 * x5053 + x5062
    x5064 = x13 * x4964 + x5063
    x5065 = x16 * x4143 + x16 * (x16 * x4201 + x4143) + x4151
    x5066 = x13 * x4965 + x5065
    x5067 = x17 * x4201 + x4205
    x5068 = x16 * x5067 + x5056
    x5069 = x13 * x4967 + x5068
    x5070 = x18 * x4201 + x4210
    x5071 = x16 * x5070 + x5059
    x5072 = x13 * x4969 + x5071
    x5073 = x17 * x4205 + x4216
    x5074 = x17 * x5067 + x5073
    x5075 = x13 * x4971 + x5074
    x5076 = x18 * x4205 + x4222
    x5077 = x17 * x5070 + x5076
    x5078 = x13 * x4973 + x5077
    x5079 = x18 * x4210 + x4229
    x5080 = x18 * x5070 + x5079
    x5081 = x13 * x4975 + x5080
    x5082 = x16 * x4158 + x16 * (x16 * x4235 + x4158) + x4166
    x5083 = x13 * x4976 + x5082
    x5084 = x17 * x4235 + x4210
    x5085 = x16 * x5084 + x17 * x4158 + x4182
    x5086 = x13 * x4978 + x5085
    x5087 = x18 * x4235 + x4241
    x5088 = x16 * x5087 + x5062
    x5089 = x13 * x4980 + x5088
    x5090 = x17 * x4210 + x4222
    x5091 = x17 * x5084 + x5090
    x5092 = x13 * x4982 + x5091
    x5093 = x17 * x5087 + x5079
    x5094 = x13 * x4983 + x5093
    x5095 = x18 * x4241 + x4250
    x5096 = x18 * x5087 + x5095
    x5097 = x13 * x4985 + x5096
    x5098 = x16 * x4205 + x16 * (x16 * x4254 + x4205) + x4173
    x5099 = x13 * x4986 + x5098
    x5100 = x17 * x4254 + x4257
    x5101 = x16 * x5100 + x5073
    x5102 = x13 * x4988 + x5101
    x5103 = x18 * x4254 + x4261
    x5104 = x16 * x5103 + x5076
    x5105 = x13 * x4990 + x5104
    x5106 = x17 * x4257 + x17 * x5100 + x4265
    x5107 = x13 * x4991 + x5106
    x5108 = x17 * x5103 + x18 * x4257 + x4268
    x5109 = x13 * x4992 + x5108
    x5110 = x18 * x4261 + x4272
    x5111 = x18 * x5103 + x5110
    x5112 = x13 * x4994 + x5111
    x5113 = x16 * x4210 + x16 * (x16 * x4277 + x4210) + x4182
    x5114 = x13 * x4995 + x5113
    x5115 = x17 * x4277 + x4261
    x5116 = x16 * x5115 + x5090
    x5117 = x13 * x4997 + x5116
    x5118 = x18 * x4277 + x4282
    x5119 = x16 * x5118 + x5079
    x5120 = x13 * x4999 + x5119
    x5121 = x17 * x4261 + x17 * x5115 + x4268
    x5122 = x13 * x5000 + x5121
    x5123 = x17 * x5118 + x5110
    x5124 = x13 * x5001 + x5123
    x5125 = x18 * x4282 + x4288
    x5126 = x18 * x5118 + x5125
    x5127 = x13 * x5003 + x5126
    x5128 = x16 * x4241 + x16 * (x16 * x4292 + x4241) + x4191
    x5129 = x13 * x5004 + x5128
    x5130 = x17 * x4292 + x4282
    x5131 = x16 * x5130 + x17 * x4241 + x4229
    x5132 = x13 * x5006 + x5131
    x5133 = x18 * x4292 + x4297
    x5134 = x16 * x5133 + x5095
    x5135 = x13 * x5008 + x5134
    x5136 = x17 * x4282 + x17 * x5130 + x4272
    x5137 = x13 * x5009 + x5136
    x5138 = x17 * x5133 + x5125
    x5139 = x13 * x5010 + x5138
    x5140 = x18 * x4297 + x18 * x5133 + x4303
    x5141 = x13 * x5011 + x5140
    x5142 = x1076 * x4123 - x1089 * x4124 + 3 * x2690
    x5143 = x1076 * x4132 - x1089 * x4125 + 3 * x2738
    x5144 = x1076 * x4143 - x1089 * x4144 + 3 * x2778
    x5145 = x17 * x5143 + x5144
    x5146 = x1076 * x4151 - x1089 * x4155 + 3 * x2814
    x5147 = (
        x1076 * x4158
        - x1089 * x4159
        + 3 * x2838
        + x84 * (x1076 * x4125 - x1089 * x4126 + 3 * x2732)
    )
    x5148 = x18 * x5143 + x5147
    x5149 = (
        x1076 * x4166
        - x1089 * x4170
        + 3 * x2864
        + x84 * (x1076 * x4124 - x1089 * x4137 + 3 * x2752)
    )
    x5150 = x1076 * x4173 - x1089 * x4178 + 3 * x2882
    x5151 = x17 * x5144 + x5150
    x5152 = (
        x1076 * x4182
        - x1089 * x4187
        + 3 * x2914
        + x84 * (x1076 * x4144 - x1089 * x4152 + 3 * x2816)
    )
    x5153 = x18 * x5144 + x5152
    x5154 = (
        x1076 * x4191
        - x1089 * x4196
        + 3 * x2938
        + x90
        * (
            x1076 * x4159
            - x1089 * x4167
            + 3 * x2866
            + x84 * (x1076 * x4126 - x1089 * x4138 + 3 * x2769)
        )
    )
    x5155 = x18 * x5147 + x5154
    x5156 = x1076 * x4201 - x1089 * x4147 + 3 * x2961
    x5157 = x1076 * x4205 - x1089 * x4176 + 3 * x2972
    x5158 = x17 * x5156 + x5157
    x5159 = (
        x1076 * x4210
        - x1089 * x4185
        + 3 * x2984
        + x84 * (x1076 * x4147 - x1089 * x4148 + 3 * x2807)
    )
    x5160 = x18 * x5156 + x5159
    x5161 = x1076 * x4216 - x1089 * x4217 + x17 * x5157 + 3 * x2997
    x5162 = (
        x1076 * x4222
        - x1089 * x4223
        + 3 * x3015
        + x84 * (x1076 * x4176 - x1089 * x4177 + 3 * x2896)
    )
    x5163 = x18 * x5157 + x5162
    x5164 = (
        x1076 * x4229
        - x1089 * x4230
        + 3 * x3032
        + x90
        * (
            x1076 * x4185
            - x1089 * x4186
            + 3 * x2924
            + x84 * (x1076 * x4148 - x1089 * x4154 + 3 * x2829)
        )
    )
    x5165 = x18 * x5159 + x5164
    x5166 = (
        x1076 * x4235
        - x1089 * x4162
        + 3 * x3049
        + x84 * (x1076 * x4134 - x1089 * x4129 + 3 * x2748)
    )
    x5167 = x17 * x5166 + x5159
    x5168 = (
        x1076 * x4241
        - x1089 * x4194
        + 3 * x3063
        + x90
        * (
            x1076 * x4162
            - x1089 * x4163
            + 3 * x2857
            + x84 * (x1076 * x4129 - x1089 * x4130 + 3 * x2733)
        )
    )
    x5169 = x18 * x5166 + x5168
    x5170 = x17 * x5159 + x5162
    x5171 = (
        x1076 * x4250
        - x1089 * x4251
        + x18 * x5168
        + 3 * x3081
        + x92
        * (
            x1076 * x4194
            - x1089 * x4195
            + 3 * x2948
            + x90
            * (
                x1076 * x4163
                - x1089 * x4169
                + 3 * x2873
                + x84 * (x1076 * x4130 - x1089 * x4140 + 3 * x2770)
            )
        )
    )
    x5172 = x1076 * x4254 - x1089 * x4204 + 3 * x3095
    x5173 = x1076 * x4257 - x1089 * x4214 + 3 * x3102
    x5174 = x17 * x5172 + x5173
    x5175 = (
        x1076 * x4261
        - x1089 * x4220
        + 3 * x3110
        + x84 * (x1076 * x4204 - x1089 * x4174 + 3 * x2975)
    )
    x5176 = x18 * x5172 + x5175
    x5177 = (
        x1076 * x4268
        - x1089 * x4269
        + 3 * x3127
        + x84 * (x1076 * x4214 - x1089 * x4215 + 3 * x3001)
    )
    x5178 = (
        x1076 * x4272
        - x1089 * x4273
        + 3 * x3136
        + x90
        * (
            x1076 * x4220
            - x1089 * x4221
            + 3 * x3019
            + x84 * (x1076 * x4174 - x1089 * x4175 + 3 * x2897)
        )
    )
    x5179 = x18 * x5175 + x5178
    x5180 = (
        x1076 * x4277
        - x1089 * x4209
        + 3 * x3146
        + x84 * (x1076 * x4200 - x1089 * x4145 + 3 * x2964)
    )
    x5181 = x17 * x5180 + x5175
    x5182 = (
        x1076 * x4282
        - x1089 * x4227
        + 3 * x3156
        + x90
        * (
            x1076 * x4209
            - x1089 * x4183
            + 3 * x2987
            + x84 * (x1076 * x4145 - x1089 * x4146 + 3 * x2808)
        )
    )
    x5183 = x18 * x5180 + x5182
    x5184 = (
        x1076 * x4288
        - x1089 * x4289
        + x18 * x5182
        + 3 * x3169
        + x92
        * (
            x1076 * x4227
            - x1089 * x4228
            + 3 * x3036
            + x90
            * (
                x1076 * x4183
                - x1089 * x4184
                + 3 * x2925
                + x84 * (x1076 * x4146 - x1089 * x4153 + 3 * x2830)
            )
        )
    )
    x5185 = (
        x1076 * x4292
        - x1089 * x4240
        + 3 * x3177
        + x90
        * (
            x1076 * x4234
            - x1089 * x4160
            + 3 * x3052
            + x84 * (x1076 * x4133 - x1089 * x4127 + 3 * x2749)
        )
    )
    x5186 = x17 * x5185 + x5182
    x5187 = (
        x1076 * x4297
        - x1089 * x4248
        + 3 * x3187
        + x92
        * (
            x1076 * x4240
            - x1089 * x4192
            + 3 * x3066
            + x90
            * (
                x1076 * x4160
                - x1089 * x4161
                + 3 * x2858
                + x84 * (x1076 * x4127 - x1089 * x4128 + 3 * x2734)
            )
        )
    )
    x5188 = x18 * x5185 + x5187

    # 1296 item(s)
    S = numpy.array(
        [
            x11 * x251
            + x11 * (x11 * x253 + x251)
            + x16 * x226
            + x16 * (x226 + x249)
            + x163 * (-x128 + x162)
            + x173 * x80
            - x85
            * (
                x127 * x80
                + x164 * (-x114 + x95)
                + x197 * x94
                - x85
                * (
                    x113 * x80
                    + x174
                    + x193 * x94
                    - x85 * (x104 * x80 - x181 * x85 + x185 * x94)
                )
            )
            + x94
            * (
                x163 * (x161 - x165)
                + x172 * x80
                - x197 * x85
                + x92
                * (
                    x163 * (x160 - x166)
                    + x171 * x80
                    - x196 * x85
                    + x90
                    * (
                        x163 * (x159 - x169)
                        + x170 * x80
                        - x195 * x85
                        + x84 * (x163 * (x157 - x167) + x168 * x80 - x194 * x85)
                    )
                )
            ),
            x11 * x376 + x11 * (x11 * x379 + x376) + x16 * x382 + x17 * x226 + x401,
            x11 * x402 + x11 * (x11 * x403 + x402) + x18 * x226 + x18 * x249,
            x11 * x473 + x11 * (x11 * x475 + x473) + x17 * x382 + x490,
            x11 * x492 + x11 * (x11 * x494 + x492) + x18 * x380 + x495,
            x11 * x496 + x11 * (x242 * x497 + x496) + x19 * x248,
            x11 * x514
            + x11 * (x11 * x516 + x514)
            + x16 * x381
            + x16 * (x381 + x518)
            + x401,
            x11 * x536 + x11 * (x11 * x539 + x536) + x16 * x542 + x490,
            x11 * x543 + x11 * (x11 * x544 + x543) + x18 * x518 + x495,
            x11 * x585 + x11 * (x11 * x587 + x585) + x17 * x542 + x595,
            x11 * x597 + x11 * (x11 * x599 + x597) + x18 * x540 + x600,
            x11 * x601 + x11 * (x497 * x510 + x601) + x19 * x517,
            0,
            0,
            0,
            0,
            0,
            0,
            x11 * x610
            + x11 * (x11 * x612 + x610)
            + x16 * x541
            + x16 * (x541 + x614)
            + x489,
            x11 * x624 + x11 * (x11 * x627 + x624) + x16 * x630 + x595,
            x11 * x631 + x11 * (x11 * x632 + x631) + x18 * x614 + x600,
            x11 * x654
            + x11 * (x11 * x655 + x654)
            + x163 * (-x644 + x650)
            + x17 * x629
            + x17 * x630
            + x651 * x80
            - x85
            * (
                x164 * (x635 * x80 - x637 - x642)
                + x643 * x80
                - x85 * (x641 * x80 + x652 - x85 * (x639 * x80 - x653 * x85))
            ),
            x11 * x656 + x11 * (x11 * x657 + x656) + x18 * x628 + x18 * x629,
            x11 * x658 + x11 * (x497 * x606 + x658) + x19 * x613,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            x11 * x775 + x12 * x251 + x797,
            x11 * x861 + x12 * x376 + x880,
            x11 * x882 + x12 * x402 + x883,
            x11 * x917 + x12 * x473 + x930,
            x11 * x933 + x12 * x492 + x935,
            x11 * x938 + x12 * x496 + x939,
            x11 * x955 + x12 * x514 + x958,
            x11 * x975 + x12 * x536 + x979,
            x11 * x981 + x12 * x543 + x982,
            x1006 * x11 + x1014 + x12 * x585,
            x1017 * x11 + x1019 + x12 * x597,
            x1021 * x11 + x1022 + x12 * x601,
            0,
            0,
            0,
            0,
            0,
            0,
            x1032 * x11 + x1035 + x12 * x610,
            x1046 * x11 + x1050 + x12 * x624,
            x1052 * x11 + x1053 + x12 * x631,
            x1066 * x11 + x1069 + x12 * x654,
            x1071 * x11 + x1072 + x12 * x656,
            x1074 * x11 + x1075 + x12 * x658,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            x11 * x1211 + x1240 + x13 * x251,
            x11 * x1326 + x13 * x376 + x1350,
            x11 * x1394 + x13 * x402 + x1412,
            x11 * x1458 + x13 * x473 + x1475,
            x11 * x1497 + x13 * x492 + x1510,
            x11 * x1532 + x13 * x496 + x1542,
            x11 * x1560 + x13 * x514 + x1562,
            x11 * x1581 + x13 * x536 + x1584,
            x11 * x1598 + x13 * x543 + x1601,
            x11 * x1632 + x13 * x585 + x1642,
            x11 * x1658 + x13 * x597 + x1667,
            x11 * x1681 + x13 * x601 + x1688,
            x1702,
            x1706,
            x1720,
            x1724,
            x1726,
            x1747,
            x11 * x1757 + x13 * x610 + x1759,
            x11 * x1770 + x13 * x624 + x1773,
            x11 * x1782 + x13 * x631 + x1785,
            x11 * x1800 + x13 * x654 + x1803,
            x11 * x1812 + x13 * x656 + x1816,
            x11 * x1825 + x13 * x658 + x1829,
            x1838,
            x1842,
            x1852,
            x1854,
            x1856,
            x1867,
            x1875,
            x1879,
            x1889,
            x1891,
            x1893,
            x1904,
            x12 * x775 + x1971,
            x12 * x861 + x2016,
            x12 * x882 + x2018,
            x12 * x917 + x2042,
            x12 * x933 + x2045,
            x12 * x938 + x2047,
            x12 * x955 + x2059,
            x12 * x975 + x2072,
            x12 * x981 + x2074,
            x1006 * x12 + x2090,
            x1017 * x12 + x2093,
            x1021 * x12 + x2095,
            0,
            0,
            0,
            0,
            0,
            0,
            x1032 * x12 + x2103,
            x1046 * x12 + x2112,
            x1052 * x12 + x2114,
            x1066 * x12 + x2122,
            x1071 * x12 + x2124,
            x1074 * x12 + x2126,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            x12 * x1211 + x2224,
            x12 * x1326 + x2284,
            x12 * x1394 + x2337,
            x12 * x1458 + x2369,
            x12 * x1497 + x2394,
            x12 * x1532 + x2421,
            x12 * x1560 + x2432,
            x12 * x1581 + x2444,
            x12 * x1598 + x2457,
            x12 * x1632 + x2475,
            x12 * x1658 + x2493,
            x12 * x1681 + x2510,
            x2525,
            x2528,
            x2542,
            x2545,
            x2547,
            x2565,
            x12 * x1757 + x2572,
            x12 * x1770 + x2580,
            x12 * x1782 + x2589,
            x12 * x1800 + x2597,
            x12 * x1812 + x2607,
            x12 * x1825 + x2617,
            x2625,
            x2628,
            x2636,
            x2638,
            x2640,
            x2649,
            x2657,
            x2660,
            x2669,
            x2671,
            x2673,
            x2682,
            x1211 * x13 + x2774,
            x13 * x1326 + x2834,
            x13 * x1394 + x2878,
            x13 * x1458 + x2910,
            x13 * x1497 + x2934,
            x13 * x1532 + x2958,
            x13 * x1560 + x2969,
            x13 * x1581 + x2981,
            x13 * x1598 + x2993,
            x13 * x1632 + x3011,
            x13 * x1658 + x3028,
            x13 * x1681 + x3045,
            2 * x3046 + x3056,
            2 * x3057 + x3059,
            2 * x3060 + x3071,
            2 * x3072 + x3074,
            2 * x3075 + x3076,
            2 * x3077 + x3092,
            x13 * x1757 + x3099,
            x13 * x1770 + x3107,
            x13 * x1782 + x3115,
            x13 * x1800 + x3123,
            x13 * x1812 + x3132,
            x13 * x1825 + x3142,
            2 * x3143 + x3149,
            2 * x3150 + x3152,
            2 * x3153 + x3160,
            2 * x3161 + x3162,
            2 * x3163 + x3164,
            2 * x3165 + x3173,
            2 * x3174 + x3180,
            2 * x3181 + x3183,
            2 * x3184 + x3191,
            2 * x3192 + x3193,
            2 * x3194 + x3195,
            2 * x3196 + x3203,
            x11 * x774 + x11 * (x11 * x3205 + x774) + x797,
            x11 * x860 + x11 * (x11 * x3208 + x860) + x880,
            x11 * x881 + x11 * (x11 * x3209 + x881) + x883,
            x11 * x916 + x11 * (x11 * x3211 + x916) + x930,
            x11 * x932 + x11 * (x11 * x3213 + x932) + x935,
            x11 * x937 + x11 * (x497 * x728 + x937) + x939,
            x11 * x954 + x11 * (x11 * x3215 + x954) + x958,
            x11 * x974 + x11 * (x11 * x3218 + x974) + x979,
            x11 * x980 + x11 * (x11 * x3219 + x980) + x982,
            x1005 * x11 + x1014 + x11 * (x1005 + x11 * x3221),
            x1016 * x11 + x1019 + x11 * (x1016 + x11 * x3223),
            x1020 * x11 + x1022 + x11 * (x1020 + x497 * x950),
            0,
            0,
            0,
            0,
            0,
            0,
            x1031 * x11 + x1035 + x11 * (x1031 + x11 * x3225),
            x1045 * x11 + x1050 + x11 * (x1045 + x11 * x3228),
            x1051 * x11 + x1053 + x11 * (x1051 + x11 * x3229),
            x1065 * x11 + x1069 + x11 * (x1065 + x11 * x3230),
            x1070 * x11 + x1072 + x11 * (x1070 + x11 * x3231),
            x1073 * x11 + x1075 + x11 * (x1027 * x497 + x1073),
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            x11 * x3234 + x1971,
            x11 * x3238 + x2016,
            x11 * x3240 + x2018,
            x11 * x3243 + x2042,
            x11 * x3246 + x2045,
            x11 * x3248 + x2047,
            x11 * x3251 + x2059,
            x11 * x3255 + x2072,
            x11 * x3257 + x2074,
            x11 * x3260 + x2090,
            x11 * x3263 + x2093,
            x11 * x3265 + x2095,
            0,
            0,
            0,
            0,
            0,
            0,
            x11 * x3268 + x2103,
            x11 * x3272 + x2112,
            x11 * x3274 + x2114,
            x11 * x3276 + x2122,
            x11 * x3278 + x2124,
            x11 * x3280 + x2126,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            x11 * x3282 + x2224,
            x11 * x3285 + x2284,
            x11 * x3288 + x2337,
            x11 * x3291 + x2369,
            x11 * x3294 + x2394,
            x11 * x3297 + x2421,
            x11 * x3299 + x2432,
            x11 * x3302 + x2444,
            x11 * x3305 + x2457,
            x11 * x3308 + x2475,
            x11 * x3311 + x2493,
            x11 * x3314 + x2510,
            x3316,
            x3319,
            x3322,
            x3325,
            x3327,
            x3330,
            x11 * x3332 + x2572,
            x11 * x3335 + x2580,
            x11 * x3338 + x2589,
            x11 * x3340 + x2597,
            x11 * x3342 + x2607,
            x11 * x3345 + x2617,
            x3347,
            x3350,
            x3353,
            x3355,
            x3357,
            x3360,
            x3362,
            x3365,
            x3368,
            x3370,
            x3372,
            x3374,
            x12 * x3234 + x3395,
            x12 * x3238 + x3411,
            x12 * x3240 + x3412,
            x12 * x3243 + x3421,
            x12 * x3246 + x3423,
            x12 * x3248 + x3424,
            x12 * x3251 + x3429,
            x12 * x3255 + x3435,
            x12 * x3257 + x3436,
            x12 * x3260 + x3442,
            x12 * x3263 + x3444,
            x12 * x3265 + x3445,
            0,
            0,
            0,
            0,
            0,
            0,
            x12 * x3268 + x3449,
            x12 * x3272 + x3454,
            x12 * x3274 + x3455,
            x12 * x3276 + x3458,
            x12 * x3278 + x3459,
            x12 * x3280 + x3460,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            x12 * x3282 + x3481,
            x12 * x3285 + x3497,
            x12 * x3288 + x3513,
            x12 * x3291 + x3523,
            x12 * x3294 + x3533,
            x12 * x3297 + x3543,
            x12 * x3299 + x3548,
            x12 * x3302 + x3554,
            x12 * x3305 + x3560,
            x12 * x3308 + x3567,
            x12 * x3311 + x3575,
            x12 * x3314 + x3583,
            x3588,
            x3591,
            x3597,
            x3600,
            x3602,
            x3609,
            x12 * x3332 + x3613,
            x12 * x3335 + x3618,
            x12 * x3338 + x3623,
            x12 * x3340 + x3627,
            x12 * x3342 + x3632,
            x12 * x3345 + x3638,
            x3642,
            x3645,
            x3650,
            x3652,
            x3654,
            x3659,
            x3663,
            x3666,
            x3671,
            x3673,
            x3675,
            x3679,
            x13 * x3282 + x3700,
            x13 * x3285 + x3716,
            x13 * x3288 + x3732,
            x13 * x3291 + x3742,
            x13 * x3294 + x3752,
            x13 * x3297 + x3762,
            x13 * x3299 + x3767,
            x13 * x3302 + x3773,
            x13 * x3305 + x3779,
            x13 * x3308 + x3786,
            x13 * x3311 + x3794,
            x13 * x3314 + x3802,
            2 * x3803 + x3807,
            2 * x3808 + x3810,
            2 * x3811 + x3816,
            2 * x3817 + x3819,
            2 * x3820 + x3821,
            2 * x3822 + x3828,
            x13 * x3332 + x3832,
            x13 * x3335 + x3837,
            x13 * x3338 + x3842,
            x13 * x3340 + x3846,
            x13 * x3342 + x3851,
            x13 * x3345 + x3857,
            2 * x3858 + x3861,
            2 * x3862 + x3864,
            2 * x3865 + x3869,
            2 * x3870 + x3871,
            2 * x3872 + x3873,
            2 * x3874 + x3878,
            2 * x3879 + x3882,
            2 * x3883 + x3885,
            2 * x3886 + x3890,
            2 * x3891 + x3892,
            2 * x3893 + x3894,
            2 * x3895 + x3898,
            x11 * x1210 + x11 * (x11 * x3899 + x1210) + x1240,
            x11 * x1325 + x11 * (x11 * x3901 + x1325) + x1350,
            x11 * x1393 + x11 * (x11 * x3903 + x1393) + x1412,
            x11 * x1457 + x11 * (x11 * x3905 + x1457) + x1475,
            x11 * x1496 + x11 * (x11 * x3907 + x1496) + x1510,
            x11 * x1531 + x11 * (x11 * x3909 + x1531) + x1542,
            x11 * x1559 + x11 * (x11 * x3910 + x1559) + x1562,
            x11 * x1580 + x11 * (x11 * x3912 + x1580) + x1584,
            x11 * x1597 + x11 * (x11 * x3914 + x1597) + x1601,
            x11 * x1631 + x11 * (x11 * x3916 + x1631) + x1642,
            x11 * x1657 + x11 * (x11 * x3918 + x1657) + x1667,
            x11 * x1680 + x11 * (x11 * x3920 + x1680) + x1688,
            x11 * (x11 * x3921 + x1700) + x1702,
            x11 * (x11 * x3923 + x1704) + x1706,
            x11 * (x11 * x3925 + x1717) + x1720,
            x11 * (x11 * x3927 + x1722) + x1724,
            x11 * (x11 * x3928 + x1725) + x1726,
            x11 * (x11 * x3930 + x1741) + x1747,
            x11 * x1756 + x11 * (x11 * x3931 + x1756) + x1759,
            x11 * x1769 + x11 * (x11 * x3933 + x1769) + x1773,
            x11 * x1781 + x11 * (x11 * x3935 + x1781) + x1785,
            x11 * x1799 + x11 * (x11 * x3936 + x1799) + x1803,
            x11 * x1811 + x11 * (x11 * x3937 + x1811) + x1816,
            x11 * x1824 + x11 * (x11 * x3939 + x1824) + x1829,
            x11 * (x11 * x3940 + x1836) + x1838,
            x11 * (x11 * x3942 + x1840) + x1842,
            x11 * (x11 * x3944 + x1849) + x1852,
            x11 * (x11 * x3945 + x1853) + x1854,
            x11 * (x11 * x3946 + x1855) + x1856,
            x11 * (x11 * x3948 + x1864) + x1867,
            x11 * (x11 * x3949 + x1873) + x1875,
            x11 * (x11 * x3951 + x1877) + x1879,
            x11 * (x11 * x3953 + x1886) + x1889,
            x11 * (x11 * x3954 + x1890) + x1891,
            x11 * (x11 * x3955 + x1892) + x1893,
            x11 * (x11 * x3956 + x1903) + x1904,
            x11 * x3957 + x12 * x1210 + x2223,
            x11 * x3958 + x12 * x1325 + x2283,
            x11 * x3959 + x12 * x1393 + x2336,
            x11 * x3960 + x12 * x1457 + x2368,
            x11 * x3961 + x12 * x1496 + x2393,
            x11 * x3962 + x12 * x1531 + x2420,
            x11 * x3963 + x12 * x1559 + x2431,
            x11 * x3964 + x12 * x1580 + x2443,
            x11 * x3965 + x12 * x1597 + x2456,
            x11 * x3966 + x12 * x1631 + x2474,
            x11 * x3967 + x12 * x1657 + x2492,
            x11 * x3968 + x12 * x1680 + x2509,
            x11 * x3969 + x2525,
            x11 * x3970 + x2528,
            x11 * x3971 + x2542,
            x11 * x3972 + x2545,
            x11 * x3973 + x2547,
            x11 * x3974 + x2565,
            x11 * x3975 + x12 * x1756 + x2571,
            x11 * x3976 + x12 * x1769 + x2579,
            x11 * x3977 + x12 * x1781 + x2588,
            x11 * x3978 + x12 * x1799 + x2596,
            x11 * x3979 + x12 * x1811 + x2606,
            x11 * x3980 + x12 * x1824 + x2616,
            x11 * x3981 + x2625,
            x11 * x3982 + x2628,
            x11 * x3983 + x2636,
            x11 * x3984 + x2638,
            x11 * x3985 + x2640,
            x11 * x3986 + x2649,
            x11 * x3987 + x2657,
            x11 * x3988 + x2660,
            x11 * x3989 + x2669,
            x11 * x3990 + x2671,
            x11 * x3991 + x2673,
            x11 * x3992 + x2682,
            x11 * x3994 + x2774,
            x11 * x3997 + x2834,
            x11 * x4000 + x2878,
            x11 * x4003 + x2910,
            x11 * x4006 + x2934,
            x11 * x4009 + x2958,
            x11 * x4011 + x2969,
            x11 * x4014 + x2981,
            x11 * x4017 + x2993,
            x11 * x4020 + x3011,
            x11 * x4023 + x3028,
            x11 * x4026 + x3045,
            x11 * x4028 + x3046 + x3056,
            x11 * x4031 + x3057 + x3059,
            x11 * x4034 + x3060 + x3071,
            x11 * x4037 + x3072 + x3074,
            x11 * x4039 + x3075 + x3076,
            x11 * x4042 + x3077 + x3092,
            x11 * x4044 + x3099,
            x11 * x4047 + x3107,
            x11 * x4050 + x3115,
            x11 * x4052 + x3123,
            x11 * x4054 + x3132,
            x11 * x4057 + x3142,
            x11 * x4059 + x3143 + x3149,
            x11 * x4062 + x3150 + x3152,
            x11 * x4065 + x3153 + x3160,
            x11 * x4067 + x3161 + x3162,
            x11 * x4069 + x3163 + x3164,
            x11 * x4072 + x3165 + x3173,
            x11 * x4074 + x3174 + x3180,
            x11 * x4077 + x3181 + x3183,
            x11 * x4080 + x3184 + x3191,
            x11 * x4082 + x3192 + x3193,
            x11 * x4084 + x3194 + x3195,
            x11 * x4086 + x3196 + x3203,
            x12 * x3957 + x4087,
            x12 * x3958 + x4088,
            x12 * x3959 + x4089,
            x12 * x3960 + x4090,
            x12 * x3961 + x4091,
            x12 * x3962 + x4092,
            x12 * x3963 + x4093,
            x12 * x3964 + x4094,
            x12 * x3965 + x4095,
            x12 * x3966 + x4096,
            x12 * x3967 + x4097,
            x12 * x3968 + x4098,
            x12 * x3969 + x3588,
            x12 * x3970 + x3591,
            x12 * x3971 + x3597,
            x12 * x3972 + x3600,
            x12 * x3973 + x3602,
            x12 * x3974 + x3609,
            x12 * x3975 + x4099,
            x12 * x3976 + x4100,
            x12 * x3977 + x4101,
            x12 * x3978 + x4102,
            x12 * x3979 + x4103,
            x12 * x3980 + x4104,
            x12 * x3981 + x3642,
            x12 * x3982 + x3645,
            x12 * x3983 + x3650,
            x12 * x3984 + x3652,
            x12 * x3985 + x3654,
            x12 * x3986 + x3659,
            x12 * x3987 + x3663,
            x12 * x3988 + x3666,
            x12 * x3989 + x3671,
            x12 * x3990 + x3673,
            x12 * x3991 + x3675,
            x12 * x3992 + x3679,
            x12 * x3994 + x3700,
            x12 * x3997 + x3716,
            x12 * x4000 + x3732,
            x12 * x4003 + x3742,
            x12 * x4006 + x3752,
            x12 * x4009 + x3762,
            x12 * x4011 + x3767,
            x12 * x4014 + x3773,
            x12 * x4017 + x3779,
            x12 * x4020 + x3786,
            x12 * x4023 + x3794,
            x12 * x4026 + x3802,
            x12 * x4028 + x4105,
            x12 * x4031 + x4106,
            x12 * x4034 + x4107,
            x12 * x4037 + x4108,
            x12 * x4039 + x4109,
            x12 * x4042 + x4110,
            x12 * x4044 + x3832,
            x12 * x4047 + x3837,
            x12 * x4050 + x3842,
            x12 * x4052 + x3846,
            x12 * x4054 + x3851,
            x12 * x4057 + x3857,
            x12 * x4059 + x4111,
            x12 * x4062 + x4112,
            x12 * x4065 + x4113,
            x12 * x4067 + x4114,
            x12 * x4069 + x4115,
            x12 * x4072 + x4116,
            x12 * x4074 + x4117,
            x12 * x4077 + x4118,
            x12 * x4080 + x4119,
            x12 * x4082 + x4120,
            x12 * x4084 + x4121,
            x12 * x4086 + x4122,
            x13 * x3994 + x4142,
            x13 * x3997 + x4157,
            x13 * x4000 + x4172,
            x13 * x4003 + x4181,
            x13 * x4006 + x4190,
            x13 * x4009 + x4199,
            x13 * x4011 + x4203,
            x13 * x4014 + x4208,
            x13 * x4017 + x4213,
            x13 * x4020 + x4219,
            x13 * x4023 + x4226,
            x13 * x4026 + x4233,
            x13 * x4028 + x4237,
            x13 * x4031 + x4239,
            x13 * x4034 + x4244,
            x13 * x4037 + x4246,
            x13 * x4039 + x4247,
            x13 * x4042 + x4253,
            x13 * x4044 + x4256,
            x13 * x4047 + x4260,
            x13 * x4050 + x4264,
            x13 * x4052 + x4267,
            x13 * x4054 + x4271,
            x13 * x4057 + x4276,
            x13 * x4059 + x4279,
            x13 * x4062 + x4281,
            x13 * x4065 + x4285,
            x13 * x4067 + x4286,
            x13 * x4069 + x4287,
            x13 * x4072 + x4291,
            x13 * x4074 + x4294,
            x13 * x4077 + x4296,
            x13 * x4080 + x4300,
            x13 * x4082 + x4301,
            x13 * x4084 + x4302,
            x13 * x4086 + x4305,
            x11 * x3233 + x11 * (x11 * x4307 + x3233) + x1970,
            x11 * x3237 + x11 * (x11 * x4310 + x3237) + x2015,
            x11 * x3239 + x11 * (x11 * x4311 + x3239) + x2017,
            x11 * x3242 + x11 * (x11 * x4313 + x3242) + x2041,
            x11 * x3245 + x11 * (x11 * x4315 + x3245) + x2044,
            x11 * x3247 + x11 * (x1943 * x497 + x3247) + x2046,
            x11 * x3250 + x11 * (x11 * x4317 + x3250) + x2058,
            x11 * x3254 + x11 * (x11 * x4320 + x3254) + x2071,
            x11 * x3256 + x11 * (x11 * x4321 + x3256) + x2073,
            x11 * x3259 + x11 * (x11 * x4323 + x3259) + x2089,
            x11 * x3262 + x11 * (x11 * x4325 + x3262) + x2092,
            x11 * x3264 + x11 * (x2049 * x497 + x3264) + x2094,
            0,
            0,
            0,
            0,
            0,
            0,
            x11 * x3267 + x11 * (x11 * x4327 + x3267) + x2102,
            x11 * x3271 + x11 * (x11 * x4330 + x3271) + x2111,
            x11 * x3273 + x11 * (x11 * x4331 + x3273) + x2113,
            x11 * x3275 + x11 * (x11 * x4332 + x3275) + x2121,
            x11 * x3277 + x11 * (x11 * x4333 + x3277) + x2123,
            x11 * x3279 + x11 * (x2097 * x497 + x3279) + x2125,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            x11 * x4336 + x3395,
            x11 * x4340 + x3411,
            x11 * x4342 + x3412,
            x11 * x4345 + x3421,
            x11 * x4348 + x3423,
            x11 * x4350 + x3424,
            x11 * x4353 + x3429,
            x11 * x4357 + x3435,
            x11 * x4359 + x3436,
            x11 * x4362 + x3442,
            x11 * x4365 + x3444,
            x11 * x4367 + x3445,
            0,
            0,
            0,
            0,
            0,
            0,
            x11 * x4370 + x3449,
            x11 * x4374 + x3454,
            x11 * x4376 + x3455,
            x11 * x4378 + x3458,
            x11 * x4380 + x3459,
            x11 * x4382 + x3460,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            x11 * x4384 + x3481,
            x11 * x4387 + x3497,
            x11 * x4390 + x3513,
            x11 * x4393 + x3523,
            x11 * x4396 + x3533,
            x11 * x4399 + x3543,
            x11 * x4401 + x3548,
            x11 * x4404 + x3554,
            x11 * x4407 + x3560,
            x11 * x4410 + x3567,
            x11 * x4413 + x3575,
            x11 * x4416 + x3583,
            x11 * x4417 + x3587,
            x11 * x4419 + x3590,
            x11 * x4421 + x3596,
            x11 * x4423 + x3599,
            x11 * x4424 + x3601,
            x11 * x4426 + x3608,
            x11 * x4428 + x3613,
            x11 * x4431 + x3618,
            x11 * x4434 + x3623,
            x11 * x4436 + x3627,
            x11 * x4438 + x3632,
            x11 * x4441 + x3638,
            x11 * x4442 + x3641,
            x11 * x4444 + x3644,
            x11 * x4446 + x3649,
            x11 * x4447 + x3651,
            x11 * x4448 + x3653,
            x11 * x4450 + x3658,
            x11 * x4451 + x3662,
            x11 * x4453 + x3665,
            x11 * x4455 + x3670,
            x11 * x4456 + x3672,
            x11 * x4457 + x3674,
            x11 * x4458 + x3678,
            x12 * x4335
            + x12 * x4336
            + x16 * x4459
            + x16 * (x4459 + x4461)
            + 3 * x1908
            + x3389 * x659
            - x3394 * x671,
            x12 * x4339 + x12 * x4340 + x16 * x4464 + x17 * x4459 + x4465,
            x12 * x4341 + x12 * x4342 + x18 * x4459 + x18 * x4461,
            x12 * x4344 + x12 * x4345 + x17 * x4464 + x4467,
            x12 * x4347 + x12 * x4348 + x18 * x4462 + x4468,
            x12 * x4349 + x12 * x4350 + x19 * x4460,
            x12 * x4352 + x12 * x4353 + x16 * x4463 + x16 * (x4463 + x4470) + x4465,
            x12 * x4356 + x12 * x4357 + x16 * x4473 + x4467,
            x12 * x4358 + x12 * x4359 + x18 * x4470 + x4468,
            x12 * x4361 + x12 * x4362 + x17 * x4473 + x4474,
            x12 * x4364 + x12 * x4365 + x18 * x4471 + x4475,
            x12 * x4366 + x12 * x4367 + x19 * x4469,
            0,
            0,
            0,
            0,
            0,
            0,
            x12 * x4369 + x12 * x4370 + x16 * x4472 + x16 * (x4472 + x4477) + x4466,
            x12 * x4373 + x12 * x4374 + x16 * x4480 + x4474,
            x12 * x4375 + x12 * x4376 + x18 * x4477 + x4475,
            x12 * x4377
            + x12 * x4378
            + x17 * x4479
            + x17 * x4480
            + 3 * x2118
            + x3456 * x659
            - x3457 * x671
            + x94
            * (
                3 * x2082
                + x3437 * x659
                - x3438 * x671
                + x92
                * (
                    3 * x2033
                    + x3414 * x659
                    - x3415 * x671
                    + x90
                    * (
                        3 * x2012
                        + x3400 * x659
                        - x3407 * x671
                        + x84 * (3 * x1968 + x3380 * x659 - x3392 * x671)
                    )
                )
            ),
            x12 * x4379 + x12 * x4380 + x18 * x4478 + x18 * x4479,
            x12 * x4381 + x12 * x4382 + x19 * x4476,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            x12 * x4384 + x13 * x4335 + x4483,
            x12 * x4387 + x13 * x4339 + x4487,
            x12 * x4390 + x13 * x4341 + x4491,
            x12 * x4393 + x13 * x4344 + x4494,
            x12 * x4396 + x13 * x4347 + x4497,
            x12 * x4399 + x13 * x4349 + x4500,
            x12 * x4401 + x13 * x4352 + x4502,
            x12 * x4404 + x13 * x4356 + x4505,
            x12 * x4407 + x13 * x4358 + x4508,
            x12 * x4410 + x13 * x4361 + x4510,
            x12 * x4413 + x13 * x4364 + x4513,
            x12 * x4416 + x13 * x4366 + x4516,
            x4518,
            x4520,
            x4523,
            x4525,
            x4526,
            x4528,
            x12 * x4428 + x13 * x4369 + x4530,
            x12 * x4431 + x13 * x4373 + x4533,
            x12 * x4434 + x13 * x4375 + x4536,
            x12 * x4436 + x13 * x4377 + x4537,
            x12 * x4438 + x13 * x4379 + x4539,
            x12 * x4441 + x13 * x4381 + x4542,
            x4544,
            x4546,
            x4549,
            x4550,
            x4551,
            x4553,
            x4555,
            x4557,
            x4560,
            x4561,
            x4562,
            x4563,
            x13 * x4384 + x4567,
            x13 * x4387 + x4572,
            x13 * x4390 + x4577,
            x13 * x4393 + x4581,
            x13 * x4396 + x4585,
            x13 * x4399 + x4589,
            x13 * x4401 + x4592,
            x13 * x4404 + x4596,
            x13 * x4407 + x4600,
            x13 * x4410 + x4603,
            x13 * x4413 + x4607,
            x13 * x4416 + x4611,
            2 * x4612 + x4614,
            2 * x4615 + x4617,
            2 * x4618 + x4621,
            2 * x4622 + x4624,
            2 * x4625 + x4626,
            2 * x4627 + x4629,
            x13 * x4428 + x4632,
            x13 * x4431 + x4636,
            x13 * x4434 + x4640,
            x13 * x4436 + x4642,
            x13 * x4438 + x4645,
            x13 * x4441 + x4649,
            2 * x4650 + x4652,
            2 * x4653 + x4655,
            2 * x4656 + x4659,
            2 * x4660 + x4661,
            2 * x4662 + x4663,
            2 * x4664 + x4666,
            2 * x4667 + x4669,
            2 * x4670 + x4672,
            2 * x4673 + x4676,
            2 * x4677 + x4678,
            2 * x4679 + x4680,
            2 * x4681 + x4682,
            x11 * x3281 + x11 * (x11 * x4683 + x3281) + x2223,
            x11 * x3284 + x11 * (x11 * x4685 + x3284) + x2283,
            x11 * x3287 + x11 * (x11 * x4687 + x3287) + x2336,
            x11 * x3290 + x11 * (x11 * x4689 + x3290) + x2368,
            x11 * x3293 + x11 * (x11 * x4691 + x3293) + x2393,
            x11 * x3296 + x11 * (x11 * x4693 + x3296) + x2420,
            x11 * x3298 + x11 * (x11 * x4694 + x3298) + x2431,
            x11 * x3301 + x11 * (x11 * x4696 + x3301) + x2443,
            x11 * x3304 + x11 * (x11 * x4698 + x3304) + x2456,
            x11 * x3307 + x11 * (x11 * x4700 + x3307) + x2474,
            x11 * x3310 + x11 * (x11 * x4702 + x3310) + x2492,
            x11 * x3313 + x11 * (x11 * x4704 + x3313) + x2509,
            x11 * (x11 * x4705 + x3315) + x3316,
            x11 * (x11 * x4707 + x3318) + x3319,
            x11 * (x11 * x4709 + x3321) + x3322,
            x11 * (x11 * x4711 + x3324) + x3325,
            x11 * (x11 * x4712 + x3326) + x3327,
            x11 * (x11 * x4714 + x3329) + x3330,
            x11 * x3331 + x11 * (x11 * x4715 + x3331) + x2571,
            x11 * x3334 + x11 * (x11 * x4717 + x3334) + x2579,
            x11 * x3337 + x11 * (x11 * x4719 + x3337) + x2588,
            x11 * x3339 + x11 * (x11 * x4720 + x3339) + x2596,
            x11 * x3341 + x11 * (x11 * x4721 + x3341) + x2606,
            x11 * x3344 + x11 * (x11 * x4723 + x3344) + x2616,
            x11 * (x11 * x4724 + x3346) + x3347,
            x11 * (x11 * x4726 + x3349) + x3350,
            x11 * (x11 * x4728 + x3352) + x3353,
            x11 * (x11 * x4729 + x3354) + x3355,
            x11 * (x11 * x4730 + x3356) + x3357,
            x11 * (x11 * x4732 + x3359) + x3360,
            x11 * (x11 * x4733 + x3361) + x3362,
            x11 * (x11 * x4735 + x3364) + x3365,
            x11 * (x11 * x4737 + x3367) + x3368,
            x11 * (x11 * x4738 + x3369) + x3370,
            x11 * (x11 * x4739 + x3371) + x3372,
            x11 * (x11 * x4740 + x3373) + x3374,
            x11 * x4741 + x4087,
            x11 * x4742 + x4088,
            x11 * x4743 + x4089,
            x11 * x4744 + x4090,
            x11 * x4745 + x4091,
            x11 * x4746 + x4092,
            x11 * x4747 + x4093,
            x11 * x4748 + x4094,
            x11 * x4749 + x4095,
            x11 * x4750 + x4096,
            x11 * x4751 + x4097,
            x11 * x4752 + x4098,
            x11 * x4753 + x3588,
            x11 * x4754 + x3591,
            x11 * x4755 + x3597,
            x11 * x4756 + x3600,
            x11 * x4757 + x3602,
            x11 * x4758 + x3609,
            x11 * x4759 + x4099,
            x11 * x4760 + x4100,
            x11 * x4761 + x4101,
            x11 * x4762 + x4102,
            x11 * x4763 + x4103,
            x11 * x4764 + x4104,
            x11 * x4765 + x3642,
            x11 * x4766 + x3645,
            x11 * x4767 + x3650,
            x11 * x4768 + x3652,
            x11 * x4769 + x3654,
            x11 * x4770 + x3659,
            x11 * x4771 + x3663,
            x11 * x4772 + x3666,
            x11 * x4773 + x3671,
            x11 * x4774 + x3673,
            x11 * x4775 + x3675,
            x11 * x4776 + x3679,
            x11 * x4778 + x3700,
            x11 * x4781 + x3716,
            x11 * x4784 + x3732,
            x11 * x4787 + x3742,
            x11 * x4790 + x3752,
            x11 * x4793 + x3762,
            x11 * x4795 + x3767,
            x11 * x4798 + x3773,
            x11 * x4801 + x3779,
            x11 * x4804 + x3786,
            x11 * x4807 + x3794,
            x11 * x4810 + x3802,
            x11 * x4812 + x4105,
            x11 * x4815 + x4106,
            x11 * x4818 + x4107,
            x11 * x4821 + x4108,
            x11 * x4823 + x4109,
            x11 * x4826 + x4110,
            x11 * x4828 + x3832,
            x11 * x4831 + x3837,
            x11 * x4834 + x3842,
            x11 * x4836 + x3846,
            x11 * x4838 + x3851,
            x11 * x4841 + x3857,
            x11 * x4843 + x4111,
            x11 * x4846 + x4112,
            x11 * x4849 + x4113,
            x11 * x4851 + x4114,
            x11 * x4853 + x4115,
            x11 * x4856 + x4116,
            x11 * x4858 + x4117,
            x11 * x4861 + x4118,
            x11 * x4864 + x4119,
            x11 * x4866 + x4120,
            x11 * x4868 + x4121,
            x11 * x4870 + x4122,
            x12 * x4383 + x12 * x4741 + x4483,
            x12 * x4386 + x12 * x4742 + x4487,
            x12 * x4389 + x12 * x4743 + x4491,
            x12 * x4392 + x12 * x4744 + x4494,
            x12 * x4395 + x12 * x4745 + x4497,
            x12 * x4398 + x12 * x4746 + x4500,
            x12 * x4400 + x12 * x4747 + x4502,
            x12 * x4403 + x12 * x4748 + x4505,
            x12 * x4406 + x12 * x4749 + x4508,
            x12 * x4409 + x12 * x4750 + x4510,
            x12 * x4412 + x12 * x4751 + x4513,
            x12 * x4415 + x12 * x4752 + x4516,
            x12 * x4753 + x4518,
            x12 * x4754 + x4520,
            x12 * x4755 + x4523,
            x12 * x4756 + x4525,
            x12 * x4757 + x4526,
            x12 * x4758 + x4528,
            x12 * x4427 + x12 * x4759 + x4530,
            x12 * x4430 + x12 * x4760 + x4533,
            x12 * x4433 + x12 * x4761 + x4536,
            x12 * x4435 + x12 * x4762 + x4537,
            x12 * x4437 + x12 * x4763 + x4539,
            x12 * x4440 + x12 * x4764 + x4542,
            x12 * x4765 + x4544,
            x12 * x4766 + x4546,
            x12 * x4767 + x4549,
            x12 * x4768 + x4550,
            x12 * x4769 + x4551,
            x12 * x4770 + x4553,
            x12 * x4771 + x4555,
            x12 * x4772 + x4557,
            x12 * x4773 + x4560,
            x12 * x4774 + x4561,
            x12 * x4775 + x4562,
            x12 * x4776 + x4563,
            x12 * x4778 + x4567,
            x12 * x4781 + x4572,
            x12 * x4784 + x4577,
            x12 * x4787 + x4581,
            x12 * x4790 + x4585,
            x12 * x4793 + x4589,
            x12 * x4795 + x4592,
            x12 * x4798 + x4596,
            x12 * x4801 + x4600,
            x12 * x4804 + x4603,
            x12 * x4807 + x4607,
            x12 * x4810 + x4611,
            x12 * x4812 + x4612 + x4614,
            x12 * x4815 + x4615 + x4617,
            x12 * x4818 + x4618 + x4621,
            x12 * x4821 + x4622 + x4624,
            x12 * x4823 + x4625 + x4626,
            x12 * x4826 + x4627 + x4629,
            x12 * x4828 + x4632,
            x12 * x4831 + x4636,
            x12 * x4834 + x4640,
            x12 * x4836 + x4642,
            x12 * x4838 + x4645,
            x12 * x4841 + x4649,
            x12 * x4843 + x4650 + x4652,
            x12 * x4846 + x4653 + x4655,
            x12 * x4849 + x4656 + x4659,
            x12 * x4851 + x4660 + x4661,
            x12 * x4853 + x4662 + x4663,
            x12 * x4856 + x4664 + x4666,
            x12 * x4858 + x4667 + x4669,
            x12 * x4861 + x4670 + x4672,
            x12 * x4864 + x4673 + x4676,
            x12 * x4866 + x4677 + x4678,
            x12 * x4868 + x4679 + x4680,
            x12 * x4870 + x4681 + x4682,
            x13 * x4778 + x4873,
            x13 * x4781 + x4877,
            x13 * x4784 + x4881,
            x13 * x4787 + x4884,
            x13 * x4790 + x4887,
            x13 * x4793 + x4890,
            x13 * x4795 + x4892,
            x13 * x4798 + x4895,
            x13 * x4801 + x4898,
            x13 * x4804 + x4900,
            x13 * x4807 + x4903,
            x13 * x4810 + x4906,
            x13 * x4812 + x4908,
            x13 * x4815 + x4910,
            x13 * x4818 + x4913,
            x13 * x4821 + x4915,
            x13 * x4823 + x4916,
            x13 * x4826 + x4918,
            x13 * x4828 + x4920,
            x13 * x4831 + x4923,
            x13 * x4834 + x4926,
            x13 * x4836 + x4927,
            x13 * x4838 + x4929,
            x13 * x4841 + x4932,
            x13 * x4843 + x4934,
            x13 * x4846 + x4936,
            x13 * x4849 + x4939,
            x13 * x4851 + x4940,
            x13 * x4853 + x4941,
            x13 * x4856 + x4943,
            x13 * x4858 + x4945,
            x13 * x4861 + x4947,
            x13 * x4864 + x4950,
            x13 * x4866 + x4951,
            x13 * x4868 + x4952,
            x13 * x4870 + x4953,
            x11 * x3993 + x11 * (x11 * x4954 + x3993) + x2773,
            x11 * x3996 + x11 * (x11 * x4956 + x3996) + x2833,
            x11 * x3999 + x11 * (x11 * x4958 + x3999) + x2877,
            x11 * x4002 + x11 * (x11 * x4960 + x4002) + x2909,
            x11 * x4005 + x11 * (x11 * x4962 + x4005) + x2933,
            x11 * x4008 + x11 * (x11 * x4964 + x4008) + x2957,
            x11 * x4010 + x11 * (x11 * x4965 + x4010) + x2968,
            x11 * x4013 + x11 * (x11 * x4967 + x4013) + x2980,
            x11 * x4016 + x11 * (x11 * x4969 + x4016) + x2992,
            x11 * x4019 + x11 * (x11 * x4971 + x4019) + x3010,
            x11 * x4022 + x11 * (x11 * x4973 + x4022) + x3027,
            x11 * x4025 + x11 * (x11 * x4975 + x4025) + x3044,
            x11 * x4027 + x11 * (x11 * x4976 + x4027) + x3056,
            x11 * x4030 + x11 * (x11 * x4978 + x4030) + x3059,
            x11 * x4033 + x11 * (x11 * x4980 + x4033) + x3071,
            x11 * x4036 + x11 * (x11 * x4982 + x4036) + x3074,
            x11 * x4038 + x11 * (x11 * x4983 + x4038) + x3076,
            x11 * x4041 + x11 * (x11 * x4985 + x4041) + x3092,
            x11 * x4043 + x11 * (x11 * x4986 + x4043) + x3098,
            x11 * x4046 + x11 * (x11 * x4988 + x4046) + x3106,
            x11 * x4049 + x11 * (x11 * x4990 + x4049) + x3114,
            x11 * x4051 + x11 * (x11 * x4991 + x4051) + x3122,
            x11 * x4053 + x11 * (x11 * x4992 + x4053) + x3131,
            x11 * x4056 + x11 * (x11 * x4994 + x4056) + x3141,
            x11 * x4058 + x11 * (x11 * x4995 + x4058) + x3149,
            x11 * x4061 + x11 * (x11 * x4997 + x4061) + x3152,
            x11 * x4064 + x11 * (x11 * x4999 + x4064) + x3160,
            x11 * x4066 + x11 * (x11 * x5000 + x4066) + x3162,
            x11 * x4068 + x11 * (x11 * x5001 + x4068) + x3164,
            x11 * x4071 + x11 * (x11 * x5003 + x4071) + x3173,
            x11 * x4073 + x11 * (x11 * x5004 + x4073) + x3180,
            x11 * x4076 + x11 * (x11 * x5006 + x4076) + x3183,
            x11 * x4079 + x11 * (x11 * x5008 + x4079) + x3191,
            x11 * x4081 + x11 * (x11 * x5009 + x4081) + x3193,
            x11 * x4083 + x11 * (x11 * x5010 + x4083) + x3195,
            x11 * x4085 + x11 * (x11 * x5011 + x4085) + x3203,
            x11 * x5012 + x12 * x3993 + x3699,
            x11 * x5013 + x12 * x3996 + x3715,
            x11 * x5014 + x12 * x3999 + x3731,
            x11 * x5015 + x12 * x4002 + x3741,
            x11 * x5016 + x12 * x4005 + x3751,
            x11 * x5017 + x12 * x4008 + x3761,
            x11 * x5018 + x12 * x4010 + x3766,
            x11 * x5019 + x12 * x4013 + x3772,
            x11 * x5020 + x12 * x4016 + x3778,
            x11 * x5021 + x12 * x4019 + x3785,
            x11 * x5022 + x12 * x4022 + x3793,
            x11 * x5023 + x12 * x4025 + x3801,
            x11 * x5024 + x12 * x4027 + x3807,
            x11 * x5025 + x12 * x4030 + x3810,
            x11 * x5026 + x12 * x4033 + x3816,
            x11 * x5027 + x12 * x4036 + x3819,
            x11 * x5028 + x12 * x4038 + x3821,
            x11 * x5029 + x12 * x4041 + x3828,
            x11 * x5030 + x12 * x4043 + x3831,
            x11 * x5031 + x12 * x4046 + x3836,
            x11 * x5032 + x12 * x4049 + x3841,
            x11 * x5033 + x12 * x4051 + x3845,
            x11 * x5034 + x12 * x4053 + x3850,
            x11 * x5035 + x12 * x4056 + x3856,
            x11 * x5036 + x12 * x4058 + x3861,
            x11 * x5037 + x12 * x4061 + x3864,
            x11 * x5038 + x12 * x4064 + x3869,
            x11 * x5039 + x12 * x4066 + x3871,
            x11 * x5040 + x12 * x4068 + x3873,
            x11 * x5041 + x12 * x4071 + x3878,
            x11 * x5042 + x12 * x4073 + x3882,
            x11 * x5043 + x12 * x4076 + x3885,
            x11 * x5044 + x12 * x4079 + x3890,
            x11 * x5045 + x12 * x4081 + x3892,
            x11 * x5046 + x12 * x4083 + x3894,
            x11 * x5047 + x12 * x4085 + x3898,
            x11 * x5049 + x4142,
            x11 * x5052 + x4157,
            x11 * x5055 + x4172,
            x11 * x5058 + x4181,
            x11 * x5061 + x4190,
            x11 * x5064 + x4199,
            x11 * x5066 + x4203,
            x11 * x5069 + x4208,
            x11 * x5072 + x4213,
            x11 * x5075 + x4219,
            x11 * x5078 + x4226,
            x11 * x5081 + x4233,
            x11 * x5083 + x4237,
            x11 * x5086 + x4239,
            x11 * x5089 + x4244,
            x11 * x5092 + x4246,
            x11 * x5094 + x4247,
            x11 * x5097 + x4253,
            x11 * x5099 + x4256,
            x11 * x5102 + x4260,
            x11 * x5105 + x4264,
            x11 * x5107 + x4267,
            x11 * x5109 + x4271,
            x11 * x5112 + x4276,
            x11 * x5114 + x4279,
            x11 * x5117 + x4281,
            x11 * x5120 + x4285,
            x11 * x5122 + x4286,
            x11 * x5124 + x4287,
            x11 * x5127 + x4291,
            x11 * x5129 + x4294,
            x11 * x5132 + x4296,
            x11 * x5135 + x4300,
            x11 * x5137 + x4301,
            x11 * x5139 + x4302,
            x11 * x5141 + x4305,
            x12 * x4777 + x12 * x5012 + x4566,
            x12 * x4780 + x12 * x5013 + x4571,
            x12 * x4783 + x12 * x5014 + x4576,
            x12 * x4786 + x12 * x5015 + x4580,
            x12 * x4789 + x12 * x5016 + x4584,
            x12 * x4792 + x12 * x5017 + x4588,
            x12 * x4794 + x12 * x5018 + x4591,
            x12 * x4797 + x12 * x5019 + x4595,
            x12 * x4800 + x12 * x5020 + x4599,
            x12 * x4803 + x12 * x5021 + x4602,
            x12 * x4806 + x12 * x5022 + x4606,
            x12 * x4809 + x12 * x5023 + x4610,
            x12 * x4811 + x12 * x5024 + x4614,
            x12 * x4814 + x12 * x5025 + x4617,
            x12 * x4817 + x12 * x5026 + x4621,
            x12 * x4820 + x12 * x5027 + x4624,
            x12 * x4822 + x12 * x5028 + x4626,
            x12 * x4825 + x12 * x5029 + x4629,
            x12 * x4827 + x12 * x5030 + x4631,
            x12 * x4830 + x12 * x5031 + x4635,
            x12 * x4833 + x12 * x5032 + x4639,
            x12 * x4835 + x12 * x5033 + x4641,
            x12 * x4837 + x12 * x5034 + x4644,
            x12 * x4840 + x12 * x5035 + x4648,
            x12 * x4842 + x12 * x5036 + x4652,
            x12 * x4845 + x12 * x5037 + x4655,
            x12 * x4848 + x12 * x5038 + x4659,
            x12 * x4850 + x12 * x5039 + x4661,
            x12 * x4852 + x12 * x5040 + x4663,
            x12 * x4855 + x12 * x5041 + x4666,
            x12 * x4857 + x12 * x5042 + x4669,
            x12 * x4860 + x12 * x5043 + x4672,
            x12 * x4863 + x12 * x5044 + x4676,
            x12 * x4865 + x12 * x5045 + x4678,
            x12 * x4867 + x12 * x5046 + x4680,
            x12 * x4869 + x12 * x5047 + x4682,
            x12 * x5049 + x4873,
            x12 * x5052 + x4877,
            x12 * x5055 + x4881,
            x12 * x5058 + x4884,
            x12 * x5061 + x4887,
            x12 * x5064 + x4890,
            x12 * x5066 + x4892,
            x12 * x5069 + x4895,
            x12 * x5072 + x4898,
            x12 * x5075 + x4900,
            x12 * x5078 + x4903,
            x12 * x5081 + x4906,
            x12 * x5083 + x4908,
            x12 * x5086 + x4910,
            x12 * x5089 + x4913,
            x12 * x5092 + x4915,
            x12 * x5094 + x4916,
            x12 * x5097 + x4918,
            x12 * x5099 + x4920,
            x12 * x5102 + x4923,
            x12 * x5105 + x4926,
            x12 * x5107 + x4927,
            x12 * x5109 + x4929,
            x12 * x5112 + x4932,
            x12 * x5114 + x4934,
            x12 * x5117 + x4936,
            x12 * x5120 + x4939,
            x12 * x5122 + x4940,
            x12 * x5124 + x4941,
            x12 * x5127 + x4943,
            x12 * x5129 + x4945,
            x12 * x5132 + x4947,
            x12 * x5135 + x4950,
            x12 * x5137 + x4951,
            x12 * x5139 + x4952,
            x12 * x5141 + x4953,
            x1076 * x4136
            - x1089 * x4141
            + x13 * x5048
            + x13 * x5049
            + x16 * x5142
            + x16 * (x16 * x5143 + x5142)
            + 3 * x2686,
            x13 * x5051 + x13 * x5052 + x16 * x5145 + x17 * x5142 + x5146,
            x13 * x5054 + x13 * x5055 + x16 * x5148 + x18 * x5142 + x5149,
            x13 * x5057 + x13 * x5058 + x17 * x5145 + x5151,
            x13 * x5060 + x13 * x5061 + x17 * x5148 + x5153,
            x13 * x5063 + x13 * x5064 + x18 * x5148 + x5155,
            x13 * x5065 + x13 * x5066 + x16 * x5144 + x16 * (x16 * x5156 + x5144) + x5146,
            x13 * x5068 + x13 * x5069 + x16 * x5158 + x5151,
            x13 * x5071 + x13 * x5072 + x16 * x5160 + x5153,
            x13 * x5074 + x13 * x5075 + x17 * x5158 + x5161,
            x13 * x5077 + x13 * x5078 + x17 * x5160 + x5163,
            x13 * x5080 + x13 * x5081 + x18 * x5160 + x5165,
            x13 * x5082 + x13 * x5083 + x16 * x5147 + x16 * (x16 * x5166 + x5147) + x5149,
            x13 * x5085 + x13 * x5086 + x16 * x5167 + x17 * x5147 + x5152,
            x13 * x5088 + x13 * x5089 + x16 * x5169 + x5155,
            x13 * x5091 + x13 * x5092 + x17 * x5167 + x5170,
            x13 * x5093 + x13 * x5094 + x17 * x5169 + x5165,
            x13 * x5096 + x13 * x5097 + x18 * x5169 + x5171,
            x13 * x5098 + x13 * x5099 + x16 * x5157 + x16 * (x16 * x5172 + x5157) + x5150,
            x13 * x5101 + x13 * x5102 + x16 * x5174 + x5161,
            x13 * x5104 + x13 * x5105 + x16 * x5176 + x5163,
            x1076 * x4265
            - x1089 * x4266
            + x13 * x5106
            + x13 * x5107
            + x17 * x5173
            + x17 * x5174
            + 3 * x3119,
            x13 * x5108 + x13 * x5109 + x17 * x5176 + x18 * x5173 + x5177,
            x13 * x5111 + x13 * x5112 + x18 * x5176 + x5179,
            x13 * x5113 + x13 * x5114 + x16 * x5159 + x16 * (x16 * x5180 + x5159) + x5152,
            x13 * x5116 + x13 * x5117 + x16 * x5181 + x5170,
            x13 * x5119 + x13 * x5120 + x16 * x5183 + x5165,
            x13 * x5121 + x13 * x5122 + x17 * x5175 + x17 * x5181 + x5177,
            x13 * x5123 + x13 * x5124 + x17 * x5183 + x5179,
            x13 * x5126 + x13 * x5127 + x18 * x5183 + x5184,
            x13 * x5128 + x13 * x5129 + x16 * x5168 + x16 * (x16 * x5185 + x5168) + x5154,
            x13 * x5131 + x13 * x5132 + x16 * x5186 + x17 * x5168 + x5164,
            x13 * x5134 + x13 * x5135 + x16 * x5188 + x5171,
            x13 * x5136 + x13 * x5137 + x17 * x5182 + x17 * x5186 + x5178,
            x13 * x5138 + x13 * x5139 + x17 * x5188 + x5184,
            x1076 * x4303
            - x1089 * x4304
            + x13 * x5140
            + x13 * x5141
            + x18 * x5187
            + x18 * x5188
            + 3 * x3200
            + x94
            * (
                x1076 * x4248
                - x1089 * x4249
                + 3 * x3085
                + x92
                * (
                    x1076 * x4192
                    - x1089 * x4193
                    + 3 * x2949
                    + x90
                    * (
                        x1076 * x4161
                        - x1089 * x4168
                        + 3 * x2874
                        + x84 * (x1076 * x4128 - x1089 * x4139 + 3 * x2771)
                    )
                )
            ),
        ]
    )
    return S
