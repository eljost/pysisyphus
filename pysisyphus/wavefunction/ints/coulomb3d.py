import numpy

from pysisyphus.wavefunction.ints.boys import boys


def coulomb3d_00(a, A, b, B, C):
    """Cartesian (ss) 1-electron Coulomb integral.

    Generated code; DO NOT modify by hand!"""

    x0 = a + b
    x1 = x0 ** (-1.0)

    # 1 item(s)
    return numpy.array(
        [
            2
            * numpy.pi
            * x1
            * boys(
                0,
                x0
                * (
                    (x1 * (a * A[0] + b * B[0]) - C[0]) ** 2
                    + (x1 * (a * A[1] + b * B[1]) - C[1]) ** 2
                    + (x1 * (a * A[2] + b * B[2]) - C[2]) ** 2
                ),
            )
            * numpy.exp(
                -a
                * b
                * x1
                * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2)
            )
        ]
    )


def coulomb3d_01(a, A, b, B, C):
    """Cartesian (sp) 1-electron Coulomb integral.

    Generated code; DO NOT modify by hand!"""

    x0 = a + b
    x1 = x0 ** (-1.0)
    x2 = -x1 * (a * A[0] + b * B[0])
    x3 = -x2 - C[0]
    x4 = -x1 * (a * A[1] + b * B[1])
    x5 = -x4 - C[1]
    x6 = -x1 * (a * A[2] + b * B[2])
    x7 = -x6 - C[2]
    x8 = x0 * (x3 ** 2 + x5 ** 2 + x7 ** 2)
    x9 = (
        2
        * numpy.pi
        * x1
        * numpy.exp(
            -a * b * x1 * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2)
        )
    )
    x10 = x9 * boys(0, x8)
    x11 = x9 * boys(1, x8)

    # 3 item(s)
    return numpy.array(
        [
            x10 * (-x2 - B[0]) - x11 * x3,
            x10 * (-x4 - B[1]) - x11 * x5,
            x10 * (-x6 - B[2]) - x11 * x7,
        ]
    )


def coulomb3d_02(a, A, b, B, C):
    """Cartesian (sd) 1-electron Coulomb integral.

    Generated code; DO NOT modify by hand!"""

    x0 = a + b
    x1 = x0 ** (-1.0)
    x2 = -x1 * (a * A[0] + b * B[0])
    x3 = -x2 - C[0]
    x4 = -x1 * (a * A[1] + b * B[1])
    x5 = -x4 - C[1]
    x6 = -x1 * (a * A[2] + b * B[2])
    x7 = -x6 - C[2]
    x8 = x0 * (x3 ** 2 + x5 ** 2 + x7 ** 2)
    x9 = (
        2
        * numpy.pi
        * x1
        * numpy.exp(
            -a * b * x1 * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2)
        )
    )
    x10 = x9 * boys(0, x8)
    x11 = x9 * boys(1, x8)
    x12 = (x10 - x11) / (2 * a + 2 * b)
    x13 = -x2 - B[0]
    x14 = x9 * boys(2, x8)
    x15 = -x4 - B[1]
    x16 = x10 * x15 - x11 * x5
    x17 = x11 * x15 - x14 * x5
    x18 = -x6 - B[2]
    x19 = x10 * x18 - x11 * x7
    x20 = x11 * x18 - x14 * x7

    # 6 item(s)
    return numpy.array(
        [
            x12 + x13 * (x10 * x13 - x11 * x3) - x3 * (x11 * x13 - x14 * x3),
            x13 * x16 - x17 * x3,
            x13 * x19 - x20 * x3,
            x12 + x15 * x16 - x17 * x5,
            x15 * x19 - x20 * x5,
            x12 + x18 * x19 - x20 * x7,
        ]
    )


def coulomb3d_03(a, A, b, B, C):
    """Cartesian (sf) 1-electron Coulomb integral.

    Generated code; DO NOT modify by hand!"""

    x0 = (2 * a + 2 * b) ** (-1.0)
    x1 = a + b
    x2 = x1 ** (-1.0)
    x3 = -x2 * (a * A[0] + b * B[0])
    x4 = -x3 - B[0]
    x5 = -x3 - C[0]
    x6 = -x2 * (a * A[1] + b * B[1])
    x7 = -x6 - C[1]
    x8 = -x2 * (a * A[2] + b * B[2])
    x9 = -x8 - C[2]
    x10 = x1 * (x5 ** 2 + x7 ** 2 + x9 ** 2)
    x11 = (
        2
        * numpy.pi
        * x2
        * numpy.exp(
            -a * b * x2 * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2)
        )
    )
    x12 = x11 * boys(1, x10)
    x13 = x12 * x4
    x14 = x11 * boys(2, x10)
    x15 = x14 * x5
    x16 = x11 * boys(0, x10)
    x17 = -x12 * x5 + x16 * x4
    x18 = x0 * (-x12 + x16)
    x19 = x13 - x15
    x20 = x0 * (x12 - x14)
    x21 = x11 * boys(3, x10)
    x22 = -x6 - B[1]
    x23 = x12 * x22
    x24 = x14 * x7
    x25 = -x12 * x7 + x16 * x22
    x26 = x0 * (-x23 + x24 + x25)
    x27 = x23 - x24
    x28 = x14 * x22 - x21 * x7
    x29 = -x8 - B[2]
    x30 = x12 * x29
    x31 = x14 * x9
    x32 = -x12 * x9 + x16 * x29
    x33 = x0 * (-x30 + x31 + x32)
    x34 = x30 - x31
    x35 = x14 * x29 - x21 * x9
    x36 = x18 + x22 * x25 - x27 * x7
    x37 = x20 + x22 * x27 - x28 * x7
    x38 = x22 * x32 - x34 * x7
    x39 = x22 * x34 - x35 * x7
    x40 = x18 + x29 * x32 - x34 * x9
    x41 = x20 + x29 * x34 - x35 * x9

    # 10 item(s)
    return numpy.array(
        [
            2 * x0 * (-x13 + x15 + x17)
            + x4 * (x17 * x4 + x18 - x19 * x5)
            - x5 * (x19 * x4 + x20 - x5 * (x14 * x4 - x21 * x5)),
            x26 + x4 * (x25 * x4 - x27 * x5) - x5 * (x27 * x4 - x28 * x5),
            x33 + x4 * (x32 * x4 - x34 * x5) - x5 * (x34 * x4 - x35 * x5),
            x36 * x4 - x37 * x5,
            x38 * x4 - x39 * x5,
            x4 * x40 - x41 * x5,
            x22 * x36 + 2 * x26 - x37 * x7,
            x22 * x38 + x33 - x39 * x7,
            x22 * x40 - x41 * x7,
            x29 * x40 + 2 * x33 - x41 * x9,
        ]
    )


def coulomb3d_04(a, A, b, B, C):
    """Cartesian (sg) 1-electron Coulomb integral.

    Generated code; DO NOT modify by hand!"""

    x0 = (2 * a + 2 * b) ** (-1.0)
    x1 = a + b
    x2 = x1 ** (-1.0)
    x3 = -x2 * (a * A[0] + b * B[0])
    x4 = -x3 - C[0]
    x5 = -x3 - B[0]
    x6 = -x2 * (a * A[1] + b * B[1])
    x7 = -x6 - C[1]
    x8 = -x2 * (a * A[2] + b * B[2])
    x9 = -x8 - C[2]
    x10 = x1 * (x4 ** 2 + x7 ** 2 + x9 ** 2)
    x11 = (
        2
        * numpy.pi
        * x2
        * numpy.exp(
            -a * b * x2 * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2)
        )
    )
    x12 = x11 * boys(2, x10)
    x13 = x12 * x5
    x14 = x11 * boys(3, x10)
    x15 = x14 * x4
    x16 = x13 - x15
    x17 = x16 * x4
    x18 = x11 * boys(1, x10)
    x19 = x0 * (-x12 + x18)
    x20 = -x19
    x21 = x18 * x5
    x22 = x12 * x4
    x23 = x21 - x22
    x24 = x23 * x5
    x25 = x11 * boys(0, x10)
    x26 = x0 * (-x18 + x25)
    x27 = -x18 * x4 + x25 * x5
    x28 = -x23 * x4 + x26 + x27 * x5
    x29 = 2 * x0
    x30 = -x17 + x19 + x24
    x31 = x0 * (x12 - x14)
    x32 = x11 * boys(4, x10)
    x33 = -x6 - B[1]
    x34 = x12 * x33
    x35 = x14 * x7
    x36 = x34 - x35
    x37 = x36 * x4
    x38 = x18 * x33
    x39 = x12 * x7
    x40 = x38 - x39
    x41 = x40 * x5
    x42 = -x18 * x7 + x25 * x33
    x43 = -x4 * x40 + x42 * x5
    x44 = x0 * (-x38 + x39 + x42)
    x45 = -x37 + x41
    x46 = x0 * (-x34 + x35 + x40)
    x47 = x14 * x33 - x32 * x7
    x48 = -x8 - B[2]
    x49 = x12 * x48
    x50 = x14 * x9
    x51 = x49 - x50
    x52 = x4 * x51
    x53 = x18 * x48
    x54 = x12 * x9
    x55 = x53 - x54
    x56 = x5 * x55
    x57 = -x18 * x9 + x25 * x48
    x58 = -x4 * x55 + x5 * x57
    x59 = x0 * (-x53 + x54 + x57)
    x60 = -x52 + x56
    x61 = x0 * (-x49 + x50 + x55)
    x62 = x14 * x48 - x32 * x9
    x63 = x36 * x7
    x64 = x33 * x40
    x65 = x26 + x33 * x42 - x40 * x7
    x66 = x0 * (x20 + x63 - x64 + x65)
    x67 = x19 - x63 + x64
    x68 = x31 + x33 * x36 - x47 * x7
    x69 = x51 * x7
    x70 = x33 * x55
    x71 = x33 * x57 - x55 * x7
    x72 = x0 * (x69 - x70 + x71)
    x73 = -x69 + x70
    x74 = x33 * x51 - x62 * x7
    x75 = x51 * x9
    x76 = x48 * x55
    x77 = x26 + x48 * x57 - x55 * x9
    x78 = x0 * (x20 + x75 - x76 + x77)
    x79 = x19 - x75 + x76
    x80 = x31 + x48 * x51 - x62 * x9
    x81 = x33 * x65 + 2 * x44 - x67 * x7
    x82 = x33 * x67 + 2 * x46 - x68 * x7
    x83 = x33 * x71 + x59 - x7 * x73
    x84 = x33 * x73 + x61 - x7 * x74
    x85 = x33 * x77 - x7 * x79
    x86 = x33 * x79 - x7 * x80
    x87 = x48 * x77 + 2 * x59 - x79 * x9
    x88 = x48 * x79 + 2 * x61 - x80 * x9

    # 15 item(s)
    return numpy.array(
        [
            3 * x0 * (x17 + x20 - x24 + x28)
            - x4
            * (
                x29 * (-x13 + x15 + x23)
                + x30 * x5
                - x4 * (x16 * x5 + x31 - x4 * (x14 * x5 - x32 * x4))
            )
            + x5 * (x28 * x5 + x29 * (-x21 + x22 + x27) - x30 * x4),
            x29 * (x37 - x41 + x43)
            - x4 * (-x4 * (x36 * x5 - x4 * x47) + x45 * x5 + x46)
            + x5 * (-x4 * x45 + x43 * x5 + x44),
            x29 * (x52 - x56 + x58)
            - x4 * (-x4 * (-x4 * x62 + x5 * x51) + x5 * x60 + x61)
            + x5 * (-x4 * x60 + x5 * x58 + x59),
            -x4 * (-x4 * x68 + x5 * x67) + x5 * (-x4 * x67 + x5 * x65) + x66,
            -x4 * (-x4 * x74 + x5 * x73) + x5 * (-x4 * x73 + x5 * x71) + x72,
            -x4 * (-x4 * x80 + x5 * x79) + x5 * (-x4 * x79 + x5 * x77) + x78,
            -x4 * x82 + x5 * x81,
            -x4 * x84 + x5 * x83,
            -x4 * x86 + x5 * x85,
            -x4 * x88 + x5 * x87,
            x33 * x81 + 3 * x66 - x7 * x82,
            x33 * x83 - x7 * x84 + 2 * x72,
            x33 * x85 - x7 * x86 + x78,
            x33 * x87 - x7 * x88,
            x48 * x87 + 3 * x78 - x88 * x9,
        ]
    )


def coulomb3d_10(a, A, b, B, C):
    """Cartesian (ps) 1-electron Coulomb integral.

    Generated code; DO NOT modify by hand!"""

    x0 = a + b
    x1 = x0 ** (-1.0)
    x2 = -x1 * (a * A[0] + b * B[0])
    x3 = -x2 - C[0]
    x4 = -x1 * (a * A[1] + b * B[1])
    x5 = -x4 - C[1]
    x6 = -x1 * (a * A[2] + b * B[2])
    x7 = -x6 - C[2]
    x8 = x0 * (x3 ** 2 + x5 ** 2 + x7 ** 2)
    x9 = (
        2
        * numpy.pi
        * x1
        * numpy.exp(
            -a * b * x1 * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2)
        )
    )
    x10 = x9 * boys(0, x8)
    x11 = x9 * boys(1, x8)

    # 3 item(s)
    return numpy.array(
        [
            x10 * (-x2 - A[0]) - x11 * x3,
            x10 * (-x4 - A[1]) - x11 * x5,
            x10 * (-x6 - A[2]) - x11 * x7,
        ]
    )


def coulomb3d_11(a, A, b, B, C):
    """Cartesian (pp) 1-electron Coulomb integral.

    Generated code; DO NOT modify by hand!"""

    x0 = a + b
    x1 = x0 ** (-1.0)
    x2 = -x1 * (a * A[0] + b * B[0])
    x3 = -x2 - C[0]
    x4 = -x1 * (a * A[1] + b * B[1])
    x5 = -x4 - C[1]
    x6 = -x1 * (a * A[2] + b * B[2])
    x7 = -x6 - C[2]
    x8 = x0 * (x3 ** 2 + x5 ** 2 + x7 ** 2)
    x9 = (
        2
        * numpy.pi
        * x1
        * numpy.exp(
            -a * b * x1 * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2)
        )
    )
    x10 = x9 * boys(0, x8)
    x11 = x9 * boys(1, x8)
    x12 = (x10 - x11) / (2 * a + 2 * b)
    x13 = -x2 - A[0]
    x14 = -x2 - B[0]
    x15 = x9 * boys(2, x8)
    x16 = -x4 - B[1]
    x17 = -x11 * x5
    x18 = x10 * x16 + x17
    x19 = -x15 * x5
    x20 = x11 * x16 + x19
    x21 = -x6 - B[2]
    x22 = -x11 * x7
    x23 = x10 * x21 + x22
    x24 = -x15 * x7
    x25 = x11 * x21 + x24
    x26 = -x4 - A[1]
    x27 = -x6 - A[2]
    x28 = x10 * x27 + x22
    x29 = x11 * x27 + x24

    # 9 item(s)
    return numpy.array(
        [
            x12 + x13 * (x10 * x14 - x11 * x3) - x3 * (x11 * x14 - x15 * x3),
            x13 * x18 - x20 * x3,
            x13 * x23 - x25 * x3,
            x14 * (x10 * x26 + x17) - x3 * (x11 * x26 + x19),
            x12 + x18 * x26 - x20 * x5,
            x23 * x26 - x25 * x5,
            x14 * x28 - x29 * x3,
            x16 * x28 - x29 * x5,
            x12 + x23 * x27 - x25 * x7,
        ]
    )


def coulomb3d_12(a, A, b, B, C):
    """Cartesian (pd) 1-electron Coulomb integral.

    Generated code; DO NOT modify by hand!"""

    x0 = (2 * a + 2 * b) ** (-1.0)
    x1 = a + b
    x2 = x1 ** (-1.0)
    x3 = -x2 * (a * A[0] + b * B[0])
    x4 = -x3 - B[0]
    x5 = -x3 - C[0]
    x6 = -x2 * (a * A[1] + b * B[1])
    x7 = -x6 - C[1]
    x8 = -x2 * (a * A[2] + b * B[2])
    x9 = -x8 - C[2]
    x10 = x1 * (x5 ** 2 + x7 ** 2 + x9 ** 2)
    x11 = (
        2
        * numpy.pi
        * x2
        * numpy.exp(
            -a * b * x2 * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2)
        )
    )
    x12 = x11 * boys(1, x10)
    x13 = x12 * x4
    x14 = x11 * boys(2, x10)
    x15 = x14 * x5
    x16 = x11 * boys(0, x10)
    x17 = -x12 * x5 + x16 * x4
    x18 = -x3 - A[0]
    x19 = x0 * (-x12 + x16)
    x20 = x13 - x15
    x21 = x0 * (x12 - x14)
    x22 = x11 * boys(3, x10)
    x23 = -x6 - B[1]
    x24 = x12 * x23
    x25 = x14 * x7
    x26 = -x12 * x7
    x27 = x16 * x23 + x26
    x28 = x0 * (-x24 + x25 + x27)
    x29 = -x25
    x30 = x24 + x29
    x31 = -x22 * x7
    x32 = x14 * x23 + x31
    x33 = -x8 - B[2]
    x34 = x12 * x33
    x35 = x14 * x9
    x36 = -x12 * x9
    x37 = x16 * x33 + x36
    x38 = x0 * (-x34 + x35 + x37)
    x39 = -x35
    x40 = x34 + x39
    x41 = -x22 * x9
    x42 = x14 * x33 + x41
    x43 = x19 - x30 * x7
    x44 = x23 * x27 + x43
    x45 = x21 - x32 * x7
    x46 = x23 * x30 + x45
    x47 = -x40 * x7
    x48 = x23 * x37 + x47
    x49 = -x42 * x7
    x50 = x23 * x40 + x49
    x51 = x19 - x40 * x9
    x52 = x33 * x37 + x51
    x53 = x21 - x42 * x9
    x54 = x33 * x40 + x53
    x55 = -x6 - A[1]
    x56 = x12 * x55
    x57 = x16 * x55 + x26
    x58 = x29 + x56
    x59 = -x8 - A[2]
    x60 = x12 * x59
    x61 = x16 * x59 + x36
    x62 = x0 * (x35 - x60 + x61)
    x63 = x39 + x60
    x64 = x14 * x59 + x41
    x65 = x23 * x61 - x63 * x7
    x66 = x23 * x63 - x64 * x7
    x67 = x37 * x59 + x51
    x68 = x40 * x59 + x53

    # 18 item(s)
    return numpy.array(
        [
            2 * x0 * (-x13 + x15 + x17)
            + x18 * (x17 * x4 + x19 - x20 * x5)
            - x5 * (x20 * x4 + x21 - x5 * (x14 * x4 - x22 * x5)),
            x18 * (x27 * x4 - x30 * x5) + x28 - x5 * (x30 * x4 - x32 * x5),
            x18 * (x37 * x4 - x40 * x5) + x38 - x5 * (x4 * x40 - x42 * x5),
            x18 * x44 - x46 * x5,
            x18 * x48 - x5 * x50,
            x18 * x52 - x5 * x54,
            x0 * (x25 - x56 + x57)
            + x4 * (x4 * x57 - x5 * x58)
            - x5 * (x4 * x58 - x5 * (x14 * x55 + x31)),
            x4 * (x27 * x55 + x43) - x5 * (x30 * x55 + x45),
            x4 * (x37 * x55 + x47) - x5 * (x40 * x55 + x49),
            2 * x28 + x44 * x55 - x46 * x7,
            x38 + x48 * x55 - x50 * x7,
            x52 * x55 - x54 * x7,
            x4 * (x4 * x61 - x5 * x63) - x5 * (x4 * x63 - x5 * x64) + x62,
            x4 * x65 - x5 * x66,
            x4 * x67 - x5 * x68,
            x23 * x65 + x62 - x66 * x7,
            x23 * x67 - x68 * x7,
            2 * x38 + x52 * x59 - x54 * x9,
        ]
    )


def coulomb3d_13(a, A, b, B, C):
    """Cartesian (pf) 1-electron Coulomb integral.

    Generated code; DO NOT modify by hand!"""

    x0 = (2 * a + 2 * b) ** (-1.0)
    x1 = a + b
    x2 = x1 ** (-1.0)
    x3 = -x2 * (a * A[0] + b * B[0])
    x4 = -x3 - C[0]
    x5 = -x3 - B[0]
    x6 = -x2 * (a * A[1] + b * B[1])
    x7 = -x6 - C[1]
    x8 = -x2 * (a * A[2] + b * B[2])
    x9 = -x8 - C[2]
    x10 = x1 * (x4 ** 2 + x7 ** 2 + x9 ** 2)
    x11 = (
        2
        * numpy.pi
        * x2
        * numpy.exp(
            -a * b * x2 * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2)
        )
    )
    x12 = x11 * boys(2, x10)
    x13 = x12 * x5
    x14 = x11 * boys(3, x10)
    x15 = x14 * x4
    x16 = x13 - x15
    x17 = x16 * x4
    x18 = x11 * boys(1, x10)
    x19 = x0 * (-x12 + x18)
    x20 = -x19
    x21 = x18 * x5
    x22 = x12 * x4
    x23 = x21 - x22
    x24 = x23 * x5
    x25 = x11 * boys(0, x10)
    x26 = x0 * (-x18 + x25)
    x27 = -x18 * x4 + x25 * x5
    x28 = -x23 * x4 + x26 + x27 * x5
    x29 = -x3 - A[0]
    x30 = 2 * x0
    x31 = -x17 + x19 + x24
    x32 = x0 * (x12 - x14)
    x33 = x11 * boys(4, x10)
    x34 = -x6 - B[1]
    x35 = x12 * x34
    x36 = x14 * x7
    x37 = -x36
    x38 = x35 + x37
    x39 = x38 * x4
    x40 = x18 * x34
    x41 = x12 * x7
    x42 = -x41
    x43 = x40 + x42
    x44 = x43 * x5
    x45 = -x18 * x7
    x46 = x25 * x34 + x45
    x47 = -x4 * x43 + x46 * x5
    x48 = x0 * (-x40 + x41 + x46)
    x49 = -x39 + x44
    x50 = x0 * (-x35 + x36 + x43)
    x51 = -x33 * x7
    x52 = x14 * x34 + x51
    x53 = -x8 - B[2]
    x54 = x12 * x53
    x55 = x14 * x9
    x56 = -x55
    x57 = x54 + x56
    x58 = x4 * x57
    x59 = x18 * x53
    x60 = x12 * x9
    x61 = -x60
    x62 = x59 + x61
    x63 = x5 * x62
    x64 = -x18 * x9
    x65 = x25 * x53 + x64
    x66 = -x4 * x62 + x5 * x65
    x67 = x0 * (-x59 + x60 + x65)
    x68 = -x58 + x63
    x69 = x0 * (-x54 + x55 + x62)
    x70 = -x33 * x9
    x71 = x14 * x53 + x70
    x72 = x34 * x43
    x73 = x26 - x43 * x7
    x74 = x34 * x46 + x73
    x75 = x38 * x7
    x76 = x20 + x75
    x77 = x0 * (-x72 + x74 + x76)
    x78 = x19 - x75
    x79 = x72 + x78
    x80 = x32 - x52 * x7
    x81 = x34 * x38 + x80
    x82 = x57 * x7
    x83 = x34 * x62
    x84 = -x62 * x7
    x85 = x34 * x65 + x84
    x86 = x0 * (x82 - x83 + x85)
    x87 = -x82
    x88 = x83 + x87
    x89 = -x7 * x71
    x90 = x34 * x57 + x89
    x91 = x53 * x62
    x92 = x26 - x62 * x9
    x93 = x53 * x65 + x92
    x94 = x57 * x9
    x95 = x20 + x94
    x96 = x0 * (-x91 + x93 + x95)
    x97 = x19 - x94
    x98 = x91 + x97
    x99 = x32 - x71 * x9
    x100 = x53 * x57 + x99
    x101 = 2 * x48 - x7 * x79
    x102 = x101 + x34 * x74
    x103 = 2 * x50 - x7 * x81
    x104 = x103 + x34 * x79
    x105 = x67 - x7 * x88
    x106 = x105 + x34 * x85
    x107 = x69 - x7 * x90
    x108 = x107 + x34 * x88
    x109 = -x7 * x98
    x110 = x109 + x34 * x93
    x111 = -x100 * x7
    x112 = x111 + x34 * x98
    x113 = 2 * x67 - x9 * x98
    x114 = x113 + x53 * x93
    x115 = -x100 * x9 + 2 * x69
    x116 = x115 + x53 * x98
    x117 = -x6 - A[1]
    x118 = x117 * x12
    x119 = x118 + x37
    x120 = x119 * x4
    x121 = x117 * x18
    x122 = x121 + x42
    x123 = x122 * x5
    x124 = x117 * x25 + x45
    x125 = -x122 * x4 + x124 * x5
    x126 = -x120 + x123
    x127 = x117 * x43
    x128 = x117 * x46 + x73
    x129 = x127 + x78
    x130 = x117 * x62
    x131 = x117 * x65 + x84
    x132 = x130 + x87
    x133 = -x8 - A[2]
    x134 = x12 * x133
    x135 = x134 + x56
    x136 = x135 * x4
    x137 = x133 * x18
    x138 = x137 + x61
    x139 = x138 * x5
    x140 = x133 * x25 + x64
    x141 = -x138 * x4 + x140 * x5
    x142 = x0 * (-x137 + x140 + x60)
    x143 = -x136 + x139
    x144 = x0 * (-x134 + x138 + x55)
    x145 = x133 * x14 + x70
    x146 = x135 * x7
    x147 = x138 * x34
    x148 = -x138 * x7 + x140 * x34
    x149 = x0 * (x146 - x147 + x148)
    x150 = -x146 + x147
    x151 = x135 * x34 - x145 * x7
    x152 = x133 * x62
    x153 = x133 * x65 + x92
    x154 = x0 * (-x152 + x153 + x95)
    x155 = x152 + x97
    x156 = x133 * x57 + x99
    x157 = x142 + x148 * x34 - x150 * x7
    x158 = x144 + x150 * x34 - x151 * x7
    x159 = x153 * x34 - x155 * x7
    x160 = x155 * x34 - x156 * x7
    x161 = x113 + x133 * x93
    x162 = x115 + x133 * x98

    # 30 item(s)
    return numpy.array(
        [
            3 * x0 * (x17 + x20 - x24 + x28)
            + x29 * (x28 * x5 + x30 * (-x21 + x22 + x27) - x31 * x4)
            - x4
            * (
                x30 * (-x13 + x15 + x23)
                + x31 * x5
                - x4 * (x16 * x5 + x32 - x4 * (x14 * x5 - x33 * x4))
            ),
            x29 * (-x4 * x49 + x47 * x5 + x48)
            + x30 * (x39 - x44 + x47)
            - x4 * (-x4 * (x38 * x5 - x4 * x52) + x49 * x5 + x50),
            x29 * (-x4 * x68 + x5 * x66 + x67)
            + x30 * (x58 - x63 + x66)
            - x4 * (-x4 * (-x4 * x71 + x5 * x57) + x5 * x68 + x69),
            x29 * (-x4 * x79 + x5 * x74) - x4 * (-x4 * x81 + x5 * x79) + x77,
            x29 * (-x4 * x88 + x5 * x85) - x4 * (-x4 * x90 + x5 * x88) + x86,
            x29 * (-x4 * x98 + x5 * x93) - x4 * (-x100 * x4 + x5 * x98) + x96,
            x102 * x29 - x104 * x4,
            x106 * x29 - x108 * x4,
            x110 * x29 - x112 * x4,
            x114 * x29 - x116 * x4,
            x30 * (x120 - x123 + x125)
            - x4
            * (
                x0 * (-x118 + x122 + x36)
                + x126 * x5
                - x4 * (x119 * x5 - x4 * (x117 * x14 + x51))
            )
            + x5 * (x0 * (-x121 + x124 + x41) + x125 * x5 - x126 * x4),
            x0 * (-x127 + x128 + x76)
            - x4 * (x129 * x5 - x4 * (x117 * x38 + x80))
            + x5 * (x128 * x5 - x129 * x4),
            x0 * (-x130 + x131 + x82)
            - x4 * (x132 * x5 - x4 * (x117 * x57 + x89))
            + x5 * (x131 * x5 - x132 * x4),
            -x4 * (x103 + x117 * x79) + x5 * (x101 + x117 * x74),
            -x4 * (x107 + x117 * x88) + x5 * (x105 + x117 * x85),
            -x4 * (x111 + x117 * x98) + x5 * (x109 + x117 * x93),
            x102 * x117 - x104 * x7 + 3 * x77,
            x106 * x117 - x108 * x7 + 2 * x86,
            x110 * x117 - x112 * x7 + x96,
            x114 * x117 - x116 * x7,
            x30 * (x136 - x139 + x141)
            - x4 * (x143 * x5 + x144 - x4 * (x135 * x5 - x145 * x4))
            + x5 * (x141 * x5 + x142 - x143 * x4),
            x149 - x4 * (x150 * x5 - x151 * x4) + x5 * (x148 * x5 - x150 * x4),
            x154 - x4 * (x155 * x5 - x156 * x4) + x5 * (x153 * x5 - x155 * x4),
            x157 * x5 - x158 * x4,
            x159 * x5 - x160 * x4,
            x161 * x5 - x162 * x4,
            2 * x149 + x157 * x34 - x158 * x7,
            x154 + x159 * x34 - x160 * x7,
            x161 * x34 - x162 * x7,
            x114 * x133 - x116 * x9 + 3 * x96,
        ]
    )


def coulomb3d_14(a, A, b, B, C):
    """Cartesian (pg) 1-electron Coulomb integral.

    Generated code; DO NOT modify by hand!"""

    x0 = (2 * a + 2 * b) ** (-1.0)
    x1 = a + b
    x2 = x1 ** (-1.0)
    x3 = -x2 * (a * A[0] + b * B[0])
    x4 = -x3 - C[0]
    x5 = -x2 * (a * A[1] + b * B[1])
    x6 = -x5 - C[1]
    x7 = -x2 * (a * A[2] + b * B[2])
    x8 = -x7 - C[2]
    x9 = x1 * (x4 ** 2 + x6 ** 2 + x8 ** 2)
    x10 = (
        2
        * numpy.pi
        * x2
        * numpy.exp(
            -a * b * x2 * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2)
        )
    )
    x11 = x10 * boys(2, x9)
    x12 = x10 * boys(3, x9)
    x13 = x0 * (x11 - x12)
    x14 = -x3 - B[0]
    x15 = x11 * x14
    x16 = x12 * x4
    x17 = x15 - x16
    x18 = x14 * x17
    x19 = x12 * x14
    x20 = x10 * boys(4, x9)
    x21 = x20 * x4
    x22 = x19 - x21
    x23 = x22 * x4
    x24 = x13 + x18 - x23
    x25 = x24 * x4
    x26 = x10 * boys(1, x9)
    x27 = x0 * (-x11 + x26)
    x28 = x14 * x26
    x29 = x11 * x4
    x30 = x28 - x29
    x31 = x14 * x30
    x32 = x17 * x4
    x33 = x27 + x31 - x32
    x34 = x14 * x33
    x35 = 2 * x0
    x36 = x35 * (-x15 + x16 + x30)
    x37 = x10 * boys(0, x9)
    x38 = x14 * x37 - x26 * x4
    x39 = x0 * (-x26 + x37)
    x40 = x14 * x38 - x30 * x4 + x39
    x41 = x14 * x40 - x33 * x4 + x35 * (-x28 + x29 + x38)
    x42 = -x3 - A[0]
    x43 = -x27
    x44 = 3 * x0
    x45 = -x25 + x34 + x36
    x46 = -x13
    x47 = x0 * (x12 - x20)
    x48 = x10 * boys(5, x9)
    x49 = -x5 - B[1]
    x50 = x11 * x49
    x51 = x12 * x6
    x52 = -x51
    x53 = x50 + x52
    x54 = x14 * x53
    x55 = x12 * x49
    x56 = x20 * x6
    x57 = -x56
    x58 = x55 + x57
    x59 = x4 * x58
    x60 = x54 - x59
    x61 = x4 * x60
    x62 = x26 * x49
    x63 = x11 * x6
    x64 = -x63
    x65 = x62 + x64
    x66 = x0 * (-x50 + x51 + x65)
    x67 = x14 * x65
    x68 = x4 * x53
    x69 = x67 - x68
    x70 = x14 * x69
    x71 = -x26 * x6
    x72 = x37 * x49 + x71
    x73 = x0 * (-x62 + x63 + x72)
    x74 = x14 * x72 - x4 * x65
    x75 = x14 * x74 - x4 * x69 + x73
    x76 = -x61 + x66 + x70
    x77 = x0 * (x53 - x55 + x56)
    x78 = -x48 * x6
    x79 = x20 * x49 + x78
    x80 = -x7 - B[2]
    x81 = x11 * x80
    x82 = x12 * x8
    x83 = -x82
    x84 = x81 + x83
    x85 = x14 * x84
    x86 = x12 * x80
    x87 = x20 * x8
    x88 = -x87
    x89 = x86 + x88
    x90 = x4 * x89
    x91 = x85 - x90
    x92 = x4 * x91
    x93 = x26 * x80
    x94 = x11 * x8
    x95 = -x94
    x96 = x93 + x95
    x97 = x0 * (-x81 + x82 + x96)
    x98 = -x97
    x99 = x14 * x96
    x100 = x4 * x84
    x101 = -x100 + x99
    x102 = x101 * x14
    x103 = -x26 * x8
    x104 = x103 + x37 * x80
    x105 = x0 * (x104 - x93 + x94)
    x106 = x104 * x14 - x4 * x96
    x107 = -x101 * x4 + x105 + x106 * x14
    x108 = x102 - x92 + x97
    x109 = x0 * (x84 - x86 + x87)
    x110 = -x48 * x8
    x111 = x110 + x20 * x80
    x112 = x49 * x53
    x113 = x58 * x6
    x114 = -x113 + x13
    x115 = x112 + x114
    x116 = x115 * x4
    x117 = x49 * x65
    x118 = x53 * x6
    x119 = -x118 + x27
    x120 = x117 + x119
    x121 = x120 * x14
    x122 = x39 - x6 * x65
    x123 = x122 + x49 * x72
    x124 = -x120 * x4 + x123 * x14
    x125 = x118 + x43
    x126 = x0 * (-x117 + x123 + x125)
    x127 = -x116 + x121
    x128 = x113 + x46
    x129 = x0 * (-x112 + x120 + x128)
    x130 = x47 - x6 * x79
    x131 = x130 + x49 * x58
    x132 = x49 * x84
    x133 = x6 * x89
    x134 = -x133
    x135 = x132 + x134
    x136 = x135 * x4
    x137 = x49 * x96
    x138 = x6 * x84
    x139 = -x138
    x140 = x137 + x139
    x141 = x14 * x140
    x142 = -x6 * x96
    x143 = x104 * x49 + x142
    x144 = x14 * x143 - x140 * x4
    x145 = x0 * (-x137 + x138 + x143)
    x146 = -x136 + x141
    x147 = x0 * (-x132 + x133 + x140)
    x148 = -x111 * x6
    x149 = x148 + x49 * x89
    x150 = x80 * x84
    x151 = x8 * x89
    x152 = x13 - x151
    x153 = x150 + x152
    x154 = x153 * x4
    x155 = x80 * x96
    x156 = x8 * x84
    x157 = -x156 + x27
    x158 = x155 + x157
    x159 = x14 * x158
    x160 = x39 - x8 * x96
    x161 = x104 * x80 + x160
    x162 = x14 * x161 - x158 * x4
    x163 = x156 + x43
    x164 = x0 * (-x155 + x161 + x163)
    x165 = -x154 + x159
    x166 = x151 + x46
    x167 = x0 * (-x150 + x158 + x166)
    x168 = -x111 * x8 + x47
    x169 = x168 + x80 * x89
    x170 = x120 * x49
    x171 = -x120 * x6 + 2 * x73
    x172 = x123 * x49 + x171
    x173 = x115 * x6
    x174 = 2 * x66
    x175 = x173 - x174
    x176 = x0 * (-x170 + x172 + x175)
    x177 = -x173 + x174
    x178 = x170 + x177
    x179 = -x131 * x6 + 2 * x77
    x180 = x115 * x49 + x179
    x181 = x140 * x49
    x182 = x105 - x140 * x6
    x183 = x143 * x49 + x182
    x184 = x135 * x6
    x185 = x184 + x98
    x186 = x0 * (-x181 + x183 + x185)
    x187 = -x184 + x97
    x188 = x181 + x187
    x189 = x109 - x149 * x6
    x190 = x135 * x49 + x189
    x191 = x153 * x6
    x192 = x158 * x49
    x193 = -x158 * x6
    x194 = x161 * x49 + x193
    x195 = x0 * (x191 - x192 + x194)
    x196 = -x191
    x197 = x192 + x196
    x198 = -x169 * x6
    x199 = x153 * x49 + x198
    x200 = x158 * x80
    x201 = 2 * x105 - x158 * x8
    x202 = x161 * x80 + x201
    x203 = x153 * x8
    x204 = 2 * x97
    x205 = x203 - x204
    x206 = x0 * (-x200 + x202 + x205)
    x207 = -x203 + x204
    x208 = x200 + x207
    x209 = 2 * x109 - x169 * x8
    x210 = x153 * x80 + x209
    x211 = 3 * x126 - x178 * x6
    x212 = x172 * x49 + x211
    x213 = 3 * x129 - x180 * x6
    x214 = x178 * x49 + x213
    x215 = 2 * x145 - x188 * x6
    x216 = x183 * x49 + x215
    x217 = 2 * x147 - x190 * x6
    x218 = x188 * x49 + x217
    x219 = x164 - x197 * x6
    x220 = x194 * x49 + x219
    x221 = x167 - x199 * x6
    x222 = x197 * x49 + x221
    x223 = -x208 * x6
    x224 = x202 * x49 + x223
    x225 = -x210 * x6
    x226 = x208 * x49 + x225
    x227 = 3 * x164 - x208 * x8
    x228 = x202 * x80 + x227
    x229 = 3 * x167 - x210 * x8
    x230 = x208 * x80 + x229
    x231 = -x5 - A[1]
    x232 = x11 * x231
    x233 = x232 + x52
    x234 = x14 * x233
    x235 = x12 * x231
    x236 = x235 + x57
    x237 = x236 * x4
    x238 = x234 - x237
    x239 = x238 * x4
    x240 = x231 * x26
    x241 = x240 + x64
    x242 = x0 * (-x232 + x241 + x51)
    x243 = x14 * x241
    x244 = x233 * x4
    x245 = x243 - x244
    x246 = x14 * x245
    x247 = x231 * x37 + x71
    x248 = x14 * x247 - x241 * x4
    x249 = x0 * (-x240 + x247 + x63) + x14 * x248 - x245 * x4
    x250 = -x239 + x242 + x246
    x251 = x231 * x53
    x252 = x114 + x251
    x253 = x252 * x4
    x254 = x231 * x65
    x255 = x119 + x254
    x256 = x14 * x255
    x257 = x122 + x231 * x72
    x258 = x14 * x257 - x255 * x4
    x259 = -x253 + x256
    x260 = x231 * x84
    x261 = x134 + x260
    x262 = x261 * x4
    x263 = x231 * x96
    x264 = x139 + x263
    x265 = x14 * x264
    x266 = x104 * x231 + x142
    x267 = x14 * x266 - x264 * x4
    x268 = -x262 + x265
    x269 = x120 * x231
    x270 = x123 * x231 + x171
    x271 = x177 + x269
    x272 = x140 * x231
    x273 = x143 * x231 + x182
    x274 = x187 + x272
    x275 = x158 * x231
    x276 = x161 * x231 + x193
    x277 = x196 + x275
    x278 = -x7 - A[2]
    x279 = x11 * x278
    x280 = x279 + x83
    x281 = x14 * x280
    x282 = x12 * x278
    x283 = x282 + x88
    x284 = x283 * x4
    x285 = x281 - x284
    x286 = x285 * x4
    x287 = x26 * x278
    x288 = x287 + x95
    x289 = x0 * (-x279 + x288 + x82)
    x290 = -x289
    x291 = x14 * x288
    x292 = x280 * x4
    x293 = x291 - x292
    x294 = x14 * x293
    x295 = x103 + x278 * x37
    x296 = x0 * (-x287 + x295 + x94)
    x297 = x14 * x295 - x288 * x4
    x298 = x14 * x297 - x293 * x4 + x296
    x299 = -x286 + x289 + x294
    x300 = x0 * (x280 - x282 + x87)
    x301 = x110 + x20 * x278
    x302 = x280 * x49
    x303 = x283 * x6
    x304 = x302 - x303
    x305 = x304 * x4
    x306 = x288 * x49
    x307 = x280 * x6
    x308 = x306 - x307
    x309 = x14 * x308
    x310 = -x288 * x6 + x295 * x49
    x311 = x14 * x310 - x308 * x4
    x312 = x0 * (-x306 + x307 + x310)
    x313 = -x305 + x309
    x314 = x0 * (-x302 + x303 + x308)
    x315 = x283 * x49 - x301 * x6
    x316 = x278 * x84
    x317 = x152 + x316
    x318 = x317 * x4
    x319 = x278 * x96
    x320 = x157 + x319
    x321 = x14 * x320
    x322 = x104 * x278 + x160
    x323 = x14 * x322 - x320 * x4
    x324 = x0 * (x163 - x319 + x322)
    x325 = -x318 + x321
    x326 = x0 * (x166 - x316 + x320)
    x327 = x168 + x278 * x89
    x328 = x304 * x6
    x329 = x308 * x49
    x330 = x296 - x308 * x6 + x310 * x49
    x331 = x0 * (x290 + x328 - x329 + x330)
    x332 = x289 - x328 + x329
    x333 = x300 + x304 * x49 - x315 * x6
    x334 = x317 * x6
    x335 = x320 * x49
    x336 = -x320 * x6 + x322 * x49
    x337 = x0 * (x334 - x335 + x336)
    x338 = -x334 + x335
    x339 = x317 * x49 - x327 * x6
    x340 = x158 * x278
    x341 = x161 * x278 + x201
    x342 = x0 * (x205 - x340 + x341)
    x343 = x207 + x340
    x344 = x153 * x278 + x209
    x345 = 2 * x312 + x330 * x49 - x332 * x6
    x346 = 2 * x314 + x332 * x49 - x333 * x6
    x347 = x324 + x336 * x49 - x338 * x6
    x348 = x326 + x338 * x49 - x339 * x6
    x349 = x341 * x49 - x343 * x6
    x350 = x343 * x49 - x344 * x6
    x351 = x202 * x278 + x227
    x352 = x208 * x278 + x229

    # 45 item(s)
    return numpy.array(
        [
            4 * x0 * (x25 - x34 - x36 + x41)
            - x4
            * (
                x14 * x45
                - x4
                * (
                    x14 * x24
                    + x35 * (x17 - x19 + x21)
                    - x4 * (x14 * x22 - x4 * (x14 * x20 - x4 * x48) + x47)
                )
                + x44 * (-x18 + x23 + x33 + x46)
            )
            + x42 * (x14 * x41 - x4 * x45 + x44 * (-x31 + x32 + x40 + x43)),
            -x4
            * (
                x14 * x76
                + x35 * (-x54 + x59 + x69)
                - x4 * (x14 * x60 - x4 * (x14 * x58 - x4 * x79) + x77)
            )
            + x42 * (x14 * x75 + x35 * (-x67 + x68 + x74) - x4 * x76)
            + x44 * (x61 - x66 - x70 + x75),
            -x4
            * (
                x108 * x14
                + x35 * (x101 - x85 + x90)
                - x4 * (x109 + x14 * x91 - x4 * (-x111 * x4 + x14 * x89))
            )
            + x42 * (x107 * x14 - x108 * x4 + x35 * (x100 + x106 - x99))
            + x44 * (-x102 + x107 + x92 + x98),
            x35 * (x116 - x121 + x124)
            - x4 * (x127 * x14 + x129 - x4 * (x115 * x14 - x131 * x4))
            + x42 * (x124 * x14 + x126 - x127 * x4),
            x35 * (x136 - x141 + x144)
            - x4 * (x14 * x146 + x147 - x4 * (x135 * x14 - x149 * x4))
            + x42 * (x14 * x144 + x145 - x146 * x4),
            x35 * (x154 - x159 + x162)
            - x4 * (x14 * x165 + x167 - x4 * (x14 * x153 - x169 * x4))
            + x42 * (x14 * x162 + x164 - x165 * x4),
            x176 - x4 * (x14 * x178 - x180 * x4) + x42 * (x14 * x172 - x178 * x4),
            x186 - x4 * (x14 * x188 - x190 * x4) + x42 * (x14 * x183 - x188 * x4),
            x195 - x4 * (x14 * x197 - x199 * x4) + x42 * (x14 * x194 - x197 * x4),
            x206 - x4 * (x14 * x208 - x210 * x4) + x42 * (x14 * x202 - x208 * x4),
            x212 * x42 - x214 * x4,
            x216 * x42 - x218 * x4,
            x220 * x42 - x222 * x4,
            x224 * x42 - x226 * x4,
            x228 * x42 - x230 * x4,
            x14 * (x14 * x249 - x250 * x4 + x35 * (-x243 + x244 + x248))
            - x4
            * (
                x14 * x250
                + x35 * (-x234 + x237 + x245)
                - x4
                * (
                    x0 * (x233 - x235 + x56)
                    + x14 * x238
                    - x4 * (x14 * x236 - x4 * (x20 * x231 + x78))
                )
            )
            + x44 * (x239 - x242 - x246 + x249),
            x14 * (x0 * (x125 - x254 + x257) + x14 * x258 - x259 * x4)
            + x35 * (x253 - x256 + x258)
            - x4
            * (
                x0 * (x128 - x251 + x255)
                + x14 * x259
                - x4 * (x14 * x252 - x4 * (x130 + x231 * x58))
            ),
            x14 * (x0 * (x138 - x263 + x266) + x14 * x267 - x268 * x4)
            + x35 * (x262 - x265 + x267)
            - x4
            * (
                x0 * (x133 - x260 + x264)
                + x14 * x268
                - x4 * (x14 * x261 - x4 * (x148 + x231 * x89))
            ),
            x0 * (x175 - x269 + x270)
            + x14 * (x14 * x270 - x271 * x4)
            - x4 * (x14 * x271 - x4 * (x115 * x231 + x179)),
            x0 * (x185 - x272 + x273)
            + x14 * (x14 * x273 - x274 * x4)
            - x4 * (x14 * x274 - x4 * (x135 * x231 + x189)),
            x0 * (x191 - x275 + x276)
            + x14 * (x14 * x276 - x277 * x4)
            - x4 * (x14 * x277 - x4 * (x153 * x231 + x198)),
            x14 * (x172 * x231 + x211) - x4 * (x178 * x231 + x213),
            x14 * (x183 * x231 + x215) - x4 * (x188 * x231 + x217),
            x14 * (x194 * x231 + x219) - x4 * (x197 * x231 + x221),
            x14 * (x202 * x231 + x223) - x4 * (x208 * x231 + x225),
            4 * x176 + x212 * x231 - x214 * x6,
            3 * x186 + x216 * x231 - x218 * x6,
            2 * x195 + x220 * x231 - x222 * x6,
            x206 + x224 * x231 - x226 * x6,
            x228 * x231 - x230 * x6,
            x14 * (x14 * x298 - x299 * x4 + x35 * (-x291 + x292 + x297))
            - x4
            * (
                x14 * x299
                + x35 * (-x281 + x284 + x293)
                - x4 * (x14 * x285 + x300 - x4 * (x14 * x283 - x301 * x4))
            )
            + x44 * (x286 + x290 - x294 + x298),
            x14 * (x14 * x311 + x312 - x313 * x4)
            + x35 * (x305 - x309 + x311)
            - x4 * (x14 * x313 + x314 - x4 * (x14 * x304 - x315 * x4)),
            x14 * (x14 * x323 + x324 - x325 * x4)
            + x35 * (x318 - x321 + x323)
            - x4 * (x14 * x325 + x326 - x4 * (x14 * x317 - x327 * x4)),
            x14 * (x14 * x330 - x332 * x4) + x331 - x4 * (x14 * x332 - x333 * x4),
            x14 * (x14 * x336 - x338 * x4) + x337 - x4 * (x14 * x338 - x339 * x4),
            x14 * (x14 * x341 - x343 * x4) + x342 - x4 * (x14 * x343 - x344 * x4),
            x14 * x345 - x346 * x4,
            x14 * x347 - x348 * x4,
            x14 * x349 - x350 * x4,
            x14 * x351 - x352 * x4,
            3 * x331 + x345 * x49 - x346 * x6,
            2 * x337 + x347 * x49 - x348 * x6,
            x342 + x349 * x49 - x350 * x6,
            x351 * x49 - x352 * x6,
            4 * x206 + x228 * x278 - x230 * x8,
        ]
    )


def coulomb3d_20(a, A, b, B, C):
    """Cartesian (ds) 1-electron Coulomb integral.

    Generated code; DO NOT modify by hand!"""

    x0 = a + b
    x1 = x0 ** (-1.0)
    x2 = -x1 * (a * A[0] + b * B[0])
    x3 = -x2 - C[0]
    x4 = -x1 * (a * A[1] + b * B[1])
    x5 = -x4 - C[1]
    x6 = -x1 * (a * A[2] + b * B[2])
    x7 = -x6 - C[2]
    x8 = x0 * (x3 ** 2 + x5 ** 2 + x7 ** 2)
    x9 = (
        2
        * numpy.pi
        * x1
        * numpy.exp(
            -a * b * x1 * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2)
        )
    )
    x10 = x9 * boys(0, x8)
    x11 = x9 * boys(1, x8)
    x12 = (x10 - x11) / (2 * a + 2 * b)
    x13 = -x2 - A[0]
    x14 = x9 * boys(2, x8)
    x15 = -x4 - A[1]
    x16 = x10 * x15 - x11 * x5
    x17 = x11 * x15 - x14 * x5
    x18 = -x6 - A[2]
    x19 = x10 * x18 - x11 * x7
    x20 = x11 * x18 - x14 * x7

    # 6 item(s)
    return numpy.array(
        [
            x12 + x13 * (x10 * x13 - x11 * x3) - x3 * (x11 * x13 - x14 * x3),
            x13 * x16 - x17 * x3,
            x13 * x19 - x20 * x3,
            x12 + x15 * x16 - x17 * x5,
            x15 * x19 - x20 * x5,
            x12 + x18 * x19 - x20 * x7,
        ]
    )


def coulomb3d_21(a, A, b, B, C):
    """Cartesian (dp) 1-electron Coulomb integral.

    Generated code; DO NOT modify by hand!"""

    x0 = (2 * a + 2 * b) ** (-1.0)
    x1 = a + b
    x2 = x1 ** (-1.0)
    x3 = -x2 * (a * A[0] + b * B[0])
    x4 = -x3 - A[0]
    x5 = -x3 - C[0]
    x6 = -x2 * (a * A[1] + b * B[1])
    x7 = -x6 - C[1]
    x8 = -x2 * (a * A[2] + b * B[2])
    x9 = -x8 - C[2]
    x10 = x1 * (x5 ** 2 + x7 ** 2 + x9 ** 2)
    x11 = (
        2
        * numpy.pi
        * x2
        * numpy.exp(
            -a * b * x2 * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2)
        )
    )
    x12 = x11 * boys(0, x10)
    x13 = x11 * boys(1, x10)
    x14 = -x13 * x5
    x15 = x11 * boys(2, x10)
    x16 = x15 * x5
    x17 = -x3 - B[0]
    x18 = x13 * x17
    x19 = x12 * x17 + x14
    x20 = x0 * (x12 - x13)
    x21 = -x16 + x18
    x22 = x0 * (x13 - x15)
    x23 = x11 * boys(3, x10)
    x24 = -x6 - B[1]
    x25 = x13 * x24
    x26 = x15 * x7
    x27 = -x13 * x7
    x28 = x12 * x24 + x27
    x29 = x0 * (-x25 + x26 + x28)
    x30 = -x26
    x31 = x25 + x30
    x32 = -x23 * x7
    x33 = x15 * x24 + x32
    x34 = -x8 - B[2]
    x35 = x13 * x34
    x36 = x15 * x9
    x37 = -x13 * x9
    x38 = x12 * x34 + x37
    x39 = x0 * (-x35 + x36 + x38)
    x40 = -x36
    x41 = x35 + x40
    x42 = -x23 * x9
    x43 = x15 * x34 + x42
    x44 = -x6 - A[1]
    x45 = x13 * x44
    x46 = x12 * x44 + x27
    x47 = x0 * (x26 - x45 + x46)
    x48 = x30 + x45
    x49 = x15 * x44 + x32
    x50 = x20 + x28 * x44 - x31 * x7
    x51 = x22 + x31 * x44 - x33 * x7
    x52 = x38 * x44 - x41 * x7
    x53 = x41 * x44 - x43 * x7
    x54 = -x8 - A[2]
    x55 = x13 * x54
    x56 = x12 * x54 + x37
    x57 = x0 * (x36 - x55 + x56)
    x58 = x40 + x55
    x59 = x15 * x54 + x42
    x60 = -x58 * x7
    x61 = x24 * x56 + x60
    x62 = -x59 * x7
    x63 = x24 * x58 + x62
    x64 = x20 + x38 * x54 - x41 * x9
    x65 = x22 + x41 * x54 - x43 * x9
    x66 = x20 + x54 * x56 - x58 * x9
    x67 = x22 + x54 * x58 - x59 * x9

    # 18 item(s)
    return numpy.array(
        [
            x0 * (x16 - x18 + x19)
            + x0 * (x12 * x4 - x13 * x4 + x14 + x16)
            + x4 * (x19 * x4 + x20 - x21 * x5)
            - x5 * (x21 * x4 + x22 - x5 * (x15 * x17 - x23 * x5)),
            x29 + x4 * (x28 * x4 - x31 * x5) - x5 * (x31 * x4 - x33 * x5),
            x39 + x4 * (x38 * x4 - x41 * x5) - x5 * (x4 * x41 - x43 * x5),
            x4 * (x17 * x46 - x48 * x5) + x47 - x5 * (x17 * x48 - x49 * x5),
            x4 * x50 - x5 * x51,
            x4 * x52 - x5 * x53,
            x4 * (x17 * x56 - x5 * x58) - x5 * (x17 * x58 - x5 * x59) + x57,
            x4 * x61 - x5 * x63,
            x4 * x64 - x5 * x65,
            x17 * (x20 + x44 * x46 - x48 * x7) - x5 * (x22 + x44 * x48 - x49 * x7),
            x29 + x44 * x50 + x47 - x51 * x7,
            x39 + x44 * x52 - x53 * x7,
            x17 * (x44 * x56 + x60) - x5 * (x44 * x58 + x62),
            x44 * x61 + x57 - x63 * x7,
            x44 * x64 - x65 * x7,
            x17 * x66 - x5 * x67,
            x24 * x66 - x67 * x7,
            x39 + x54 * x64 + x57 - x65 * x9,
        ]
    )


def coulomb3d_22(a, A, b, B, C):
    """Cartesian (dd) 1-electron Coulomb integral.

    Generated code; DO NOT modify by hand!"""

    x0 = (2 * a + 2 * b) ** (-1.0)
    x1 = a + b
    x2 = x1 ** (-1.0)
    x3 = -x2 * (a * A[0] + b * B[0])
    x4 = -x3 - B[0]
    x5 = -x3 - C[0]
    x6 = -x2 * (a * A[1] + b * B[1])
    x7 = -x6 - C[1]
    x8 = -x2 * (a * A[2] + b * B[2])
    x9 = -x8 - C[2]
    x10 = x1 * (x5 ** 2 + x7 ** 2 + x9 ** 2)
    x11 = (
        2
        * numpy.pi
        * x2
        * numpy.exp(
            -a * b * x2 * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2)
        )
    )
    x12 = x11 * boys(1, x10)
    x13 = x12 * x4
    x14 = x11 * boys(2, x10)
    x15 = x14 * x5
    x16 = x13 - x15
    x17 = x16 * x4
    x18 = x11 * boys(0, x10)
    x19 = -x12 * x5 + x18 * x4
    x20 = x0 * (-x12 + x18)
    x21 = -x16 * x5 + x20
    x22 = x19 * x4 + x21
    x23 = x14 * x4
    x24 = x11 * boys(3, x10)
    x25 = x24 * x5
    x26 = x23 - x25
    x27 = x26 * x5
    x28 = x0 * (x12 - x14)
    x29 = -x28
    x30 = x27 + x29
    x31 = -x3 - A[0]
    x32 = 2 * x0
    x33 = x17 - x27 + x28
    x34 = x0 * (x14 - x24)
    x35 = x11 * boys(4, x10)
    x36 = -x6 - B[1]
    x37 = -x12 * x7
    x38 = x18 * x36 + x37
    x39 = x14 * x36
    x40 = x24 * x7
    x41 = -x40
    x42 = x39 + x41
    x43 = x42 * x5
    x44 = x12 * x36
    x45 = x14 * x7
    x46 = -x45
    x47 = x44 + x46
    x48 = -x47 * x5
    x49 = x4 * x47
    x50 = x38 * x4 + x48
    x51 = x0 * (x38 - x44 + x45)
    x52 = -x43 + x49
    x53 = x0 * (-x39 + x40 + x47)
    x54 = -x35 * x7
    x55 = x24 * x36 + x54
    x56 = -x8 - B[2]
    x57 = -x12 * x9
    x58 = x18 * x56 + x57
    x59 = x14 * x56
    x60 = x24 * x9
    x61 = -x60
    x62 = x59 + x61
    x63 = x5 * x62
    x64 = x12 * x56
    x65 = x14 * x9
    x66 = -x65
    x67 = x64 + x66
    x68 = -x5 * x67
    x69 = x4 * x67
    x70 = x4 * x58 + x68
    x71 = x0 * (x58 - x64 + x65)
    x72 = -x63 + x69
    x73 = x0 * (-x59 + x60 + x67)
    x74 = -x35 * x9
    x75 = x24 * x56 + x74
    x76 = x36 * x47
    x77 = x20 - x47 * x7
    x78 = x36 * x38 + x77
    x79 = x42 * x7
    x80 = x29 + x79
    x81 = x0 * (-x76 + x78 + x80)
    x82 = x28 - x79
    x83 = x76 + x82
    x84 = x34 - x55 * x7
    x85 = x36 * x42 + x84
    x86 = x62 * x7
    x87 = x36 * x67
    x88 = -x67 * x7
    x89 = x36 * x58 + x88
    x90 = x0 * (x86 - x87 + x89)
    x91 = -x86
    x92 = x87 + x91
    x93 = -x7 * x75
    x94 = x36 * x62 + x93
    x95 = x56 * x67
    x96 = x20 - x67 * x9
    x97 = x56 * x58 + x96
    x98 = x62 * x9
    x99 = x29 + x98
    x100 = x0 * (-x95 + x97 + x99)
    x101 = x28 - x98
    x102 = x101 + x95
    x103 = x34 - x75 * x9
    x104 = x103 + x56 * x62
    x105 = -x6 - A[1]
    x106 = x105 * x14
    x107 = x106 + x41
    x108 = x107 * x5
    x109 = x105 * x12
    x110 = x109 + x46
    x111 = x110 * x4
    x112 = x105 * x18 + x37
    x113 = -x110 * x5 + x112 * x4
    x114 = x0 * (-x109 + x112 + x45)
    x115 = -x108 + x111
    x116 = x0 * (-x106 + x110 + x40)
    x117 = x105 * x24 + x54
    x118 = x105 * x47
    x119 = x105 * x38 + x77
    x120 = x0 * (-x118 + x119 + x80)
    x121 = x118 + x82
    x122 = x105 * x42 + x84
    x123 = x105 * x67
    x124 = x105 * x58 + x88
    x125 = x0 * (-x123 + x124 + x86)
    x126 = x123 + x91
    x127 = x105 * x62 + x93
    x128 = x105 * x78 + 2 * x51 - x7 * x83
    x129 = x105 * x83 + 2 * x53 - x7 * x85
    x130 = x105 * x89 - x7 * x92 + x71
    x131 = x105 * x92 - x7 * x94 + x73
    x132 = -x102 * x7 + x105 * x97
    x133 = x102 * x105 - x104 * x7
    x134 = -x8 - A[2]
    x135 = x134 * x14
    x136 = x135 + x61
    x137 = x136 * x5
    x138 = x12 * x134
    x139 = x138 + x66
    x140 = x139 * x4
    x141 = x134 * x18 + x57
    x142 = -x139 * x5 + x141 * x4
    x143 = x0 * (-x138 + x141 + x65)
    x144 = -x137 + x140
    x145 = x0 * (-x135 + x139 + x60)
    x146 = x134 * x24 + x74
    x147 = x136 * x7
    x148 = x139 * x36
    x149 = -x139 * x7
    x150 = x141 * x36 + x149
    x151 = x0 * (x147 - x148 + x150)
    x152 = -x147
    x153 = x148 + x152
    x154 = -x146 * x7
    x155 = x136 * x36 + x154
    x156 = x134 * x67
    x157 = x134 * x58 + x96
    x158 = x0 * (-x156 + x157 + x99)
    x159 = x101 + x156
    x160 = x103 + x134 * x62
    x161 = x143 - x153 * x7
    x162 = x150 * x36 + x161
    x163 = x145 - x155 * x7
    x164 = x153 * x36 + x163
    x165 = -x159 * x7
    x166 = x157 * x36 + x165
    x167 = -x160 * x7
    x168 = x159 * x36 + x167
    x169 = -x102 * x9 + x134 * x97 + 2 * x71
    x170 = x102 * x134 - x104 * x9 + 2 * x73
    x171 = x107 * x7
    x172 = x105 * x110
    x173 = x105 * x112 - x110 * x7 + x20
    x174 = -x171 + x172 + x28
    x175 = x105 * x139
    x176 = x105 * x141 + x149
    x177 = x152 + x175
    x178 = x136 * x9
    x179 = x134 * x139
    x180 = x134 * x141 - x139 * x9 + x20
    x181 = x0 * (x178 - x179 + x180 + x29)
    x182 = -x178 + x179 + x28
    x183 = x134 * x136 - x146 * x9 + x34
    x184 = x180 * x36 - x182 * x7
    x185 = x182 * x36 - x183 * x7
    x186 = x134 * x157 + x143 - x159 * x9 + x71
    x187 = x134 * x159 + x145 - x160 * x9 + x73

    # 36 item(s)
    return numpy.array(
        [
            x0 * (-x17 + x22 + x30)
            + x31 * (x22 * x31 + x32 * (-x13 + x15 + x19) - x33 * x5)
            + x32 * (-x16 * x31 + x19 * x31 + x21 + x30)
            - x5
            * (
                x31 * x33
                + x32 * (x16 - x23 + x25)
                - x5 * (x26 * x4 + x34 - x5 * (x24 * x4 - x35 * x5))
            ),
            x0 * (x43 - x49 + x50)
            + x0 * (x31 * x38 - x31 * x47 + x43 + x48)
            + x31 * (x31 * x50 - x5 * x52 + x51)
            - x5 * (x31 * x52 - x5 * (x4 * x42 - x5 * x55) + x53),
            x0 * (x63 - x69 + x70)
            + x0 * (x31 * x58 - x31 * x67 + x63 + x68)
            + x31 * (x31 * x70 - x5 * x72 + x71)
            - x5 * (x31 * x72 - x5 * (x4 * x62 - x5 * x75) + x73),
            x31 * (x31 * x78 - x5 * x83) - x5 * (x31 * x83 - x5 * x85) + x81,
            x31 * (x31 * x89 - x5 * x92) - x5 * (x31 * x92 - x5 * x94) + x90,
            x100 + x31 * (-x102 * x5 + x31 * x97) - x5 * (x102 * x31 - x104 * x5),
            x31 * (x113 * x4 + x114 - x115 * x5)
            + x32 * (x108 - x111 + x113)
            - x5 * (x115 * x4 + x116 - x5 * (x107 * x4 - x117 * x5)),
            x120 + x31 * (x119 * x4 - x121 * x5) - x5 * (x121 * x4 - x122 * x5),
            x125 + x31 * (x124 * x4 - x126 * x5) - x5 * (x126 * x4 - x127 * x5),
            x128 * x31 - x129 * x5,
            x130 * x31 - x131 * x5,
            x132 * x31 - x133 * x5,
            x31 * (x142 * x4 + x143 - x144 * x5)
            + x32 * (x137 - x140 + x142)
            - x5 * (x144 * x4 + x145 - x5 * (x136 * x4 - x146 * x5)),
            x151 + x31 * (x150 * x4 - x153 * x5) - x5 * (x153 * x4 - x155 * x5),
            x158 + x31 * (x157 * x4 - x159 * x5) - x5 * (x159 * x4 - x160 * x5),
            x162 * x31 - x164 * x5,
            x166 * x31 - x168 * x5,
            x169 * x31 - x170 * x5,
            x0 * (x171 - x172 + x173 + x29)
            + x4 * (x173 * x4 - x174 * x5)
            - x5 * (x174 * x4 - x5 * (x105 * x107 - x117 * x7 + x34)),
            x4 * (x105 * x119 + x114 - x121 * x7 + x51)
            - x5 * (x105 * x121 + x116 - x122 * x7 + x53),
            x4 * (x105 * x124 - x126 * x7 + x71) - x5 * (x105 * x126 - x127 * x7 + x73),
            x105 * x128 + 2 * x120 - x129 * x7 + x81,
            x105 * x130 + x125 - x131 * x7 + x90,
            x100 + x105 * x132 - x133 * x7,
            x0 * (x147 - x175 + x176)
            + x4 * (x176 * x4 - x177 * x5)
            - x5 * (x177 * x4 - x5 * (x105 * x136 + x154)),
            x4 * (x105 * x150 + x161) - x5 * (x105 * x153 + x163),
            x4 * (x105 * x157 + x165) - x5 * (x105 * x159 + x167),
            x105 * x162 + 2 * x151 - x164 * x7,
            x105 * x166 + x158 - x168 * x7,
            x105 * x169 - x170 * x7,
            x181 + x4 * (x180 * x4 - x182 * x5) - x5 * (x182 * x4 - x183 * x5),
            x184 * x4 - x185 * x5,
            x186 * x4 - x187 * x5,
            x181 + x184 * x36 - x185 * x7,
            x186 * x36 - x187 * x7,
            x100 + x134 * x169 + 2 * x158 - x170 * x9,
        ]
    )


def coulomb3d_23(a, A, b, B, C):
    """Cartesian (df) 1-electron Coulomb integral.

    Generated code; DO NOT modify by hand!"""

    x0 = (2 * a + 2 * b) ** (-1.0)
    x1 = a + b
    x2 = x1 ** (-1.0)
    x3 = -x2 * (a * A[0] + b * B[0])
    x4 = -x3 - B[0]
    x5 = -x3 - C[0]
    x6 = -x2 * (a * A[1] + b * B[1])
    x7 = -x6 - C[1]
    x8 = -x2 * (a * A[2] + b * B[2])
    x9 = -x8 - C[2]
    x10 = x1 * (x5 ** 2 + x7 ** 2 + x9 ** 2)
    x11 = (
        2
        * numpy.pi
        * x2
        * numpy.exp(
            -a * b * x2 * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2)
        )
    )
    x12 = x11 * boys(1, x10)
    x13 = x11 * boys(2, x10)
    x14 = x0 * (x12 - x13)
    x15 = x12 * x4
    x16 = x13 * x5
    x17 = x15 - x16
    x18 = x17 * x4
    x19 = x13 * x4
    x20 = x11 * boys(3, x10)
    x21 = x20 * x5
    x22 = x19 - x21
    x23 = x22 * x5
    x24 = x14 + x18 - x23
    x25 = x24 * x4
    x26 = x11 * boys(0, x10)
    x27 = x0 * (-x12 + x26)
    x28 = -x12 * x5 + x26 * x4
    x29 = -x17 * x5 + x27 + x28 * x4
    x30 = 2 * x0
    x31 = -x24 * x5 + x30 * (-x15 + x16 + x28)
    x32 = x29 * x4 + x31
    x33 = x0 * (x13 - x20)
    x34 = x22 * x4
    x35 = x20 * x4
    x36 = x11 * boys(4, x10)
    x37 = x36 * x5
    x38 = x35 - x37
    x39 = x38 * x5
    x40 = x33 + x34 - x39
    x41 = x40 * x5
    x42 = x30 * (x17 - x19 + x21)
    x43 = x41 - x42
    x44 = -x3 - A[0]
    x45 = 3 * x0
    x46 = -x14
    x47 = x25 - x41 + x42
    x48 = -x33
    x49 = x0 * (x20 - x36)
    x50 = x11 * boys(5, x10)
    x51 = -x6 - B[1]
    x52 = x12 * x51
    x53 = x13 * x7
    x54 = -x53
    x55 = x52 + x54
    x56 = x4 * x55
    x57 = x13 * x51
    x58 = x20 * x7
    x59 = -x58
    x60 = x57 + x59
    x61 = x5 * x60
    x62 = x56 - x61
    x63 = x4 * x62
    x64 = -x12 * x7
    x65 = x26 * x51 + x64
    x66 = x4 * x65 - x5 * x55
    x67 = x0 * (-x52 + x53 + x65)
    x68 = -x5 * x62 + x67
    x69 = x4 * x66 + x68
    x70 = x4 * x60
    x71 = x20 * x51
    x72 = x36 * x7
    x73 = -x72
    x74 = x71 + x73
    x75 = x5 * x74
    x76 = x70 - x75
    x77 = x5 * x76
    x78 = x0 * (x55 - x57 + x58)
    x79 = -x78
    x80 = x77 + x79
    x81 = x63 - x77 + x78
    x82 = x0 * (x60 - x71 + x72)
    x83 = -x50 * x7
    x84 = x36 * x51 + x83
    x85 = -x8 - B[2]
    x86 = x12 * x85
    x87 = x13 * x9
    x88 = -x87
    x89 = x86 + x88
    x90 = x4 * x89
    x91 = x13 * x85
    x92 = x20 * x9
    x93 = -x92
    x94 = x91 + x93
    x95 = x5 * x94
    x96 = x90 - x95
    x97 = x4 * x96
    x98 = -x12 * x9
    x99 = x26 * x85 + x98
    x100 = x4 * x99 - x5 * x89
    x101 = x0 * (-x86 + x87 + x99)
    x102 = x101 - x5 * x96
    x103 = x100 * x4 + x102
    x104 = x4 * x94
    x105 = x20 * x85
    x106 = x36 * x9
    x107 = -x106
    x108 = x105 + x107
    x109 = x108 * x5
    x110 = x104 - x109
    x111 = x110 * x5
    x112 = x0 * (x89 - x91 + x92)
    x113 = -x112
    x114 = x111 + x113
    x115 = -x111 + x112 + x97
    x116 = x0 * (-x105 + x106 + x94)
    x117 = -x50 * x9
    x118 = x117 + x36 * x85
    x119 = x27 - x55 * x7
    x120 = x119 + x51 * x65
    x121 = x51 * x60
    x122 = x7 * x74
    x123 = -x122 + x33
    x124 = x121 + x123
    x125 = x124 * x5
    x126 = x51 * x55
    x127 = x60 * x7
    x128 = -x127 + x14
    x129 = x126 + x128
    x130 = -x129 * x5
    x131 = x129 * x4
    x132 = x120 * x4 + x130
    x133 = x127 + x46
    x134 = x0 * (x120 - x126 + x133)
    x135 = -x125 + x131
    x136 = x122 + x48
    x137 = x0 * (-x121 + x129 + x136)
    x138 = x49 - x7 * x84
    x139 = x138 + x51 * x74
    x140 = -x7 * x89
    x141 = x140 + x51 * x99
    x142 = x51 * x94
    x143 = x108 * x7
    x144 = -x143
    x145 = x142 + x144
    x146 = x145 * x5
    x147 = x51 * x89
    x148 = x7 * x94
    x149 = -x148
    x150 = x147 + x149
    x151 = -x150 * x5
    x152 = x150 * x4
    x153 = x141 * x4 + x151
    x154 = x0 * (x141 - x147 + x148)
    x155 = -x146 + x152
    x156 = x0 * (-x142 + x143 + x150)
    x157 = -x118 * x7
    x158 = x108 * x51 + x157
    x159 = x27 - x89 * x9
    x160 = x159 + x85 * x99
    x161 = x85 * x94
    x162 = x108 * x9
    x163 = -x162 + x33
    x164 = x161 + x163
    x165 = x164 * x5
    x166 = x85 * x89
    x167 = x9 * x94
    x168 = x14 - x167
    x169 = x166 + x168
    x170 = -x169 * x5
    x171 = x169 * x4
    x172 = x160 * x4 + x170
    x173 = x167 + x46
    x174 = x0 * (x160 - x166 + x173)
    x175 = -x165 + x171
    x176 = x162 + x48
    x177 = x0 * (-x161 + x169 + x176)
    x178 = -x118 * x9 + x49
    x179 = x108 * x85 + x178
    x180 = x129 * x51
    x181 = -x129 * x7 + 2 * x67
    x182 = x120 * x51 + x181
    x183 = x124 * x7
    x184 = 2 * x78
    x185 = x183 - x184
    x186 = x0 * (-x180 + x182 + x185)
    x187 = -x183 + x184
    x188 = x180 + x187
    x189 = -x139 * x7 + 2 * x82
    x190 = x124 * x51 + x189
    x191 = x150 * x51
    x192 = x101 - x150 * x7
    x193 = x141 * x51 + x192
    x194 = x145 * x7
    x195 = x113 + x194
    x196 = x0 * (-x191 + x193 + x195)
    x197 = x112 - x194
    x198 = x191 + x197
    x199 = x116 - x158 * x7
    x200 = x145 * x51 + x199
    x201 = x164 * x7
    x202 = x169 * x51
    x203 = -x169 * x7
    x204 = x160 * x51 + x203
    x205 = x0 * (x201 - x202 + x204)
    x206 = -x201
    x207 = x202 + x206
    x208 = -x179 * x7
    x209 = x164 * x51 + x208
    x210 = x169 * x85
    x211 = 2 * x101 - x169 * x9
    x212 = x160 * x85 + x211
    x213 = x164 * x9
    x214 = 2 * x112
    x215 = x213 - x214
    x216 = x0 * (-x210 + x212 + x215)
    x217 = -x213 + x214
    x218 = x210 + x217
    x219 = 2 * x116 - x179 * x9
    x220 = x164 * x85 + x219
    x221 = -x6 - A[1]
    x222 = x13 * x221
    x223 = x222 + x59
    x224 = x223 * x4
    x225 = x20 * x221
    x226 = x225 + x73
    x227 = x226 * x5
    x228 = x224 - x227
    x229 = x228 * x5
    x230 = x12 * x221
    x231 = x230 + x54
    x232 = x0 * (-x222 + x231 + x58)
    x233 = -x232
    x234 = x231 * x4
    x235 = x223 * x5
    x236 = x234 - x235
    x237 = x236 * x4
    x238 = x221 * x26 + x64
    x239 = x0 * (-x230 + x238 + x53)
    x240 = -x231 * x5 + x238 * x4
    x241 = -x236 * x5 + x239 + x240 * x4
    x242 = -x229 + x232 + x237
    x243 = x0 * (x223 - x225 + x72)
    x244 = x221 * x36 + x83
    x245 = x221 * x60
    x246 = x123 + x245
    x247 = x246 * x5
    x248 = x221 * x55
    x249 = x128 + x248
    x250 = x249 * x4
    x251 = x119 + x221 * x65
    x252 = -x249 * x5 + x251 * x4
    x253 = x0 * (x133 - x248 + x251)
    x254 = -x247 + x250
    x255 = x0 * (x136 - x245 + x249)
    x256 = x138 + x221 * x74
    x257 = x221 * x94
    x258 = x144 + x257
    x259 = x258 * x5
    x260 = x221 * x89
    x261 = x149 + x260
    x262 = x261 * x4
    x263 = x140 + x221 * x99
    x264 = -x261 * x5 + x263 * x4
    x265 = x0 * (x148 - x260 + x263)
    x266 = -x259 + x262
    x267 = x0 * (x143 - x257 + x261)
    x268 = x108 * x221 + x157
    x269 = x129 * x221
    x270 = x120 * x221 + x181
    x271 = x0 * (x185 - x269 + x270)
    x272 = x187 + x269
    x273 = x124 * x221 + x189
    x274 = x150 * x221
    x275 = x141 * x221 + x192
    x276 = x0 * (x195 - x274 + x275)
    x277 = x197 + x274
    x278 = x145 * x221 + x199
    x279 = x169 * x221
    x280 = x160 * x221 + x203
    x281 = x0 * (x201 - x279 + x280)
    x282 = x206 + x279
    x283 = x164 * x221 + x208
    x284 = 3 * x134 + x182 * x221 - x188 * x7
    x285 = 3 * x137 + x188 * x221 - x190 * x7
    x286 = 2 * x154 + x193 * x221 - x198 * x7
    x287 = 2 * x156 + x198 * x221 - x200 * x7
    x288 = x174 + x204 * x221 - x207 * x7
    x289 = x177 + x207 * x221 - x209 * x7
    x290 = x212 * x221 - x218 * x7
    x291 = x218 * x221 - x220 * x7
    x292 = -x8 - A[2]
    x293 = x13 * x292
    x294 = x293 + x93
    x295 = x294 * x4
    x296 = x20 * x292
    x297 = x107 + x296
    x298 = x297 * x5
    x299 = x295 - x298
    x300 = x299 * x5
    x301 = x12 * x292
    x302 = x301 + x88
    x303 = x0 * (-x293 + x302 + x92)
    x304 = -x303
    x305 = x302 * x4
    x306 = x294 * x5
    x307 = x305 - x306
    x308 = x307 * x4
    x309 = x26 * x292 + x98
    x310 = x0 * (-x301 + x309 + x87)
    x311 = -x302 * x5 + x309 * x4
    x312 = -x307 * x5 + x310 + x311 * x4
    x313 = -x300 + x303 + x308
    x314 = x0 * (x106 + x294 - x296)
    x315 = x117 + x292 * x36
    x316 = x294 * x51
    x317 = x297 * x7
    x318 = -x317
    x319 = x316 + x318
    x320 = x319 * x5
    x321 = x302 * x51
    x322 = x294 * x7
    x323 = -x322
    x324 = x321 + x323
    x325 = x324 * x4
    x326 = -x302 * x7
    x327 = x309 * x51 + x326
    x328 = -x324 * x5 + x327 * x4
    x329 = x0 * (-x321 + x322 + x327)
    x330 = -x320 + x325
    x331 = x0 * (-x316 + x317 + x324)
    x332 = -x315 * x7
    x333 = x297 * x51 + x332
    x334 = x292 * x94
    x335 = x163 + x334
    x336 = x335 * x5
    x337 = x292 * x89
    x338 = x168 + x337
    x339 = x338 * x4
    x340 = x159 + x292 * x99
    x341 = -x338 * x5 + x340 * x4
    x342 = x0 * (x173 - x337 + x340)
    x343 = -x336 + x339
    x344 = x0 * (x176 - x334 + x338)
    x345 = x108 * x292 + x178
    x346 = x324 * x51
    x347 = x310 - x324 * x7
    x348 = x327 * x51 + x347
    x349 = x319 * x7
    x350 = x304 + x349
    x351 = x0 * (-x346 + x348 + x350)
    x352 = x303 - x349
    x353 = x346 + x352
    x354 = x314 - x333 * x7
    x355 = x319 * x51 + x354
    x356 = x335 * x7
    x357 = x338 * x51
    x358 = -x338 * x7
    x359 = x340 * x51 + x358
    x360 = x0 * (x356 - x357 + x359)
    x361 = -x356
    x362 = x357 + x361
    x363 = -x345 * x7
    x364 = x335 * x51 + x363
    x365 = x169 * x292
    x366 = x160 * x292 + x211
    x367 = x0 * (x215 - x365 + x366)
    x368 = x217 + x365
    x369 = x164 * x292 + x219
    x370 = 2 * x329 - x353 * x7
    x371 = x348 * x51 + x370
    x372 = 2 * x331 - x355 * x7
    x373 = x353 * x51 + x372
    x374 = x342 - x362 * x7
    x375 = x359 * x51 + x374
    x376 = x344 - x364 * x7
    x377 = x362 * x51 + x376
    x378 = -x368 * x7
    x379 = x366 * x51 + x378
    x380 = -x369 * x7
    x381 = x368 * x51 + x380
    x382 = 3 * x174 + x212 * x292 - x218 * x9
    x383 = 3 * x177 + x218 * x292 - x220 * x9
    x384 = x221 * x223
    x385 = x226 * x7
    x386 = x33 + x384 - x385
    x387 = x386 * x5
    x388 = x221 * x231
    x389 = x223 * x7
    x390 = x14 + x388 - x389
    x391 = x390 * x4
    x392 = x221 * x238 - x231 * x7 + x27
    x393 = -x390 * x5 + x392 * x4
    x394 = -x387 + x391
    x395 = x246 * x7
    x396 = x221 * x249
    x397 = x221 * x251 + x239 - x249 * x7 + x67
    x398 = x232 - x395 + x396 + x78
    x399 = x258 * x7
    x400 = x221 * x261
    x401 = x101 + x221 * x263 - x261 * x7
    x402 = x112 - x399 + x400
    x403 = x221 * x294
    x404 = x318 + x403
    x405 = x404 * x5
    x406 = x221 * x302
    x407 = x323 + x406
    x408 = x4 * x407
    x409 = x221 * x309 + x326
    x410 = x4 * x409 - x407 * x5
    x411 = -x405 + x408
    x412 = x221 * x324
    x413 = x221 * x327 + x347
    x414 = x352 + x412
    x415 = x221 * x338
    x416 = x221 * x340 + x358
    x417 = x361 + x415
    x418 = x292 * x294
    x419 = x297 * x9
    x420 = x33 + x418 - x419
    x421 = x420 * x5
    x422 = x292 * x302
    x423 = x294 * x9
    x424 = x14 + x422 - x423
    x425 = x4 * x424
    x426 = x27 + x292 * x309 - x302 * x9
    x427 = x4 * x426 - x424 * x5
    x428 = x0 * (-x422 + x423 + x426 + x46)
    x429 = -x421 + x425
    x430 = x0 * (-x418 + x419 + x424 + x48)
    x431 = x292 * x297 - x315 * x9 + x49
    x432 = x420 * x7
    x433 = x424 * x51
    x434 = -x424 * x7 + x426 * x51
    x435 = x0 * (x432 - x433 + x434)
    x436 = -x432 + x433
    x437 = x420 * x51 - x431 * x7
    x438 = x335 * x9
    x439 = x292 * x338
    x440 = x101 + x292 * x340 + x310 - x338 * x9
    x441 = x0 * (x113 + x304 + x438 - x439 + x440)
    x442 = x112 + x303 - x438 + x439
    x443 = x116 + x292 * x335 + x314 - x345 * x9
    x444 = x428 + x434 * x51 - x436 * x7
    x445 = x430 + x436 * x51 - x437 * x7
    x446 = x440 * x51 - x442 * x7
    x447 = x442 * x51 - x443 * x7
    x448 = x174 + x292 * x366 + 2 * x342 - x368 * x9
    x449 = x177 + x292 * x368 + 2 * x344 - x369 * x9

    # 60 item(s)
    return numpy.array(
        [
            x0 * (-x25 + x32 + x43)
            + x44 * (x32 * x44 + x45 * (-x18 + x23 + x29 + x46) - x47 * x5)
            + x45 * (-x24 * x44 + x29 * x44 + x31 + x43)
            - x5
            * (
                x44 * x47
                + x45 * (x24 - x34 + x39 + x48)
                - x5
                * (
                    x30 * (x22 - x35 + x37)
                    + x4 * x40
                    - x5 * (x38 * x4 + x49 - x5 * (x36 * x4 - x5 * x50))
                )
            ),
            x0 * (-x63 + x69 + x80)
            + x30 * (-x44 * x62 + x44 * x66 + x68 + x80)
            + x44 * (x30 * (-x56 + x61 + x66) + x44 * x69 - x5 * x81)
            - x5
            * (
                x30 * (x62 - x70 + x75)
                + x44 * x81
                - x5 * (x4 * x76 - x5 * (x4 * x74 - x5 * x84) + x82)
            ),
            x0 * (x103 + x114 - x97)
            + x30 * (x100 * x44 + x102 + x114 - x44 * x96)
            + x44 * (x103 * x44 - x115 * x5 + x30 * (x100 - x90 + x95))
            - x5
            * (
                x115 * x44
                + x30 * (-x104 + x109 + x96)
                - x5 * (x110 * x4 + x116 - x5 * (x108 * x4 - x118 * x5))
            ),
            x0 * (x125 - x131 + x132)
            + x0 * (x120 * x44 + x125 - x129 * x44 + x130)
            + x44 * (x132 * x44 + x134 - x135 * x5)
            - x5 * (x135 * x44 + x137 - x5 * (x124 * x4 - x139 * x5)),
            x0 * (x146 - x152 + x153)
            + x0 * (x141 * x44 + x146 - x150 * x44 + x151)
            + x44 * (x153 * x44 + x154 - x155 * x5)
            - x5 * (x155 * x44 + x156 - x5 * (x145 * x4 - x158 * x5)),
            x0 * (x165 - x171 + x172)
            + x0 * (x160 * x44 + x165 - x169 * x44 + x170)
            + x44 * (x172 * x44 + x174 - x175 * x5)
            - x5 * (x175 * x44 + x177 - x5 * (x164 * x4 - x179 * x5)),
            x186 + x44 * (x182 * x44 - x188 * x5) - x5 * (x188 * x44 - x190 * x5),
            x196 + x44 * (x193 * x44 - x198 * x5) - x5 * (x198 * x44 - x200 * x5),
            x205 + x44 * (x204 * x44 - x207 * x5) - x5 * (x207 * x44 - x209 * x5),
            x216 + x44 * (x212 * x44 - x218 * x5) - x5 * (x218 * x44 - x220 * x5),
            x44 * (x241 * x4 - x242 * x5 + x30 * (-x234 + x235 + x240))
            + x45 * (x229 + x233 - x237 + x241)
            - x5
            * (
                x242 * x4
                + x30 * (-x224 + x227 + x236)
                - x5 * (x228 * x4 + x243 - x5 * (x226 * x4 - x244 * x5))
            ),
            x30 * (x247 - x250 + x252)
            + x44 * (x252 * x4 + x253 - x254 * x5)
            - x5 * (x254 * x4 + x255 - x5 * (x246 * x4 - x256 * x5)),
            x30 * (x259 - x262 + x264)
            + x44 * (x264 * x4 + x265 - x266 * x5)
            - x5 * (x266 * x4 + x267 - x5 * (x258 * x4 - x268 * x5)),
            x271 + x44 * (x270 * x4 - x272 * x5) - x5 * (x272 * x4 - x273 * x5),
            x276 + x44 * (x275 * x4 - x277 * x5) - x5 * (x277 * x4 - x278 * x5),
            x281 + x44 * (x280 * x4 - x282 * x5) - x5 * (x282 * x4 - x283 * x5),
            x284 * x44 - x285 * x5,
            x286 * x44 - x287 * x5,
            x288 * x44 - x289 * x5,
            x290 * x44 - x291 * x5,
            x44 * (x30 * (-x305 + x306 + x311) + x312 * x4 - x313 * x5)
            + x45 * (x300 + x304 - x308 + x312)
            - x5
            * (
                x30 * (-x295 + x298 + x307)
                + x313 * x4
                - x5 * (x299 * x4 + x314 - x5 * (x297 * x4 - x315 * x5))
            ),
            x30 * (x320 - x325 + x328)
            + x44 * (x328 * x4 + x329 - x330 * x5)
            - x5 * (x330 * x4 + x331 - x5 * (x319 * x4 - x333 * x5)),
            x30 * (x336 - x339 + x341)
            + x44 * (x341 * x4 + x342 - x343 * x5)
            - x5 * (x343 * x4 + x344 - x5 * (x335 * x4 - x345 * x5)),
            x351 + x44 * (x348 * x4 - x353 * x5) - x5 * (x353 * x4 - x355 * x5),
            x360 + x44 * (x359 * x4 - x362 * x5) - x5 * (x362 * x4 - x364 * x5),
            x367 + x44 * (x366 * x4 - x368 * x5) - x5 * (x368 * x4 - x369 * x5),
            x371 * x44 - x373 * x5,
            x375 * x44 - x377 * x5,
            x379 * x44 - x381 * x5,
            x382 * x44 - x383 * x5,
            x30 * (x387 - x391 + x393)
            + x4 * (x0 * (-x388 + x389 + x392 + x46) + x393 * x4 - x394 * x5)
            - x5
            * (
                x0 * (-x384 + x385 + x390 + x48)
                + x394 * x4
                - x5 * (x386 * x4 - x5 * (x221 * x226 - x244 * x7 + x49))
            ),
            x0 * (x233 + x395 - x396 + x397 + x79)
            + x4 * (x397 * x4 - x398 * x5)
            - x5 * (x398 * x4 - x5 * (x221 * x246 + x243 - x256 * x7 + x82)),
            x0 * (x113 + x399 - x400 + x401)
            + x4 * (x4 * x401 - x402 * x5)
            - x5 * (x4 * x402 - x5 * (x116 + x221 * x258 - x268 * x7)),
            x4 * (x134 + x221 * x270 + 2 * x253 - x272 * x7)
            - x5 * (x137 + x221 * x272 + 2 * x255 - x273 * x7),
            x4 * (x154 + x221 * x275 + x265 - x277 * x7)
            - x5 * (x156 + x221 * x277 + x267 - x278 * x7),
            x4 * (x174 + x221 * x280 - x282 * x7) - x5 * (x177 + x221 * x282 - x283 * x7),
            x186 + x221 * x284 + 3 * x271 - x285 * x7,
            x196 + x221 * x286 + 2 * x276 - x287 * x7,
            x205 + x221 * x288 + x281 - x289 * x7,
            x216 + x221 * x290 - x291 * x7,
            x30 * (x405 - x408 + x410)
            + x4 * (x0 * (x322 - x406 + x409) + x4 * x410 - x411 * x5)
            - x5
            * (
                x0 * (x317 - x403 + x407)
                + x4 * x411
                - x5 * (x4 * x404 - x5 * (x221 * x297 + x332))
            ),
            x0 * (x350 - x412 + x413)
            + x4 * (x4 * x413 - x414 * x5)
            - x5 * (x4 * x414 - x5 * (x221 * x319 + x354)),
            x0 * (x356 - x415 + x416)
            + x4 * (x4 * x416 - x417 * x5)
            - x5 * (x4 * x417 - x5 * (x221 * x335 + x363)),
            x4 * (x221 * x348 + x370) - x5 * (x221 * x353 + x372),
            x4 * (x221 * x359 + x374) - x5 * (x221 * x362 + x376),
            x4 * (x221 * x366 + x378) - x5 * (x221 * x368 + x380),
            x221 * x371 + 3 * x351 - x373 * x7,
            x221 * x375 + 2 * x360 - x377 * x7,
            x221 * x379 + x367 - x381 * x7,
            x221 * x382 - x383 * x7,
            x30 * (x421 - x425 + x427)
            + x4 * (x4 * x427 + x428 - x429 * x5)
            - x5 * (x4 * x429 + x430 - x5 * (x4 * x420 - x431 * x5)),
            x4 * (x4 * x434 - x436 * x5) + x435 - x5 * (x4 * x436 - x437 * x5),
            x4 * (x4 * x440 - x442 * x5) + x441 - x5 * (x4 * x442 - x443 * x5),
            x4 * x444 - x445 * x5,
            x4 * x446 - x447 * x5,
            x4 * x448 - x449 * x5,
            2 * x435 + x444 * x51 - x445 * x7,
            x441 + x446 * x51 - x447 * x7,
            x448 * x51 - x449 * x7,
            x216 + x292 * x382 + 3 * x367 - x383 * x9,
        ]
    )


def coulomb3d_24(a, A, b, B, C):
    """Cartesian (dg) 1-electron Coulomb integral.

    Generated code; DO NOT modify by hand!"""

    x0 = (2 * a + 2 * b) ** (-1.0)
    x1 = a + b
    x2 = x1 ** (-1.0)
    x3 = -x2 * (a * A[0] + b * B[0])
    x4 = -x3 - B[0]
    x5 = -x3 - C[0]
    x6 = -x2 * (a * A[1] + b * B[1])
    x7 = -x6 - C[1]
    x8 = -x2 * (a * A[2] + b * B[2])
    x9 = -x8 - C[2]
    x10 = x1 * (x5 ** 2 + x7 ** 2 + x9 ** 2)
    x11 = (
        2
        * numpy.pi
        * x2
        * numpy.exp(
            -a * b * x2 * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2)
        )
    )
    x12 = x11 * boys(2, x10)
    x13 = x12 * x4
    x14 = x11 * boys(3, x10)
    x15 = x14 * x5
    x16 = x11 * boys(1, x10)
    x17 = x16 * x4
    x18 = x12 * x5
    x19 = x17 - x18
    x20 = 2 * x0
    x21 = x20 * (-x13 + x15 + x19)
    x22 = x0 * (-x12 + x16)
    x23 = x19 * x4
    x24 = x13 - x15
    x25 = x24 * x5
    x26 = x22 + x23 - x25
    x27 = x26 * x4
    x28 = x0 * (x12 - x14)
    x29 = x24 * x4
    x30 = x14 * x4
    x31 = x11 * boys(4, x10)
    x32 = x31 * x5
    x33 = x30 - x32
    x34 = x33 * x5
    x35 = x28 + x29 - x34
    x36 = x35 * x5
    x37 = x21 + x27 - x36
    x38 = x37 * x4
    x39 = x11 * boys(0, x10)
    x40 = -x16 * x5 + x39 * x4
    x41 = x0 * (-x16 + x39)
    x42 = -x19 * x5 + x4 * x40 + x41
    x43 = x20 * (-x17 + x18 + x40) - x26 * x5 + x4 * x42
    x44 = -x22
    x45 = 3 * x0
    x46 = -x37 * x5 + x45 * (-x23 + x25 + x42 + x44)
    x47 = x4 * x43 + x46
    x48 = x20 * (x24 - x30 + x32)
    x49 = x35 * x4
    x50 = x0 * (x14 - x31)
    x51 = x33 * x4
    x52 = x31 * x4
    x53 = x11 * boys(5, x10)
    x54 = x5 * x53
    x55 = x52 - x54
    x56 = x5 * x55
    x57 = x50 + x51 - x56
    x58 = x5 * x57
    x59 = x48 + x49 - x58
    x60 = x5 * x59
    x61 = -x28
    x62 = x45 * (x26 - x29 + x34 + x61)
    x63 = x60 - x62
    x64 = -x3 - A[0]
    x65 = 4 * x0
    x66 = x38 - x60 + x62
    x67 = -x50
    x68 = x0 * (x31 - x53)
    x69 = x11 * boys(6, x10)
    x70 = -x6 - B[1]
    x71 = x12 * x70
    x72 = x14 * x7
    x73 = x16 * x70
    x74 = x12 * x7
    x75 = -x74
    x76 = x73 + x75
    x77 = x0 * (-x71 + x72 + x76)
    x78 = x4 * x76
    x79 = -x72
    x80 = x71 + x79
    x81 = x5 * x80
    x82 = x78 - x81
    x83 = x4 * x82
    x84 = x4 * x80
    x85 = x14 * x70
    x86 = x31 * x7
    x87 = -x86
    x88 = x85 + x87
    x89 = x5 * x88
    x90 = x84 - x89
    x91 = x5 * x90
    x92 = x77 + x83 - x91
    x93 = x4 * x92
    x94 = -x16 * x7
    x95 = x39 * x70 + x94
    x96 = x0 * (-x73 + x74 + x95)
    x97 = x4 * x95 - x5 * x76
    x98 = x4 * x97 - x5 * x82 + x96
    x99 = x20 * (-x78 + x81 + x97) - x5 * x92
    x100 = x4 * x98 + x99
    x101 = x0 * (x80 - x85 + x86)
    x102 = x4 * x90
    x103 = x4 * x88
    x104 = x31 * x70
    x105 = x53 * x7
    x106 = -x105
    x107 = x104 + x106
    x108 = x107 * x5
    x109 = x103 - x108
    x110 = x109 * x5
    x111 = x101 + x102 - x110
    x112 = x111 * x5
    x113 = x20 * (x82 - x84 + x89)
    x114 = x112 - x113
    x115 = -x77
    x116 = -x112 + x113 + x93
    x117 = -x101
    x118 = x0 * (-x104 + x105 + x88)
    x119 = -x69 * x7
    x120 = x119 + x53 * x70
    x121 = -x8 - B[2]
    x122 = x12 * x121
    x123 = x14 * x9
    x124 = x121 * x16
    x125 = x12 * x9
    x126 = -x125
    x127 = x124 + x126
    x128 = x0 * (-x122 + x123 + x127)
    x129 = x127 * x4
    x130 = -x123
    x131 = x122 + x130
    x132 = x131 * x5
    x133 = x129 - x132
    x134 = x133 * x4
    x135 = x131 * x4
    x136 = x121 * x14
    x137 = x31 * x9
    x138 = -x137
    x139 = x136 + x138
    x140 = x139 * x5
    x141 = x135 - x140
    x142 = x141 * x5
    x143 = x128 + x134 - x142
    x144 = x143 * x4
    x145 = -x16 * x9
    x146 = x121 * x39 + x145
    x147 = x0 * (-x124 + x125 + x146)
    x148 = -x127 * x5 + x146 * x4
    x149 = -x133 * x5 + x147 + x148 * x4
    x150 = -x143 * x5 + x20 * (-x129 + x132 + x148)
    x151 = x149 * x4 + x150
    x152 = x0 * (x131 - x136 + x137)
    x153 = x141 * x4
    x154 = x139 * x4
    x155 = x121 * x31
    x156 = x53 * x9
    x157 = -x156
    x158 = x155 + x157
    x159 = x158 * x5
    x160 = x154 - x159
    x161 = x160 * x5
    x162 = x152 + x153 - x161
    x163 = x162 * x5
    x164 = x20 * (x133 - x135 + x140)
    x165 = x163 - x164
    x166 = -x128
    x167 = x144 - x163 + x164
    x168 = -x152
    x169 = x0 * (x139 - x155 + x156)
    x170 = -x69 * x9
    x171 = x121 * x53 + x170
    x172 = x70 * x76
    x173 = x7 * x80
    x174 = -x173 + x22
    x175 = x172 + x174
    x176 = x175 * x4
    x177 = x70 * x80
    x178 = x7 * x88
    x179 = -x178 + x28
    x180 = x177 + x179
    x181 = x180 * x5
    x182 = x176 - x181
    x183 = x182 * x4
    x184 = x41 - x7 * x76
    x185 = x184 + x70 * x95
    x186 = -x175 * x5 + x185 * x4
    x187 = x173 + x44
    x188 = x0 * (-x172 + x185 + x187)
    x189 = -x182 * x5 + x188
    x190 = x186 * x4 + x189
    x191 = x180 * x4
    x192 = x70 * x88
    x193 = x107 * x7
    x194 = -x193 + x50
    x195 = x192 + x194
    x196 = x195 * x5
    x197 = x191 - x196
    x198 = x197 * x5
    x199 = x178 + x61
    x200 = x0 * (x175 - x177 + x199)
    x201 = -x200
    x202 = x198 + x201
    x203 = x183 - x198 + x200
    x204 = x193 + x67
    x205 = x0 * (x180 - x192 + x204)
    x206 = -x120 * x7 + x68
    x207 = x107 * x70 + x206
    x208 = x127 * x70
    x209 = x131 * x7
    x210 = -x209
    x211 = x208 + x210
    x212 = x211 * x4
    x213 = x131 * x70
    x214 = x139 * x7
    x215 = -x214
    x216 = x213 + x215
    x217 = x216 * x5
    x218 = x212 - x217
    x219 = x218 * x4
    x220 = -x127 * x7
    x221 = x146 * x70 + x220
    x222 = -x211 * x5 + x221 * x4
    x223 = x0 * (-x208 + x209 + x221)
    x224 = -x218 * x5 + x223
    x225 = x222 * x4 + x224
    x226 = x216 * x4
    x227 = x139 * x70
    x228 = x158 * x7
    x229 = -x228
    x230 = x227 + x229
    x231 = x230 * x5
    x232 = x226 - x231
    x233 = x232 * x5
    x234 = x0 * (x211 - x213 + x214)
    x235 = -x234
    x236 = x233 + x235
    x237 = x219 - x233 + x234
    x238 = x0 * (x216 - x227 + x228)
    x239 = -x171 * x7
    x240 = x158 * x70 + x239
    x241 = x121 * x127
    x242 = x131 * x9
    x243 = x22 - x242
    x244 = x241 + x243
    x245 = x244 * x4
    x246 = x121 * x131
    x247 = x139 * x9
    x248 = -x247 + x28
    x249 = x246 + x248
    x250 = x249 * x5
    x251 = x245 - x250
    x252 = x251 * x4
    x253 = -x127 * x9 + x41
    x254 = x121 * x146 + x253
    x255 = -x244 * x5 + x254 * x4
    x256 = x242 + x44
    x257 = x0 * (-x241 + x254 + x256)
    x258 = -x251 * x5 + x257
    x259 = x255 * x4 + x258
    x260 = x249 * x4
    x261 = x121 * x139
    x262 = x158 * x9
    x263 = -x262 + x50
    x264 = x261 + x263
    x265 = x264 * x5
    x266 = x260 - x265
    x267 = x266 * x5
    x268 = x247 + x61
    x269 = x0 * (x244 - x246 + x268)
    x270 = -x269
    x271 = x267 + x270
    x272 = x252 - x267 + x269
    x273 = x262 + x67
    x274 = x0 * (x249 - x261 + x273)
    x275 = -x171 * x9 + x68
    x276 = x121 * x158 + x275
    x277 = -x175 * x7 + 2 * x96
    x278 = x185 * x70 + x277
    x279 = x180 * x70
    x280 = x195 * x7
    x281 = 2 * x101
    x282 = -x280 + x281
    x283 = x279 + x282
    x284 = x283 * x5
    x285 = x175 * x70
    x286 = x180 * x7
    x287 = 2 * x77
    x288 = -x286 + x287
    x289 = x285 + x288
    x290 = -x289 * x5
    x291 = x289 * x4
    x292 = x278 * x4 + x290
    x293 = x286 - x287
    x294 = x0 * (x278 - x285 + x293)
    x295 = -x284 + x291
    x296 = x280 - x281
    x297 = x0 * (-x279 + x289 + x296)
    x298 = 2 * x118 - x207 * x7
    x299 = x195 * x70 + x298
    x300 = x147 - x211 * x7
    x301 = x221 * x70 + x300
    x302 = x216 * x70
    x303 = x230 * x7
    x304 = x152 - x303
    x305 = x302 + x304
    x306 = x305 * x5
    x307 = x211 * x70
    x308 = x216 * x7
    x309 = x128 - x308
    x310 = x307 + x309
    x311 = -x310 * x5
    x312 = x310 * x4
    x313 = x301 * x4 + x311
    x314 = x166 + x308
    x315 = x0 * (x301 - x307 + x314)
    x316 = -x306 + x312
    x317 = x168 + x303
    x318 = x0 * (-x302 + x310 + x317)
    x319 = x169 - x240 * x7
    x320 = x230 * x70 + x319
    x321 = -x244 * x7
    x322 = x254 * x70 + x321
    x323 = x249 * x70
    x324 = x264 * x7
    x325 = -x324
    x326 = x323 + x325
    x327 = x326 * x5
    x328 = x244 * x70
    x329 = x249 * x7
    x330 = -x329
    x331 = x328 + x330
    x332 = -x331 * x5
    x333 = x331 * x4
    x334 = x322 * x4 + x332
    x335 = x0 * (x322 - x328 + x329)
    x336 = -x327 + x333
    x337 = x0 * (-x323 + x324 + x331)
    x338 = -x276 * x7
    x339 = x264 * x70 + x338
    x340 = 2 * x147 - x244 * x9
    x341 = x121 * x254 + x340
    x342 = x121 * x249
    x343 = x264 * x9
    x344 = 2 * x152
    x345 = -x343 + x344
    x346 = x342 + x345
    x347 = x346 * x5
    x348 = x121 * x244
    x349 = x249 * x9
    x350 = 2 * x128
    x351 = -x349 + x350
    x352 = x348 + x351
    x353 = -x352 * x5
    x354 = x352 * x4
    x355 = x341 * x4 + x353
    x356 = x349 - x350
    x357 = x0 * (x341 - x348 + x356)
    x358 = -x347 + x354
    x359 = x343 - x344
    x360 = x0 * (-x342 + x352 + x359)
    x361 = 2 * x169 - x276 * x9
    x362 = x121 * x264 + x361
    x363 = x289 * x70
    x364 = 3 * x188 - x289 * x7
    x365 = x278 * x70 + x364
    x366 = x283 * x7
    x367 = 3 * x200
    x368 = x366 - x367
    x369 = x0 * (-x363 + x365 + x368)
    x370 = -x366 + x367
    x371 = x363 + x370
    x372 = 3 * x205 - x299 * x7
    x373 = x283 * x70 + x372
    x374 = x310 * x70
    x375 = 2 * x223 - x310 * x7
    x376 = x301 * x70 + x375
    x377 = x305 * x7
    x378 = 2 * x234
    x379 = x377 - x378
    x380 = x0 * (-x374 + x376 + x379)
    x381 = -x377 + x378
    x382 = x374 + x381
    x383 = 2 * x238 - x320 * x7
    x384 = x305 * x70 + x383
    x385 = x331 * x70
    x386 = x257 - x331 * x7
    x387 = x322 * x70 + x386
    x388 = x326 * x7
    x389 = x270 + x388
    x390 = x0 * (-x385 + x387 + x389)
    x391 = x269 - x388
    x392 = x385 + x391
    x393 = x274 - x339 * x7
    x394 = x326 * x70 + x393
    x395 = x346 * x7
    x396 = x352 * x70
    x397 = -x352 * x7
    x398 = x341 * x70 + x397
    x399 = x0 * (x395 - x396 + x398)
    x400 = -x395
    x401 = x396 + x400
    x402 = -x362 * x7
    x403 = x346 * x70 + x402
    x404 = x121 * x352
    x405 = 3 * x257 - x352 * x9
    x406 = x121 * x341 + x405
    x407 = x346 * x9
    x408 = 3 * x269
    x409 = x407 - x408
    x410 = x0 * (-x404 + x406 + x409)
    x411 = -x407 + x408
    x412 = x404 + x411
    x413 = 3 * x274 - x362 * x9
    x414 = x121 * x346 + x413
    x415 = -x6 - A[1]
    x416 = x14 * x415
    x417 = x12 * x415
    x418 = x417 + x79
    x419 = x0 * (-x416 + x418 + x86)
    x420 = x4 * x418
    x421 = x416 + x87
    x422 = x421 * x5
    x423 = x420 - x422
    x424 = x4 * x423
    x425 = x4 * x421
    x426 = x31 * x415
    x427 = x106 + x426
    x428 = x427 * x5
    x429 = x425 - x428
    x430 = x429 * x5
    x431 = x419 + x424 - x430
    x432 = x431 * x5
    x433 = x16 * x415
    x434 = x433 + x75
    x435 = x0 * (-x417 + x434 + x72)
    x436 = x4 * x434
    x437 = x418 * x5
    x438 = x436 - x437
    x439 = x4 * x438
    x440 = x423 * x5
    x441 = x435 + x439 - x440
    x442 = x4 * x441
    x443 = x20 * (-x420 + x422 + x438)
    x444 = x39 * x415 + x94
    x445 = x4 * x444 - x434 * x5
    x446 = x0 * (-x433 + x444 + x74)
    x447 = x4 * x445 - x438 * x5 + x446
    x448 = x20 * (-x436 + x437 + x445) + x4 * x447 - x441 * x5
    x449 = -x435
    x450 = -x432 + x442 + x443
    x451 = -x419
    x452 = x0 * (x105 + x421 - x426)
    x453 = x119 + x415 * x53
    x454 = x415 * x80
    x455 = x179 + x454
    x456 = x4 * x455
    x457 = x415 * x88
    x458 = x194 + x457
    x459 = x458 * x5
    x460 = x456 - x459
    x461 = x460 * x5
    x462 = x415 * x76
    x463 = x174 + x462
    x464 = x0 * (x199 - x454 + x463)
    x465 = x4 * x463
    x466 = x455 * x5
    x467 = x465 - x466
    x468 = x4 * x467
    x469 = x184 + x415 * x95
    x470 = x0 * (x187 - x462 + x469)
    x471 = x4 * x469 - x463 * x5
    x472 = x4 * x471 - x467 * x5 + x470
    x473 = -x461 + x464 + x468
    x474 = x0 * (x204 + x455 - x457)
    x475 = x107 * x415 + x206
    x476 = x131 * x415
    x477 = x215 + x476
    x478 = x4 * x477
    x479 = x139 * x415
    x480 = x229 + x479
    x481 = x480 * x5
    x482 = x478 - x481
    x483 = x482 * x5
    x484 = x127 * x415
    x485 = x210 + x484
    x486 = x0 * (x214 - x476 + x485)
    x487 = -x486
    x488 = x4 * x485
    x489 = x477 * x5
    x490 = x488 - x489
    x491 = x4 * x490
    x492 = x146 * x415 + x220
    x493 = x0 * (x209 - x484 + x492)
    x494 = x4 * x492 - x485 * x5
    x495 = x4 * x494 - x490 * x5 + x493
    x496 = -x483 + x486 + x491
    x497 = x0 * (x228 + x477 - x479)
    x498 = x158 * x415 + x239
    x499 = x180 * x415
    x500 = x282 + x499
    x501 = x5 * x500
    x502 = x175 * x415
    x503 = x288 + x502
    x504 = x4 * x503
    x505 = x185 * x415 + x277
    x506 = x4 * x505 - x5 * x503
    x507 = x0 * (x293 - x502 + x505)
    x508 = -x501 + x504
    x509 = x0 * (x296 - x499 + x503)
    x510 = x195 * x415 + x298
    x511 = x216 * x415
    x512 = x304 + x511
    x513 = x5 * x512
    x514 = x211 * x415
    x515 = x309 + x514
    x516 = x4 * x515
    x517 = x221 * x415 + x300
    x518 = x4 * x517 - x5 * x515
    x519 = x0 * (x314 - x514 + x517)
    x520 = -x513 + x516
    x521 = x0 * (x317 - x511 + x515)
    x522 = x230 * x415 + x319
    x523 = x249 * x415
    x524 = x325 + x523
    x525 = x5 * x524
    x526 = x244 * x415
    x527 = x330 + x526
    x528 = x4 * x527
    x529 = x254 * x415 + x321
    x530 = x4 * x529 - x5 * x527
    x531 = x0 * (x329 - x526 + x529)
    x532 = -x525 + x528
    x533 = x0 * (x324 - x523 + x527)
    x534 = x264 * x415 + x338
    x535 = x289 * x415
    x536 = x278 * x415 + x364
    x537 = x0 * (x368 - x535 + x536)
    x538 = x370 + x535
    x539 = x283 * x415 + x372
    x540 = x310 * x415
    x541 = x301 * x415 + x375
    x542 = x0 * (x379 - x540 + x541)
    x543 = x381 + x540
    x544 = x305 * x415 + x383
    x545 = x331 * x415
    x546 = x322 * x415 + x386
    x547 = x0 * (x389 - x545 + x546)
    x548 = x391 + x545
    x549 = x326 * x415 + x393
    x550 = x352 * x415
    x551 = x341 * x415 + x397
    x552 = x0 * (x395 - x550 + x551)
    x553 = x400 + x550
    x554 = x346 * x415 + x402
    x555 = 4 * x294 + x365 * x415 - x371 * x7
    x556 = 4 * x297 + x371 * x415 - x373 * x7
    x557 = 3 * x315 + x376 * x415 - x382 * x7
    x558 = 3 * x318 + x382 * x415 - x384 * x7
    x559 = 2 * x335 + x387 * x415 - x392 * x7
    x560 = 2 * x337 + x392 * x415 - x394 * x7
    x561 = x357 + x398 * x415 - x401 * x7
    x562 = x360 + x401 * x415 - x403 * x7
    x563 = x406 * x415 - x412 * x7
    x564 = x412 * x415 - x414 * x7
    x565 = -x8 - A[2]
    x566 = x14 * x565
    x567 = x12 * x565
    x568 = x130 + x567
    x569 = x0 * (x137 - x566 + x568)
    x570 = x4 * x568
    x571 = x138 + x566
    x572 = x5 * x571
    x573 = x570 - x572
    x574 = x4 * x573
    x575 = x4 * x571
    x576 = x31 * x565
    x577 = x157 + x576
    x578 = x5 * x577
    x579 = x575 - x578
    x580 = x5 * x579
    x581 = x569 + x574 - x580
    x582 = x5 * x581
    x583 = x16 * x565
    x584 = x126 + x583
    x585 = x0 * (x123 - x567 + x584)
    x586 = x4 * x584
    x587 = x5 * x568
    x588 = x586 - x587
    x589 = x4 * x588
    x590 = x5 * x573
    x591 = x585 + x589 - x590
    x592 = x4 * x591
    x593 = x20 * (-x570 + x572 + x588)
    x594 = x145 + x39 * x565
    x595 = x4 * x594 - x5 * x584
    x596 = x0 * (x125 - x583 + x594)
    x597 = x4 * x595 - x5 * x588 + x596
    x598 = x20 * (-x586 + x587 + x595) + x4 * x597 - x5 * x591
    x599 = -x585
    x600 = -x582 + x592 + x593
    x601 = -x569
    x602 = x0 * (x156 + x571 - x576)
    x603 = x170 + x53 * x565
    x604 = x568 * x70
    x605 = x571 * x7
    x606 = -x605
    x607 = x604 + x606
    x608 = x4 * x607
    x609 = x571 * x70
    x610 = x577 * x7
    x611 = -x610
    x612 = x609 + x611
    x613 = x5 * x612
    x614 = x608 - x613
    x615 = x5 * x614
    x616 = x584 * x70
    x617 = x568 * x7
    x618 = -x617
    x619 = x616 + x618
    x620 = x0 * (-x604 + x605 + x619)
    x621 = x4 * x619
    x622 = x5 * x607
    x623 = x621 - x622
    x624 = x4 * x623
    x625 = -x584 * x7
    x626 = x594 * x70 + x625
    x627 = x0 * (-x616 + x617 + x626)
    x628 = x4 * x626 - x5 * x619
    x629 = x4 * x628 - x5 * x623 + x627
    x630 = -x615 + x620 + x624
    x631 = x0 * (x607 - x609 + x610)
    x632 = -x603 * x7
    x633 = x577 * x70 + x632
    x634 = x131 * x565
    x635 = x248 + x634
    x636 = x4 * x635
    x637 = x139 * x565
    x638 = x263 + x637
    x639 = x5 * x638
    x640 = x636 - x639
    x641 = x5 * x640
    x642 = x127 * x565
    x643 = x243 + x642
    x644 = x0 * (x268 - x634 + x643)
    x645 = -x644
    x646 = x4 * x643
    x647 = x5 * x635
    x648 = x646 - x647
    x649 = x4 * x648
    x650 = x146 * x565 + x253
    x651 = x0 * (x256 - x642 + x650)
    x652 = x4 * x650 - x5 * x643
    x653 = x4 * x652 - x5 * x648 + x651
    x654 = -x641 + x644 + x649
    x655 = x0 * (x273 + x635 - x637)
    x656 = x158 * x565 + x275
    x657 = x607 * x70
    x658 = x612 * x7
    x659 = x569 - x658
    x660 = x657 + x659
    x661 = x5 * x660
    x662 = x619 * x70
    x663 = x607 * x7
    x664 = x585 - x663
    x665 = x662 + x664
    x666 = x4 * x665
    x667 = x596 - x619 * x7
    x668 = x626 * x70 + x667
    x669 = x4 * x668 - x5 * x665
    x670 = x599 + x663
    x671 = x0 * (-x662 + x668 + x670)
    x672 = -x661 + x666
    x673 = x601 + x658
    x674 = x0 * (-x657 + x665 + x673)
    x675 = x602 - x633 * x7
    x676 = x612 * x70 + x675
    x677 = x635 * x70
    x678 = x638 * x7
    x679 = -x678
    x680 = x677 + x679
    x681 = x5 * x680
    x682 = x643 * x70
    x683 = x635 * x7
    x684 = -x683
    x685 = x682 + x684
    x686 = x4 * x685
    x687 = -x643 * x7
    x688 = x650 * x70 + x687
    x689 = x4 * x688 - x5 * x685
    x690 = x0 * (-x682 + x683 + x688)
    x691 = -x681 + x686
    x692 = x0 * (-x677 + x678 + x685)
    x693 = -x656 * x7
    x694 = x638 * x70 + x693
    x695 = x249 * x565
    x696 = x345 + x695
    x697 = x5 * x696
    x698 = x244 * x565
    x699 = x351 + x698
    x700 = x4 * x699
    x701 = x254 * x565 + x340
    x702 = x4 * x701 - x5 * x699
    x703 = x0 * (x356 - x698 + x701)
    x704 = -x697 + x700
    x705 = x0 * (x359 - x695 + x699)
    x706 = x264 * x565 + x361
    x707 = x665 * x70
    x708 = 2 * x627 - x665 * x7
    x709 = x668 * x70 + x708
    x710 = x660 * x7
    x711 = 2 * x620
    x712 = x710 - x711
    x713 = x0 * (-x707 + x709 + x712)
    x714 = -x710 + x711
    x715 = x707 + x714
    x716 = 2 * x631 - x676 * x7
    x717 = x660 * x70 + x716
    x718 = x685 * x70
    x719 = x651 - x685 * x7
    x720 = x688 * x70 + x719
    x721 = x680 * x7
    x722 = x645 + x721
    x723 = x0 * (-x718 + x720 + x722)
    x724 = x644 - x721
    x725 = x718 + x724
    x726 = x655 - x694 * x7
    x727 = x680 * x70 + x726
    x728 = x696 * x7
    x729 = x699 * x70
    x730 = -x699 * x7
    x731 = x70 * x701 + x730
    x732 = x0 * (x728 - x729 + x731)
    x733 = -x728
    x734 = x729 + x733
    x735 = -x7 * x706
    x736 = x696 * x70 + x735
    x737 = x352 * x565
    x738 = x341 * x565 + x405
    x739 = x0 * (x409 - x737 + x738)
    x740 = x411 + x737
    x741 = x346 * x565 + x413
    x742 = 3 * x671 - x7 * x715
    x743 = x70 * x709 + x742
    x744 = 3 * x674 - x7 * x717
    x745 = x70 * x715 + x744
    x746 = 2 * x690 - x7 * x725
    x747 = x70 * x720 + x746
    x748 = 2 * x692 - x7 * x727
    x749 = x70 * x725 + x748
    x750 = -x7 * x734 + x703
    x751 = x70 * x731 + x750
    x752 = -x7 * x736 + x705
    x753 = x70 * x734 + x752
    x754 = -x7 * x740
    x755 = x70 * x738 + x754
    x756 = -x7 * x741
    x757 = x70 * x740 + x756
    x758 = 4 * x357 + x406 * x565 - x412 * x9
    x759 = 4 * x360 + x412 * x565 - x414 * x9
    x760 = x415 * x418
    x761 = x421 * x7
    x762 = x28 + x760 - x761
    x763 = x4 * x762
    x764 = x415 * x421
    x765 = x427 * x7
    x766 = x50 + x764 - x765
    x767 = x5 * x766
    x768 = x763 - x767
    x769 = x5 * x768
    x770 = x415 * x434
    x771 = x418 * x7
    x772 = x22 + x770 - x771
    x773 = x0 * (x61 - x760 + x761 + x772)
    x774 = x4 * x772
    x775 = x5 * x762
    x776 = x774 - x775
    x777 = x4 * x776
    x778 = x41 + x415 * x444 - x434 * x7
    x779 = x4 * x778 - x5 * x772
    x780 = x0 * (x44 - x770 + x771 + x778) + x4 * x779 - x5 * x776
    x781 = -x769 + x773 + x777
    x782 = x415 * x455
    x783 = x458 * x7
    x784 = x101 + x419 + x782 - x783
    x785 = x5 * x784
    x786 = x415 * x463
    x787 = x455 * x7
    x788 = x435 + x77 + x786 - x787
    x789 = x4 * x788
    x790 = x415 * x469 + x446 - x463 * x7 + x96
    x791 = x4 * x790 - x5 * x788
    x792 = -x785 + x789
    x793 = x415 * x477
    x794 = x480 * x7
    x795 = x152 + x793 - x794
    x796 = x5 * x795
    x797 = x415 * x485
    x798 = x477 * x7
    x799 = x128 + x797 - x798
    x800 = x4 * x799
    x801 = x147 + x415 * x492 - x485 * x7
    x802 = x4 * x801 - x5 * x799
    x803 = -x796 + x800
    x804 = x500 * x7
    x805 = x415 * x503
    x806 = 2 * x464
    x807 = x188 + x415 * x505 + 2 * x470 - x503 * x7
    x808 = x200 - x804 + x805 + x806
    x809 = x512 * x7
    x810 = x415 * x515
    x811 = x223 + x415 * x517 + x493 - x515 * x7
    x812 = x234 + x486 - x809 + x810
    x813 = x524 * x7
    x814 = x415 * x527
    x815 = x257 + x415 * x529 - x527 * x7
    x816 = x269 - x813 + x814
    x817 = x415 * x568
    x818 = x606 + x817
    x819 = x4 * x818
    x820 = x415 * x571
    x821 = x611 + x820
    x822 = x5 * x821
    x823 = x819 - x822
    x824 = x5 * x823
    x825 = x415 * x584
    x826 = x618 + x825
    x827 = x0 * (x605 - x817 + x826)
    x828 = x4 * x826
    x829 = x5 * x818
    x830 = x828 - x829
    x831 = x4 * x830
    x832 = x415 * x594 + x625
    x833 = x4 * x832 - x5 * x826
    x834 = x0 * (x617 - x825 + x832) + x4 * x833 - x5 * x830
    x835 = -x824 + x827 + x831
    x836 = x415 * x607
    x837 = x659 + x836
    x838 = x5 * x837
    x839 = x415 * x619
    x840 = x664 + x839
    x841 = x4 * x840
    x842 = x415 * x626 + x667
    x843 = x4 * x842 - x5 * x840
    x844 = -x838 + x841
    x845 = x415 * x635
    x846 = x679 + x845
    x847 = x5 * x846
    x848 = x415 * x643
    x849 = x684 + x848
    x850 = x4 * x849
    x851 = x415 * x650 + x687
    x852 = x4 * x851 - x5 * x849
    x853 = -x847 + x850
    x854 = x415 * x665
    x855 = x415 * x668 + x708
    x856 = x714 + x854
    x857 = x415 * x685
    x858 = x415 * x688 + x719
    x859 = x724 + x857
    x860 = x415 * x699
    x861 = x415 * x701 + x730
    x862 = x733 + x860
    x863 = x565 * x568
    x864 = x571 * x9
    x865 = x28 + x863 - x864
    x866 = x4 * x865
    x867 = x565 * x571
    x868 = x577 * x9
    x869 = x50 + x867 - x868
    x870 = x5 * x869
    x871 = x866 - x870
    x872 = x5 * x871
    x873 = x565 * x584
    x874 = x568 * x9
    x875 = x22 + x873 - x874
    x876 = x0 * (x61 - x863 + x864 + x875)
    x877 = -x876
    x878 = x4 * x875
    x879 = x5 * x865
    x880 = x878 - x879
    x881 = x4 * x880
    x882 = x41 + x565 * x594 - x584 * x9
    x883 = x0 * (x44 - x873 + x874 + x882)
    x884 = x4 * x882 - x5 * x875
    x885 = x4 * x884 - x5 * x880 + x883
    x886 = -x872 + x876 + x881
    x887 = x0 * (x67 + x865 - x867 + x868)
    x888 = x565 * x577 - x603 * x9 + x68
    x889 = x70 * x865
    x890 = x7 * x869
    x891 = x889 - x890
    x892 = x5 * x891
    x893 = x70 * x875
    x894 = x7 * x865
    x895 = x893 - x894
    x896 = x4 * x895
    x897 = -x7 * x875 + x70 * x882
    x898 = x4 * x897 - x5 * x895
    x899 = x0 * (-x893 + x894 + x897)
    x900 = -x892 + x896
    x901 = x0 * (-x889 + x890 + x895)
    x902 = -x7 * x888 + x70 * x869
    x903 = x565 * x635
    x904 = x638 * x9
    x905 = x152 + x569 + x903 - x904
    x906 = x5 * x905
    x907 = x565 * x643
    x908 = x635 * x9
    x909 = x128 + x585 + x907 - x908
    x910 = x4 * x909
    x911 = x147 + x565 * x650 + x596 - x643 * x9
    x912 = x4 * x911 - x5 * x909
    x913 = x0 * (x166 + x599 - x907 + x908 + x911)
    x914 = -x906 + x910
    x915 = x0 * (x168 + x601 - x903 + x904 + x909)
    x916 = x169 + x565 * x638 + x602 - x656 * x9
    x917 = x7 * x891
    x918 = x70 * x895
    x919 = -x7 * x895 + x70 * x897 + x883
    x920 = x0 * (x877 + x917 - x918 + x919)
    x921 = x876 - x917 + x918
    x922 = -x7 * x902 + x70 * x891 + x887
    x923 = x7 * x905
    x924 = x70 * x909
    x925 = -x7 * x909 + x70 * x911
    x926 = x0 * (x923 - x924 + x925)
    x927 = -x923 + x924
    x928 = -x7 * x916 + x70 * x905
    x929 = x696 * x9
    x930 = x565 * x699
    x931 = 2 * x644
    x932 = x257 + x565 * x701 + 2 * x651 - x699 * x9
    x933 = x0 * (x270 + x929 - x930 - x931 + x932)
    x934 = x269 - x929 + x930 + x931
    x935 = x274 + x565 * x696 + 2 * x655 - x706 * x9
    x936 = -x7 * x921 + x70 * x919 + 2 * x899
    x937 = -x7 * x922 + x70 * x921 + 2 * x901
    x938 = -x7 * x927 + x70 * x925 + x913
    x939 = -x7 * x928 + x70 * x927 + x915
    x940 = -x7 * x934 + x70 * x932
    x941 = -x7 * x935 + x70 * x934
    x942 = x357 + x565 * x738 + 3 * x703 - x740 * x9
    x943 = x360 + x565 * x740 + 3 * x705 - x741 * x9

    # 90 item(s)
    return numpy.array(
        [
            x0 * (-x38 + x47 + x63)
            - x5
            * (
                -x5
                * (
                    x4 * x59
                    + x45 * (x35 - x51 + x56 + x67)
                    - x5
                    * (
                        x20 * (x33 - x52 + x54)
                        + x4 * x57
                        - x5 * (x4 * x55 - x5 * (x4 * x53 - x5 * x69) + x68)
                    )
                )
                + x64 * x66
                + x65 * (x37 - x48 - x49 + x58)
            )
            + x64 * (x47 * x64 - x5 * x66 + x65 * (-x21 - x27 + x36 + x43))
            + x65 * (-x37 * x64 + x43 * x64 + x46 + x63),
            x0 * (x100 + x114 - x93)
            + x45 * (x114 - x64 * x92 + x64 * x98 + x99)
            - x5
            * (
                x116 * x64
                + x45 * (-x102 + x110 + x117 + x92)
                - x5
                * (
                    x111 * x4
                    + x20 * (-x103 + x108 + x90)
                    - x5 * (x109 * x4 + x118 - x5 * (x107 * x4 - x120 * x5))
                )
            )
            + x64 * (x100 * x64 - x116 * x5 + x45 * (x115 - x83 + x91 + x98)),
            x0 * (-x144 + x151 + x165)
            + x45 * (-x143 * x64 + x149 * x64 + x150 + x165)
            - x5
            * (
                x167 * x64
                + x45 * (x143 - x153 + x161 + x168)
                - x5
                * (
                    x162 * x4
                    + x20 * (x141 - x154 + x159)
                    - x5 * (x160 * x4 + x169 - x5 * (x158 * x4 - x171 * x5))
                )
            )
            + x64 * (x151 * x64 - x167 * x5 + x45 * (-x134 + x142 + x149 + x166)),
            x0 * (-x183 + x190 + x202)
            + x20 * (-x182 * x64 + x186 * x64 + x189 + x202)
            - x5
            * (
                x20 * (x182 - x191 + x196)
                + x203 * x64
                - x5 * (x197 * x4 + x205 - x5 * (x195 * x4 - x207 * x5))
            )
            + x64 * (x190 * x64 + x20 * (-x176 + x181 + x186) - x203 * x5),
            x0 * (-x219 + x225 + x236)
            + x20 * (-x218 * x64 + x222 * x64 + x224 + x236)
            - x5
            * (
                x20 * (x218 - x226 + x231)
                + x237 * x64
                - x5 * (x232 * x4 + x238 - x5 * (x230 * x4 - x240 * x5))
            )
            + x64 * (x20 * (-x212 + x217 + x222) + x225 * x64 - x237 * x5),
            x0 * (-x252 + x259 + x271)
            + x20 * (-x251 * x64 + x255 * x64 + x258 + x271)
            - x5
            * (
                x20 * (x251 - x260 + x265)
                + x272 * x64
                - x5 * (x266 * x4 + x274 - x5 * (x264 * x4 - x276 * x5))
            )
            + x64 * (x20 * (-x245 + x250 + x255) + x259 * x64 - x272 * x5),
            x0 * (x284 - x291 + x292)
            + x0 * (x278 * x64 + x284 - x289 * x64 + x290)
            - x5 * (x295 * x64 + x297 - x5 * (x283 * x4 - x299 * x5))
            + x64 * (x292 * x64 + x294 - x295 * x5),
            x0 * (x306 - x312 + x313)
            + x0 * (x301 * x64 + x306 - x310 * x64 + x311)
            - x5 * (x316 * x64 + x318 - x5 * (x305 * x4 - x320 * x5))
            + x64 * (x313 * x64 + x315 - x316 * x5),
            x0 * (x327 - x333 + x334)
            + x0 * (x322 * x64 + x327 - x331 * x64 + x332)
            - x5 * (x336 * x64 + x337 - x5 * (x326 * x4 - x339 * x5))
            + x64 * (x334 * x64 + x335 - x336 * x5),
            x0 * (x347 - x354 + x355)
            + x0 * (x341 * x64 + x347 - x352 * x64 + x353)
            - x5 * (x358 * x64 + x360 - x5 * (x346 * x4 - x362 * x5))
            + x64 * (x355 * x64 + x357 - x358 * x5),
            x369 - x5 * (x371 * x64 - x373 * x5) + x64 * (x365 * x64 - x371 * x5),
            x380 - x5 * (x382 * x64 - x384 * x5) + x64 * (x376 * x64 - x382 * x5),
            x390 - x5 * (x392 * x64 - x394 * x5) + x64 * (x387 * x64 - x392 * x5),
            x399 - x5 * (x401 * x64 - x403 * x5) + x64 * (x398 * x64 - x401 * x5),
            x410 - x5 * (x412 * x64 - x414 * x5) + x64 * (x406 * x64 - x412 * x5),
            -x5
            * (
                x4 * x450
                + x45 * (-x424 + x430 + x441 + x451)
                - x5
                * (
                    x20 * (x423 - x425 + x428)
                    + x4 * x431
                    - x5 * (x4 * x429 + x452 - x5 * (x4 * x427 - x453 * x5))
                )
            )
            + x64 * (x4 * x448 + x45 * (-x439 + x440 + x447 + x449) - x450 * x5)
            + x65 * (x432 - x442 - x443 + x448),
            x45 * (x461 - x464 - x468 + x472)
            - x5
            * (
                x20 * (-x456 + x459 + x467)
                + x4 * x473
                - x5 * (x4 * x460 + x474 - x5 * (x4 * x458 - x475 * x5))
            )
            + x64 * (x20 * (-x465 + x466 + x471) + x4 * x472 - x473 * x5),
            x45 * (x483 + x487 - x491 + x495)
            - x5
            * (
                x20 * (-x478 + x481 + x490)
                + x4 * x496
                - x5 * (x4 * x482 + x497 - x5 * (x4 * x480 - x498 * x5))
            )
            + x64 * (x20 * (-x488 + x489 + x494) + x4 * x495 - x496 * x5),
            x20 * (x501 - x504 + x506)
            - x5 * (x4 * x508 - x5 * (x4 * x500 - x5 * x510) + x509)
            + x64 * (x4 * x506 - x5 * x508 + x507),
            x20 * (x513 - x516 + x518)
            - x5 * (x4 * x520 - x5 * (x4 * x512 - x5 * x522) + x521)
            + x64 * (x4 * x518 - x5 * x520 + x519),
            x20 * (x525 - x528 + x530)
            - x5 * (x4 * x532 - x5 * (x4 * x524 - x5 * x534) + x533)
            + x64 * (x4 * x530 - x5 * x532 + x531),
            -x5 * (x4 * x538 - x5 * x539) + x537 + x64 * (x4 * x536 - x5 * x538),
            -x5 * (x4 * x543 - x5 * x544) + x542 + x64 * (x4 * x541 - x5 * x543),
            -x5 * (x4 * x548 - x5 * x549) + x547 + x64 * (x4 * x546 - x5 * x548),
            -x5 * (x4 * x553 - x5 * x554) + x552 + x64 * (x4 * x551 - x5 * x553),
            -x5 * x556 + x555 * x64,
            -x5 * x558 + x557 * x64,
            -x5 * x560 + x559 * x64,
            -x5 * x562 + x561 * x64,
            -x5 * x564 + x563 * x64,
            -x5
            * (
                x4 * x600
                + x45 * (-x574 + x580 + x591 + x601)
                - x5
                * (
                    x20 * (x573 - x575 + x578)
                    + x4 * x581
                    - x5 * (x4 * x579 - x5 * (x4 * x577 - x5 * x603) + x602)
                )
            )
            + x64 * (x4 * x598 + x45 * (-x589 + x590 + x597 + x599) - x5 * x600)
            + x65 * (x582 - x592 - x593 + x598),
            x45 * (x615 - x620 - x624 + x629)
            - x5
            * (
                x20 * (-x608 + x613 + x623)
                + x4 * x630
                - x5 * (x4 * x614 - x5 * (x4 * x612 - x5 * x633) + x631)
            )
            + x64 * (x20 * (-x621 + x622 + x628) + x4 * x629 - x5 * x630),
            x45 * (x641 + x645 - x649 + x653)
            - x5
            * (
                x20 * (-x636 + x639 + x648)
                + x4 * x654
                - x5 * (x4 * x640 - x5 * (x4 * x638 - x5 * x656) + x655)
            )
            + x64 * (x20 * (-x646 + x647 + x652) + x4 * x653 - x5 * x654),
            x20 * (x661 - x666 + x669)
            - x5 * (x4 * x672 - x5 * (x4 * x660 - x5 * x676) + x674)
            + x64 * (x4 * x669 - x5 * x672 + x671),
            x20 * (x681 - x686 + x689)
            - x5 * (x4 * x691 - x5 * (x4 * x680 - x5 * x694) + x692)
            + x64 * (x4 * x689 - x5 * x691 + x690),
            x20 * (x697 - x700 + x702)
            - x5 * (x4 * x704 - x5 * (x4 * x696 - x5 * x706) + x705)
            + x64 * (x4 * x702 - x5 * x704 + x703),
            -x5 * (x4 * x715 - x5 * x717) + x64 * (x4 * x709 - x5 * x715) + x713,
            -x5 * (x4 * x725 - x5 * x727) + x64 * (x4 * x720 - x5 * x725) + x723,
            -x5 * (x4 * x734 - x5 * x736) + x64 * (x4 * x731 - x5 * x734) + x732,
            -x5 * (x4 * x740 - x5 * x741) + x64 * (x4 * x738 - x5 * x740) + x739,
            -x5 * x745 + x64 * x743,
            -x5 * x749 + x64 * x747,
            -x5 * x753 + x64 * x751,
            -x5 * x757 + x64 * x755,
            -x5 * x759 + x64 * x758,
            x4 * (x20 * (-x774 + x775 + x779) + x4 * x780 - x5 * x781)
            + x45 * (x769 - x773 - x777 + x780)
            - x5
            * (
                x20 * (-x763 + x767 + x776)
                + x4 * x781
                - x5
                * (
                    x0 * (x67 + x762 - x764 + x765)
                    + x4 * x768
                    - x5 * (x4 * x766 - x5 * (x415 * x427 - x453 * x7 + x68))
                )
            ),
            x20 * (x785 - x789 + x791)
            + x4 * (x0 * (x115 + x449 - x786 + x787 + x790) + x4 * x791 - x5 * x792)
            - x5
            * (
                x0 * (x117 + x451 - x782 + x783 + x788)
                + x4 * x792
                - x5 * (x4 * x784 - x5 * (x118 + x415 * x458 + x452 - x475 * x7))
            ),
            x20 * (x796 - x800 + x802)
            + x4 * (x0 * (x166 - x797 + x798 + x801) + x4 * x802 - x5 * x803)
            - x5
            * (
                x0 * (x168 - x793 + x794 + x799)
                + x4 * x803
                - x5 * (x4 * x795 - x5 * (x169 + x415 * x480 - x498 * x7))
            ),
            x0 * (x201 + x804 - x805 - x806 + x807)
            + x4 * (x4 * x807 - x5 * x808)
            - x5 * (x4 * x808 - x5 * (x205 + x415 * x500 + 2 * x474 - x510 * x7)),
            x0 * (x235 + x487 + x809 - x810 + x811)
            + x4 * (x4 * x811 - x5 * x812)
            - x5 * (x4 * x812 - x5 * (x238 + x415 * x512 + x497 - x522 * x7)),
            x0 * (x270 + x813 - x814 + x815)
            + x4 * (x4 * x815 - x5 * x816)
            - x5 * (x4 * x816 - x5 * (x274 + x415 * x524 - x534 * x7)),
            x4 * (x294 + x415 * x536 + 3 * x507 - x538 * x7)
            - x5 * (x297 + x415 * x538 + 3 * x509 - x539 * x7),
            x4 * (x315 + x415 * x541 + 2 * x519 - x543 * x7)
            - x5 * (x318 + x415 * x543 + 2 * x521 - x544 * x7),
            x4 * (x335 + x415 * x546 + x531 - x548 * x7)
            - x5 * (x337 + x415 * x548 + x533 - x549 * x7),
            x4 * (x357 + x415 * x551 - x553 * x7) - x5 * (x360 + x415 * x553 - x554 * x7),
            x369 + x415 * x555 + 4 * x537 - x556 * x7,
            x380 + x415 * x557 + 3 * x542 - x558 * x7,
            x390 + x415 * x559 + 2 * x547 - x560 * x7,
            x399 + x415 * x561 + x552 - x562 * x7,
            x410 + x415 * x563 - x564 * x7,
            x4 * (x20 * (-x828 + x829 + x833) + x4 * x834 - x5 * x835)
            + x45 * (x824 - x827 - x831 + x834)
            - x5
            * (
                x20 * (-x819 + x822 + x830)
                + x4 * x835
                - x5
                * (
                    x0 * (x610 + x818 - x820)
                    + x4 * x823
                    - x5 * (x4 * x821 - x5 * (x415 * x577 + x632))
                )
            ),
            x20 * (x838 - x841 + x843)
            + x4 * (x0 * (x670 - x839 + x842) + x4 * x843 - x5 * x844)
            - x5
            * (
                x0 * (x673 - x836 + x840)
                + x4 * x844
                - x5 * (x4 * x837 - x5 * (x415 * x612 + x675))
            ),
            x20 * (x847 - x850 + x852)
            + x4 * (x0 * (x683 - x848 + x851) + x4 * x852 - x5 * x853)
            - x5
            * (
                x0 * (x678 - x845 + x849)
                + x4 * x853
                - x5 * (x4 * x846 - x5 * (x415 * x638 + x693))
            ),
            x0 * (x712 - x854 + x855)
            + x4 * (x4 * x855 - x5 * x856)
            - x5 * (x4 * x856 - x5 * (x415 * x660 + x716)),
            x0 * (x722 - x857 + x858)
            + x4 * (x4 * x858 - x5 * x859)
            - x5 * (x4 * x859 - x5 * (x415 * x680 + x726)),
            x0 * (x728 - x860 + x861)
            + x4 * (x4 * x861 - x5 * x862)
            - x5 * (x4 * x862 - x5 * (x415 * x696 + x735)),
            x4 * (x415 * x709 + x742) - x5 * (x415 * x715 + x744),
            x4 * (x415 * x720 + x746) - x5 * (x415 * x725 + x748),
            x4 * (x415 * x731 + x750) - x5 * (x415 * x734 + x752),
            x4 * (x415 * x738 + x754) - x5 * (x415 * x740 + x756),
            x415 * x743 - x7 * x745 + 4 * x713,
            x415 * x747 - x7 * x749 + 3 * x723,
            x415 * x751 - x7 * x753 + 2 * x732,
            x415 * x755 - x7 * x757 + x739,
            x415 * x758 - x7 * x759,
            x4 * (x20 * (-x878 + x879 + x884) + x4 * x885 - x5 * x886)
            + x45 * (x872 + x877 - x881 + x885)
            - x5
            * (
                x20 * (-x866 + x870 + x880)
                + x4 * x886
                - x5 * (x4 * x871 - x5 * (x4 * x869 - x5 * x888) + x887)
            ),
            x20 * (x892 - x896 + x898)
            + x4 * (x4 * x898 - x5 * x900 + x899)
            - x5 * (x4 * x900 - x5 * (x4 * x891 - x5 * x902) + x901),
            x20 * (x906 - x910 + x912)
            + x4 * (x4 * x912 - x5 * x914 + x913)
            - x5 * (x4 * x914 - x5 * (x4 * x905 - x5 * x916) + x915),
            x4 * (x4 * x919 - x5 * x921) - x5 * (x4 * x921 - x5 * x922) + x920,
            x4 * (x4 * x925 - x5 * x927) - x5 * (x4 * x927 - x5 * x928) + x926,
            x4 * (x4 * x932 - x5 * x934) - x5 * (x4 * x934 - x5 * x935) + x933,
            x4 * x936 - x5 * x937,
            x4 * x938 - x5 * x939,
            x4 * x940 - x5 * x941,
            x4 * x942 - x5 * x943,
            -x7 * x937 + x70 * x936 + 3 * x920,
            -x7 * x939 + x70 * x938 + 2 * x926,
            -x7 * x941 + x70 * x940 + x933,
            -x7 * x943 + x70 * x942,
            x410 + x565 * x758 + 4 * x739 - x759 * x9,
        ]
    )


def coulomb3d_30(a, A, b, B, C):
    """Cartesian (fs) 1-electron Coulomb integral.

    Generated code; DO NOT modify by hand!"""

    x0 = (2 * a + 2 * b) ** (-1.0)
    x1 = a + b
    x2 = x1 ** (-1.0)
    x3 = -x2 * (a * A[0] + b * B[0])
    x4 = -x3 - A[0]
    x5 = -x3 - C[0]
    x6 = -x2 * (a * A[1] + b * B[1])
    x7 = -x6 - C[1]
    x8 = -x2 * (a * A[2] + b * B[2])
    x9 = -x8 - C[2]
    x10 = x1 * (x5 ** 2 + x7 ** 2 + x9 ** 2)
    x11 = (
        2
        * numpy.pi
        * x2
        * numpy.exp(
            -a * b * x2 * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2)
        )
    )
    x12 = x11 * boys(1, x10)
    x13 = x12 * x4
    x14 = x11 * boys(2, x10)
    x15 = x14 * x5
    x16 = x11 * boys(0, x10)
    x17 = -x12 * x5 + x16 * x4
    x18 = x0 * (-x12 + x16)
    x19 = x13 - x15
    x20 = x0 * (x12 - x14)
    x21 = x11 * boys(3, x10)
    x22 = -x6 - A[1]
    x23 = x12 * x22
    x24 = x14 * x7
    x25 = -x12 * x7 + x16 * x22
    x26 = x0 * (-x23 + x24 + x25)
    x27 = x23 - x24
    x28 = x14 * x22 - x21 * x7
    x29 = -x8 - A[2]
    x30 = x12 * x29
    x31 = x14 * x9
    x32 = -x12 * x9 + x16 * x29
    x33 = x0 * (-x30 + x31 + x32)
    x34 = x30 - x31
    x35 = x14 * x29 - x21 * x9
    x36 = x18 + x22 * x25 - x27 * x7
    x37 = x20 + x22 * x27 - x28 * x7
    x38 = x22 * x32 - x34 * x7
    x39 = x22 * x34 - x35 * x7
    x40 = x18 + x29 * x32 - x34 * x9
    x41 = x20 + x29 * x34 - x35 * x9

    # 10 item(s)
    return numpy.array(
        [
            2 * x0 * (-x13 + x15 + x17)
            + x4 * (x17 * x4 + x18 - x19 * x5)
            - x5 * (x19 * x4 + x20 - x5 * (x14 * x4 - x21 * x5)),
            x26 + x4 * (x25 * x4 - x27 * x5) - x5 * (x27 * x4 - x28 * x5),
            x33 + x4 * (x32 * x4 - x34 * x5) - x5 * (x34 * x4 - x35 * x5),
            x36 * x4 - x37 * x5,
            x38 * x4 - x39 * x5,
            x4 * x40 - x41 * x5,
            x22 * x36 + 2 * x26 - x37 * x7,
            x22 * x38 + x33 - x39 * x7,
            x22 * x40 - x41 * x7,
            x29 * x40 + 2 * x33 - x41 * x9,
        ]
    )


def coulomb3d_31(a, A, b, B, C):
    """Cartesian (fp) 1-electron Coulomb integral.

    Generated code; DO NOT modify by hand!"""

    x0 = (2 * a + 2 * b) ** (-1.0)
    x1 = a + b
    x2 = x1 ** (-1.0)
    x3 = -x2 * (a * A[0] + b * B[0])
    x4 = -x3 - C[0]
    x5 = -x2 * (a * A[1] + b * B[1])
    x6 = -x5 - C[1]
    x7 = -x2 * (a * A[2] + b * B[2])
    x8 = -x7 - C[2]
    x9 = x1 * (x4 ** 2 + x6 ** 2 + x8 ** 2)
    x10 = (
        2
        * numpy.pi
        * x2
        * numpy.exp(
            -a * b * x2 * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2)
        )
    )
    x11 = x10 * boys(0, x9)
    x12 = x10 * boys(1, x9)
    x13 = x0 * (x11 - x12)
    x14 = x10 * boys(2, x9)
    x15 = x0 * (x12 - x14)
    x16 = -x15
    x17 = -x3 - A[0]
    x18 = -x12 * x4
    x19 = x11 * x17 + x18
    x20 = x14 * x17
    x21 = x10 * boys(3, x9)
    x22 = x21 * x4
    x23 = -x22
    x24 = x12 * x17
    x25 = x14 * x4
    x26 = -x25
    x27 = x24 + x26
    x28 = -x3 - B[0]
    x29 = x14 * x28
    x30 = x23 + x29
    x31 = x30 * x4
    x32 = x12 * x28
    x33 = x26 + x32
    x34 = x17 * x33
    x35 = x11 * x28 + x18
    x36 = x13 + x17 * x35 - x33 * x4
    x37 = 2 * x0
    x38 = x15 - x31 + x34
    x39 = x0 * (x14 - x21)
    x40 = x10 * boys(4, x9)
    x41 = -x5 - B[1]
    x42 = x14 * x41
    x43 = x21 * x6
    x44 = -x43
    x45 = x42 + x44
    x46 = x4 * x45
    x47 = x12 * x41
    x48 = x14 * x6
    x49 = -x48
    x50 = x47 + x49
    x51 = x17 * x50
    x52 = -x12 * x6
    x53 = x11 * x41 + x52
    x54 = x17 * x53 - x4 * x50
    x55 = x0 * (-x47 + x48 + x53)
    x56 = -x46 + x51
    x57 = x0 * (-x42 + x43 + x50)
    x58 = -x40 * x6
    x59 = x21 * x41 + x58
    x60 = -x7 - B[2]
    x61 = x14 * x60
    x62 = x21 * x8
    x63 = -x62
    x64 = x61 + x63
    x65 = x4 * x64
    x66 = x12 * x60
    x67 = x14 * x8
    x68 = -x67
    x69 = x66 + x68
    x70 = x17 * x69
    x71 = -x12 * x8
    x72 = x11 * x60 + x71
    x73 = x17 * x72 - x4 * x69
    x74 = x0 * (-x66 + x67 + x72)
    x75 = -x65 + x70
    x76 = x0 * (-x61 + x62 + x69)
    x77 = -x40 * x8
    x78 = x21 * x60 + x77
    x79 = -x5 - A[1]
    x80 = x11 * x79 + x52
    x81 = x14 * x79
    x82 = x44 + x81
    x83 = x4 * x82
    x84 = x12 * x79
    x85 = x49 + x84
    x86 = -x4 * x85
    x87 = x28 * x85
    x88 = x28 * x80 + x86
    x89 = x0 * (x48 + x80 - x84)
    x90 = -x83 + x87
    x91 = x0 * (x43 - x81 + x85)
    x92 = x21 * x79 + x58
    x93 = x45 * x6
    x94 = x50 * x79
    x95 = x13 - x50 * x6 + x53 * x79
    x96 = x0 * (x16 + x93 - x94 + x95)
    x97 = x15 - x93 + x94
    x98 = x39 + x45 * x79 - x59 * x6
    x99 = x6 * x64
    x100 = x69 * x79
    x101 = -x6 * x69 + x72 * x79
    x102 = x0 * (-x100 + x101 + x99)
    x103 = x100 - x99
    x104 = -x6 * x78 + x64 * x79
    x105 = -x7 - A[2]
    x106 = x105 * x11 + x71
    x107 = x105 * x14
    x108 = x107 + x63
    x109 = x108 * x4
    x110 = x105 * x12
    x111 = x110 + x68
    x112 = -x111 * x4
    x113 = x111 * x28
    x114 = x106 * x28 + x112
    x115 = x0 * (x106 - x110 + x67)
    x116 = -x109 + x113
    x117 = x0 * (-x107 + x111 + x62)
    x118 = x105 * x21 + x77
    x119 = x108 * x6
    x120 = x111 * x41
    x121 = -x111 * x6
    x122 = x106 * x41 + x121
    x123 = x0 * (x119 - x120 + x122)
    x124 = -x119
    x125 = x120 + x124
    x126 = -x118 * x6
    x127 = x108 * x41 + x126
    x128 = x64 * x8
    x129 = x105 * x69
    x130 = x105 * x72 + x13 - x69 * x8
    x131 = x0 * (x128 - x129 + x130 + x16)
    x132 = -x128 + x129 + x15
    x133 = x105 * x64 + x39 - x78 * x8
    x134 = x6 * x82
    x135 = x79 * x85
    x136 = x13 - x6 * x85 + x79 * x80
    x137 = x0 * (x134 - x135 + x136 + x16)
    x138 = -x134 + x135 + x15
    x139 = x39 - x6 * x92 + x79 * x82
    x140 = x55 - x6 * x97 + x79 * x95 + x89
    x141 = x57 - x6 * x98 + x79 * x97 + x91
    x142 = x101 * x79 - x103 * x6 + x74
    x143 = x103 * x79 - x104 * x6 + x76
    x144 = x111 * x79
    x145 = x106 * x79 + x121
    x146 = x0 * (x119 - x144 + x145)
    x147 = x124 + x144
    x148 = x108 * x79 + x126
    x149 = x115 + x122 * x79 - x125 * x6
    x150 = x117 + x125 * x79 - x127 * x6
    x151 = x130 * x79 - x132 * x6
    x152 = x132 * x79 - x133 * x6
    x153 = x108 * x8
    x154 = x105 * x111
    x155 = x105 * x106 - x111 * x8 + x13
    x156 = x0 * (x153 - x154 + x155 + x16)
    x157 = x15 - x153 + x154
    x158 = x105 * x108 - x118 * x8 + x39
    x159 = -x157 * x6
    x160 = x155 * x41 + x159
    x161 = -x158 * x6
    x162 = x157 * x41 + x161
    x163 = x105 * x130 + x115 - x132 * x8 + x74
    x164 = x105 * x132 + x117 - x133 * x8 + x76
    x165 = x105 * x155 + 2 * x115 - x157 * x8
    x166 = x105 * x157 + 2 * x117 - x158 * x8

    # 30 item(s)
    return numpy.array(
        [
            x0 * (x13 + x16 + x17 * x19 - x17 * x27 - x27 * x4 + x4 * (x20 + x23))
            + x17
            * (x0 * (x19 - x24 + x25) + x0 * (x25 - x32 + x35) + x17 * x36 - x38 * x4)
            + x37 * (x16 + x31 - x34 + x36)
            - x4
            * (
                x0 * (-x20 + x22 + x27)
                + x0 * (x22 - x29 + x33)
                + x17 * x38
                - x4 * (x17 * x30 + x39 - x4 * (x21 * x28 - x4 * x40))
            ),
            x17 * (x17 * x54 - x4 * x56 + x55)
            + x37 * (x46 - x51 + x54)
            - x4 * (x17 * x56 - x4 * (x17 * x45 - x4 * x59) + x57),
            x17 * (x17 * x73 - x4 * x75 + x74)
            + x37 * (x65 - x70 + x73)
            - x4 * (x17 * x75 - x4 * (x17 * x64 - x4 * x78) + x76),
            x0 * (x83 - x87 + x88)
            + x0 * (x17 * x80 - x17 * x85 + x83 + x86)
            + x17 * (x17 * x88 - x4 * x90 + x89)
            - x4 * (x17 * x90 - x4 * (x28 * x82 - x4 * x92) + x91),
            x17 * (x17 * x95 - x4 * x97) - x4 * (x17 * x97 - x4 * x98) + x96,
            x102 + x17 * (x101 * x17 - x103 * x4) - x4 * (x103 * x17 - x104 * x4),
            x0 * (x109 - x113 + x114)
            + x0 * (x106 * x17 + x109 - x111 * x17 + x112)
            + x17 * (x114 * x17 + x115 - x116 * x4)
            - x4 * (x116 * x17 + x117 - x4 * (x108 * x28 - x118 * x4)),
            x123 + x17 * (x122 * x17 - x125 * x4) - x4 * (x125 * x17 - x127 * x4),
            x131 + x17 * (x130 * x17 - x132 * x4) - x4 * (x132 * x17 - x133 * x4),
            x137 + x17 * (x136 * x28 - x138 * x4) - x4 * (x138 * x28 - x139 * x4),
            x140 * x17 - x141 * x4,
            x142 * x17 - x143 * x4,
            x146 + x17 * (x145 * x28 - x147 * x4) - x4 * (x147 * x28 - x148 * x4),
            x149 * x17 - x150 * x4,
            x151 * x17 - x152 * x4,
            x156 + x17 * (x155 * x28 - x157 * x4) - x4 * (x157 * x28 - x158 * x4),
            x160 * x17 - x162 * x4,
            x163 * x17 - x164 * x4,
            x28 * (x136 * x79 - x138 * x6 + 2 * x89)
            - x4 * (x138 * x79 - x139 * x6 + 2 * x91),
            x137 + x140 * x79 - x141 * x6 + 2 * x96,
            2 * x102 + x142 * x79 - x143 * x6,
            x28 * (x115 + x145 * x79 - x147 * x6) - x4 * (x117 + x147 * x79 - x148 * x6),
            x123 + x146 + x149 * x79 - x150 * x6,
            x131 + x151 * x79 - x152 * x6,
            x28 * (x155 * x79 + x159) - x4 * (x157 * x79 + x161),
            x156 + x160 * x79 - x162 * x6,
            x163 * x79 - x164 * x6,
            x165 * x28 - x166 * x4,
            x165 * x41 - x166 * x6,
            x105 * x163 + 2 * x131 + x156 - x164 * x8,
        ]
    )


def coulomb3d_32(a, A, b, B, C):
    """Cartesian (fd) 1-electron Coulomb integral.

    Generated code; DO NOT modify by hand!"""

    x0 = a + b
    x1 = x0 ** (-1.0)
    x2 = -x1 * (a * A[0] + b * B[0])
    x3 = -x2 - C[0]
    x4 = -x2 - B[0]
    x5 = -x1 * (a * A[1] + b * B[1])
    x6 = -x5 - C[1]
    x7 = -x1 * (a * A[2] + b * B[2])
    x8 = -x7 - C[2]
    x9 = x0 * (x3 ** 2 + x6 ** 2 + x8 ** 2)
    x10 = (
        2
        * numpy.pi
        * x1
        * numpy.exp(
            -a * b * x1 * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2)
        )
    )
    x11 = x10 * boys(2, x9)
    x12 = x11 * x4
    x13 = x10 * boys(3, x9)
    x14 = x13 * x3
    x15 = x12 - x14
    x16 = x15 * x4
    x17 = (2 * a + 2 * b) ** (-1.0)
    x18 = x17 * (x11 - x13)
    x19 = x13 * x4
    x20 = x10 * boys(4, x9)
    x21 = x20 * x3
    x22 = x19 - x21
    x23 = x22 * x3
    x24 = x18 - x23
    x25 = x16 + x24
    x26 = x25 * x3
    x27 = -x2 - A[0]
    x28 = x10 * boys(1, x9)
    x29 = x28 * x4
    x30 = x11 * x3
    x31 = -x30
    x32 = x29 + x31
    x33 = x32 * x4
    x34 = x17 * (-x11 + x28)
    x35 = x15 * x3
    x36 = x34 - x35
    x37 = x33 + x36
    x38 = x27 * x37
    x39 = x17 * (-x12 + x14 + x32)
    x40 = 2 * x39
    x41 = x10 * boys(0, x9)
    x42 = -x28 * x3
    x43 = x4 * x41 + x42
    x44 = x17 * (-x29 + x30 + x43)
    x45 = x17 * (-x28 + x41)
    x46 = -x3 * x32 + x45
    x47 = x4 * x43 + x46
    x48 = x27 * x47 - x3 * x37 + 2 * x44
    x49 = 2 * x17
    x50 = x27 * x28
    x51 = x27 * x43 + x46
    x52 = x15 * x27
    x53 = x27 * x32
    x54 = x36 + x53
    x55 = -x34
    x56 = x35 + x55
    x57 = -x26 + x38 + x40
    x58 = -x18
    x59 = x23 + x58
    x60 = x17 * (x13 - x20)
    x61 = x10 * boys(5, x9)
    x62 = -x5 - B[1]
    x63 = x28 * x62
    x64 = x11 * x6
    x65 = -x28 * x6
    x66 = x41 * x62 + x65
    x67 = x17 * (-x63 + x64 + x66)
    x68 = x11 * x62
    x69 = x13 * x6
    x70 = -x64
    x71 = x63 + x70
    x72 = x17 * (-x68 + x69 + x71)
    x73 = -x72
    x74 = -x3 * x71
    x75 = x27 * x66 + x74
    x76 = -x69
    x77 = x68 + x76
    x78 = x27 * x77
    x79 = x13 * x62
    x80 = x20 * x6
    x81 = -x80
    x82 = x79 + x81
    x83 = x3 * x82
    x84 = -x83
    x85 = x27 * x71
    x86 = x3 * x77
    x87 = -x86
    x88 = x85 + x87
    x89 = x4 * x77
    x90 = x84 + x89
    x91 = x3 * x90
    x92 = x4 * x71
    x93 = x87 + x92
    x94 = x27 * x93
    x95 = x4 * x66 + x74
    x96 = x27 * x95 - x3 * x93 + x67
    x97 = x72 - x91 + x94
    x98 = x17 * (x77 - x79 + x80)
    x99 = -x6 * x61
    x100 = x20 * x62 + x99
    x101 = -x7 - B[2]
    x102 = x101 * x28
    x103 = x11 * x8
    x104 = -x28 * x8
    x105 = x101 * x41 + x104
    x106 = x17 * (-x102 + x103 + x105)
    x107 = x101 * x11
    x108 = x13 * x8
    x109 = -x103
    x110 = x102 + x109
    x111 = x17 * (-x107 + x108 + x110)
    x112 = -x111
    x113 = -x110 * x3
    x114 = x105 * x27 + x113
    x115 = -x108
    x116 = x107 + x115
    x117 = x116 * x27
    x118 = x101 * x13
    x119 = x20 * x8
    x120 = -x119
    x121 = x118 + x120
    x122 = x121 * x3
    x123 = -x122
    x124 = x110 * x27
    x125 = x116 * x3
    x126 = -x125
    x127 = x124 + x126
    x128 = x116 * x4
    x129 = x123 + x128
    x130 = x129 * x3
    x131 = x110 * x4
    x132 = x126 + x131
    x133 = x132 * x27
    x134 = x105 * x4 + x113
    x135 = x106 - x132 * x3 + x134 * x27
    x136 = x111 - x130 + x133
    x137 = x17 * (x116 - x118 + x119)
    x138 = -x61 * x8
    x139 = x101 * x20 + x138
    x140 = x62 * x77
    x141 = x6 * x82
    x142 = -x141 + x18
    x143 = x140 + x142
    x144 = x143 * x3
    x145 = x62 * x71
    x146 = x6 * x77
    x147 = -x146 + x34
    x148 = x145 + x147
    x149 = x148 * x27
    x150 = x45 - x6 * x71
    x151 = x150 + x62 * x66
    x152 = -x148 * x3 + x151 * x27
    x153 = x146 + x55
    x154 = x17 * (-x145 + x151 + x153)
    x155 = -x144 + x149
    x156 = x141 + x58
    x157 = x17 * (-x140 + x148 + x156)
    x158 = -x100 * x6 + x60
    x159 = x158 + x62 * x82
    x160 = x116 * x62
    x161 = x121 * x6
    x162 = -x161
    x163 = x160 + x162
    x164 = x163 * x3
    x165 = x110 * x62
    x166 = x116 * x6
    x167 = -x166
    x168 = x165 + x167
    x169 = x168 * x27
    x170 = -x110 * x6
    x171 = x105 * x62 + x170
    x172 = -x168 * x3 + x171 * x27
    x173 = x17 * (-x165 + x166 + x171)
    x174 = -x164 + x169
    x175 = x17 * (-x160 + x161 + x168)
    x176 = -x139 * x6
    x177 = x121 * x62 + x176
    x178 = x101 * x116
    x179 = x121 * x8
    x180 = -x179 + x18
    x181 = x178 + x180
    x182 = x181 * x3
    x183 = x101 * x110
    x184 = x116 * x8
    x185 = -x184 + x34
    x186 = x183 + x185
    x187 = x186 * x27
    x188 = -x110 * x8 + x45
    x189 = x101 * x105 + x188
    x190 = -x186 * x3 + x189 * x27
    x191 = x184 + x55
    x192 = x17 * (-x183 + x189 + x191)
    x193 = -x182 + x187
    x194 = x179 + x58
    x195 = x17 * (-x178 + x186 + x194)
    x196 = -x139 * x8 + x60
    x197 = x101 * x121 + x196
    x198 = -x5 - A[1]
    x199 = x198 * x28
    x200 = x199 + x70
    x201 = x200 * x4
    x202 = x11 * x198
    x203 = x202 + x76
    x204 = x203 * x3
    x205 = x201 - x204
    x206 = x205 * x4
    x207 = x198 * x41 + x65
    x208 = -x200 * x3 + x207 * x4
    x209 = x17 * (-x199 + x207 + x64)
    x210 = -x205 * x3 + x209
    x211 = x208 * x4 + x210
    x212 = x203 * x4
    x213 = x13 * x198
    x214 = x213 + x81
    x215 = x214 * x3
    x216 = x212 - x215
    x217 = x216 * x3
    x218 = x17 * (x200 - x202 + x69)
    x219 = -x218
    x220 = x217 + x219
    x221 = x206 - x217 + x218
    x222 = x17 * (x203 - x213 + x80)
    x223 = x198 * x20 + x99
    x224 = x150 + x198 * x66
    x225 = x198 * x77
    x226 = x142 + x225
    x227 = x226 * x3
    x228 = x198 * x71
    x229 = x147 + x228
    x230 = -x229 * x3
    x231 = x229 * x4
    x232 = x224 * x4 + x230
    x233 = x17 * (x153 + x224 - x228)
    x234 = -x227 + x231
    x235 = x17 * (x156 - x225 + x229)
    x236 = x158 + x198 * x82
    x237 = x105 * x198 + x170
    x238 = x116 * x198
    x239 = x162 + x238
    x240 = x239 * x3
    x241 = x110 * x198
    x242 = x167 + x241
    x243 = -x242 * x3
    x244 = x242 * x4
    x245 = x237 * x4 + x243
    x246 = x17 * (x166 + x237 - x241)
    x247 = -x240 + x244
    x248 = x17 * (x161 - x238 + x242)
    x249 = x121 * x198 + x176
    x250 = x143 * x6
    x251 = x148 * x198
    x252 = 2 * x72
    x253 = -x148 * x6 + x151 * x198 + 2 * x67
    x254 = x17 * (x250 - x251 - x252 + x253)
    x255 = -x250 + x251 + x252
    x256 = x143 * x198 - x159 * x6 + 2 * x98
    x257 = x163 * x6
    x258 = x168 * x198
    x259 = x106 - x168 * x6 + x171 * x198
    x260 = x17 * (x112 + x257 - x258 + x259)
    x261 = x111 - x257 + x258
    x262 = x137 + x163 * x198 - x177 * x6
    x263 = x181 * x6
    x264 = x186 * x198
    x265 = -x186 * x6 + x189 * x198
    x266 = x17 * (x263 - x264 + x265)
    x267 = -x263 + x264
    x268 = x181 * x198 - x197 * x6
    x269 = -x7 - A[2]
    x270 = x269 * x28
    x271 = x109 + x270
    x272 = x271 * x4
    x273 = x11 * x269
    x274 = x115 + x273
    x275 = x274 * x3
    x276 = x272 - x275
    x277 = x276 * x4
    x278 = x104 + x269 * x41
    x279 = -x271 * x3 + x278 * x4
    x280 = x17 * (x103 - x270 + x278)
    x281 = -x276 * x3 + x280
    x282 = x279 * x4 + x281
    x283 = x274 * x4
    x284 = x13 * x269
    x285 = x120 + x284
    x286 = x285 * x3
    x287 = x283 - x286
    x288 = x287 * x3
    x289 = x17 * (x108 + x271 - x273)
    x290 = -x289
    x291 = x288 + x290
    x292 = x277 - x288 + x289
    x293 = x17 * (x119 + x274 - x284)
    x294 = x138 + x20 * x269
    x295 = -x271 * x6
    x296 = x278 * x62 + x295
    x297 = x274 * x62
    x298 = x285 * x6
    x299 = -x298
    x300 = x297 + x299
    x301 = x3 * x300
    x302 = x271 * x62
    x303 = x274 * x6
    x304 = -x303
    x305 = x302 + x304
    x306 = -x3 * x305
    x307 = x305 * x4
    x308 = x296 * x4 + x306
    x309 = x17 * (x296 - x302 + x303)
    x310 = -x301 + x307
    x311 = x17 * (-x297 + x298 + x305)
    x312 = -x294 * x6
    x313 = x285 * x62 + x312
    x314 = x105 * x269 + x188
    x315 = x116 * x269
    x316 = x180 + x315
    x317 = x3 * x316
    x318 = x110 * x269
    x319 = x185 + x318
    x320 = -x3 * x319
    x321 = x319 * x4
    x322 = x314 * x4 + x320
    x323 = x17 * (x191 + x314 - x318)
    x324 = -x317 + x321
    x325 = x17 * (x194 - x315 + x319)
    x326 = x121 * x269 + x196
    x327 = x305 * x62
    x328 = x280 - x305 * x6
    x329 = x296 * x62 + x328
    x330 = x300 * x6
    x331 = x290 + x330
    x332 = x17 * (-x327 + x329 + x331)
    x333 = x289 - x330
    x334 = x327 + x333
    x335 = x293 - x313 * x6
    x336 = x300 * x62 + x335
    x337 = x316 * x6
    x338 = x319 * x62
    x339 = -x319 * x6
    x340 = x314 * x62 + x339
    x341 = x17 * (x337 - x338 + x340)
    x342 = -x337
    x343 = x338 + x342
    x344 = -x326 * x6
    x345 = x316 * x62 + x344
    x346 = x181 * x8
    x347 = x186 * x269
    x348 = 2 * x111
    x349 = 2 * x106 - x186 * x8 + x189 * x269
    x350 = x17 * (x346 - x347 - x348 + x349)
    x351 = -x346 + x347 + x348
    x352 = 2 * x137 + x181 * x269 - x197 * x8
    x353 = x198 * x203
    x354 = x214 * x6
    x355 = x18 + x353 - x354
    x356 = x3 * x355
    x357 = x198 * x200
    x358 = x203 * x6
    x359 = x34 + x357 - x358
    x360 = x359 * x4
    x361 = x198 * x207 - x200 * x6 + x45
    x362 = -x3 * x359 + x361 * x4
    x363 = x17 * (-x357 + x358 + x361 + x55)
    x364 = -x356 + x360
    x365 = x17 * (-x353 + x354 + x359 + x58)
    x366 = x198 * x214 - x223 * x6 + x60
    x367 = x226 * x6
    x368 = x198 * x229
    x369 = x198 * x224 + x209 - x229 * x6 + x67
    x370 = x17 * (x219 + x367 - x368 + x369 + x73)
    x371 = x218 - x367 + x368 + x72
    x372 = x198 * x226 + x222 - x236 * x6 + x98
    x373 = x239 * x6
    x374 = x198 * x242
    x375 = x106 + x198 * x237 - x242 * x6
    x376 = x17 * (x112 + x373 - x374 + x375)
    x377 = x111 - x373 + x374
    x378 = x137 + x198 * x239 - x249 * x6
    x379 = 2 * x233
    x380 = x154 + x198 * x253 - x255 * x6 + x379
    x381 = 2 * x235
    x382 = x157 + x198 * x255 - x256 * x6 + x381
    x383 = x173 + x198 * x259 + x246 - x261 * x6
    x384 = x175 + x198 * x261 + x248 - x262 * x6
    x385 = x192 + x198 * x265 - x267 * x6
    x386 = x195 + x198 * x267 - x268 * x6
    x387 = x198 * x274
    x388 = x299 + x387
    x389 = x3 * x388
    x390 = x198 * x271
    x391 = x304 + x390
    x392 = x391 * x4
    x393 = x198 * x278 + x295
    x394 = -x3 * x391 + x393 * x4
    x395 = x17 * (x303 - x390 + x393)
    x396 = -x389 + x392
    x397 = x17 * (x298 - x387 + x391)
    x398 = x198 * x285 + x312
    x399 = x198 * x305
    x400 = x198 * x296 + x328
    x401 = x17 * (x331 - x399 + x400)
    x402 = x333 + x399
    x403 = x198 * x300 + x335
    x404 = x198 * x319
    x405 = x198 * x314 + x339
    x406 = x17 * (x337 - x404 + x405)
    x407 = x342 + x404
    x408 = x198 * x316 + x344
    x409 = x198 * x329 + 2 * x309 - x334 * x6
    x410 = x198 * x334 + 2 * x311 - x336 * x6
    x411 = x198 * x340 + x323 - x343 * x6
    x412 = x198 * x343 + x325 - x345 * x6
    x413 = x198 * x349 - x351 * x6
    x414 = x198 * x351 - x352 * x6
    x415 = x269 * x274
    x416 = x285 * x8
    x417 = x18 + x415 - x416
    x418 = x3 * x417
    x419 = x269 * x271
    x420 = x274 * x8
    x421 = x34 + x419 - x420
    x422 = x4 * x421
    x423 = x269 * x278 - x271 * x8 + x45
    x424 = -x3 * x421 + x4 * x423
    x425 = x17 * (-x419 + x420 + x423 + x55)
    x426 = -x418 + x422
    x427 = x17 * (-x415 + x416 + x421 + x58)
    x428 = x269 * x285 - x294 * x8 + x60
    x429 = x417 * x6
    x430 = x421 * x62
    x431 = -x421 * x6
    x432 = x423 * x62 + x431
    x433 = x17 * (x429 - x430 + x432)
    x434 = -x429
    x435 = x430 + x434
    x436 = -x428 * x6
    x437 = x417 * x62 + x436
    x438 = x316 * x8
    x439 = x269 * x319
    x440 = x106 + x269 * x314 + x280 - x319 * x8
    x441 = x17 * (x112 + x290 + x438 - x439 + x440)
    x442 = x111 + x289 - x438 + x439
    x443 = x137 + x269 * x316 + x293 - x326 * x8
    x444 = x425 - x435 * x6
    x445 = x432 * x62 + x444
    x446 = x427 - x437 * x6
    x447 = x435 * x62 + x446
    x448 = -x442 * x6
    x449 = x440 * x62 + x448
    x450 = -x443 * x6
    x451 = x442 * x62 + x450
    x452 = 2 * x323
    x453 = x192 + x269 * x349 - x351 * x8 + x452
    x454 = 2 * x325
    x455 = x195 + x269 * x351 - x352 * x8 + x454
    x456 = x355 * x6
    x457 = x198 * x359
    x458 = 2 * x218
    x459 = x198 * x361 + 2 * x209 - x359 * x6
    x460 = -x456 + x457 + x458
    x461 = x388 * x6
    x462 = x198 * x391
    x463 = x198 * x393 + x280 - x391 * x6
    x464 = x289 - x461 + x462
    x465 = x198 * x421
    x466 = x198 * x423 + x431
    x467 = x434 + x465
    x468 = x417 * x8
    x469 = x269 * x421
    x470 = 2 * x289
    x471 = x269 * x423 + 2 * x280 - x421 * x8
    x472 = x17 * (x468 - x469 - x470 + x471)
    x473 = -x468 + x469 + x470
    x474 = x269 * x417 + 2 * x293 - x428 * x8
    x475 = x471 * x62 - x473 * x6
    x476 = x473 * x62 - x474 * x6
    x477 = x269 * x440 + x425 - x442 * x8 + x452
    x478 = x269 * x442 + x427 - x443 * x8 + x454

    # 60 item(s)
    return numpy.array(
        [
            x27
            * (x17 * (-x33 + x47 + x56) + x27 * x48 - x3 * x57 + x49 * (x51 - x53 + x56))
            - x3
            * (
                x17 * (-x16 + x37 + x59)
                + x27 * x57
                - x3
                * (
                    x25 * x27
                    - x3 * (x22 * x4 - x3 * (x20 * x4 - x3 * x61) + x60)
                    + x49 * (x15 - x19 + x21)
                )
                + x49 * (-x52 + x54 + x59)
            )
            + x49 * (x26 - x38 - x40 + x48)
            + x49
            * (
                -x17 * (-x11 * x27 + x14 + x31 + x50)
                + x17 * (x27 * x41 + x30 + x42 - x50)
                + x27 * x51
                - x27 * x54
                - x3 * x54
                + x3 * (x24 + x52)
                - x39
                + x44
            ),
            x17 * (x27 * x75 - x27 * x88 - x3 * x88 + x3 * (x78 + x84) + x67 + x73)
            + x27
            * (x17 * (x75 - x85 + x86) + x17 * (x86 - x92 + x95) + x27 * x96 - x3 * x97)
            - x3
            * (
                x17 * (-x78 + x83 + x88)
                + x17 * (x83 - x89 + x93)
                + x27 * x97
                - x3 * (x27 * x90 - x3 * (-x100 * x3 + x4 * x82) + x98)
            )
            + x49 * (x73 + x91 - x94 + x96),
            x17 * (x106 + x112 + x114 * x27 - x127 * x27 - x127 * x3 + x3 * (x117 + x123))
            + x27
            * (
                x135 * x27
                - x136 * x3
                + x17 * (x114 - x124 + x125)
                + x17 * (x125 - x131 + x134)
            )
            - x3
            * (
                x136 * x27
                + x17 * (-x117 + x122 + x127)
                + x17 * (x122 - x128 + x132)
                - x3 * (x129 * x27 + x137 - x3 * (x121 * x4 - x139 * x3))
            )
            + x49 * (x112 + x130 - x133 + x135),
            x27 * (x152 * x27 + x154 - x155 * x3)
            - x3 * (x155 * x27 + x157 - x3 * (x143 * x27 - x159 * x3))
            + x49 * (x144 - x149 + x152),
            x27 * (x172 * x27 + x173 - x174 * x3)
            - x3 * (x174 * x27 + x175 - x3 * (x163 * x27 - x177 * x3))
            + x49 * (x164 - x169 + x172),
            x27 * (x190 * x27 + x192 - x193 * x3)
            - x3 * (x193 * x27 + x195 - x3 * (x181 * x27 - x197 * x3))
            + x49 * (x182 - x187 + x190),
            x17 * (-x206 + x211 + x220)
            + x27 * (x211 * x27 - x221 * x3 + x49 * (-x201 + x204 + x208))
            - x3
            * (
                x221 * x27
                - x3 * (x216 * x4 + x222 - x3 * (x214 * x4 - x223 * x3))
                + x49 * (x205 - x212 + x215)
            )
            + x49 * (-x205 * x27 + x208 * x27 + x210 + x220),
            x17 * (x227 - x231 + x232)
            + x17 * (x224 * x27 + x227 - x229 * x27 + x230)
            + x27 * (x232 * x27 + x233 - x234 * x3)
            - x3 * (x234 * x27 + x235 - x3 * (x226 * x4 - x236 * x3)),
            x17 * (x240 - x244 + x245)
            + x17 * (x237 * x27 + x240 - x242 * x27 + x243)
            + x27 * (x245 * x27 + x246 - x247 * x3)
            - x3 * (x247 * x27 + x248 - x3 * (x239 * x4 - x249 * x3)),
            x254 + x27 * (x253 * x27 - x255 * x3) - x3 * (x255 * x27 - x256 * x3),
            x260 + x27 * (x259 * x27 - x261 * x3) - x3 * (x261 * x27 - x262 * x3),
            x266 + x27 * (x265 * x27 - x267 * x3) - x3 * (x267 * x27 - x268 * x3),
            x17 * (-x277 + x282 + x291)
            + x27 * (x27 * x282 - x292 * x3 + x49 * (-x272 + x275 + x279))
            - x3
            * (
                x27 * x292
                - x3 * (x287 * x4 + x293 - x3 * (x285 * x4 - x294 * x3))
                + x49 * (x276 - x283 + x286)
            )
            + x49 * (-x27 * x276 + x27 * x279 + x281 + x291),
            x17 * (x301 - x307 + x308)
            + x17 * (x27 * x296 - x27 * x305 + x301 + x306)
            + x27 * (x27 * x308 - x3 * x310 + x309)
            - x3 * (x27 * x310 - x3 * (-x3 * x313 + x300 * x4) + x311),
            x17 * (x317 - x321 + x322)
            + x17 * (x27 * x314 - x27 * x319 + x317 + x320)
            + x27 * (x27 * x322 - x3 * x324 + x323)
            - x3 * (x27 * x324 - x3 * (-x3 * x326 + x316 * x4) + x325),
            x27 * (x27 * x329 - x3 * x334) - x3 * (x27 * x334 - x3 * x336) + x332,
            x27 * (x27 * x340 - x3 * x343) - x3 * (x27 * x343 - x3 * x345) + x341,
            x27 * (x27 * x349 - x3 * x351) - x3 * (x27 * x351 - x3 * x352) + x350,
            x27 * (-x3 * x364 + x362 * x4 + x363)
            - x3 * (-x3 * (-x3 * x366 + x355 * x4) + x364 * x4 + x365)
            + x49 * (x356 - x360 + x362),
            x27 * (-x3 * x371 + x369 * x4) - x3 * (-x3 * x372 + x371 * x4) + x370,
            x27 * (-x3 * x377 + x375 * x4) - x3 * (-x3 * x378 + x377 * x4) + x376,
            x27 * x380 - x3 * x382,
            x27 * x383 - x3 * x384,
            x27 * x385 - x3 * x386,
            x27 * (-x3 * x396 + x394 * x4 + x395)
            - x3 * (-x3 * (-x3 * x398 + x388 * x4) + x396 * x4 + x397)
            + x49 * (x389 - x392 + x394),
            x27 * (-x3 * x402 + x4 * x400) - x3 * (-x3 * x403 + x4 * x402) + x401,
            x27 * (-x3 * x407 + x4 * x405) - x3 * (-x3 * x408 + x4 * x407) + x406,
            x27 * x409 - x3 * x410,
            x27 * x411 - x3 * x412,
            x27 * x413 - x3 * x414,
            x27 * (-x3 * x426 + x4 * x424 + x425)
            - x3 * (-x3 * (-x3 * x428 + x4 * x417) + x4 * x426 + x427)
            + x49 * (x418 - x422 + x424),
            x27 * (-x3 * x435 + x4 * x432) - x3 * (-x3 * x437 + x4 * x435) + x433,
            x27 * (-x3 * x442 + x4 * x440) - x3 * (-x3 * x443 + x4 * x442) + x441,
            x27 * x445 - x3 * x447,
            x27 * x449 - x3 * x451,
            x27 * x453 - x3 * x455,
            x17 * (x456 - x457 - x458 + x459)
            - x3 * (-x3 * (x198 * x355 + 2 * x222 - x366 * x6) + x4 * x460)
            + x4 * (-x3 * x460 + x4 * x459),
            -x3 * (x198 * x371 + x365 - x372 * x6 + x381)
            + x4 * (x198 * x369 + x363 - x371 * x6 + x379),
            -x3 * (x198 * x377 + 2 * x248 - x378 * x6)
            + x4 * (x198 * x375 + 2 * x246 - x377 * x6),
            x198 * x380 + 2 * x254 + 2 * x370 - x382 * x6,
            x198 * x383 + 2 * x260 + x376 - x384 * x6,
            x198 * x385 + 2 * x266 - x386 * x6,
            x17 * (x290 + x461 - x462 + x463)
            - x3 * (-x3 * (x198 * x388 + x293 - x398 * x6) + x4 * x464)
            + x4 * (-x3 * x464 + x4 * x463),
            -x3 * (x198 * x402 + x311 + x397 - x403 * x6)
            + x4 * (x198 * x400 + x309 + x395 - x402 * x6),
            -x3 * (x198 * x407 + x325 - x408 * x6)
            + x4 * (x198 * x405 + x323 - x407 * x6),
            x198 * x409 + x332 + 2 * x401 - x410 * x6,
            x198 * x411 + x341 + x406 - x412 * x6,
            x198 * x413 + x350 - x414 * x6,
            x17 * (x429 - x465 + x466)
            - x3 * (-x3 * (x198 * x417 + x436) + x4 * x467)
            + x4 * (-x3 * x467 + x4 * x466),
            -x3 * (x198 * x435 + x446) + x4 * (x198 * x432 + x444),
            -x3 * (x198 * x442 + x450) + x4 * (x198 * x440 + x448),
            x198 * x445 + 2 * x433 - x447 * x6,
            x198 * x449 + x441 - x451 * x6,
            x198 * x453 - x455 * x6,
            -x3 * (-x3 * x474 + x4 * x473) + x4 * (-x3 * x473 + x4 * x471) + x472,
            -x3 * x476 + x4 * x475,
            -x3 * x478 + x4 * x477,
            x472 + x475 * x62 - x476 * x6,
            x477 * x62 - x478 * x6,
            x269 * x453 + 2 * x350 + 2 * x441 - x455 * x8,
        ]
    )


def coulomb3d_33(a, A, b, B, C):
    """Cartesian (ff) 1-electron Coulomb integral.

    Generated code; DO NOT modify by hand!"""

    x0 = a + b
    x1 = x0 ** (-1.0)
    x2 = -x1 * (a * A[0] + b * B[0])
    x3 = -x2 - C[0]
    x4 = -x2 - B[0]
    x5 = (2 * a + 2 * b) ** (-1.0)
    x6 = -x1 * (a * A[1] + b * B[1])
    x7 = -x6 - C[1]
    x8 = -x1 * (a * A[2] + b * B[2])
    x9 = -x8 - C[2]
    x10 = x0 * (x3 ** 2 + x7 ** 2 + x9 ** 2)
    x11 = (
        2
        * numpy.pi
        * x1
        * numpy.exp(
            -a * b * x1 * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2)
        )
    )
    x12 = x11 * boys(2, x10)
    x13 = x11 * boys(3, x10)
    x14 = x5 * (x12 - x13)
    x15 = x12 * x4
    x16 = x13 * x3
    x17 = x15 - x16
    x18 = x17 * x4
    x19 = x13 * x4
    x20 = x11 * boys(4, x10)
    x21 = x20 * x3
    x22 = x19 - x21
    x23 = x22 * x3
    x24 = x14 + x18 - x23
    x25 = x24 * x4
    x26 = x5 * (x13 - x20)
    x27 = x22 * x4
    x28 = x20 * x4
    x29 = x11 * boys(5, x10)
    x30 = x29 * x3
    x31 = x28 - x30
    x32 = x3 * x31
    x33 = x26 + x27 - x32
    x34 = x3 * x33
    x35 = 2 * x5
    x36 = x35 * (x17 - x19 + x21)
    x37 = -x34 + x36
    x38 = x25 + x37
    x39 = x3 * x38
    x40 = -x2 - A[0]
    x41 = x11 * boys(1, x10)
    x42 = x4 * x41
    x43 = x12 * x3
    x44 = x42 - x43
    x45 = x4 * x44
    x46 = x5 * (-x12 + x41)
    x47 = x17 * x3
    x48 = x46 - x47
    x49 = x45 + x48
    x50 = x4 * x49
    x51 = x24 * x3
    x52 = x35 * (-x15 + x16 + x44)
    x53 = -x51 + x52
    x54 = x50 + x53
    x55 = x40 * x54
    x56 = -x14
    x57 = x23 + x56
    x58 = x5 * (-x18 + x49 + x57)
    x59 = 3 * x58
    x60 = x11 * boys(0, x10)
    x61 = -x3 * x41 + x4 * x60
    x62 = x5 * (-x41 + x60)
    x63 = -x3 * x44 + x62
    x64 = x4 * x61 + x63
    x65 = -x46
    x66 = x47 + x65
    x67 = x5 * (-x45 + x64 + x66)
    x68 = -x3 * x49 + x35 * (-x42 + x43 + x61)
    x69 = x4 * x64 + x68
    x70 = -x3 * x54 + x40 * x69 + 3 * x67
    x71 = x40 * x44
    x72 = x40 * x64 + x68
    x73 = x24 * x40
    x74 = x40 * x49
    x75 = x53 + x74
    x76 = 3 * x5
    x77 = x51 - x52
    x78 = -x39 + x55 + x59
    x79 = x34 - x36
    x80 = -x26
    x81 = x5 * (x20 - x29)
    x82 = x11 * boys(6, x10)
    x83 = -x6 - B[1]
    x84 = x12 * x83
    x85 = x13 * x7
    x86 = -x85
    x87 = x84 + x86
    x88 = x4 * x87
    x89 = x13 * x83
    x90 = x20 * x7
    x91 = -x90
    x92 = x89 + x91
    x93 = x3 * x92
    x94 = x88 - x93
    x95 = x4 * x94
    x96 = x5 * (x87 - x89 + x90)
    x97 = x4 * x92
    x98 = x20 * x83
    x99 = x29 * x7
    x100 = -x99
    x101 = x100 + x98
    x102 = x101 * x3
    x103 = -x102 + x97
    x104 = x103 * x3
    x105 = -x104 + x96
    x106 = x105 + x95
    x107 = x106 * x3
    x108 = x41 * x83
    x109 = x12 * x7
    x110 = -x109
    x111 = x108 + x110
    x112 = x111 * x4
    x113 = x3 * x87
    x114 = -x113
    x115 = x112 + x114
    x116 = x115 * x4
    x117 = x5 * (x111 - x84 + x85)
    x118 = x3 * x94
    x119 = x117 - x118
    x120 = x116 + x119
    x121 = x120 * x40
    x122 = x5 * (x115 - x88 + x93)
    x123 = 2 * x122
    x124 = -x41 * x7
    x125 = x124 + x60 * x83
    x126 = -x111 * x3
    x127 = x125 * x4 + x126
    x128 = x5 * (-x112 + x113 + x127)
    x129 = x5 * (-x108 + x109 + x125)
    x130 = -x115 * x3 + x129
    x131 = x127 * x4 + x130
    x132 = -x120 * x3 + 2 * x128 + x131 * x40
    x133 = x111 * x40
    x134 = x127 * x40 + x130
    x135 = x40 * x94
    x136 = x115 * x40
    x137 = x119 + x136
    x138 = -x117
    x139 = x118 + x138
    x140 = -x107 + x121 + x123
    x141 = -x96
    x142 = x104 + x141
    x143 = x5 * (x92 - x98 + x99)
    x144 = -x7 * x82
    x145 = x144 + x29 * x83
    x146 = -x8 - B[2]
    x147 = x12 * x146
    x148 = x13 * x9
    x149 = -x148
    x150 = x147 + x149
    x151 = x150 * x4
    x152 = x13 * x146
    x153 = x20 * x9
    x154 = -x153
    x155 = x152 + x154
    x156 = x155 * x3
    x157 = x151 - x156
    x158 = x157 * x4
    x159 = x5 * (x150 - x152 + x153)
    x160 = x155 * x4
    x161 = x146 * x20
    x162 = x29 * x9
    x163 = -x162
    x164 = x161 + x163
    x165 = x164 * x3
    x166 = x160 - x165
    x167 = x166 * x3
    x168 = x159 - x167
    x169 = x158 + x168
    x170 = x169 * x3
    x171 = x146 * x41
    x172 = x12 * x9
    x173 = -x172
    x174 = x171 + x173
    x175 = x174 * x4
    x176 = x150 * x3
    x177 = -x176
    x178 = x175 + x177
    x179 = x178 * x4
    x180 = x5 * (-x147 + x148 + x174)
    x181 = x157 * x3
    x182 = x180 - x181
    x183 = x179 + x182
    x184 = x183 * x40
    x185 = x5 * (-x151 + x156 + x178)
    x186 = 2 * x185
    x187 = -x41 * x9
    x188 = x146 * x60 + x187
    x189 = -x174 * x3
    x190 = x188 * x4 + x189
    x191 = x5 * (-x175 + x176 + x190)
    x192 = x5 * (-x171 + x172 + x188)
    x193 = -x178 * x3 + x192
    x194 = x190 * x4 + x193
    x195 = -x183 * x3 + 2 * x191 + x194 * x40
    x196 = x174 * x40
    x197 = x190 * x40 + x193
    x198 = x157 * x40
    x199 = x178 * x40
    x200 = x182 + x199
    x201 = -x180
    x202 = x181 + x201
    x203 = -x170 + x184 + x186
    x204 = -x159
    x205 = x167 + x204
    x206 = x5 * (x155 - x161 + x162)
    x207 = -x82 * x9
    x208 = x146 * x29 + x207
    x209 = x111 * x83
    x210 = -x111 * x7 + x62
    x211 = x125 * x83 + x210
    x212 = x7 * x87
    x213 = x212 + x65
    x214 = x5 * (-x209 + x211 + x213)
    x215 = x83 * x87
    x216 = -x212 + x46
    x217 = x209 + x216
    x218 = x7 * x92
    x219 = x218 + x56
    x220 = x5 * (-x215 + x217 + x219)
    x221 = -x220
    x222 = -x217 * x3
    x223 = x211 * x40 + x222
    x224 = x14 - x218
    x225 = x215 + x224
    x226 = x225 * x40
    x227 = x83 * x92
    x228 = x101 * x7
    x229 = -x228 + x26
    x230 = x227 + x229
    x231 = x230 * x3
    x232 = -x231
    x233 = x217 * x40
    x234 = x225 * x3
    x235 = -x234
    x236 = x233 + x235
    x237 = x225 * x4
    x238 = x232 + x237
    x239 = x238 * x3
    x240 = x217 * x4
    x241 = x235 + x240
    x242 = x241 * x40
    x243 = x211 * x4 + x222
    x244 = x214 - x241 * x3 + x243 * x40
    x245 = x220 - x239 + x242
    x246 = x228 + x80
    x247 = x5 * (x225 - x227 + x246)
    x248 = -x145 * x7 + x81
    x249 = x101 * x83 + x248
    x250 = x150 * x7
    x251 = x174 * x83
    x252 = -x174 * x7
    x253 = x188 * x83 + x252
    x254 = x5 * (x250 - x251 + x253)
    x255 = x155 * x7
    x256 = x150 * x83
    x257 = -x250
    x258 = x251 + x257
    x259 = x5 * (x255 - x256 + x258)
    x260 = -x259
    x261 = -x258 * x3
    x262 = x253 * x40 + x261
    x263 = -x255
    x264 = x256 + x263
    x265 = x264 * x40
    x266 = x155 * x83
    x267 = x164 * x7
    x268 = -x267
    x269 = x266 + x268
    x270 = x269 * x3
    x271 = -x270
    x272 = x258 * x40
    x273 = x264 * x3
    x274 = -x273
    x275 = x272 + x274
    x276 = x264 * x4
    x277 = x271 + x276
    x278 = x277 * x3
    x279 = x258 * x4
    x280 = x274 + x279
    x281 = x280 * x40
    x282 = x253 * x4 + x261
    x283 = x254 - x280 * x3 + x282 * x40
    x284 = x259 - x278 + x281
    x285 = x5 * (x264 - x266 + x267)
    x286 = -x208 * x7
    x287 = x164 * x83 + x286
    x288 = x146 * x174
    x289 = -x174 * x9 + x62
    x290 = x146 * x188 + x289
    x291 = x150 * x9
    x292 = x291 + x65
    x293 = x5 * (-x288 + x290 + x292)
    x294 = x146 * x150
    x295 = -x291 + x46
    x296 = x288 + x295
    x297 = x155 * x9
    x298 = x297 + x56
    x299 = x5 * (-x294 + x296 + x298)
    x300 = -x299
    x301 = -x296 * x3
    x302 = x290 * x40 + x301
    x303 = x14 - x297
    x304 = x294 + x303
    x305 = x304 * x40
    x306 = x146 * x155
    x307 = x164 * x9
    x308 = x26 - x307
    x309 = x306 + x308
    x310 = x3 * x309
    x311 = -x310
    x312 = x296 * x40
    x313 = x3 * x304
    x314 = -x313
    x315 = x312 + x314
    x316 = x304 * x4
    x317 = x311 + x316
    x318 = x3 * x317
    x319 = x296 * x4
    x320 = x314 + x319
    x321 = x320 * x40
    x322 = x290 * x4 + x301
    x323 = x293 - x3 * x320 + x322 * x40
    x324 = x299 - x318 + x321
    x325 = x307 + x80
    x326 = x5 * (x304 - x306 + x325)
    x327 = -x208 * x9 + x81
    x328 = x146 * x164 + x327
    x329 = x225 * x83
    x330 = x230 * x7
    x331 = 2 * x96
    x332 = -x330 + x331
    x333 = x329 + x332
    x334 = x3 * x333
    x335 = x217 * x83
    x336 = x225 * x7
    x337 = 2 * x117
    x338 = -x336 + x337
    x339 = x335 + x338
    x340 = x339 * x40
    x341 = 2 * x129 - x217 * x7
    x342 = x211 * x83 + x341
    x343 = -x3 * x339 + x342 * x40
    x344 = x336 - x337
    x345 = x5 * (-x335 + x342 + x344)
    x346 = -x334 + x340
    x347 = x330 - x331
    x348 = x5 * (-x329 + x339 + x347)
    x349 = 2 * x143 - x249 * x7
    x350 = x230 * x83 + x349
    x351 = x264 * x83
    x352 = x269 * x7
    x353 = x159 - x352
    x354 = x351 + x353
    x355 = x3 * x354
    x356 = x258 * x83
    x357 = x264 * x7
    x358 = x180 - x357
    x359 = x356 + x358
    x360 = x359 * x40
    x361 = x192 - x258 * x7
    x362 = x253 * x83 + x361
    x363 = -x3 * x359 + x362 * x40
    x364 = x201 + x357
    x365 = x5 * (-x356 + x362 + x364)
    x366 = -x355 + x360
    x367 = x204 + x352
    x368 = x5 * (-x351 + x359 + x367)
    x369 = x206 - x287 * x7
    x370 = x269 * x83 + x369
    x371 = x304 * x83
    x372 = x309 * x7
    x373 = -x372
    x374 = x371 + x373
    x375 = x3 * x374
    x376 = x296 * x83
    x377 = x304 * x7
    x378 = -x377
    x379 = x376 + x378
    x380 = x379 * x40
    x381 = -x296 * x7
    x382 = x290 * x83 + x381
    x383 = -x3 * x379 + x382 * x40
    x384 = x5 * (-x376 + x377 + x382)
    x385 = -x375 + x380
    x386 = x5 * (-x371 + x372 + x379)
    x387 = -x328 * x7
    x388 = x309 * x83 + x387
    x389 = x146 * x304
    x390 = x309 * x9
    x391 = 2 * x159
    x392 = -x390 + x391
    x393 = x389 + x392
    x394 = x3 * x393
    x395 = x146 * x296
    x396 = x304 * x9
    x397 = 2 * x180
    x398 = -x396 + x397
    x399 = x395 + x398
    x400 = x399 * x40
    x401 = 2 * x192 - x296 * x9
    x402 = x146 * x290 + x401
    x403 = -x3 * x399 + x40 * x402
    x404 = x396 - x397
    x405 = x5 * (-x395 + x402 + x404)
    x406 = -x394 + x400
    x407 = x390 - x391
    x408 = x5 * (-x389 + x399 + x407)
    x409 = 2 * x206 - x328 * x9
    x410 = x146 * x309 + x409
    x411 = -x6 - A[1]
    x412 = x12 * x411
    x413 = x41 * x411
    x414 = x110 + x413
    x415 = x5 * (-x412 + x414 + x85)
    x416 = x4 * x414
    x417 = x412 + x86
    x418 = x3 * x417
    x419 = x416 - x418
    x420 = x4 * x419
    x421 = x4 * x417
    x422 = x13 * x411
    x423 = x422 + x91
    x424 = x3 * x423
    x425 = x421 - x424
    x426 = x3 * x425
    x427 = x415 + x420 - x426
    x428 = x4 * x427
    x429 = x124 + x411 * x60
    x430 = x5 * (x109 - x413 + x429)
    x431 = -x3 * x414 + x4 * x429
    x432 = -x3 * x419 + x4 * x431 + x430
    x433 = -x3 * x427 + x35 * (-x416 + x418 + x431)
    x434 = x4 * x432 + x433
    x435 = x5 * (x417 - x422 + x90)
    x436 = x4 * x425
    x437 = x4 * x423
    x438 = x20 * x411
    x439 = x100 + x438
    x440 = x3 * x439
    x441 = x437 - x440
    x442 = x3 * x441
    x443 = x435 + x436 - x442
    x444 = x3 * x443
    x445 = x35 * (x419 - x421 + x424)
    x446 = x444 - x445
    x447 = -x415
    x448 = x428 - x444 + x445
    x449 = -x435
    x450 = x5 * (x423 - x438 + x99)
    x451 = x144 + x29 * x411
    x452 = x111 * x411
    x453 = x216 + x452
    x454 = x4 * x453
    x455 = x411 * x87
    x456 = x224 + x455
    x457 = x3 * x456
    x458 = x454 - x457
    x459 = x4 * x458
    x460 = x125 * x411 + x210
    x461 = -x3 * x453 + x4 * x460
    x462 = x5 * (x213 - x452 + x460)
    x463 = -x3 * x458 + x462
    x464 = x4 * x461 + x463
    x465 = x4 * x456
    x466 = x411 * x92
    x467 = x229 + x466
    x468 = x3 * x467
    x469 = x465 - x468
    x470 = x3 * x469
    x471 = x5 * (x219 + x453 - x455)
    x472 = x470 - x471
    x473 = x459 - x470 + x471
    x474 = x5 * (x246 + x456 - x466)
    x475 = x101 * x411 + x248
    x476 = x174 * x411
    x477 = x257 + x476
    x478 = x4 * x477
    x479 = x150 * x411
    x480 = x263 + x479
    x481 = x3 * x480
    x482 = x478 - x481
    x483 = x4 * x482
    x484 = x188 * x411 + x252
    x485 = -x3 * x477 + x4 * x484
    x486 = x5 * (x250 - x476 + x484)
    x487 = -x3 * x482 + x486
    x488 = x4 * x485 + x487
    x489 = x4 * x480
    x490 = x155 * x411
    x491 = x268 + x490
    x492 = x3 * x491
    x493 = x489 - x492
    x494 = x3 * x493
    x495 = x5 * (x255 + x477 - x479)
    x496 = -x495
    x497 = x494 + x496
    x498 = x483 - x494 + x495
    x499 = x5 * (x267 + x480 - x490)
    x500 = x164 * x411 + x286
    x501 = x211 * x411 + x341
    x502 = x225 * x411
    x503 = x332 + x502
    x504 = x3 * x503
    x505 = x217 * x411
    x506 = x338 + x505
    x507 = -x3 * x506
    x508 = x4 * x506
    x509 = x4 * x501 + x507
    x510 = x5 * (x344 + x501 - x505)
    x511 = -x504 + x508
    x512 = x5 * (x347 - x502 + x506)
    x513 = x230 * x411 + x349
    x514 = x253 * x411 + x361
    x515 = x264 * x411
    x516 = x353 + x515
    x517 = x3 * x516
    x518 = x258 * x411
    x519 = x358 + x518
    x520 = -x3 * x519
    x521 = x4 * x519
    x522 = x4 * x514 + x520
    x523 = x5 * (x364 + x514 - x518)
    x524 = -x517 + x521
    x525 = x5 * (x367 - x515 + x519)
    x526 = x269 * x411 + x369
    x527 = x290 * x411 + x381
    x528 = x304 * x411
    x529 = x373 + x528
    x530 = x3 * x529
    x531 = x296 * x411
    x532 = x378 + x531
    x533 = -x3 * x532
    x534 = x4 * x532
    x535 = x4 * x527 + x533
    x536 = x5 * (x377 + x527 - x531)
    x537 = -x530 + x534
    x538 = x5 * (x372 - x528 + x532)
    x539 = x309 * x411 + x387
    x540 = x333 * x7
    x541 = x339 * x411
    x542 = 3 * x220
    x543 = 3 * x214 - x339 * x7 + x342 * x411
    x544 = x5 * (x540 - x541 - x542 + x543)
    x545 = -x540 + x541 + x542
    x546 = 3 * x247 + x333 * x411 - x350 * x7
    x547 = x354 * x7
    x548 = x359 * x411
    x549 = 2 * x259
    x550 = 2 * x254 - x359 * x7 + x362 * x411
    x551 = x5 * (x547 - x548 - x549 + x550)
    x552 = -x547 + x548 + x549
    x553 = 2 * x285 + x354 * x411 - x370 * x7
    x554 = x374 * x7
    x555 = x379 * x411
    x556 = x293 - x379 * x7 + x382 * x411
    x557 = x5 * (x300 + x554 - x555 + x556)
    x558 = x299 - x554 + x555
    x559 = x326 + x374 * x411 - x388 * x7
    x560 = x393 * x7
    x561 = x399 * x411
    x562 = -x399 * x7 + x402 * x411
    x563 = x5 * (x560 - x561 + x562)
    x564 = -x560 + x561
    x565 = x393 * x411 - x410 * x7
    x566 = -x8 - A[2]
    x567 = x12 * x566
    x568 = x41 * x566
    x569 = x173 + x568
    x570 = x5 * (x148 - x567 + x569)
    x571 = x4 * x569
    x572 = x149 + x567
    x573 = x3 * x572
    x574 = x571 - x573
    x575 = x4 * x574
    x576 = x4 * x572
    x577 = x13 * x566
    x578 = x154 + x577
    x579 = x3 * x578
    x580 = x576 - x579
    x581 = x3 * x580
    x582 = x570 + x575 - x581
    x583 = x4 * x582
    x584 = x187 + x566 * x60
    x585 = x5 * (x172 - x568 + x584)
    x586 = -x3 * x569 + x4 * x584
    x587 = -x3 * x574 + x4 * x586 + x585
    x588 = -x3 * x582 + x35 * (-x571 + x573 + x586)
    x589 = x4 * x587 + x588
    x590 = x5 * (x153 + x572 - x577)
    x591 = x4 * x580
    x592 = x4 * x578
    x593 = x20 * x566
    x594 = x163 + x593
    x595 = x3 * x594
    x596 = x592 - x595
    x597 = x3 * x596
    x598 = x590 + x591 - x597
    x599 = x3 * x598
    x600 = x35 * (x574 - x576 + x579)
    x601 = x599 - x600
    x602 = -x570
    x603 = x583 - x599 + x600
    x604 = -x590
    x605 = x5 * (x162 + x578 - x593)
    x606 = x207 + x29 * x566
    x607 = x569 * x83
    x608 = x572 * x7
    x609 = -x608
    x610 = x607 + x609
    x611 = x4 * x610
    x612 = x572 * x83
    x613 = x578 * x7
    x614 = -x613
    x615 = x612 + x614
    x616 = x3 * x615
    x617 = x611 - x616
    x618 = x4 * x617
    x619 = -x569 * x7
    x620 = x584 * x83 + x619
    x621 = -x3 * x610 + x4 * x620
    x622 = x5 * (-x607 + x608 + x620)
    x623 = -x3 * x617 + x622
    x624 = x4 * x621 + x623
    x625 = x4 * x615
    x626 = x578 * x83
    x627 = x594 * x7
    x628 = -x627
    x629 = x626 + x628
    x630 = x3 * x629
    x631 = x625 - x630
    x632 = x3 * x631
    x633 = x5 * (x610 - x612 + x613)
    x634 = -x633
    x635 = x632 + x634
    x636 = x618 - x632 + x633
    x637 = x5 * (x615 - x626 + x627)
    x638 = -x606 * x7
    x639 = x594 * x83 + x638
    x640 = x174 * x566
    x641 = x295 + x640
    x642 = x4 * x641
    x643 = x150 * x566
    x644 = x303 + x643
    x645 = x3 * x644
    x646 = x642 - x645
    x647 = x4 * x646
    x648 = x188 * x566 + x289
    x649 = -x3 * x641 + x4 * x648
    x650 = x5 * (x292 - x640 + x648)
    x651 = -x3 * x646 + x650
    x652 = x4 * x649 + x651
    x653 = x4 * x644
    x654 = x155 * x566
    x655 = x308 + x654
    x656 = x3 * x655
    x657 = x653 - x656
    x658 = x3 * x657
    x659 = x5 * (x298 + x641 - x643)
    x660 = -x659
    x661 = x658 + x660
    x662 = x647 - x658 + x659
    x663 = x5 * (x325 + x644 - x654)
    x664 = x164 * x566 + x327
    x665 = x585 - x610 * x7
    x666 = x620 * x83 + x665
    x667 = x615 * x83
    x668 = x629 * x7
    x669 = x590 - x668
    x670 = x667 + x669
    x671 = x3 * x670
    x672 = x610 * x83
    x673 = x615 * x7
    x674 = x570 - x673
    x675 = x672 + x674
    x676 = -x3 * x675
    x677 = x4 * x675
    x678 = x4 * x666 + x676
    x679 = x602 + x673
    x680 = x5 * (x666 - x672 + x679)
    x681 = -x671 + x677
    x682 = x604 + x668
    x683 = x5 * (-x667 + x675 + x682)
    x684 = x605 - x639 * x7
    x685 = x629 * x83 + x684
    x686 = -x641 * x7
    x687 = x648 * x83 + x686
    x688 = x644 * x83
    x689 = x655 * x7
    x690 = -x689
    x691 = x688 + x690
    x692 = x3 * x691
    x693 = x641 * x83
    x694 = x644 * x7
    x695 = -x694
    x696 = x693 + x695
    x697 = -x3 * x696
    x698 = x4 * x696
    x699 = x4 * x687 + x697
    x700 = x5 * (x687 - x693 + x694)
    x701 = -x692 + x698
    x702 = x5 * (-x688 + x689 + x696)
    x703 = -x664 * x7
    x704 = x655 * x83 + x703
    x705 = x290 * x566 + x401
    x706 = x304 * x566
    x707 = x392 + x706
    x708 = x3 * x707
    x709 = x296 * x566
    x710 = x398 + x709
    x711 = -x3 * x710
    x712 = x4 * x710
    x713 = x4 * x705 + x711
    x714 = x5 * (x404 + x705 - x709)
    x715 = -x708 + x712
    x716 = x5 * (x407 - x706 + x710)
    x717 = x309 * x566 + x409
    x718 = x675 * x83
    x719 = 2 * x622 - x675 * x7
    x720 = x666 * x83 + x719
    x721 = x670 * x7
    x722 = 2 * x633
    x723 = x721 - x722
    x724 = x5 * (-x718 + x720 + x723)
    x725 = -x721 + x722
    x726 = x718 + x725
    x727 = 2 * x637 - x685 * x7
    x728 = x670 * x83 + x727
    x729 = x696 * x83
    x730 = x650 - x696 * x7
    x731 = x687 * x83 + x730
    x732 = x691 * x7
    x733 = x660 + x732
    x734 = x5 * (-x729 + x731 + x733)
    x735 = x659 - x732
    x736 = x729 + x735
    x737 = x663 - x7 * x704
    x738 = x691 * x83 + x737
    x739 = x7 * x707
    x740 = x710 * x83
    x741 = -x7 * x710
    x742 = x705 * x83 + x741
    x743 = x5 * (x739 - x740 + x742)
    x744 = -x739
    x745 = x740 + x744
    x746 = -x7 * x717
    x747 = x707 * x83 + x746
    x748 = x393 * x9
    x749 = x399 * x566
    x750 = 3 * x299
    x751 = 3 * x293 - x399 * x9 + x402 * x566
    x752 = x5 * (x748 - x749 - x750 + x751)
    x753 = -x748 + x749 + x750
    x754 = 3 * x326 + x393 * x566 - x410 * x9
    x755 = x411 * x417
    x756 = x423 * x7
    x757 = x14 + x755 - x756
    x758 = x4 * x757
    x759 = x411 * x423
    x760 = x439 * x7
    x761 = x26 + x759 - x760
    x762 = x3 * x761
    x763 = x758 - x762
    x764 = x3 * x763
    x765 = x411 * x414
    x766 = x417 * x7
    x767 = x46 + x765 - x766
    x768 = x5 * (x56 - x755 + x756 + x767)
    x769 = -x768
    x770 = x4 * x767
    x771 = x3 * x757
    x772 = x770 - x771
    x773 = x4 * x772
    x774 = x411 * x429 - x414 * x7 + x62
    x775 = x5 * (x65 - x765 + x766 + x774)
    x776 = -x3 * x767 + x4 * x774
    x777 = -x3 * x772 + x4 * x776 + x775
    x778 = -x764 + x768 + x773
    x779 = x5 * (x757 - x759 + x760 + x80)
    x780 = x411 * x439 - x451 * x7 + x81
    x781 = x411 * x456
    x782 = x467 * x7
    x783 = x435 + x781 - x782 + x96
    x784 = x3 * x783
    x785 = x411 * x453
    x786 = x456 * x7
    x787 = x117 + x415 + x785 - x786
    x788 = x4 * x787
    x789 = x129 + x411 * x460 + x430 - x453 * x7
    x790 = -x3 * x787 + x4 * x789
    x791 = x5 * (x138 + x447 - x785 + x786 + x789)
    x792 = -x784 + x788
    x793 = x5 * (x141 + x449 - x781 + x782 + x787)
    x794 = x143 + x411 * x467 + x450 - x475 * x7
    x795 = x411 * x480
    x796 = x491 * x7
    x797 = x159 + x795 - x796
    x798 = x3 * x797
    x799 = x411 * x477
    x800 = x480 * x7
    x801 = x180 + x799 - x800
    x802 = x4 * x801
    x803 = x192 + x411 * x484 - x477 * x7
    x804 = -x3 * x801 + x4 * x803
    x805 = x5 * (x201 - x799 + x800 + x803)
    x806 = -x798 + x802
    x807 = x5 * (x204 - x795 + x796 + x801)
    x808 = x206 + x411 * x491 - x500 * x7
    x809 = x503 * x7
    x810 = x411 * x506
    x811 = 2 * x471
    x812 = -x811
    x813 = 2 * x462
    x814 = x214 + x411 * x501 - x506 * x7 + x813
    x815 = x5 * (x221 + x809 - x810 + x812 + x814)
    x816 = x220 - x809 + x810 + x811
    x817 = 2 * x474
    x818 = x247 + x411 * x503 - x513 * x7 + x817
    x819 = x516 * x7
    x820 = x411 * x519
    x821 = x254 + x411 * x514 + x486 - x519 * x7
    x822 = x5 * (x260 + x496 + x819 - x820 + x821)
    x823 = x259 + x495 - x819 + x820
    x824 = x285 + x411 * x516 + x499 - x526 * x7
    x825 = x529 * x7
    x826 = x411 * x532
    x827 = x293 + x411 * x527 - x532 * x7
    x828 = x5 * (x300 + x825 - x826 + x827)
    x829 = x299 - x825 + x826
    x830 = x326 + x411 * x529 - x539 * x7
    x831 = x345 + x411 * x543 + 3 * x510 - x545 * x7
    x832 = x348 + x411 * x545 + 3 * x512 - x546 * x7
    x833 = 2 * x523
    x834 = x365 + x411 * x550 - x552 * x7 + x833
    x835 = 2 * x525
    x836 = x368 + x411 * x552 - x553 * x7 + x835
    x837 = x384 + x411 * x556 + x536 - x558 * x7
    x838 = x386 + x411 * x558 + x538 - x559 * x7
    x839 = x405 + x411 * x562 - x564 * x7
    x840 = x408 + x411 * x564 - x565 * x7
    x841 = x411 * x572
    x842 = x614 + x841
    x843 = x4 * x842
    x844 = x411 * x578
    x845 = x628 + x844
    x846 = x3 * x845
    x847 = x843 - x846
    x848 = x3 * x847
    x849 = x411 * x569
    x850 = x609 + x849
    x851 = x5 * (x613 - x841 + x850)
    x852 = -x851
    x853 = x4 * x850
    x854 = x3 * x842
    x855 = x853 - x854
    x856 = x4 * x855
    x857 = x411 * x584 + x619
    x858 = x5 * (x608 - x849 + x857)
    x859 = -x3 * x850 + x4 * x857
    x860 = -x3 * x855 + x4 * x859 + x858
    x861 = -x848 + x851 + x856
    x862 = x5 * (x627 + x842 - x844)
    x863 = x411 * x594 + x638
    x864 = x411 * x615
    x865 = x669 + x864
    x866 = x3 * x865
    x867 = x411 * x610
    x868 = x674 + x867
    x869 = x4 * x868
    x870 = x411 * x620 + x665
    x871 = -x3 * x868 + x4 * x870
    x872 = x5 * (x679 - x867 + x870)
    x873 = -x866 + x869
    x874 = x5 * (x682 - x864 + x868)
    x875 = x411 * x629 + x684
    x876 = x411 * x644
    x877 = x690 + x876
    x878 = x3 * x877
    x879 = x411 * x641
    x880 = x695 + x879
    x881 = x4 * x880
    x882 = x411 * x648 + x686
    x883 = -x3 * x880 + x4 * x882
    x884 = x5 * (x694 - x879 + x882)
    x885 = -x878 + x881
    x886 = x5 * (x689 - x876 + x880)
    x887 = x411 * x655 + x703
    x888 = x411 * x675
    x889 = x411 * x666 + x719
    x890 = x5 * (x723 - x888 + x889)
    x891 = x725 + x888
    x892 = x411 * x670 + x727
    x893 = x411 * x696
    x894 = x411 * x687 + x730
    x895 = x5 * (x733 - x893 + x894)
    x896 = x735 + x893
    x897 = x411 * x691 + x737
    x898 = x411 * x710
    x899 = x411 * x705 + x741
    x900 = x5 * (x739 - x898 + x899)
    x901 = x744 + x898
    x902 = x411 * x707 + x746
    x903 = x411 * x720 + 3 * x680 - x7 * x726
    x904 = x411 * x726 + 3 * x683 - x7 * x728
    x905 = x411 * x731 - x7 * x736 + 2 * x700
    x906 = x411 * x736 - x7 * x738 + 2 * x702
    x907 = x411 * x742 - x7 * x745 + x714
    x908 = x411 * x745 - x7 * x747 + x716
    x909 = x411 * x751 - x7 * x753
    x910 = x411 * x753 - x7 * x754
    x911 = x566 * x572
    x912 = x578 * x9
    x913 = x14 + x911 - x912
    x914 = x4 * x913
    x915 = x566 * x578
    x916 = x594 * x9
    x917 = x26 + x915 - x916
    x918 = x3 * x917
    x919 = x914 - x918
    x920 = x3 * x919
    x921 = x566 * x569
    x922 = x572 * x9
    x923 = x46 + x921 - x922
    x924 = x5 * (x56 - x911 + x912 + x923)
    x925 = -x924
    x926 = x4 * x923
    x927 = x3 * x913
    x928 = x926 - x927
    x929 = x4 * x928
    x930 = x566 * x584 - x569 * x9 + x62
    x931 = x5 * (x65 - x921 + x922 + x930)
    x932 = -x3 * x923 + x4 * x930
    x933 = -x3 * x928 + x4 * x932 + x931
    x934 = -x920 + x924 + x929
    x935 = x5 * (x80 + x913 - x915 + x916)
    x936 = x566 * x594 - x606 * x9 + x81
    x937 = x83 * x913
    x938 = x7 * x917
    x939 = -x938
    x940 = x937 + x939
    x941 = x3 * x940
    x942 = x83 * x923
    x943 = x7 * x913
    x944 = -x943
    x945 = x942 + x944
    x946 = x4 * x945
    x947 = -x7 * x923
    x948 = x83 * x930 + x947
    x949 = -x3 * x945 + x4 * x948
    x950 = x5 * (-x942 + x943 + x948)
    x951 = -x941 + x946
    x952 = x5 * (-x937 + x938 + x945)
    x953 = -x7 * x936
    x954 = x83 * x917 + x953
    x955 = x566 * x644
    x956 = x655 * x9
    x957 = x159 + x590 + x955 - x956
    x958 = x3 * x957
    x959 = x566 * x641
    x960 = x644 * x9
    x961 = x180 + x570 + x959 - x960
    x962 = x4 * x961
    x963 = x192 + x566 * x648 + x585 - x641 * x9
    x964 = -x3 * x961 + x4 * x963
    x965 = x5 * (x201 + x602 - x959 + x960 + x963)
    x966 = -x958 + x962
    x967 = x5 * (x204 + x604 - x955 + x956 + x961)
    x968 = x206 + x566 * x655 + x605 - x664 * x9
    x969 = x83 * x945
    x970 = -x7 * x945 + x931
    x971 = x83 * x948 + x970
    x972 = x7 * x940
    x973 = x925 + x972
    x974 = x5 * (-x969 + x971 + x973)
    x975 = x924 - x972
    x976 = x969 + x975
    x977 = -x7 * x954 + x935
    x978 = x83 * x940 + x977
    x979 = x7 * x957
    x980 = x83 * x961
    x981 = -x7 * x961
    x982 = x83 * x963 + x981
    x983 = x5 * (x979 - x980 + x982)
    x984 = -x979
    x985 = x980 + x984
    x986 = -x7 * x968
    x987 = x83 * x957 + x986
    x988 = x707 * x9
    x989 = x566 * x710
    x990 = 2 * x659
    x991 = -x990
    x992 = 2 * x650
    x993 = x293 + x566 * x705 - x710 * x9 + x992
    x994 = x5 * (x300 + x988 - x989 + x991 + x993)
    x995 = x299 - x988 + x989 + x990
    x996 = 2 * x663
    x997 = x326 + x566 * x707 - x717 * x9 + x996
    x998 = -x7 * x976 + 2 * x950
    x999 = x83 * x971 + x998
    x1000 = -x7 * x978 + 2 * x952
    x1001 = x1000 + x83 * x976
    x1002 = -x7 * x985 + x965
    x1003 = x1002 + x83 * x982
    x1004 = -x7 * x987 + x967
    x1005 = x1004 + x83 * x985
    x1006 = -x7 * x995
    x1007 = x1006 + x83 * x993
    x1008 = -x7 * x997
    x1009 = x1008 + x83 * x995
    x1010 = x405 + x566 * x751 + 3 * x714 - x753 * x9
    x1011 = x408 + x566 * x753 + 3 * x716 - x754 * x9
    x1012 = 2 * x435
    x1013 = x411 * x757
    x1014 = x7 * x761
    x1015 = x1012 + x1013 - x1014
    x1016 = x1015 * x3
    x1017 = 2 * x415
    x1018 = x411 * x767
    x1019 = x7 * x757
    x1020 = x1017 + x1018 - x1019
    x1021 = x1020 * x4
    x1022 = x411 * x774 + 2 * x430 - x7 * x767
    x1023 = -x1020 * x3 + x1022 * x4
    x1024 = -x1016 + x1021
    x1025 = x7 * x783
    x1026 = x411 * x787
    x1027 = x411 * x789 - x7 * x787 + x775 + x813
    x1028 = -x1025 + x1026 + x768 + x811
    x1029 = x7 * x797
    x1030 = x411 * x801
    x1031 = 2 * x495
    x1032 = x411 * x803 + 2 * x486 - x7 * x801
    x1033 = -x1029 + x1030 + x1031
    x1034 = x411 * x842
    x1035 = x7 * x845
    x1036 = x1034 - x1035 + x590
    x1037 = x1036 * x3
    x1038 = x411 * x850
    x1039 = x7 * x842
    x1040 = x1038 - x1039 + x570
    x1041 = x1040 * x4
    x1042 = x411 * x857 + x585 - x7 * x850
    x1043 = -x1040 * x3 + x1042 * x4
    x1044 = -x1037 + x1041
    x1045 = x7 * x865
    x1046 = x411 * x868
    x1047 = x411 * x870 + x622 - x7 * x868 + x858
    x1048 = -x1045 + x1046 + x633 + x851
    x1049 = x7 * x877
    x1050 = x411 * x880
    x1051 = x411 * x882 + x650 - x7 * x880
    x1052 = -x1049 + x1050 + x659
    x1053 = x411 * x913
    x1054 = x1053 + x939
    x1055 = x1054 * x3
    x1056 = x411 * x923
    x1057 = x1056 + x944
    x1058 = x1057 * x4
    x1059 = x411 * x930 + x947
    x1060 = -x1057 * x3 + x1059 * x4
    x1061 = -x1055 + x1058
    x1062 = x411 * x945
    x1063 = x411 * x948 + x970
    x1064 = x1062 + x975
    x1065 = x411 * x961
    x1066 = x411 * x963 + x981
    x1067 = x1065 + x984
    x1068 = 2 * x590
    x1069 = x566 * x913
    x1070 = x9 * x917
    x1071 = x1068 + x1069 - x1070
    x1072 = x1071 * x3
    x1073 = 2 * x570
    x1074 = x566 * x923
    x1075 = x9 * x913
    x1076 = x1073 + x1074 - x1075
    x1077 = x1076 * x4
    x1078 = x566 * x930 + 2 * x585 - x9 * x923
    x1079 = -x1076 * x3 + x1078 * x4
    x1080 = x5 * (-x1073 - x1074 + x1075 + x1078)
    x1081 = -x1072 + x1077
    x1082 = x5 * (-x1068 - x1069 + x1070 + x1076)
    x1083 = x566 * x917 + 2 * x605 - x9 * x936
    x1084 = x1071 * x7
    x1085 = x1076 * x83
    x1086 = -x1076 * x7 + x1078 * x83
    x1087 = x5 * (x1084 - x1085 + x1086)
    x1088 = -x1084 + x1085
    x1089 = x1071 * x83 - x1083 * x7
    x1090 = x9 * x957
    x1091 = x566 * x961
    x1092 = x566 * x963 - x9 * x961 + x931 + x992
    x1093 = x5 * (x1090 - x1091 + x1092 + x925 + x991)
    x1094 = -x1090 + x1091 + x924 + x990
    x1095 = x566 * x957 - x9 * x968 + x935 + x996
    x1096 = x1080 + x1086 * x83 - x1088 * x7
    x1097 = x1082 + x1088 * x83 - x1089 * x7
    x1098 = x1092 * x83 - x1094 * x7
    x1099 = x1094 * x83 - x1095 * x7
    x1100 = x566 * x993 + 2 * x714 - x9 * x995 + 2 * x965
    x1101 = x566 * x995 + 2 * x716 - x9 * x997 + 2 * x967

    # 100 item(s)
    return numpy.array(
        [
            -x3
            * (
                -x3
                * (
                    -x3
                    * (
                        -x3 * (-x3 * (x29 * x4 - x3 * x82) + x31 * x4 + x81)
                        + x33 * x4
                        + x35 * (x22 - x28 + x30)
                    )
                    + x38 * x40
                    + x76 * (x24 - x27 + x32 + x80)
                )
                + x40 * x78
                + x5 * (-x25 + x54 + x79)
                + x76 * (-x73 + x75 + x79)
            )
            + x35 * (x39 - x55 - x59 + x70)
            + x40
            * (-x3 * x78 + x40 * x70 + x5 * (-x50 + x69 + x77) + x76 * (x72 - x74 + x77))
            + x76
            * (
                -x3 * x75
                + x3 * (x37 + x73)
                - x35 * (-x17 * x40 + x48 + x57 + x71)
                + x35 * (x40 * x61 + x63 + x66 - x71)
                + x40 * x72
                - x40 * x75
                - x58
                + x67
            ),
            -x3
            * (
                x140 * x40
                - x3
                * (
                    x106 * x40
                    - x3 * (x103 * x4 + x143 - x3 * (x101 * x4 - x145 * x3))
                    + x35 * (x102 + x94 - x97)
                )
                + x35 * (-x135 + x137 + x142)
                + x5 * (x120 + x142 - x95)
            )
            + x35 * (x107 - x121 - x123 + x132)
            + x35
            * (
                -x122
                + x128
                + x134 * x40
                - x137 * x3
                - x137 * x40
                + x3 * (x105 + x135)
                + x5 * (x113 + x125 * x40 + x126 - x133)
                - x5 * (x114 + x133 - x40 * x87 + x93)
            )
            + x40
            * (
                x132 * x40
                - x140 * x3
                + x35 * (x134 - x136 + x139)
                + x5 * (-x116 + x131 + x139)
            ),
            -x3
            * (
                x203 * x40
                - x3
                * (
                    x169 * x40
                    - x3 * (x166 * x4 + x206 - x3 * (x164 * x4 - x208 * x3))
                    + x35 * (x157 - x160 + x165)
                )
                + x35 * (-x198 + x200 + x205)
                + x5 * (-x158 + x183 + x205)
            )
            + x35 * (x170 - x184 - x186 + x195)
            + x35
            * (
                -x185
                + x191
                + x197 * x40
                - x200 * x3
                - x200 * x40
                + x3 * (x168 + x198)
                + x5 * (x176 + x188 * x40 + x189 - x196)
                - x5 * (-x150 * x40 + x156 + x177 + x196)
            )
            + x40
            * (
                x195 * x40
                - x203 * x3
                + x35 * (x197 - x199 + x202)
                + x5 * (-x179 + x194 + x202)
            ),
            -x3
            * (
                x245 * x40
                - x3 * (x238 * x40 + x247 - x3 * (x230 * x4 - x249 * x3))
                + x5 * (-x226 + x231 + x236)
                + x5 * (x231 - x237 + x241)
            )
            + x35 * (x221 + x239 - x242 + x244)
            + x40
            * (
                x244 * x40
                - x245 * x3
                + x5 * (x223 - x233 + x234)
                + x5 * (x234 - x240 + x243)
            )
            + x5
            * (x214 + x221 + x223 * x40 - x236 * x3 - x236 * x40 + x3 * (x226 + x232)),
            -x3
            * (
                x284 * x40
                - x3 * (x277 * x40 + x285 - x3 * (x269 * x4 - x287 * x3))
                + x5 * (-x265 + x270 + x275)
                + x5 * (x270 - x276 + x280)
            )
            + x35 * (x260 + x278 - x281 + x283)
            + x40
            * (
                x283 * x40
                - x284 * x3
                + x5 * (x262 - x272 + x273)
                + x5 * (x273 - x279 + x282)
            )
            + x5
            * (x254 + x260 + x262 * x40 - x275 * x3 - x275 * x40 + x3 * (x265 + x271)),
            -x3
            * (
                -x3 * (-x3 * (-x3 * x328 + x309 * x4) + x317 * x40 + x326)
                + x324 * x40
                + x5 * (-x305 + x310 + x315)
                + x5 * (x310 - x316 + x320)
            )
            + x35 * (x300 + x318 - x321 + x323)
            + x40
            * (
                -x3 * x324
                + x323 * x40
                + x5 * (x302 - x312 + x313)
                + x5 * (x313 - x319 + x322)
            )
            + x5
            * (x293 - x3 * x315 + x3 * (x305 + x311) + x300 + x302 * x40 - x315 * x40),
            -x3 * (-x3 * (-x3 * x350 + x333 * x40) + x346 * x40 + x348)
            + x35 * (x334 - x340 + x343)
            + x40 * (-x3 * x346 + x343 * x40 + x345),
            -x3 * (-x3 * (-x3 * x370 + x354 * x40) + x366 * x40 + x368)
            + x35 * (x355 - x360 + x363)
            + x40 * (-x3 * x366 + x363 * x40 + x365),
            -x3 * (-x3 * (-x3 * x388 + x374 * x40) + x385 * x40 + x386)
            + x35 * (x375 - x380 + x383)
            + x40 * (-x3 * x385 + x383 * x40 + x384),
            -x3 * (-x3 * (-x3 * x410 + x393 * x40) + x40 * x406 + x408)
            + x35 * (x394 - x400 + x403)
            + x40 * (-x3 * x406 + x40 * x403 + x405),
            -x3
            * (
                -x3
                * (
                    -x3 * (-x3 * (-x3 * x451 + x4 * x439) + x4 * x441 + x450)
                    + x35 * (x425 - x437 + x440)
                    + x4 * x443
                )
                + x40 * x448
                + x76 * (x427 - x436 + x442 + x449)
            )
            + x40 * (-x3 * x448 + x40 * x434 + x76 * (-x420 + x426 + x432 + x447))
            + x5 * (-x428 + x434 + x446)
            + x76 * (-x40 * x427 + x40 * x432 + x433 + x446),
            -x3
            * (
                -x3 * (-x3 * (-x3 * x475 + x4 * x467) + x4 * x469 + x474)
                + x35 * (x458 - x465 + x468)
                + x40 * x473
            )
            + x35 * (-x40 * x458 + x40 * x461 + x463 + x472)
            + x40 * (-x3 * x473 + x35 * (-x454 + x457 + x461) + x40 * x464)
            + x5 * (-x459 + x464 + x472),
            -x3
            * (
                -x3 * (-x3 * (-x3 * x500 + x4 * x491) + x4 * x493 + x499)
                + x35 * (x482 - x489 + x492)
                + x40 * x498
            )
            + x35 * (-x40 * x482 + x40 * x485 + x487 + x497)
            + x40 * (-x3 * x498 + x35 * (-x478 + x481 + x485) + x40 * x488)
            + x5 * (-x483 + x488 + x497),
            -x3 * (-x3 * (-x3 * x513 + x4 * x503) + x40 * x511 + x512)
            + x40 * (-x3 * x511 + x40 * x509 + x510)
            + x5 * (x504 - x508 + x509)
            + x5 * (x40 * x501 - x40 * x506 + x504 + x507),
            -x3 * (-x3 * (-x3 * x526 + x4 * x516) + x40 * x524 + x525)
            + x40 * (-x3 * x524 + x40 * x522 + x523)
            + x5 * (x517 - x521 + x522)
            + x5 * (x40 * x514 - x40 * x519 + x517 + x520),
            -x3 * (-x3 * (-x3 * x539 + x4 * x529) + x40 * x537 + x538)
            + x40 * (-x3 * x537 + x40 * x535 + x536)
            + x5 * (x530 - x534 + x535)
            + x5 * (x40 * x527 - x40 * x532 + x530 + x533),
            -x3 * (-x3 * x546 + x40 * x545) + x40 * (-x3 * x545 + x40 * x543) + x544,
            -x3 * (-x3 * x553 + x40 * x552) + x40 * (-x3 * x552 + x40 * x550) + x551,
            -x3 * (-x3 * x559 + x40 * x558) + x40 * (-x3 * x558 + x40 * x556) + x557,
            -x3 * (-x3 * x565 + x40 * x564) + x40 * (-x3 * x564 + x40 * x562) + x563,
            -x3
            * (
                -x3
                * (
                    -x3 * (-x3 * (-x3 * x606 + x4 * x594) + x4 * x596 + x605)
                    + x35 * (x580 - x592 + x595)
                    + x4 * x598
                )
                + x40 * x603
                + x76 * (x582 - x591 + x597 + x604)
            )
            + x40 * (-x3 * x603 + x40 * x589 + x76 * (-x575 + x581 + x587 + x602))
            + x5 * (-x583 + x589 + x601)
            + x76 * (-x40 * x582 + x40 * x587 + x588 + x601),
            -x3
            * (
                -x3 * (-x3 * (-x3 * x639 + x4 * x629) + x4 * x631 + x637)
                + x35 * (x617 - x625 + x630)
                + x40 * x636
            )
            + x35 * (-x40 * x617 + x40 * x621 + x623 + x635)
            + x40 * (-x3 * x636 + x35 * (-x611 + x616 + x621) + x40 * x624)
            + x5 * (-x618 + x624 + x635),
            -x3
            * (
                -x3 * (-x3 * (-x3 * x664 + x4 * x655) + x4 * x657 + x663)
                + x35 * (x646 - x653 + x656)
                + x40 * x662
            )
            + x35 * (-x40 * x646 + x40 * x649 + x651 + x661)
            + x40 * (-x3 * x662 + x35 * (-x642 + x645 + x649) + x40 * x652)
            + x5 * (-x647 + x652 + x661),
            -x3 * (-x3 * (-x3 * x685 + x4 * x670) + x40 * x681 + x683)
            + x40 * (-x3 * x681 + x40 * x678 + x680)
            + x5 * (x671 - x677 + x678)
            + x5 * (x40 * x666 - x40 * x675 + x671 + x676),
            -x3 * (-x3 * (-x3 * x704 + x4 * x691) + x40 * x701 + x702)
            + x40 * (-x3 * x701 + x40 * x699 + x700)
            + x5 * (x692 - x698 + x699)
            + x5 * (x40 * x687 - x40 * x696 + x692 + x697),
            -x3 * (-x3 * (-x3 * x717 + x4 * x707) + x40 * x715 + x716)
            + x40 * (-x3 * x715 + x40 * x713 + x714)
            + x5 * (x708 - x712 + x713)
            + x5 * (x40 * x705 - x40 * x710 + x708 + x711),
            -x3 * (-x3 * x728 + x40 * x726) + x40 * (-x3 * x726 + x40 * x720) + x724,
            -x3 * (-x3 * x738 + x40 * x736) + x40 * (-x3 * x736 + x40 * x731) + x734,
            -x3 * (-x3 * x747 + x40 * x745) + x40 * (-x3 * x745 + x40 * x742) + x743,
            -x3 * (-x3 * x754 + x40 * x753) + x40 * (-x3 * x753 + x40 * x751) + x752,
            -x3
            * (
                -x3 * (-x3 * (-x3 * x780 + x4 * x761) + x4 * x763 + x779)
                + x35 * (-x758 + x762 + x772)
                + x4 * x778
            )
            + x40 * (-x3 * x778 + x35 * (-x770 + x771 + x776) + x4 * x777)
            + x76 * (x764 + x769 - x773 + x777),
            -x3 * (-x3 * (-x3 * x794 + x4 * x783) + x4 * x792 + x793)
            + x35 * (x784 - x788 + x790)
            + x40 * (-x3 * x792 + x4 * x790 + x791),
            -x3 * (-x3 * (-x3 * x808 + x4 * x797) + x4 * x806 + x807)
            + x35 * (x798 - x802 + x804)
            + x40 * (-x3 * x806 + x4 * x804 + x805),
            -x3 * (-x3 * x818 + x4 * x816) + x40 * (-x3 * x816 + x4 * x814) + x815,
            -x3 * (-x3 * x824 + x4 * x823) + x40 * (-x3 * x823 + x4 * x821) + x822,
            -x3 * (-x3 * x830 + x4 * x829) + x40 * (-x3 * x829 + x4 * x827) + x828,
            -x3 * x832 + x40 * x831,
            -x3 * x836 + x40 * x834,
            -x3 * x838 + x40 * x837,
            -x3 * x840 + x40 * x839,
            -x3
            * (
                -x3 * (-x3 * (-x3 * x863 + x4 * x845) + x4 * x847 + x862)
                + x35 * (-x843 + x846 + x855)
                + x4 * x861
            )
            + x40 * (-x3 * x861 + x35 * (-x853 + x854 + x859) + x4 * x860)
            + x76 * (x848 + x852 - x856 + x860),
            -x3 * (-x3 * (-x3 * x875 + x4 * x865) + x4 * x873 + x874)
            + x35 * (x866 - x869 + x871)
            + x40 * (-x3 * x873 + x4 * x871 + x872),
            -x3 * (-x3 * (-x3 * x887 + x4 * x877) + x4 * x885 + x886)
            + x35 * (x878 - x881 + x883)
            + x40 * (-x3 * x885 + x4 * x883 + x884),
            -x3 * (-x3 * x892 + x4 * x891) + x40 * (-x3 * x891 + x4 * x889) + x890,
            -x3 * (-x3 * x897 + x4 * x896) + x40 * (-x3 * x896 + x4 * x894) + x895,
            -x3 * (-x3 * x902 + x4 * x901) + x40 * (-x3 * x901 + x4 * x899) + x900,
            -x3 * x904 + x40 * x903,
            -x3 * x906 + x40 * x905,
            -x3 * x908 + x40 * x907,
            -x3 * x910 + x40 * x909,
            -x3
            * (
                -x3 * (-x3 * (-x3 * x936 + x4 * x917) + x4 * x919 + x935)
                + x35 * (-x914 + x918 + x928)
                + x4 * x934
            )
            + x40 * (-x3 * x934 + x35 * (-x926 + x927 + x932) + x4 * x933)
            + x76 * (x920 + x925 - x929 + x933),
            -x3 * (-x3 * (-x3 * x954 + x4 * x940) + x4 * x951 + x952)
            + x35 * (x941 - x946 + x949)
            + x40 * (-x3 * x951 + x4 * x949 + x950),
            -x3 * (-x3 * (-x3 * x968 + x4 * x957) + x4 * x966 + x967)
            + x35 * (x958 - x962 + x964)
            + x40 * (-x3 * x966 + x4 * x964 + x965),
            -x3 * (-x3 * x978 + x4 * x976) + x40 * (-x3 * x976 + x4 * x971) + x974,
            -x3 * (-x3 * x987 + x4 * x985) + x40 * (-x3 * x985 + x4 * x982) + x983,
            -x3 * (-x3 * x997 + x4 * x995) + x40 * (-x3 * x995 + x4 * x993) + x994,
            -x1001 * x3 + x40 * x999,
            x1003 * x40 - x1005 * x3,
            x1007 * x40 - x1009 * x3,
            x1010 * x40 - x1011 * x3,
            -x3
            * (
                x1024 * x4
                - x3 * (x1015 * x4 - x3 * (x411 * x761 + 2 * x450 - x7 * x780))
                + x5 * (-x1012 - x1013 + x1014 + x1020)
            )
            + x35 * (x1016 - x1021 + x1023)
            + x4 * (x1023 * x4 - x1024 * x3 + x5 * (-x1017 - x1018 + x1019 + x1022)),
            -x3 * (x1028 * x4 - x3 * (x411 * x783 - x7 * x794 + x779 + x817))
            + x4 * (x1027 * x4 - x1028 * x3)
            + x5 * (x1025 - x1026 + x1027 + x769 + x812),
            -x3 * (x1033 * x4 - x3 * (x411 * x797 + 2 * x499 - x7 * x808))
            + x4 * (x1032 * x4 - x1033 * x3)
            + x5 * (x1029 - x1030 - x1031 + x1032),
            -x3 * (x411 * x816 + 2 * x512 - x7 * x818 + 2 * x793)
            + x4 * (x411 * x814 + 2 * x510 - x7 * x816 + 2 * x791),
            -x3 * (x411 * x823 - x7 * x824 + x807 + x835)
            + x4 * (x411 * x821 - x7 * x823 + x805 + x833),
            -x3 * (x411 * x829 + 2 * x538 - x7 * x830)
            + x4 * (x411 * x827 + 2 * x536 - x7 * x829),
            x411 * x831 + 2 * x544 - x7 * x832 + 3 * x815,
            x411 * x834 + 2 * x551 - x7 * x836 + 2 * x822,
            x411 * x837 + 2 * x557 - x7 * x838 + x828,
            x411 * x839 + 2 * x563 - x7 * x840,
            -x3
            * (
                x1044 * x4
                - x3 * (x1036 * x4 - x3 * (x411 * x845 + x605 - x7 * x863))
                + x5 * (-x1034 + x1035 + x1040 + x604)
            )
            + x35 * (x1037 - x1041 + x1043)
            + x4 * (x1043 * x4 - x1044 * x3 + x5 * (-x1038 + x1039 + x1042 + x602)),
            -x3 * (x1048 * x4 - x3 * (x411 * x865 + x637 - x7 * x875 + x862))
            + x4 * (x1047 * x4 - x1048 * x3)
            + x5 * (x1045 - x1046 + x1047 + x634 + x852),
            -x3 * (x1052 * x4 - x3 * (x411 * x877 + x663 - x7 * x887))
            + x4 * (x1051 * x4 - x1052 * x3)
            + x5 * (x1049 - x1050 + x1051 + x660),
            -x3 * (x411 * x891 + x683 - x7 * x892 + 2 * x874)
            + x4 * (x411 * x889 + x680 - x7 * x891 + 2 * x872),
            -x3 * (x411 * x896 - x7 * x897 + x702 + x886)
            + x4 * (x411 * x894 - x7 * x896 + x700 + x884),
            -x3 * (x411 * x901 - x7 * x902 + x716)
            + x4 * (x411 * x899 - x7 * x901 + x714),
            x411 * x903 - x7 * x904 + x724 + 3 * x890,
            x411 * x905 - x7 * x906 + x734 + 2 * x895,
            x411 * x907 - x7 * x908 + x743 + x900,
            x411 * x909 - x7 * x910 + x752,
            -x3
            * (
                x1061 * x4
                - x3 * (x1054 * x4 - x3 * (x411 * x917 + x953))
                + x5 * (-x1053 + x1057 + x938)
            )
            + x35 * (x1055 - x1058 + x1060)
            + x4 * (x1060 * x4 - x1061 * x3 + x5 * (-x1056 + x1059 + x943)),
            -x3 * (x1064 * x4 - x3 * (x411 * x940 + x977))
            + x4 * (x1063 * x4 - x1064 * x3)
            + x5 * (-x1062 + x1063 + x973),
            -x3 * (x1067 * x4 - x3 * (x411 * x957 + x986))
            + x4 * (x1066 * x4 - x1067 * x3)
            + x5 * (-x1065 + x1066 + x979),
            -x3 * (x1000 + x411 * x976) + x4 * (x411 * x971 + x998),
            -x3 * (x1004 + x411 * x985) + x4 * (x1002 + x411 * x982),
            -x3 * (x1008 + x411 * x995) + x4 * (x1006 + x411 * x993),
            -x1001 * x7 + x411 * x999 + 3 * x974,
            x1003 * x411 - x1005 * x7 + 2 * x983,
            x1007 * x411 - x1009 * x7 + x994,
            x1010 * x411 - x1011 * x7,
            -x3 * (x1081 * x4 + x1082 - x3 * (x1071 * x4 - x1083 * x3))
            + x35 * (x1072 - x1077 + x1079)
            + x4 * (x1079 * x4 + x1080 - x1081 * x3),
            x1087 - x3 * (x1088 * x4 - x1089 * x3) + x4 * (x1086 * x4 - x1088 * x3),
            x1093 - x3 * (x1094 * x4 - x1095 * x3) + x4 * (x1092 * x4 - x1094 * x3),
            x1096 * x4 - x1097 * x3,
            x1098 * x4 - x1099 * x3,
            x1100 * x4 - x1101 * x3,
            2 * x1087 + x1096 * x83 - x1097 * x7,
            x1093 + x1098 * x83 - x1099 * x7,
            x1100 * x83 - x1101 * x7,
            x1010 * x566 - x1011 * x9 + 2 * x752 + 3 * x994,
        ]
    )


def coulomb3d_34(a, A, b, B, C):
    """Cartesian (fg) 1-electron Coulomb integral.

    Generated code; DO NOT modify by hand!"""

    x0 = a + b
    x1 = x0 ** (-1.0)
    x2 = -x1 * (a * A[0] + b * B[0])
    x3 = -x2 - C[0]
    x4 = -x2 - B[0]
    x5 = -x1 * (a * A[1] + b * B[1])
    x6 = -x5 - C[1]
    x7 = -x1 * (a * A[2] + b * B[2])
    x8 = -x7 - C[2]
    x9 = x0 * (x3 ** 2 + x6 ** 2 + x8 ** 2)
    x10 = (
        2
        * numpy.pi
        * x1
        * numpy.exp(
            -a * b * x1 * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2)
        )
    )
    x11 = x10 * boys(3, x9)
    x12 = x11 * x4
    x13 = x10 * boys(4, x9)
    x14 = x13 * x3
    x15 = x10 * boys(2, x9)
    x16 = x15 * x4
    x17 = x11 * x3
    x18 = x16 - x17
    x19 = (2 * a + 2 * b) ** (-1.0)
    x20 = 2 * x19
    x21 = x20 * (-x12 + x14 + x18)
    x22 = x19 * (-x11 + x15)
    x23 = x18 * x4
    x24 = x12 - x14
    x25 = x24 * x3
    x26 = x22 + x23 - x25
    x27 = x26 * x4
    x28 = x19 * (x11 - x13)
    x29 = x24 * x4
    x30 = x13 * x4
    x31 = x10 * boys(5, x9)
    x32 = x3 * x31
    x33 = x30 - x32
    x34 = x3 * x33
    x35 = x28 + x29 - x34
    x36 = x3 * x35
    x37 = x21 + x27 - x36
    x38 = x37 * x4
    x39 = x20 * (x24 - x30 + x32)
    x40 = x35 * x4
    x41 = x19 * (x13 - x31)
    x42 = x33 * x4
    x43 = x31 * x4
    x44 = x10 * boys(6, x9)
    x45 = x3 * x44
    x46 = x43 - x45
    x47 = x3 * x46
    x48 = x41 + x42 - x47
    x49 = x3 * x48
    x50 = x39 + x40 - x49
    x51 = x3 * x50
    x52 = -x28
    x53 = 3 * x19
    x54 = x53 * (x26 - x29 + x34 + x52)
    x55 = -x51 + x54
    x56 = x38 + x55
    x57 = x3 * x56
    x58 = -x2 - A[0]
    x59 = x10 * boys(1, x9)
    x60 = x19 * (-x15 + x59)
    x61 = x4 * x59
    x62 = x15 * x3
    x63 = x61 - x62
    x64 = x4 * x63
    x65 = x18 * x3
    x66 = x60 + x64 - x65
    x67 = x4 * x66
    x68 = x26 * x3
    x69 = x20 * (-x16 + x17 + x63)
    x70 = -x68 + x69
    x71 = x67 + x70
    x72 = x4 * x71
    x73 = x3 * x37
    x74 = -x22
    x75 = x53 * (-x23 + x25 + x66 + x74)
    x76 = -x73 + x75
    x77 = x72 + x76
    x78 = x58 * x77
    x79 = -x21 + x36
    x80 = x19 * (-x27 + x71 + x79)
    x81 = 4 * x80
    x82 = x10 * boys(0, x9)
    x83 = x19 * (-x59 + x82)
    x84 = -x3 * x59 + x4 * x82
    x85 = -x3 * x63 + x4 * x84 + x83
    x86 = x20 * (-x61 + x62 + x84) - x3 * x66
    x87 = x4 * x85 + x86
    x88 = x68 - x69
    x89 = x19 * (-x67 + x87 + x88)
    x90 = -x60
    x91 = -x3 * x71 + x53 * (-x64 + x65 + x85 + x90)
    x92 = x4 * x87 + x91
    x93 = -x3 * x77 + x58 * x92 + 4 * x89
    x94 = x58 * x66
    x95 = x58 * x87 + x91
    x96 = x37 * x58
    x97 = x58 * x71
    x98 = x76 + x97
    x99 = 4 * x19
    x100 = x73 - x75
    x101 = -x57 + x78 + x81
    x102 = x51 - x54
    x103 = -x41
    x104 = x19 * (x31 - x44)
    x105 = x10 * boys(7, x9)
    x106 = -x5 - B[1]
    x107 = x106 * x11
    x108 = x13 * x6
    x109 = x106 * x15
    x110 = x11 * x6
    x111 = -x110
    x112 = x109 + x111
    x113 = x19 * (-x107 + x108 + x112)
    x114 = x112 * x4
    x115 = -x108
    x116 = x107 + x115
    x117 = x116 * x3
    x118 = x114 - x117
    x119 = x118 * x4
    x120 = x116 * x4
    x121 = x106 * x13
    x122 = x31 * x6
    x123 = -x122
    x124 = x121 + x123
    x125 = x124 * x3
    x126 = x120 - x125
    x127 = x126 * x3
    x128 = x113 + x119 - x127
    x129 = x128 * x4
    x130 = x19 * (x116 - x121 + x122)
    x131 = x126 * x4
    x132 = x124 * x4
    x133 = x106 * x31
    x134 = x44 * x6
    x135 = -x134
    x136 = x133 + x135
    x137 = x136 * x3
    x138 = x132 - x137
    x139 = x138 * x3
    x140 = x130 + x131 - x139
    x141 = x140 * x3
    x142 = x20 * (x118 - x120 + x125)
    x143 = -x141 + x142
    x144 = x129 + x143
    x145 = x144 * x3
    x146 = x106 * x59
    x147 = x15 * x6
    x148 = -x147
    x149 = x146 + x148
    x150 = x149 * x4
    x151 = x112 * x3
    x152 = x150 - x151
    x153 = x152 * x4
    x154 = x19 * (-x109 + x110 + x149)
    x155 = x118 * x3
    x156 = x154 - x155
    x157 = x153 + x156
    x158 = x157 * x4
    x159 = x128 * x3
    x160 = x20 * (-x114 + x117 + x152)
    x161 = -x159 + x160
    x162 = x158 + x161
    x163 = x162 * x58
    x164 = -x113
    x165 = x127 + x164
    x166 = x19 * (-x119 + x157 + x165)
    x167 = 3 * x166
    x168 = -x59 * x6
    x169 = x106 * x82 + x168
    x170 = -x149 * x3 + x169 * x4
    x171 = x19 * (-x146 + x147 + x169)
    x172 = -x152 * x3 + x171
    x173 = x170 * x4 + x172
    x174 = -x154
    x175 = x155 + x174
    x176 = x19 * (-x153 + x173 + x175)
    x177 = -x157 * x3 + x20 * (-x150 + x151 + x170)
    x178 = x173 * x4 + x177
    x179 = -x162 * x3 + 3 * x176 + x178 * x58
    x180 = x152 * x58
    x181 = x173 * x58 + x177
    x182 = x128 * x58
    x183 = x157 * x58
    x184 = x161 + x183
    x185 = x159 - x160
    x186 = -x145 + x163 + x167
    x187 = x141 - x142
    x188 = -x130
    x189 = x19 * (x124 - x133 + x134)
    x190 = -x105 * x6
    x191 = x106 * x44 + x190
    x192 = -x7 - B[2]
    x193 = x11 * x192
    x194 = x13 * x8
    x195 = x15 * x192
    x196 = x11 * x8
    x197 = -x196
    x198 = x195 + x197
    x199 = x19 * (-x193 + x194 + x198)
    x200 = x198 * x4
    x201 = -x194
    x202 = x193 + x201
    x203 = x202 * x3
    x204 = x200 - x203
    x205 = x204 * x4
    x206 = x202 * x4
    x207 = x13 * x192
    x208 = x31 * x8
    x209 = -x208
    x210 = x207 + x209
    x211 = x210 * x3
    x212 = x206 - x211
    x213 = x212 * x3
    x214 = x199 + x205 - x213
    x215 = x214 * x4
    x216 = x19 * (x202 - x207 + x208)
    x217 = x212 * x4
    x218 = x210 * x4
    x219 = x192 * x31
    x220 = x44 * x8
    x221 = -x220
    x222 = x219 + x221
    x223 = x222 * x3
    x224 = x218 - x223
    x225 = x224 * x3
    x226 = x216 + x217 - x225
    x227 = x226 * x3
    x228 = x20 * (x204 - x206 + x211)
    x229 = -x227 + x228
    x230 = x215 + x229
    x231 = x230 * x3
    x232 = x192 * x59
    x233 = x15 * x8
    x234 = -x233
    x235 = x232 + x234
    x236 = x235 * x4
    x237 = x198 * x3
    x238 = x236 - x237
    x239 = x238 * x4
    x240 = x19 * (-x195 + x196 + x235)
    x241 = x204 * x3
    x242 = x240 - x241
    x243 = x239 + x242
    x244 = x243 * x4
    x245 = x214 * x3
    x246 = x20 * (-x200 + x203 + x238)
    x247 = -x245 + x246
    x248 = x244 + x247
    x249 = x248 * x58
    x250 = -x199
    x251 = x213 + x250
    x252 = x19 * (-x205 + x243 + x251)
    x253 = 3 * x252
    x254 = -x59 * x8
    x255 = x192 * x82 + x254
    x256 = -x235 * x3 + x255 * x4
    x257 = x19 * (-x232 + x233 + x255)
    x258 = -x238 * x3 + x257
    x259 = x256 * x4 + x258
    x260 = -x240
    x261 = x241 + x260
    x262 = x19 * (-x239 + x259 + x261)
    x263 = x20 * (-x236 + x237 + x256) - x243 * x3
    x264 = x259 * x4 + x263
    x265 = -x248 * x3 + 3 * x262 + x264 * x58
    x266 = x238 * x58
    x267 = x259 * x58 + x263
    x268 = x214 * x58
    x269 = x243 * x58
    x270 = x247 + x269
    x271 = x245 - x246
    x272 = -x231 + x249 + x253
    x273 = x227 - x228
    x274 = -x216
    x275 = x19 * (x210 - x219 + x220)
    x276 = -x105 * x8
    x277 = x192 * x44 + x276
    x278 = x106 * x112
    x279 = x116 * x6
    x280 = x22 - x279
    x281 = x278 + x280
    x282 = x281 * x4
    x283 = x106 * x116
    x284 = x124 * x6
    x285 = x28 - x284
    x286 = x283 + x285
    x287 = x286 * x3
    x288 = x282 - x287
    x289 = x288 * x4
    x290 = x284 + x52
    x291 = x19 * (x281 - x283 + x290)
    x292 = x286 * x4
    x293 = x106 * x124
    x294 = x136 * x6
    x295 = -x294 + x41
    x296 = x293 + x295
    x297 = x296 * x3
    x298 = x292 - x297
    x299 = x298 * x3
    x300 = x291 - x299
    x301 = x289 + x300
    x302 = x3 * x301
    x303 = x106 * x149
    x304 = x112 * x6
    x305 = -x304 + x60
    x306 = x303 + x305
    x307 = x306 * x4
    x308 = x281 * x3
    x309 = -x308
    x310 = x307 + x309
    x311 = x310 * x4
    x312 = x279 + x74
    x313 = x19 * (-x278 + x306 + x312)
    x314 = x288 * x3
    x315 = x313 - x314
    x316 = x311 + x315
    x317 = x316 * x58
    x318 = x19 * (-x282 + x287 + x310)
    x319 = 2 * x318
    x320 = -x149 * x6 + x83
    x321 = x106 * x169 + x320
    x322 = -x3 * x306
    x323 = x321 * x4 + x322
    x324 = x19 * (-x307 + x308 + x323)
    x325 = x304 + x90
    x326 = x19 * (-x303 + x321 + x325)
    x327 = -x3 * x310 + x326
    x328 = x323 * x4 + x327
    x329 = -x3 * x316 + 2 * x324 + x328 * x58
    x330 = x306 * x58
    x331 = x323 * x58 + x327
    x332 = x288 * x58
    x333 = x310 * x58
    x334 = x315 + x333
    x335 = -x313
    x336 = x314 + x335
    x337 = -x302 + x317 + x319
    x338 = -x291
    x339 = x299 + x338
    x340 = x103 + x294
    x341 = x19 * (x286 - x293 + x340)
    x342 = x104 - x191 * x6
    x343 = x106 * x136 + x342
    x344 = x106 * x198
    x345 = x202 * x6
    x346 = -x345
    x347 = x344 + x346
    x348 = x347 * x4
    x349 = x106 * x202
    x350 = x210 * x6
    x351 = -x350
    x352 = x349 + x351
    x353 = x3 * x352
    x354 = x348 - x353
    x355 = x354 * x4
    x356 = x19 * (x347 - x349 + x350)
    x357 = x352 * x4
    x358 = x106 * x210
    x359 = x222 * x6
    x360 = -x359
    x361 = x358 + x360
    x362 = x3 * x361
    x363 = x357 - x362
    x364 = x3 * x363
    x365 = x356 - x364
    x366 = x355 + x365
    x367 = x3 * x366
    x368 = x106 * x235
    x369 = x198 * x6
    x370 = -x369
    x371 = x368 + x370
    x372 = x371 * x4
    x373 = x3 * x347
    x374 = -x373
    x375 = x372 + x374
    x376 = x375 * x4
    x377 = x19 * (-x344 + x345 + x371)
    x378 = x3 * x354
    x379 = x377 - x378
    x380 = x376 + x379
    x381 = x380 * x58
    x382 = x19 * (-x348 + x353 + x375)
    x383 = 2 * x382
    x384 = -x235 * x6
    x385 = x106 * x255 + x384
    x386 = -x3 * x371
    x387 = x385 * x4 + x386
    x388 = x19 * (-x372 + x373 + x387)
    x389 = x19 * (-x368 + x369 + x385)
    x390 = -x3 * x375 + x389
    x391 = x387 * x4 + x390
    x392 = -x3 * x380 + 2 * x388 + x391 * x58
    x393 = x371 * x58
    x394 = x387 * x58 + x390
    x395 = x354 * x58
    x396 = x375 * x58
    x397 = x379 + x396
    x398 = -x377
    x399 = x378 + x398
    x400 = -x367 + x381 + x383
    x401 = -x356
    x402 = x364 + x401
    x403 = x19 * (x352 - x358 + x359)
    x404 = -x277 * x6
    x405 = x106 * x222 + x404
    x406 = x192 * x198
    x407 = x202 * x8
    x408 = x22 - x407
    x409 = x406 + x408
    x410 = x4 * x409
    x411 = x192 * x202
    x412 = x210 * x8
    x413 = x28 - x412
    x414 = x411 + x413
    x415 = x3 * x414
    x416 = x410 - x415
    x417 = x4 * x416
    x418 = x412 + x52
    x419 = x19 * (x409 - x411 + x418)
    x420 = x4 * x414
    x421 = x192 * x210
    x422 = x222 * x8
    x423 = x41 - x422
    x424 = x421 + x423
    x425 = x3 * x424
    x426 = x420 - x425
    x427 = x3 * x426
    x428 = x419 - x427
    x429 = x417 + x428
    x430 = x3 * x429
    x431 = x192 * x235
    x432 = x198 * x8
    x433 = -x432 + x60
    x434 = x431 + x433
    x435 = x4 * x434
    x436 = x3 * x409
    x437 = -x436
    x438 = x435 + x437
    x439 = x4 * x438
    x440 = x407 + x74
    x441 = x19 * (-x406 + x434 + x440)
    x442 = x3 * x416
    x443 = x441 - x442
    x444 = x439 + x443
    x445 = x444 * x58
    x446 = x19 * (-x410 + x415 + x438)
    x447 = 2 * x446
    x448 = -x235 * x8 + x83
    x449 = x192 * x255 + x448
    x450 = -x3 * x434
    x451 = x4 * x449 + x450
    x452 = x19 * (-x435 + x436 + x451)
    x453 = x432 + x90
    x454 = x19 * (-x431 + x449 + x453)
    x455 = -x3 * x438 + x454
    x456 = x4 * x451 + x455
    x457 = -x3 * x444 + 2 * x452 + x456 * x58
    x458 = x434 * x58
    x459 = x451 * x58 + x455
    x460 = x416 * x58
    x461 = x438 * x58
    x462 = x443 + x461
    x463 = -x441
    x464 = x442 + x463
    x465 = -x430 + x445 + x447
    x466 = -x419
    x467 = x427 + x466
    x468 = x103 + x422
    x469 = x19 * (x414 - x421 + x468)
    x470 = x104 - x277 * x8
    x471 = x192 * x222 + x470
    x472 = x106 * x306
    x473 = 2 * x171 - x306 * x6
    x474 = x106 * x321 + x473
    x475 = x281 * x6
    x476 = 2 * x154
    x477 = x475 - x476
    x478 = x19 * (-x472 + x474 + x477)
    x479 = x106 * x281
    x480 = -x475 + x476
    x481 = x472 + x480
    x482 = x286 * x6
    x483 = 2 * x113
    x484 = x482 - x483
    x485 = x19 * (-x479 + x481 + x484)
    x486 = -x485
    x487 = -x3 * x481
    x488 = x474 * x58 + x487
    x489 = -x482 + x483
    x490 = x479 + x489
    x491 = x490 * x58
    x492 = x106 * x286
    x493 = x296 * x6
    x494 = 2 * x130
    x495 = -x493 + x494
    x496 = x492 + x495
    x497 = x3 * x496
    x498 = -x497
    x499 = x481 * x58
    x500 = x3 * x490
    x501 = -x500
    x502 = x499 + x501
    x503 = x4 * x490
    x504 = x498 + x503
    x505 = x3 * x504
    x506 = x4 * x481
    x507 = x501 + x506
    x508 = x507 * x58
    x509 = x4 * x474 + x487
    x510 = -x3 * x507 + x478 + x509 * x58
    x511 = x485 - x505 + x508
    x512 = x493 - x494
    x513 = x19 * (x490 - x492 + x512)
    x514 = 2 * x189 - x343 * x6
    x515 = x106 * x296 + x514
    x516 = x106 * x371
    x517 = x257 - x371 * x6
    x518 = x106 * x385 + x517
    x519 = x347 * x6
    x520 = x260 + x519
    x521 = x19 * (-x516 + x518 + x520)
    x522 = x106 * x347
    x523 = x240 - x519
    x524 = x516 + x523
    x525 = x352 * x6
    x526 = x250 + x525
    x527 = x19 * (-x522 + x524 + x526)
    x528 = -x527
    x529 = -x3 * x524
    x530 = x518 * x58 + x529
    x531 = x199 - x525
    x532 = x522 + x531
    x533 = x532 * x58
    x534 = x106 * x352
    x535 = x361 * x6
    x536 = x216 - x535
    x537 = x534 + x536
    x538 = x3 * x537
    x539 = -x538
    x540 = x524 * x58
    x541 = x3 * x532
    x542 = -x541
    x543 = x540 + x542
    x544 = x4 * x532
    x545 = x539 + x544
    x546 = x3 * x545
    x547 = x4 * x524
    x548 = x542 + x547
    x549 = x548 * x58
    x550 = x4 * x518 + x529
    x551 = -x3 * x548 + x521 + x550 * x58
    x552 = x527 - x546 + x549
    x553 = x274 + x535
    x554 = x19 * (x532 - x534 + x553)
    x555 = x275 - x405 * x6
    x556 = x106 * x361 + x555
    x557 = x409 * x6
    x558 = x106 * x434
    x559 = -x434 * x6
    x560 = x106 * x449 + x559
    x561 = x19 * (x557 - x558 + x560)
    x562 = x414 * x6
    x563 = x106 * x409
    x564 = -x557
    x565 = x558 + x564
    x566 = x19 * (x562 - x563 + x565)
    x567 = -x566
    x568 = -x3 * x565
    x569 = x560 * x58 + x568
    x570 = -x562
    x571 = x563 + x570
    x572 = x571 * x58
    x573 = x106 * x414
    x574 = x424 * x6
    x575 = -x574
    x576 = x573 + x575
    x577 = x3 * x576
    x578 = -x577
    x579 = x565 * x58
    x580 = x3 * x571
    x581 = -x580
    x582 = x579 + x581
    x583 = x4 * x571
    x584 = x578 + x583
    x585 = x3 * x584
    x586 = x4 * x565
    x587 = x581 + x586
    x588 = x58 * x587
    x589 = x4 * x560 + x568
    x590 = -x3 * x587 + x561 + x58 * x589
    x591 = x566 - x585 + x588
    x592 = x19 * (x571 - x573 + x574)
    x593 = -x471 * x6
    x594 = x106 * x424 + x593
    x595 = x192 * x434
    x596 = 2 * x257 - x434 * x8
    x597 = x192 * x449 + x596
    x598 = x409 * x8
    x599 = 2 * x240
    x600 = x598 - x599
    x601 = x19 * (-x595 + x597 + x600)
    x602 = x192 * x409
    x603 = -x598 + x599
    x604 = x595 + x603
    x605 = x414 * x8
    x606 = 2 * x199
    x607 = x605 - x606
    x608 = x19 * (-x602 + x604 + x607)
    x609 = -x608
    x610 = -x3 * x604
    x611 = x58 * x597 + x610
    x612 = -x605 + x606
    x613 = x602 + x612
    x614 = x58 * x613
    x615 = x192 * x414
    x616 = x424 * x8
    x617 = 2 * x216
    x618 = -x616 + x617
    x619 = x615 + x618
    x620 = x3 * x619
    x621 = -x620
    x622 = x58 * x604
    x623 = x3 * x613
    x624 = -x623
    x625 = x622 + x624
    x626 = x4 * x613
    x627 = x621 + x626
    x628 = x3 * x627
    x629 = x4 * x604
    x630 = x624 + x629
    x631 = x58 * x630
    x632 = x4 * x597 + x610
    x633 = -x3 * x630 + x58 * x632 + x601
    x634 = x608 - x628 + x631
    x635 = x616 - x617
    x636 = x19 * (x613 - x615 + x635)
    x637 = 2 * x275 - x471 * x8
    x638 = x192 * x424 + x637
    x639 = x106 * x490
    x640 = x496 * x6
    x641 = 3 * x291
    x642 = -x640 + x641
    x643 = x639 + x642
    x644 = x3 * x643
    x645 = x106 * x481
    x646 = x490 * x6
    x647 = 3 * x313
    x648 = -x646 + x647
    x649 = x645 + x648
    x650 = x58 * x649
    x651 = 3 * x326 - x481 * x6
    x652 = x106 * x474 + x651
    x653 = -x3 * x649 + x58 * x652
    x654 = x646 - x647
    x655 = x19 * (-x645 + x652 + x654)
    x656 = -x644 + x650
    x657 = x640 - x641
    x658 = x19 * (-x639 + x649 + x657)
    x659 = 3 * x341 - x515 * x6
    x660 = x106 * x496 + x659
    x661 = x106 * x532
    x662 = x537 * x6
    x663 = 2 * x356
    x664 = -x662 + x663
    x665 = x661 + x664
    x666 = x3 * x665
    x667 = x106 * x524
    x668 = x532 * x6
    x669 = 2 * x377
    x670 = -x668 + x669
    x671 = x667 + x670
    x672 = x58 * x671
    x673 = 2 * x389 - x524 * x6
    x674 = x106 * x518 + x673
    x675 = -x3 * x671 + x58 * x674
    x676 = x668 - x669
    x677 = x19 * (-x667 + x674 + x676)
    x678 = -x666 + x672
    x679 = x662 - x663
    x680 = x19 * (-x661 + x671 + x679)
    x681 = 2 * x403 - x556 * x6
    x682 = x106 * x537 + x681
    x683 = x106 * x571
    x684 = x576 * x6
    x685 = x419 - x684
    x686 = x683 + x685
    x687 = x3 * x686
    x688 = x106 * x565
    x689 = x571 * x6
    x690 = x441 - x689
    x691 = x688 + x690
    x692 = x58 * x691
    x693 = x454 - x565 * x6
    x694 = x106 * x560 + x693
    x695 = -x3 * x691 + x58 * x694
    x696 = x463 + x689
    x697 = x19 * (-x688 + x694 + x696)
    x698 = -x687 + x692
    x699 = x466 + x684
    x700 = x19 * (-x683 + x691 + x699)
    x701 = x469 - x594 * x6
    x702 = x106 * x576 + x701
    x703 = x106 * x613
    x704 = x6 * x619
    x705 = -x704
    x706 = x703 + x705
    x707 = x3 * x706
    x708 = x106 * x604
    x709 = x6 * x613
    x710 = -x709
    x711 = x708 + x710
    x712 = x58 * x711
    x713 = -x6 * x604
    x714 = x106 * x597 + x713
    x715 = -x3 * x711 + x58 * x714
    x716 = x19 * (-x708 + x709 + x714)
    x717 = -x707 + x712
    x718 = x19 * (-x703 + x704 + x711)
    x719 = -x6 * x638
    x720 = x106 * x619 + x719
    x721 = x192 * x613
    x722 = x619 * x8
    x723 = 3 * x419
    x724 = -x722 + x723
    x725 = x721 + x724
    x726 = x3 * x725
    x727 = x192 * x604
    x728 = x613 * x8
    x729 = 3 * x441
    x730 = -x728 + x729
    x731 = x727 + x730
    x732 = x58 * x731
    x733 = 3 * x454 - x604 * x8
    x734 = x192 * x597 + x733
    x735 = -x3 * x731 + x58 * x734
    x736 = x728 - x729
    x737 = x19 * (-x727 + x734 + x736)
    x738 = -x726 + x732
    x739 = x722 - x723
    x740 = x19 * (-x721 + x731 + x739)
    x741 = 3 * x469 - x638 * x8
    x742 = x192 * x619 + x741
    x743 = -x5 - A[1]
    x744 = x11 * x743
    x745 = x115 + x744
    x746 = x3 * x745
    x747 = x15 * x743
    x748 = x111 + x747
    x749 = x4 * x748
    x750 = x59 * x743
    x751 = x148 + x750
    x752 = x4 * x751
    x753 = x3 * x748
    x754 = x752 - x753
    x755 = x20 * (x746 - x749 + x754)
    x756 = x19 * (x110 - x747 + x751)
    x757 = x4 * x754
    x758 = -x746 + x749
    x759 = x3 * x758
    x760 = x756 + x757 - x759
    x761 = x4 * x760
    x762 = x19 * (x108 - x744 + x748)
    x763 = x4 * x758
    x764 = x4 * x745
    x765 = x13 * x743
    x766 = x123 + x765
    x767 = x3 * x766
    x768 = x764 - x767
    x769 = x3 * x768
    x770 = x762 + x763 - x769
    x771 = x3 * x770
    x772 = x755 + x761 - x771
    x773 = x4 * x772
    x774 = x168 + x743 * x82
    x775 = -x3 * x751 + x4 * x774
    x776 = x19 * (x147 - x750 + x774)
    x777 = -x3 * x754 + x4 * x775 + x776
    x778 = x20 * (-x752 + x753 + x775) - x3 * x760 + x4 * x777
    x779 = -x756
    x780 = -x3 * x772 + x53 * (-x757 + x759 + x777 + x779)
    x781 = x4 * x778 + x780
    x782 = x20 * (x758 - x764 + x767)
    x783 = x4 * x770
    x784 = x19 * (x122 + x745 - x765)
    x785 = x4 * x768
    x786 = x4 * x766
    x787 = x31 * x743
    x788 = x135 + x787
    x789 = x3 * x788
    x790 = x786 - x789
    x791 = x3 * x790
    x792 = x784 + x785 - x791
    x793 = x3 * x792
    x794 = x782 + x783 - x793
    x795 = x3 * x794
    x796 = -x762
    x797 = x53 * (x760 - x763 + x769 + x796)
    x798 = x795 - x797
    x799 = x773 - x795 + x797
    x800 = -x784
    x801 = x19 * (x134 + x766 - x787)
    x802 = x190 + x44 * x743
    x803 = x112 * x743
    x804 = x149 * x743
    x805 = x305 + x804
    x806 = x19 * (x312 - x803 + x805)
    x807 = x4 * x805
    x808 = x280 + x803
    x809 = x3 * x808
    x810 = x807 - x809
    x811 = x4 * x810
    x812 = x4 * x808
    x813 = x116 * x743
    x814 = x285 + x813
    x815 = x3 * x814
    x816 = x812 - x815
    x817 = x3 * x816
    x818 = x806 + x811 - x817
    x819 = x4 * x818
    x820 = x169 * x743 + x320
    x821 = x19 * (x325 - x804 + x820)
    x822 = -x3 * x805 + x4 * x820
    x823 = -x3 * x810 + x4 * x822 + x821
    x824 = x20 * (-x807 + x809 + x822) - x3 * x818
    x825 = x4 * x823 + x824
    x826 = x19 * (x290 + x808 - x813)
    x827 = x4 * x816
    x828 = x4 * x814
    x829 = x124 * x743
    x830 = x295 + x829
    x831 = x3 * x830
    x832 = x828 - x831
    x833 = x3 * x832
    x834 = x826 + x827 - x833
    x835 = x3 * x834
    x836 = x20 * (x810 - x812 + x815)
    x837 = x835 - x836
    x838 = x819 - x835 + x836
    x839 = x19 * (x340 + x814 - x829)
    x840 = x136 * x743 + x342
    x841 = x198 * x743
    x842 = x235 * x743
    x843 = x370 + x842
    x844 = x19 * (x345 - x841 + x843)
    x845 = x4 * x843
    x846 = x346 + x841
    x847 = x3 * x846
    x848 = x845 - x847
    x849 = x4 * x848
    x850 = x4 * x846
    x851 = x202 * x743
    x852 = x351 + x851
    x853 = x3 * x852
    x854 = x850 - x853
    x855 = x3 * x854
    x856 = x844 + x849 - x855
    x857 = x4 * x856
    x858 = x255 * x743 + x384
    x859 = x19 * (x369 - x842 + x858)
    x860 = -x3 * x843 + x4 * x858
    x861 = -x3 * x848 + x4 * x860 + x859
    x862 = x20 * (-x845 + x847 + x860) - x3 * x856
    x863 = x4 * x861 + x862
    x864 = x19 * (x350 + x846 - x851)
    x865 = x4 * x854
    x866 = x4 * x852
    x867 = x210 * x743
    x868 = x360 + x867
    x869 = x3 * x868
    x870 = x866 - x869
    x871 = x3 * x870
    x872 = x864 + x865 - x871
    x873 = x3 * x872
    x874 = x20 * (x848 - x850 + x853)
    x875 = x873 - x874
    x876 = -x844
    x877 = x857 - x873 + x874
    x878 = -x864
    x879 = x19 * (x359 + x852 - x867)
    x880 = x222 * x743 + x404
    x881 = x306 * x743
    x882 = x480 + x881
    x883 = x4 * x882
    x884 = x281 * x743
    x885 = x489 + x884
    x886 = x3 * x885
    x887 = x883 - x886
    x888 = x4 * x887
    x889 = x321 * x743 + x473
    x890 = -x3 * x882 + x4 * x889
    x891 = x19 * (x477 - x881 + x889)
    x892 = -x3 * x887 + x891
    x893 = x4 * x890 + x892
    x894 = x4 * x885
    x895 = x286 * x743
    x896 = x495 + x895
    x897 = x3 * x896
    x898 = x894 - x897
    x899 = x3 * x898
    x900 = x19 * (x484 + x882 - x884)
    x901 = x899 - x900
    x902 = x888 - x899 + x900
    x903 = x19 * (x512 + x885 - x895)
    x904 = x296 * x743 + x514
    x905 = x371 * x743
    x906 = x523 + x905
    x907 = x4 * x906
    x908 = x347 * x743
    x909 = x531 + x908
    x910 = x3 * x909
    x911 = x907 - x910
    x912 = x4 * x911
    x913 = x385 * x743 + x517
    x914 = -x3 * x906 + x4 * x913
    x915 = x19 * (x520 - x905 + x913)
    x916 = -x3 * x911 + x915
    x917 = x4 * x914 + x916
    x918 = x4 * x909
    x919 = x352 * x743
    x920 = x536 + x919
    x921 = x3 * x920
    x922 = x918 - x921
    x923 = x3 * x922
    x924 = x19 * (x526 + x906 - x908)
    x925 = x923 - x924
    x926 = x912 - x923 + x924
    x927 = x19 * (x553 + x909 - x919)
    x928 = x361 * x743 + x555
    x929 = x434 * x743
    x930 = x564 + x929
    x931 = x4 * x930
    x932 = x409 * x743
    x933 = x570 + x932
    x934 = x3 * x933
    x935 = x931 - x934
    x936 = x4 * x935
    x937 = x449 * x743 + x559
    x938 = -x3 * x930 + x4 * x937
    x939 = x19 * (x557 - x929 + x937)
    x940 = -x3 * x935 + x939
    x941 = x4 * x938 + x940
    x942 = x4 * x933
    x943 = x414 * x743
    x944 = x575 + x943
    x945 = x3 * x944
    x946 = x942 - x945
    x947 = x3 * x946
    x948 = x19 * (x562 + x930 - x932)
    x949 = -x948
    x950 = x947 + x949
    x951 = x936 - x947 + x948
    x952 = x19 * (x574 + x933 - x943)
    x953 = x424 * x743 + x593
    x954 = x474 * x743 + x651
    x955 = x490 * x743
    x956 = x642 + x955
    x957 = x3 * x956
    x958 = x481 * x743
    x959 = x648 + x958
    x960 = -x3 * x959
    x961 = x4 * x959
    x962 = x4 * x954 + x960
    x963 = x19 * (x654 + x954 - x958)
    x964 = -x957 + x961
    x965 = x19 * (x657 - x955 + x959)
    x966 = x496 * x743 + x659
    x967 = x518 * x743 + x673
    x968 = x532 * x743
    x969 = x664 + x968
    x970 = x3 * x969
    x971 = x524 * x743
    x972 = x670 + x971
    x973 = -x3 * x972
    x974 = x4 * x972
    x975 = x4 * x967 + x973
    x976 = x19 * (x676 + x967 - x971)
    x977 = -x970 + x974
    x978 = x19 * (x679 - x968 + x972)
    x979 = x537 * x743 + x681
    x980 = x560 * x743 + x693
    x981 = x571 * x743
    x982 = x685 + x981
    x983 = x3 * x982
    x984 = x565 * x743
    x985 = x690 + x984
    x986 = -x3 * x985
    x987 = x4 * x985
    x988 = x4 * x980 + x986
    x989 = x19 * (x696 + x980 - x984)
    x990 = -x983 + x987
    x991 = x19 * (x699 - x981 + x985)
    x992 = x576 * x743 + x701
    x993 = x597 * x743 + x713
    x994 = x613 * x743
    x995 = x705 + x994
    x996 = x3 * x995
    x997 = x604 * x743
    x998 = x710 + x997
    x999 = -x3 * x998
    x1000 = x4 * x998
    x1001 = x4 * x993 + x999
    x1002 = x19 * (x709 + x993 - x997)
    x1003 = x1000 - x996
    x1004 = x19 * (x704 - x994 + x998)
    x1005 = x619 * x743 + x719
    x1006 = x6 * x643
    x1007 = x649 * x743
    x1008 = 4 * x485
    x1009 = 4 * x478 - x6 * x649 + x652 * x743
    x1010 = x19 * (x1006 - x1007 - x1008 + x1009)
    x1011 = -x1006 + x1007 + x1008
    x1012 = 4 * x513 - x6 * x660 + x643 * x743
    x1013 = x6 * x665
    x1014 = x671 * x743
    x1015 = 3 * x527
    x1016 = 3 * x521 - x6 * x671 + x674 * x743
    x1017 = x19 * (x1013 - x1014 - x1015 + x1016)
    x1018 = -x1013 + x1014 + x1015
    x1019 = 3 * x554 - x6 * x682 + x665 * x743
    x1020 = x6 * x686
    x1021 = x691 * x743
    x1022 = 2 * x566
    x1023 = 2 * x561 - x6 * x691 + x694 * x743
    x1024 = x19 * (x1020 - x1021 - x1022 + x1023)
    x1025 = -x1020 + x1021 + x1022
    x1026 = 2 * x592 - x6 * x702 + x686 * x743
    x1027 = x6 * x706
    x1028 = x711 * x743
    x1029 = -x6 * x711 + x601 + x714 * x743
    x1030 = x19 * (x1027 - x1028 + x1029 + x609)
    x1031 = -x1027 + x1028 + x608
    x1032 = -x6 * x720 + x636 + x706 * x743
    x1033 = x6 * x725
    x1034 = x731 * x743
    x1035 = -x6 * x731 + x734 * x743
    x1036 = x19 * (x1033 - x1034 + x1035)
    x1037 = -x1033 + x1034
    x1038 = -x6 * x742 + x725 * x743
    x1039 = -x7 - A[2]
    x1040 = x1039 * x11
    x1041 = x1040 + x201
    x1042 = x1041 * x3
    x1043 = x1039 * x15
    x1044 = x1043 + x197
    x1045 = x1044 * x4
    x1046 = x1039 * x59
    x1047 = x1046 + x234
    x1048 = x1047 * x4
    x1049 = x1044 * x3
    x1050 = x1048 - x1049
    x1051 = x20 * (x1042 - x1045 + x1050)
    x1052 = x19 * (-x1043 + x1047 + x196)
    x1053 = x1050 * x4
    x1054 = -x1042 + x1045
    x1055 = x1054 * x3
    x1056 = x1052 + x1053 - x1055
    x1057 = x1056 * x4
    x1058 = x19 * (-x1040 + x1044 + x194)
    x1059 = x1054 * x4
    x1060 = x1041 * x4
    x1061 = x1039 * x13
    x1062 = x1061 + x209
    x1063 = x1062 * x3
    x1064 = x1060 - x1063
    x1065 = x1064 * x3
    x1066 = x1058 + x1059 - x1065
    x1067 = x1066 * x3
    x1068 = x1051 + x1057 - x1067
    x1069 = x1068 * x4
    x1070 = x1039 * x82 + x254
    x1071 = -x1047 * x3 + x1070 * x4
    x1072 = x19 * (-x1046 + x1070 + x233)
    x1073 = -x1050 * x3 + x1071 * x4 + x1072
    x1074 = -x1056 * x3 + x1073 * x4 + x20 * (-x1048 + x1049 + x1071)
    x1075 = -x1052
    x1076 = -x1068 * x3 + x53 * (-x1053 + x1055 + x1073 + x1075)
    x1077 = x1074 * x4 + x1076
    x1078 = x20 * (x1054 - x1060 + x1063)
    x1079 = x1066 * x4
    x1080 = x19 * (x1041 - x1061 + x208)
    x1081 = x1064 * x4
    x1082 = x1062 * x4
    x1083 = x1039 * x31
    x1084 = x1083 + x221
    x1085 = x1084 * x3
    x1086 = x1082 - x1085
    x1087 = x1086 * x3
    x1088 = x1080 + x1081 - x1087
    x1089 = x1088 * x3
    x1090 = x1078 + x1079 - x1089
    x1091 = x1090 * x3
    x1092 = -x1058
    x1093 = x53 * (x1056 - x1059 + x1065 + x1092)
    x1094 = x1091 - x1093
    x1095 = x1069 - x1091 + x1093
    x1096 = -x1080
    x1097 = x19 * (x1062 - x1083 + x220)
    x1098 = x1039 * x44 + x276
    x1099 = x1041 * x6
    x1100 = x1044 * x106
    x1101 = x1047 * x106
    x1102 = x1044 * x6
    x1103 = -x1102
    x1104 = x1101 + x1103
    x1105 = x19 * (x1099 - x1100 + x1104)
    x1106 = x1104 * x4
    x1107 = -x1099
    x1108 = x1100 + x1107
    x1109 = x1108 * x3
    x1110 = x1106 - x1109
    x1111 = x1110 * x4
    x1112 = x1108 * x4
    x1113 = x1041 * x106
    x1114 = x1062 * x6
    x1115 = -x1114
    x1116 = x1113 + x1115
    x1117 = x1116 * x3
    x1118 = x1112 - x1117
    x1119 = x1118 * x3
    x1120 = x1105 + x1111 - x1119
    x1121 = x1120 * x4
    x1122 = -x1047 * x6
    x1123 = x106 * x1070 + x1122
    x1124 = x19 * (-x1101 + x1102 + x1123)
    x1125 = -x1104 * x3 + x1123 * x4
    x1126 = -x1110 * x3 + x1124 + x1125 * x4
    x1127 = -x1120 * x3 + x20 * (-x1106 + x1109 + x1125)
    x1128 = x1126 * x4 + x1127
    x1129 = x19 * (x1108 - x1113 + x1114)
    x1130 = x1118 * x4
    x1131 = x1116 * x4
    x1132 = x106 * x1062
    x1133 = x1084 * x6
    x1134 = -x1133
    x1135 = x1132 + x1134
    x1136 = x1135 * x3
    x1137 = x1131 - x1136
    x1138 = x1137 * x3
    x1139 = x1129 + x1130 - x1138
    x1140 = x1139 * x3
    x1141 = x20 * (x1110 - x1112 + x1117)
    x1142 = x1140 - x1141
    x1143 = -x1105
    x1144 = x1121 - x1140 + x1141
    x1145 = -x1129
    x1146 = x19 * (x1116 - x1132 + x1133)
    x1147 = -x1098 * x6
    x1148 = x106 * x1084 + x1147
    x1149 = x1039 * x198
    x1150 = x1039 * x235
    x1151 = x1150 + x433
    x1152 = x19 * (-x1149 + x1151 + x440)
    x1153 = x1151 * x4
    x1154 = x1149 + x408
    x1155 = x1154 * x3
    x1156 = x1153 - x1155
    x1157 = x1156 * x4
    x1158 = x1154 * x4
    x1159 = x1039 * x202
    x1160 = x1159 + x413
    x1161 = x1160 * x3
    x1162 = x1158 - x1161
    x1163 = x1162 * x3
    x1164 = x1152 + x1157 - x1163
    x1165 = x1164 * x4
    x1166 = x1039 * x255 + x448
    x1167 = x19 * (-x1150 + x1166 + x453)
    x1168 = -x1151 * x3 + x1166 * x4
    x1169 = -x1156 * x3 + x1167 + x1168 * x4
    x1170 = -x1164 * x3 + x20 * (-x1153 + x1155 + x1168)
    x1171 = x1169 * x4 + x1170
    x1172 = x19 * (x1154 - x1159 + x418)
    x1173 = x1162 * x4
    x1174 = x1160 * x4
    x1175 = x1039 * x210
    x1176 = x1175 + x423
    x1177 = x1176 * x3
    x1178 = x1174 - x1177
    x1179 = x1178 * x3
    x1180 = x1172 + x1173 - x1179
    x1181 = x1180 * x3
    x1182 = x20 * (x1156 - x1158 + x1161)
    x1183 = x1181 - x1182
    x1184 = -x1152
    x1185 = x1165 - x1181 + x1182
    x1186 = -x1172
    x1187 = x19 * (x1160 - x1175 + x468)
    x1188 = x1039 * x222 + x470
    x1189 = x106 * x1104
    x1190 = x1108 * x6
    x1191 = x1052 - x1190
    x1192 = x1189 + x1191
    x1193 = x1192 * x4
    x1194 = x106 * x1108
    x1195 = x1116 * x6
    x1196 = x1058 - x1195
    x1197 = x1194 + x1196
    x1198 = x1197 * x3
    x1199 = x1193 - x1198
    x1200 = x1199 * x4
    x1201 = x1072 - x1104 * x6
    x1202 = x106 * x1123 + x1201
    x1203 = -x1192 * x3 + x1202 * x4
    x1204 = x1075 + x1190
    x1205 = x19 * (-x1189 + x1202 + x1204)
    x1206 = -x1199 * x3 + x1205
    x1207 = x1203 * x4 + x1206
    x1208 = x1197 * x4
    x1209 = x106 * x1116
    x1210 = x1135 * x6
    x1211 = x1080 - x1210
    x1212 = x1209 + x1211
    x1213 = x1212 * x3
    x1214 = x1208 - x1213
    x1215 = x1214 * x3
    x1216 = x1092 + x1195
    x1217 = x19 * (x1192 - x1194 + x1216)
    x1218 = -x1217
    x1219 = x1215 + x1218
    x1220 = x1200 - x1215 + x1217
    x1221 = x1096 + x1210
    x1222 = x19 * (x1197 - x1209 + x1221)
    x1223 = x1097 - x1148 * x6
    x1224 = x106 * x1135 + x1223
    x1225 = x106 * x1151
    x1226 = x1154 * x6
    x1227 = -x1226
    x1228 = x1225 + x1227
    x1229 = x1228 * x4
    x1230 = x106 * x1154
    x1231 = x1160 * x6
    x1232 = -x1231
    x1233 = x1230 + x1232
    x1234 = x1233 * x3
    x1235 = x1229 - x1234
    x1236 = x1235 * x4
    x1237 = -x1151 * x6
    x1238 = x106 * x1166 + x1237
    x1239 = -x1228 * x3 + x1238 * x4
    x1240 = x19 * (-x1225 + x1226 + x1238)
    x1241 = -x1235 * x3 + x1240
    x1242 = x1239 * x4 + x1241
    x1243 = x1233 * x4
    x1244 = x106 * x1160
    x1245 = x1176 * x6
    x1246 = -x1245
    x1247 = x1244 + x1246
    x1248 = x1247 * x3
    x1249 = x1243 - x1248
    x1250 = x1249 * x3
    x1251 = x19 * (x1228 - x1230 + x1231)
    x1252 = -x1251
    x1253 = x1250 + x1252
    x1254 = x1236 - x1250 + x1251
    x1255 = x19 * (x1233 - x1244 + x1245)
    x1256 = -x1188 * x6
    x1257 = x106 * x1176 + x1256
    x1258 = x1039 * x434
    x1259 = x1258 + x603
    x1260 = x1259 * x4
    x1261 = x1039 * x409
    x1262 = x1261 + x612
    x1263 = x1262 * x3
    x1264 = x1260 - x1263
    x1265 = x1264 * x4
    x1266 = x1039 * x449 + x596
    x1267 = -x1259 * x3 + x1266 * x4
    x1268 = x19 * (-x1258 + x1266 + x600)
    x1269 = -x1264 * x3 + x1268
    x1270 = x1267 * x4 + x1269
    x1271 = x1262 * x4
    x1272 = x1039 * x414
    x1273 = x1272 + x618
    x1274 = x1273 * x3
    x1275 = x1271 - x1274
    x1276 = x1275 * x3
    x1277 = x19 * (x1259 - x1261 + x607)
    x1278 = -x1277
    x1279 = x1276 + x1278
    x1280 = x1265 - x1276 + x1277
    x1281 = x19 * (x1262 - x1272 + x635)
    x1282 = x1039 * x424 + x637
    x1283 = 2 * x1124 - x1192 * x6
    x1284 = x106 * x1202 + x1283
    x1285 = x106 * x1197
    x1286 = x1212 * x6
    x1287 = 2 * x1129
    x1288 = -x1286 + x1287
    x1289 = x1285 + x1288
    x1290 = x1289 * x3
    x1291 = x106 * x1192
    x1292 = x1197 * x6
    x1293 = 2 * x1105
    x1294 = -x1292 + x1293
    x1295 = x1291 + x1294
    x1296 = -x1295 * x3
    x1297 = x1295 * x4
    x1298 = x1284 * x4 + x1296
    x1299 = x1292 - x1293
    x1300 = x19 * (x1284 - x1291 + x1299)
    x1301 = -x1290 + x1297
    x1302 = x1286 - x1287
    x1303 = x19 * (-x1285 + x1295 + x1302)
    x1304 = 2 * x1146 - x1224 * x6
    x1305 = x106 * x1212 + x1304
    x1306 = x1167 - x1228 * x6
    x1307 = x106 * x1238 + x1306
    x1308 = x106 * x1233
    x1309 = x1247 * x6
    x1310 = x1172 - x1309
    x1311 = x1308 + x1310
    x1312 = x1311 * x3
    x1313 = x106 * x1228
    x1314 = x1233 * x6
    x1315 = x1152 - x1314
    x1316 = x1313 + x1315
    x1317 = -x1316 * x3
    x1318 = x1316 * x4
    x1319 = x1307 * x4 + x1317
    x1320 = x1184 + x1314
    x1321 = x19 * (x1307 - x1313 + x1320)
    x1322 = -x1312 + x1318
    x1323 = x1186 + x1309
    x1324 = x19 * (-x1308 + x1316 + x1323)
    x1325 = x1187 - x1257 * x6
    x1326 = x106 * x1247 + x1325
    x1327 = -x1259 * x6
    x1328 = x106 * x1266 + x1327
    x1329 = x106 * x1262
    x1330 = x1273 * x6
    x1331 = -x1330
    x1332 = x1329 + x1331
    x1333 = x1332 * x3
    x1334 = x106 * x1259
    x1335 = x1262 * x6
    x1336 = -x1335
    x1337 = x1334 + x1336
    x1338 = -x1337 * x3
    x1339 = x1337 * x4
    x1340 = x1328 * x4 + x1338
    x1341 = x19 * (x1328 - x1334 + x1335)
    x1342 = -x1333 + x1339
    x1343 = x19 * (-x1329 + x1330 + x1337)
    x1344 = -x1282 * x6
    x1345 = x106 * x1273 + x1344
    x1346 = x1039 * x597 + x733
    x1347 = x1039 * x613
    x1348 = x1347 + x724
    x1349 = x1348 * x3
    x1350 = x1039 * x604
    x1351 = x1350 + x730
    x1352 = -x1351 * x3
    x1353 = x1351 * x4
    x1354 = x1346 * x4 + x1352
    x1355 = x19 * (x1346 - x1350 + x736)
    x1356 = -x1349 + x1353
    x1357 = x19 * (-x1347 + x1351 + x739)
    x1358 = x1039 * x619 + x741
    x1359 = x106 * x1295
    x1360 = 3 * x1205 - x1295 * x6
    x1361 = x106 * x1284 + x1360
    x1362 = x1289 * x6
    x1363 = 3 * x1217
    x1364 = x1362 - x1363
    x1365 = x19 * (-x1359 + x1361 + x1364)
    x1366 = -x1362 + x1363
    x1367 = x1359 + x1366
    x1368 = 3 * x1222 - x1305 * x6
    x1369 = x106 * x1289 + x1368
    x1370 = x106 * x1316
    x1371 = 2 * x1240 - x1316 * x6
    x1372 = x106 * x1307 + x1371
    x1373 = x1311 * x6
    x1374 = 2 * x1251
    x1375 = x1373 - x1374
    x1376 = x19 * (-x1370 + x1372 + x1375)
    x1377 = -x1373 + x1374
    x1378 = x1370 + x1377
    x1379 = 2 * x1255 - x1326 * x6
    x1380 = x106 * x1311 + x1379
    x1381 = x106 * x1337
    x1382 = x1268 - x1337 * x6
    x1383 = x106 * x1328 + x1382
    x1384 = x1332 * x6
    x1385 = x1278 + x1384
    x1386 = x19 * (-x1381 + x1383 + x1385)
    x1387 = x1277 - x1384
    x1388 = x1381 + x1387
    x1389 = x1281 - x1345 * x6
    x1390 = x106 * x1332 + x1389
    x1391 = x1348 * x6
    x1392 = x106 * x1351
    x1393 = -x1351 * x6
    x1394 = x106 * x1346 + x1393
    x1395 = x19 * (x1391 - x1392 + x1394)
    x1396 = -x1391
    x1397 = x1392 + x1396
    x1398 = -x1358 * x6
    x1399 = x106 * x1348 + x1398
    x1400 = x725 * x8
    x1401 = x1039 * x731
    x1402 = 4 * x608
    x1403 = x1039 * x734 + 4 * x601 - x731 * x8
    x1404 = x19 * (x1400 - x1401 - x1402 + x1403)
    x1405 = -x1400 + x1401 + x1402
    x1406 = x1039 * x725 + 4 * x636 - x742 * x8
    x1407 = x6 * x766
    x1408 = x743 * x745
    x1409 = x743 * x748
    x1410 = x6 * x745
    x1411 = x1409 - x1410 + x22
    x1412 = x19 * (x1407 - x1408 + x1411 + x52)
    x1413 = x1411 * x4
    x1414 = -x1407 + x1408 + x28
    x1415 = x1414 * x3
    x1416 = x1413 - x1415
    x1417 = x1416 * x4
    x1418 = x1414 * x4
    x1419 = x743 * x766
    x1420 = x6 * x788
    x1421 = x1419 - x1420 + x41
    x1422 = x1421 * x3
    x1423 = x1418 - x1422
    x1424 = x1423 * x3
    x1425 = x1412 + x1417 - x1424
    x1426 = x1425 * x3
    x1427 = x743 * x751
    x1428 = x6 * x748
    x1429 = x1427 - x1428 + x60
    x1430 = x19 * (-x1409 + x1410 + x1429 + x74)
    x1431 = x1429 * x4
    x1432 = x1411 * x3
    x1433 = x1431 - x1432
    x1434 = x1433 * x4
    x1435 = x1416 * x3
    x1436 = x1430 + x1434 - x1435
    x1437 = x1436 * x4
    x1438 = x20 * (-x1413 + x1415 + x1433)
    x1439 = -x6 * x751 + x743 * x774 + x83
    x1440 = -x1429 * x3 + x1439 * x4
    x1441 = x19 * (-x1427 + x1428 + x1439 + x90)
    x1442 = -x1433 * x3 + x1440 * x4 + x1441
    x1443 = -x1436 * x3 + x1442 * x4 + x20 * (-x1431 + x1432 + x1440)
    x1444 = -x1430
    x1445 = -x1426 + x1437 + x1438
    x1446 = -x1412
    x1447 = x19 * (x103 + x1414 - x1419 + x1420)
    x1448 = x104 - x6 * x802 + x743 * x788
    x1449 = x743 * x808
    x1450 = x6 * x814
    x1451 = x113 + x1449 - x1450 + x762
    x1452 = x1451 * x4
    x1453 = x743 * x814
    x1454 = x6 * x830
    x1455 = x130 + x1453 - x1454 + x784
    x1456 = x1455 * x3
    x1457 = x1452 - x1456
    x1458 = x1457 * x3
    x1459 = x743 * x805
    x1460 = x6 * x808
    x1461 = x1459 - x1460 + x154 + x756
    x1462 = x19 * (-x1449 + x1450 + x1461 + x164 + x796)
    x1463 = x1461 * x4
    x1464 = x1451 * x3
    x1465 = x1463 - x1464
    x1466 = x1465 * x4
    x1467 = x171 - x6 * x805 + x743 * x820 + x776
    x1468 = x19 * (-x1459 + x1460 + x1467 + x174 + x779)
    x1469 = -x1461 * x3 + x1467 * x4
    x1470 = -x1465 * x3 + x1468 + x1469 * x4
    x1471 = -x1458 + x1462 + x1466
    x1472 = x19 * (x1451 - x1453 + x1454 + x188 + x800)
    x1473 = x189 - x6 * x840 + x743 * x830 + x801
    x1474 = x743 * x846
    x1475 = x6 * x852
    x1476 = x1474 - x1475 + x199
    x1477 = x1476 * x4
    x1478 = x743 * x852
    x1479 = x6 * x868
    x1480 = x1478 - x1479 + x216
    x1481 = x1480 * x3
    x1482 = x1477 - x1481
    x1483 = x1482 * x3
    x1484 = x743 * x843
    x1485 = x6 * x846
    x1486 = x1484 - x1485 + x240
    x1487 = x19 * (-x1474 + x1475 + x1486 + x250)
    x1488 = -x1487
    x1489 = x1486 * x4
    x1490 = x1476 * x3
    x1491 = x1489 - x1490
    x1492 = x1491 * x4
    x1493 = x257 - x6 * x843 + x743 * x858
    x1494 = x19 * (-x1484 + x1485 + x1493 + x260)
    x1495 = -x1486 * x3 + x1493 * x4
    x1496 = -x1491 * x3 + x1494 + x1495 * x4
    x1497 = -x1483 + x1487 + x1492
    x1498 = x19 * (x1476 - x1478 + x1479 + x274)
    x1499 = x275 - x6 * x880 + x743 * x868
    x1500 = 2 * x826
    x1501 = x743 * x885
    x1502 = x6 * x896
    x1503 = x1500 + x1501 - x1502 + x291
    x1504 = x1503 * x3
    x1505 = 2 * x806
    x1506 = x743 * x882
    x1507 = x6 * x885
    x1508 = x1505 + x1506 - x1507 + x313
    x1509 = x1508 * x4
    x1510 = 2 * x821
    x1511 = x1510 + x326 - x6 * x882 + x743 * x889
    x1512 = -x1508 * x3 + x1511 * x4
    x1513 = -x1505
    x1514 = x19 * (-x1506 + x1507 + x1511 + x1513 + x335)
    x1515 = -x1504 + x1509
    x1516 = -x1500
    x1517 = x19 * (-x1501 + x1502 + x1508 + x1516 + x338)
    x1518 = 2 * x839
    x1519 = x1518 + x341 - x6 * x904 + x743 * x896
    x1520 = x743 * x909
    x1521 = x6 * x920
    x1522 = x1520 - x1521 + x356 + x864
    x1523 = x1522 * x3
    x1524 = x743 * x906
    x1525 = x6 * x909
    x1526 = x1524 - x1525 + x377 + x844
    x1527 = x1526 * x4
    x1528 = x389 - x6 * x906 + x743 * x913 + x859
    x1529 = -x1526 * x3 + x1528 * x4
    x1530 = x19 * (-x1524 + x1525 + x1528 + x398 + x876)
    x1531 = -x1523 + x1527
    x1532 = x19 * (-x1520 + x1521 + x1526 + x401 + x878)
    x1533 = x403 - x6 * x928 + x743 * x920 + x879
    x1534 = x743 * x933
    x1535 = x6 * x944
    x1536 = x1534 - x1535 + x419
    x1537 = x1536 * x3
    x1538 = x743 * x930
    x1539 = x6 * x933
    x1540 = x1538 - x1539 + x441
    x1541 = x1540 * x4
    x1542 = x454 - x6 * x930 + x743 * x937
    x1543 = -x1540 * x3 + x1542 * x4
    x1544 = x19 * (-x1538 + x1539 + x1542 + x463)
    x1545 = -x1537 + x1541
    x1546 = x19 * (-x1534 + x1535 + x1540 + x466)
    x1547 = x469 - x6 * x953 + x743 * x944
    x1548 = x6 * x956
    x1549 = x743 * x959
    x1550 = 3 * x900
    x1551 = x478 - x6 * x959 + x743 * x954 + 3 * x891
    x1552 = x19 * (x1548 - x1549 - x1550 + x1551 + x486)
    x1553 = -x1548 + x1549 + x1550 + x485
    x1554 = x513 - x6 * x966 + x743 * x956 + 3 * x903
    x1555 = x6 * x969
    x1556 = x743 * x972
    x1557 = 2 * x924
    x1558 = -x1557
    x1559 = 2 * x915
    x1560 = x1559 + x521 - x6 * x972 + x743 * x967
    x1561 = x19 * (x1555 - x1556 + x1558 + x1560 + x528)
    x1562 = -x1555 + x1556 + x1557 + x527
    x1563 = 2 * x927
    x1564 = x1563 + x554 - x6 * x979 + x743 * x969
    x1565 = x6 * x982
    x1566 = x743 * x985
    x1567 = x561 - x6 * x985 + x743 * x980 + x939
    x1568 = x19 * (x1565 - x1566 + x1567 + x567 + x949)
    x1569 = -x1565 + x1566 + x566 + x948
    x1570 = x592 - x6 * x992 + x743 * x982 + x952
    x1571 = x6 * x995
    x1572 = x743 * x998
    x1573 = -x6 * x998 + x601 + x743 * x993
    x1574 = x19 * (x1571 - x1572 + x1573 + x609)
    x1575 = -x1571 + x1572 + x608
    x1576 = -x1005 * x6 + x636 + x743 * x995
    x1577 = x1009 * x743 - x1011 * x6 + x655 + 4 * x963
    x1578 = x1011 * x743 - x1012 * x6 + x658 + 4 * x965
    x1579 = x1016 * x743 - x1018 * x6 + x677 + 3 * x976
    x1580 = x1018 * x743 - x1019 * x6 + x680 + 3 * x978
    x1581 = 2 * x989
    x1582 = x1023 * x743 - x1025 * x6 + x1581 + x697
    x1583 = 2 * x991
    x1584 = x1025 * x743 - x1026 * x6 + x1583 + x700
    x1585 = x1002 + x1029 * x743 - x1031 * x6 + x716
    x1586 = x1004 + x1031 * x743 - x1032 * x6 + x718
    x1587 = x1035 * x743 - x1037 * x6 + x737
    x1588 = x1037 * x743 - x1038 * x6 + x740
    x1589 = x1041 * x743
    x1590 = x1044 * x743
    x1591 = x1107 + x1590
    x1592 = x19 * (x1114 - x1589 + x1591)
    x1593 = x1591 * x4
    x1594 = x1115 + x1589
    x1595 = x1594 * x3
    x1596 = x1593 - x1595
    x1597 = x1596 * x4
    x1598 = x1594 * x4
    x1599 = x1062 * x743
    x1600 = x1134 + x1599
    x1601 = x1600 * x3
    x1602 = x1598 - x1601
    x1603 = x1602 * x3
    x1604 = x1592 + x1597 - x1603
    x1605 = x1604 * x3
    x1606 = x1047 * x743
    x1607 = x1103 + x1606
    x1608 = x19 * (x1099 - x1590 + x1607)
    x1609 = x1607 * x4
    x1610 = x1591 * x3
    x1611 = x1609 - x1610
    x1612 = x1611 * x4
    x1613 = x1596 * x3
    x1614 = x1608 + x1612 - x1613
    x1615 = x1614 * x4
    x1616 = x20 * (-x1593 + x1595 + x1611)
    x1617 = x1070 * x743 + x1122
    x1618 = -x1607 * x3 + x1617 * x4
    x1619 = x19 * (x1102 - x1606 + x1617)
    x1620 = -x1611 * x3 + x1618 * x4 + x1619
    x1621 = -x1614 * x3 + x1620 * x4 + x20 * (-x1609 + x1610 + x1618)
    x1622 = -x1608
    x1623 = -x1605 + x1615 + x1616
    x1624 = -x1592
    x1625 = x19 * (x1133 + x1594 - x1599)
    x1626 = x1084 * x743 + x1147
    x1627 = x1108 * x743
    x1628 = x1196 + x1627
    x1629 = x1628 * x4
    x1630 = x1116 * x743
    x1631 = x1211 + x1630
    x1632 = x1631 * x3
    x1633 = x1629 - x1632
    x1634 = x1633 * x3
    x1635 = x1104 * x743
    x1636 = x1191 + x1635
    x1637 = x19 * (x1216 - x1627 + x1636)
    x1638 = x1636 * x4
    x1639 = x1628 * x3
    x1640 = x1638 - x1639
    x1641 = x1640 * x4
    x1642 = x1123 * x743 + x1201
    x1643 = x19 * (x1204 - x1635 + x1642)
    x1644 = -x1636 * x3 + x1642 * x4
    x1645 = -x1640 * x3 + x1643 + x1644 * x4
    x1646 = -x1634 + x1637 + x1641
    x1647 = x19 * (x1221 + x1628 - x1630)
    x1648 = x1135 * x743 + x1223
    x1649 = x1154 * x743
    x1650 = x1232 + x1649
    x1651 = x1650 * x4
    x1652 = x1160 * x743
    x1653 = x1246 + x1652
    x1654 = x1653 * x3
    x1655 = x1651 - x1654
    x1656 = x1655 * x3
    x1657 = x1151 * x743
    x1658 = x1227 + x1657
    x1659 = x19 * (x1231 - x1649 + x1658)
    x1660 = -x1659
    x1661 = x1658 * x4
    x1662 = x1650 * x3
    x1663 = x1661 - x1662
    x1664 = x1663 * x4
    x1665 = x1166 * x743 + x1237
    x1666 = x19 * (x1226 - x1657 + x1665)
    x1667 = -x1658 * x3 + x1665 * x4
    x1668 = -x1663 * x3 + x1666 + x1667 * x4
    x1669 = -x1656 + x1659 + x1664
    x1670 = x19 * (x1245 + x1650 - x1652)
    x1671 = x1176 * x743 + x1256
    x1672 = x1197 * x743
    x1673 = x1288 + x1672
    x1674 = x1673 * x3
    x1675 = x1192 * x743
    x1676 = x1294 + x1675
    x1677 = x1676 * x4
    x1678 = x1202 * x743 + x1283
    x1679 = -x1676 * x3 + x1678 * x4
    x1680 = x19 * (x1299 - x1675 + x1678)
    x1681 = -x1674 + x1677
    x1682 = x19 * (x1302 - x1672 + x1676)
    x1683 = x1212 * x743 + x1304
    x1684 = x1233 * x743
    x1685 = x1310 + x1684
    x1686 = x1685 * x3
    x1687 = x1228 * x743
    x1688 = x1315 + x1687
    x1689 = x1688 * x4
    x1690 = x1238 * x743 + x1306
    x1691 = -x1688 * x3 + x1690 * x4
    x1692 = x19 * (x1320 - x1687 + x1690)
    x1693 = -x1686 + x1689
    x1694 = x19 * (x1323 - x1684 + x1688)
    x1695 = x1247 * x743 + x1325
    x1696 = x1262 * x743
    x1697 = x1331 + x1696
    x1698 = x1697 * x3
    x1699 = x1259 * x743
    x1700 = x1336 + x1699
    x1701 = x1700 * x4
    x1702 = x1266 * x743 + x1327
    x1703 = -x1700 * x3 + x1702 * x4
    x1704 = x19 * (x1335 - x1699 + x1702)
    x1705 = -x1698 + x1701
    x1706 = x19 * (x1330 - x1696 + x1700)
    x1707 = x1273 * x743 + x1344
    x1708 = x1295 * x743
    x1709 = x1284 * x743 + x1360
    x1710 = x19 * (x1364 - x1708 + x1709)
    x1711 = x1366 + x1708
    x1712 = x1289 * x743 + x1368
    x1713 = x1316 * x743
    x1714 = x1307 * x743 + x1371
    x1715 = x19 * (x1375 - x1713 + x1714)
    x1716 = x1377 + x1713
    x1717 = x1311 * x743 + x1379
    x1718 = x1337 * x743
    x1719 = x1328 * x743 + x1382
    x1720 = x19 * (x1385 - x1718 + x1719)
    x1721 = x1387 + x1718
    x1722 = x1332 * x743 + x1389
    x1723 = x1351 * x743
    x1724 = x1346 * x743 + x1393
    x1725 = x19 * (x1391 - x1723 + x1724)
    x1726 = x1396 + x1723
    x1727 = x1348 * x743 + x1398
    x1728 = 4 * x1300 + x1361 * x743 - x1367 * x6
    x1729 = 4 * x1303 + x1367 * x743 - x1369 * x6
    x1730 = 3 * x1321 + x1372 * x743 - x1378 * x6
    x1731 = 3 * x1324 + x1378 * x743 - x1380 * x6
    x1732 = 2 * x1341 + x1383 * x743 - x1388 * x6
    x1733 = 2 * x1343 + x1388 * x743 - x1390 * x6
    x1734 = x1355 + x1394 * x743 - x1397 * x6
    x1735 = x1357 + x1397 * x743 - x1399 * x6
    x1736 = x1403 * x743 - x1405 * x6
    x1737 = x1405 * x743 - x1406 * x6
    x1738 = x1062 * x8
    x1739 = x1039 * x1041
    x1740 = x1039 * x1044
    x1741 = x1041 * x8
    x1742 = x1740 - x1741 + x22
    x1743 = x19 * (x1738 - x1739 + x1742 + x52)
    x1744 = x1742 * x4
    x1745 = -x1738 + x1739 + x28
    x1746 = x1745 * x3
    x1747 = x1744 - x1746
    x1748 = x1747 * x4
    x1749 = x1745 * x4
    x1750 = x1039 * x1062
    x1751 = x1084 * x8
    x1752 = x1750 - x1751 + x41
    x1753 = x1752 * x3
    x1754 = x1749 - x1753
    x1755 = x1754 * x3
    x1756 = x1743 + x1748 - x1755
    x1757 = x1756 * x3
    x1758 = x1039 * x1047
    x1759 = x1044 * x8
    x1760 = x1758 - x1759 + x60
    x1761 = x19 * (-x1740 + x1741 + x1760 + x74)
    x1762 = x1760 * x4
    x1763 = x1742 * x3
    x1764 = x1762 - x1763
    x1765 = x1764 * x4
    x1766 = x1747 * x3
    x1767 = x1761 + x1765 - x1766
    x1768 = x1767 * x4
    x1769 = x20 * (-x1744 + x1746 + x1764)
    x1770 = x1039 * x1070 - x1047 * x8 + x83
    x1771 = -x1760 * x3 + x1770 * x4
    x1772 = x19 * (-x1758 + x1759 + x1770 + x90)
    x1773 = -x1764 * x3 + x1771 * x4 + x1772
    x1774 = -x1767 * x3 + x1773 * x4 + x20 * (-x1762 + x1763 + x1771)
    x1775 = -x1761
    x1776 = -x1757 + x1768 + x1769
    x1777 = -x1743
    x1778 = x19 * (x103 + x1745 - x1750 + x1751)
    x1779 = x1039 * x1084 + x104 - x1098 * x8
    x1780 = x106 * x1742
    x1781 = x1745 * x6
    x1782 = -x1781
    x1783 = x1780 + x1782
    x1784 = x1783 * x4
    x1785 = x106 * x1745
    x1786 = x1752 * x6
    x1787 = -x1786
    x1788 = x1785 + x1787
    x1789 = x1788 * x3
    x1790 = x1784 - x1789
    x1791 = x1790 * x3
    x1792 = x106 * x1760
    x1793 = x1742 * x6
    x1794 = -x1793
    x1795 = x1792 + x1794
    x1796 = x19 * (-x1780 + x1781 + x1795)
    x1797 = x1795 * x4
    x1798 = x1783 * x3
    x1799 = x1797 - x1798
    x1800 = x1799 * x4
    x1801 = -x1760 * x6
    x1802 = x106 * x1770 + x1801
    x1803 = x19 * (-x1792 + x1793 + x1802)
    x1804 = -x1795 * x3 + x1802 * x4
    x1805 = -x1799 * x3 + x1803 + x1804 * x4
    x1806 = -x1791 + x1796 + x1800
    x1807 = x19 * (x1783 - x1785 + x1786)
    x1808 = -x1779 * x6
    x1809 = x106 * x1752 + x1808
    x1810 = x1039 * x1154
    x1811 = x1160 * x8
    x1812 = x1058 + x1810 - x1811 + x199
    x1813 = x1812 * x4
    x1814 = x1039 * x1160
    x1815 = x1176 * x8
    x1816 = x1080 + x1814 - x1815 + x216
    x1817 = x1816 * x3
    x1818 = x1813 - x1817
    x1819 = x1818 * x3
    x1820 = x1039 * x1151
    x1821 = x1154 * x8
    x1822 = x1052 + x1820 - x1821 + x240
    x1823 = x19 * (x1092 - x1810 + x1811 + x1822 + x250)
    x1824 = -x1823
    x1825 = x1822 * x4
    x1826 = x1812 * x3
    x1827 = x1825 - x1826
    x1828 = x1827 * x4
    x1829 = x1039 * x1166 + x1072 - x1151 * x8 + x257
    x1830 = x19 * (x1075 - x1820 + x1821 + x1829 + x260)
    x1831 = -x1822 * x3 + x1829 * x4
    x1832 = -x1827 * x3 + x1830 + x1831 * x4
    x1833 = -x1819 + x1823 + x1828
    x1834 = x19 * (x1096 + x1812 - x1814 + x1815 + x274)
    x1835 = x1039 * x1176 + x1097 - x1188 * x8 + x275
    x1836 = x106 * x1783
    x1837 = x1788 * x6
    x1838 = x1743 - x1837
    x1839 = x1836 + x1838
    x1840 = x1839 * x3
    x1841 = x106 * x1795
    x1842 = x1783 * x6
    x1843 = x1761 - x1842
    x1844 = x1841 + x1843
    x1845 = x1844 * x4
    x1846 = x1772 - x1795 * x6
    x1847 = x106 * x1802 + x1846
    x1848 = -x1844 * x3 + x1847 * x4
    x1849 = x1775 + x1842
    x1850 = x19 * (-x1841 + x1847 + x1849)
    x1851 = -x1840 + x1845
    x1852 = x1777 + x1837
    x1853 = x19 * (-x1836 + x1844 + x1852)
    x1854 = x1778 - x1809 * x6
    x1855 = x106 * x1788 + x1854
    x1856 = x106 * x1812
    x1857 = x1816 * x6
    x1858 = -x1857
    x1859 = x1856 + x1858
    x1860 = x1859 * x3
    x1861 = x106 * x1822
    x1862 = x1812 * x6
    x1863 = -x1862
    x1864 = x1861 + x1863
    x1865 = x1864 * x4
    x1866 = -x1822 * x6
    x1867 = x106 * x1829 + x1866
    x1868 = -x1864 * x3 + x1867 * x4
    x1869 = x19 * (-x1861 + x1862 + x1867)
    x1870 = -x1860 + x1865
    x1871 = x19 * (-x1856 + x1857 + x1864)
    x1872 = -x1835 * x6
    x1873 = x106 * x1816 + x1872
    x1874 = 2 * x1172
    x1875 = x1039 * x1262
    x1876 = x1273 * x8
    x1877 = x1874 + x1875 - x1876 + x419
    x1878 = x1877 * x3
    x1879 = 2 * x1152
    x1880 = x1039 * x1259
    x1881 = x1262 * x8
    x1882 = x1879 + x1880 - x1881 + x441
    x1883 = x1882 * x4
    x1884 = 2 * x1167
    x1885 = x1039 * x1266 - x1259 * x8 + x1884 + x454
    x1886 = -x1882 * x3 + x1885 * x4
    x1887 = -x1879
    x1888 = x19 * (-x1880 + x1881 + x1885 + x1887 + x463)
    x1889 = -x1878 + x1883
    x1890 = -x1874
    x1891 = x19 * (-x1875 + x1876 + x1882 + x1890 + x466)
    x1892 = 2 * x1187
    x1893 = x1039 * x1273 - x1282 * x8 + x1892 + x469
    x1894 = x106 * x1844
    x1895 = 2 * x1803 - x1844 * x6
    x1896 = x106 * x1847 + x1895
    x1897 = x1839 * x6
    x1898 = 2 * x1796
    x1899 = x1897 - x1898
    x1900 = x19 * (-x1894 + x1896 + x1899)
    x1901 = -x1897 + x1898
    x1902 = x1894 + x1901
    x1903 = 2 * x1807 - x1855 * x6
    x1904 = x106 * x1839 + x1903
    x1905 = x106 * x1864
    x1906 = x1830 - x1864 * x6
    x1907 = x106 * x1867 + x1906
    x1908 = x1859 * x6
    x1909 = x1824 + x1908
    x1910 = x19 * (-x1905 + x1907 + x1909)
    x1911 = x1823 - x1908
    x1912 = x1905 + x1911
    x1913 = x1834 - x1873 * x6
    x1914 = x106 * x1859 + x1913
    x1915 = x1877 * x6
    x1916 = x106 * x1882
    x1917 = -x1882 * x6
    x1918 = x106 * x1885 + x1917
    x1919 = x19 * (x1915 - x1916 + x1918)
    x1920 = -x1915
    x1921 = x1916 + x1920
    x1922 = -x1893 * x6
    x1923 = x106 * x1877 + x1922
    x1924 = x1348 * x8
    x1925 = x1039 * x1351
    x1926 = 3 * x1277
    x1927 = x1039 * x1346 + 3 * x1268 - x1351 * x8 + x601
    x1928 = x19 * (x1924 - x1925 - x1926 + x1927 + x609)
    x1929 = -x1924 + x1925 + x1926 + x608
    x1930 = x1039 * x1348 + 3 * x1281 - x1358 * x8 + x636
    x1931 = 3 * x1850 - x1902 * x6
    x1932 = x106 * x1896 + x1931
    x1933 = 3 * x1853 - x1904 * x6
    x1934 = x106 * x1902 + x1933
    x1935 = 2 * x1869 - x1912 * x6
    x1936 = x106 * x1907 + x1935
    x1937 = 2 * x1871 - x1914 * x6
    x1938 = x106 * x1912 + x1937
    x1939 = x1888 - x1921 * x6
    x1940 = x106 * x1918 + x1939
    x1941 = x1891 - x1923 * x6
    x1942 = x106 * x1921 + x1941
    x1943 = -x1929 * x6
    x1944 = x106 * x1927 + x1943
    x1945 = -x1930 * x6
    x1946 = x106 * x1929 + x1945
    x1947 = x1039 * x1403 + 4 * x1355 - x1405 * x8 + x737
    x1948 = x1039 * x1405 + 4 * x1357 - x1406 * x8 + x740
    x1949 = 2 * x762
    x1950 = x1411 * x743
    x1951 = x1414 * x6
    x1952 = x1949 + x1950 - x1951
    x1953 = x1952 * x4
    x1954 = 2 * x784
    x1955 = x1414 * x743
    x1956 = x1421 * x6
    x1957 = x1954 + x1955 - x1956
    x1958 = x1957 * x3
    x1959 = x1953 - x1958
    x1960 = x1959 * x3
    x1961 = 2 * x756
    x1962 = x1429 * x743
    x1963 = x1411 * x6
    x1964 = x1961 + x1962 - x1963
    x1965 = x19 * (-x1949 - x1950 + x1951 + x1964)
    x1966 = x1964 * x4
    x1967 = x1952 * x3
    x1968 = x1966 - x1967
    x1969 = x1968 * x4
    x1970 = -x1429 * x6 + x1439 * x743 + 2 * x776
    x1971 = -x1964 * x3 + x1970 * x4
    x1972 = x19 * (-x1961 - x1962 + x1963 + x1970) - x1968 * x3 + x1971 * x4
    x1973 = -x1960 + x1965 + x1969
    x1974 = x1451 * x743
    x1975 = x1455 * x6
    x1976 = x1412 + x1500 + x1974 - x1975
    x1977 = x1976 * x3
    x1978 = x1461 * x743
    x1979 = x1451 * x6
    x1980 = x1430 + x1505 + x1978 - x1979
    x1981 = x1980 * x4
    x1982 = x1441 - x1461 * x6 + x1467 * x743 + x1510
    x1983 = -x1980 * x3 + x1982 * x4
    x1984 = -x1977 + x1981
    x1985 = 2 * x864
    x1986 = x1476 * x743
    x1987 = x1480 * x6
    x1988 = x1985 + x1986 - x1987
    x1989 = x1988 * x3
    x1990 = 2 * x844
    x1991 = x1486 * x743
    x1992 = x1476 * x6
    x1993 = x1990 + x1991 - x1992
    x1994 = x1993 * x4
    x1995 = -x1486 * x6 + x1493 * x743 + 2 * x859
    x1996 = -x1993 * x3 + x1995 * x4
    x1997 = -x1989 + x1994
    x1998 = x1503 * x6
    x1999 = x1508 * x743
    x2000 = 2 * x900
    x2001 = 2 * x1462
    x2002 = 2 * x1468 - x1508 * x6 + x1511 * x743 + 2 * x891
    x2003 = -x1998 + x1999 + x2000 + x2001
    x2004 = x1522 * x6
    x2005 = x1526 * x743
    x2006 = x1494 - x1526 * x6 + x1528 * x743 + x1559
    x2007 = x1487 + x1557 - x2004 + x2005
    x2008 = x1536 * x6
    x2009 = x1540 * x743
    x2010 = 2 * x948
    x2011 = -x1540 * x6 + x1542 * x743 + 2 * x939
    x2012 = -x2008 + x2009 + x2010
    x2013 = x1591 * x743
    x2014 = x1594 * x6
    x2015 = x1058 + x2013 - x2014
    x2016 = x2015 * x4
    x2017 = x1594 * x743
    x2018 = x1600 * x6
    x2019 = x1080 + x2017 - x2018
    x2020 = x2019 * x3
    x2021 = x2016 - x2020
    x2022 = x2021 * x3
    x2023 = x1607 * x743
    x2024 = x1591 * x6
    x2025 = x1052 + x2023 - x2024
    x2026 = x19 * (x1092 - x2013 + x2014 + x2025)
    x2027 = x2025 * x4
    x2028 = x2015 * x3
    x2029 = x2027 - x2028
    x2030 = x2029 * x4
    x2031 = x1072 - x1607 * x6 + x1617 * x743
    x2032 = -x2025 * x3 + x2031 * x4
    x2033 = x19 * (x1075 - x2023 + x2024 + x2031) - x2029 * x3 + x2032 * x4
    x2034 = -x2022 + x2026 + x2030
    x2035 = x1628 * x743
    x2036 = x1631 * x6
    x2037 = x1129 + x1592 + x2035 - x2036
    x2038 = x2037 * x3
    x2039 = x1636 * x743
    x2040 = x1628 * x6
    x2041 = x1105 + x1608 + x2039 - x2040
    x2042 = x2041 * x4
    x2043 = x1124 + x1619 - x1636 * x6 + x1642 * x743
    x2044 = -x2041 * x3 + x2043 * x4
    x2045 = -x2038 + x2042
    x2046 = x1650 * x743
    x2047 = x1653 * x6
    x2048 = x1172 + x2046 - x2047
    x2049 = x2048 * x3
    x2050 = x1658 * x743
    x2051 = x1650 * x6
    x2052 = x1152 + x2050 - x2051
    x2053 = x2052 * x4
    x2054 = x1167 - x1658 * x6 + x1665 * x743
    x2055 = -x2052 * x3 + x2054 * x4
    x2056 = -x2049 + x2053
    x2057 = x1673 * x6
    x2058 = x1676 * x743
    x2059 = 2 * x1637
    x2060 = x1205 + 2 * x1643 - x1676 * x6 + x1678 * x743
    x2061 = x1217 - x2057 + x2058 + x2059
    x2062 = x1685 * x6
    x2063 = x1688 * x743
    x2064 = x1240 + x1666 - x1688 * x6 + x1690 * x743
    x2065 = x1251 + x1659 - x2062 + x2063
    x2066 = x1697 * x6
    x2067 = x1700 * x743
    x2068 = x1268 - x1700 * x6 + x1702 * x743
    x2069 = x1277 - x2066 + x2067
    x2070 = x1742 * x743
    x2071 = x1782 + x2070
    x2072 = x2071 * x4
    x2073 = x1745 * x743
    x2074 = x1787 + x2073
    x2075 = x2074 * x3
    x2076 = x2072 - x2075
    x2077 = x2076 * x3
    x2078 = x1760 * x743
    x2079 = x1794 + x2078
    x2080 = x19 * (x1781 - x2070 + x2079)
    x2081 = x2079 * x4
    x2082 = x2071 * x3
    x2083 = x2081 - x2082
    x2084 = x2083 * x4
    x2085 = x1770 * x743 + x1801
    x2086 = -x2079 * x3 + x2085 * x4
    x2087 = x19 * (x1793 - x2078 + x2085) - x2083 * x3 + x2086 * x4
    x2088 = -x2077 + x2080 + x2084
    x2089 = x1783 * x743
    x2090 = x1838 + x2089
    x2091 = x2090 * x3
    x2092 = x1795 * x743
    x2093 = x1843 + x2092
    x2094 = x2093 * x4
    x2095 = x1802 * x743 + x1846
    x2096 = -x2093 * x3 + x2095 * x4
    x2097 = -x2091 + x2094
    x2098 = x1812 * x743
    x2099 = x1858 + x2098
    x2100 = x2099 * x3
    x2101 = x1822 * x743
    x2102 = x1863 + x2101
    x2103 = x2102 * x4
    x2104 = x1829 * x743 + x1866
    x2105 = -x2102 * x3 + x2104 * x4
    x2106 = -x2100 + x2103
    x2107 = x1844 * x743
    x2108 = x1847 * x743 + x1895
    x2109 = x1901 + x2107
    x2110 = x1864 * x743
    x2111 = x1867 * x743 + x1906
    x2112 = x1911 + x2110
    x2113 = x1882 * x743
    x2114 = x1885 * x743 + x1917
    x2115 = x1920 + x2113
    x2116 = 2 * x1058
    x2117 = x1039 * x1742
    x2118 = x1745 * x8
    x2119 = x2116 + x2117 - x2118
    x2120 = x2119 * x4
    x2121 = 2 * x1080
    x2122 = x1039 * x1745
    x2123 = x1752 * x8
    x2124 = x2121 + x2122 - x2123
    x2125 = x2124 * x3
    x2126 = x2120 - x2125
    x2127 = x2126 * x3
    x2128 = 2 * x1052
    x2129 = x1039 * x1760
    x2130 = x1742 * x8
    x2131 = x2128 + x2129 - x2130
    x2132 = x19 * (-x2116 - x2117 + x2118 + x2131)
    x2133 = -x2132
    x2134 = x2131 * x4
    x2135 = x2119 * x3
    x2136 = x2134 - x2135
    x2137 = x2136 * x4
    x2138 = x1039 * x1770 + 2 * x1072 - x1760 * x8
    x2139 = x19 * (-x2128 - x2129 + x2130 + x2138)
    x2140 = -x2131 * x3 + x2138 * x4
    x2141 = -x2136 * x3 + x2139 + x2140 * x4
    x2142 = -x2127 + x2132 + x2137
    x2143 = x19 * (x2119 - x2121 - x2122 + x2123)
    x2144 = x1039 * x1752 + 2 * x1097 - x1779 * x8
    x2145 = x106 * x2119
    x2146 = x2124 * x6
    x2147 = x2145 - x2146
    x2148 = x2147 * x3
    x2149 = x106 * x2131
    x2150 = x2119 * x6
    x2151 = x2149 - x2150
    x2152 = x2151 * x4
    x2153 = x106 * x2138 - x2131 * x6
    x2154 = -x2151 * x3 + x2153 * x4
    x2155 = x19 * (-x2149 + x2150 + x2153)
    x2156 = -x2148 + x2152
    x2157 = x19 * (-x2145 + x2146 + x2151)
    x2158 = x106 * x2124 - x2144 * x6
    x2159 = x1039 * x1812
    x2160 = x1816 * x8
    x2161 = x1743 + x1874 + x2159 - x2160
    x2162 = x2161 * x3
    x2163 = x1039 * x1822
    x2164 = x1812 * x8
    x2165 = x1761 + x1879 + x2163 - x2164
    x2166 = x2165 * x4
    x2167 = x1039 * x1829 + x1772 - x1822 * x8 + x1884
    x2168 = -x2165 * x3 + x2167 * x4
    x2169 = x19 * (x1775 + x1887 - x2163 + x2164 + x2167)
    x2170 = -x2162 + x2166
    x2171 = x19 * (x1777 + x1890 - x2159 + x2160 + x2165)
    x2172 = x1039 * x1816 + x1778 - x1835 * x8 + x1892
    x2173 = x2147 * x6
    x2174 = x106 * x2151
    x2175 = x106 * x2153 + x2139 - x2151 * x6
    x2176 = x19 * (x2133 + x2173 - x2174 + x2175)
    x2177 = x2132 - x2173 + x2174
    x2178 = x106 * x2147 + x2143 - x2158 * x6
    x2179 = x2161 * x6
    x2180 = x106 * x2165
    x2181 = x106 * x2167 - x2165 * x6
    x2182 = x19 * (x2179 - x2180 + x2181)
    x2183 = -x2179 + x2180
    x2184 = x106 * x2161 - x2172 * x6
    x2185 = x1877 * x8
    x2186 = x1039 * x1882
    x2187 = 2 * x1277
    x2188 = 2 * x1823
    x2189 = x1039 * x1885 + 2 * x1268 + 2 * x1830 - x1882 * x8
    x2190 = x19 * (x2185 - x2186 - x2187 - x2188 + x2189)
    x2191 = -x2185 + x2186 + x2187 + x2188
    x2192 = x1039 * x1877 + 2 * x1281 + 2 * x1834 - x1893 * x8
    x2193 = x106 * x2175 + 2 * x2155 - x2177 * x6
    x2194 = x106 * x2177 + 2 * x2157 - x2178 * x6
    x2195 = x106 * x2181 + x2169 - x2183 * x6
    x2196 = x106 * x2183 + x2171 - x2184 * x6
    x2197 = x106 * x2189 - x2191 * x6
    x2198 = x106 * x2191 - x2192 * x6
    x2199 = x1039 * x1927 + 2 * x1355 + 3 * x1888 - x1929 * x8
    x2200 = x1039 * x1929 + 2 * x1357 + 3 * x1891 - x1930 * x8

    # 150 item(s)
    return numpy.array(
        [
            x20 * (x57 - x78 - x81 + x93)
            - x3
            * (
                x101 * x58
                + x19 * (x102 - x38 + x77)
                - x3
                * (
                    -x3
                    * (
                        -x3
                        * (
                            x20 * (x33 - x43 + x45)
                            - x3 * (x104 - x3 * (-x105 * x3 + x4 * x44) + x4 * x46)
                            + x4 * x48
                        )
                        + x4 * x50
                        + x53 * (x103 + x35 - x42 + x47)
                    )
                    + x56 * x58
                    + x99 * (x37 - x39 - x40 + x49)
                )
                + x99 * (x102 - x96 + x98)
            )
            + x58
            * (
                -x101 * x3
                + x19 * (x100 - x72 + x92)
                + x58 * x93
                + x99 * (x100 + x95 - x97)
            )
            + x99
            * (
                -x3 * x98
                + x3 * (x55 + x96)
                - x53 * (-x26 * x58 + x70 + x79 + x94)
                + x53 * (x58 * x85 + x86 + x88 - x94)
                + x58 * x95
                - x58 * x98
                - x80
                + x89
            ),
            x20 * (x145 - x163 - x167 + x179)
            - x3
            * (
                x186 * x58
                + x19 * (-x129 + x162 + x187)
                - x3
                * (
                    x144 * x58
                    - x3
                    * (
                        x140 * x4
                        + x20 * (x126 - x132 + x137)
                        - x3 * (x138 * x4 + x189 - x3 * (x136 * x4 - x191 * x3))
                    )
                    + x53 * (x128 - x131 + x139 + x188)
                )
                + x53 * (-x182 + x184 + x187)
            )
            + x53
            * (
                -x166
                + x176
                + x181 * x58
                - x184 * x3
                - x184 * x58
                - x20 * (-x118 * x58 + x156 + x165 + x180)
                + x20 * (x170 * x58 + x172 + x175 - x180)
                + x3 * (x143 + x182)
            )
            + x58
            * (
                x179 * x58
                - x186 * x3
                + x19 * (-x158 + x178 + x185)
                + x53 * (x181 - x183 + x185)
            ),
            x20 * (x231 - x249 - x253 + x265)
            - x3
            * (
                x19 * (-x215 + x248 + x273)
                + x272 * x58
                - x3
                * (
                    x230 * x58
                    - x3
                    * (
                        x20 * (x212 - x218 + x223)
                        + x226 * x4
                        - x3 * (x224 * x4 + x275 - x3 * (x222 * x4 - x277 * x3))
                    )
                    + x53 * (x214 - x217 + x225 + x274)
                )
                + x53 * (-x268 + x270 + x273)
            )
            + x53
            * (
                -x20 * (-x204 * x58 + x242 + x251 + x266)
                + x20 * (x256 * x58 + x258 + x261 - x266)
                - x252
                + x262
                + x267 * x58
                - x270 * x3
                - x270 * x58
                + x3 * (x229 + x268)
            )
            + x58
            * (
                x19 * (-x244 + x264 + x271)
                + x265 * x58
                - x272 * x3
                + x53 * (x267 - x269 + x271)
            ),
            x20 * (x302 - x317 - x319 + x329)
            + x20
            * (
                x19 * (x308 + x321 * x58 + x322 - x330)
                - x19 * (-x281 * x58 + x287 + x309 + x330)
                - x3 * x334
                + x3 * (x300 + x332)
                - x318
                + x324
                + x331 * x58
                - x334 * x58
            )
            - x3
            * (
                x19 * (-x289 + x316 + x339)
                + x20 * (-x332 + x334 + x339)
                - x3
                * (
                    x20 * (x288 - x292 + x297)
                    - x3 * (x298 * x4 - x3 * (x296 * x4 - x3 * x343) + x341)
                    + x301 * x58
                )
                + x337 * x58
            )
            + x58
            * (
                x19 * (-x311 + x328 + x336)
                + x20 * (x331 - x333 + x336)
                - x3 * x337
                + x329 * x58
            ),
            x20 * (x367 - x381 - x383 + x392)
            + x20
            * (
                x19 * (x373 + x385 * x58 + x386 - x393)
                - x19 * (-x347 * x58 + x353 + x374 + x393)
                - x3 * x397
                + x3 * (x365 + x395)
                - x382
                + x388
                + x394 * x58
                - x397 * x58
            )
            - x3
            * (
                x19 * (-x355 + x380 + x402)
                + x20 * (-x395 + x397 + x402)
                - x3
                * (
                    x20 * (x354 - x357 + x362)
                    - x3 * (-x3 * (-x3 * x405 + x361 * x4) + x363 * x4 + x403)
                    + x366 * x58
                )
                + x400 * x58
            )
            + x58
            * (
                x19 * (-x376 + x391 + x399)
                + x20 * (x394 - x396 + x399)
                - x3 * x400
                + x392 * x58
            ),
            x20 * (x430 - x445 - x447 + x457)
            + x20
            * (
                x19 * (x436 + x449 * x58 + x450 - x458)
                - x19 * (-x409 * x58 + x415 + x437 + x458)
                - x3 * x462
                + x3 * (x428 + x460)
                - x446
                + x452
                + x459 * x58
                - x462 * x58
            )
            - x3
            * (
                x19 * (-x417 + x444 + x467)
                + x20 * (-x460 + x462 + x467)
                - x3
                * (
                    x20 * (x416 - x420 + x425)
                    - x3 * (-x3 * (-x3 * x471 + x4 * x424) + x4 * x426 + x469)
                    + x429 * x58
                )
                + x465 * x58
            )
            + x58
            * (
                x19 * (-x439 + x456 + x464)
                + x20 * (x459 - x461 + x464)
                - x3 * x465
                + x457 * x58
            ),
            x19
            * (-x3 * x502 + x3 * (x491 + x498) + x478 + x486 + x488 * x58 - x502 * x58)
            + x20 * (x486 + x505 - x508 + x510)
            - x3
            * (
                x19 * (-x491 + x497 + x502)
                + x19 * (x497 - x503 + x507)
                - x3 * (-x3 * (-x3 * x515 + x4 * x496) + x504 * x58 + x513)
                + x511 * x58
            )
            + x58
            * (
                x19 * (x488 - x499 + x500)
                + x19 * (x500 - x506 + x509)
                - x3 * x511
                + x510 * x58
            ),
            x19
            * (-x3 * x543 + x3 * (x533 + x539) + x521 + x528 + x530 * x58 - x543 * x58)
            + x20 * (x528 + x546 - x549 + x551)
            - x3
            * (
                x19 * (-x533 + x538 + x543)
                + x19 * (x538 - x544 + x548)
                - x3 * (-x3 * (-x3 * x556 + x4 * x537) + x545 * x58 + x554)
                + x552 * x58
            )
            + x58
            * (
                x19 * (x530 - x540 + x541)
                + x19 * (x541 - x547 + x550)
                - x3 * x552
                + x551 * x58
            ),
            x19
            * (-x3 * x582 + x3 * (x572 + x578) + x561 + x567 + x569 * x58 - x58 * x582)
            + x20 * (x567 + x585 - x588 + x590)
            - x3
            * (
                x19 * (-x572 + x577 + x582)
                + x19 * (x577 - x583 + x587)
                - x3 * (-x3 * (-x3 * x594 + x4 * x576) + x58 * x584 + x592)
                + x58 * x591
            )
            + x58
            * (
                x19 * (x569 - x579 + x580)
                + x19 * (x580 - x586 + x589)
                - x3 * x591
                + x58 * x590
            ),
            x19
            * (-x3 * x625 + x3 * (x614 + x621) + x58 * x611 - x58 * x625 + x601 + x609)
            + x20 * (x609 + x628 - x631 + x633)
            - x3
            * (
                x19 * (-x614 + x620 + x625)
                + x19 * (x620 - x626 + x630)
                - x3 * (-x3 * (-x3 * x638 + x4 * x619) + x58 * x627 + x636)
                + x58 * x634
            )
            + x58
            * (
                x19 * (x611 - x622 + x623)
                + x19 * (x623 - x629 + x632)
                - x3 * x634
                + x58 * x633
            ),
            x20 * (x644 - x650 + x653)
            - x3 * (-x3 * (-x3 * x660 + x58 * x643) + x58 * x656 + x658)
            + x58 * (-x3 * x656 + x58 * x653 + x655),
            x20 * (x666 - x672 + x675)
            - x3 * (-x3 * (-x3 * x682 + x58 * x665) + x58 * x678 + x680)
            + x58 * (-x3 * x678 + x58 * x675 + x677),
            x20 * (x687 - x692 + x695)
            - x3 * (-x3 * (-x3 * x702 + x58 * x686) + x58 * x698 + x700)
            + x58 * (-x3 * x698 + x58 * x695 + x697),
            x20 * (x707 - x712 + x715)
            - x3 * (-x3 * (-x3 * x720 + x58 * x706) + x58 * x717 + x718)
            + x58 * (-x3 * x717 + x58 * x715 + x716),
            x20 * (x726 - x732 + x735)
            - x3 * (-x3 * (-x3 * x742 + x58 * x725) + x58 * x738 + x740)
            + x58 * (-x3 * x738 + x58 * x735 + x737),
            x19 * (-x773 + x781 + x798)
            - x3
            * (
                -x3
                * (
                    -x3
                    * (
                        x20 * (x768 - x786 + x789)
                        - x3 * (-x3 * (-x3 * x802 + x4 * x788) + x4 * x790 + x801)
                        + x4 * x792
                    )
                    + x4 * x794
                    + x53 * (x770 - x785 + x791 + x800)
                )
                + x58 * x799
                + x99 * (x772 - x782 - x783 + x793)
            )
            + x58 * (-x3 * x799 + x58 * x781 + x99 * (-x755 - x761 + x771 + x778))
            + x99 * (-x58 * x772 + x58 * x778 + x780 + x798),
            x19 * (-x819 + x825 + x837)
            - x3
            * (
                -x3
                * (
                    x20 * (x816 - x828 + x831)
                    - x3 * (-x3 * (-x3 * x840 + x4 * x830) + x4 * x832 + x839)
                    + x4 * x834
                )
                + x53 * (x818 - x826 - x827 + x833)
                + x58 * x838
            )
            + x53 * (-x58 * x818 + x58 * x823 + x824 + x837)
            + x58 * (-x3 * x838 + x53 * (-x806 - x811 + x817 + x823) + x58 * x825),
            x19 * (-x857 + x863 + x875)
            - x3
            * (
                -x3
                * (
                    x20 * (x854 - x866 + x869)
                    - x3 * (-x3 * (-x3 * x880 + x4 * x868) + x4 * x870 + x879)
                    + x4 * x872
                )
                + x53 * (x856 - x865 + x871 + x878)
                + x58 * x877
            )
            + x53 * (-x58 * x856 + x58 * x861 + x862 + x875)
            + x58 * (-x3 * x877 + x53 * (-x849 + x855 + x861 + x876) + x58 * x863),
            x19 * (-x888 + x893 + x901)
            + x20 * (-x58 * x887 + x58 * x890 + x892 + x901)
            - x3
            * (
                x20 * (x887 - x894 + x897)
                - x3 * (-x3 * (-x3 * x904 + x4 * x896) + x4 * x898 + x903)
                + x58 * x902
            )
            + x58 * (x20 * (-x883 + x886 + x890) - x3 * x902 + x58 * x893),
            x19 * (-x912 + x917 + x925)
            + x20 * (-x58 * x911 + x58 * x914 + x916 + x925)
            - x3
            * (
                x20 * (x911 - x918 + x921)
                - x3 * (-x3 * (-x3 * x928 + x4 * x920) + x4 * x922 + x927)
                + x58 * x926
            )
            + x58 * (x20 * (-x907 + x910 + x914) - x3 * x926 + x58 * x917),
            x19 * (-x936 + x941 + x950)
            + x20 * (-x58 * x935 + x58 * x938 + x940 + x950)
            - x3
            * (
                x20 * (x935 - x942 + x945)
                - x3 * (-x3 * (-x3 * x953 + x4 * x944) + x4 * x946 + x952)
                + x58 * x951
            )
            + x58 * (x20 * (-x931 + x934 + x938) - x3 * x951 + x58 * x941),
            x19 * (x957 - x961 + x962)
            + x19 * (x58 * x954 - x58 * x959 + x957 + x960)
            - x3 * (-x3 * (-x3 * x966 + x4 * x956) + x58 * x964 + x965)
            + x58 * (-x3 * x964 + x58 * x962 + x963),
            x19 * (x970 - x974 + x975)
            + x19 * (x58 * x967 - x58 * x972 + x970 + x973)
            - x3 * (-x3 * (-x3 * x979 + x4 * x969) + x58 * x977 + x978)
            + x58 * (-x3 * x977 + x58 * x975 + x976),
            x19 * (x983 - x987 + x988)
            + x19 * (x58 * x980 - x58 * x985 + x983 + x986)
            - x3 * (-x3 * (-x3 * x992 + x4 * x982) + x58 * x990 + x991)
            + x58 * (-x3 * x990 + x58 * x988 + x989),
            x19 * (-x1000 + x1001 + x996)
            + x19 * (x58 * x993 - x58 * x998 + x996 + x999)
            - x3 * (x1003 * x58 + x1004 - x3 * (-x1005 * x3 + x4 * x995))
            + x58 * (x1001 * x58 + x1002 - x1003 * x3),
            x1010 - x3 * (x1011 * x58 - x1012 * x3) + x58 * (x1009 * x58 - x1011 * x3),
            x1017 - x3 * (x1018 * x58 - x1019 * x3) + x58 * (x1016 * x58 - x1018 * x3),
            x1024 - x3 * (x1025 * x58 - x1026 * x3) + x58 * (x1023 * x58 - x1025 * x3),
            x1030 - x3 * (x1031 * x58 - x1032 * x3) + x58 * (x1029 * x58 - x1031 * x3),
            x1036 - x3 * (x1037 * x58 - x1038 * x3) + x58 * (x1035 * x58 - x1037 * x3),
            x19 * (-x1069 + x1077 + x1094)
            - x3
            * (
                x1095 * x58
                - x3
                * (
                    x1090 * x4
                    - x3
                    * (
                        x1088 * x4
                        + x20 * (x1064 - x1082 + x1085)
                        - x3 * (x1086 * x4 + x1097 - x3 * (x1084 * x4 - x1098 * x3))
                    )
                    + x53 * (x1066 - x1081 + x1087 + x1096)
                )
                + x99 * (x1068 - x1078 - x1079 + x1089)
            )
            + x58 * (x1077 * x58 - x1095 * x3 + x99 * (-x1051 - x1057 + x1067 + x1074))
            + x99 * (-x1068 * x58 + x1074 * x58 + x1076 + x1094),
            x19 * (-x1121 + x1128 + x1142)
            - x3
            * (
                x1144 * x58
                - x3
                * (
                    x1139 * x4
                    + x20 * (x1118 - x1131 + x1136)
                    - x3 * (x1137 * x4 + x1146 - x3 * (x1135 * x4 - x1148 * x3))
                )
                + x53 * (x1120 - x1130 + x1138 + x1145)
            )
            + x53 * (-x1120 * x58 + x1126 * x58 + x1127 + x1142)
            + x58 * (x1128 * x58 - x1144 * x3 + x53 * (-x1111 + x1119 + x1126 + x1143)),
            x19 * (-x1165 + x1171 + x1183)
            - x3
            * (
                x1185 * x58
                - x3
                * (
                    x1180 * x4
                    + x20 * (x1162 - x1174 + x1177)
                    - x3 * (x1178 * x4 + x1187 - x3 * (x1176 * x4 - x1188 * x3))
                )
                + x53 * (x1164 - x1173 + x1179 + x1186)
            )
            + x53 * (-x1164 * x58 + x1169 * x58 + x1170 + x1183)
            + x58 * (x1171 * x58 - x1185 * x3 + x53 * (-x1157 + x1163 + x1169 + x1184)),
            x19 * (-x1200 + x1207 + x1219)
            + x20 * (-x1199 * x58 + x1203 * x58 + x1206 + x1219)
            - x3
            * (
                x1220 * x58
                + x20 * (x1199 - x1208 + x1213)
                - x3 * (x1214 * x4 + x1222 - x3 * (x1212 * x4 - x1224 * x3))
            )
            + x58 * (x1207 * x58 - x1220 * x3 + x20 * (-x1193 + x1198 + x1203)),
            x19 * (-x1236 + x1242 + x1253)
            + x20 * (-x1235 * x58 + x1239 * x58 + x1241 + x1253)
            - x3
            * (
                x1254 * x58
                + x20 * (x1235 - x1243 + x1248)
                - x3 * (x1249 * x4 + x1255 - x3 * (x1247 * x4 - x1257 * x3))
            )
            + x58 * (x1242 * x58 - x1254 * x3 + x20 * (-x1229 + x1234 + x1239)),
            x19 * (-x1265 + x1270 + x1279)
            + x20 * (-x1264 * x58 + x1267 * x58 + x1269 + x1279)
            - x3
            * (
                x1280 * x58
                + x20 * (x1264 - x1271 + x1274)
                - x3 * (x1275 * x4 + x1281 - x3 * (x1273 * x4 - x1282 * x3))
            )
            + x58 * (x1270 * x58 - x1280 * x3 + x20 * (-x1260 + x1263 + x1267)),
            x19 * (x1290 - x1297 + x1298)
            + x19 * (x1284 * x58 + x1290 - x1295 * x58 + x1296)
            - x3 * (x1301 * x58 + x1303 - x3 * (x1289 * x4 - x1305 * x3))
            + x58 * (x1298 * x58 + x1300 - x1301 * x3),
            x19 * (x1312 - x1318 + x1319)
            + x19 * (x1307 * x58 + x1312 - x1316 * x58 + x1317)
            - x3 * (x1322 * x58 + x1324 - x3 * (x1311 * x4 - x1326 * x3))
            + x58 * (x1319 * x58 + x1321 - x1322 * x3),
            x19 * (x1333 - x1339 + x1340)
            + x19 * (x1328 * x58 + x1333 - x1337 * x58 + x1338)
            - x3 * (x1342 * x58 + x1343 - x3 * (x1332 * x4 - x1345 * x3))
            + x58 * (x1340 * x58 + x1341 - x1342 * x3),
            x19 * (x1349 - x1353 + x1354)
            + x19 * (x1346 * x58 + x1349 - x1351 * x58 + x1352)
            - x3 * (x1356 * x58 + x1357 - x3 * (x1348 * x4 - x1358 * x3))
            + x58 * (x1354 * x58 + x1355 - x1356 * x3),
            x1365 - x3 * (x1367 * x58 - x1369 * x3) + x58 * (x1361 * x58 - x1367 * x3),
            x1376 - x3 * (x1378 * x58 - x1380 * x3) + x58 * (x1372 * x58 - x1378 * x3),
            x1386 - x3 * (x1388 * x58 - x1390 * x3) + x58 * (x1383 * x58 - x1388 * x3),
            x1395 - x3 * (x1397 * x58 - x1399 * x3) + x58 * (x1394 * x58 - x1397 * x3),
            x1404 - x3 * (x1405 * x58 - x1406 * x3) + x58 * (x1403 * x58 - x1405 * x3),
            -x3
            * (
                x1445 * x4
                - x3
                * (
                    x1425 * x4
                    + x20 * (x1416 - x1418 + x1422)
                    - x3 * (x1423 * x4 + x1447 - x3 * (x1421 * x4 - x1448 * x3))
                )
                + x53 * (-x1417 + x1424 + x1436 + x1446)
            )
            + x58 * (x1443 * x4 - x1445 * x3 + x53 * (-x1434 + x1435 + x1442 + x1444))
            + x99 * (x1426 - x1437 - x1438 + x1443),
            -x3
            * (
                x1471 * x4
                + x20 * (-x1452 + x1456 + x1465)
                - x3 * (x1457 * x4 + x1472 - x3 * (x1455 * x4 - x1473 * x3))
            )
            + x53 * (x1458 - x1462 - x1466 + x1470)
            + x58 * (x1470 * x4 - x1471 * x3 + x20 * (-x1463 + x1464 + x1469)),
            -x3
            * (
                x1497 * x4
                + x20 * (-x1477 + x1481 + x1491)
                - x3 * (x1482 * x4 + x1498 - x3 * (x1480 * x4 - x1499 * x3))
            )
            + x53 * (x1483 + x1488 - x1492 + x1496)
            + x58 * (x1496 * x4 - x1497 * x3 + x20 * (-x1489 + x1490 + x1495)),
            x20 * (x1504 - x1509 + x1512)
            - x3 * (x1515 * x4 + x1517 - x3 * (x1503 * x4 - x1519 * x3))
            + x58 * (x1512 * x4 + x1514 - x1515 * x3),
            x20 * (x1523 - x1527 + x1529)
            - x3 * (x1531 * x4 + x1532 - x3 * (x1522 * x4 - x1533 * x3))
            + x58 * (x1529 * x4 + x1530 - x1531 * x3),
            x20 * (x1537 - x1541 + x1543)
            - x3 * (x1545 * x4 + x1546 - x3 * (x1536 * x4 - x1547 * x3))
            + x58 * (x1543 * x4 + x1544 - x1545 * x3),
            x1552 - x3 * (x1553 * x4 - x1554 * x3) + x58 * (x1551 * x4 - x1553 * x3),
            x1561 - x3 * (x1562 * x4 - x1564 * x3) + x58 * (x1560 * x4 - x1562 * x3),
            x1568 - x3 * (x1569 * x4 - x1570 * x3) + x58 * (x1567 * x4 - x1569 * x3),
            x1574 - x3 * (x1575 * x4 - x1576 * x3) + x58 * (x1573 * x4 - x1575 * x3),
            x1577 * x58 - x1578 * x3,
            x1579 * x58 - x1580 * x3,
            x1582 * x58 - x1584 * x3,
            x1585 * x58 - x1586 * x3,
            x1587 * x58 - x1588 * x3,
            -x3
            * (
                x1623 * x4
                - x3
                * (
                    x1604 * x4
                    + x20 * (x1596 - x1598 + x1601)
                    - x3 * (x1602 * x4 + x1625 - x3 * (x1600 * x4 - x1626 * x3))
                )
                + x53 * (-x1597 + x1603 + x1614 + x1624)
            )
            + x58 * (x1621 * x4 - x1623 * x3 + x53 * (-x1612 + x1613 + x1620 + x1622))
            + x99 * (x1605 - x1615 - x1616 + x1621),
            -x3
            * (
                x1646 * x4
                + x20 * (-x1629 + x1632 + x1640)
                - x3 * (x1633 * x4 + x1647 - x3 * (x1631 * x4 - x1648 * x3))
            )
            + x53 * (x1634 - x1637 - x1641 + x1645)
            + x58 * (x1645 * x4 - x1646 * x3 + x20 * (-x1638 + x1639 + x1644)),
            -x3
            * (
                x1669 * x4
                + x20 * (-x1651 + x1654 + x1663)
                - x3 * (x1655 * x4 + x1670 - x3 * (x1653 * x4 - x1671 * x3))
            )
            + x53 * (x1656 + x1660 - x1664 + x1668)
            + x58 * (x1668 * x4 - x1669 * x3 + x20 * (-x1661 + x1662 + x1667)),
            x20 * (x1674 - x1677 + x1679)
            - x3 * (x1681 * x4 + x1682 - x3 * (x1673 * x4 - x1683 * x3))
            + x58 * (x1679 * x4 + x1680 - x1681 * x3),
            x20 * (x1686 - x1689 + x1691)
            - x3 * (x1693 * x4 + x1694 - x3 * (x1685 * x4 - x1695 * x3))
            + x58 * (x1691 * x4 + x1692 - x1693 * x3),
            x20 * (x1698 - x1701 + x1703)
            - x3 * (x1705 * x4 + x1706 - x3 * (x1697 * x4 - x1707 * x3))
            + x58 * (x1703 * x4 + x1704 - x1705 * x3),
            x1710 - x3 * (x1711 * x4 - x1712 * x3) + x58 * (x1709 * x4 - x1711 * x3),
            x1715 - x3 * (x1716 * x4 - x1717 * x3) + x58 * (x1714 * x4 - x1716 * x3),
            x1720 - x3 * (x1721 * x4 - x1722 * x3) + x58 * (x1719 * x4 - x1721 * x3),
            x1725 - x3 * (x1726 * x4 - x1727 * x3) + x58 * (x1724 * x4 - x1726 * x3),
            x1728 * x58 - x1729 * x3,
            x1730 * x58 - x1731 * x3,
            x1732 * x58 - x1733 * x3,
            x1734 * x58 - x1735 * x3,
            x1736 * x58 - x1737 * x3,
            -x3
            * (
                x1776 * x4
                - x3
                * (
                    x1756 * x4
                    + x20 * (x1747 - x1749 + x1753)
                    - x3 * (x1754 * x4 + x1778 - x3 * (x1752 * x4 - x1779 * x3))
                )
                + x53 * (-x1748 + x1755 + x1767 + x1777)
            )
            + x58 * (x1774 * x4 - x1776 * x3 + x53 * (-x1765 + x1766 + x1773 + x1775))
            + x99 * (x1757 - x1768 - x1769 + x1774),
            -x3
            * (
                x1806 * x4
                + x20 * (-x1784 + x1789 + x1799)
                - x3 * (x1790 * x4 + x1807 - x3 * (x1788 * x4 - x1809 * x3))
            )
            + x53 * (x1791 - x1796 - x1800 + x1805)
            + x58 * (x1805 * x4 - x1806 * x3 + x20 * (-x1797 + x1798 + x1804)),
            -x3
            * (
                x1833 * x4
                + x20 * (-x1813 + x1817 + x1827)
                - x3 * (x1818 * x4 + x1834 - x3 * (x1816 * x4 - x1835 * x3))
            )
            + x53 * (x1819 + x1824 - x1828 + x1832)
            + x58 * (x1832 * x4 - x1833 * x3 + x20 * (-x1825 + x1826 + x1831)),
            x20 * (x1840 - x1845 + x1848)
            - x3 * (x1851 * x4 + x1853 - x3 * (x1839 * x4 - x1855 * x3))
            + x58 * (x1848 * x4 + x1850 - x1851 * x3),
            x20 * (x1860 - x1865 + x1868)
            - x3 * (x1870 * x4 + x1871 - x3 * (x1859 * x4 - x1873 * x3))
            + x58 * (x1868 * x4 + x1869 - x1870 * x3),
            x20 * (x1878 - x1883 + x1886)
            - x3 * (x1889 * x4 + x1891 - x3 * (x1877 * x4 - x1893 * x3))
            + x58 * (x1886 * x4 + x1888 - x1889 * x3),
            x1900 - x3 * (x1902 * x4 - x1904 * x3) + x58 * (x1896 * x4 - x1902 * x3),
            x1910 - x3 * (x1912 * x4 - x1914 * x3) + x58 * (x1907 * x4 - x1912 * x3),
            x1919 - x3 * (x1921 * x4 - x1923 * x3) + x58 * (x1918 * x4 - x1921 * x3),
            x1928 - x3 * (x1929 * x4 - x1930 * x3) + x58 * (x1927 * x4 - x1929 * x3),
            x1932 * x58 - x1934 * x3,
            x1936 * x58 - x1938 * x3,
            x1940 * x58 - x1942 * x3,
            x1944 * x58 - x1946 * x3,
            x1947 * x58 - x1948 * x3,
            -x3
            * (
                x1973 * x4
                + x20 * (-x1953 + x1958 + x1968)
                - x3
                * (
                    x19 * (x1952 - x1954 - x1955 + x1956)
                    + x1959 * x4
                    - x3 * (x1957 * x4 - x3 * (x1421 * x743 - x1448 * x6 + 2 * x801))
                )
            )
            + x4 * (x1972 * x4 - x1973 * x3 + x20 * (-x1966 + x1967 + x1971))
            + x53 * (x1960 - x1965 - x1969 + x1972),
            x20 * (x1977 - x1981 + x1983)
            - x3
            * (
                x19 * (x1446 + x1516 - x1974 + x1975 + x1980)
                + x1984 * x4
                - x3 * (x1976 * x4 - x3 * (x1447 + x1455 * x743 - x1473 * x6 + x1518))
            )
            + x4
            * (x19 * (x1444 + x1513 - x1978 + x1979 + x1982) + x1983 * x4 - x1984 * x3),
            x20 * (x1989 - x1994 + x1996)
            - x3
            * (
                x19 * (-x1985 - x1986 + x1987 + x1993)
                + x1997 * x4
                - x3 * (x1988 * x4 - x3 * (x1480 * x743 - x1499 * x6 + 2 * x879))
            )
            + x4 * (x19 * (-x1990 - x1991 + x1992 + x1995) + x1996 * x4 - x1997 * x3),
            x19 * (x1998 - x1999 - x2000 - x2001 + x2002)
            - x3 * (x2003 * x4 - x3 * (2 * x1472 + x1503 * x743 - x1519 * x6 + 2 * x903))
            + x4 * (x2002 * x4 - x2003 * x3),
            x19 * (x1488 + x1558 + x2004 - x2005 + x2006)
            - x3 * (x2007 * x4 - x3 * (x1498 + x1522 * x743 - x1533 * x6 + x1563))
            + x4 * (x2006 * x4 - x2007 * x3),
            x19 * (x2008 - x2009 - x2010 + x2011)
            - x3 * (x2012 * x4 - x3 * (x1536 * x743 - x1547 * x6 + 2 * x952))
            + x4 * (x2011 * x4 - x2012 * x3),
            -x3 * (3 * x1517 + x1553 * x743 - x1554 * x6 + 2 * x965)
            + x4 * (3 * x1514 + x1551 * x743 - x1553 * x6 + 2 * x963),
            -x3 * (2 * x1532 + x1562 * x743 - x1564 * x6 + 2 * x978)
            + x4 * (2 * x1530 + x1560 * x743 - x1562 * x6 + 2 * x976),
            -x3 * (x1546 + x1569 * x743 - x1570 * x6 + x1583)
            + x4 * (x1544 + x1567 * x743 - x1569 * x6 + x1581),
            -x3 * (2 * x1004 + x1575 * x743 - x1576 * x6)
            + x4 * (2 * x1002 + x1573 * x743 - x1575 * x6),
            2 * x1010 + 4 * x1552 + x1577 * x743 - x1578 * x6,
            2 * x1017 + 3 * x1561 + x1579 * x743 - x1580 * x6,
            2 * x1024 + 2 * x1568 + x1582 * x743 - x1584 * x6,
            2 * x1030 + x1574 + x1585 * x743 - x1586 * x6,
            2 * x1036 + x1587 * x743 - x1588 * x6,
            -x3
            * (
                x20 * (-x2016 + x2020 + x2029)
                + x2034 * x4
                - x3
                * (
                    x19 * (x1096 + x2015 - x2017 + x2018)
                    + x2021 * x4
                    - x3 * (x2019 * x4 - x3 * (x1097 + x1600 * x743 - x1626 * x6))
                )
            )
            + x4 * (x20 * (-x2027 + x2028 + x2032) + x2033 * x4 - x2034 * x3)
            + x53 * (x2022 - x2026 - x2030 + x2033),
            x20 * (x2038 - x2042 + x2044)
            - x3
            * (
                x19 * (x1145 + x1624 - x2035 + x2036 + x2041)
                + x2045 * x4
                - x3 * (x2037 * x4 - x3 * (x1146 + x1625 + x1631 * x743 - x1648 * x6))
            )
            + x4
            * (x19 * (x1143 + x1622 - x2039 + x2040 + x2043) + x2044 * x4 - x2045 * x3),
            x20 * (x2049 - x2053 + x2055)
            - x3
            * (
                x19 * (x1186 - x2046 + x2047 + x2052)
                + x2056 * x4
                - x3 * (x2048 * x4 - x3 * (x1187 + x1653 * x743 - x1671 * x6))
            )
            + x4 * (x19 * (x1184 - x2050 + x2051 + x2054) + x2055 * x4 - x2056 * x3),
            x19 * (x1218 + x2057 - x2058 - x2059 + x2060)
            - x3 * (x2061 * x4 - x3 * (x1222 + 2 * x1647 + x1673 * x743 - x1683 * x6))
            + x4 * (x2060 * x4 - x2061 * x3),
            x19 * (x1252 + x1660 + x2062 - x2063 + x2064)
            - x3 * (x2065 * x4 - x3 * (x1255 + x1670 + x1685 * x743 - x1695 * x6))
            + x4 * (x2064 * x4 - x2065 * x3),
            x19 * (x1278 + x2066 - x2067 + x2068)
            - x3 * (x2069 * x4 - x3 * (x1281 + x1697 * x743 - x1707 * x6))
            + x4 * (x2068 * x4 - x2069 * x3),
            -x3 * (x1303 + 3 * x1682 + x1711 * x743 - x1712 * x6)
            + x4 * (x1300 + 3 * x1680 + x1709 * x743 - x1711 * x6),
            -x3 * (x1324 + 2 * x1694 + x1716 * x743 - x1717 * x6)
            + x4 * (x1321 + 2 * x1692 + x1714 * x743 - x1716 * x6),
            -x3 * (x1343 + x1706 + x1721 * x743 - x1722 * x6)
            + x4 * (x1341 + x1704 + x1719 * x743 - x1721 * x6),
            -x3 * (x1357 + x1726 * x743 - x1727 * x6)
            + x4 * (x1355 + x1724 * x743 - x1726 * x6),
            x1365 + 4 * x1710 + x1728 * x743 - x1729 * x6,
            x1376 + 3 * x1715 + x1730 * x743 - x1731 * x6,
            x1386 + 2 * x1720 + x1732 * x743 - x1733 * x6,
            x1395 + x1725 + x1734 * x743 - x1735 * x6,
            x1404 + x1736 * x743 - x1737 * x6,
            -x3
            * (
                x20 * (-x2072 + x2075 + x2083)
                + x2088 * x4
                - x3
                * (
                    x19 * (x1786 + x2071 - x2073)
                    + x2076 * x4
                    - x3 * (x2074 * x4 - x3 * (x1752 * x743 + x1808))
                )
            )
            + x4 * (x20 * (-x2081 + x2082 + x2086) + x2087 * x4 - x2088 * x3)
            + x53 * (x2077 - x2080 - x2084 + x2087),
            x20 * (x2091 - x2094 + x2096)
            - x3
            * (
                x19 * (x1852 - x2089 + x2093)
                + x2097 * x4
                - x3 * (x2090 * x4 - x3 * (x1788 * x743 + x1854))
            )
            + x4 * (x19 * (x1849 - x2092 + x2095) + x2096 * x4 - x2097 * x3),
            x20 * (x2100 - x2103 + x2105)
            - x3
            * (
                x19 * (x1857 - x2098 + x2102)
                + x2106 * x4
                - x3 * (x2099 * x4 - x3 * (x1816 * x743 + x1872))
            )
            + x4 * (x19 * (x1862 - x2101 + x2104) + x2105 * x4 - x2106 * x3),
            x19 * (x1899 - x2107 + x2108)
            - x3 * (x2109 * x4 - x3 * (x1839 * x743 + x1903))
            + x4 * (x2108 * x4 - x2109 * x3),
            x19 * (x1909 - x2110 + x2111)
            - x3 * (x2112 * x4 - x3 * (x1859 * x743 + x1913))
            + x4 * (x2111 * x4 - x2112 * x3),
            x19 * (x1915 - x2113 + x2114)
            - x3 * (x2115 * x4 - x3 * (x1877 * x743 + x1922))
            + x4 * (x2114 * x4 - x2115 * x3),
            -x3 * (x1902 * x743 + x1933) + x4 * (x1896 * x743 + x1931),
            -x3 * (x1912 * x743 + x1937) + x4 * (x1907 * x743 + x1935),
            -x3 * (x1921 * x743 + x1941) + x4 * (x1918 * x743 + x1939),
            -x3 * (x1929 * x743 + x1945) + x4 * (x1927 * x743 + x1943),
            4 * x1900 + x1932 * x743 - x1934 * x6,
            3 * x1910 + x1936 * x743 - x1938 * x6,
            2 * x1919 + x1940 * x743 - x1942 * x6,
            x1928 + x1944 * x743 - x1946 * x6,
            x1947 * x743 - x1948 * x6,
            -x3
            * (
                x20 * (-x2120 + x2125 + x2136)
                + x2142 * x4
                - x3 * (x2126 * x4 + x2143 - x3 * (x2124 * x4 - x2144 * x3))
            )
            + x4 * (x20 * (-x2134 + x2135 + x2140) + x2141 * x4 - x2142 * x3)
            + x53 * (x2127 + x2133 - x2137 + x2141),
            x20 * (x2148 - x2152 + x2154)
            - x3 * (x2156 * x4 + x2157 - x3 * (x2147 * x4 - x2158 * x3))
            + x4 * (x2154 * x4 + x2155 - x2156 * x3),
            x20 * (x2162 - x2166 + x2168)
            - x3 * (x2170 * x4 + x2171 - x3 * (x2161 * x4 - x2172 * x3))
            + x4 * (x2168 * x4 + x2169 - x2170 * x3),
            x2176 - x3 * (x2177 * x4 - x2178 * x3) + x4 * (x2175 * x4 - x2177 * x3),
            x2182 - x3 * (x2183 * x4 - x2184 * x3) + x4 * (x2181 * x4 - x2183 * x3),
            x2190 - x3 * (x2191 * x4 - x2192 * x3) + x4 * (x2189 * x4 - x2191 * x3),
            x2193 * x4 - x2194 * x3,
            x2195 * x4 - x2196 * x3,
            x2197 * x4 - x2198 * x3,
            x2199 * x4 - x2200 * x3,
            x106 * x2193 + 3 * x2176 - x2194 * x6,
            x106 * x2195 + 2 * x2182 - x2196 * x6,
            x106 * x2197 + x2190 - x2198 * x6,
            x106 * x2199 - x2200 * x6,
            x1039 * x1947 + 2 * x1404 + 4 * x1928 - x1948 * x8,
        ]
    )


def coulomb3d_40(a, A, b, B, C):
    """Cartesian (gs) 1-electron Coulomb integral.

    Generated code; DO NOT modify by hand!"""

    x0 = (2 * a + 2 * b) ** (-1.0)
    x1 = a + b
    x2 = x1 ** (-1.0)
    x3 = -x2 * (a * A[0] + b * B[0])
    x4 = -x3 - C[0]
    x5 = -x3 - A[0]
    x6 = -x2 * (a * A[1] + b * B[1])
    x7 = -x6 - C[1]
    x8 = -x2 * (a * A[2] + b * B[2])
    x9 = -x8 - C[2]
    x10 = x1 * (x4 ** 2 + x7 ** 2 + x9 ** 2)
    x11 = (
        2
        * numpy.pi
        * x2
        * numpy.exp(
            -a * b * x2 * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2)
        )
    )
    x12 = x11 * boys(2, x10)
    x13 = x12 * x5
    x14 = x11 * boys(3, x10)
    x15 = x14 * x4
    x16 = x13 - x15
    x17 = x16 * x4
    x18 = x11 * boys(1, x10)
    x19 = x0 * (-x12 + x18)
    x20 = -x19
    x21 = x18 * x5
    x22 = x12 * x4
    x23 = x21 - x22
    x24 = x23 * x5
    x25 = x11 * boys(0, x10)
    x26 = x0 * (-x18 + x25)
    x27 = -x18 * x4 + x25 * x5
    x28 = -x23 * x4 + x26 + x27 * x5
    x29 = 2 * x0
    x30 = -x17 + x19 + x24
    x31 = x0 * (x12 - x14)
    x32 = x11 * boys(4, x10)
    x33 = -x6 - A[1]
    x34 = x12 * x33
    x35 = x14 * x7
    x36 = x34 - x35
    x37 = x36 * x4
    x38 = x18 * x33
    x39 = x12 * x7
    x40 = x38 - x39
    x41 = x40 * x5
    x42 = -x18 * x7 + x25 * x33
    x43 = -x4 * x40 + x42 * x5
    x44 = x0 * (-x38 + x39 + x42)
    x45 = -x37 + x41
    x46 = x0 * (-x34 + x35 + x40)
    x47 = x14 * x33 - x32 * x7
    x48 = -x8 - A[2]
    x49 = x12 * x48
    x50 = x14 * x9
    x51 = x49 - x50
    x52 = x4 * x51
    x53 = x18 * x48
    x54 = x12 * x9
    x55 = x53 - x54
    x56 = x5 * x55
    x57 = -x18 * x9 + x25 * x48
    x58 = -x4 * x55 + x5 * x57
    x59 = x0 * (-x53 + x54 + x57)
    x60 = -x52 + x56
    x61 = x0 * (-x49 + x50 + x55)
    x62 = x14 * x48 - x32 * x9
    x63 = x36 * x7
    x64 = x33 * x40
    x65 = x26 + x33 * x42 - x40 * x7
    x66 = x0 * (x20 + x63 - x64 + x65)
    x67 = x19 - x63 + x64
    x68 = x31 + x33 * x36 - x47 * x7
    x69 = x51 * x7
    x70 = x33 * x55
    x71 = x33 * x57 - x55 * x7
    x72 = x0 * (x69 - x70 + x71)
    x73 = -x69 + x70
    x74 = x33 * x51 - x62 * x7
    x75 = x51 * x9
    x76 = x48 * x55
    x77 = x26 + x48 * x57 - x55 * x9
    x78 = x0 * (x20 + x75 - x76 + x77)
    x79 = x19 - x75 + x76
    x80 = x31 + x48 * x51 - x62 * x9
    x81 = x33 * x65 + 2 * x44 - x67 * x7
    x82 = x33 * x67 + 2 * x46 - x68 * x7
    x83 = x33 * x71 + x59 - x7 * x73
    x84 = x33 * x73 + x61 - x7 * x74
    x85 = x33 * x77 - x7 * x79
    x86 = x33 * x79 - x7 * x80
    x87 = x48 * x77 + 2 * x59 - x79 * x9
    x88 = x48 * x79 + 2 * x61 - x80 * x9

    # 15 item(s)
    return numpy.array(
        [
            3 * x0 * (x17 + x20 - x24 + x28)
            - x4
            * (
                x29 * (-x13 + x15 + x23)
                + x30 * x5
                - x4 * (x16 * x5 + x31 - x4 * (x14 * x5 - x32 * x4))
            )
            + x5 * (x28 * x5 + x29 * (-x21 + x22 + x27) - x30 * x4),
            x29 * (x37 - x41 + x43)
            - x4 * (-x4 * (x36 * x5 - x4 * x47) + x45 * x5 + x46)
            + x5 * (-x4 * x45 + x43 * x5 + x44),
            x29 * (x52 - x56 + x58)
            - x4 * (-x4 * (-x4 * x62 + x5 * x51) + x5 * x60 + x61)
            + x5 * (-x4 * x60 + x5 * x58 + x59),
            -x4 * (-x4 * x68 + x5 * x67) + x5 * (-x4 * x67 + x5 * x65) + x66,
            -x4 * (-x4 * x74 + x5 * x73) + x5 * (-x4 * x73 + x5 * x71) + x72,
            -x4 * (-x4 * x80 + x5 * x79) + x5 * (-x4 * x79 + x5 * x77) + x78,
            -x4 * x82 + x5 * x81,
            -x4 * x84 + x5 * x83,
            -x4 * x86 + x5 * x85,
            -x4 * x88 + x5 * x87,
            x33 * x81 + 3 * x66 - x7 * x82,
            x33 * x83 - x7 * x84 + 2 * x72,
            x33 * x85 - x7 * x86 + x78,
            x33 * x87 - x7 * x88,
            x48 * x87 + 3 * x78 - x88 * x9,
        ]
    )


def coulomb3d_41(a, A, b, B, C):
    """Cartesian (gp) 1-electron Coulomb integral.

    Generated code; DO NOT modify by hand!"""

    x0 = (2 * a + 2 * b) ** (-1.0)
    x1 = a + b
    x2 = x1 ** (-1.0)
    x3 = -x2 * (a * A[0] + b * B[0])
    x4 = -x3 - A[0]
    x5 = -x3 - C[0]
    x6 = -x2 * (a * A[1] + b * B[1])
    x7 = -x6 - C[1]
    x8 = -x2 * (a * A[2] + b * B[2])
    x9 = -x8 - C[2]
    x10 = x1 * (x5 ** 2 + x7 ** 2 + x9 ** 2)
    x11 = (
        2
        * numpy.pi
        * x2
        * numpy.exp(
            -a * b * x2 * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2)
        )
    )
    x12 = x11 * boys(1, x10)
    x13 = x12 * x4
    x14 = x11 * boys(2, x10)
    x15 = x14 * x5
    x16 = x11 * boys(0, x10)
    x17 = -x12 * x5
    x18 = x16 * x4 + x17
    x19 = x0 * (-x13 + x15 + x18)
    x20 = x14 * x4
    x21 = x11 * boys(3, x10)
    x22 = x21 * x5
    x23 = -x15
    x24 = x13 + x23
    x25 = x0 * (-x20 + x22 + x24)
    x26 = x0 * (-x12 + x16)
    x27 = x18 * x4 - x24 * x5 + x26
    x28 = x0 * (x14 - x21)
    x29 = -x22
    x30 = x20 + x29
    x31 = x30 * x4
    x32 = x21 * x4
    x33 = x11 * boys(4, x10)
    x34 = x33 * x5
    x35 = -x34
    x36 = x5 * (x32 + x35)
    x37 = x0 * (x12 - x14)
    x38 = x24 * x4
    x39 = x30 * x5
    x40 = x37 + x38 - x39
    x41 = -x3 - B[0]
    x42 = x14 * x41
    x43 = x29 + x42
    x44 = x4 * x43
    x45 = x21 * x41
    x46 = x35 + x45
    x47 = x46 * x5
    x48 = x28 + x44 - x47
    x49 = x48 * x5
    x50 = x12 * x41
    x51 = x23 + x50
    x52 = x0 * (x22 - x42 + x51)
    x53 = x4 * x51
    x54 = x43 * x5
    x55 = x37 + x53 - x54
    x56 = x4 * x55
    x57 = x16 * x41 + x17
    x58 = x26 + x4 * x57 - x5 * x51
    x59 = x0 * (x15 - x50 + x57) + x19 + x4 * x58 - x5 * x55
    x60 = 3 * x0
    x61 = -x37
    x62 = 2 * x0
    x63 = x25 - x49 + x52 + x56
    x64 = -x28
    x65 = x0 * (x21 - x33)
    x66 = x11 * boys(5, x10)
    x67 = -x6 - B[1]
    x68 = x14 * x67
    x69 = x21 * x7
    x70 = -x69
    x71 = x68 + x70
    x72 = x4 * x71
    x73 = x21 * x67
    x74 = x33 * x7
    x75 = -x74
    x76 = x73 + x75
    x77 = x5 * x76
    x78 = x72 - x77
    x79 = x5 * x78
    x80 = x12 * x67
    x81 = x14 * x7
    x82 = -x81
    x83 = x80 + x82
    x84 = x0 * (-x68 + x69 + x83)
    x85 = -x84
    x86 = x4 * x83
    x87 = x5 * x71
    x88 = x86 - x87
    x89 = x4 * x88
    x90 = -x12 * x7
    x91 = x16 * x67 + x90
    x92 = x0 * (-x80 + x81 + x91)
    x93 = x4 * x91 - x5 * x83
    x94 = x4 * x93 - x5 * x88 + x92
    x95 = -x79 + x84 + x89
    x96 = x0 * (x71 - x73 + x74)
    x97 = -x66 * x7
    x98 = x33 * x67 + x97
    x99 = -x8 - B[2]
    x100 = x14 * x99
    x101 = x21 * x9
    x102 = -x101
    x103 = x100 + x102
    x104 = x103 * x4
    x105 = x21 * x99
    x106 = x33 * x9
    x107 = -x106
    x108 = x105 + x107
    x109 = x108 * x5
    x110 = x104 - x109
    x111 = x110 * x5
    x112 = x12 * x99
    x113 = x14 * x9
    x114 = -x113
    x115 = x112 + x114
    x116 = x0 * (-x100 + x101 + x115)
    x117 = -x116
    x118 = x115 * x4
    x119 = x103 * x5
    x120 = x118 - x119
    x121 = x120 * x4
    x122 = -x12 * x9
    x123 = x122 + x16 * x99
    x124 = x0 * (-x112 + x113 + x123)
    x125 = -x115 * x5 + x123 * x4
    x126 = -x120 * x5 + x124 + x125 * x4
    x127 = -x111 + x116 + x121
    x128 = x0 * (x103 - x105 + x106)
    x129 = -x66 * x9
    x130 = x129 + x33 * x99
    x131 = -x6 - A[1]
    x132 = x12 * x131
    x133 = x131 * x16 + x90
    x134 = x0 * (-x132 + x133 + x81)
    x135 = x131 * x14
    x136 = x132 + x82
    x137 = x0 * (-x135 + x136 + x69)
    x138 = -x137
    x139 = -x136 * x5
    x140 = x133 * x4 + x139
    x141 = x135 + x70
    x142 = x141 * x4
    x143 = x131 * x21
    x144 = x143 + x75
    x145 = x144 * x5
    x146 = -x145
    x147 = x136 * x4
    x148 = x141 * x5
    x149 = -x148
    x150 = x147 + x149
    x151 = x141 * x41
    x152 = x146 + x151
    x153 = x152 * x5
    x154 = x136 * x41
    x155 = x149 + x154
    x156 = x155 * x4
    x157 = x133 * x41 + x139
    x158 = x134 - x155 * x5 + x157 * x4
    x159 = x137 - x153 + x156
    x160 = x0 * (x141 - x143 + x74)
    x161 = x131 * x33 + x97
    x162 = x131 * x71
    x163 = x7 * x76
    x164 = x162 - x163 + x28
    x165 = x164 * x5
    x166 = x131 * x83
    x167 = x7 * x71
    x168 = x166 - x167 + x37
    x169 = x168 * x4
    x170 = x131 * x91 + x26 - x7 * x83
    x171 = -x168 * x5 + x170 * x4
    x172 = x0 * (-x166 + x167 + x170 + x61)
    x173 = -x165 + x169
    x174 = x0 * (-x162 + x163 + x168 + x64)
    x175 = x131 * x76 + x65 - x7 * x98
    x176 = x103 * x131
    x177 = x108 * x7
    x178 = x176 - x177
    x179 = x178 * x5
    x180 = x115 * x131
    x181 = x103 * x7
    x182 = x180 - x181
    x183 = x182 * x4
    x184 = -x115 * x7 + x123 * x131
    x185 = -x182 * x5 + x184 * x4
    x186 = x0 * (-x180 + x181 + x184)
    x187 = -x179 + x183
    x188 = x0 * (-x176 + x177 + x182)
    x189 = x108 * x131 - x130 * x7
    x190 = -x8 - A[2]
    x191 = x12 * x190
    x192 = x122 + x16 * x190
    x193 = x0 * (x113 - x191 + x192)
    x194 = x14 * x190
    x195 = x114 + x191
    x196 = x0 * (x101 - x194 + x195)
    x197 = -x196
    x198 = -x195 * x5
    x199 = x192 * x4 + x198
    x200 = x102 + x194
    x201 = x200 * x4
    x202 = x190 * x21
    x203 = x107 + x202
    x204 = x203 * x5
    x205 = -x204
    x206 = x195 * x4
    x207 = x200 * x5
    x208 = -x207
    x209 = x206 + x208
    x210 = x200 * x41
    x211 = x205 + x210
    x212 = x211 * x5
    x213 = x195 * x41
    x214 = x208 + x213
    x215 = x214 * x4
    x216 = x192 * x41 + x198
    x217 = x193 - x214 * x5 + x216 * x4
    x218 = x196 - x212 + x215
    x219 = x0 * (x106 + x200 - x202)
    x220 = x129 + x190 * x33
    x221 = x200 * x67
    x222 = x203 * x7
    x223 = -x222
    x224 = x221 + x223
    x225 = x224 * x5
    x226 = x195 * x67
    x227 = x200 * x7
    x228 = -x227
    x229 = x226 + x228
    x230 = x229 * x4
    x231 = -x195 * x7
    x232 = x192 * x67 + x231
    x233 = -x229 * x5 + x232 * x4
    x234 = x0 * (-x226 + x227 + x232)
    x235 = -x225 + x230
    x236 = x0 * (-x221 + x222 + x229)
    x237 = -x220 * x7
    x238 = x203 * x67 + x237
    x239 = x103 * x190
    x240 = x108 * x9
    x241 = x239 - x240 + x28
    x242 = x241 * x5
    x243 = x115 * x190
    x244 = x103 * x9
    x245 = x243 - x244 + x37
    x246 = x245 * x4
    x247 = -x115 * x9 + x123 * x190 + x26
    x248 = -x245 * x5 + x247 * x4
    x249 = x0 * (-x243 + x244 + x247 + x61)
    x250 = -x242 + x246
    x251 = x0 * (-x239 + x240 + x245 + x64)
    x252 = x108 * x190 - x130 * x9 + x65
    x253 = x131 * x133 - x136 * x7 + x26
    x254 = x131 * x141
    x255 = x144 * x7
    x256 = x254 - x255 + x28
    x257 = x256 * x5
    x258 = x131 * x136
    x259 = x141 * x7
    x260 = x258 - x259 + x37
    x261 = -x260 * x5
    x262 = x260 * x41
    x263 = x253 * x41 + x261
    x264 = x0 * (x253 - x258 + x259 + x61)
    x265 = -x257 + x262
    x266 = x0 * (-x254 + x255 + x260 + x64)
    x267 = x131 * x144 - x161 * x7 + x65
    x268 = x164 * x7
    x269 = x131 * x168
    x270 = x131 * x170 + x134 - x168 * x7 + x92
    x271 = x0 * (x138 + x268 - x269 + x270 + x85)
    x272 = x137 - x268 + x269 + x84
    x273 = x131 * x164 + x160 - x175 * x7 + x96
    x274 = x178 * x7
    x275 = x131 * x182
    x276 = x124 + x131 * x184 - x182 * x7
    x277 = x0 * (x117 + x274 - x275 + x276)
    x278 = x116 - x274 + x275
    x279 = x128 + x131 * x178 - x189 * x7
    x280 = x131 * x192 + x231
    x281 = x131 * x200
    x282 = x223 + x281
    x283 = x282 * x5
    x284 = x131 * x195
    x285 = x228 + x284
    x286 = -x285 * x5
    x287 = x285 * x41
    x288 = x280 * x41 + x286
    x289 = x0 * (x227 + x280 - x284)
    x290 = -x283 + x287
    x291 = x0 * (x222 - x281 + x285)
    x292 = x131 * x203 + x237
    x293 = x224 * x7
    x294 = x131 * x229
    x295 = x131 * x232 + x193 - x229 * x7
    x296 = x0 * (x197 + x293 - x294 + x295)
    x297 = x196 - x293 + x294
    x298 = x131 * x224 + x219 - x238 * x7
    x299 = x241 * x7
    x300 = x131 * x245
    x301 = x131 * x247 - x245 * x7
    x302 = x0 * (x299 - x300 + x301)
    x303 = -x299 + x300
    x304 = x131 * x241 - x252 * x7
    x305 = x190 * x192 - x195 * x9 + x26
    x306 = x190 * x200
    x307 = x203 * x9
    x308 = x28 + x306 - x307
    x309 = x308 * x5
    x310 = x190 * x195
    x311 = x200 * x9
    x312 = x310 - x311 + x37
    x313 = -x312 * x5
    x314 = x312 * x41
    x315 = x305 * x41 + x313
    x316 = x0 * (x305 - x310 + x311 + x61)
    x317 = -x309 + x314
    x318 = x0 * (-x306 + x307 + x312 + x64)
    x319 = x190 * x203 - x220 * x9 + x65
    x320 = x308 * x7
    x321 = x312 * x67
    x322 = -x312 * x7
    x323 = x305 * x67 + x322
    x324 = x0 * (x320 - x321 + x323)
    x325 = -x320
    x326 = x321 + x325
    x327 = -x319 * x7
    x328 = x308 * x67 + x327
    x329 = x241 * x9
    x330 = x190 * x245
    x331 = x124 + x190 * x247 + x193 - x245 * x9
    x332 = x0 * (x117 + x197 + x329 - x330 + x331)
    x333 = x116 + x196 - x329 + x330
    x334 = x128 + x190 * x241 + x219 - x252 * x9
    x335 = x256 * x7
    x336 = x131 * x260
    x337 = 2 * x137
    x338 = x131 * x253 + 2 * x134 - x260 * x7
    x339 = x0 * (x335 - x336 - x337 + x338)
    x340 = -x335 + x336 + x337
    x341 = x131 * x256 + 2 * x160 - x267 * x7
    x342 = x131 * x270 + 2 * x172 + x264 - x272 * x7
    x343 = x131 * x272 + 2 * x174 + x266 - x273 * x7
    x344 = x131 * x276 + 2 * x186 - x278 * x7
    x345 = x131 * x278 + 2 * x188 - x279 * x7
    x346 = x282 * x7
    x347 = x131 * x285
    x348 = x131 * x280 + x193 - x285 * x7
    x349 = x0 * (x197 + x346 - x347 + x348)
    x350 = x196 - x346 + x347
    x351 = x131 * x282 + x219 - x292 * x7
    x352 = x131 * x295 + x234 + x289 - x297 * x7
    x353 = x131 * x297 + x236 + x291 - x298 * x7
    x354 = x131 * x301 + x249 - x303 * x7
    x355 = x131 * x303 + x251 - x304 * x7
    x356 = x131 * x312
    x357 = x131 * x305 + x322
    x358 = x0 * (x320 - x356 + x357)
    x359 = x325 + x356
    x360 = x131 * x308 + x327
    x361 = x131 * x323 + x316 - x326 * x7
    x362 = x131 * x326 + x318 - x328 * x7
    x363 = x131 * x331 - x333 * x7
    x364 = x131 * x333 - x334 * x7
    x365 = x308 * x9
    x366 = x190 * x312
    x367 = 2 * x196
    x368 = x190 * x305 + 2 * x193 - x312 * x9
    x369 = x0 * (x365 - x366 - x367 + x368)
    x370 = -x365 + x366 + x367
    x371 = x190 * x308 + 2 * x219 - x319 * x9
    x372 = -x370 * x7
    x373 = x368 * x67 + x372
    x374 = -x371 * x7
    x375 = x370 * x67 + x374
    x376 = x190 * x331 + 2 * x249 + x316 - x333 * x9
    x377 = x190 * x333 + 2 * x251 + x318 - x334 * x9
    x378 = x190 * x368 + 3 * x316 - x370 * x9
    x379 = x190 * x370 + 3 * x318 - x371 * x9

    # 45 item(s)
    return numpy.array(
        [
            x0
            * (
                2 * x19
                - 2 * x25
                + x27 * x4
                - x4 * x40
                - x40 * x5
                + x5 * (x28 + x31 - x36)
            )
            + x4
            * (
                x0 * (x27 - x38 + x39 + x61)
                + x4 * x59
                - x5 * x63
                + x62 * (-x53 + x54 + x58 + x61)
            )
            - x5
            * (
                x0 * (-x31 + x36 + x40 + x64)
                + x4 * x63
                - x5
                * (
                    x0 * (x30 - x32 + x34)
                    + x0 * (x34 + x43 - x45)
                    + x4 * x48
                    - x5 * (x4 * x46 - x5 * (x33 * x41 - x5 * x66) + x65)
                )
                + x62 * (-x44 + x47 + x55 + x64)
            )
            + x60 * (-x25 + x49 - x52 - x56 + x59),
            x4 * (x4 * x94 - x5 * x95 + x62 * (-x86 + x87 + x93))
            - x5
            * (
                x4 * x95
                - x5 * (x4 * x78 - x5 * (x4 * x76 - x5 * x98) + x96)
                + x62 * (-x72 + x77 + x88)
            )
            + x60 * (x79 + x85 - x89 + x94),
            x4 * (x126 * x4 - x127 * x5 + x62 * (-x118 + x119 + x125))
            - x5
            * (
                x127 * x4
                - x5 * (x110 * x4 + x128 - x5 * (x108 * x4 - x130 * x5))
                + x62 * (-x104 + x109 + x120)
            )
            + x60 * (x111 + x117 - x121 + x126),
            x0 * (x134 + x138 + x140 * x4 - x150 * x4 - x150 * x5 + x5 * (x142 + x146))
            + x4
            * (
                x0 * (x140 - x147 + x148)
                + x0 * (x148 - x154 + x157)
                + x158 * x4
                - x159 * x5
            )
            - x5
            * (
                x0 * (-x142 + x145 + x150)
                + x0 * (x145 - x151 + x155)
                + x159 * x4
                - x5 * (x152 * x4 + x160 - x5 * (x144 * x41 - x161 * x5))
            )
            + x62 * (x138 + x153 - x156 + x158),
            x4 * (x171 * x4 + x172 - x173 * x5)
            - x5 * (x173 * x4 + x174 - x5 * (x164 * x4 - x175 * x5))
            + x62 * (x165 - x169 + x171),
            x4 * (x185 * x4 + x186 - x187 * x5)
            - x5 * (x187 * x4 + x188 - x5 * (x178 * x4 - x189 * x5))
            + x62 * (x179 - x183 + x185),
            x0 * (x193 + x197 + x199 * x4 - x209 * x4 - x209 * x5 + x5 * (x201 + x205))
            + x4
            * (
                x0 * (x199 - x206 + x207)
                + x0 * (x207 - x213 + x216)
                + x217 * x4
                - x218 * x5
            )
            - x5
            * (
                x0 * (-x201 + x204 + x209)
                + x0 * (x204 - x210 + x214)
                + x218 * x4
                - x5 * (x211 * x4 + x219 - x5 * (x203 * x41 - x220 * x5))
            )
            + x62 * (x197 + x212 - x215 + x217),
            x4 * (x233 * x4 + x234 - x235 * x5)
            - x5 * (x235 * x4 + x236 - x5 * (x224 * x4 - x238 * x5))
            + x62 * (x225 - x230 + x233),
            x4 * (x248 * x4 + x249 - x250 * x5)
            - x5 * (x250 * x4 + x251 - x5 * (x241 * x4 - x252 * x5))
            + x62 * (x242 - x246 + x248),
            x0 * (x257 - x262 + x263)
            + x0 * (x253 * x4 + x257 - x260 * x4 + x261)
            + x4 * (x263 * x4 + x264 - x265 * x5)
            - x5 * (x265 * x4 + x266 - x5 * (x256 * x41 - x267 * x5)),
            x271 + x4 * (x270 * x4 - x272 * x5) - x5 * (x272 * x4 - x273 * x5),
            x277 + x4 * (x276 * x4 - x278 * x5) - x5 * (x278 * x4 - x279 * x5),
            x0 * (x283 - x287 + x288)
            + x0 * (x280 * x4 + x283 - x285 * x4 + x286)
            + x4 * (x288 * x4 + x289 - x290 * x5)
            - x5 * (x290 * x4 + x291 - x5 * (x282 * x41 - x292 * x5)),
            x296 + x4 * (x295 * x4 - x297 * x5) - x5 * (x297 * x4 - x298 * x5),
            x302 + x4 * (x301 * x4 - x303 * x5) - x5 * (x303 * x4 - x304 * x5),
            x0 * (x309 - x314 + x315)
            + x0 * (x305 * x4 + x309 - x312 * x4 + x313)
            + x4 * (x315 * x4 + x316 - x317 * x5)
            - x5 * (x317 * x4 + x318 - x5 * (x308 * x41 - x319 * x5)),
            x324 + x4 * (x323 * x4 - x326 * x5) - x5 * (x326 * x4 - x328 * x5),
            x332 + x4 * (x331 * x4 - x333 * x5) - x5 * (x333 * x4 - x334 * x5),
            x339 + x4 * (x338 * x41 - x340 * x5) - x5 * (x340 * x41 - x341 * x5),
            x342 * x4 - x343 * x5,
            x344 * x4 - x345 * x5,
            x349 + x4 * (x348 * x41 - x350 * x5) - x5 * (x350 * x41 - x351 * x5),
            x352 * x4 - x353 * x5,
            x354 * x4 - x355 * x5,
            x358 + x4 * (x357 * x41 - x359 * x5) - x5 * (x359 * x41 - x360 * x5),
            x361 * x4 - x362 * x5,
            x363 * x4 - x364 * x5,
            x369 + x4 * (x368 * x41 - x370 * x5) - x5 * (x370 * x41 - x371 * x5),
            x373 * x4 - x375 * x5,
            x376 * x4 - x377 * x5,
            x41 * (x131 * x338 + 3 * x264 - x340 * x7)
            - x5 * (x131 * x340 + 3 * x266 - x341 * x7),
            x131 * x342 + 3 * x271 + x339 - x343 * x7,
            x131 * x344 + 3 * x277 - x345 * x7,
            x41 * (x131 * x348 + 2 * x289 - x350 * x7)
            - x5 * (x131 * x350 + 2 * x291 - x351 * x7),
            x131 * x352 + 2 * x296 + x349 - x353 * x7,
            x131 * x354 + 2 * x302 - x355 * x7,
            x41 * (x131 * x357 + x316 - x359 * x7)
            - x5 * (x131 * x359 + x318 - x360 * x7),
            x131 * x361 + x324 + x358 - x362 * x7,
            x131 * x363 + x332 - x364 * x7,
            x41 * (x131 * x368 + x372) - x5 * (x131 * x370 + x374),
            x131 * x373 + x369 - x375 * x7,
            x131 * x376 - x377 * x7,
            x378 * x41 - x379 * x5,
            x378 * x67 - x379 * x7,
            x190 * x376 + 3 * x332 + x369 - x377 * x9,
        ]
    )


def coulomb3d_42(a, A, b, B, C):
    """Cartesian (gd) 1-electron Coulomb integral.

    Generated code; DO NOT modify by hand!"""

    x0 = a + b
    x1 = x0 ** (-1.0)
    x2 = -x1 * (a * A[0] + b * B[0])
    x3 = -x2 - A[0]
    x4 = -x2 - B[0]
    x5 = -x2 - C[0]
    x6 = -x1 * (a * A[1] + b * B[1])
    x7 = -x6 - C[1]
    x8 = -x1 * (a * A[2] + b * B[2])
    x9 = -x8 - C[2]
    x10 = x0 * (x5 ** 2 + x7 ** 2 + x9 ** 2)
    x11 = (
        2
        * numpy.pi
        * x1
        * numpy.exp(
            -a * b * x1 * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2)
        )
    )
    x12 = x11 * boys(2, x10)
    x13 = x12 * x4
    x14 = x11 * boys(3, x10)
    x15 = x14 * x5
    x16 = -x15
    x17 = x13 + x16
    x18 = x17 * x3
    x19 = x11 * boys(1, x10)
    x20 = x19 * x4
    x21 = x12 * x5
    x22 = -x21
    x23 = x20 + x22
    x24 = x23 * x3
    x25 = (2 * a + 2 * b) ** (-1.0)
    x26 = x25 * (-x12 + x19)
    x27 = x17 * x5
    x28 = x26 - x27
    x29 = x24 + x28
    x30 = x14 * x4
    x31 = x11 * boys(4, x10)
    x32 = x31 * x5
    x33 = -x32
    x34 = x30 + x33
    x35 = x34 * x5
    x36 = x25 * (x12 - x14)
    x37 = -x36
    x38 = x35 + x37
    x39 = 2 * x25
    x40 = x39 * (-x18 + x29 + x38)
    x41 = -x40
    x42 = x25 * (x17 - x30 + x32)
    x43 = 2 * x42
    x44 = x17 * x4
    x45 = -x35 + x36
    x46 = x44 + x45
    x47 = x3 * x46
    x48 = x34 * x4
    x49 = x25 * (x14 - x31)
    x50 = x31 * x4
    x51 = x11 * boys(5, x10)
    x52 = x5 * x51
    x53 = x50 - x52
    x54 = x5 * x53
    x55 = x49 - x54
    x56 = x48 + x55
    x57 = x5 * x56
    x58 = x43 + x47 - x57
    x59 = x5 * x58
    x60 = x23 * x4
    x61 = x28 + x60
    x62 = x25 * (x38 - x44 + x61)
    x63 = x25 * (-x13 + x15 + x23)
    x64 = 2 * x63
    x65 = x3 * x61
    x66 = x46 * x5
    x67 = x64 + x65 - x66
    x68 = x3 * x67
    x69 = x11 * boys(0, x10)
    x70 = -x19 * x5
    x71 = x4 * x69 + x70
    x72 = x25 * (-x19 + x69)
    x73 = -x23 * x5 + x72
    x74 = x4 * x71 + x73
    x75 = -x26
    x76 = x27 + x75
    x77 = x3 * x71 + x73
    x78 = x39 * (-x24 + x76 + x77)
    x79 = x25 * (-x20 + x21 + x71)
    x80 = x3 * x74 - x5 * x61 + 2 * x79
    x81 = x25 * (-x60 + x74 + x76) + x3 * x80 - x5 * x67 + x78
    x82 = 3 * x25
    x83 = x3 * x69 + x70
    x84 = x12 * x3
    x85 = x16 + x84
    x86 = x5 * x85
    x87 = x19 * x3
    x88 = x22 + x87
    x89 = x3 * x88
    x90 = x14 * x3
    x91 = x25 * (x21 + x83 - x87) - x29 * x5 + x3 * x77 + x79
    x92 = x25 * (x32 + x85 - x90)
    x93 = x18 + x45
    x94 = x3 * x93
    x95 = x3 * x34
    x96 = x5 * (x55 + x95)
    x97 = x25 * (x15 - x84 + x88)
    x98 = x29 * x3
    x99 = x5 * x93
    x100 = x63 + x97 + x98 - x99
    x101 = x40 - x59 + x62 + x68
    x102 = -x49
    x103 = x102 + x54
    x104 = x25 * (x31 - x51)
    x105 = x11 * boys(6, x10)
    x106 = -x6 - B[1]
    x107 = x106 * x12
    x108 = x14 * x7
    x109 = -x108
    x110 = x107 + x109
    x111 = x110 * x5
    x112 = x106 * x19
    x113 = x12 * x7
    x114 = -x113
    x115 = x112 + x114
    x116 = x115 * x3
    x117 = -x19 * x7
    x118 = x106 * x69 + x117
    x119 = -x115 * x5
    x120 = x118 * x3 + x119
    x121 = x25 * (x111 - x116 + x120)
    x122 = x106 * x14
    x123 = x31 * x7
    x124 = -x123
    x125 = x122 + x124
    x126 = x125 * x5
    x127 = x110 * x3
    x128 = -x111
    x129 = x116 + x128
    x130 = x25 * (x126 - x127 + x129)
    x131 = x25 * (-x112 + x113 + x118)
    x132 = x120 * x3 - x129 * x5 + x131
    x133 = x25 * (x110 - x122 + x123)
    x134 = -x126
    x135 = x127 + x134
    x136 = x135 * x3
    x137 = x125 * x3
    x138 = x106 * x31
    x139 = x51 * x7
    x140 = -x139
    x141 = x138 + x140
    x142 = x141 * x5
    x143 = -x142
    x144 = x5 * (x137 + x143)
    x145 = x25 * (-x107 + x108 + x115)
    x146 = x129 * x3
    x147 = x135 * x5
    x148 = x145 + x146 - x147
    x149 = x110 * x4
    x150 = x134 + x149
    x151 = x150 * x3
    x152 = x125 * x4
    x153 = x143 + x152
    x154 = x153 * x5
    x155 = x133 + x151 - x154
    x156 = x155 * x5
    x157 = x115 * x4
    x158 = x128 + x157
    x159 = x25 * (x126 - x149 + x158)
    x160 = x158 * x3
    x161 = x150 * x5
    x162 = x145 + x160 - x161
    x163 = x162 * x3
    x164 = x118 * x4 + x119
    x165 = x131 - x158 * x5 + x164 * x3
    x166 = x121 - x162 * x5 + x165 * x3 + x25 * (x111 - x157 + x164)
    x167 = -x145
    x168 = x130 - x156 + x159 + x163
    x169 = -x133
    x170 = x25 * (x125 - x138 + x139)
    x171 = -x105 * x7
    x172 = x106 * x51 + x171
    x173 = -x8 - B[2]
    x174 = x12 * x173
    x175 = x14 * x9
    x176 = -x175
    x177 = x174 + x176
    x178 = x177 * x5
    x179 = x173 * x19
    x180 = x12 * x9
    x181 = -x180
    x182 = x179 + x181
    x183 = x182 * x3
    x184 = -x19 * x9
    x185 = x173 * x69 + x184
    x186 = -x182 * x5
    x187 = x185 * x3 + x186
    x188 = x25 * (x178 - x183 + x187)
    x189 = x14 * x173
    x190 = x31 * x9
    x191 = -x190
    x192 = x189 + x191
    x193 = x192 * x5
    x194 = x177 * x3
    x195 = -x178
    x196 = x183 + x195
    x197 = x25 * (x193 - x194 + x196)
    x198 = x25 * (-x179 + x180 + x185)
    x199 = x187 * x3 - x196 * x5 + x198
    x200 = x25 * (x177 - x189 + x190)
    x201 = -x193
    x202 = x194 + x201
    x203 = x202 * x3
    x204 = x192 * x3
    x205 = x173 * x31
    x206 = x51 * x9
    x207 = -x206
    x208 = x205 + x207
    x209 = x208 * x5
    x210 = -x209
    x211 = x5 * (x204 + x210)
    x212 = x25 * (-x174 + x175 + x182)
    x213 = x196 * x3
    x214 = x202 * x5
    x215 = x212 + x213 - x214
    x216 = x177 * x4
    x217 = x201 + x216
    x218 = x217 * x3
    x219 = x192 * x4
    x220 = x210 + x219
    x221 = x220 * x5
    x222 = x200 + x218 - x221
    x223 = x222 * x5
    x224 = x182 * x4
    x225 = x195 + x224
    x226 = x25 * (x193 - x216 + x225)
    x227 = x225 * x3
    x228 = x217 * x5
    x229 = x212 + x227 - x228
    x230 = x229 * x3
    x231 = x185 * x4 + x186
    x232 = x198 - x225 * x5 + x231 * x3
    x233 = x188 - x229 * x5 + x232 * x3 + x25 * (x178 - x224 + x231)
    x234 = -x212
    x235 = x197 - x223 + x226 + x230
    x236 = -x200
    x237 = x25 * (x192 - x205 + x206)
    x238 = -x105 * x9
    x239 = x173 * x51 + x238
    x240 = x106 * x110
    x241 = x125 * x7
    x242 = -x241 + x36
    x243 = x240 + x242
    x244 = x243 * x3
    x245 = x106 * x125
    x246 = x141 * x7
    x247 = -x246 + x49
    x248 = x245 + x247
    x249 = x248 * x5
    x250 = x244 - x249
    x251 = x250 * x5
    x252 = x106 * x115
    x253 = x110 * x7
    x254 = -x253 + x26
    x255 = x252 + x254
    x256 = x241 + x37
    x257 = x25 * (-x240 + x255 + x256)
    x258 = -x257
    x259 = x255 * x3
    x260 = x243 * x5
    x261 = x259 - x260
    x262 = x261 * x3
    x263 = -x115 * x7 + x72
    x264 = x106 * x118 + x263
    x265 = x253 + x75
    x266 = x25 * (-x252 + x264 + x265)
    x267 = -x255 * x5 + x264 * x3
    x268 = -x261 * x5 + x266 + x267 * x3
    x269 = -x251 + x257 + x262
    x270 = x102 + x246
    x271 = x25 * (x243 - x245 + x270)
    x272 = x104 - x172 * x7
    x273 = x106 * x141 + x272
    x274 = x106 * x177
    x275 = x192 * x7
    x276 = -x275
    x277 = x274 + x276
    x278 = x277 * x3
    x279 = x106 * x192
    x280 = x208 * x7
    x281 = -x280
    x282 = x279 + x281
    x283 = x282 * x5
    x284 = x278 - x283
    x285 = x284 * x5
    x286 = x106 * x182
    x287 = x177 * x7
    x288 = -x287
    x289 = x286 + x288
    x290 = x25 * (-x274 + x275 + x289)
    x291 = -x290
    x292 = x289 * x3
    x293 = x277 * x5
    x294 = x292 - x293
    x295 = x294 * x3
    x296 = -x182 * x7
    x297 = x106 * x185 + x296
    x298 = x25 * (-x286 + x287 + x297)
    x299 = -x289 * x5 + x297 * x3
    x300 = -x294 * x5 + x298 + x299 * x3
    x301 = -x285 + x290 + x295
    x302 = x25 * (x277 - x279 + x280)
    x303 = -x239 * x7
    x304 = x106 * x208 + x303
    x305 = x173 * x177
    x306 = x192 * x9
    x307 = -x306 + x36
    x308 = x305 + x307
    x309 = x3 * x308
    x310 = x173 * x192
    x311 = x208 * x9
    x312 = -x311 + x49
    x313 = x310 + x312
    x314 = x313 * x5
    x315 = x309 - x314
    x316 = x315 * x5
    x317 = x173 * x182
    x318 = x177 * x9
    x319 = x26 - x318
    x320 = x317 + x319
    x321 = x306 + x37
    x322 = x25 * (-x305 + x320 + x321)
    x323 = -x322
    x324 = x3 * x320
    x325 = x308 * x5
    x326 = x324 - x325
    x327 = x3 * x326
    x328 = -x182 * x9 + x72
    x329 = x173 * x185 + x328
    x330 = x318 + x75
    x331 = x25 * (-x317 + x329 + x330)
    x332 = x3 * x329 - x320 * x5
    x333 = x3 * x332 - x326 * x5 + x331
    x334 = -x316 + x322 + x327
    x335 = x102 + x311
    x336 = x25 * (x308 - x310 + x335)
    x337 = x104 - x239 * x9
    x338 = x173 * x208 + x337
    x339 = -x6 - A[1]
    x340 = x12 * x339
    x341 = x109 + x340
    x342 = x341 * x4
    x343 = x14 * x339
    x344 = x124 + x343
    x345 = x344 * x5
    x346 = x342 - x345
    x347 = x346 * x4
    x348 = x25 * (x123 + x341 - x343)
    x349 = x344 * x4
    x350 = x31 * x339
    x351 = x140 + x350
    x352 = x351 * x5
    x353 = x349 - x352
    x354 = x353 * x5
    x355 = x348 - x354
    x356 = x347 + x355
    x357 = x356 * x5
    x358 = x19 * x339
    x359 = x114 + x358
    x360 = x359 * x4
    x361 = x341 * x5
    x362 = -x361
    x363 = x360 + x362
    x364 = x363 * x4
    x365 = x25 * (x108 - x340 + x359)
    x366 = x346 * x5
    x367 = x365 - x366
    x368 = x364 + x367
    x369 = x3 * x368
    x370 = x25 * (-x342 + x345 + x363)
    x371 = 2 * x370
    x372 = x117 + x339 * x69
    x373 = -x359 * x5
    x374 = x372 * x4 + x373
    x375 = x25 * (-x360 + x361 + x374)
    x376 = x25 * (x113 - x358 + x372)
    x377 = -x363 * x5 + x376
    x378 = x374 * x4 + x377
    x379 = x3 * x378 - x368 * x5 + 2 * x375
    x380 = x3 * x359
    x381 = x3 * x374 + x377
    x382 = x3 * x346
    x383 = x3 * x363
    x384 = x367 + x383
    x385 = -x365
    x386 = x366 + x385
    x387 = -x357 + x369 + x371
    x388 = -x348
    x389 = x354 + x388
    x390 = x25 * (x139 + x344 - x350)
    x391 = x171 + x339 * x51
    x392 = x115 * x339
    x393 = x118 * x339 + x263
    x394 = x25 * (x265 - x392 + x393)
    x395 = x110 * x339
    x396 = x254 + x392
    x397 = x25 * (x256 - x395 + x396)
    x398 = -x397
    x399 = -x396 * x5
    x400 = x3 * x393 + x399
    x401 = x242 + x395
    x402 = x3 * x401
    x403 = x125 * x339
    x404 = x247 + x403
    x405 = x404 * x5
    x406 = -x405
    x407 = x3 * x396
    x408 = x401 * x5
    x409 = -x408
    x410 = x407 + x409
    x411 = x4 * x401
    x412 = x406 + x411
    x413 = x412 * x5
    x414 = x396 * x4
    x415 = x409 + x414
    x416 = x3 * x415
    x417 = x393 * x4 + x399
    x418 = x3 * x417 + x394 - x415 * x5
    x419 = x397 - x413 + x416
    x420 = x25 * (x270 + x401 - x403)
    x421 = x141 * x339 + x272
    x422 = x182 * x339
    x423 = x185 * x339 + x296
    x424 = x25 * (x287 - x422 + x423)
    x425 = x177 * x339
    x426 = x288 + x422
    x427 = x25 * (x275 - x425 + x426)
    x428 = -x427
    x429 = -x426 * x5
    x430 = x3 * x423 + x429
    x431 = x276 + x425
    x432 = x3 * x431
    x433 = x192 * x339
    x434 = x281 + x433
    x435 = x434 * x5
    x436 = -x435
    x437 = x3 * x426
    x438 = x431 * x5
    x439 = -x438
    x440 = x437 + x439
    x441 = x4 * x431
    x442 = x436 + x441
    x443 = x442 * x5
    x444 = x4 * x426
    x445 = x439 + x444
    x446 = x3 * x445
    x447 = x4 * x423 + x429
    x448 = x3 * x447 + x424 - x445 * x5
    x449 = x427 - x443 + x446
    x450 = x25 * (x280 + x431 - x433)
    x451 = x208 * x339 + x303
    x452 = 2 * x133
    x453 = x243 * x339
    x454 = x248 * x7
    x455 = x452 + x453 - x454
    x456 = x455 * x5
    x457 = 2 * x145
    x458 = x255 * x339
    x459 = x243 * x7
    x460 = x457 + x458 - x459
    x461 = x3 * x460
    x462 = 2 * x131 - x255 * x7 + x264 * x339
    x463 = x3 * x462 - x460 * x5
    x464 = x25 * (-x457 - x458 + x459 + x462)
    x465 = -x456 + x461
    x466 = x25 * (-x452 - x453 + x454 + x460)
    x467 = 2 * x170 + x248 * x339 - x273 * x7
    x468 = x277 * x339
    x469 = x282 * x7
    x470 = x200 + x468 - x469
    x471 = x470 * x5
    x472 = x289 * x339
    x473 = x277 * x7
    x474 = x212 + x472 - x473
    x475 = x3 * x474
    x476 = x198 - x289 * x7 + x297 * x339
    x477 = x3 * x476 - x474 * x5
    x478 = x25 * (x234 - x472 + x473 + x476)
    x479 = -x471 + x475
    x480 = x25 * (x236 - x468 + x469 + x474)
    x481 = x237 + x282 * x339 - x304 * x7
    x482 = x308 * x339
    x483 = x313 * x7
    x484 = x482 - x483
    x485 = x484 * x5
    x486 = x320 * x339
    x487 = x308 * x7
    x488 = x486 - x487
    x489 = x3 * x488
    x490 = -x320 * x7 + x329 * x339
    x491 = x3 * x490 - x488 * x5
    x492 = x25 * (-x486 + x487 + x490)
    x493 = -x485 + x489
    x494 = x25 * (-x482 + x483 + x488)
    x495 = x313 * x339 - x338 * x7
    x496 = -x8 - A[2]
    x497 = x12 * x496
    x498 = x176 + x497
    x499 = x4 * x498
    x500 = x14 * x496
    x501 = x191 + x500
    x502 = x5 * x501
    x503 = x499 - x502
    x504 = x4 * x503
    x505 = x25 * (x190 + x498 - x500)
    x506 = x4 * x501
    x507 = x31 * x496
    x508 = x207 + x507
    x509 = x5 * x508
    x510 = x506 - x509
    x511 = x5 * x510
    x512 = x505 - x511
    x513 = x504 + x512
    x514 = x5 * x513
    x515 = x19 * x496
    x516 = x181 + x515
    x517 = x4 * x516
    x518 = x498 * x5
    x519 = -x518
    x520 = x517 + x519
    x521 = x4 * x520
    x522 = x25 * (x175 - x497 + x516)
    x523 = x5 * x503
    x524 = x522 - x523
    x525 = x521 + x524
    x526 = x3 * x525
    x527 = x25 * (-x499 + x502 + x520)
    x528 = 2 * x527
    x529 = x184 + x496 * x69
    x530 = -x5 * x516
    x531 = x4 * x529 + x530
    x532 = x25 * (-x517 + x518 + x531)
    x533 = x25 * (x180 - x515 + x529)
    x534 = -x5 * x520 + x533
    x535 = x4 * x531 + x534
    x536 = x3 * x535 - x5 * x525 + 2 * x532
    x537 = x3 * x516
    x538 = x3 * x531 + x534
    x539 = x3 * x503
    x540 = x3 * x520
    x541 = x524 + x540
    x542 = -x522
    x543 = x523 + x542
    x544 = -x514 + x526 + x528
    x545 = -x505
    x546 = x511 + x545
    x547 = x25 * (x206 + x501 - x507)
    x548 = x238 + x496 * x51
    x549 = x498 * x7
    x550 = x106 * x516
    x551 = -x516 * x7
    x552 = x106 * x529 + x551
    x553 = x25 * (x549 - x550 + x552)
    x554 = x501 * x7
    x555 = x106 * x498
    x556 = -x549
    x557 = x550 + x556
    x558 = x25 * (x554 - x555 + x557)
    x559 = -x558
    x560 = -x5 * x557
    x561 = x3 * x552 + x560
    x562 = -x554
    x563 = x555 + x562
    x564 = x3 * x563
    x565 = x106 * x501
    x566 = x508 * x7
    x567 = -x566
    x568 = x565 + x567
    x569 = x5 * x568
    x570 = -x569
    x571 = x3 * x557
    x572 = x5 * x563
    x573 = -x572
    x574 = x571 + x573
    x575 = x4 * x563
    x576 = x570 + x575
    x577 = x5 * x576
    x578 = x4 * x557
    x579 = x573 + x578
    x580 = x3 * x579
    x581 = x4 * x552 + x560
    x582 = x3 * x581 - x5 * x579 + x553
    x583 = x558 - x577 + x580
    x584 = x25 * (x563 - x565 + x566)
    x585 = -x548 * x7
    x586 = x106 * x508 + x585
    x587 = x182 * x496
    x588 = x185 * x496 + x328
    x589 = x25 * (x330 - x587 + x588)
    x590 = x177 * x496
    x591 = x319 + x587
    x592 = x25 * (x321 - x590 + x591)
    x593 = -x592
    x594 = -x5 * x591
    x595 = x3 * x588 + x594
    x596 = x307 + x590
    x597 = x3 * x596
    x598 = x192 * x496
    x599 = x312 + x598
    x600 = x5 * x599
    x601 = -x600
    x602 = x3 * x591
    x603 = x5 * x596
    x604 = -x603
    x605 = x602 + x604
    x606 = x4 * x596
    x607 = x601 + x606
    x608 = x5 * x607
    x609 = x4 * x591
    x610 = x604 + x609
    x611 = x3 * x610
    x612 = x4 * x588 + x594
    x613 = x3 * x612 - x5 * x610 + x589
    x614 = x592 - x608 + x611
    x615 = x25 * (x335 + x596 - x598)
    x616 = x208 * x496 + x337
    x617 = x106 * x563
    x618 = x568 * x7
    x619 = x505 - x618
    x620 = x617 + x619
    x621 = x5 * x620
    x622 = x106 * x557
    x623 = x563 * x7
    x624 = x522 - x623
    x625 = x622 + x624
    x626 = x3 * x625
    x627 = x533 - x557 * x7
    x628 = x106 * x552 + x627
    x629 = x3 * x628 - x5 * x625
    x630 = x542 + x623
    x631 = x25 * (-x622 + x628 + x630)
    x632 = -x621 + x626
    x633 = x545 + x618
    x634 = x25 * (-x617 + x625 + x633)
    x635 = x547 - x586 * x7
    x636 = x106 * x568 + x635
    x637 = x106 * x596
    x638 = x599 * x7
    x639 = -x638
    x640 = x637 + x639
    x641 = x5 * x640
    x642 = x106 * x591
    x643 = x596 * x7
    x644 = -x643
    x645 = x642 + x644
    x646 = x3 * x645
    x647 = -x591 * x7
    x648 = x106 * x588 + x647
    x649 = x3 * x648 - x5 * x645
    x650 = x25 * (-x642 + x643 + x648)
    x651 = -x641 + x646
    x652 = x25 * (-x637 + x638 + x645)
    x653 = -x616 * x7
    x654 = x106 * x599 + x653
    x655 = 2 * x200
    x656 = x308 * x496
    x657 = x313 * x9
    x658 = x655 + x656 - x657
    x659 = x5 * x658
    x660 = 2 * x212
    x661 = x320 * x496
    x662 = x308 * x9
    x663 = x660 + x661 - x662
    x664 = x3 * x663
    x665 = 2 * x198 - x320 * x9 + x329 * x496
    x666 = x3 * x665 - x5 * x663
    x667 = x25 * (-x660 - x661 + x662 + x665)
    x668 = -x659 + x664
    x669 = x25 * (-x655 - x656 + x657 + x663)
    x670 = 2 * x237 + x313 * x496 - x338 * x9
    x671 = x339 * x359
    x672 = x341 * x7
    x673 = x26 + x671 - x672
    x674 = x4 * x673
    x675 = x339 * x341
    x676 = x344 * x7
    x677 = x36 + x675 - x676
    x678 = x5 * x677
    x679 = x674 - x678
    x680 = x4 * x679
    x681 = x339 * x372 - x359 * x7 + x72
    x682 = x4 * x681 - x5 * x673
    x683 = x25 * (-x671 + x672 + x681 + x75)
    x684 = -x5 * x679 + x683
    x685 = x4 * x682 + x684
    x686 = x4 * x677
    x687 = x339 * x344
    x688 = x351 * x7
    x689 = x49 + x687 - x688
    x690 = x5 * x689
    x691 = x686 - x690
    x692 = x5 * x691
    x693 = x25 * (x37 + x673 - x675 + x676)
    x694 = -x693
    x695 = x692 + x694
    x696 = x680 - x692 + x693
    x697 = x25 * (x102 + x677 - x687 + x688)
    x698 = x104 + x339 * x351 - x391 * x7
    x699 = x131 + x339 * x393 + x376 - x396 * x7
    x700 = x339 * x401
    x701 = x404 * x7
    x702 = x133 + x348 + x700 - x701
    x703 = x5 * x702
    x704 = x339 * x396
    x705 = x401 * x7
    x706 = x145 + x365 + x704 - x705
    x707 = -x5 * x706
    x708 = x4 * x706
    x709 = x4 * x699 + x707
    x710 = x25 * (x167 + x385 + x699 - x704 + x705)
    x711 = -x703 + x708
    x712 = x25 * (x169 + x388 - x700 + x701 + x706)
    x713 = x170 + x339 * x404 + x390 - x421 * x7
    x714 = x198 + x339 * x423 - x426 * x7
    x715 = x339 * x431
    x716 = x434 * x7
    x717 = x200 + x715 - x716
    x718 = x5 * x717
    x719 = x339 * x426
    x720 = x431 * x7
    x721 = x212 + x719 - x720
    x722 = -x5 * x721
    x723 = x4 * x721
    x724 = x4 * x714 + x722
    x725 = x25 * (x234 + x714 - x719 + x720)
    x726 = -x718 + x723
    x727 = x25 * (x236 - x715 + x716 + x721)
    x728 = x237 + x339 * x434 - x451 * x7
    x729 = x455 * x7
    x730 = x339 * x460
    x731 = 2 * x397
    x732 = -x731
    x733 = 2 * x394
    x734 = x266 + x339 * x462 - x460 * x7 + x733
    x735 = x25 * (x258 + x729 - x730 + x732 + x734)
    x736 = x257 - x729 + x730 + x731
    x737 = 2 * x420
    x738 = x271 + x339 * x455 - x467 * x7 + x737
    x739 = x470 * x7
    x740 = x339 * x474
    x741 = x298 + x339 * x476 + x424 - x474 * x7
    x742 = x25 * (x291 + x428 + x739 - x740 + x741)
    x743 = x290 + x427 - x739 + x740
    x744 = x302 + x339 * x470 + x450 - x481 * x7
    x745 = x484 * x7
    x746 = x339 * x488
    x747 = x331 + x339 * x490 - x488 * x7
    x748 = x25 * (x323 + x745 - x746 + x747)
    x749 = x322 - x745 + x746
    x750 = x336 + x339 * x484 - x495 * x7
    x751 = x339 * x516
    x752 = x556 + x751
    x753 = x4 * x752
    x754 = x339 * x498
    x755 = x562 + x754
    x756 = x5 * x755
    x757 = x753 - x756
    x758 = x4 * x757
    x759 = x339 * x529 + x551
    x760 = x4 * x759 - x5 * x752
    x761 = x25 * (x549 - x751 + x759)
    x762 = -x5 * x757 + x761
    x763 = x4 * x760 + x762
    x764 = x4 * x755
    x765 = x339 * x501
    x766 = x567 + x765
    x767 = x5 * x766
    x768 = x764 - x767
    x769 = x5 * x768
    x770 = x25 * (x554 + x752 - x754)
    x771 = -x770
    x772 = x769 + x771
    x773 = x758 - x769 + x770
    x774 = x25 * (x566 + x755 - x765)
    x775 = x339 * x508 + x585
    x776 = x339 * x552 + x627
    x777 = x339 * x563
    x778 = x619 + x777
    x779 = x5 * x778
    x780 = x339 * x557
    x781 = x624 + x780
    x782 = -x5 * x781
    x783 = x4 * x781
    x784 = x4 * x776 + x782
    x785 = x25 * (x630 + x776 - x780)
    x786 = -x779 + x783
    x787 = x25 * (x633 - x777 + x781)
    x788 = x339 * x568 + x635
    x789 = x339 * x588 + x647
    x790 = x339 * x596
    x791 = x639 + x790
    x792 = x5 * x791
    x793 = x339 * x591
    x794 = x644 + x793
    x795 = -x5 * x794
    x796 = x4 * x794
    x797 = x4 * x789 + x795
    x798 = x25 * (x643 + x789 - x793)
    x799 = -x792 + x796
    x800 = x25 * (x638 - x790 + x794)
    x801 = x339 * x599 + x653
    x802 = x620 * x7
    x803 = x339 * x625
    x804 = 2 * x558
    x805 = x339 * x628 + 2 * x553 - x625 * x7
    x806 = x25 * (x802 - x803 - x804 + x805)
    x807 = -x802 + x803 + x804
    x808 = x339 * x620 + 2 * x584 - x636 * x7
    x809 = x640 * x7
    x810 = x339 * x645
    x811 = x339 * x648 + x589 - x645 * x7
    x812 = x25 * (x593 + x809 - x810 + x811)
    x813 = x592 - x809 + x810
    x814 = x339 * x640 + x615 - x654 * x7
    x815 = x658 * x7
    x816 = x339 * x663
    x817 = x339 * x665 - x663 * x7
    x818 = x25 * (x815 - x816 + x817)
    x819 = -x815 + x816
    x820 = x339 * x658 - x670 * x7
    x821 = x496 * x516
    x822 = x498 * x9
    x823 = x26 + x821 - x822
    x824 = x4 * x823
    x825 = x496 * x498
    x826 = x501 * x9
    x827 = x36 + x825 - x826
    x828 = x5 * x827
    x829 = x824 - x828
    x830 = x4 * x829
    x831 = x496 * x529 - x516 * x9 + x72
    x832 = x4 * x831 - x5 * x823
    x833 = x25 * (x75 - x821 + x822 + x831)
    x834 = -x5 * x829 + x833
    x835 = x4 * x832 + x834
    x836 = x4 * x827
    x837 = x496 * x501
    x838 = x508 * x9
    x839 = x49 + x837 - x838
    x840 = x5 * x839
    x841 = x836 - x840
    x842 = x5 * x841
    x843 = x25 * (x37 + x823 - x825 + x826)
    x844 = -x843
    x845 = x842 + x844
    x846 = x830 - x842 + x843
    x847 = x25 * (x102 + x827 - x837 + x838)
    x848 = x104 + x496 * x508 - x548 * x9
    x849 = -x7 * x823
    x850 = x106 * x831 + x849
    x851 = x106 * x827
    x852 = x7 * x839
    x853 = -x852
    x854 = x851 + x853
    x855 = x5 * x854
    x856 = x106 * x823
    x857 = x7 * x827
    x858 = -x857
    x859 = x856 + x858
    x860 = -x5 * x859
    x861 = x4 * x859
    x862 = x4 * x850 + x860
    x863 = x25 * (x850 - x856 + x857)
    x864 = -x855 + x861
    x865 = x25 * (-x851 + x852 + x859)
    x866 = -x7 * x848
    x867 = x106 * x839 + x866
    x868 = x198 + x496 * x588 + x533 - x591 * x9
    x869 = x496 * x596
    x870 = x599 * x9
    x871 = x200 + x505 + x869 - x870
    x872 = x5 * x871
    x873 = x496 * x591
    x874 = x596 * x9
    x875 = x212 + x522 + x873 - x874
    x876 = -x5 * x875
    x877 = x4 * x875
    x878 = x4 * x868 + x876
    x879 = x25 * (x234 + x542 + x868 - x873 + x874)
    x880 = -x872 + x877
    x881 = x25 * (x236 + x545 - x869 + x870 + x875)
    x882 = x237 + x496 * x599 + x547 - x616 * x9
    x883 = x106 * x859
    x884 = -x7 * x859 + x833
    x885 = x106 * x850 + x884
    x886 = x7 * x854
    x887 = x844 + x886
    x888 = x25 * (-x883 + x885 + x887)
    x889 = x843 - x886
    x890 = x883 + x889
    x891 = -x7 * x867 + x847
    x892 = x106 * x854 + x891
    x893 = x7 * x871
    x894 = x106 * x875
    x895 = -x7 * x875
    x896 = x106 * x868 + x895
    x897 = x25 * (x893 - x894 + x896)
    x898 = -x893
    x899 = x894 + x898
    x900 = -x7 * x882
    x901 = x106 * x871 + x900
    x902 = x658 * x9
    x903 = x496 * x663
    x904 = 2 * x592
    x905 = -x904
    x906 = 2 * x589
    x907 = x331 + x496 * x665 - x663 * x9 + x906
    x908 = x25 * (x323 + x902 - x903 + x905 + x907)
    x909 = x322 - x902 + x903 + x904
    x910 = 2 * x615
    x911 = x336 + x496 * x658 - x670 * x9 + x910
    x912 = 2 * x348
    x913 = x339 * x677
    x914 = x689 * x7
    x915 = x912 + x913 - x914
    x916 = x5 * x915
    x917 = 2 * x365
    x918 = x339 * x673
    x919 = x677 * x7
    x920 = x917 + x918 - x919
    x921 = x4 * x920
    x922 = x339 * x681 + 2 * x376 - x673 * x7
    x923 = x4 * x922 - x5 * x920
    x924 = x25 * (-x917 - x918 + x919 + x922)
    x925 = -x916 + x921
    x926 = x25 * (-x912 - x913 + x914 + x920)
    x927 = x339 * x689 + 2 * x390 - x698 * x7
    x928 = x7 * x702
    x929 = x339 * x706
    x930 = x339 * x699 + x683 - x7 * x706 + x733
    x931 = x25 * (x694 + x732 + x928 - x929 + x930)
    x932 = x693 + x731 - x928 + x929
    x933 = x339 * x702 + x697 - x7 * x713 + x737
    x934 = x7 * x717
    x935 = x339 * x721
    x936 = 2 * x427
    x937 = x339 * x714 + 2 * x424 - x7 * x721
    x938 = x25 * (x934 - x935 - x936 + x937)
    x939 = -x934 + x935 + x936
    x940 = x339 * x717 + 2 * x450 - x7 * x728
    x941 = x339 * x734 + 2 * x464 - x7 * x736 + 2 * x710
    x942 = x339 * x736 + 2 * x466 - x7 * x738 + 2 * x712
    x943 = x339 * x741 + 2 * x478 - x7 * x743 + x725
    x944 = x339 * x743 + 2 * x480 - x7 * x744 + x727
    x945 = x339 * x747 + 2 * x492 - x7 * x749
    x946 = x339 * x749 + 2 * x494 - x7 * x750
    x947 = x339 * x755
    x948 = x7 * x766
    x949 = x505 + x947 - x948
    x950 = x5 * x949
    x951 = x339 * x752
    x952 = x7 * x755
    x953 = x522 + x951 - x952
    x954 = x4 * x953
    x955 = x339 * x759 + x533 - x7 * x752
    x956 = x4 * x955 - x5 * x953
    x957 = x25 * (x542 - x951 + x952 + x955)
    x958 = -x950 + x954
    x959 = x25 * (x545 - x947 + x948 + x953)
    x960 = x339 * x766 + x547 - x7 * x775
    x961 = x7 * x778
    x962 = x339 * x781
    x963 = x339 * x776 + x553 - x7 * x781 + x761
    x964 = x25 * (x559 + x771 + x961 - x962 + x963)
    x965 = x558 + x770 - x961 + x962
    x966 = x339 * x778 + x584 - x7 * x788 + x774
    x967 = x7 * x791
    x968 = x339 * x794
    x969 = x339 * x789 + x589 - x7 * x794
    x970 = x25 * (x593 + x967 - x968 + x969)
    x971 = x592 - x967 + x968
    x972 = x339 * x791 + x615 - x7 * x801
    x973 = 2 * x785
    x974 = x339 * x805 + x631 - x7 * x807 + x973
    x975 = 2 * x787
    x976 = x339 * x807 + x634 - x7 * x808 + x975
    x977 = x339 * x811 + x650 - x7 * x813 + x798
    x978 = x339 * x813 + x652 - x7 * x814 + x800
    x979 = x339 * x817 + x667 - x7 * x819
    x980 = x339 * x819 + x669 - x7 * x820
    x981 = x339 * x827
    x982 = x853 + x981
    x983 = x5 * x982
    x984 = x339 * x823
    x985 = x858 + x984
    x986 = x4 * x985
    x987 = x339 * x831 + x849
    x988 = x4 * x987 - x5 * x985
    x989 = x25 * (x857 - x984 + x987)
    x990 = -x983 + x986
    x991 = x25 * (x852 - x981 + x985)
    x992 = x339 * x839 + x866
    x993 = x339 * x859
    x994 = x339 * x850 + x884
    x995 = x25 * (x887 - x993 + x994)
    x996 = x889 + x993
    x997 = x339 * x854 + x891
    x998 = x339 * x875
    x999 = x339 * x868 + x895
    x1000 = x25 * (x893 - x998 + x999)
    x1001 = x898 + x998
    x1002 = x339 * x871 + x900
    x1003 = x339 * x885 - x7 * x890 + 2 * x863
    x1004 = x339 * x890 - x7 * x892 + 2 * x865
    x1005 = x339 * x896 - x7 * x899 + x879
    x1006 = x339 * x899 - x7 * x901 + x881
    x1007 = x339 * x907 - x7 * x909
    x1008 = x339 * x909 - x7 * x911
    x1009 = 2 * x505
    x1010 = x496 * x827
    x1011 = x839 * x9
    x1012 = x1009 + x1010 - x1011
    x1013 = x1012 * x5
    x1014 = 2 * x522
    x1015 = x496 * x823
    x1016 = x827 * x9
    x1017 = x1014 + x1015 - x1016
    x1018 = x1017 * x4
    x1019 = x496 * x831 + 2 * x533 - x823 * x9
    x1020 = -x1017 * x5 + x1019 * x4
    x1021 = x25 * (-x1014 - x1015 + x1016 + x1019)
    x1022 = -x1013 + x1018
    x1023 = x25 * (-x1009 - x1010 + x1011 + x1017)
    x1024 = x496 * x839 + 2 * x547 - x848 * x9
    x1025 = x1012 * x7
    x1026 = x1017 * x106
    x1027 = -x1017 * x7
    x1028 = x1019 * x106 + x1027
    x1029 = x25 * (x1025 - x1026 + x1028)
    x1030 = -x1025
    x1031 = x1026 + x1030
    x1032 = -x1024 * x7
    x1033 = x1012 * x106 + x1032
    x1034 = x871 * x9
    x1035 = x496 * x875
    x1036 = x496 * x868 + x833 - x875 * x9 + x906
    x1037 = x25 * (x1034 - x1035 + x1036 + x844 + x905)
    x1038 = -x1034 + x1035 + x843 + x904
    x1039 = x496 * x871 + x847 - x882 * x9 + x910
    x1040 = x1021 - x1031 * x7
    x1041 = x1028 * x106 + x1040
    x1042 = x1023 - x1033 * x7
    x1043 = x1031 * x106 + x1042
    x1044 = -x1038 * x7
    x1045 = x1036 * x106 + x1044
    x1046 = -x1039 * x7
    x1047 = x1038 * x106 + x1046
    x1048 = x496 * x907 + 2 * x667 + 2 * x879 - x9 * x909
    x1049 = x496 * x909 + 2 * x669 + 2 * x881 - x9 * x911
    x1050 = x7 * x915
    x1051 = x339 * x920
    x1052 = 3 * x693
    x1053 = x339 * x922 + 3 * x683 - x7 * x920
    x1054 = -x1050 + x1051 + x1052
    x1055 = x7 * x949
    x1056 = x339 * x953
    x1057 = 2 * x770
    x1058 = x339 * x955 - x7 * x953 + 2 * x761
    x1059 = -x1055 + x1056 + x1057
    x1060 = x7 * x982
    x1061 = x339 * x985
    x1062 = x339 * x987 - x7 * x985 + x833
    x1063 = -x1060 + x1061 + x843
    x1064 = x1017 * x339
    x1065 = x1019 * x339 + x1027
    x1066 = x1030 + x1064
    x1067 = x1012 * x9
    x1068 = x1017 * x496
    x1069 = 3 * x843
    x1070 = -x1017 * x9 + x1019 * x496 + 3 * x833
    x1071 = x25 * (x1067 - x1068 - x1069 + x1070)
    x1072 = -x1067 + x1068 + x1069
    x1073 = x1012 * x496 - x1024 * x9 + 3 * x847
    x1074 = x106 * x1070 - x1072 * x7
    x1075 = x106 * x1072 - x1073 * x7
    x1076 = x1021 + x1036 * x496 - x1038 * x9 + 3 * x879
    x1077 = x1023 + x1038 * x496 - x1039 * x9 + 3 * x881

    # 90 item(s)
    return numpy.array(
        [
            x3
            * (
                -x101 * x5
                + x3 * x81
                + x39 * (-x64 - x65 + x66 + x80)
                + x39 * (-x63 + x91 - x97 - x98 + x99)
            )
            + x39
            * (
                -x100 * x3
                - x100 * x5
                - x25 * (x26 - x3 * x85 + x37 + x5 * (x33 + x90) - x86 + x89)
                + x25 * (x3 * x83 - x5 * x88 + x72 + x75 + x86 - x89)
                + x3 * x91
                + x41
                + x5 * (x42 + x92 + x94 - x96)
                + x78
            )
            - x5
            * (
                x101 * x3
                + x39 * (-x43 - x47 + x57 + x67)
                + x39 * (x100 - x42 - x92 - x94 + x96)
                - x5
                * (
                    x25 * (x103 + x46 - x48)
                    + x3 * x58
                    + x39 * (x103 + x93 - x95)
                    - x5
                    * (
                        x3 * x56
                        + x39 * (x34 - x50 + x52)
                        - x5 * (x104 + x4 * x53 - x5 * (-x105 * x5 + x4 * x51))
                    )
                )
            )
            + x82 * (x41 + x59 - x62 - x68 + x81),
            x25
            * (
                2 * x121
                - 2 * x130
                + x132 * x3
                - x148 * x3
                - x148 * x5
                + x5 * (x133 + x136 - x144)
            )
            + x3
            * (
                x166 * x3
                - x168 * x5
                + x25 * (x132 - x146 + x147 + x167)
                + x39 * (-x160 + x161 + x165 + x167)
            )
            - x5
            * (
                x168 * x3
                + x25 * (-x136 + x144 + x148 + x169)
                + x39 * (-x151 + x154 + x162 + x169)
                - x5
                * (
                    x155 * x3
                    + x25 * (x135 - x137 + x142)
                    + x25 * (x142 + x150 - x152)
                    - x5 * (x153 * x3 + x170 - x5 * (x141 * x4 - x172 * x5))
                )
            )
            + x82 * (-x130 + x156 - x159 - x163 + x166),
            x25
            * (
                2 * x188
                - 2 * x197
                + x199 * x3
                - x215 * x3
                - x215 * x5
                + x5 * (x200 + x203 - x211)
            )
            + x3
            * (
                x233 * x3
                - x235 * x5
                + x25 * (x199 - x213 + x214 + x234)
                + x39 * (-x227 + x228 + x232 + x234)
            )
            - x5
            * (
                x235 * x3
                + x25 * (-x203 + x211 + x215 + x236)
                + x39 * (-x218 + x221 + x229 + x236)
                - x5
                * (
                    x222 * x3
                    + x25 * (x202 - x204 + x209)
                    + x25 * (x209 + x217 - x219)
                    - x5 * (x220 * x3 + x237 - x5 * (x208 * x4 - x239 * x5))
                )
            )
            + x82 * (-x197 + x223 - x226 - x230 + x233),
            x3 * (x268 * x3 - x269 * x5 + x39 * (-x259 + x260 + x267))
            - x5
            * (
                x269 * x3
                + x39 * (-x244 + x249 + x261)
                - x5 * (x250 * x3 + x271 - x5 * (x248 * x3 - x273 * x5))
            )
            + x82 * (x251 + x258 - x262 + x268),
            x3 * (x3 * x300 - x301 * x5 + x39 * (-x292 + x293 + x299))
            - x5
            * (
                x3 * x301
                + x39 * (-x278 + x283 + x294)
                - x5 * (x284 * x3 + x302 - x5 * (x282 * x3 - x304 * x5))
            )
            + x82 * (x285 + x291 - x295 + x300),
            x3 * (x3 * x333 - x334 * x5 + x39 * (-x324 + x325 + x332))
            - x5
            * (
                x3 * x334
                + x39 * (-x309 + x314 + x326)
                - x5 * (x3 * x315 + x336 - x5 * (x3 * x313 - x338 * x5))
            )
            + x82 * (x316 + x323 - x327 + x333),
            x3
            * (
                x25 * (-x364 + x378 + x386)
                + x3 * x379
                - x387 * x5
                + x39 * (x381 - x383 + x386)
            )
            + x39 * (x357 - x369 - x371 + x379)
            + x39
            * (
                -x25 * (-x3 * x341 + x345 + x362 + x380)
                + x25 * (x3 * x372 + x361 + x373 - x380)
                + x3 * x381
                - x3 * x384
                - x370
                + x375
                - x384 * x5
                + x5 * (x355 + x382)
            )
            - x5
            * (
                x25 * (-x347 + x368 + x389)
                + x3 * x387
                + x39 * (-x382 + x384 + x389)
                - x5
                * (
                    x3 * x356
                    + x39 * (x346 - x349 + x352)
                    - x5 * (x353 * x4 + x390 - x5 * (x351 * x4 - x391 * x5))
                )
            ),
            x25 * (x3 * x400 - x3 * x410 + x394 + x398 - x410 * x5 + x5 * (x402 + x406))
            + x3
            * (
                x25 * (x400 - x407 + x408)
                + x25 * (x408 - x414 + x417)
                + x3 * x418
                - x419 * x5
            )
            + x39 * (x398 + x413 - x416 + x418)
            - x5
            * (
                x25 * (-x402 + x405 + x410)
                + x25 * (x405 - x411 + x415)
                + x3 * x419
                - x5 * (x3 * x412 + x420 - x5 * (x4 * x404 - x421 * x5))
            ),
            x25 * (x3 * x430 - x3 * x440 + x424 + x428 - x440 * x5 + x5 * (x432 + x436))
            + x3
            * (
                x25 * (x430 - x437 + x438)
                + x25 * (x438 - x444 + x447)
                + x3 * x448
                - x449 * x5
            )
            + x39 * (x428 + x443 - x446 + x448)
            - x5
            * (
                x25 * (-x432 + x435 + x440)
                + x25 * (x435 - x441 + x445)
                + x3 * x449
                - x5 * (x3 * x442 + x450 - x5 * (x4 * x434 - x451 * x5))
            ),
            x3 * (x3 * x463 + x464 - x465 * x5)
            + x39 * (x456 - x461 + x463)
            - x5 * (x3 * x465 + x466 - x5 * (x3 * x455 - x467 * x5)),
            x3 * (x3 * x477 + x478 - x479 * x5)
            + x39 * (x471 - x475 + x477)
            - x5 * (x3 * x479 + x480 - x5 * (x3 * x470 - x481 * x5)),
            x3 * (x3 * x491 + x492 - x493 * x5)
            + x39 * (x485 - x489 + x491)
            - x5 * (x3 * x493 + x494 - x5 * (x3 * x484 - x495 * x5)),
            x3
            * (
                x25 * (-x521 + x535 + x543)
                + x3 * x536
                + x39 * (x538 - x540 + x543)
                - x5 * x544
            )
            + x39 * (x514 - x526 - x528 + x536)
            + x39
            * (
                -x25 * (-x3 * x498 + x502 + x519 + x537)
                + x25 * (x3 * x529 + x518 + x530 - x537)
                + x3 * x538
                - x3 * x541
                - x5 * x541
                + x5 * (x512 + x539)
                - x527
                + x532
            )
            - x5
            * (
                x25 * (-x504 + x525 + x546)
                + x3 * x544
                + x39 * (-x539 + x541 + x546)
                - x5
                * (
                    x3 * x513
                    + x39 * (x503 - x506 + x509)
                    - x5 * (x4 * x510 - x5 * (x4 * x508 - x5 * x548) + x547)
                )
            ),
            x25 * (x3 * x561 - x3 * x574 - x5 * x574 + x5 * (x564 + x570) + x553 + x559)
            + x3
            * (
                x25 * (x561 - x571 + x572)
                + x25 * (x572 - x578 + x581)
                + x3 * x582
                - x5 * x583
            )
            + x39 * (x559 + x577 - x580 + x582)
            - x5
            * (
                x25 * (-x564 + x569 + x574)
                + x25 * (x569 - x575 + x579)
                + x3 * x583
                - x5 * (x3 * x576 - x5 * (x4 * x568 - x5 * x586) + x584)
            ),
            x25 * (x3 * x595 - x3 * x605 - x5 * x605 + x5 * (x597 + x601) + x589 + x593)
            + x3
            * (
                x25 * (x595 - x602 + x603)
                + x25 * (x603 - x609 + x612)
                + x3 * x613
                - x5 * x614
            )
            + x39 * (x593 + x608 - x611 + x613)
            - x5
            * (
                x25 * (-x597 + x600 + x605)
                + x25 * (x600 - x606 + x610)
                + x3 * x614
                - x5 * (x3 * x607 - x5 * (x4 * x599 - x5 * x616) + x615)
            ),
            x3 * (x3 * x629 - x5 * x632 + x631)
            + x39 * (x621 - x626 + x629)
            - x5 * (x3 * x632 - x5 * (x3 * x620 - x5 * x636) + x634),
            x3 * (x3 * x649 - x5 * x651 + x650)
            + x39 * (x641 - x646 + x649)
            - x5 * (x3 * x651 - x5 * (x3 * x640 - x5 * x654) + x652),
            x3 * (x3 * x666 - x5 * x668 + x667)
            + x39 * (x659 - x664 + x666)
            - x5 * (x3 * x668 - x5 * (x3 * x658 - x5 * x670) + x669),
            x25 * (-x680 + x685 + x695)
            + x3 * (x3 * x685 + x39 * (-x674 + x678 + x682) - x5 * x696)
            + x39 * (-x3 * x679 + x3 * x682 + x684 + x695)
            - x5
            * (
                x3 * x696
                + x39 * (x679 - x686 + x690)
                - x5 * (x4 * x691 - x5 * (x4 * x689 - x5 * x698) + x697)
            ),
            x25 * (x703 - x708 + x709)
            + x25 * (x3 * x699 - x3 * x706 + x703 + x707)
            + x3 * (x3 * x709 - x5 * x711 + x710)
            - x5 * (x3 * x711 - x5 * (x4 * x702 - x5 * x713) + x712),
            x25 * (x718 - x723 + x724)
            + x25 * (x3 * x714 - x3 * x721 + x718 + x722)
            + x3 * (x3 * x724 - x5 * x726 + x725)
            - x5 * (x3 * x726 - x5 * (x4 * x717 - x5 * x728) + x727),
            x3 * (x3 * x734 - x5 * x736) - x5 * (x3 * x736 - x5 * x738) + x735,
            x3 * (x3 * x741 - x5 * x743) - x5 * (x3 * x743 - x5 * x744) + x742,
            x3 * (x3 * x747 - x5 * x749) - x5 * (x3 * x749 - x5 * x750) + x748,
            x25 * (-x758 + x763 + x772)
            + x3 * (x3 * x763 + x39 * (-x753 + x756 + x760) - x5 * x773)
            + x39 * (-x3 * x757 + x3 * x760 + x762 + x772)
            - x5
            * (
                x3 * x773
                + x39 * (x757 - x764 + x767)
                - x5 * (x4 * x768 - x5 * (x4 * x766 - x5 * x775) + x774)
            ),
            x25 * (x779 - x783 + x784)
            + x25 * (x3 * x776 - x3 * x781 + x779 + x782)
            + x3 * (x3 * x784 - x5 * x786 + x785)
            - x5 * (x3 * x786 - x5 * (x4 * x778 - x5 * x788) + x787),
            x25 * (x792 - x796 + x797)
            + x25 * (x3 * x789 - x3 * x794 + x792 + x795)
            + x3 * (x3 * x797 - x5 * x799 + x798)
            - x5 * (x3 * x799 - x5 * (x4 * x791 - x5 * x801) + x800),
            x3 * (x3 * x805 - x5 * x807) - x5 * (x3 * x807 - x5 * x808) + x806,
            x3 * (x3 * x811 - x5 * x813) - x5 * (x3 * x813 - x5 * x814) + x812,
            x3 * (x3 * x817 - x5 * x819) - x5 * (x3 * x819 - x5 * x820) + x818,
            x25 * (-x830 + x835 + x845)
            + x3 * (x3 * x835 + x39 * (-x824 + x828 + x832) - x5 * x846)
            + x39 * (-x3 * x829 + x3 * x832 + x834 + x845)
            - x5
            * (
                x3 * x846
                + x39 * (x829 - x836 + x840)
                - x5 * (x4 * x841 - x5 * (x4 * x839 - x5 * x848) + x847)
            ),
            x25 * (x855 - x861 + x862)
            + x25 * (x3 * x850 - x3 * x859 + x855 + x860)
            + x3 * (x3 * x862 - x5 * x864 + x863)
            - x5 * (x3 * x864 - x5 * (x4 * x854 - x5 * x867) + x865),
            x25 * (x872 - x877 + x878)
            + x25 * (x3 * x868 - x3 * x875 + x872 + x876)
            + x3 * (x3 * x878 - x5 * x880 + x879)
            - x5 * (x3 * x880 - x5 * (x4 * x871 - x5 * x882) + x881),
            x3 * (x3 * x885 - x5 * x890) - x5 * (x3 * x890 - x5 * x892) + x888,
            x3 * (x3 * x896 - x5 * x899) - x5 * (x3 * x899 - x5 * x901) + x897,
            x3 * (x3 * x907 - x5 * x909) - x5 * (x3 * x909 - x5 * x911) + x908,
            x3 * (x4 * x923 - x5 * x925 + x924)
            + x39 * (x916 - x921 + x923)
            - x5 * (x4 * x925 - x5 * (x4 * x915 - x5 * x927) + x926),
            x3 * (x4 * x930 - x5 * x932) - x5 * (x4 * x932 - x5 * x933) + x931,
            x3 * (x4 * x937 - x5 * x939) - x5 * (x4 * x939 - x5 * x940) + x938,
            x3 * x941 - x5 * x942,
            x3 * x943 - x5 * x944,
            x3 * x945 - x5 * x946,
            x3 * (x4 * x956 - x5 * x958 + x957)
            + x39 * (x950 - x954 + x956)
            - x5 * (x4 * x958 - x5 * (x4 * x949 - x5 * x960) + x959),
            x3 * (x4 * x963 - x5 * x965) - x5 * (x4 * x965 - x5 * x966) + x964,
            x3 * (x4 * x969 - x5 * x971) - x5 * (x4 * x971 - x5 * x972) + x970,
            x3 * x974 - x5 * x976,
            x3 * x977 - x5 * x978,
            x3 * x979 - x5 * x980,
            x3 * (x4 * x988 - x5 * x990 + x989)
            + x39 * (x983 - x986 + x988)
            - x5 * (x4 * x990 - x5 * (x4 * x982 - x5 * x992) + x991),
            x3 * (x4 * x994 - x5 * x996) - x5 * (x4 * x996 - x5 * x997) + x995,
            x1000 + x3 * (-x1001 * x5 + x4 * x999) - x5 * (x1001 * x4 - x1002 * x5),
            x1003 * x3 - x1004 * x5,
            x1005 * x3 - x1006 * x5,
            x1007 * x3 - x1008 * x5,
            x3 * (x1020 * x4 + x1021 - x1022 * x5)
            + x39 * (x1013 - x1018 + x1020)
            - x5 * (x1022 * x4 + x1023 - x5 * (x1012 * x4 - x1024 * x5)),
            x1029 + x3 * (x1028 * x4 - x1031 * x5) - x5 * (x1031 * x4 - x1033 * x5),
            x1037 + x3 * (x1036 * x4 - x1038 * x5) - x5 * (x1038 * x4 - x1039 * x5),
            x1041 * x3 - x1043 * x5,
            x1045 * x3 - x1047 * x5,
            x1048 * x3 - x1049 * x5,
            x25 * (x1050 - x1051 - x1052 + x1053)
            + x4 * (x1053 * x4 - x1054 * x5)
            - x5 * (x1054 * x4 - x5 * (x339 * x915 + 3 * x697 - x7 * x927)),
            x4 * (x339 * x930 - x7 * x932 + 3 * x710 + x924)
            - x5 * (x339 * x932 - x7 * x933 + 3 * x712 + x926),
            x4 * (x339 * x937 - x7 * x939 + 3 * x725)
            - x5 * (x339 * x939 - x7 * x940 + 3 * x727),
            x339 * x941 - x7 * x942 + 3 * x735 + 2 * x931,
            x339 * x943 - x7 * x944 + 3 * x742 + x938,
            x339 * x945 - x7 * x946 + 3 * x748,
            x25 * (x1055 - x1056 - x1057 + x1058)
            + x4 * (x1058 * x4 - x1059 * x5)
            - x5 * (x1059 * x4 - x5 * (x339 * x949 - x7 * x960 + 2 * x774)),
            x4 * (x339 * x963 - x7 * x965 + x957 + x973)
            - x5 * (x339 * x965 - x7 * x966 + x959 + x975),
            x4 * (x339 * x969 - x7 * x971 + 2 * x798)
            - x5 * (x339 * x971 - x7 * x972 + 2 * x800),
            x339 * x974 - x7 * x976 + 2 * x806 + 2 * x964,
            x339 * x977 - x7 * x978 + 2 * x812 + x970,
            x339 * x979 - x7 * x980 + 2 * x818,
            x25 * (x1060 - x1061 + x1062 + x844)
            + x4 * (x1062 * x4 - x1063 * x5)
            - x5 * (x1063 * x4 - x5 * (x339 * x982 - x7 * x992 + x847)),
            x4 * (x339 * x994 - x7 * x996 + x863 + x989)
            - x5 * (x339 * x996 - x7 * x997 + x865 + x991),
            x4 * (-x1001 * x7 + x339 * x999 + x879)
            - x5 * (x1001 * x339 - x1002 * x7 + x881),
            x1003 * x339 - x1004 * x7 + x888 + 2 * x995,
            x1000 + x1005 * x339 - x1006 * x7 + x897,
            x1007 * x339 - x1008 * x7 + x908,
            x25 * (x1025 - x1064 + x1065)
            + x4 * (x1065 * x4 - x1066 * x5)
            - x5 * (x1066 * x4 - x5 * (x1012 * x339 + x1032)),
            x4 * (x1028 * x339 + x1040) - x5 * (x1031 * x339 + x1042),
            x4 * (x1036 * x339 + x1044) - x5 * (x1038 * x339 + x1046),
            2 * x1029 + x1041 * x339 - x1043 * x7,
            x1037 + x1045 * x339 - x1047 * x7,
            x1048 * x339 - x1049 * x7,
            x1071 + x4 * (x1070 * x4 - x1072 * x5) - x5 * (x1072 * x4 - x1073 * x5),
            x1074 * x4 - x1075 * x5,
            x1076 * x4 - x1077 * x5,
            x106 * x1074 + x1071 - x1075 * x7,
            x106 * x1076 - x1077 * x7,
            2 * x1037 + x1048 * x496 - x1049 * x9 + 3 * x908,
        ]
    )


def coulomb3d_43(a, A, b, B, C):
    """Cartesian (gf) 1-electron Coulomb integral.

    Generated code; DO NOT modify by hand!"""

    x0 = a + b
    x1 = x0 ** (-1.0)
    x2 = -x1 * (a * A[0] + b * B[0])
    x3 = -x2 - C[0]
    x4 = (2 * a + 2 * b) ** (-1.0)
    x5 = -x2 - B[0]
    x6 = -x1 * (a * A[1] + b * B[1])
    x7 = -x6 - C[1]
    x8 = -x1 * (a * A[2] + b * B[2])
    x9 = -x8 - C[2]
    x10 = x0 * (x3 ** 2 + x7 ** 2 + x9 ** 2)
    x11 = (
        2
        * numpy.pi
        * x1
        * numpy.exp(
            -a * b * x1 * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2)
        )
    )
    x12 = x11 * boys(3, x10)
    x13 = x12 * x5
    x14 = x11 * boys(4, x10)
    x15 = x14 * x3
    x16 = x13 - x15
    x17 = x16 * x5
    x18 = x11 * boys(2, x10)
    x19 = x18 * x5
    x20 = x12 * x3
    x21 = -x20
    x22 = x19 + x21
    x23 = x22 * x5
    x24 = x4 * (-x12 + x18)
    x25 = x16 * x3
    x26 = x24 - x25
    x27 = x23 + x26
    x28 = x14 * x5
    x29 = x11 * boys(5, x10)
    x30 = x29 * x3
    x31 = x28 - x30
    x32 = x3 * x31
    x33 = x4 * (x12 - x14)
    x34 = -x33
    x35 = x32 + x34
    x36 = x4 * (-x17 + x27 + x35)
    x37 = 3 * x36
    x38 = -x2 - A[0]
    x39 = x27 * x5
    x40 = -x32 + x33
    x41 = x17 + x40
    x42 = x3 * x41
    x43 = x4 * (-x13 + x15 + x22)
    x44 = 2 * x43
    x45 = -x42 + x44
    x46 = x39 + x45
    x47 = x38 * x46
    x48 = x41 * x5
    x49 = x4 * (x14 - x29)
    x50 = x31 * x5
    x51 = x29 * x5
    x52 = x11 * boys(6, x10)
    x53 = x3 * x52
    x54 = x51 - x53
    x55 = x3 * x54
    x56 = x49 + x50 - x55
    x57 = x3 * x56
    x58 = 2 * x4
    x59 = x58 * (x16 - x28 + x30)
    x60 = -x57 + x59
    x61 = x48 + x60
    x62 = x3 * x61
    x63 = x37 + x47 - x62
    x64 = x3 * x63
    x65 = x11 * boys(1, x10)
    x66 = x5 * x65
    x67 = x18 * x3
    x68 = -x67
    x69 = x66 + x68
    x70 = x5 * x69
    x71 = x4 * (-x18 + x65)
    x72 = x22 * x3
    x73 = x71 - x72
    x74 = x70 + x73
    x75 = x5 * x74
    x76 = x27 * x3
    x77 = x4 * (-x19 + x20 + x69)
    x78 = 2 * x77
    x79 = -x76 + x78
    x80 = x75 + x79
    x81 = x42 - x44
    x82 = x4 * (-x39 + x80 + x81)
    x83 = -x24
    x84 = x25 + x83
    x85 = x4 * (-x23 + x74 + x84)
    x86 = 3 * x85
    x87 = x38 * x80
    x88 = x3 * x46
    x89 = x86 + x87 - x88
    x90 = x38 * x89
    x91 = x27 * x38
    x92 = x38 * x74
    x93 = x79 + x92
    x94 = x81 - x91 + x93
    x95 = 3 * x4
    x96 = x94 * x95
    x97 = x11 * boys(0, x10)
    x98 = -x3 * x65
    x99 = x5 * x97 + x98
    x100 = x4 * (-x65 + x97)
    x101 = x100 - x3 * x69
    x102 = x101 + x5 * x99
    x103 = x4 * (-x66 + x67 + x99)
    x104 = 2 * x103 - x3 * x74
    x105 = x102 * x5 + x104
    x106 = x76 - x78
    x107 = x102 * x38 + x104
    x108 = x106 + x107 - x92
    x109 = -x71
    x110 = x109 + x72
    x111 = x4 * (x102 + x110 - x70)
    x112 = x105 * x38 + 3 * x111 - x3 * x80
    x113 = x108 * x95 + x112 * x38 - x3 * x89 + x4 * (x105 + x106 - x75)
    x114 = x38 * x65
    x115 = x18 * x38
    x116 = x4 * (x114 - x115 + x20 + x68)
    x117 = x101 + x38 * x99
    x118 = x22 * x38
    x119 = x118 + x26
    x120 = x119 * x3
    x121 = x38 * x69
    x122 = x121 + x73
    x123 = x122 * x38
    x124 = x16 * x38
    x125 = x107 * x38 + x111 - x3 * x93 + x58 * (x110 + x117 - x121)
    x126 = x58 * (x119 - x124 + x35)
    x127 = x45 + x91
    x128 = x127 * x38
    x129 = x38 * x41
    x130 = x3 * (x129 + x60)
    x131 = x58 * (-x118 + x122 + x84)
    x132 = x38 * x93
    x133 = x127 * x3
    x134 = x131 + x132 - x133 + x85
    x135 = -x64 + x82 + x90 + x96
    x136 = x57 - x59
    x137 = -x49
    x138 = x4 * (x29 - x52)
    x139 = x11 * boys(7, x10)
    x140 = -x6 - B[1]
    x141 = x140 * x18
    x142 = x12 * x7
    x143 = -x142
    x144 = x141 + x143
    x145 = x144 * x5
    x146 = x12 * x140
    x147 = x14 * x7
    x148 = -x147
    x149 = x146 + x148
    x150 = x149 * x3
    x151 = -x150
    x152 = x145 + x151
    x153 = x152 * x38
    x154 = x140 * x65
    x155 = x18 * x7
    x156 = -x155
    x157 = x154 + x156
    x158 = x157 * x5
    x159 = x144 * x3
    x160 = -x159
    x161 = x158 + x160
    x162 = x161 * x38
    x163 = x4 * (-x141 + x142 + x157)
    x164 = x152 * x3
    x165 = x163 - x164
    x166 = x162 + x165
    x167 = x149 * x5
    x168 = x14 * x140
    x169 = x29 * x7
    x170 = -x169
    x171 = x168 + x170
    x172 = x171 * x3
    x173 = -x172
    x174 = x167 + x173
    x175 = x174 * x3
    x176 = x4 * (x144 - x146 + x147)
    x177 = -x176
    x178 = x175 + x177
    x179 = x58 * (-x153 + x166 + x178)
    x180 = -x179
    x181 = x4 * (x152 - x167 + x172)
    x182 = 2 * x181
    x183 = x152 * x5
    x184 = -x175 + x176
    x185 = x183 + x184
    x186 = x185 * x38
    x187 = x174 * x5
    x188 = x4 * (x149 - x168 + x169)
    x189 = x171 * x5
    x190 = x140 * x29
    x191 = x52 * x7
    x192 = -x191
    x193 = x190 + x192
    x194 = x193 * x3
    x195 = x189 - x194
    x196 = x195 * x3
    x197 = x188 - x196
    x198 = x187 + x197
    x199 = x198 * x3
    x200 = x182 + x186 - x199
    x201 = x200 * x3
    x202 = x161 * x5
    x203 = x165 + x202
    x204 = x4 * (x178 - x183 + x203)
    x205 = x4 * (-x145 + x150 + x161)
    x206 = 2 * x205
    x207 = x203 * x38
    x208 = x185 * x3
    x209 = x206 + x207 - x208
    x210 = x209 * x38
    x211 = -x65 * x7
    x212 = x140 * x97 + x211
    x213 = -x157 * x3
    x214 = x212 * x5 + x213
    x215 = x4 * (-x154 + x155 + x212)
    x216 = -x161 * x3 + x215
    x217 = x214 * x5 + x216
    x218 = -x163
    x219 = x164 + x218
    x220 = x214 * x38 + x216
    x221 = x58 * (-x162 + x219 + x220)
    x222 = x4 * (-x158 + x159 + x214)
    x223 = -x203 * x3 + x217 * x38 + 2 * x222
    x224 = -x209 * x3 + x221 + x223 * x38 + x4 * (-x202 + x217 + x219)
    x225 = x212 * x38 + x213
    x226 = x144 * x38
    x227 = x151 + x226
    x228 = x227 * x3
    x229 = x157 * x38
    x230 = x160 + x229
    x231 = x230 * x38
    x232 = x149 * x38
    x233 = -x166 * x3 + x220 * x38 + x222 + x4 * (x159 + x225 - x229)
    x234 = x4 * (x172 + x227 - x232)
    x235 = x153 + x184
    x236 = x235 * x38
    x237 = x174 * x38
    x238 = x3 * (x197 + x237)
    x239 = x4 * (x150 - x226 + x230)
    x240 = x166 * x38
    x241 = x235 * x3
    x242 = x205 + x239 + x240 - x241
    x243 = x179 - x201 + x204 + x210
    x244 = -x188
    x245 = x196 + x244
    x246 = x4 * (x171 - x190 + x191)
    x247 = -x139 * x7
    x248 = x140 * x52 + x247
    x249 = -x8 - B[2]
    x250 = x18 * x249
    x251 = x12 * x9
    x252 = -x251
    x253 = x250 + x252
    x254 = x253 * x5
    x255 = x12 * x249
    x256 = x14 * x9
    x257 = -x256
    x258 = x255 + x257
    x259 = x258 * x3
    x260 = -x259
    x261 = x254 + x260
    x262 = x261 * x38
    x263 = x249 * x65
    x264 = x18 * x9
    x265 = -x264
    x266 = x263 + x265
    x267 = x266 * x5
    x268 = x253 * x3
    x269 = -x268
    x270 = x267 + x269
    x271 = x270 * x38
    x272 = x4 * (-x250 + x251 + x266)
    x273 = x261 * x3
    x274 = x272 - x273
    x275 = x271 + x274
    x276 = x258 * x5
    x277 = x14 * x249
    x278 = x29 * x9
    x279 = -x278
    x280 = x277 + x279
    x281 = x280 * x3
    x282 = -x281
    x283 = x276 + x282
    x284 = x283 * x3
    x285 = x4 * (x253 - x255 + x256)
    x286 = -x285
    x287 = x284 + x286
    x288 = x58 * (-x262 + x275 + x287)
    x289 = -x288
    x290 = x4 * (x261 - x276 + x281)
    x291 = 2 * x290
    x292 = x261 * x5
    x293 = -x284 + x285
    x294 = x292 + x293
    x295 = x294 * x38
    x296 = x283 * x5
    x297 = x4 * (x258 - x277 + x278)
    x298 = x280 * x5
    x299 = x249 * x29
    x300 = x52 * x9
    x301 = -x300
    x302 = x299 + x301
    x303 = x3 * x302
    x304 = x298 - x303
    x305 = x3 * x304
    x306 = x297 - x305
    x307 = x296 + x306
    x308 = x3 * x307
    x309 = x291 + x295 - x308
    x310 = x3 * x309
    x311 = x270 * x5
    x312 = x274 + x311
    x313 = x4 * (x287 - x292 + x312)
    x314 = x4 * (-x254 + x259 + x270)
    x315 = 2 * x314
    x316 = x312 * x38
    x317 = x294 * x3
    x318 = x315 + x316 - x317
    x319 = x318 * x38
    x320 = -x65 * x9
    x321 = x249 * x97 + x320
    x322 = -x266 * x3
    x323 = x321 * x5 + x322
    x324 = x4 * (-x263 + x264 + x321)
    x325 = -x270 * x3 + x324
    x326 = x323 * x5 + x325
    x327 = -x272
    x328 = x273 + x327
    x329 = x323 * x38 + x325
    x330 = x58 * (-x271 + x328 + x329)
    x331 = x4 * (-x267 + x268 + x323)
    x332 = -x3 * x312 + x326 * x38 + 2 * x331
    x333 = -x3 * x318 + x330 + x332 * x38 + x4 * (-x311 + x326 + x328)
    x334 = x321 * x38 + x322
    x335 = x253 * x38
    x336 = x260 + x335
    x337 = x3 * x336
    x338 = x266 * x38
    x339 = x269 + x338
    x340 = x339 * x38
    x341 = x258 * x38
    x342 = -x275 * x3 + x329 * x38 + x331 + x4 * (x268 + x334 - x338)
    x343 = x4 * (x281 + x336 - x341)
    x344 = x262 + x293
    x345 = x344 * x38
    x346 = x283 * x38
    x347 = x3 * (x306 + x346)
    x348 = x4 * (x259 - x335 + x339)
    x349 = x275 * x38
    x350 = x3 * x344
    x351 = x314 + x348 + x349 - x350
    x352 = x288 - x310 + x313 + x319
    x353 = -x297
    x354 = x305 + x353
    x355 = x4 * (x280 - x299 + x300)
    x356 = -x139 * x9
    x357 = x249 * x52 + x356
    x358 = x140 * x144
    x359 = x149 * x7
    x360 = x24 - x359
    x361 = x358 + x360
    x362 = x3 * x361
    x363 = x140 * x157
    x364 = x144 * x7
    x365 = -x364 + x71
    x366 = x363 + x365
    x367 = x366 * x38
    x368 = x100 - x157 * x7
    x369 = x140 * x212 + x368
    x370 = -x3 * x366
    x371 = x369 * x38 + x370
    x372 = x4 * (x362 - x367 + x371)
    x373 = x140 * x149
    x374 = x171 * x7
    x375 = x33 - x374
    x376 = x373 + x375
    x377 = x3 * x376
    x378 = x361 * x38
    x379 = -x362
    x380 = x367 + x379
    x381 = x4 * (x377 - x378 + x380)
    x382 = x109 + x364
    x383 = x4 * (-x363 + x369 + x382)
    x384 = -x3 * x380 + x371 * x38 + x383
    x385 = x34 + x374
    x386 = x4 * (x361 - x373 + x385)
    x387 = -x377
    x388 = x378 + x387
    x389 = x38 * x388
    x390 = x376 * x38
    x391 = x140 * x171
    x392 = x193 * x7
    x393 = -x392 + x49
    x394 = x391 + x393
    x395 = x3 * x394
    x396 = -x395
    x397 = x3 * (x390 + x396)
    x398 = x359 + x83
    x399 = x4 * (-x358 + x366 + x398)
    x400 = x38 * x380
    x401 = x3 * x388
    x402 = x399 + x400 - x401
    x403 = x361 * x5
    x404 = x387 + x403
    x405 = x38 * x404
    x406 = x376 * x5
    x407 = x396 + x406
    x408 = x3 * x407
    x409 = x386 + x405 - x408
    x410 = x3 * x409
    x411 = x366 * x5
    x412 = x379 + x411
    x413 = x4 * (x377 - x403 + x412)
    x414 = x38 * x412
    x415 = x3 * x404
    x416 = x399 + x414 - x415
    x417 = x38 * x416
    x418 = x369 * x5 + x370
    x419 = -x3 * x412 + x38 * x418 + x383
    x420 = -x3 * x416 + x372 + x38 * x419 + x4 * (x362 - x411 + x418)
    x421 = -x399
    x422 = x381 - x410 + x413 + x417
    x423 = -x386
    x424 = x137 + x392
    x425 = x4 * (x376 - x391 + x424)
    x426 = x138 - x248 * x7
    x427 = x140 * x193 + x426
    x428 = x140 * x253
    x429 = x258 * x7
    x430 = -x429
    x431 = x428 + x430
    x432 = x3 * x431
    x433 = x140 * x266
    x434 = x253 * x7
    x435 = -x434
    x436 = x433 + x435
    x437 = x38 * x436
    x438 = -x266 * x7
    x439 = x140 * x321 + x438
    x440 = -x3 * x436
    x441 = x38 * x439 + x440
    x442 = x4 * (x432 - x437 + x441)
    x443 = x140 * x258
    x444 = x280 * x7
    x445 = -x444
    x446 = x443 + x445
    x447 = x3 * x446
    x448 = x38 * x431
    x449 = -x432
    x450 = x437 + x449
    x451 = x4 * (x447 - x448 + x450)
    x452 = x4 * (-x433 + x434 + x439)
    x453 = -x3 * x450 + x38 * x441 + x452
    x454 = x4 * (x431 - x443 + x444)
    x455 = -x447
    x456 = x448 + x455
    x457 = x38 * x456
    x458 = x38 * x446
    x459 = x140 * x280
    x460 = x302 * x7
    x461 = -x460
    x462 = x459 + x461
    x463 = x3 * x462
    x464 = -x463
    x465 = x3 * (x458 + x464)
    x466 = x4 * (-x428 + x429 + x436)
    x467 = x38 * x450
    x468 = x3 * x456
    x469 = x466 + x467 - x468
    x470 = x431 * x5
    x471 = x455 + x470
    x472 = x38 * x471
    x473 = x446 * x5
    x474 = x464 + x473
    x475 = x3 * x474
    x476 = x454 + x472 - x475
    x477 = x3 * x476
    x478 = x436 * x5
    x479 = x449 + x478
    x480 = x4 * (x447 - x470 + x479)
    x481 = x38 * x479
    x482 = x3 * x471
    x483 = x466 + x481 - x482
    x484 = x38 * x483
    x485 = x439 * x5 + x440
    x486 = -x3 * x479 + x38 * x485 + x452
    x487 = -x3 * x483 + x38 * x486 + x4 * (x432 - x478 + x485) + x442
    x488 = -x466
    x489 = x451 - x477 + x480 + x484
    x490 = -x454
    x491 = x4 * (x446 - x459 + x460)
    x492 = -x357 * x7
    x493 = x140 * x302 + x492
    x494 = x249 * x253
    x495 = x258 * x9
    x496 = x24 - x495
    x497 = x494 + x496
    x498 = x3 * x497
    x499 = x249 * x266
    x500 = x253 * x9
    x501 = -x500 + x71
    x502 = x499 + x501
    x503 = x38 * x502
    x504 = x100 - x266 * x9
    x505 = x249 * x321 + x504
    x506 = -x3 * x502
    x507 = x38 * x505 + x506
    x508 = x4 * (x498 - x503 + x507)
    x509 = x249 * x258
    x510 = x280 * x9
    x511 = x33 - x510
    x512 = x509 + x511
    x513 = x3 * x512
    x514 = x38 * x497
    x515 = -x498
    x516 = x503 + x515
    x517 = x4 * (x513 - x514 + x516)
    x518 = x109 + x500
    x519 = x4 * (-x499 + x505 + x518)
    x520 = -x3 * x516 + x38 * x507 + x519
    x521 = x34 + x510
    x522 = x4 * (x497 - x509 + x521)
    x523 = -x513
    x524 = x514 + x523
    x525 = x38 * x524
    x526 = x38 * x512
    x527 = x249 * x280
    x528 = x302 * x9
    x529 = x49 - x528
    x530 = x527 + x529
    x531 = x3 * x530
    x532 = -x531
    x533 = x3 * (x526 + x532)
    x534 = x495 + x83
    x535 = x4 * (-x494 + x502 + x534)
    x536 = x38 * x516
    x537 = x3 * x524
    x538 = x535 + x536 - x537
    x539 = x497 * x5
    x540 = x523 + x539
    x541 = x38 * x540
    x542 = x5 * x512
    x543 = x532 + x542
    x544 = x3 * x543
    x545 = x522 + x541 - x544
    x546 = x3 * x545
    x547 = x5 * x502
    x548 = x515 + x547
    x549 = x4 * (x513 - x539 + x548)
    x550 = x38 * x548
    x551 = x3 * x540
    x552 = x535 + x550 - x551
    x553 = x38 * x552
    x554 = x5 * x505 + x506
    x555 = -x3 * x548 + x38 * x554 + x519
    x556 = -x3 * x552 + x38 * x555 + x4 * (x498 - x547 + x554) + x508
    x557 = -x535
    x558 = x517 - x546 + x549 + x553
    x559 = -x522
    x560 = x137 + x528
    x561 = x4 * (x512 - x527 + x560)
    x562 = x138 - x357 * x9
    x563 = x249 * x302 + x562
    x564 = x140 * x361
    x565 = x376 * x7
    x566 = 2 * x176
    x567 = -x565 + x566
    x568 = x564 + x567
    x569 = x38 * x568
    x570 = x140 * x376
    x571 = x394 * x7
    x572 = 2 * x188
    x573 = -x571 + x572
    x574 = x570 + x573
    x575 = x3 * x574
    x576 = x569 - x575
    x577 = x3 * x576
    x578 = x140 * x366
    x579 = x361 * x7
    x580 = 2 * x163
    x581 = -x579 + x580
    x582 = x578 + x581
    x583 = x565 - x566
    x584 = x4 * (-x564 + x582 + x583)
    x585 = -x584
    x586 = x38 * x582
    x587 = x3 * x568
    x588 = x586 - x587
    x589 = x38 * x588
    x590 = 2 * x215 - x366 * x7
    x591 = x140 * x369 + x590
    x592 = x579 - x580
    x593 = x4 * (-x578 + x591 + x592)
    x594 = -x3 * x582 + x38 * x591
    x595 = -x3 * x588 + x38 * x594 + x593
    x596 = -x577 + x584 + x589
    x597 = x571 - x572
    x598 = x4 * (x568 - x570 + x597)
    x599 = 2 * x246 - x427 * x7
    x600 = x140 * x394 + x599
    x601 = x140 * x431
    x602 = x446 * x7
    x603 = x285 - x602
    x604 = x601 + x603
    x605 = x38 * x604
    x606 = x140 * x446
    x607 = x462 * x7
    x608 = x297 - x607
    x609 = x606 + x608
    x610 = x3 * x609
    x611 = x605 - x610
    x612 = x3 * x611
    x613 = x140 * x436
    x614 = x431 * x7
    x615 = x272 - x614
    x616 = x613 + x615
    x617 = x286 + x602
    x618 = x4 * (-x601 + x616 + x617)
    x619 = -x618
    x620 = x38 * x616
    x621 = x3 * x604
    x622 = x620 - x621
    x623 = x38 * x622
    x624 = x324 - x436 * x7
    x625 = x140 * x439 + x624
    x626 = x327 + x614
    x627 = x4 * (-x613 + x625 + x626)
    x628 = -x3 * x616 + x38 * x625
    x629 = -x3 * x622 + x38 * x628 + x627
    x630 = -x612 + x618 + x623
    x631 = x353 + x607
    x632 = x4 * (x604 - x606 + x631)
    x633 = x355 - x493 * x7
    x634 = x140 * x462 + x633
    x635 = x140 * x497
    x636 = x512 * x7
    x637 = -x636
    x638 = x635 + x637
    x639 = x38 * x638
    x640 = x140 * x512
    x641 = x530 * x7
    x642 = -x641
    x643 = x640 + x642
    x644 = x3 * x643
    x645 = x639 - x644
    x646 = x3 * x645
    x647 = x140 * x502
    x648 = x497 * x7
    x649 = -x648
    x650 = x647 + x649
    x651 = x4 * (-x635 + x636 + x650)
    x652 = -x651
    x653 = x38 * x650
    x654 = x3 * x638
    x655 = x653 - x654
    x656 = x38 * x655
    x657 = -x502 * x7
    x658 = x140 * x505 + x657
    x659 = x4 * (-x647 + x648 + x658)
    x660 = -x3 * x650 + x38 * x658
    x661 = -x3 * x655 + x38 * x660 + x659
    x662 = -x646 + x651 + x656
    x663 = x4 * (x638 - x640 + x641)
    x664 = -x563 * x7
    x665 = x140 * x530 + x664
    x666 = x249 * x497
    x667 = x512 * x9
    x668 = 2 * x285
    x669 = -x667 + x668
    x670 = x666 + x669
    x671 = x38 * x670
    x672 = x249 * x512
    x673 = x530 * x9
    x674 = 2 * x297
    x675 = -x673 + x674
    x676 = x672 + x675
    x677 = x3 * x676
    x678 = x671 - x677
    x679 = x3 * x678
    x680 = x249 * x502
    x681 = x497 * x9
    x682 = 2 * x272
    x683 = -x681 + x682
    x684 = x680 + x683
    x685 = x667 - x668
    x686 = x4 * (-x666 + x684 + x685)
    x687 = -x686
    x688 = x38 * x684
    x689 = x3 * x670
    x690 = x688 - x689
    x691 = x38 * x690
    x692 = 2 * x324 - x502 * x9
    x693 = x249 * x505 + x692
    x694 = x681 - x682
    x695 = x4 * (-x680 + x693 + x694)
    x696 = -x3 * x684 + x38 * x693
    x697 = -x3 * x690 + x38 * x696 + x695
    x698 = -x679 + x686 + x691
    x699 = x673 - x674
    x700 = x4 * (x670 - x672 + x699)
    x701 = 2 * x355 - x563 * x9
    x702 = x249 * x530 + x701
    x703 = -x6 - A[1]
    x704 = x12 * x703
    x705 = x18 * x703
    x706 = x143 + x705
    x707 = x4 * (x147 - x704 + x706)
    x708 = x5 * x706
    x709 = x148 + x704
    x710 = x3 * x709
    x711 = x708 - x710
    x712 = x5 * x711
    x713 = x5 * x709
    x714 = x14 * x703
    x715 = x170 + x714
    x716 = x3 * x715
    x717 = x713 - x716
    x718 = x3 * x717
    x719 = x707 + x712 - x718
    x720 = x5 * x719
    x721 = x4 * (x169 + x709 - x714)
    x722 = x5 * x717
    x723 = x5 * x715
    x724 = x29 * x703
    x725 = x192 + x724
    x726 = x3 * x725
    x727 = x723 - x726
    x728 = x3 * x727
    x729 = x721 + x722 - x728
    x730 = x3 * x729
    x731 = x58 * (x711 - x713 + x716)
    x732 = -x730 + x731
    x733 = x720 + x732
    x734 = x3 * x733
    x735 = x65 * x703
    x736 = x156 + x735
    x737 = x5 * x736
    x738 = x3 * x706
    x739 = x737 - x738
    x740 = x5 * x739
    x741 = x4 * (x142 - x705 + x736)
    x742 = x3 * x711
    x743 = x741 - x742
    x744 = x740 + x743
    x745 = x5 * x744
    x746 = x3 * x719
    x747 = x58 * (-x708 + x710 + x739)
    x748 = -x746 + x747
    x749 = x745 + x748
    x750 = x38 * x749
    x751 = -x707
    x752 = x718 + x751
    x753 = x4 * (-x712 + x744 + x752)
    x754 = 3 * x753
    x755 = x211 + x703 * x97
    x756 = -x3 * x736 + x5 * x755
    x757 = x4 * (x155 - x735 + x755)
    x758 = -x3 * x739 + x757
    x759 = x5 * x756 + x758
    x760 = -x741
    x761 = x742 + x760
    x762 = x4 * (-x740 + x759 + x761)
    x763 = -x3 * x744 + x58 * (-x737 + x738 + x756)
    x764 = x5 * x759 + x763
    x765 = -x3 * x749 + x38 * x764 + 3 * x762
    x766 = x38 * x739
    x767 = x38 * x759 + x763
    x768 = x38 * x719
    x769 = x38 * x744
    x770 = x748 + x769
    x771 = x746 - x747
    x772 = -x734 + x750 + x754
    x773 = x730 - x731
    x774 = -x721
    x775 = x4 * (x191 + x715 - x724)
    x776 = x247 + x52 * x703
    x777 = x144 * x703
    x778 = x360 + x777
    x779 = x5 * x778
    x780 = x149 * x703
    x781 = x375 + x780
    x782 = x3 * x781
    x783 = x779 - x782
    x784 = x5 * x783
    x785 = x4 * (x385 + x778 - x780)
    x786 = x5 * x781
    x787 = x171 * x703
    x788 = x393 + x787
    x789 = x3 * x788
    x790 = x786 - x789
    x791 = x3 * x790
    x792 = x785 - x791
    x793 = x784 + x792
    x794 = x3 * x793
    x795 = x157 * x703
    x796 = x365 + x795
    x797 = x5 * x796
    x798 = x3 * x778
    x799 = -x798
    x800 = x797 + x799
    x801 = x5 * x800
    x802 = x4 * (x398 - x777 + x796)
    x803 = x3 * x783
    x804 = x802 - x803
    x805 = x801 + x804
    x806 = x38 * x805
    x807 = x4 * (-x779 + x782 + x800)
    x808 = 2 * x807
    x809 = x212 * x703 + x368
    x810 = -x3 * x796
    x811 = x5 * x809 + x810
    x812 = x4 * (-x797 + x798 + x811)
    x813 = x4 * (x382 - x795 + x809)
    x814 = -x3 * x800 + x813
    x815 = x5 * x811 + x814
    x816 = -x3 * x805 + x38 * x815 + 2 * x812
    x817 = x38 * x796
    x818 = x38 * x811 + x814
    x819 = x38 * x783
    x820 = x38 * x800
    x821 = x804 + x820
    x822 = -x802 + x803
    x823 = -x794 + x806 + x808
    x824 = -x785 + x791
    x825 = x4 * (x424 + x781 - x787)
    x826 = x193 * x703 + x426
    x827 = x253 * x703
    x828 = x430 + x827
    x829 = x5 * x828
    x830 = x258 * x703
    x831 = x445 + x830
    x832 = x3 * x831
    x833 = x829 - x832
    x834 = x5 * x833
    x835 = x4 * (x444 + x828 - x830)
    x836 = x5 * x831
    x837 = x280 * x703
    x838 = x461 + x837
    x839 = x3 * x838
    x840 = x836 - x839
    x841 = x3 * x840
    x842 = x835 - x841
    x843 = x834 + x842
    x844 = x3 * x843
    x845 = x266 * x703
    x846 = x435 + x845
    x847 = x5 * x846
    x848 = x3 * x828
    x849 = -x848
    x850 = x847 + x849
    x851 = x5 * x850
    x852 = x4 * (x429 - x827 + x846)
    x853 = x3 * x833
    x854 = x852 - x853
    x855 = x851 + x854
    x856 = x38 * x855
    x857 = x4 * (-x829 + x832 + x850)
    x858 = 2 * x857
    x859 = x321 * x703 + x438
    x860 = -x3 * x846
    x861 = x5 * x859 + x860
    x862 = x4 * (-x847 + x848 + x861)
    x863 = x4 * (x434 - x845 + x859)
    x864 = -x3 * x850 + x863
    x865 = x5 * x861 + x864
    x866 = -x3 * x855 + x38 * x865 + 2 * x862
    x867 = x38 * x846
    x868 = x38 * x861 + x864
    x869 = x38 * x833
    x870 = x38 * x850
    x871 = x854 + x870
    x872 = -x852
    x873 = x853 + x872
    x874 = -x844 + x856 + x858
    x875 = -x835
    x876 = x841 + x875
    x877 = x4 * (x460 + x831 - x837)
    x878 = x302 * x703 + x492
    x879 = x366 * x703
    x880 = x369 * x703 + x590
    x881 = x4 * (x592 - x879 + x880)
    x882 = x361 * x703
    x883 = x581 + x879
    x884 = x4 * (x583 - x882 + x883)
    x885 = -x884
    x886 = -x3 * x883
    x887 = x38 * x880 + x886
    x888 = x567 + x882
    x889 = x38 * x888
    x890 = x376 * x703
    x891 = x573 + x890
    x892 = x3 * x891
    x893 = -x892
    x894 = x38 * x883
    x895 = x3 * x888
    x896 = -x895
    x897 = x894 + x896
    x898 = x5 * x888
    x899 = x893 + x898
    x900 = x3 * x899
    x901 = x5 * x883
    x902 = x896 + x901
    x903 = x38 * x902
    x904 = x5 * x880 + x886
    x905 = -x3 * x902 + x38 * x904 + x881
    x906 = x884 - x900 + x903
    x907 = x4 * (x597 + x888 - x890)
    x908 = x394 * x703 + x599
    x909 = x436 * x703
    x910 = x439 * x703 + x624
    x911 = x4 * (x626 - x909 + x910)
    x912 = x431 * x703
    x913 = x615 + x909
    x914 = x4 * (x617 - x912 + x913)
    x915 = -x914
    x916 = -x3 * x913
    x917 = x38 * x910 + x916
    x918 = x603 + x912
    x919 = x38 * x918
    x920 = x446 * x703
    x921 = x608 + x920
    x922 = x3 * x921
    x923 = -x922
    x924 = x38 * x913
    x925 = x3 * x918
    x926 = -x925
    x927 = x924 + x926
    x928 = x5 * x918
    x929 = x923 + x928
    x930 = x3 * x929
    x931 = x5 * x913
    x932 = x926 + x931
    x933 = x38 * x932
    x934 = x5 * x910 + x916
    x935 = -x3 * x932 + x38 * x934 + x911
    x936 = x914 - x930 + x933
    x937 = x4 * (x631 + x918 - x920)
    x938 = x462 * x703 + x633
    x939 = x502 * x703
    x940 = x505 * x703 + x657
    x941 = x4 * (x648 - x939 + x940)
    x942 = x497 * x703
    x943 = x649 + x939
    x944 = x4 * (x636 - x942 + x943)
    x945 = -x944
    x946 = -x3 * x943
    x947 = x38 * x940 + x946
    x948 = x637 + x942
    x949 = x38 * x948
    x950 = x512 * x703
    x951 = x642 + x950
    x952 = x3 * x951
    x953 = -x952
    x954 = x38 * x943
    x955 = x3 * x948
    x956 = -x955
    x957 = x954 + x956
    x958 = x5 * x948
    x959 = x953 + x958
    x960 = x3 * x959
    x961 = x5 * x943
    x962 = x956 + x961
    x963 = x38 * x962
    x964 = x5 * x940 + x946
    x965 = -x3 * x962 + x38 * x964 + x941
    x966 = x944 - x960 + x963
    x967 = x4 * (x641 + x948 - x950)
    x968 = x530 * x703 + x664
    x969 = 3 * x386
    x970 = x568 * x703
    x971 = x574 * x7
    x972 = x969 + x970 - x971
    x973 = x3 * x972
    x974 = 3 * x399
    x975 = x582 * x703
    x976 = x568 * x7
    x977 = x974 + x975 - x976
    x978 = x38 * x977
    x979 = 3 * x383 - x582 * x7 + x591 * x703
    x980 = -x3 * x977 + x38 * x979
    x981 = x4 * (-x974 - x975 + x976 + x979)
    x982 = -x973 + x978
    x983 = x4 * (-x969 - x970 + x971 + x977)
    x984 = 3 * x425 + x574 * x703 - x600 * x7
    x985 = 2 * x454
    x986 = x604 * x703
    x987 = x609 * x7
    x988 = x985 + x986 - x987
    x989 = x3 * x988
    x990 = 2 * x466
    x991 = x616 * x703
    x992 = x604 * x7
    x993 = x990 + x991 - x992
    x994 = x38 * x993
    x995 = 2 * x452 - x616 * x7 + x625 * x703
    x996 = -x3 * x993 + x38 * x995
    x997 = x4 * (-x990 - x991 + x992 + x995)
    x998 = -x989 + x994
    x999 = x4 * (-x985 - x986 + x987 + x993)
    x1000 = 2 * x491 + x609 * x703 - x634 * x7
    x1001 = x638 * x703
    x1002 = x643 * x7
    x1003 = x1001 - x1002 + x522
    x1004 = x1003 * x3
    x1005 = x650 * x703
    x1006 = x638 * x7
    x1007 = x1005 - x1006 + x535
    x1008 = x1007 * x38
    x1009 = x519 - x650 * x7 + x658 * x703
    x1010 = -x1007 * x3 + x1009 * x38
    x1011 = x4 * (-x1005 + x1006 + x1009 + x557)
    x1012 = -x1004 + x1008
    x1013 = x4 * (-x1001 + x1002 + x1007 + x559)
    x1014 = x561 + x643 * x703 - x665 * x7
    x1015 = x670 * x703
    x1016 = x676 * x7
    x1017 = x1015 - x1016
    x1018 = x1017 * x3
    x1019 = x684 * x703
    x1020 = x670 * x7
    x1021 = x1019 - x1020
    x1022 = x1021 * x38
    x1023 = -x684 * x7 + x693 * x703
    x1024 = -x1021 * x3 + x1023 * x38
    x1025 = x4 * (-x1019 + x1020 + x1023)
    x1026 = -x1018 + x1022
    x1027 = x4 * (-x1015 + x1016 + x1021)
    x1028 = x676 * x703 - x7 * x702
    x1029 = -x8 - A[2]
    x1030 = x1029 * x12
    x1031 = x1029 * x18
    x1032 = x1031 + x252
    x1033 = x4 * (-x1030 + x1032 + x256)
    x1034 = x1032 * x5
    x1035 = x1030 + x257
    x1036 = x1035 * x3
    x1037 = x1034 - x1036
    x1038 = x1037 * x5
    x1039 = x1035 * x5
    x1040 = x1029 * x14
    x1041 = x1040 + x279
    x1042 = x1041 * x3
    x1043 = x1039 - x1042
    x1044 = x1043 * x3
    x1045 = x1033 + x1038 - x1044
    x1046 = x1045 * x5
    x1047 = x4 * (x1035 - x1040 + x278)
    x1048 = x1043 * x5
    x1049 = x1041 * x5
    x1050 = x1029 * x29
    x1051 = x1050 + x301
    x1052 = x1051 * x3
    x1053 = x1049 - x1052
    x1054 = x1053 * x3
    x1055 = x1047 + x1048 - x1054
    x1056 = x1055 * x3
    x1057 = x58 * (x1037 - x1039 + x1042)
    x1058 = -x1056 + x1057
    x1059 = x1046 + x1058
    x1060 = x1059 * x3
    x1061 = x1029 * x65
    x1062 = x1061 + x265
    x1063 = x1062 * x5
    x1064 = x1032 * x3
    x1065 = x1063 - x1064
    x1066 = x1065 * x5
    x1067 = x4 * (-x1031 + x1062 + x251)
    x1068 = x1037 * x3
    x1069 = x1067 - x1068
    x1070 = x1066 + x1069
    x1071 = x1070 * x5
    x1072 = x1045 * x3
    x1073 = x58 * (-x1034 + x1036 + x1065)
    x1074 = -x1072 + x1073
    x1075 = x1071 + x1074
    x1076 = x1075 * x38
    x1077 = -x1033
    x1078 = x1044 + x1077
    x1079 = x4 * (-x1038 + x1070 + x1078)
    x1080 = 3 * x1079
    x1081 = x1029 * x97 + x320
    x1082 = -x1062 * x3 + x1081 * x5
    x1083 = x4 * (-x1061 + x1081 + x264)
    x1084 = -x1065 * x3 + x1083
    x1085 = x1082 * x5 + x1084
    x1086 = -x1067
    x1087 = x1068 + x1086
    x1088 = x4 * (-x1066 + x1085 + x1087)
    x1089 = -x1070 * x3 + x58 * (-x1063 + x1064 + x1082)
    x1090 = x1085 * x5 + x1089
    x1091 = -x1075 * x3 + 3 * x1088 + x1090 * x38
    x1092 = x1065 * x38
    x1093 = x1085 * x38 + x1089
    x1094 = x1045 * x38
    x1095 = x1070 * x38
    x1096 = x1074 + x1095
    x1097 = x1072 - x1073
    x1098 = -x1060 + x1076 + x1080
    x1099 = x1056 - x1057
    x1100 = -x1047
    x1101 = x4 * (x1041 - x1050 + x300)
    x1102 = x1029 * x52 + x356
    x1103 = x1032 * x140
    x1104 = x1035 * x7
    x1105 = -x1104
    x1106 = x1103 + x1105
    x1107 = x1106 * x5
    x1108 = x1035 * x140
    x1109 = x1041 * x7
    x1110 = -x1109
    x1111 = x1108 + x1110
    x1112 = x1111 * x3
    x1113 = x1107 - x1112
    x1114 = x1113 * x5
    x1115 = x4 * (x1106 - x1108 + x1109)
    x1116 = x1111 * x5
    x1117 = x1041 * x140
    x1118 = x1051 * x7
    x1119 = -x1118
    x1120 = x1117 + x1119
    x1121 = x1120 * x3
    x1122 = x1116 - x1121
    x1123 = x1122 * x3
    x1124 = x1115 - x1123
    x1125 = x1114 + x1124
    x1126 = x1125 * x3
    x1127 = x1062 * x140
    x1128 = x1032 * x7
    x1129 = -x1128
    x1130 = x1127 + x1129
    x1131 = x1130 * x5
    x1132 = x1106 * x3
    x1133 = -x1132
    x1134 = x1131 + x1133
    x1135 = x1134 * x5
    x1136 = x4 * (-x1103 + x1104 + x1130)
    x1137 = x1113 * x3
    x1138 = x1136 - x1137
    x1139 = x1135 + x1138
    x1140 = x1139 * x38
    x1141 = x4 * (-x1107 + x1112 + x1134)
    x1142 = 2 * x1141
    x1143 = -x1062 * x7
    x1144 = x1081 * x140 + x1143
    x1145 = -x1130 * x3
    x1146 = x1144 * x5 + x1145
    x1147 = x4 * (-x1131 + x1132 + x1146)
    x1148 = x4 * (-x1127 + x1128 + x1144)
    x1149 = -x1134 * x3 + x1148
    x1150 = x1146 * x5 + x1149
    x1151 = -x1139 * x3 + 2 * x1147 + x1150 * x38
    x1152 = x1130 * x38
    x1153 = x1146 * x38 + x1149
    x1154 = x1113 * x38
    x1155 = x1134 * x38
    x1156 = x1138 + x1155
    x1157 = -x1136
    x1158 = x1137 + x1157
    x1159 = -x1126 + x1140 + x1142
    x1160 = -x1115
    x1161 = x1123 + x1160
    x1162 = x4 * (x1111 - x1117 + x1118)
    x1163 = -x1102 * x7
    x1164 = x1051 * x140 + x1163
    x1165 = x1029 * x253
    x1166 = x1165 + x496
    x1167 = x1166 * x5
    x1168 = x1029 * x258
    x1169 = x1168 + x511
    x1170 = x1169 * x3
    x1171 = x1167 - x1170
    x1172 = x1171 * x5
    x1173 = x4 * (x1166 - x1168 + x521)
    x1174 = x1169 * x5
    x1175 = x1029 * x280
    x1176 = x1175 + x529
    x1177 = x1176 * x3
    x1178 = x1174 - x1177
    x1179 = x1178 * x3
    x1180 = x1173 - x1179
    x1181 = x1172 + x1180
    x1182 = x1181 * x3
    x1183 = x1029 * x266
    x1184 = x1183 + x501
    x1185 = x1184 * x5
    x1186 = x1166 * x3
    x1187 = -x1186
    x1188 = x1185 + x1187
    x1189 = x1188 * x5
    x1190 = x4 * (-x1165 + x1184 + x534)
    x1191 = x1171 * x3
    x1192 = x1190 - x1191
    x1193 = x1189 + x1192
    x1194 = x1193 * x38
    x1195 = x4 * (-x1167 + x1170 + x1188)
    x1196 = 2 * x1195
    x1197 = x1029 * x321 + x504
    x1198 = -x1184 * x3
    x1199 = x1197 * x5 + x1198
    x1200 = x4 * (-x1185 + x1186 + x1199)
    x1201 = x4 * (-x1183 + x1197 + x518)
    x1202 = -x1188 * x3 + x1201
    x1203 = x1199 * x5 + x1202
    x1204 = -x1193 * x3 + 2 * x1200 + x1203 * x38
    x1205 = x1184 * x38
    x1206 = x1199 * x38 + x1202
    x1207 = x1171 * x38
    x1208 = x1188 * x38
    x1209 = x1192 + x1208
    x1210 = -x1190
    x1211 = x1191 + x1210
    x1212 = -x1182 + x1194 + x1196
    x1213 = -x1173
    x1214 = x1179 + x1213
    x1215 = x4 * (x1169 - x1175 + x560)
    x1216 = x1029 * x302 + x562
    x1217 = x1130 * x140
    x1218 = x1083 - x1130 * x7
    x1219 = x1144 * x140 + x1218
    x1220 = x1106 * x7
    x1221 = x1086 + x1220
    x1222 = x4 * (-x1217 + x1219 + x1221)
    x1223 = x1106 * x140
    x1224 = x1067 - x1220
    x1225 = x1217 + x1224
    x1226 = x1111 * x7
    x1227 = x1077 + x1226
    x1228 = x4 * (-x1223 + x1225 + x1227)
    x1229 = -x1228
    x1230 = -x1225 * x3
    x1231 = x1219 * x38 + x1230
    x1232 = x1033 - x1226
    x1233 = x1223 + x1232
    x1234 = x1233 * x38
    x1235 = x1111 * x140
    x1236 = x1120 * x7
    x1237 = x1047 - x1236
    x1238 = x1235 + x1237
    x1239 = x1238 * x3
    x1240 = -x1239
    x1241 = x1225 * x38
    x1242 = x1233 * x3
    x1243 = -x1242
    x1244 = x1241 + x1243
    x1245 = x1233 * x5
    x1246 = x1240 + x1245
    x1247 = x1246 * x3
    x1248 = x1225 * x5
    x1249 = x1243 + x1248
    x1250 = x1249 * x38
    x1251 = x1219 * x5 + x1230
    x1252 = x1222 - x1249 * x3 + x1251 * x38
    x1253 = x1228 - x1247 + x1250
    x1254 = x1100 + x1236
    x1255 = x4 * (x1233 - x1235 + x1254)
    x1256 = x1101 - x1164 * x7
    x1257 = x1120 * x140 + x1256
    x1258 = x1166 * x7
    x1259 = x1184 * x140
    x1260 = -x1184 * x7
    x1261 = x1197 * x140 + x1260
    x1262 = x4 * (x1258 - x1259 + x1261)
    x1263 = x1169 * x7
    x1264 = x1166 * x140
    x1265 = -x1258
    x1266 = x1259 + x1265
    x1267 = x4 * (x1263 - x1264 + x1266)
    x1268 = -x1267
    x1269 = -x1266 * x3
    x1270 = x1261 * x38 + x1269
    x1271 = -x1263
    x1272 = x1264 + x1271
    x1273 = x1272 * x38
    x1274 = x1169 * x140
    x1275 = x1176 * x7
    x1276 = -x1275
    x1277 = x1274 + x1276
    x1278 = x1277 * x3
    x1279 = -x1278
    x1280 = x1266 * x38
    x1281 = x1272 * x3
    x1282 = -x1281
    x1283 = x1280 + x1282
    x1284 = x1272 * x5
    x1285 = x1279 + x1284
    x1286 = x1285 * x3
    x1287 = x1266 * x5
    x1288 = x1282 + x1287
    x1289 = x1288 * x38
    x1290 = x1261 * x5 + x1269
    x1291 = x1262 - x1288 * x3 + x1290 * x38
    x1292 = x1267 - x1286 + x1289
    x1293 = x4 * (x1272 - x1274 + x1275)
    x1294 = -x1216 * x7
    x1295 = x1176 * x140 + x1294
    x1296 = x1029 * x502
    x1297 = x1029 * x505 + x692
    x1298 = x4 * (-x1296 + x1297 + x694)
    x1299 = x1029 * x497
    x1300 = x1296 + x683
    x1301 = x4 * (-x1299 + x1300 + x685)
    x1302 = -x1301
    x1303 = -x1300 * x3
    x1304 = x1297 * x38 + x1303
    x1305 = x1299 + x669
    x1306 = x1305 * x38
    x1307 = x1029 * x512
    x1308 = x1307 + x675
    x1309 = x1308 * x3
    x1310 = -x1309
    x1311 = x1300 * x38
    x1312 = x1305 * x3
    x1313 = -x1312
    x1314 = x1311 + x1313
    x1315 = x1305 * x5
    x1316 = x1310 + x1315
    x1317 = x1316 * x3
    x1318 = x1300 * x5
    x1319 = x1313 + x1318
    x1320 = x1319 * x38
    x1321 = x1297 * x5 + x1303
    x1322 = x1298 - x1319 * x3 + x1321 * x38
    x1323 = x1301 - x1317 + x1320
    x1324 = x4 * (x1305 - x1307 + x699)
    x1325 = x1029 * x530 + x701
    x1326 = x1233 * x140
    x1327 = x1238 * x7
    x1328 = 2 * x1115
    x1329 = -x1327 + x1328
    x1330 = x1326 + x1329
    x1331 = x1330 * x3
    x1332 = x1225 * x140
    x1333 = x1233 * x7
    x1334 = 2 * x1136
    x1335 = -x1333 + x1334
    x1336 = x1332 + x1335
    x1337 = x1336 * x38
    x1338 = 2 * x1148 - x1225 * x7
    x1339 = x1219 * x140 + x1338
    x1340 = -x1336 * x3 + x1339 * x38
    x1341 = x1333 - x1334
    x1342 = x4 * (-x1332 + x1339 + x1341)
    x1343 = -x1331 + x1337
    x1344 = x1327 - x1328
    x1345 = x4 * (-x1326 + x1336 + x1344)
    x1346 = 2 * x1162 - x1257 * x7
    x1347 = x1238 * x140 + x1346
    x1348 = x1272 * x140
    x1349 = x1277 * x7
    x1350 = x1173 - x1349
    x1351 = x1348 + x1350
    x1352 = x1351 * x3
    x1353 = x1266 * x140
    x1354 = x1272 * x7
    x1355 = x1190 - x1354
    x1356 = x1353 + x1355
    x1357 = x1356 * x38
    x1358 = x1201 - x1266 * x7
    x1359 = x1261 * x140 + x1358
    x1360 = -x1356 * x3 + x1359 * x38
    x1361 = x1210 + x1354
    x1362 = x4 * (-x1353 + x1359 + x1361)
    x1363 = -x1352 + x1357
    x1364 = x1213 + x1349
    x1365 = x4 * (-x1348 + x1356 + x1364)
    x1366 = x1215 - x1295 * x7
    x1367 = x1277 * x140 + x1366
    x1368 = x1305 * x140
    x1369 = x1308 * x7
    x1370 = -x1369
    x1371 = x1368 + x1370
    x1372 = x1371 * x3
    x1373 = x1300 * x140
    x1374 = x1305 * x7
    x1375 = -x1374
    x1376 = x1373 + x1375
    x1377 = x1376 * x38
    x1378 = -x1300 * x7
    x1379 = x1297 * x140 + x1378
    x1380 = -x1376 * x3 + x1379 * x38
    x1381 = x4 * (-x1373 + x1374 + x1379)
    x1382 = -x1372 + x1377
    x1383 = x4 * (-x1368 + x1369 + x1376)
    x1384 = -x1325 * x7
    x1385 = x1308 * x140 + x1384
    x1386 = 3 * x522
    x1387 = x1029 * x670
    x1388 = x676 * x9
    x1389 = x1386 + x1387 - x1388
    x1390 = x1389 * x3
    x1391 = 3 * x535
    x1392 = x1029 * x684
    x1393 = x670 * x9
    x1394 = x1391 + x1392 - x1393
    x1395 = x1394 * x38
    x1396 = x1029 * x693 + 3 * x519 - x684 * x9
    x1397 = -x1394 * x3 + x1396 * x38
    x1398 = x4 * (-x1391 - x1392 + x1393 + x1396)
    x1399 = -x1390 + x1395
    x1400 = x4 * (-x1386 - x1387 + x1388 + x1394)
    x1401 = x1029 * x676 + 3 * x561 - x702 * x9
    x1402 = x7 * x709
    x1403 = x703 * x706
    x1404 = x703 * x736
    x1405 = x7 * x706
    x1406 = x1404 - x1405 + x71
    x1407 = x4 * (x1402 - x1403 + x1406 + x83)
    x1408 = x1406 * x5
    x1409 = -x1402 + x1403 + x24
    x1410 = x1409 * x3
    x1411 = x1408 - x1410
    x1412 = x1411 * x5
    x1413 = x1409 * x5
    x1414 = x703 * x709
    x1415 = x7 * x715
    x1416 = x1414 - x1415 + x33
    x1417 = x1416 * x3
    x1418 = x1413 - x1417
    x1419 = x1418 * x3
    x1420 = x1407 + x1412 - x1419
    x1421 = x1420 * x5
    x1422 = x100 - x7 * x736 + x703 * x755
    x1423 = x4 * (x109 - x1404 + x1405 + x1422)
    x1424 = -x1406 * x3 + x1422 * x5
    x1425 = -x1411 * x3 + x1423 + x1424 * x5
    x1426 = -x1420 * x3 + x58 * (-x1408 + x1410 + x1424)
    x1427 = x1425 * x5 + x1426
    x1428 = x4 * (x1409 - x1414 + x1415 + x34)
    x1429 = x1418 * x5
    x1430 = x1416 * x5
    x1431 = x703 * x715
    x1432 = x7 * x725
    x1433 = x1431 - x1432 + x49
    x1434 = x1433 * x3
    x1435 = x1430 - x1434
    x1436 = x1435 * x3
    x1437 = x1428 + x1429 - x1436
    x1438 = x1437 * x3
    x1439 = x58 * (x1411 - x1413 + x1417)
    x1440 = x1438 - x1439
    x1441 = -x1407
    x1442 = x1421 - x1438 + x1439
    x1443 = -x1428
    x1444 = x4 * (x137 + x1416 - x1431 + x1432)
    x1445 = x138 - x7 * x776 + x703 * x725
    x1446 = x703 * x796
    x1447 = x7 * x778
    x1448 = x1446 - x1447 + x163 + x741
    x1449 = x1448 * x5
    x1450 = x703 * x778
    x1451 = x7 * x781
    x1452 = x1450 - x1451 + x176 + x707
    x1453 = x1452 * x3
    x1454 = x1449 - x1453
    x1455 = x1454 * x5
    x1456 = x215 - x7 * x796 + x703 * x809 + x757
    x1457 = -x1448 * x3 + x1456 * x5
    x1458 = x4 * (-x1446 + x1447 + x1456 + x218 + x760)
    x1459 = -x1454 * x3 + x1458
    x1460 = x1457 * x5 + x1459
    x1461 = x1452 * x5
    x1462 = x703 * x781
    x1463 = x7 * x788
    x1464 = x1462 - x1463 + x188 + x721
    x1465 = x1464 * x3
    x1466 = x1461 - x1465
    x1467 = x1466 * x3
    x1468 = x4 * (x1448 - x1450 + x1451 + x177 + x751)
    x1469 = x1467 - x1468
    x1470 = x1455 - x1467 + x1468
    x1471 = x4 * (x1452 - x1462 + x1463 + x244 + x774)
    x1472 = x246 - x7 * x826 + x703 * x788 + x775
    x1473 = x703 * x846
    x1474 = x7 * x828
    x1475 = x1473 - x1474 + x272
    x1476 = x1475 * x5
    x1477 = x703 * x828
    x1478 = x7 * x831
    x1479 = x1477 - x1478 + x285
    x1480 = x1479 * x3
    x1481 = x1476 - x1480
    x1482 = x1481 * x5
    x1483 = x324 - x7 * x846 + x703 * x859
    x1484 = -x1475 * x3 + x1483 * x5
    x1485 = x4 * (-x1473 + x1474 + x1483 + x327)
    x1486 = -x1481 * x3 + x1485
    x1487 = x1484 * x5 + x1486
    x1488 = x1479 * x5
    x1489 = x703 * x831
    x1490 = x7 * x838
    x1491 = x1489 - x1490 + x297
    x1492 = x1491 * x3
    x1493 = x1488 - x1492
    x1494 = x1493 * x3
    x1495 = x4 * (x1475 - x1477 + x1478 + x286)
    x1496 = -x1495
    x1497 = x1494 + x1496
    x1498 = x1482 - x1494 + x1495
    x1499 = x4 * (x1479 - x1489 + x1490 + x353)
    x1500 = x355 - x7 * x878 + x703 * x838
    x1501 = 2 * x813
    x1502 = x1501 + x383 - x7 * x883 + x703 * x880
    x1503 = 2 * x785
    x1504 = x703 * x888
    x1505 = x7 * x891
    x1506 = x1503 + x1504 - x1505 + x386
    x1507 = x1506 * x3
    x1508 = 2 * x802
    x1509 = x703 * x883
    x1510 = x7 * x888
    x1511 = x1508 + x1509 - x1510 + x399
    x1512 = -x1511 * x3
    x1513 = x1511 * x5
    x1514 = x1502 * x5 + x1512
    x1515 = -x1508
    x1516 = x4 * (x1502 - x1509 + x1510 + x1515 + x421)
    x1517 = -x1507 + x1513
    x1518 = -x1503
    x1519 = x4 * (-x1504 + x1505 + x1511 + x1518 + x423)
    x1520 = 2 * x825
    x1521 = x1520 + x425 - x7 * x908 + x703 * x891
    x1522 = x452 - x7 * x913 + x703 * x910 + x863
    x1523 = x703 * x918
    x1524 = x7 * x921
    x1525 = x1523 - x1524 + x454 + x835
    x1526 = x1525 * x3
    x1527 = x703 * x913
    x1528 = x7 * x918
    x1529 = x1527 - x1528 + x466 + x852
    x1530 = -x1529 * x3
    x1531 = x1529 * x5
    x1532 = x1522 * x5 + x1530
    x1533 = x4 * (x1522 - x1527 + x1528 + x488 + x872)
    x1534 = -x1526 + x1531
    x1535 = x4 * (-x1523 + x1524 + x1529 + x490 + x875)
    x1536 = x491 - x7 * x938 + x703 * x921 + x877
    x1537 = x519 - x7 * x943 + x703 * x940
    x1538 = x703 * x948
    x1539 = x7 * x951
    x1540 = x1538 - x1539 + x522
    x1541 = x1540 * x3
    x1542 = x703 * x943
    x1543 = x7 * x948
    x1544 = x1542 - x1543 + x535
    x1545 = -x1544 * x3
    x1546 = x1544 * x5
    x1547 = x1537 * x5 + x1545
    x1548 = x4 * (x1537 - x1542 + x1543 + x557)
    x1549 = -x1541 + x1546
    x1550 = x4 * (-x1538 + x1539 + x1544 + x559)
    x1551 = x561 - x7 * x968 + x703 * x951
    x1552 = x7 * x972
    x1553 = x703 * x977
    x1554 = 3 * x884
    x1555 = x593 - x7 * x977 + x703 * x979 + 3 * x881
    x1556 = x4 * (x1552 - x1553 - x1554 + x1555 + x585)
    x1557 = -x1552 + x1553 + x1554 + x584
    x1558 = x598 - x7 * x984 + x703 * x972 + 3 * x907
    x1559 = x7 * x988
    x1560 = x703 * x993
    x1561 = 2 * x914
    x1562 = -x1561
    x1563 = 2 * x911
    x1564 = x1563 + x627 - x7 * x993 + x703 * x995
    x1565 = x4 * (x1559 - x1560 + x1562 + x1564 + x619)
    x1566 = -x1559 + x1560 + x1561 + x618
    x1567 = 2 * x937
    x1568 = -x1000 * x7 + x1567 + x632 + x703 * x988
    x1569 = x1003 * x7
    x1570 = x1007 * x703
    x1571 = -x1007 * x7 + x1009 * x703 + x659 + x941
    x1572 = x4 * (x1569 - x1570 + x1571 + x652 + x945)
    x1573 = -x1569 + x1570 + x651 + x944
    x1574 = x1003 * x703 - x1014 * x7 + x663 + x967
    x1575 = x1017 * x7
    x1576 = x1021 * x703
    x1577 = -x1021 * x7 + x1023 * x703 + x695
    x1578 = x4 * (x1575 - x1576 + x1577 + x687)
    x1579 = -x1575 + x1576 + x686
    x1580 = x1017 * x703 - x1028 * x7 + x700
    x1581 = x1032 * x703
    x1582 = x1062 * x703
    x1583 = x1129 + x1582
    x1584 = x4 * (x1104 - x1581 + x1583)
    x1585 = x1583 * x5
    x1586 = x1105 + x1581
    x1587 = x1586 * x3
    x1588 = x1585 - x1587
    x1589 = x1588 * x5
    x1590 = x1586 * x5
    x1591 = x1035 * x703
    x1592 = x1110 + x1591
    x1593 = x1592 * x3
    x1594 = x1590 - x1593
    x1595 = x1594 * x3
    x1596 = x1584 + x1589 - x1595
    x1597 = x1596 * x5
    x1598 = x1081 * x703 + x1143
    x1599 = x4 * (x1128 - x1582 + x1598)
    x1600 = -x1583 * x3 + x1598 * x5
    x1601 = -x1588 * x3 + x1599 + x1600 * x5
    x1602 = -x1596 * x3 + x58 * (-x1585 + x1587 + x1600)
    x1603 = x1601 * x5 + x1602
    x1604 = x4 * (x1109 + x1586 - x1591)
    x1605 = x1594 * x5
    x1606 = x1592 * x5
    x1607 = x1041 * x703
    x1608 = x1119 + x1607
    x1609 = x1608 * x3
    x1610 = x1606 - x1609
    x1611 = x1610 * x3
    x1612 = x1604 + x1605 - x1611
    x1613 = x1612 * x3
    x1614 = x58 * (x1588 - x1590 + x1593)
    x1615 = x1613 - x1614
    x1616 = -x1584
    x1617 = x1597 - x1613 + x1614
    x1618 = -x1604
    x1619 = x4 * (x1118 + x1592 - x1607)
    x1620 = x1051 * x703 + x1163
    x1621 = x1130 * x703
    x1622 = x1224 + x1621
    x1623 = x1622 * x5
    x1624 = x1106 * x703
    x1625 = x1232 + x1624
    x1626 = x1625 * x3
    x1627 = x1623 - x1626
    x1628 = x1627 * x5
    x1629 = x1144 * x703 + x1218
    x1630 = -x1622 * x3 + x1629 * x5
    x1631 = x4 * (x1221 - x1621 + x1629)
    x1632 = -x1627 * x3 + x1631
    x1633 = x1630 * x5 + x1632
    x1634 = x1625 * x5
    x1635 = x1111 * x703
    x1636 = x1237 + x1635
    x1637 = x1636 * x3
    x1638 = x1634 - x1637
    x1639 = x1638 * x3
    x1640 = x4 * (x1227 + x1622 - x1624)
    x1641 = x1639 - x1640
    x1642 = x1628 - x1639 + x1640
    x1643 = x4 * (x1254 + x1625 - x1635)
    x1644 = x1120 * x703 + x1256
    x1645 = x1184 * x703
    x1646 = x1265 + x1645
    x1647 = x1646 * x5
    x1648 = x1166 * x703
    x1649 = x1271 + x1648
    x1650 = x1649 * x3
    x1651 = x1647 - x1650
    x1652 = x1651 * x5
    x1653 = x1197 * x703 + x1260
    x1654 = -x1646 * x3 + x1653 * x5
    x1655 = x4 * (x1258 - x1645 + x1653)
    x1656 = -x1651 * x3 + x1655
    x1657 = x1654 * x5 + x1656
    x1658 = x1649 * x5
    x1659 = x1169 * x703
    x1660 = x1276 + x1659
    x1661 = x1660 * x3
    x1662 = x1658 - x1661
    x1663 = x1662 * x3
    x1664 = x4 * (x1263 + x1646 - x1648)
    x1665 = -x1664
    x1666 = x1663 + x1665
    x1667 = x1652 - x1663 + x1664
    x1668 = x4 * (x1275 + x1649 - x1659)
    x1669 = x1176 * x703 + x1294
    x1670 = x1219 * x703 + x1338
    x1671 = x1233 * x703
    x1672 = x1329 + x1671
    x1673 = x1672 * x3
    x1674 = x1225 * x703
    x1675 = x1335 + x1674
    x1676 = -x1675 * x3
    x1677 = x1675 * x5
    x1678 = x1670 * x5 + x1676
    x1679 = x4 * (x1341 + x1670 - x1674)
    x1680 = -x1673 + x1677
    x1681 = x4 * (x1344 - x1671 + x1675)
    x1682 = x1238 * x703 + x1346
    x1683 = x1261 * x703 + x1358
    x1684 = x1272 * x703
    x1685 = x1350 + x1684
    x1686 = x1685 * x3
    x1687 = x1266 * x703
    x1688 = x1355 + x1687
    x1689 = -x1688 * x3
    x1690 = x1688 * x5
    x1691 = x1683 * x5 + x1689
    x1692 = x4 * (x1361 + x1683 - x1687)
    x1693 = -x1686 + x1690
    x1694 = x4 * (x1364 - x1684 + x1688)
    x1695 = x1277 * x703 + x1366
    x1696 = x1297 * x703 + x1378
    x1697 = x1305 * x703
    x1698 = x1370 + x1697
    x1699 = x1698 * x3
    x1700 = x1300 * x703
    x1701 = x1375 + x1700
    x1702 = -x1701 * x3
    x1703 = x1701 * x5
    x1704 = x1696 * x5 + x1702
    x1705 = x4 * (x1374 + x1696 - x1700)
    x1706 = -x1699 + x1703
    x1707 = x4 * (x1369 - x1697 + x1701)
    x1708 = x1308 * x703 + x1384
    x1709 = x1330 * x7
    x1710 = x1336 * x703
    x1711 = 3 * x1228
    x1712 = 3 * x1222 - x1336 * x7 + x1339 * x703
    x1713 = x4 * (x1709 - x1710 - x1711 + x1712)
    x1714 = -x1709 + x1710 + x1711
    x1715 = 3 * x1255 + x1330 * x703 - x1347 * x7
    x1716 = x1351 * x7
    x1717 = x1356 * x703
    x1718 = 2 * x1267
    x1719 = 2 * x1262 - x1356 * x7 + x1359 * x703
    x1720 = x4 * (x1716 - x1717 - x1718 + x1719)
    x1721 = -x1716 + x1717 + x1718
    x1722 = 2 * x1293 + x1351 * x703 - x1367 * x7
    x1723 = x1371 * x7
    x1724 = x1376 * x703
    x1725 = x1298 - x1376 * x7 + x1379 * x703
    x1726 = x4 * (x1302 + x1723 - x1724 + x1725)
    x1727 = x1301 - x1723 + x1724
    x1728 = x1324 + x1371 * x703 - x1385 * x7
    x1729 = x1389 * x7
    x1730 = x1394 * x703
    x1731 = -x1394 * x7 + x1396 * x703
    x1732 = x4 * (x1729 - x1730 + x1731)
    x1733 = -x1729 + x1730
    x1734 = x1389 * x703 - x1401 * x7
    x1735 = x1035 * x9
    x1736 = x1029 * x1032
    x1737 = x1029 * x1062
    x1738 = x1032 * x9
    x1739 = x1737 - x1738 + x71
    x1740 = x4 * (x1735 - x1736 + x1739 + x83)
    x1741 = x1739 * x5
    x1742 = -x1735 + x1736 + x24
    x1743 = x1742 * x3
    x1744 = x1741 - x1743
    x1745 = x1744 * x5
    x1746 = x1742 * x5
    x1747 = x1029 * x1035
    x1748 = x1041 * x9
    x1749 = x1747 - x1748 + x33
    x1750 = x1749 * x3
    x1751 = x1746 - x1750
    x1752 = x1751 * x3
    x1753 = x1740 + x1745 - x1752
    x1754 = x1753 * x5
    x1755 = x100 + x1029 * x1081 - x1062 * x9
    x1756 = x4 * (x109 - x1737 + x1738 + x1755)
    x1757 = -x1739 * x3 + x1755 * x5
    x1758 = -x1744 * x3 + x1756 + x1757 * x5
    x1759 = -x1753 * x3 + x58 * (-x1741 + x1743 + x1757)
    x1760 = x1758 * x5 + x1759
    x1761 = x4 * (x1742 - x1747 + x1748 + x34)
    x1762 = x1751 * x5
    x1763 = x1749 * x5
    x1764 = x1029 * x1041
    x1765 = x1051 * x9
    x1766 = x1764 - x1765 + x49
    x1767 = x1766 * x3
    x1768 = x1763 - x1767
    x1769 = x1768 * x3
    x1770 = x1761 + x1762 - x1769
    x1771 = x1770 * x3
    x1772 = x58 * (x1744 - x1746 + x1750)
    x1773 = x1771 - x1772
    x1774 = -x1740
    x1775 = x1754 - x1771 + x1772
    x1776 = -x1761
    x1777 = x4 * (x137 + x1749 - x1764 + x1765)
    x1778 = x1029 * x1051 - x1102 * x9 + x138
    x1779 = x140 * x1739
    x1780 = x1742 * x7
    x1781 = -x1780
    x1782 = x1779 + x1781
    x1783 = x1782 * x5
    x1784 = x140 * x1742
    x1785 = x1749 * x7
    x1786 = -x1785
    x1787 = x1784 + x1786
    x1788 = x1787 * x3
    x1789 = x1783 - x1788
    x1790 = x1789 * x5
    x1791 = -x1739 * x7
    x1792 = x140 * x1755 + x1791
    x1793 = -x1782 * x3 + x1792 * x5
    x1794 = x4 * (-x1779 + x1780 + x1792)
    x1795 = -x1789 * x3 + x1794
    x1796 = x1793 * x5 + x1795
    x1797 = x1787 * x5
    x1798 = x140 * x1749
    x1799 = x1766 * x7
    x1800 = -x1799
    x1801 = x1798 + x1800
    x1802 = x1801 * x3
    x1803 = x1797 - x1802
    x1804 = x1803 * x3
    x1805 = x4 * (x1782 - x1784 + x1785)
    x1806 = -x1805
    x1807 = x1804 + x1806
    x1808 = x1790 - x1804 + x1805
    x1809 = x4 * (x1787 - x1798 + x1799)
    x1810 = -x1778 * x7
    x1811 = x140 * x1766 + x1810
    x1812 = x1029 * x1184
    x1813 = x1166 * x9
    x1814 = x1067 + x1812 - x1813 + x272
    x1815 = x1814 * x5
    x1816 = x1029 * x1166
    x1817 = x1169 * x9
    x1818 = x1033 + x1816 - x1817 + x285
    x1819 = x1818 * x3
    x1820 = x1815 - x1819
    x1821 = x1820 * x5
    x1822 = x1029 * x1197 + x1083 - x1184 * x9 + x324
    x1823 = -x1814 * x3 + x1822 * x5
    x1824 = x4 * (x1086 - x1812 + x1813 + x1822 + x327)
    x1825 = -x1820 * x3 + x1824
    x1826 = x1823 * x5 + x1825
    x1827 = x1818 * x5
    x1828 = x1029 * x1169
    x1829 = x1176 * x9
    x1830 = x1047 + x1828 - x1829 + x297
    x1831 = x1830 * x3
    x1832 = x1827 - x1831
    x1833 = x1832 * x3
    x1834 = x4 * (x1077 + x1814 - x1816 + x1817 + x286)
    x1835 = -x1834
    x1836 = x1833 + x1835
    x1837 = x1821 - x1833 + x1834
    x1838 = x4 * (x1100 + x1818 - x1828 + x1829 + x353)
    x1839 = x1029 * x1176 + x1101 - x1216 * x9 + x355
    x1840 = x1756 - x1782 * x7
    x1841 = x140 * x1792 + x1840
    x1842 = x140 * x1787
    x1843 = x1801 * x7
    x1844 = x1761 - x1843
    x1845 = x1842 + x1844
    x1846 = x1845 * x3
    x1847 = x140 * x1782
    x1848 = x1787 * x7
    x1849 = x1740 - x1848
    x1850 = x1847 + x1849
    x1851 = -x1850 * x3
    x1852 = x1850 * x5
    x1853 = x1841 * x5 + x1851
    x1854 = x1774 + x1848
    x1855 = x4 * (x1841 - x1847 + x1854)
    x1856 = -x1846 + x1852
    x1857 = x1776 + x1843
    x1858 = x4 * (-x1842 + x1850 + x1857)
    x1859 = x1777 - x1811 * x7
    x1860 = x140 * x1801 + x1859
    x1861 = -x1814 * x7
    x1862 = x140 * x1822 + x1861
    x1863 = x140 * x1818
    x1864 = x1830 * x7
    x1865 = -x1864
    x1866 = x1863 + x1865
    x1867 = x1866 * x3
    x1868 = x140 * x1814
    x1869 = x1818 * x7
    x1870 = -x1869
    x1871 = x1868 + x1870
    x1872 = -x1871 * x3
    x1873 = x1871 * x5
    x1874 = x1862 * x5 + x1872
    x1875 = x4 * (x1862 - x1868 + x1869)
    x1876 = -x1867 + x1873
    x1877 = x4 * (-x1863 + x1864 + x1871)
    x1878 = -x1839 * x7
    x1879 = x140 * x1830 + x1878
    x1880 = 2 * x1201
    x1881 = x1029 * x1297 - x1300 * x9 + x1880 + x519
    x1882 = 2 * x1173
    x1883 = x1029 * x1305
    x1884 = x1308 * x9
    x1885 = x1882 + x1883 - x1884 + x522
    x1886 = x1885 * x3
    x1887 = 2 * x1190
    x1888 = x1029 * x1300
    x1889 = x1305 * x9
    x1890 = x1887 + x1888 - x1889 + x535
    x1891 = -x1890 * x3
    x1892 = x1890 * x5
    x1893 = x1881 * x5 + x1891
    x1894 = -x1887
    x1895 = x4 * (x1881 - x1888 + x1889 + x1894 + x557)
    x1896 = -x1886 + x1892
    x1897 = -x1882
    x1898 = x4 * (-x1883 + x1884 + x1890 + x1897 + x559)
    x1899 = 2 * x1215
    x1900 = x1029 * x1308 - x1325 * x9 + x1899 + x561
    x1901 = x140 * x1850
    x1902 = 2 * x1794 - x1850 * x7
    x1903 = x140 * x1841 + x1902
    x1904 = x1845 * x7
    x1905 = 2 * x1805
    x1906 = x1904 - x1905
    x1907 = x4 * (-x1901 + x1903 + x1906)
    x1908 = -x1904 + x1905
    x1909 = x1901 + x1908
    x1910 = 2 * x1809 - x1860 * x7
    x1911 = x140 * x1845 + x1910
    x1912 = x140 * x1871
    x1913 = x1824 - x1871 * x7
    x1914 = x140 * x1862 + x1913
    x1915 = x1866 * x7
    x1916 = x1835 + x1915
    x1917 = x4 * (-x1912 + x1914 + x1916)
    x1918 = x1834 - x1915
    x1919 = x1912 + x1918
    x1920 = x1838 - x1879 * x7
    x1921 = x140 * x1866 + x1920
    x1922 = x1885 * x7
    x1923 = x140 * x1890
    x1924 = -x1890 * x7
    x1925 = x140 * x1881 + x1924
    x1926 = x4 * (x1922 - x1923 + x1925)
    x1927 = -x1922
    x1928 = x1923 + x1927
    x1929 = -x1900 * x7
    x1930 = x140 * x1885 + x1929
    x1931 = x1389 * x9
    x1932 = x1029 * x1394
    x1933 = 3 * x1301
    x1934 = x1029 * x1396 + 3 * x1298 - x1394 * x9 + x695
    x1935 = x4 * (x1931 - x1932 - x1933 + x1934 + x687)
    x1936 = -x1931 + x1932 + x1933 + x686
    x1937 = x1029 * x1389 + 3 * x1324 - x1401 * x9 + x700
    x1938 = 2 * x707
    x1939 = x1409 * x703
    x1940 = x1416 * x7
    x1941 = x1938 + x1939 - x1940
    x1942 = x1941 * x5
    x1943 = 2 * x721
    x1944 = x1416 * x703
    x1945 = x1433 * x7
    x1946 = x1943 + x1944 - x1945
    x1947 = x1946 * x3
    x1948 = x1942 - x1947
    x1949 = x1948 * x3
    x1950 = 2 * x741
    x1951 = x1406 * x703
    x1952 = x1409 * x7
    x1953 = x1950 + x1951 - x1952
    x1954 = x4 * (-x1938 - x1939 + x1940 + x1953)
    x1955 = -x1954
    x1956 = x1953 * x5
    x1957 = x1941 * x3
    x1958 = x1956 - x1957
    x1959 = x1958 * x5
    x1960 = -x1406 * x7 + x1422 * x703 + 2 * x757
    x1961 = x4 * (-x1950 - x1951 + x1952 + x1960)
    x1962 = -x1953 * x3 + x1960 * x5
    x1963 = -x1958 * x3 + x1961 + x1962 * x5
    x1964 = -x1949 + x1954 + x1959
    x1965 = x4 * (x1941 - x1943 - x1944 + x1945)
    x1966 = x1433 * x703 - x1445 * x7 + 2 * x775
    x1967 = x1452 * x703
    x1968 = x1464 * x7
    x1969 = x1428 + x1503 + x1967 - x1968
    x1970 = x1969 * x3
    x1971 = x1448 * x703
    x1972 = x1452 * x7
    x1973 = x1407 + x1508 + x1971 - x1972
    x1974 = x1973 * x5
    x1975 = x1423 - x1448 * x7 + x1456 * x703 + x1501
    x1976 = -x1973 * x3 + x1975 * x5
    x1977 = x4 * (x1441 + x1515 - x1971 + x1972 + x1975)
    x1978 = -x1970 + x1974
    x1979 = x4 * (x1443 + x1518 - x1967 + x1968 + x1973)
    x1980 = x1444 + x1464 * x703 - x1472 * x7 + x1520
    x1981 = 2 * x835
    x1982 = x1479 * x703
    x1983 = x1491 * x7
    x1984 = x1981 + x1982 - x1983
    x1985 = x1984 * x3
    x1986 = 2 * x852
    x1987 = x1475 * x703
    x1988 = x1479 * x7
    x1989 = x1986 + x1987 - x1988
    x1990 = x1989 * x5
    x1991 = -x1475 * x7 + x1483 * x703 + 2 * x863
    x1992 = -x1989 * x3 + x1991 * x5
    x1993 = x4 * (-x1986 - x1987 + x1988 + x1991)
    x1994 = -x1985 + x1990
    x1995 = x4 * (-x1981 - x1982 + x1983 + x1989)
    x1996 = x1491 * x703 - x1500 * x7 + 2 * x877
    x1997 = x1506 * x7
    x1998 = x1511 * x703
    x1999 = 2 * x884
    x2000 = 2 * x1468
    x2001 = 2 * x1458 + x1502 * x703 - x1511 * x7 + 2 * x881
    x2002 = x4 * (x1997 - x1998 - x1999 - x2000 + x2001)
    x2003 = -x1997 + x1998 + x1999 + x2000
    x2004 = 2 * x1471 + x1506 * x703 - x1521 * x7 + 2 * x907
    x2005 = x1525 * x7
    x2006 = x1529 * x703
    x2007 = x1485 + x1522 * x703 - x1529 * x7 + x1563
    x2008 = x4 * (x1496 + x1562 + x2005 - x2006 + x2007)
    x2009 = x1495 + x1561 - x2005 + x2006
    x2010 = x1499 + x1525 * x703 - x1536 * x7 + x1567
    x2011 = x1540 * x7
    x2012 = x1544 * x703
    x2013 = 2 * x944
    x2014 = x1537 * x703 - x1544 * x7 + 2 * x941
    x2015 = x4 * (x2011 - x2012 - x2013 + x2014)
    x2016 = -x2011 + x2012 + x2013
    x2017 = x1540 * x703 - x1551 * x7 + 2 * x967
    x2018 = 3 * x1516
    x2019 = x1555 * x703 - x1557 * x7 + x2018 + 2 * x981
    x2020 = 3 * x1519
    x2021 = x1557 * x703 - x1558 * x7 + x2020 + 2 * x983
    x2022 = 2 * x1533 + x1564 * x703 - x1566 * x7 + 2 * x997
    x2023 = 2 * x1535 + x1566 * x703 - x1568 * x7 + 2 * x999
    x2024 = 2 * x1011 + x1548 + x1571 * x703 - x1573 * x7
    x2025 = 2 * x1013 + x1550 + x1573 * x703 - x1574 * x7
    x2026 = 2 * x1025 + x1577 * x703 - x1579 * x7
    x2027 = 2 * x1027 + x1579 * x703 - x1580 * x7
    x2028 = x1586 * x703
    x2029 = x1592 * x7
    x2030 = x1033 + x2028 - x2029
    x2031 = x2030 * x5
    x2032 = x1592 * x703
    x2033 = x1608 * x7
    x2034 = x1047 + x2032 - x2033
    x2035 = x2034 * x3
    x2036 = x2031 - x2035
    x2037 = x2036 * x3
    x2038 = x1583 * x703
    x2039 = x1586 * x7
    x2040 = x1067 + x2038 - x2039
    x2041 = x4 * (x1077 - x2028 + x2029 + x2040)
    x2042 = -x2041
    x2043 = x2040 * x5
    x2044 = x2030 * x3
    x2045 = x2043 - x2044
    x2046 = x2045 * x5
    x2047 = x1083 - x1583 * x7 + x1598 * x703
    x2048 = x4 * (x1086 - x2038 + x2039 + x2047)
    x2049 = -x2040 * x3 + x2047 * x5
    x2050 = -x2045 * x3 + x2048 + x2049 * x5
    x2051 = -x2037 + x2041 + x2046
    x2052 = x4 * (x1100 + x2030 - x2032 + x2033)
    x2053 = x1101 + x1608 * x703 - x1620 * x7
    x2054 = x1625 * x703
    x2055 = x1636 * x7
    x2056 = x1115 + x1604 + x2054 - x2055
    x2057 = x2056 * x3
    x2058 = x1622 * x703
    x2059 = x1625 * x7
    x2060 = x1136 + x1584 + x2058 - x2059
    x2061 = x2060 * x5
    x2062 = x1148 + x1599 - x1622 * x7 + x1629 * x703
    x2063 = -x2060 * x3 + x2062 * x5
    x2064 = x4 * (x1157 + x1616 - x2058 + x2059 + x2062)
    x2065 = -x2057 + x2061
    x2066 = x4 * (x1160 + x1618 - x2054 + x2055 + x2060)
    x2067 = x1162 + x1619 + x1636 * x703 - x1644 * x7
    x2068 = x1649 * x703
    x2069 = x1660 * x7
    x2070 = x1173 + x2068 - x2069
    x2071 = x2070 * x3
    x2072 = x1646 * x703
    x2073 = x1649 * x7
    x2074 = x1190 + x2072 - x2073
    x2075 = x2074 * x5
    x2076 = x1201 - x1646 * x7 + x1653 * x703
    x2077 = -x2074 * x3 + x2076 * x5
    x2078 = x4 * (x1210 - x2072 + x2073 + x2076)
    x2079 = -x2071 + x2075
    x2080 = x4 * (x1213 - x2068 + x2069 + x2074)
    x2081 = x1215 + x1660 * x703 - x1669 * x7
    x2082 = x1672 * x7
    x2083 = x1675 * x703
    x2084 = 2 * x1640
    x2085 = -x2084
    x2086 = 2 * x1631
    x2087 = x1222 + x1670 * x703 - x1675 * x7 + x2086
    x2088 = x4 * (x1229 + x2082 - x2083 + x2085 + x2087)
    x2089 = x1228 - x2082 + x2083 + x2084
    x2090 = 2 * x1643
    x2091 = x1255 + x1672 * x703 - x1682 * x7 + x2090
    x2092 = x1685 * x7
    x2093 = x1688 * x703
    x2094 = x1262 + x1655 + x1683 * x703 - x1688 * x7
    x2095 = x4 * (x1268 + x1665 + x2092 - x2093 + x2094)
    x2096 = x1267 + x1664 - x2092 + x2093
    x2097 = x1293 + x1668 + x1685 * x703 - x1695 * x7
    x2098 = x1698 * x7
    x2099 = x1701 * x703
    x2100 = x1298 + x1696 * x703 - x1701 * x7
    x2101 = x4 * (x1302 + x2098 - x2099 + x2100)
    x2102 = x1301 - x2098 + x2099
    x2103 = x1324 + x1698 * x703 - x1708 * x7
    x2104 = x1342 + 3 * x1679 + x1712 * x703 - x1714 * x7
    x2105 = x1345 + 3 * x1681 + x1714 * x703 - x1715 * x7
    x2106 = 2 * x1692
    x2107 = x1362 + x1719 * x703 - x1721 * x7 + x2106
    x2108 = 2 * x1694
    x2109 = x1365 + x1721 * x703 - x1722 * x7 + x2108
    x2110 = x1381 + x1705 + x1725 * x703 - x1727 * x7
    x2111 = x1383 + x1707 + x1727 * x703 - x1728 * x7
    x2112 = x1398 + x1731 * x703 - x1733 * x7
    x2113 = x1400 + x1733 * x703 - x1734 * x7
    x2114 = x1742 * x703
    x2115 = x1786 + x2114
    x2116 = x2115 * x5
    x2117 = x1749 * x703
    x2118 = x1800 + x2117
    x2119 = x2118 * x3
    x2120 = x2116 - x2119
    x2121 = x2120 * x3
    x2122 = x1739 * x703
    x2123 = x1781 + x2122
    x2124 = x4 * (x1785 - x2114 + x2123)
    x2125 = -x2124
    x2126 = x2123 * x5
    x2127 = x2115 * x3
    x2128 = x2126 - x2127
    x2129 = x2128 * x5
    x2130 = x1755 * x703 + x1791
    x2131 = x4 * (x1780 - x2122 + x2130)
    x2132 = -x2123 * x3 + x2130 * x5
    x2133 = -x2128 * x3 + x2131 + x2132 * x5
    x2134 = -x2121 + x2124 + x2129
    x2135 = x4 * (x1799 + x2115 - x2117)
    x2136 = x1766 * x703 + x1810
    x2137 = x1787 * x703
    x2138 = x1844 + x2137
    x2139 = x2138 * x3
    x2140 = x1782 * x703
    x2141 = x1849 + x2140
    x2142 = x2141 * x5
    x2143 = x1792 * x703 + x1840
    x2144 = -x2141 * x3 + x2143 * x5
    x2145 = x4 * (x1854 - x2140 + x2143)
    x2146 = -x2139 + x2142
    x2147 = x4 * (x1857 - x2137 + x2141)
    x2148 = x1801 * x703 + x1859
    x2149 = x1818 * x703
    x2150 = x1865 + x2149
    x2151 = x2150 * x3
    x2152 = x1814 * x703
    x2153 = x1870 + x2152
    x2154 = x2153 * x5
    x2155 = x1822 * x703 + x1861
    x2156 = -x2153 * x3 + x2155 * x5
    x2157 = x4 * (x1869 - x2152 + x2155)
    x2158 = -x2151 + x2154
    x2159 = x4 * (x1864 - x2149 + x2153)
    x2160 = x1830 * x703 + x1878
    x2161 = x1850 * x703
    x2162 = x1841 * x703 + x1902
    x2163 = x4 * (x1906 - x2161 + x2162)
    x2164 = x1908 + x2161
    x2165 = x1845 * x703 + x1910
    x2166 = x1871 * x703
    x2167 = x1862 * x703 + x1913
    x2168 = x4 * (x1916 - x2166 + x2167)
    x2169 = x1918 + x2166
    x2170 = x1866 * x703 + x1920
    x2171 = x1890 * x703
    x2172 = x1881 * x703 + x1924
    x2173 = x4 * (x1922 - x2171 + x2172)
    x2174 = x1927 + x2171
    x2175 = x1885 * x703 + x1929
    x2176 = 3 * x1855 + x1903 * x703 - x1909 * x7
    x2177 = 3 * x1858 + x1909 * x703 - x1911 * x7
    x2178 = 2 * x1875 + x1914 * x703 - x1919 * x7
    x2179 = 2 * x1877 + x1919 * x703 - x1921 * x7
    x2180 = x1895 + x1925 * x703 - x1928 * x7
    x2181 = x1898 + x1928 * x703 - x1930 * x7
    x2182 = x1934 * x703 - x1936 * x7
    x2183 = x1936 * x703 - x1937 * x7
    x2184 = 2 * x1033
    x2185 = x1029 * x1742
    x2186 = x1749 * x9
    x2187 = x2184 + x2185 - x2186
    x2188 = x2187 * x5
    x2189 = 2 * x1047
    x2190 = x1029 * x1749
    x2191 = x1766 * x9
    x2192 = x2189 + x2190 - x2191
    x2193 = x2192 * x3
    x2194 = x2188 - x2193
    x2195 = x2194 * x3
    x2196 = 2 * x1067
    x2197 = x1029 * x1739
    x2198 = x1742 * x9
    x2199 = x2196 + x2197 - x2198
    x2200 = x4 * (-x2184 - x2185 + x2186 + x2199)
    x2201 = -x2200
    x2202 = x2199 * x5
    x2203 = x2187 * x3
    x2204 = x2202 - x2203
    x2205 = x2204 * x5
    x2206 = x1029 * x1755 + 2 * x1083 - x1739 * x9
    x2207 = x4 * (-x2196 - x2197 + x2198 + x2206)
    x2208 = -x2199 * x3 + x2206 * x5
    x2209 = -x2204 * x3 + x2207 + x2208 * x5
    x2210 = -x2195 + x2200 + x2205
    x2211 = x4 * (x2187 - x2189 - x2190 + x2191)
    x2212 = x1029 * x1766 + 2 * x1101 - x1778 * x9
    x2213 = x140 * x2187
    x2214 = x2192 * x7
    x2215 = -x2214
    x2216 = x2213 + x2215
    x2217 = x2216 * x3
    x2218 = x140 * x2199
    x2219 = x2187 * x7
    x2220 = -x2219
    x2221 = x2218 + x2220
    x2222 = x2221 * x5
    x2223 = -x2199 * x7
    x2224 = x140 * x2206 + x2223
    x2225 = -x2221 * x3 + x2224 * x5
    x2226 = x4 * (-x2218 + x2219 + x2224)
    x2227 = -x2217 + x2222
    x2228 = x4 * (-x2213 + x2214 + x2221)
    x2229 = -x2212 * x7
    x2230 = x140 * x2192 + x2229
    x2231 = x1029 * x1818
    x2232 = x1830 * x9
    x2233 = x1761 + x1882 + x2231 - x2232
    x2234 = x2233 * x3
    x2235 = x1029 * x1814
    x2236 = x1818 * x9
    x2237 = x1740 + x1887 + x2235 - x2236
    x2238 = x2237 * x5
    x2239 = x1029 * x1822 + x1756 - x1814 * x9 + x1880
    x2240 = -x2237 * x3 + x2239 * x5
    x2241 = x4 * (x1774 + x1894 - x2235 + x2236 + x2239)
    x2242 = -x2234 + x2238
    x2243 = x4 * (x1776 + x1897 - x2231 + x2232 + x2237)
    x2244 = x1029 * x1830 + x1777 - x1839 * x9 + x1899
    x2245 = x140 * x2221
    x2246 = x2207 - x2221 * x7
    x2247 = x140 * x2224 + x2246
    x2248 = x2216 * x7
    x2249 = x2201 + x2248
    x2250 = x4 * (-x2245 + x2247 + x2249)
    x2251 = x2200 - x2248
    x2252 = x2245 + x2251
    x2253 = x2211 - x2230 * x7
    x2254 = x140 * x2216 + x2253
    x2255 = x2233 * x7
    x2256 = x140 * x2237
    x2257 = -x2237 * x7
    x2258 = x140 * x2239 + x2257
    x2259 = x4 * (x2255 - x2256 + x2258)
    x2260 = -x2255
    x2261 = x2256 + x2260
    x2262 = -x2244 * x7
    x2263 = x140 * x2233 + x2262
    x2264 = x1885 * x9
    x2265 = x1029 * x1890
    x2266 = 2 * x1301
    x2267 = 2 * x1834
    x2268 = x1029 * x1881 + 2 * x1298 + 2 * x1824 - x1890 * x9
    x2269 = x4 * (x2264 - x2265 - x2266 - x2267 + x2268)
    x2270 = -x2264 + x2265 + x2266 + x2267
    x2271 = x1029 * x1885 + 2 * x1324 + 2 * x1838 - x1900 * x9
    x2272 = 2 * x2226 - x2252 * x7
    x2273 = x140 * x2247 + x2272
    x2274 = 2 * x2228 - x2254 * x7
    x2275 = x140 * x2252 + x2274
    x2276 = x2241 - x2261 * x7
    x2277 = x140 * x2258 + x2276
    x2278 = x2243 - x2263 * x7
    x2279 = x140 * x2261 + x2278
    x2280 = -x2270 * x7
    x2281 = x140 * x2268 + x2280
    x2282 = -x2271 * x7
    x2283 = x140 * x2270 + x2282
    x2284 = 3 * x1895
    x2285 = x1029 * x1934 + 2 * x1398 - x1936 * x9 + x2284
    x2286 = 3 * x1898
    x2287 = x1029 * x1936 + 2 * x1400 - x1937 * x9 + x2286
    x2288 = 3 * x1428
    x2289 = x1941 * x703
    x2290 = x1946 * x7
    x2291 = x2288 + x2289 - x2290
    x2292 = x2291 * x3
    x2293 = 3 * x1407
    x2294 = x1953 * x703
    x2295 = x1941 * x7
    x2296 = x2293 + x2294 - x2295
    x2297 = x2296 * x5
    x2298 = 3 * x1423 - x1953 * x7 + x1960 * x703
    x2299 = -x2296 * x3 + x2298 * x5
    x2300 = -x2292 + x2297
    x2301 = x1969 * x7
    x2302 = x1973 * x703
    x2303 = 3 * x1468
    x2304 = 3 * x1458 + x1961 - x1973 * x7 + x1975 * x703
    x2305 = x1954 - x2301 + x2302 + x2303
    x2306 = x1984 * x7
    x2307 = x1989 * x703
    x2308 = 3 * x1495
    x2309 = 3 * x1485 - x1989 * x7 + x1991 * x703
    x2310 = -x2306 + x2307 + x2308
    x2311 = 2 * x1604
    x2312 = x2030 * x703
    x2313 = x2034 * x7
    x2314 = x2311 + x2312 - x2313
    x2315 = x2314 * x3
    x2316 = 2 * x1584
    x2317 = x2040 * x703
    x2318 = x2030 * x7
    x2319 = x2316 + x2317 - x2318
    x2320 = x2319 * x5
    x2321 = 2 * x1599 - x2040 * x7 + x2047 * x703
    x2322 = -x2319 * x3 + x2321 * x5
    x2323 = -x2315 + x2320
    x2324 = x2056 * x7
    x2325 = x2060 * x703
    x2326 = x2048 - x2060 * x7 + x2062 * x703 + x2086
    x2327 = x2041 + x2084 - x2324 + x2325
    x2328 = x2070 * x7
    x2329 = x2074 * x703
    x2330 = 2 * x1664
    x2331 = 2 * x1655 - x2074 * x7 + x2076 * x703
    x2332 = -x2328 + x2329 + x2330
    x2333 = x2115 * x703
    x2334 = x2118 * x7
    x2335 = x1761 + x2333 - x2334
    x2336 = x2335 * x3
    x2337 = x2123 * x703
    x2338 = x2115 * x7
    x2339 = x1740 + x2337 - x2338
    x2340 = x2339 * x5
    x2341 = x1756 - x2123 * x7 + x2130 * x703
    x2342 = -x2339 * x3 + x2341 * x5
    x2343 = -x2336 + x2340
    x2344 = x2138 * x7
    x2345 = x2141 * x703
    x2346 = x1794 + x2131 - x2141 * x7 + x2143 * x703
    x2347 = x1805 + x2124 - x2344 + x2345
    x2348 = x2150 * x7
    x2349 = x2153 * x703
    x2350 = x1824 - x2153 * x7 + x2155 * x703
    x2351 = x1834 - x2348 + x2349
    x2352 = x2187 * x703
    x2353 = x2215 + x2352
    x2354 = x2353 * x3
    x2355 = x2199 * x703
    x2356 = x2220 + x2355
    x2357 = x2356 * x5
    x2358 = x2206 * x703 + x2223
    x2359 = -x2356 * x3 + x2358 * x5
    x2360 = -x2354 + x2357
    x2361 = x2221 * x703
    x2362 = x2224 * x703 + x2246
    x2363 = x2251 + x2361
    x2364 = x2237 * x703
    x2365 = x2239 * x703 + x2257
    x2366 = x2260 + x2364
    x2367 = 3 * x1761
    x2368 = x1029 * x2187
    x2369 = x2192 * x9
    x2370 = x2367 + x2368 - x2369
    x2371 = x2370 * x3
    x2372 = 3 * x1740
    x2373 = x1029 * x2199
    x2374 = x2187 * x9
    x2375 = x2372 + x2373 - x2374
    x2376 = x2375 * x5
    x2377 = x1029 * x2206 + 3 * x1756 - x2199 * x9
    x2378 = -x2375 * x3 + x2377 * x5
    x2379 = x4 * (-x2372 - x2373 + x2374 + x2377)
    x2380 = -x2371 + x2376
    x2381 = x4 * (-x2367 - x2368 + x2369 + x2375)
    x2382 = x1029 * x2192 + 3 * x1777 - x2212 * x9
    x2383 = x2370 * x7
    x2384 = x140 * x2375
    x2385 = x140 * x2377 - x2375 * x7
    x2386 = x4 * (x2383 - x2384 + x2385)
    x2387 = -x2383 + x2384
    x2388 = x140 * x2370 - x2382 * x7
    x2389 = x2233 * x9
    x2390 = x1029 * x2237
    x2391 = 3 * x1834
    x2392 = x1029 * x2239 + 3 * x1824 + x2207 - x2237 * x9
    x2393 = x4 * (x2201 + x2389 - x2390 - x2391 + x2392)
    x2394 = x2200 - x2389 + x2390 + x2391
    x2395 = x1029 * x2233 + 3 * x1838 + x2211 - x2244 * x9
    x2396 = x140 * x2385 + x2379 - x2387 * x7
    x2397 = x140 * x2387 + x2381 - x2388 * x7
    x2398 = x140 * x2392 - x2394 * x7
    x2399 = x140 * x2394 - x2395 * x7
    x2400 = x1029 * x2268 + 2 * x2241 - x2270 * x9 + x2284
    x2401 = x1029 * x2270 + 2 * x2243 - x2271 * x9 + x2286

    # 150 item(s)
    return numpy.array(
        [
            -x3
            * (
                x135 * x38
                - x3
                * (
                    -x3
                    * (
                        -x3
                        * (
                            -x3 * (x138 - x3 * (-x139 * x3 + x5 * x52) + x5 * x54)
                            + x5 * x56
                            + x58 * (x31 - x51 + x53)
                        )
                        + x38 * x61
                        + x95 * (x137 + x41 - x50 + x55)
                    )
                    + x38 * x63
                    + x4 * (x136 + x46 - x48)
                    + x95 * (x127 - x129 + x136)
                )
                + x58 * (-x37 - x47 + x62 + x89)
                + x95 * (-x126 - x128 + x130 + x134 - x36)
            )
            + x38
            * (
                x113 * x38
                - x135 * x3
                + x58 * (x112 - x86 - x87 + x88)
                + x95 * (x125 - x131 - x132 + x133 - x85)
            )
            + x95 * (x113 + x64 - x82 - x90 - x96)
            + x95
            * (
                x108 * x58
                + x125 * x38
                - x134 * x3
                - x134 * x38
                + x3 * (x126 + x128 - x130 + x36)
                - x58 * x94
                + x58
                * (
                    x103
                    - x116
                    + x117 * x38
                    + x120
                    - x122 * x3
                    - x123
                    + x4 * (-x114 + x38 * x97 + x67 + x98)
                    - x77
                )
                - x58
                * (
                    x116
                    - x119 * x38
                    - x120
                    + x123
                    + x3 * (x124 + x40)
                    - x4 * (x115 - x12 * x38 + x15 + x21)
                    - x43
                    + x77
                )
            ),
            -x3
            * (
                x243 * x38
                - x3
                * (
                    x200 * x38
                    - x3
                    * (
                        x198 * x38
                        - x3 * (x195 * x5 + x246 - x3 * (x193 * x5 - x248 * x3))
                        + x58 * (x174 - x189 + x194)
                    )
                    + x4 * (x185 - x187 + x245)
                    + x58 * (x235 - x237 + x245)
                )
                + x58 * (-x182 - x186 + x199 + x209)
                + x58 * (-x181 - x234 - x236 + x238 + x242)
            )
            + x38
            * (
                x224 * x38
                - x243 * x3
                + x58 * (-x206 - x207 + x208 + x223)
                + x58 * (-x205 + x233 - x239 - x240 + x241)
            )
            + x58
            * (
                x180
                + x221
                + x233 * x38
                - x242 * x3
                - x242 * x38
                + x3 * (x181 + x234 + x236 - x238)
                - x4 * (x163 + x177 - x227 * x38 - x228 + x231 + x3 * (x173 + x232))
                + x4 * (x215 + x218 + x225 * x38 + x228 - x230 * x3 - x231)
            )
            + x95 * (x180 + x201 - x204 - x210 + x224),
            -x3
            * (
                -x3
                * (
                    -x3
                    * (
                        -x3 * (-x3 * (-x3 * x357 + x302 * x5) + x304 * x5 + x355)
                        + x307 * x38
                        + x58 * (x283 - x298 + x303)
                    )
                    + x309 * x38
                    + x4 * (x294 - x296 + x354)
                    + x58 * (x344 - x346 + x354)
                )
                + x352 * x38
                + x58 * (-x291 - x295 + x308 + x318)
                + x58 * (-x290 - x343 - x345 + x347 + x351)
            )
            + x38
            * (
                -x3 * x352
                + x333 * x38
                + x58 * (-x315 - x316 + x317 + x332)
                + x58 * (-x314 + x342 - x348 - x349 + x350)
            )
            + x58
            * (
                x289
                - x3 * x351
                + x3 * (x290 + x343 + x345 - x347)
                + x330
                + x342 * x38
                - x351 * x38
                - x4 * (x272 + x286 + x3 * (x282 + x341) - x336 * x38 - x337 + x340)
                + x4 * (-x3 * x339 + x324 + x327 + x334 * x38 + x337 - x340)
            )
            + x95 * (x289 + x310 - x313 - x319 + x333),
            -x3
            * (
                -x3
                * (
                    -x3 * (-x3 * (-x3 * x427 + x394 * x5) + x38 * x407 + x425)
                    + x38 * x409
                    + x4 * (x388 - x390 + x395)
                    + x4 * (x395 + x404 - x406)
                )
                + x38 * x422
                + x4 * (-x389 + x397 + x402 + x423)
                + x58 * (-x405 + x408 + x416 + x423)
            )
            + x38
            * (
                -x3 * x422
                + x38 * x420
                + x4 * (x384 - x400 + x401 + x421)
                + x58 * (-x414 + x415 + x419 + x421)
            )
            + x4
            * (
                -x3 * x402
                + x3 * (x386 + x389 - x397)
                + 2 * x372
                + x38 * x384
                - x38 * x402
                - 2 * x381
            )
            + x95 * (-x381 + x410 - x413 - x417 + x420),
            -x3
            * (
                -x3
                * (
                    -x3 * (-x3 * (-x3 * x493 + x462 * x5) + x38 * x474 + x491)
                    + x38 * x476
                    + x4 * (x456 - x458 + x463)
                    + x4 * (x463 + x471 - x473)
                )
                + x38 * x489
                + x4 * (-x457 + x465 + x469 + x490)
                + x58 * (-x472 + x475 + x483 + x490)
            )
            + x38
            * (
                -x3 * x489
                + x38 * x487
                + x4 * (x453 - x467 + x468 + x488)
                + x58 * (-x481 + x482 + x486 + x488)
            )
            + x4
            * (
                -x3 * x469
                + x3 * (x454 + x457 - x465)
                + x38 * x453
                - x38 * x469
                + 2 * x442
                - 2 * x451
            )
            + x95 * (-x451 + x477 - x480 - x484 + x487),
            -x3
            * (
                -x3
                * (
                    -x3 * (-x3 * (-x3 * x563 + x5 * x530) + x38 * x543 + x561)
                    + x38 * x545
                    + x4 * (x524 - x526 + x531)
                    + x4 * (x531 + x540 - x542)
                )
                + x38 * x558
                + x4 * (-x525 + x533 + x538 + x559)
                + x58 * (-x541 + x544 + x552 + x559)
            )
            + x38
            * (
                -x3 * x558
                + x38 * x556
                + x4 * (x520 - x536 + x537 + x557)
                + x58 * (-x550 + x551 + x555 + x557)
            )
            + x4
            * (
                -x3 * x538
                + x3 * (x522 + x525 - x533)
                + x38 * x520
                - x38 * x538
                + 2 * x508
                - 2 * x517
            )
            + x95 * (-x517 + x546 - x549 - x553 + x556),
            -x3
            * (
                -x3 * (-x3 * (-x3 * x600 + x38 * x574) + x38 * x576 + x598)
                + x38 * x596
                + x58 * (-x569 + x575 + x588)
            )
            + x38 * (-x3 * x596 + x38 * x595 + x58 * (-x586 + x587 + x594))
            + x95 * (x577 + x585 - x589 + x595),
            -x3
            * (
                -x3 * (-x3 * (-x3 * x634 + x38 * x609) + x38 * x611 + x632)
                + x38 * x630
                + x58 * (-x605 + x610 + x622)
            )
            + x38 * (-x3 * x630 + x38 * x629 + x58 * (-x620 + x621 + x628))
            + x95 * (x612 + x619 - x623 + x629),
            -x3
            * (
                -x3 * (-x3 * (-x3 * x665 + x38 * x643) + x38 * x645 + x663)
                + x38 * x662
                + x58 * (-x639 + x644 + x655)
            )
            + x38 * (-x3 * x662 + x38 * x661 + x58 * (-x653 + x654 + x660))
            + x95 * (x646 + x652 - x656 + x661),
            -x3
            * (
                -x3 * (-x3 * (-x3 * x702 + x38 * x676) + x38 * x678 + x700)
                + x38 * x698
                + x58 * (-x671 + x677 + x690)
            )
            + x38 * (-x3 * x698 + x38 * x697 + x58 * (-x688 + x689 + x696))
            + x95 * (x679 + x687 - x691 + x697),
            -x3
            * (
                -x3
                * (
                    -x3
                    * (
                        -x3 * (-x3 * (-x3 * x776 + x5 * x725) + x5 * x727 + x775)
                        + x5 * x729
                        + x58 * (x717 - x723 + x726)
                    )
                    + x38 * x733
                    + x95 * (x719 - x722 + x728 + x774)
                )
                + x38 * x772
                + x4 * (-x720 + x749 + x773)
                + x95 * (-x768 + x770 + x773)
            )
            + x38
            * (
                -x3 * x772
                + x38 * x765
                + x4 * (-x745 + x764 + x771)
                + x95 * (x767 - x769 + x771)
            )
            + x58 * (x734 - x750 - x754 + x765)
            + x95
            * (
                -x3 * x770
                + x3 * (x732 + x768)
                + x38 * x767
                - x38 * x770
                - x58 * (-x38 * x711 + x743 + x752 + x766)
                + x58 * (x38 * x756 + x758 + x761 - x766)
                - x753
                + x762
            ),
            -x3
            * (
                -x3
                * (
                    -x3 * (-x3 * (-x3 * x826 + x5 * x788) + x5 * x790 + x825)
                    + x38 * x793
                    + x58 * (x783 - x786 + x789)
                )
                + x38 * x823
                + x4 * (-x784 + x805 + x824)
                + x58 * (-x819 + x821 + x824)
            )
            + x38
            * (
                -x3 * x823
                + x38 * x816
                + x4 * (-x801 + x815 + x822)
                + x58 * (x818 - x820 + x822)
            )
            + x58 * (x794 - x806 - x808 + x816)
            + x58
            * (
                -x3 * x821
                + x3 * (x792 + x819)
                + x38 * x818
                - x38 * x821
                - x4 * (-x38 * x778 + x782 + x799 + x817)
                + x4 * (x38 * x809 + x798 + x810 - x817)
                - x807
                + x812
            ),
            -x3
            * (
                -x3
                * (
                    -x3 * (-x3 * (-x3 * x878 + x5 * x838) + x5 * x840 + x877)
                    + x38 * x843
                    + x58 * (x833 - x836 + x839)
                )
                + x38 * x874
                + x4 * (-x834 + x855 + x876)
                + x58 * (-x869 + x871 + x876)
            )
            + x38
            * (
                -x3 * x874
                + x38 * x866
                + x4 * (-x851 + x865 + x873)
                + x58 * (x868 - x870 + x873)
            )
            + x58 * (x844 - x856 - x858 + x866)
            + x58
            * (
                -x3 * x871
                + x3 * (x842 + x869)
                + x38 * x868
                - x38 * x871
                - x4 * (-x38 * x828 + x832 + x849 + x867)
                + x4 * (x38 * x859 + x848 + x860 - x867)
                - x857
                + x862
            ),
            -x3
            * (
                -x3 * (-x3 * (-x3 * x908 + x5 * x891) + x38 * x899 + x907)
                + x38 * x906
                + x4 * (-x889 + x892 + x897)
                + x4 * (x892 - x898 + x902)
            )
            + x38
            * (
                -x3 * x906
                + x38 * x905
                + x4 * (x887 - x894 + x895)
                + x4 * (x895 - x901 + x904)
            )
            + x4
            * (-x3 * x897 + x3 * (x889 + x893) + x38 * x887 - x38 * x897 + x881 + x885)
            + x58 * (x885 + x900 - x903 + x905),
            -x3
            * (
                -x3 * (-x3 * (-x3 * x938 + x5 * x921) + x38 * x929 + x937)
                + x38 * x936
                + x4 * (-x919 + x922 + x927)
                + x4 * (x922 - x928 + x932)
            )
            + x38
            * (
                -x3 * x936
                + x38 * x935
                + x4 * (x917 - x924 + x925)
                + x4 * (x925 - x931 + x934)
            )
            + x4
            * (-x3 * x927 + x3 * (x919 + x923) + x38 * x917 - x38 * x927 + x911 + x915)
            + x58 * (x915 + x930 - x933 + x935),
            -x3
            * (
                -x3 * (-x3 * (-x3 * x968 + x5 * x951) + x38 * x959 + x967)
                + x38 * x966
                + x4 * (-x949 + x952 + x957)
                + x4 * (x952 - x958 + x962)
            )
            + x38
            * (
                -x3 * x966
                + x38 * x965
                + x4 * (x947 - x954 + x955)
                + x4 * (x955 - x961 + x964)
            )
            + x4
            * (-x3 * x957 + x3 * (x949 + x953) + x38 * x947 - x38 * x957 + x941 + x945)
            + x58 * (x945 + x960 - x963 + x965),
            -x3 * (-x3 * (-x3 * x984 + x38 * x972) + x38 * x982 + x983)
            + x38 * (-x3 * x982 + x38 * x980 + x981)
            + x58 * (x973 - x978 + x980),
            -x3 * (-x3 * (-x1000 * x3 + x38 * x988) + x38 * x998 + x999)
            + x38 * (-x3 * x998 + x38 * x996 + x997)
            + x58 * (x989 - x994 + x996),
            -x3 * (x1012 * x38 + x1013 - x3 * (x1003 * x38 - x1014 * x3))
            + x38 * (x1010 * x38 + x1011 - x1012 * x3)
            + x58 * (x1004 - x1008 + x1010),
            -x3 * (x1026 * x38 + x1027 - x3 * (x1017 * x38 - x1028 * x3))
            + x38 * (x1024 * x38 + x1025 - x1026 * x3)
            + x58 * (x1018 - x1022 + x1024),
            -x3
            * (
                x1098 * x38
                - x3
                * (
                    x1059 * x38
                    - x3
                    * (
                        x1055 * x5
                        - x3 * (x1053 * x5 + x1101 - x3 * (x1051 * x5 - x1102 * x3))
                        + x58 * (x1043 - x1049 + x1052)
                    )
                    + x95 * (x1045 - x1048 + x1054 + x1100)
                )
                + x4 * (-x1046 + x1075 + x1099)
                + x95 * (-x1094 + x1096 + x1099)
            )
            + x38
            * (
                x1091 * x38
                - x1098 * x3
                + x4 * (-x1071 + x1090 + x1097)
                + x95 * (x1093 - x1095 + x1097)
            )
            + x58 * (x1060 - x1076 - x1080 + x1091)
            + x95
            * (
                -x1079
                + x1088
                + x1093 * x38
                - x1096 * x3
                - x1096 * x38
                + x3 * (x1058 + x1094)
                - x58 * (-x1037 * x38 + x1069 + x1078 + x1092)
                + x58 * (x1082 * x38 + x1084 + x1087 - x1092)
            ),
            -x3
            * (
                x1159 * x38
                - x3
                * (
                    x1125 * x38
                    - x3 * (x1122 * x5 + x1162 - x3 * (x1120 * x5 - x1164 * x3))
                    + x58 * (x1113 - x1116 + x1121)
                )
                + x4 * (-x1114 + x1139 + x1161)
                + x58 * (-x1154 + x1156 + x1161)
            )
            + x38
            * (
                x1151 * x38
                - x1159 * x3
                + x4 * (-x1135 + x1150 + x1158)
                + x58 * (x1153 - x1155 + x1158)
            )
            + x58 * (x1126 - x1140 - x1142 + x1151)
            + x58
            * (
                -x1141
                + x1147
                + x1153 * x38
                - x1156 * x3
                - x1156 * x38
                + x3 * (x1124 + x1154)
                + x4 * (x1132 + x1144 * x38 + x1145 - x1152)
                - x4 * (-x1106 * x38 + x1112 + x1133 + x1152)
            ),
            -x3
            * (
                x1212 * x38
                - x3
                * (
                    x1181 * x38
                    - x3 * (x1178 * x5 + x1215 - x3 * (x1176 * x5 - x1216 * x3))
                    + x58 * (x1171 - x1174 + x1177)
                )
                + x4 * (-x1172 + x1193 + x1214)
                + x58 * (-x1207 + x1209 + x1214)
            )
            + x38
            * (
                x1204 * x38
                - x1212 * x3
                + x4 * (-x1189 + x1203 + x1211)
                + x58 * (x1206 - x1208 + x1211)
            )
            + x58 * (x1182 - x1194 - x1196 + x1204)
            + x58
            * (
                -x1195
                + x1200
                + x1206 * x38
                - x1209 * x3
                - x1209 * x38
                + x3 * (x1180 + x1207)
                + x4 * (x1186 + x1197 * x38 + x1198 - x1205)
                - x4 * (-x1166 * x38 + x1170 + x1187 + x1205)
            ),
            -x3
            * (
                x1253 * x38
                - x3 * (x1246 * x38 + x1255 - x3 * (x1238 * x5 - x1257 * x3))
                + x4 * (-x1234 + x1239 + x1244)
                + x4 * (x1239 - x1245 + x1249)
            )
            + x38
            * (
                x1252 * x38
                - x1253 * x3
                + x4 * (x1231 - x1241 + x1242)
                + x4 * (x1242 - x1248 + x1251)
            )
            + x4
            * (
                x1222
                + x1229
                + x1231 * x38
                - x1244 * x3
                - x1244 * x38
                + x3 * (x1234 + x1240)
            )
            + x58 * (x1229 + x1247 - x1250 + x1252),
            -x3
            * (
                x1292 * x38
                - x3 * (x1285 * x38 + x1293 - x3 * (x1277 * x5 - x1295 * x3))
                + x4 * (-x1273 + x1278 + x1283)
                + x4 * (x1278 - x1284 + x1288)
            )
            + x38
            * (
                x1291 * x38
                - x1292 * x3
                + x4 * (x1270 - x1280 + x1281)
                + x4 * (x1281 - x1287 + x1290)
            )
            + x4
            * (
                x1262
                + x1268
                + x1270 * x38
                - x1283 * x3
                - x1283 * x38
                + x3 * (x1273 + x1279)
            )
            + x58 * (x1268 + x1286 - x1289 + x1291),
            -x3
            * (
                x1323 * x38
                - x3 * (x1316 * x38 + x1324 - x3 * (x1308 * x5 - x1325 * x3))
                + x4 * (-x1306 + x1309 + x1314)
                + x4 * (x1309 - x1315 + x1319)
            )
            + x38
            * (
                x1322 * x38
                - x1323 * x3
                + x4 * (x1304 - x1311 + x1312)
                + x4 * (x1312 - x1318 + x1321)
            )
            + x4
            * (
                x1298
                + x1302
                + x1304 * x38
                - x1314 * x3
                - x1314 * x38
                + x3 * (x1306 + x1310)
            )
            + x58 * (x1302 + x1317 - x1320 + x1322),
            -x3 * (x1343 * x38 + x1345 - x3 * (x1330 * x38 - x1347 * x3))
            + x38 * (x1340 * x38 + x1342 - x1343 * x3)
            + x58 * (x1331 - x1337 + x1340),
            -x3 * (x1363 * x38 + x1365 - x3 * (x1351 * x38 - x1367 * x3))
            + x38 * (x1360 * x38 + x1362 - x1363 * x3)
            + x58 * (x1352 - x1357 + x1360),
            -x3 * (x1382 * x38 + x1383 - x3 * (x1371 * x38 - x1385 * x3))
            + x38 * (x1380 * x38 + x1381 - x1382 * x3)
            + x58 * (x1372 - x1377 + x1380),
            -x3 * (x1399 * x38 + x1400 - x3 * (x1389 * x38 - x1401 * x3))
            + x38 * (x1397 * x38 + x1398 - x1399 * x3)
            + x58 * (x1390 - x1395 + x1397),
            -x3
            * (
                x1442 * x38
                - x3
                * (
                    x1437 * x5
                    - x3 * (x1435 * x5 + x1444 - x3 * (x1433 * x5 - x1445 * x3))
                    + x58 * (x1418 - x1430 + x1434)
                )
                + x95 * (x1420 - x1429 + x1436 + x1443)
            )
            + x38 * (x1427 * x38 - x1442 * x3 + x95 * (-x1412 + x1419 + x1425 + x1441))
            + x4 * (-x1421 + x1427 + x1440)
            + x95 * (-x1420 * x38 + x1425 * x38 + x1426 + x1440),
            -x3
            * (
                x1470 * x38
                - x3 * (x1466 * x5 + x1471 - x3 * (x1464 * x5 - x1472 * x3))
                + x58 * (x1454 - x1461 + x1465)
            )
            + x38 * (x1460 * x38 - x1470 * x3 + x58 * (-x1449 + x1453 + x1457))
            + x4 * (-x1455 + x1460 + x1469)
            + x58 * (-x1454 * x38 + x1457 * x38 + x1459 + x1469),
            -x3
            * (
                x1498 * x38
                - x3 * (x1493 * x5 + x1499 - x3 * (x1491 * x5 - x1500 * x3))
                + x58 * (x1481 - x1488 + x1492)
            )
            + x38 * (x1487 * x38 - x1498 * x3 + x58 * (-x1476 + x1480 + x1484))
            + x4 * (-x1482 + x1487 + x1497)
            + x58 * (-x1481 * x38 + x1484 * x38 + x1486 + x1497),
            -x3 * (x1517 * x38 + x1519 - x3 * (x1506 * x5 - x1521 * x3))
            + x38 * (x1514 * x38 + x1516 - x1517 * x3)
            + x4 * (x1507 - x1513 + x1514)
            + x4 * (x1502 * x38 + x1507 - x1511 * x38 + x1512),
            -x3 * (x1534 * x38 + x1535 - x3 * (x1525 * x5 - x1536 * x3))
            + x38 * (x1532 * x38 + x1533 - x1534 * x3)
            + x4 * (x1526 - x1531 + x1532)
            + x4 * (x1522 * x38 + x1526 - x1529 * x38 + x1530),
            -x3 * (x1549 * x38 + x1550 - x3 * (x1540 * x5 - x1551 * x3))
            + x38 * (x1547 * x38 + x1548 - x1549 * x3)
            + x4 * (x1541 - x1546 + x1547)
            + x4 * (x1537 * x38 + x1541 - x1544 * x38 + x1545),
            x1556 - x3 * (x1557 * x38 - x1558 * x3) + x38 * (x1555 * x38 - x1557 * x3),
            x1565 - x3 * (x1566 * x38 - x1568 * x3) + x38 * (x1564 * x38 - x1566 * x3),
            x1572 - x3 * (x1573 * x38 - x1574 * x3) + x38 * (x1571 * x38 - x1573 * x3),
            x1578 - x3 * (x1579 * x38 - x1580 * x3) + x38 * (x1577 * x38 - x1579 * x3),
            -x3
            * (
                x1617 * x38
                - x3
                * (
                    x1612 * x5
                    - x3 * (x1610 * x5 + x1619 - x3 * (x1608 * x5 - x1620 * x3))
                    + x58 * (x1594 - x1606 + x1609)
                )
                + x95 * (x1596 - x1605 + x1611 + x1618)
            )
            + x38 * (x1603 * x38 - x1617 * x3 + x95 * (-x1589 + x1595 + x1601 + x1616))
            + x4 * (-x1597 + x1603 + x1615)
            + x95 * (-x1596 * x38 + x1601 * x38 + x1602 + x1615),
            -x3
            * (
                x1642 * x38
                - x3 * (x1638 * x5 + x1643 - x3 * (x1636 * x5 - x1644 * x3))
                + x58 * (x1627 - x1634 + x1637)
            )
            + x38 * (x1633 * x38 - x1642 * x3 + x58 * (-x1623 + x1626 + x1630))
            + x4 * (-x1628 + x1633 + x1641)
            + x58 * (-x1627 * x38 + x1630 * x38 + x1632 + x1641),
            -x3
            * (
                x1667 * x38
                - x3 * (x1662 * x5 + x1668 - x3 * (x1660 * x5 - x1669 * x3))
                + x58 * (x1651 - x1658 + x1661)
            )
            + x38 * (x1657 * x38 - x1667 * x3 + x58 * (-x1647 + x1650 + x1654))
            + x4 * (-x1652 + x1657 + x1666)
            + x58 * (-x1651 * x38 + x1654 * x38 + x1656 + x1666),
            -x3 * (x1680 * x38 + x1681 - x3 * (x1672 * x5 - x1682 * x3))
            + x38 * (x1678 * x38 + x1679 - x1680 * x3)
            + x4 * (x1673 - x1677 + x1678)
            + x4 * (x1670 * x38 + x1673 - x1675 * x38 + x1676),
            -x3 * (x1693 * x38 + x1694 - x3 * (x1685 * x5 - x1695 * x3))
            + x38 * (x1691 * x38 + x1692 - x1693 * x3)
            + x4 * (x1686 - x1690 + x1691)
            + x4 * (x1683 * x38 + x1686 - x1688 * x38 + x1689),
            -x3 * (x1706 * x38 + x1707 - x3 * (x1698 * x5 - x1708 * x3))
            + x38 * (x1704 * x38 + x1705 - x1706 * x3)
            + x4 * (x1699 - x1703 + x1704)
            + x4 * (x1696 * x38 + x1699 - x1701 * x38 + x1702),
            x1713 - x3 * (x1714 * x38 - x1715 * x3) + x38 * (x1712 * x38 - x1714 * x3),
            x1720 - x3 * (x1721 * x38 - x1722 * x3) + x38 * (x1719 * x38 - x1721 * x3),
            x1726 - x3 * (x1727 * x38 - x1728 * x3) + x38 * (x1725 * x38 - x1727 * x3),
            x1732 - x3 * (x1733 * x38 - x1734 * x3) + x38 * (x1731 * x38 - x1733 * x3),
            -x3
            * (
                x1775 * x38
                - x3
                * (
                    x1770 * x5
                    - x3 * (x1768 * x5 + x1777 - x3 * (x1766 * x5 - x1778 * x3))
                    + x58 * (x1751 - x1763 + x1767)
                )
                + x95 * (x1753 - x1762 + x1769 + x1776)
            )
            + x38 * (x1760 * x38 - x1775 * x3 + x95 * (-x1745 + x1752 + x1758 + x1774))
            + x4 * (-x1754 + x1760 + x1773)
            + x95 * (-x1753 * x38 + x1758 * x38 + x1759 + x1773),
            -x3
            * (
                x1808 * x38
                - x3 * (x1803 * x5 + x1809 - x3 * (x1801 * x5 - x1811 * x3))
                + x58 * (x1789 - x1797 + x1802)
            )
            + x38 * (x1796 * x38 - x1808 * x3 + x58 * (-x1783 + x1788 + x1793))
            + x4 * (-x1790 + x1796 + x1807)
            + x58 * (-x1789 * x38 + x1793 * x38 + x1795 + x1807),
            -x3
            * (
                x1837 * x38
                - x3 * (x1832 * x5 + x1838 - x3 * (x1830 * x5 - x1839 * x3))
                + x58 * (x1820 - x1827 + x1831)
            )
            + x38 * (x1826 * x38 - x1837 * x3 + x58 * (-x1815 + x1819 + x1823))
            + x4 * (-x1821 + x1826 + x1836)
            + x58 * (-x1820 * x38 + x1823 * x38 + x1825 + x1836),
            -x3 * (x1856 * x38 + x1858 - x3 * (x1845 * x5 - x1860 * x3))
            + x38 * (x1853 * x38 + x1855 - x1856 * x3)
            + x4 * (x1846 - x1852 + x1853)
            + x4 * (x1841 * x38 + x1846 - x1850 * x38 + x1851),
            -x3 * (x1876 * x38 + x1877 - x3 * (x1866 * x5 - x1879 * x3))
            + x38 * (x1874 * x38 + x1875 - x1876 * x3)
            + x4 * (x1867 - x1873 + x1874)
            + x4 * (x1862 * x38 + x1867 - x1871 * x38 + x1872),
            -x3 * (x1896 * x38 + x1898 - x3 * (x1885 * x5 - x1900 * x3))
            + x38 * (x1893 * x38 + x1895 - x1896 * x3)
            + x4 * (x1886 - x1892 + x1893)
            + x4 * (x1881 * x38 + x1886 - x1890 * x38 + x1891),
            x1907 - x3 * (x1909 * x38 - x1911 * x3) + x38 * (x1903 * x38 - x1909 * x3),
            x1917 - x3 * (x1919 * x38 - x1921 * x3) + x38 * (x1914 * x38 - x1919 * x3),
            x1926 - x3 * (x1928 * x38 - x1930 * x3) + x38 * (x1925 * x38 - x1928 * x3),
            x1935 - x3 * (x1936 * x38 - x1937 * x3) + x38 * (x1934 * x38 - x1936 * x3),
            -x3
            * (
                x1964 * x5
                - x3 * (x1948 * x5 + x1965 - x3 * (x1946 * x5 - x1966 * x3))
                + x58 * (-x1942 + x1947 + x1958)
            )
            + x38 * (x1963 * x5 - x1964 * x3 + x58 * (-x1956 + x1957 + x1962))
            + x95 * (x1949 + x1955 - x1959 + x1963),
            -x3 * (x1978 * x5 + x1979 - x3 * (x1969 * x5 - x1980 * x3))
            + x38 * (x1976 * x5 + x1977 - x1978 * x3)
            + x58 * (x1970 - x1974 + x1976),
            -x3 * (x1994 * x5 + x1995 - x3 * (x1984 * x5 - x1996 * x3))
            + x38 * (x1992 * x5 + x1993 - x1994 * x3)
            + x58 * (x1985 - x1990 + x1992),
            x2002 - x3 * (x2003 * x5 - x2004 * x3) + x38 * (x2001 * x5 - x2003 * x3),
            x2008 - x3 * (x2009 * x5 - x2010 * x3) + x38 * (x2007 * x5 - x2009 * x3),
            x2015 - x3 * (x2016 * x5 - x2017 * x3) + x38 * (x2014 * x5 - x2016 * x3),
            x2019 * x38 - x2021 * x3,
            x2022 * x38 - x2023 * x3,
            x2024 * x38 - x2025 * x3,
            x2026 * x38 - x2027 * x3,
            -x3
            * (
                x2051 * x5
                - x3 * (x2036 * x5 + x2052 - x3 * (x2034 * x5 - x2053 * x3))
                + x58 * (-x2031 + x2035 + x2045)
            )
            + x38 * (x2050 * x5 - x2051 * x3 + x58 * (-x2043 + x2044 + x2049))
            + x95 * (x2037 + x2042 - x2046 + x2050),
            -x3 * (x2065 * x5 + x2066 - x3 * (x2056 * x5 - x2067 * x3))
            + x38 * (x2063 * x5 + x2064 - x2065 * x3)
            + x58 * (x2057 - x2061 + x2063),
            -x3 * (x2079 * x5 + x2080 - x3 * (x2070 * x5 - x2081 * x3))
            + x38 * (x2077 * x5 + x2078 - x2079 * x3)
            + x58 * (x2071 - x2075 + x2077),
            x2088 - x3 * (x2089 * x5 - x2091 * x3) + x38 * (x2087 * x5 - x2089 * x3),
            x2095 - x3 * (x2096 * x5 - x2097 * x3) + x38 * (x2094 * x5 - x2096 * x3),
            x2101 - x3 * (x2102 * x5 - x2103 * x3) + x38 * (x2100 * x5 - x2102 * x3),
            x2104 * x38 - x2105 * x3,
            x2107 * x38 - x2109 * x3,
            x2110 * x38 - x2111 * x3,
            x2112 * x38 - x2113 * x3,
            -x3
            * (
                x2134 * x5
                - x3 * (x2120 * x5 + x2135 - x3 * (x2118 * x5 - x2136 * x3))
                + x58 * (-x2116 + x2119 + x2128)
            )
            + x38 * (x2133 * x5 - x2134 * x3 + x58 * (-x2126 + x2127 + x2132))
            + x95 * (x2121 + x2125 - x2129 + x2133),
            -x3 * (x2146 * x5 + x2147 - x3 * (x2138 * x5 - x2148 * x3))
            + x38 * (x2144 * x5 + x2145 - x2146 * x3)
            + x58 * (x2139 - x2142 + x2144),
            -x3 * (x2158 * x5 + x2159 - x3 * (x2150 * x5 - x2160 * x3))
            + x38 * (x2156 * x5 + x2157 - x2158 * x3)
            + x58 * (x2151 - x2154 + x2156),
            x2163 - x3 * (x2164 * x5 - x2165 * x3) + x38 * (x2162 * x5 - x2164 * x3),
            x2168 - x3 * (x2169 * x5 - x2170 * x3) + x38 * (x2167 * x5 - x2169 * x3),
            x2173 - x3 * (x2174 * x5 - x2175 * x3) + x38 * (x2172 * x5 - x2174 * x3),
            x2176 * x38 - x2177 * x3,
            x2178 * x38 - x2179 * x3,
            x2180 * x38 - x2181 * x3,
            x2182 * x38 - x2183 * x3,
            -x3
            * (
                x2210 * x5
                - x3 * (x2194 * x5 + x2211 - x3 * (x2192 * x5 - x2212 * x3))
                + x58 * (-x2188 + x2193 + x2204)
            )
            + x38 * (x2209 * x5 - x2210 * x3 + x58 * (-x2202 + x2203 + x2208))
            + x95 * (x2195 + x2201 - x2205 + x2209),
            -x3 * (x2227 * x5 + x2228 - x3 * (x2216 * x5 - x2230 * x3))
            + x38 * (x2225 * x5 + x2226 - x2227 * x3)
            + x58 * (x2217 - x2222 + x2225),
            -x3 * (x2242 * x5 + x2243 - x3 * (x2233 * x5 - x2244 * x3))
            + x38 * (x2240 * x5 + x2241 - x2242 * x3)
            + x58 * (x2234 - x2238 + x2240),
            x2250 - x3 * (x2252 * x5 - x2254 * x3) + x38 * (x2247 * x5 - x2252 * x3),
            x2259 - x3 * (x2261 * x5 - x2263 * x3) + x38 * (x2258 * x5 - x2261 * x3),
            x2269 - x3 * (x2270 * x5 - x2271 * x3) + x38 * (x2268 * x5 - x2270 * x3),
            x2273 * x38 - x2275 * x3,
            x2277 * x38 - x2279 * x3,
            x2281 * x38 - x2283 * x3,
            x2285 * x38 - x2287 * x3,
            -x3
            * (
                x2300 * x5
                - x3 * (x2291 * x5 - x3 * (3 * x1444 + x1946 * x703 - x1966 * x7))
                + x4 * (-x2288 - x2289 + x2290 + x2296)
            )
            + x5 * (x2299 * x5 - x2300 * x3 + x4 * (-x2293 - x2294 + x2295 + x2298))
            + x58 * (x2292 - x2297 + x2299),
            -x3 * (x2305 * x5 - x3 * (3 * x1471 + x1965 + x1969 * x703 - x1980 * x7))
            + x4 * (x1955 + x2301 - x2302 - x2303 + x2304)
            + x5 * (x2304 * x5 - x2305 * x3),
            -x3 * (x2310 * x5 - x3 * (3 * x1499 + x1984 * x703 - x1996 * x7))
            + x4 * (x2306 - x2307 - x2308 + x2309)
            + x5 * (x2309 * x5 - x2310 * x3),
            -x3 * (2 * x1979 + x2003 * x703 - x2004 * x7 + x2020)
            + x5 * (2 * x1977 + x2001 * x703 - x2003 * x7 + x2018),
            -x3 * (3 * x1535 + x1995 + x2009 * x703 - x2010 * x7)
            + x5 * (3 * x1533 + x1993 + x2007 * x703 - x2009 * x7),
            -x3 * (3 * x1550 + x2016 * x703 - x2017 * x7)
            + x5 * (3 * x1548 + x2014 * x703 - x2016 * x7),
            3 * x1556 + 3 * x2002 + x2019 * x703 - x2021 * x7,
            3 * x1565 + 2 * x2008 + x2022 * x703 - x2023 * x7,
            3 * x1572 + x2015 + x2024 * x703 - x2025 * x7,
            3 * x1578 + x2026 * x703 - x2027 * x7,
            -x3
            * (
                x2323 * x5
                - x3 * (x2314 * x5 - x3 * (2 * x1619 + x2034 * x703 - x2053 * x7))
                + x4 * (-x2311 - x2312 + x2313 + x2319)
            )
            + x5 * (x2322 * x5 - x2323 * x3 + x4 * (-x2316 - x2317 + x2318 + x2321))
            + x58 * (x2315 - x2320 + x2322),
            -x3 * (x2327 * x5 - x3 * (x2052 + x2056 * x703 - x2067 * x7 + x2090))
            + x4 * (x2042 + x2085 + x2324 - x2325 + x2326)
            + x5 * (x2326 * x5 - x2327 * x3),
            -x3 * (x2332 * x5 - x3 * (2 * x1668 + x2070 * x703 - x2081 * x7))
            + x4 * (x2328 - x2329 - x2330 + x2331)
            + x5 * (x2331 * x5 - x2332 * x3),
            -x3 * (2 * x1681 + 2 * x2066 + x2089 * x703 - x2091 * x7)
            + x5 * (2 * x1679 + 2 * x2064 + x2087 * x703 - x2089 * x7),
            -x3 * (x2080 + x2096 * x703 - x2097 * x7 + x2108)
            + x5 * (x2078 + x2094 * x703 - x2096 * x7 + x2106),
            -x3 * (2 * x1707 + x2102 * x703 - x2103 * x7)
            + x5 * (2 * x1705 + x2100 * x703 - x2102 * x7),
            2 * x1713 + 3 * x2088 + x2104 * x703 - x2105 * x7,
            2 * x1720 + 2 * x2095 + x2107 * x703 - x2109 * x7,
            2 * x1726 + x2101 + x2110 * x703 - x2111 * x7,
            2 * x1732 + x2112 * x703 - x2113 * x7,
            -x3
            * (
                x2343 * x5
                - x3 * (x2335 * x5 - x3 * (x1777 + x2118 * x703 - x2136 * x7))
                + x4 * (x1776 - x2333 + x2334 + x2339)
            )
            + x5 * (x2342 * x5 - x2343 * x3 + x4 * (x1774 - x2337 + x2338 + x2341))
            + x58 * (x2336 - x2340 + x2342),
            -x3 * (x2347 * x5 - x3 * (x1809 + x2135 + x2138 * x703 - x2148 * x7))
            + x4 * (x1806 + x2125 + x2344 - x2345 + x2346)
            + x5 * (x2346 * x5 - x2347 * x3),
            -x3 * (x2351 * x5 - x3 * (x1838 + x2150 * x703 - x2160 * x7))
            + x4 * (x1835 + x2348 - x2349 + x2350)
            + x5 * (x2350 * x5 - x2351 * x3),
            -x3 * (x1858 + 2 * x2147 + x2164 * x703 - x2165 * x7)
            + x5 * (x1855 + 2 * x2145 + x2162 * x703 - x2164 * x7),
            -x3 * (x1877 + x2159 + x2169 * x703 - x2170 * x7)
            + x5 * (x1875 + x2157 + x2167 * x703 - x2169 * x7),
            -x3 * (x1898 + x2174 * x703 - x2175 * x7)
            + x5 * (x1895 + x2172 * x703 - x2174 * x7),
            x1907 + 3 * x2163 + x2176 * x703 - x2177 * x7,
            x1917 + 2 * x2168 + x2178 * x703 - x2179 * x7,
            x1926 + x2173 + x2180 * x703 - x2181 * x7,
            x1935 + x2182 * x703 - x2183 * x7,
            -x3
            * (
                x2360 * x5
                - x3 * (x2353 * x5 - x3 * (x2192 * x703 + x2229))
                + x4 * (x2214 - x2352 + x2356)
            )
            + x5 * (x2359 * x5 - x2360 * x3 + x4 * (x2219 - x2355 + x2358))
            + x58 * (x2354 - x2357 + x2359),
            -x3 * (x2363 * x5 - x3 * (x2216 * x703 + x2253))
            + x4 * (x2249 - x2361 + x2362)
            + x5 * (x2362 * x5 - x2363 * x3),
            -x3 * (x2366 * x5 - x3 * (x2233 * x703 + x2262))
            + x4 * (x2255 - x2364 + x2365)
            + x5 * (x2365 * x5 - x2366 * x3),
            -x3 * (x2252 * x703 + x2274) + x5 * (x2247 * x703 + x2272),
            -x3 * (x2261 * x703 + x2278) + x5 * (x2258 * x703 + x2276),
            -x3 * (x2270 * x703 + x2282) + x5 * (x2268 * x703 + x2280),
            3 * x2250 + x2273 * x703 - x2275 * x7,
            2 * x2259 + x2277 * x703 - x2279 * x7,
            x2269 + x2281 * x703 - x2283 * x7,
            x2285 * x703 - x2287 * x7,
            -x3 * (x2380 * x5 + x2381 - x3 * (x2370 * x5 - x2382 * x3))
            + x5 * (x2378 * x5 + x2379 - x2380 * x3)
            + x58 * (x2371 - x2376 + x2378),
            x2386 - x3 * (x2387 * x5 - x2388 * x3) + x5 * (x2385 * x5 - x2387 * x3),
            x2393 - x3 * (x2394 * x5 - x2395 * x3) + x5 * (x2392 * x5 - x2394 * x3),
            x2396 * x5 - x2397 * x3,
            x2398 * x5 - x2399 * x3,
            x2400 * x5 - x2401 * x3,
            x140 * x2396 + 2 * x2386 - x2397 * x7,
            x140 * x2398 + x2393 - x2399 * x7,
            x140 * x2400 - x2401 * x7,
            x1029 * x2285 + 3 * x1935 + 3 * x2269 - x2287 * x9,
        ]
    )


def coulomb3d_44(a, A, b, B, C):
    """Cartesian (gg) 1-electron Coulomb integral.

    Generated code; DO NOT modify by hand!"""

    x0 = a + b
    x1 = x0 ** (-1.0)
    x2 = -x1 * (a * A[0] + b * B[0])
    x3 = -x2 - C[0]
    x4 = (2 * a + 2 * b) ** (-1.0)
    x5 = -x2 - B[0]
    x6 = -x1 * (a * A[1] + b * B[1])
    x7 = -x6 - C[1]
    x8 = -x1 * (a * A[2] + b * B[2])
    x9 = -x8 - C[2]
    x10 = x0 * (x3 ** 2 + x7 ** 2 + x9 ** 2)
    x11 = (
        2
        * numpy.pi
        * x1
        * numpy.exp(
            -a * b * x1 * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2)
        )
    )
    x12 = x11 * boys(3, x10)
    x13 = x11 * boys(4, x10)
    x14 = x4 * (x12 - x13)
    x15 = x12 * x5
    x16 = x13 * x3
    x17 = x15 - x16
    x18 = x17 * x5
    x19 = x13 * x5
    x20 = x11 * boys(5, x10)
    x21 = x20 * x3
    x22 = x19 - x21
    x23 = x22 * x3
    x24 = x14 + x18 - x23
    x25 = x24 * x5
    x26 = x11 * boys(2, x10)
    x27 = x26 * x5
    x28 = x12 * x3
    x29 = x27 - x28
    x30 = x29 * x5
    x31 = x4 * (-x12 + x26)
    x32 = x17 * x3
    x33 = x31 - x32
    x34 = x30 + x33
    x35 = x34 * x5
    x36 = x24 * x3
    x37 = 2 * x4
    x38 = x37 * (-x15 + x16 + x29)
    x39 = -x36 + x38
    x40 = x35 + x39
    x41 = x4 * (x13 - x20)
    x42 = x22 * x5
    x43 = x20 * x5
    x44 = x11 * boys(6, x10)
    x45 = x3 * x44
    x46 = x43 - x45
    x47 = x3 * x46
    x48 = x41 + x42 - x47
    x49 = x3 * x48
    x50 = x37 * (x17 - x19 + x21)
    x51 = x49 - x50
    x52 = x4 * (-x25 + x40 + x51)
    x53 = 4 * x52
    x54 = -x2 - A[0]
    x55 = x40 * x5
    x56 = -x49 + x50
    x57 = x25 + x56
    x58 = x3 * x57
    x59 = -x14
    x60 = x23 + x59
    x61 = x4 * (-x18 + x34 + x60)
    x62 = 3 * x61
    x63 = -x58 + x62
    x64 = x55 + x63
    x65 = x54 * x64
    x66 = x5 * x57
    x67 = x37 * (x22 - x43 + x45)
    x68 = x48 * x5
    x69 = x4 * (x20 - x44)
    x70 = x46 * x5
    x71 = x44 * x5
    x72 = x11 * boys(7, x10)
    x73 = x3 * x72
    x74 = x71 - x73
    x75 = x3 * x74
    x76 = x69 + x70 - x75
    x77 = x3 * x76
    x78 = x67 + x68 - x77
    x79 = x3 * x78
    x80 = -x41
    x81 = 3 * x4
    x82 = x81 * (x24 - x42 + x47 + x80)
    x83 = -x79 + x82
    x84 = x66 + x83
    x85 = x3 * x84
    x86 = x53 + x65 - x85
    x87 = x3 * x86
    x88 = x11 * boys(1, x10)
    x89 = x5 * x88
    x90 = x26 * x3
    x91 = x89 - x90
    x92 = x5 * x91
    x93 = x4 * (-x26 + x88)
    x94 = x29 * x3
    x95 = x93 - x94
    x96 = x92 + x95
    x97 = x5 * x96
    x98 = x3 * x34
    x99 = x37 * (-x27 + x28 + x91)
    x100 = -x98 + x99
    x101 = x100 + x97
    x102 = x101 * x5
    x103 = x3 * x40
    x104 = -x31
    x105 = x104 + x32
    x106 = x4 * (x105 - x30 + x96)
    x107 = 3 * x106
    x108 = -x103 + x107
    x109 = x102 + x108
    x110 = x58 - x62
    x111 = x4 * (x109 + x110 - x55)
    x112 = x36 - x38
    x113 = x4 * (x101 + x112 - x35)
    x114 = 4 * x113
    x115 = x109 * x54
    x116 = x3 * x64
    x117 = x114 + x115 - x116
    x118 = x117 * x54
    x119 = x40 * x54
    x120 = x101 * x54
    x121 = x108 + x120
    x122 = x110 - x119 + x121
    x123 = 4 * x4
    x124 = x122 * x123
    x125 = x11 * boys(0, x10)
    x126 = x125 * x5 - x3 * x88
    x127 = x4 * (x125 - x88)
    x128 = x127 - x3 * x91
    x129 = x126 * x5 + x128
    x130 = -x3 * x96 + x37 * (x126 - x89 + x90)
    x131 = x129 * x5 + x130
    x132 = -x93
    x133 = x132 + x94
    x134 = x4 * (x129 + x133 - x92)
    x135 = -x101 * x3 + 3 * x134
    x136 = x131 * x5 + x135
    x137 = x103 - x107
    x138 = x131 * x54 + x135
    x139 = -x120 + x137 + x138
    x140 = x98 - x99
    x141 = x4 * (x131 + x140 - x97)
    x142 = -x109 * x3 + x136 * x54 + 4 * x141
    x143 = -x117 * x3 + x123 * x139 + x142 * x54 + x4 * (-x102 + x136 + x137)
    x144 = x54 * x91
    x145 = x29 * x54
    x146 = x37 * (x105 + x144 - x145 + x95)
    x147 = x129 * x54 + x130
    x148 = x34 * x54
    x149 = x148 + x39
    x150 = x149 * x3
    x151 = x54 * x96
    x152 = x100 + x151
    x153 = x152 * x54
    x154 = x24 * x54
    x155 = -x121 * x3 + x138 * x54 + x141 + x81 * (x140 + x147 - x151)
    x156 = x81 * (x149 - x154 + x51)
    x157 = x119 + x63
    x158 = x157 * x54
    x159 = x54 * x57
    x160 = x3 * (x159 + x83)
    x161 = x81 * (x112 - x148 + x152)
    x162 = x121 * x54
    x163 = x157 * x3
    x164 = x113 + x161 + x162 - x163
    x165 = x111 + x118 + x124 - x87
    x166 = x79 - x82
    x167 = -x69
    x168 = x4 * (x44 - x72)
    x169 = x11 * boys(8, x10)
    x170 = -x6 - B[1]
    x171 = x12 * x170
    x172 = x13 * x7
    x173 = -x172
    x174 = x171 + x173
    x175 = x174 * x5
    x176 = x13 * x170
    x177 = x20 * x7
    x178 = -x177
    x179 = x176 + x178
    x180 = x179 * x3
    x181 = x175 - x180
    x182 = x181 * x5
    x183 = x170 * x26
    x184 = x12 * x7
    x185 = -x184
    x186 = x183 + x185
    x187 = x186 * x5
    x188 = x174 * x3
    x189 = -x188
    x190 = x187 + x189
    x191 = x190 * x5
    x192 = x4 * (-x171 + x172 + x186)
    x193 = x181 * x3
    x194 = x192 - x193
    x195 = x191 + x194
    x196 = x179 * x5
    x197 = x170 * x20
    x198 = x44 * x7
    x199 = -x198
    x200 = x197 + x199
    x201 = x200 * x3
    x202 = x196 - x201
    x203 = x202 * x3
    x204 = x4 * (x174 - x176 + x177)
    x205 = -x204
    x206 = x203 + x205
    x207 = x4 * (-x182 + x195 + x206)
    x208 = 3 * x207
    x209 = x195 * x5
    x210 = -x203 + x204
    x211 = x182 + x210
    x212 = x211 * x3
    x213 = x4 * (-x175 + x180 + x190)
    x214 = 2 * x213
    x215 = -x212 + x214
    x216 = x209 + x215
    x217 = x216 * x54
    x218 = x211 * x5
    x219 = x4 * (x179 - x197 + x198)
    x220 = x202 * x5
    x221 = x200 * x5
    x222 = x170 * x44
    x223 = x7 * x72
    x224 = -x223
    x225 = x222 + x224
    x226 = x225 * x3
    x227 = x221 - x226
    x228 = x227 * x3
    x229 = x219 + x220 - x228
    x230 = x229 * x3
    x231 = x37 * (x181 - x196 + x201)
    x232 = -x230 + x231
    x233 = x218 + x232
    x234 = x233 * x3
    x235 = x208 + x217 - x234
    x236 = x235 * x3
    x237 = x170 * x88
    x238 = x26 * x7
    x239 = -x238
    x240 = x237 + x239
    x241 = x240 * x5
    x242 = x186 * x3
    x243 = -x242
    x244 = x241 + x243
    x245 = x244 * x5
    x246 = x4 * (-x183 + x184 + x240)
    x247 = x190 * x3
    x248 = x246 - x247
    x249 = x245 + x248
    x250 = x249 * x5
    x251 = x195 * x3
    x252 = x4 * (-x187 + x188 + x244)
    x253 = 2 * x252
    x254 = -x251 + x253
    x255 = x250 + x254
    x256 = x212 - x214
    x257 = x4 * (-x209 + x255 + x256)
    x258 = -x192
    x259 = x193 + x258
    x260 = x4 * (-x191 + x249 + x259)
    x261 = 3 * x260
    x262 = x255 * x54
    x263 = x216 * x3
    x264 = x261 + x262 - x263
    x265 = x264 * x54
    x266 = x195 * x54
    x267 = x249 * x54
    x268 = x254 + x267
    x269 = x256 - x266 + x268
    x270 = x269 * x81
    x271 = -x7 * x88
    x272 = x125 * x170 + x271
    x273 = -x240 * x3
    x274 = x272 * x5 + x273
    x275 = x4 * (-x237 + x238 + x272)
    x276 = -x244 * x3 + x275
    x277 = x274 * x5 + x276
    x278 = x4 * (-x241 + x242 + x274)
    x279 = -x249 * x3 + 2 * x278
    x280 = x277 * x5 + x279
    x281 = x251 - x253
    x282 = x277 * x54 + x279
    x283 = -x267 + x281 + x282
    x284 = -x246
    x285 = x247 + x284
    x286 = x4 * (-x245 + x277 + x285)
    x287 = -x255 * x3 + x280 * x54 + 3 * x286
    x288 = -x264 * x3 + x283 * x81 + x287 * x54 + x4 * (-x250 + x280 + x281)
    x289 = x240 * x54
    x290 = x186 * x54
    x291 = x4 * (x188 + x243 + x289 - x290)
    x292 = x274 * x54 + x276
    x293 = x190 * x54
    x294 = x194 + x293
    x295 = x294 * x3
    x296 = x244 * x54
    x297 = x248 + x296
    x298 = x297 * x54
    x299 = x181 * x54
    x300 = -x268 * x3 + x282 * x54 + x286 + x37 * (x285 + x292 - x296)
    x301 = x37 * (x206 + x294 - x299)
    x302 = x215 + x266
    x303 = x302 * x54
    x304 = x211 * x54
    x305 = x3 * (x232 + x304)
    x306 = x37 * (x259 - x293 + x297)
    x307 = x268 * x54
    x308 = x3 * x302
    x309 = x260 + x306 + x307 - x308
    x310 = -x236 + x257 + x265 + x270
    x311 = x230 - x231
    x312 = -x219
    x313 = x4 * (x200 - x222 + x223)
    x314 = -x169 * x7
    x315 = x170 * x72 + x314
    x316 = -x8 - B[2]
    x317 = x12 * x316
    x318 = x13 * x9
    x319 = -x318
    x320 = x317 + x319
    x321 = x320 * x5
    x322 = x13 * x316
    x323 = x20 * x9
    x324 = -x323
    x325 = x322 + x324
    x326 = x3 * x325
    x327 = x321 - x326
    x328 = x327 * x5
    x329 = x26 * x316
    x330 = x12 * x9
    x331 = -x330
    x332 = x329 + x331
    x333 = x332 * x5
    x334 = x3 * x320
    x335 = -x334
    x336 = x333 + x335
    x337 = x336 * x5
    x338 = x4 * (-x317 + x318 + x332)
    x339 = x3 * x327
    x340 = x338 - x339
    x341 = x337 + x340
    x342 = x325 * x5
    x343 = x20 * x316
    x344 = x44 * x9
    x345 = -x344
    x346 = x343 + x345
    x347 = x3 * x346
    x348 = x342 - x347
    x349 = x3 * x348
    x350 = x4 * (x320 - x322 + x323)
    x351 = -x350
    x352 = x349 + x351
    x353 = x4 * (-x328 + x341 + x352)
    x354 = 3 * x353
    x355 = x341 * x5
    x356 = -x349 + x350
    x357 = x328 + x356
    x358 = x3 * x357
    x359 = x4 * (-x321 + x326 + x336)
    x360 = 2 * x359
    x361 = -x358 + x360
    x362 = x355 + x361
    x363 = x362 * x54
    x364 = x357 * x5
    x365 = x4 * (x325 - x343 + x344)
    x366 = x348 * x5
    x367 = x346 * x5
    x368 = x316 * x44
    x369 = x72 * x9
    x370 = -x369
    x371 = x368 + x370
    x372 = x3 * x371
    x373 = x367 - x372
    x374 = x3 * x373
    x375 = x365 + x366 - x374
    x376 = x3 * x375
    x377 = x37 * (x327 - x342 + x347)
    x378 = -x376 + x377
    x379 = x364 + x378
    x380 = x3 * x379
    x381 = x354 + x363 - x380
    x382 = x3 * x381
    x383 = x316 * x88
    x384 = x26 * x9
    x385 = -x384
    x386 = x383 + x385
    x387 = x386 * x5
    x388 = x3 * x332
    x389 = -x388
    x390 = x387 + x389
    x391 = x390 * x5
    x392 = x4 * (-x329 + x330 + x386)
    x393 = x3 * x336
    x394 = x392 - x393
    x395 = x391 + x394
    x396 = x395 * x5
    x397 = x3 * x341
    x398 = x4 * (-x333 + x334 + x390)
    x399 = 2 * x398
    x400 = -x397 + x399
    x401 = x396 + x400
    x402 = x358 - x360
    x403 = x4 * (-x355 + x401 + x402)
    x404 = -x338
    x405 = x339 + x404
    x406 = x4 * (-x337 + x395 + x405)
    x407 = 3 * x406
    x408 = x401 * x54
    x409 = x3 * x362
    x410 = x407 + x408 - x409
    x411 = x410 * x54
    x412 = x341 * x54
    x413 = x395 * x54
    x414 = x400 + x413
    x415 = x402 - x412 + x414
    x416 = x415 * x81
    x417 = -x88 * x9
    x418 = x125 * x316 + x417
    x419 = -x3 * x386
    x420 = x418 * x5 + x419
    x421 = x4 * (-x383 + x384 + x418)
    x422 = -x3 * x390 + x421
    x423 = x420 * x5 + x422
    x424 = x4 * (-x387 + x388 + x420)
    x425 = -x3 * x395 + 2 * x424
    x426 = x423 * x5 + x425
    x427 = x397 - x399
    x428 = x423 * x54 + x425
    x429 = -x413 + x427 + x428
    x430 = -x392
    x431 = x393 + x430
    x432 = x4 * (-x391 + x423 + x431)
    x433 = -x3 * x401 + x426 * x54 + 3 * x432
    x434 = -x3 * x410 + x4 * (-x396 + x426 + x427) + x429 * x81 + x433 * x54
    x435 = x386 * x54
    x436 = x332 * x54
    x437 = x4 * (x334 + x389 + x435 - x436)
    x438 = x420 * x54 + x422
    x439 = x336 * x54
    x440 = x340 + x439
    x441 = x3 * x440
    x442 = x390 * x54
    x443 = x394 + x442
    x444 = x443 * x54
    x445 = x327 * x54
    x446 = -x3 * x414 + x37 * (x431 + x438 - x442) + x428 * x54 + x432
    x447 = x37 * (x352 + x440 - x445)
    x448 = x361 + x412
    x449 = x448 * x54
    x450 = x357 * x54
    x451 = x3 * (x378 + x450)
    x452 = x37 * (x405 - x439 + x443)
    x453 = x414 * x54
    x454 = x3 * x448
    x455 = x406 + x452 + x453 - x454
    x456 = -x382 + x403 + x411 + x416
    x457 = x376 - x377
    x458 = -x365
    x459 = x4 * (x346 - x368 + x369)
    x460 = -x169 * x9
    x461 = x316 * x72 + x460
    x462 = x170 * x186
    x463 = x174 * x7
    x464 = x31 - x463
    x465 = x462 + x464
    x466 = x465 * x5
    x467 = x170 * x174
    x468 = x179 * x7
    x469 = x14 - x468
    x470 = x467 + x469
    x471 = x3 * x470
    x472 = -x471
    x473 = x466 + x472
    x474 = x473 * x54
    x475 = x170 * x240
    x476 = x186 * x7
    x477 = -x476 + x93
    x478 = x475 + x477
    x479 = x478 * x5
    x480 = x3 * x465
    x481 = -x480
    x482 = x479 + x481
    x483 = x482 * x54
    x484 = x104 + x463
    x485 = x4 * (-x462 + x478 + x484)
    x486 = x3 * x473
    x487 = x485 - x486
    x488 = x483 + x487
    x489 = x470 * x5
    x490 = x170 * x179
    x491 = x200 * x7
    x492 = x41 - x491
    x493 = x490 + x492
    x494 = x3 * x493
    x495 = -x494
    x496 = x489 + x495
    x497 = x3 * x496
    x498 = x468 + x59
    x499 = x4 * (x465 - x467 + x498)
    x500 = -x499
    x501 = x497 + x500
    x502 = x37 * (-x474 + x488 + x501)
    x503 = -x502
    x504 = x4 * (x473 - x489 + x494)
    x505 = 2 * x504
    x506 = x473 * x5
    x507 = -x497 + x499
    x508 = x506 + x507
    x509 = x508 * x54
    x510 = x496 * x5
    x511 = x491 + x80
    x512 = x4 * (x470 - x490 + x511)
    x513 = x493 * x5
    x514 = x170 * x200
    x515 = x225 * x7
    x516 = -x515 + x69
    x517 = x514 + x516
    x518 = x3 * x517
    x519 = x513 - x518
    x520 = x3 * x519
    x521 = x512 - x520
    x522 = x510 + x521
    x523 = x3 * x522
    x524 = x505 + x509 - x523
    x525 = x3 * x524
    x526 = x482 * x5
    x527 = x487 + x526
    x528 = x4 * (x501 - x506 + x527)
    x529 = x4 * (-x466 + x471 + x482)
    x530 = 2 * x529
    x531 = x527 * x54
    x532 = x3 * x508
    x533 = x530 + x531 - x532
    x534 = x533 * x54
    x535 = x127 - x240 * x7
    x536 = x170 * x272 + x535
    x537 = -x3 * x478
    x538 = x5 * x536 + x537
    x539 = x132 + x476
    x540 = x4 * (-x475 + x536 + x539)
    x541 = -x3 * x482 + x540
    x542 = x5 * x538 + x541
    x543 = -x485
    x544 = x486 + x543
    x545 = x538 * x54 + x541
    x546 = x37 * (-x483 + x544 + x545)
    x547 = x4 * (-x479 + x480 + x538)
    x548 = -x3 * x527 + x54 * x542 + 2 * x547
    x549 = -x3 * x533 + x4 * (-x526 + x542 + x544) + x54 * x548 + x546
    x550 = x536 * x54 + x537
    x551 = x465 * x54
    x552 = x472 + x551
    x553 = x3 * x552
    x554 = x478 * x54
    x555 = x481 + x554
    x556 = x54 * x555
    x557 = x470 * x54
    x558 = -x3 * x488 + x4 * (x480 + x550 - x554) + x54 * x545 + x547
    x559 = x4 * (x494 + x552 - x557)
    x560 = x474 + x507
    x561 = x54 * x560
    x562 = x496 * x54
    x563 = x3 * (x521 + x562)
    x564 = x4 * (x471 - x551 + x555)
    x565 = x488 * x54
    x566 = x3 * x560
    x567 = x529 + x564 + x565 - x566
    x568 = x502 - x525 + x528 + x534
    x569 = -x512
    x570 = x520 + x569
    x571 = x167 + x515
    x572 = x4 * (x493 - x514 + x571)
    x573 = x168 - x315 * x7
    x574 = x170 * x225 + x573
    x575 = x170 * x332
    x576 = x320 * x7
    x577 = -x576
    x578 = x575 + x577
    x579 = x5 * x578
    x580 = x170 * x320
    x581 = x325 * x7
    x582 = -x581
    x583 = x580 + x582
    x584 = x3 * x583
    x585 = -x584
    x586 = x579 + x585
    x587 = x54 * x586
    x588 = x170 * x386
    x589 = x332 * x7
    x590 = -x589
    x591 = x588 + x590
    x592 = x5 * x591
    x593 = x3 * x578
    x594 = -x593
    x595 = x592 + x594
    x596 = x54 * x595
    x597 = x4 * (-x575 + x576 + x591)
    x598 = x3 * x586
    x599 = x597 - x598
    x600 = x596 + x599
    x601 = x5 * x583
    x602 = x170 * x325
    x603 = x346 * x7
    x604 = -x603
    x605 = x602 + x604
    x606 = x3 * x605
    x607 = -x606
    x608 = x601 + x607
    x609 = x3 * x608
    x610 = x4 * (x578 - x580 + x581)
    x611 = -x610
    x612 = x609 + x611
    x613 = x37 * (-x587 + x600 + x612)
    x614 = -x613
    x615 = x4 * (x586 - x601 + x606)
    x616 = 2 * x615
    x617 = x5 * x586
    x618 = -x609 + x610
    x619 = x617 + x618
    x620 = x54 * x619
    x621 = x5 * x608
    x622 = x4 * (x583 - x602 + x603)
    x623 = x5 * x605
    x624 = x170 * x346
    x625 = x371 * x7
    x626 = -x625
    x627 = x624 + x626
    x628 = x3 * x627
    x629 = x623 - x628
    x630 = x3 * x629
    x631 = x622 - x630
    x632 = x621 + x631
    x633 = x3 * x632
    x634 = x616 + x620 - x633
    x635 = x3 * x634
    x636 = x5 * x595
    x637 = x599 + x636
    x638 = x4 * (x612 - x617 + x637)
    x639 = x4 * (-x579 + x584 + x595)
    x640 = 2 * x639
    x641 = x54 * x637
    x642 = x3 * x619
    x643 = x640 + x641 - x642
    x644 = x54 * x643
    x645 = -x386 * x7
    x646 = x170 * x418 + x645
    x647 = -x3 * x591
    x648 = x5 * x646 + x647
    x649 = x4 * (-x588 + x589 + x646)
    x650 = -x3 * x595 + x649
    x651 = x5 * x648 + x650
    x652 = -x597
    x653 = x598 + x652
    x654 = x54 * x648 + x650
    x655 = x37 * (-x596 + x653 + x654)
    x656 = x4 * (-x592 + x593 + x648)
    x657 = -x3 * x637 + x54 * x651 + 2 * x656
    x658 = -x3 * x643 + x4 * (-x636 + x651 + x653) + x54 * x657 + x655
    x659 = x54 * x646 + x647
    x660 = x54 * x578
    x661 = x585 + x660
    x662 = x3 * x661
    x663 = x54 * x591
    x664 = x594 + x663
    x665 = x54 * x664
    x666 = x54 * x583
    x667 = -x3 * x600 + x4 * (x593 + x659 - x663) + x54 * x654 + x656
    x668 = x4 * (x606 + x661 - x666)
    x669 = x587 + x618
    x670 = x54 * x669
    x671 = x54 * x608
    x672 = x3 * (x631 + x671)
    x673 = x4 * (x584 - x660 + x664)
    x674 = x54 * x600
    x675 = x3 * x669
    x676 = x639 + x673 + x674 - x675
    x677 = x613 - x635 + x638 + x644
    x678 = -x622
    x679 = x630 + x678
    x680 = x4 * (x605 - x624 + x625)
    x681 = -x461 * x7
    x682 = x170 * x371 + x681
    x683 = x316 * x332
    x684 = x320 * x9
    x685 = x31 - x684
    x686 = x683 + x685
    x687 = x5 * x686
    x688 = x316 * x320
    x689 = x325 * x9
    x690 = x14 - x689
    x691 = x688 + x690
    x692 = x3 * x691
    x693 = -x692
    x694 = x687 + x693
    x695 = x54 * x694
    x696 = x316 * x386
    x697 = x332 * x9
    x698 = -x697 + x93
    x699 = x696 + x698
    x700 = x5 * x699
    x701 = x3 * x686
    x702 = -x701
    x703 = x700 + x702
    x704 = x54 * x703
    x705 = x104 + x684
    x706 = x4 * (-x683 + x699 + x705)
    x707 = x3 * x694
    x708 = x706 - x707
    x709 = x704 + x708
    x710 = x5 * x691
    x711 = x316 * x325
    x712 = x346 * x9
    x713 = x41 - x712
    x714 = x711 + x713
    x715 = x3 * x714
    x716 = -x715
    x717 = x710 + x716
    x718 = x3 * x717
    x719 = x59 + x689
    x720 = x4 * (x686 - x688 + x719)
    x721 = -x720
    x722 = x718 + x721
    x723 = x37 * (-x695 + x709 + x722)
    x724 = -x723
    x725 = x4 * (x694 - x710 + x715)
    x726 = 2 * x725
    x727 = x5 * x694
    x728 = -x718 + x720
    x729 = x727 + x728
    x730 = x54 * x729
    x731 = x5 * x717
    x732 = x712 + x80
    x733 = x4 * (x691 - x711 + x732)
    x734 = x5 * x714
    x735 = x316 * x346
    x736 = x371 * x9
    x737 = x69 - x736
    x738 = x735 + x737
    x739 = x3 * x738
    x740 = x734 - x739
    x741 = x3 * x740
    x742 = x733 - x741
    x743 = x731 + x742
    x744 = x3 * x743
    x745 = x726 + x730 - x744
    x746 = x3 * x745
    x747 = x5 * x703
    x748 = x708 + x747
    x749 = x4 * (x722 - x727 + x748)
    x750 = x4 * (-x687 + x692 + x703)
    x751 = 2 * x750
    x752 = x54 * x748
    x753 = x3 * x729
    x754 = x751 + x752 - x753
    x755 = x54 * x754
    x756 = x127 - x386 * x9
    x757 = x316 * x418 + x756
    x758 = -x3 * x699
    x759 = x5 * x757 + x758
    x760 = x132 + x697
    x761 = x4 * (-x696 + x757 + x760)
    x762 = -x3 * x703 + x761
    x763 = x5 * x759 + x762
    x764 = -x706
    x765 = x707 + x764
    x766 = x54 * x759 + x762
    x767 = x37 * (-x704 + x765 + x766)
    x768 = x4 * (-x700 + x701 + x759)
    x769 = -x3 * x748 + x54 * x763 + 2 * x768
    x770 = -x3 * x754 + x4 * (-x747 + x763 + x765) + x54 * x769 + x767
    x771 = x54 * x757 + x758
    x772 = x54 * x686
    x773 = x693 + x772
    x774 = x3 * x773
    x775 = x54 * x699
    x776 = x702 + x775
    x777 = x54 * x776
    x778 = x54 * x691
    x779 = -x3 * x709 + x4 * (x701 + x771 - x775) + x54 * x766 + x768
    x780 = x4 * (x715 + x773 - x778)
    x781 = x695 + x728
    x782 = x54 * x781
    x783 = x54 * x717
    x784 = x3 * (x742 + x783)
    x785 = x4 * (x692 - x772 + x776)
    x786 = x54 * x709
    x787 = x3 * x781
    x788 = x750 + x785 + x786 - x787
    x789 = x723 - x746 + x749 + x755
    x790 = -x733
    x791 = x741 + x790
    x792 = x167 + x736
    x793 = x4 * (x714 - x735 + x792)
    x794 = x168 - x461 * x9
    x795 = x316 * x371 + x794
    x796 = x170 * x465
    x797 = x470 * x7
    x798 = 2 * x192
    x799 = -x797 + x798
    x800 = x796 + x799
    x801 = x3 * x800
    x802 = x170 * x478
    x803 = x465 * x7
    x804 = 2 * x246
    x805 = -x803 + x804
    x806 = x802 + x805
    x807 = x54 * x806
    x808 = 2 * x275 - x478 * x7
    x809 = x170 * x536 + x808
    x810 = -x3 * x806
    x811 = x54 * x809 + x810
    x812 = x4 * (x801 - x807 + x811)
    x813 = x170 * x470
    x814 = x493 * x7
    x815 = 2 * x204
    x816 = -x814 + x815
    x817 = x813 + x816
    x818 = x3 * x817
    x819 = x54 * x800
    x820 = -x801
    x821 = x807 + x820
    x822 = x4 * (x818 - x819 + x821)
    x823 = x803 - x804
    x824 = x4 * (-x802 + x809 + x823)
    x825 = -x3 * x821 + x54 * x811 + x824
    x826 = x814 - x815
    x827 = x4 * (x800 - x813 + x826)
    x828 = -x818
    x829 = x819 + x828
    x830 = x54 * x829
    x831 = x54 * x817
    x832 = x170 * x493
    x833 = x517 * x7
    x834 = 2 * x219
    x835 = -x833 + x834
    x836 = x832 + x835
    x837 = x3 * x836
    x838 = -x837
    x839 = x3 * (x831 + x838)
    x840 = x797 - x798
    x841 = x4 * (-x796 + x806 + x840)
    x842 = x54 * x821
    x843 = x3 * x829
    x844 = x841 + x842 - x843
    x845 = x5 * x800
    x846 = x828 + x845
    x847 = x54 * x846
    x848 = x5 * x817
    x849 = x838 + x848
    x850 = x3 * x849
    x851 = x827 + x847 - x850
    x852 = x3 * x851
    x853 = x5 * x806
    x854 = x820 + x853
    x855 = x4 * (x818 - x845 + x854)
    x856 = x54 * x854
    x857 = x3 * x846
    x858 = x841 + x856 - x857
    x859 = x54 * x858
    x860 = x5 * x809 + x810
    x861 = -x3 * x854 + x54 * x860 + x824
    x862 = -x3 * x858 + x4 * (x801 - x853 + x860) + x54 * x861 + x812
    x863 = -x841
    x864 = x822 - x852 + x855 + x859
    x865 = -x827
    x866 = x833 - x834
    x867 = x4 * (x817 - x832 + x866)
    x868 = 2 * x313 - x574 * x7
    x869 = x170 * x517 + x868
    x870 = x170 * x578
    x871 = x583 * x7
    x872 = x338 - x871
    x873 = x870 + x872
    x874 = x3 * x873
    x875 = x170 * x591
    x876 = x578 * x7
    x877 = x392 - x876
    x878 = x875 + x877
    x879 = x54 * x878
    x880 = x421 - x591 * x7
    x881 = x170 * x646 + x880
    x882 = -x3 * x878
    x883 = x54 * x881 + x882
    x884 = x4 * (x874 - x879 + x883)
    x885 = x170 * x583
    x886 = x605 * x7
    x887 = x350 - x886
    x888 = x885 + x887
    x889 = x3 * x888
    x890 = x54 * x873
    x891 = -x874
    x892 = x879 + x891
    x893 = x4 * (x889 - x890 + x892)
    x894 = x430 + x876
    x895 = x4 * (-x875 + x881 + x894)
    x896 = -x3 * x892 + x54 * x883 + x895
    x897 = x351 + x886
    x898 = x4 * (x873 - x885 + x897)
    x899 = -x889
    x900 = x890 + x899
    x901 = x54 * x900
    x902 = x54 * x888
    x903 = x170 * x605
    x904 = x627 * x7
    x905 = x365 - x904
    x906 = x903 + x905
    x907 = x3 * x906
    x908 = -x907
    x909 = x3 * (x902 + x908)
    x910 = x404 + x871
    x911 = x4 * (-x870 + x878 + x910)
    x912 = x54 * x892
    x913 = x3 * x900
    x914 = x911 + x912 - x913
    x915 = x5 * x873
    x916 = x899 + x915
    x917 = x54 * x916
    x918 = x5 * x888
    x919 = x908 + x918
    x920 = x3 * x919
    x921 = x898 + x917 - x920
    x922 = x3 * x921
    x923 = x5 * x878
    x924 = x891 + x923
    x925 = x4 * (x889 - x915 + x924)
    x926 = x54 * x924
    x927 = x3 * x916
    x928 = x911 + x926 - x927
    x929 = x54 * x928
    x930 = x5 * x881 + x882
    x931 = -x3 * x924 + x54 * x930 + x895
    x932 = -x3 * x928 + x4 * (x874 - x923 + x930) + x54 * x931 + x884
    x933 = -x911
    x934 = x893 - x922 + x925 + x929
    x935 = -x898
    x936 = x458 + x904
    x937 = x4 * (x888 - x903 + x936)
    x938 = x459 - x682 * x7
    x939 = x170 * x627 + x938
    x940 = x170 * x686
    x941 = x691 * x7
    x942 = -x941
    x943 = x940 + x942
    x944 = x3 * x943
    x945 = x170 * x699
    x946 = x686 * x7
    x947 = -x946
    x948 = x945 + x947
    x949 = x54 * x948
    x950 = -x699 * x7
    x951 = x170 * x757 + x950
    x952 = -x3 * x948
    x953 = x54 * x951 + x952
    x954 = x4 * (x944 - x949 + x953)
    x955 = x170 * x691
    x956 = x7 * x714
    x957 = -x956
    x958 = x955 + x957
    x959 = x3 * x958
    x960 = x54 * x943
    x961 = -x944
    x962 = x949 + x961
    x963 = x4 * (x959 - x960 + x962)
    x964 = x4 * (-x945 + x946 + x951)
    x965 = -x3 * x962 + x54 * x953 + x964
    x966 = x4 * (x943 - x955 + x956)
    x967 = -x959
    x968 = x960 + x967
    x969 = x54 * x968
    x970 = x54 * x958
    x971 = x170 * x714
    x972 = x7 * x738
    x973 = -x972
    x974 = x971 + x973
    x975 = x3 * x974
    x976 = -x975
    x977 = x3 * (x970 + x976)
    x978 = x4 * (-x940 + x941 + x948)
    x979 = x54 * x962
    x980 = x3 * x968
    x981 = x978 + x979 - x980
    x982 = x5 * x943
    x983 = x967 + x982
    x984 = x54 * x983
    x985 = x5 * x958
    x986 = x976 + x985
    x987 = x3 * x986
    x988 = x966 + x984 - x987
    x989 = x3 * x988
    x990 = x5 * x948
    x991 = x961 + x990
    x992 = x4 * (x959 - x982 + x991)
    x993 = x54 * x991
    x994 = x3 * x983
    x995 = x978 + x993 - x994
    x996 = x54 * x995
    x997 = x5 * x951 + x952
    x998 = -x3 * x991 + x54 * x997 + x964
    x999 = -x3 * x995 + x4 * (x944 - x990 + x997) + x54 * x998 + x954
    x1000 = -x978
    x1001 = x963 - x989 + x992 + x996
    x1002 = -x966
    x1003 = x4 * (x958 - x971 + x972)
    x1004 = -x7 * x795
    x1005 = x1004 + x170 * x738
    x1006 = x316 * x686
    x1007 = x691 * x9
    x1008 = 2 * x338
    x1009 = -x1007 + x1008
    x1010 = x1006 + x1009
    x1011 = x1010 * x3
    x1012 = x316 * x699
    x1013 = x686 * x9
    x1014 = 2 * x392
    x1015 = -x1013 + x1014
    x1016 = x1012 + x1015
    x1017 = x1016 * x54
    x1018 = 2 * x421 - x699 * x9
    x1019 = x1018 + x316 * x757
    x1020 = -x1016 * x3
    x1021 = x1019 * x54 + x1020
    x1022 = x4 * (x1011 - x1017 + x1021)
    x1023 = x316 * x691
    x1024 = x714 * x9
    x1025 = 2 * x350
    x1026 = -x1024 + x1025
    x1027 = x1023 + x1026
    x1028 = x1027 * x3
    x1029 = x1010 * x54
    x1030 = -x1011
    x1031 = x1017 + x1030
    x1032 = x4 * (x1028 - x1029 + x1031)
    x1033 = x1013 - x1014
    x1034 = x4 * (-x1012 + x1019 + x1033)
    x1035 = x1021 * x54 - x1031 * x3 + x1034
    x1036 = x1024 - x1025
    x1037 = x4 * (x1010 - x1023 + x1036)
    x1038 = -x1028
    x1039 = x1029 + x1038
    x1040 = x1039 * x54
    x1041 = x1027 * x54
    x1042 = x316 * x714
    x1043 = x738 * x9
    x1044 = 2 * x365
    x1045 = -x1043 + x1044
    x1046 = x1042 + x1045
    x1047 = x1046 * x3
    x1048 = -x1047
    x1049 = x3 * (x1041 + x1048)
    x1050 = x1007 - x1008
    x1051 = x4 * (-x1006 + x1016 + x1050)
    x1052 = x1031 * x54
    x1053 = x1039 * x3
    x1054 = x1051 + x1052 - x1053
    x1055 = x1010 * x5
    x1056 = x1038 + x1055
    x1057 = x1056 * x54
    x1058 = x1027 * x5
    x1059 = x1048 + x1058
    x1060 = x1059 * x3
    x1061 = x1037 + x1057 - x1060
    x1062 = x1061 * x3
    x1063 = x1016 * x5
    x1064 = x1030 + x1063
    x1065 = x4 * (x1028 - x1055 + x1064)
    x1066 = x1064 * x54
    x1067 = x1056 * x3
    x1068 = x1051 + x1066 - x1067
    x1069 = x1068 * x54
    x1070 = x1019 * x5 + x1020
    x1071 = x1034 - x1064 * x3 + x1070 * x54
    x1072 = x1022 - x1068 * x3 + x1071 * x54 + x4 * (x1011 - x1063 + x1070)
    x1073 = -x1051
    x1074 = x1032 - x1062 + x1065 + x1069
    x1075 = -x1037
    x1076 = x1043 - x1044
    x1077 = x4 * (x1027 - x1042 + x1076)
    x1078 = 2 * x459 - x795 * x9
    x1079 = x1078 + x316 * x738
    x1080 = x170 * x800
    x1081 = x7 * x817
    x1082 = 3 * x499
    x1083 = -x1081 + x1082
    x1084 = x1080 + x1083
    x1085 = x1084 * x54
    x1086 = x170 * x817
    x1087 = x7 * x836
    x1088 = 3 * x512
    x1089 = -x1087 + x1088
    x1090 = x1086 + x1089
    x1091 = x1090 * x3
    x1092 = x1085 - x1091
    x1093 = x1092 * x3
    x1094 = x170 * x806
    x1095 = x7 * x800
    x1096 = 3 * x485
    x1097 = -x1095 + x1096
    x1098 = x1094 + x1097
    x1099 = x1081 - x1082
    x1100 = x4 * (-x1080 + x1098 + x1099)
    x1101 = -x1100
    x1102 = x1098 * x54
    x1103 = x1084 * x3
    x1104 = x1102 - x1103
    x1105 = x1104 * x54
    x1106 = 3 * x540 - x7 * x806
    x1107 = x1106 + x170 * x809
    x1108 = x1095 - x1096
    x1109 = x4 * (-x1094 + x1107 + x1108)
    x1110 = -x1098 * x3 + x1107 * x54
    x1111 = -x1104 * x3 + x1109 + x1110 * x54
    x1112 = -x1093 + x1100 + x1105
    x1113 = x1087 - x1088
    x1114 = x4 * (x1084 - x1086 + x1113)
    x1115 = 3 * x572 - x7 * x869
    x1116 = x1115 + x170 * x836
    x1117 = x170 * x873
    x1118 = x7 * x888
    x1119 = 2 * x610
    x1120 = -x1118 + x1119
    x1121 = x1117 + x1120
    x1122 = x1121 * x54
    x1123 = x170 * x888
    x1124 = x7 * x906
    x1125 = 2 * x622
    x1126 = -x1124 + x1125
    x1127 = x1123 + x1126
    x1128 = x1127 * x3
    x1129 = x1122 - x1128
    x1130 = x1129 * x3
    x1131 = x170 * x878
    x1132 = x7 * x873
    x1133 = 2 * x597
    x1134 = -x1132 + x1133
    x1135 = x1131 + x1134
    x1136 = x1118 - x1119
    x1137 = x4 * (-x1117 + x1135 + x1136)
    x1138 = -x1137
    x1139 = x1135 * x54
    x1140 = x1121 * x3
    x1141 = x1139 - x1140
    x1142 = x1141 * x54
    x1143 = 2 * x649 - x7 * x878
    x1144 = x1143 + x170 * x881
    x1145 = x1132 - x1133
    x1146 = x4 * (-x1131 + x1144 + x1145)
    x1147 = -x1135 * x3 + x1144 * x54
    x1148 = -x1141 * x3 + x1146 + x1147 * x54
    x1149 = -x1130 + x1137 + x1142
    x1150 = x1124 - x1125
    x1151 = x4 * (x1121 - x1123 + x1150)
    x1152 = 2 * x680 - x7 * x939
    x1153 = x1152 + x170 * x906
    x1154 = x170 * x943
    x1155 = x7 * x958
    x1156 = -x1155 + x720
    x1157 = x1154 + x1156
    x1158 = x1157 * x54
    x1159 = x170 * x958
    x1160 = x7 * x974
    x1161 = -x1160 + x733
    x1162 = x1159 + x1161
    x1163 = x1162 * x3
    x1164 = x1158 - x1163
    x1165 = x1164 * x3
    x1166 = x170 * x948
    x1167 = x7 * x943
    x1168 = -x1167 + x706
    x1169 = x1166 + x1168
    x1170 = x1155 + x721
    x1171 = x4 * (-x1154 + x1169 + x1170)
    x1172 = -x1171
    x1173 = x1169 * x54
    x1174 = x1157 * x3
    x1175 = x1173 - x1174
    x1176 = x1175 * x54
    x1177 = -x7 * x948 + x761
    x1178 = x1177 + x170 * x951
    x1179 = x1167 + x764
    x1180 = x4 * (-x1166 + x1178 + x1179)
    x1181 = -x1169 * x3 + x1178 * x54
    x1182 = -x1175 * x3 + x1180 + x1181 * x54
    x1183 = -x1165 + x1171 + x1176
    x1184 = x1160 + x790
    x1185 = x4 * (x1157 - x1159 + x1184)
    x1186 = -x1005 * x7 + x793
    x1187 = x1186 + x170 * x974
    x1188 = x1010 * x170
    x1189 = x1027 * x7
    x1190 = -x1189
    x1191 = x1188 + x1190
    x1192 = x1191 * x54
    x1193 = x1027 * x170
    x1194 = x1046 * x7
    x1195 = -x1194
    x1196 = x1193 + x1195
    x1197 = x1196 * x3
    x1198 = x1192 - x1197
    x1199 = x1198 * x3
    x1200 = x1016 * x170
    x1201 = x1010 * x7
    x1202 = -x1201
    x1203 = x1200 + x1202
    x1204 = x4 * (-x1188 + x1189 + x1203)
    x1205 = -x1204
    x1206 = x1203 * x54
    x1207 = x1191 * x3
    x1208 = x1206 - x1207
    x1209 = x1208 * x54
    x1210 = -x1016 * x7
    x1211 = x1019 * x170 + x1210
    x1212 = x4 * (-x1200 + x1201 + x1211)
    x1213 = -x1203 * x3 + x1211 * x54
    x1214 = -x1208 * x3 + x1212 + x1213 * x54
    x1215 = -x1199 + x1204 + x1209
    x1216 = x4 * (x1191 - x1193 + x1194)
    x1217 = -x1079 * x7
    x1218 = x1046 * x170 + x1217
    x1219 = x1010 * x316
    x1220 = x1027 * x9
    x1221 = 3 * x720
    x1222 = -x1220 + x1221
    x1223 = x1219 + x1222
    x1224 = x1223 * x54
    x1225 = x1027 * x316
    x1226 = x1046 * x9
    x1227 = 3 * x733
    x1228 = -x1226 + x1227
    x1229 = x1225 + x1228
    x1230 = x1229 * x3
    x1231 = x1224 - x1230
    x1232 = x1231 * x3
    x1233 = x1016 * x316
    x1234 = x1010 * x9
    x1235 = 3 * x706
    x1236 = -x1234 + x1235
    x1237 = x1233 + x1236
    x1238 = x1220 - x1221
    x1239 = x4 * (-x1219 + x1237 + x1238)
    x1240 = -x1239
    x1241 = x1237 * x54
    x1242 = x1223 * x3
    x1243 = x1241 - x1242
    x1244 = x1243 * x54
    x1245 = -x1016 * x9 + 3 * x761
    x1246 = x1019 * x316 + x1245
    x1247 = x1234 - x1235
    x1248 = x4 * (-x1233 + x1246 + x1247)
    x1249 = -x1237 * x3 + x1246 * x54
    x1250 = -x1243 * x3 + x1248 + x1249 * x54
    x1251 = -x1232 + x1239 + x1244
    x1252 = x1226 - x1227
    x1253 = x4 * (x1223 - x1225 + x1252)
    x1254 = -x1079 * x9 + 3 * x793
    x1255 = x1046 * x316 + x1254
    x1256 = -x6 - A[1]
    x1257 = x1256 * x13
    x1258 = x1257 + x178
    x1259 = x1258 * x3
    x1260 = x12 * x1256
    x1261 = x1260 + x173
    x1262 = x1261 * x5
    x1263 = x1256 * x26
    x1264 = x1263 + x185
    x1265 = x1264 * x5
    x1266 = x1261 * x3
    x1267 = x1265 - x1266
    x1268 = x37 * (x1259 - x1262 + x1267)
    x1269 = x4 * (-x1260 + x1264 + x172)
    x1270 = x1267 * x5
    x1271 = -x1259 + x1262
    x1272 = x1271 * x3
    x1273 = x1269 + x1270 - x1272
    x1274 = x1273 * x5
    x1275 = x4 * (-x1257 + x1261 + x177)
    x1276 = x1271 * x5
    x1277 = x1258 * x5
    x1278 = x1256 * x20
    x1279 = x1278 + x199
    x1280 = x1279 * x3
    x1281 = x1277 - x1280
    x1282 = x1281 * x3
    x1283 = x1275 + x1276 - x1282
    x1284 = x1283 * x3
    x1285 = x1268 + x1274 - x1284
    x1286 = x1285 * x5
    x1287 = x37 * (x1271 - x1277 + x1280)
    x1288 = x1283 * x5
    x1289 = x4 * (x1258 - x1278 + x198)
    x1290 = x1281 * x5
    x1291 = x1279 * x5
    x1292 = x1256 * x44
    x1293 = x1292 + x224
    x1294 = x1293 * x3
    x1295 = x1291 - x1294
    x1296 = x1295 * x3
    x1297 = x1289 + x1290 - x1296
    x1298 = x1297 * x3
    x1299 = x1287 + x1288 - x1298
    x1300 = x1299 * x3
    x1301 = -x1275
    x1302 = x81 * (x1273 - x1276 + x1282 + x1301)
    x1303 = -x1300 + x1302
    x1304 = x1286 + x1303
    x1305 = x1304 * x3
    x1306 = x1256 * x88
    x1307 = x1306 + x239
    x1308 = x4 * (-x1263 + x1307 + x184)
    x1309 = x1307 * x5
    x1310 = x1264 * x3
    x1311 = x1309 - x1310
    x1312 = x1311 * x5
    x1313 = x1267 * x3
    x1314 = x1308 + x1312 - x1313
    x1315 = x1314 * x5
    x1316 = x1273 * x3
    x1317 = x37 * (-x1265 + x1266 + x1311)
    x1318 = -x1316 + x1317
    x1319 = x1315 + x1318
    x1320 = x1319 * x5
    x1321 = x1285 * x3
    x1322 = -x1269
    x1323 = x81 * (-x1270 + x1272 + x1314 + x1322)
    x1324 = -x1321 + x1323
    x1325 = x1320 + x1324
    x1326 = x1325 * x54
    x1327 = -x1268 + x1284
    x1328 = x4 * (-x1274 + x1319 + x1327)
    x1329 = 4 * x1328
    x1330 = x125 * x1256 + x271
    x1331 = x4 * (-x1306 + x1330 + x238)
    x1332 = -x1307 * x3 + x1330 * x5
    x1333 = -x1311 * x3 + x1331 + x1332 * x5
    x1334 = -x1314 * x3 + x37 * (-x1309 + x1310 + x1332)
    x1335 = x1333 * x5 + x1334
    x1336 = x1316 - x1317
    x1337 = x4 * (-x1315 + x1335 + x1336)
    x1338 = -x1308
    x1339 = -x1319 * x3 + x81 * (-x1312 + x1313 + x1333 + x1338)
    x1340 = x1335 * x5 + x1339
    x1341 = -x1325 * x3 + 4 * x1337 + x1340 * x54
    x1342 = x1314 * x54
    x1343 = x1335 * x54 + x1339
    x1344 = x1285 * x54
    x1345 = x1319 * x54
    x1346 = x1324 + x1345
    x1347 = x1321 - x1323
    x1348 = -x1305 + x1326 + x1329
    x1349 = x1300 - x1302
    x1350 = -x1289
    x1351 = x4 * (x1279 - x1292 + x223)
    x1352 = x1256 * x72 + x314
    x1353 = x1256 * x174
    x1354 = x1256 * x186
    x1355 = x1354 + x464
    x1356 = x4 * (-x1353 + x1355 + x498)
    x1357 = x1355 * x5
    x1358 = x1353 + x469
    x1359 = x1358 * x3
    x1360 = x1357 - x1359
    x1361 = x1360 * x5
    x1362 = x1358 * x5
    x1363 = x1256 * x179
    x1364 = x1363 + x492
    x1365 = x1364 * x3
    x1366 = x1362 - x1365
    x1367 = x1366 * x3
    x1368 = x1356 + x1361 - x1367
    x1369 = x1368 * x5
    x1370 = x4 * (x1358 - x1363 + x511)
    x1371 = x1366 * x5
    x1372 = x1364 * x5
    x1373 = x1256 * x200
    x1374 = x1373 + x516
    x1375 = x1374 * x3
    x1376 = x1372 - x1375
    x1377 = x1376 * x3
    x1378 = x1370 + x1371 - x1377
    x1379 = x1378 * x3
    x1380 = x37 * (x1360 - x1362 + x1365)
    x1381 = -x1379 + x1380
    x1382 = x1369 + x1381
    x1383 = x1382 * x3
    x1384 = x1256 * x240
    x1385 = x1384 + x477
    x1386 = x1385 * x5
    x1387 = x1355 * x3
    x1388 = x1386 - x1387
    x1389 = x1388 * x5
    x1390 = x4 * (-x1354 + x1385 + x484)
    x1391 = x1360 * x3
    x1392 = x1390 - x1391
    x1393 = x1389 + x1392
    x1394 = x1393 * x5
    x1395 = x1368 * x3
    x1396 = x37 * (-x1357 + x1359 + x1388)
    x1397 = -x1395 + x1396
    x1398 = x1394 + x1397
    x1399 = x1398 * x54
    x1400 = -x1356 + x1367
    x1401 = x4 * (-x1361 + x1393 + x1400)
    x1402 = 3 * x1401
    x1403 = x1256 * x272 + x535
    x1404 = -x1385 * x3 + x1403 * x5
    x1405 = x4 * (-x1384 + x1403 + x539)
    x1406 = -x1388 * x3 + x1405
    x1407 = x1404 * x5 + x1406
    x1408 = -x1390 + x1391
    x1409 = x4 * (-x1389 + x1407 + x1408)
    x1410 = -x1393 * x3 + x37 * (-x1386 + x1387 + x1404)
    x1411 = x1407 * x5 + x1410
    x1412 = -x1398 * x3 + 3 * x1409 + x1411 * x54
    x1413 = x1388 * x54
    x1414 = x1407 * x54 + x1410
    x1415 = x1368 * x54
    x1416 = x1393 * x54
    x1417 = x1397 + x1416
    x1418 = x1395 - x1396
    x1419 = -x1383 + x1399 + x1402
    x1420 = x1379 - x1380
    x1421 = x4 * (x1364 - x1373 + x571)
    x1422 = x1256 * x225 + x573
    x1423 = x1256 * x320
    x1424 = x1256 * x332
    x1425 = x1424 + x577
    x1426 = x4 * (-x1423 + x1425 + x581)
    x1427 = x1425 * x5
    x1428 = x1423 + x582
    x1429 = x1428 * x3
    x1430 = x1427 - x1429
    x1431 = x1430 * x5
    x1432 = x1428 * x5
    x1433 = x1256 * x325
    x1434 = x1433 + x604
    x1435 = x1434 * x3
    x1436 = x1432 - x1435
    x1437 = x1436 * x3
    x1438 = x1426 + x1431 - x1437
    x1439 = x1438 * x5
    x1440 = x4 * (x1428 - x1433 + x603)
    x1441 = x1436 * x5
    x1442 = x1434 * x5
    x1443 = x1256 * x346
    x1444 = x1443 + x626
    x1445 = x1444 * x3
    x1446 = x1442 - x1445
    x1447 = x1446 * x3
    x1448 = x1440 + x1441 - x1447
    x1449 = x1448 * x3
    x1450 = x37 * (x1430 - x1432 + x1435)
    x1451 = -x1449 + x1450
    x1452 = x1439 + x1451
    x1453 = x1452 * x3
    x1454 = x1256 * x386
    x1455 = x1454 + x590
    x1456 = x1455 * x5
    x1457 = x1425 * x3
    x1458 = x1456 - x1457
    x1459 = x1458 * x5
    x1460 = x4 * (-x1424 + x1455 + x576)
    x1461 = x1430 * x3
    x1462 = x1460 - x1461
    x1463 = x1459 + x1462
    x1464 = x1463 * x5
    x1465 = x1438 * x3
    x1466 = x37 * (-x1427 + x1429 + x1458)
    x1467 = -x1465 + x1466
    x1468 = x1464 + x1467
    x1469 = x1468 * x54
    x1470 = -x1426
    x1471 = x1437 + x1470
    x1472 = x4 * (-x1431 + x1463 + x1471)
    x1473 = 3 * x1472
    x1474 = x1256 * x418 + x645
    x1475 = -x1455 * x3 + x1474 * x5
    x1476 = x4 * (-x1454 + x1474 + x589)
    x1477 = -x1458 * x3 + x1476
    x1478 = x1475 * x5 + x1477
    x1479 = -x1460
    x1480 = x1461 + x1479
    x1481 = x4 * (-x1459 + x1478 + x1480)
    x1482 = -x1463 * x3 + x37 * (-x1456 + x1457 + x1475)
    x1483 = x1478 * x5 + x1482
    x1484 = -x1468 * x3 + 3 * x1481 + x1483 * x54
    x1485 = x1458 * x54
    x1486 = x1478 * x54 + x1482
    x1487 = x1438 * x54
    x1488 = x1463 * x54
    x1489 = x1467 + x1488
    x1490 = x1465 - x1466
    x1491 = -x1453 + x1469 + x1473
    x1492 = x1449 - x1450
    x1493 = -x1440
    x1494 = x4 * (x1434 - x1443 + x625)
    x1495 = x1256 * x371 + x681
    x1496 = x1256 * x465
    x1497 = x1496 + x799
    x1498 = x1497 * x5
    x1499 = x1256 * x470
    x1500 = x1499 + x816
    x1501 = x1500 * x3
    x1502 = x1498 - x1501
    x1503 = x1502 * x5
    x1504 = x4 * (x1497 - x1499 + x826)
    x1505 = x1500 * x5
    x1506 = x1256 * x493
    x1507 = x1506 + x835
    x1508 = x1507 * x3
    x1509 = x1505 - x1508
    x1510 = x1509 * x3
    x1511 = x1504 - x1510
    x1512 = x1503 + x1511
    x1513 = x1512 * x3
    x1514 = x1256 * x478
    x1515 = x1514 + x805
    x1516 = x1515 * x5
    x1517 = x1497 * x3
    x1518 = -x1517
    x1519 = x1516 + x1518
    x1520 = x1519 * x5
    x1521 = x4 * (-x1496 + x1515 + x840)
    x1522 = x1502 * x3
    x1523 = x1521 - x1522
    x1524 = x1520 + x1523
    x1525 = x1524 * x54
    x1526 = x4 * (-x1498 + x1501 + x1519)
    x1527 = 2 * x1526
    x1528 = x1256 * x536 + x808
    x1529 = -x1515 * x3
    x1530 = x1528 * x5 + x1529
    x1531 = x4 * (-x1516 + x1517 + x1530)
    x1532 = x4 * (-x1514 + x1528 + x823)
    x1533 = -x1519 * x3 + x1532
    x1534 = x1530 * x5 + x1533
    x1535 = -x1524 * x3 + 2 * x1531 + x1534 * x54
    x1536 = x1515 * x54
    x1537 = x1530 * x54 + x1533
    x1538 = x1502 * x54
    x1539 = x1519 * x54
    x1540 = x1523 + x1539
    x1541 = -x1521 + x1522
    x1542 = -x1513 + x1525 + x1527
    x1543 = -x1504 + x1510
    x1544 = x4 * (x1500 - x1506 + x866)
    x1545 = x1256 * x517 + x868
    x1546 = x1256 * x578
    x1547 = x1546 + x872
    x1548 = x1547 * x5
    x1549 = x1256 * x583
    x1550 = x1549 + x887
    x1551 = x1550 * x3
    x1552 = x1548 - x1551
    x1553 = x1552 * x5
    x1554 = x4 * (x1547 - x1549 + x897)
    x1555 = x1550 * x5
    x1556 = x1256 * x605
    x1557 = x1556 + x905
    x1558 = x1557 * x3
    x1559 = x1555 - x1558
    x1560 = x1559 * x3
    x1561 = x1554 - x1560
    x1562 = x1553 + x1561
    x1563 = x1562 * x3
    x1564 = x1256 * x591
    x1565 = x1564 + x877
    x1566 = x1565 * x5
    x1567 = x1547 * x3
    x1568 = -x1567
    x1569 = x1566 + x1568
    x1570 = x1569 * x5
    x1571 = x4 * (-x1546 + x1565 + x910)
    x1572 = x1552 * x3
    x1573 = x1571 - x1572
    x1574 = x1570 + x1573
    x1575 = x1574 * x54
    x1576 = x4 * (-x1548 + x1551 + x1569)
    x1577 = 2 * x1576
    x1578 = x1256 * x646 + x880
    x1579 = -x1565 * x3
    x1580 = x1578 * x5 + x1579
    x1581 = x4 * (-x1566 + x1567 + x1580)
    x1582 = x4 * (-x1564 + x1578 + x894)
    x1583 = -x1569 * x3 + x1582
    x1584 = x1580 * x5 + x1583
    x1585 = -x1574 * x3 + 2 * x1581 + x1584 * x54
    x1586 = x1565 * x54
    x1587 = x1580 * x54 + x1583
    x1588 = x1552 * x54
    x1589 = x1569 * x54
    x1590 = x1573 + x1589
    x1591 = -x1571 + x1572
    x1592 = -x1563 + x1575 + x1577
    x1593 = -x1554 + x1560
    x1594 = x4 * (x1550 - x1556 + x936)
    x1595 = x1256 * x627 + x938
    x1596 = x1256 * x686
    x1597 = x1596 + x942
    x1598 = x1597 * x5
    x1599 = x1256 * x691
    x1600 = x1599 + x957
    x1601 = x1600 * x3
    x1602 = x1598 - x1601
    x1603 = x1602 * x5
    x1604 = x4 * (x1597 - x1599 + x956)
    x1605 = x1600 * x5
    x1606 = x1256 * x714
    x1607 = x1606 + x973
    x1608 = x1607 * x3
    x1609 = x1605 - x1608
    x1610 = x1609 * x3
    x1611 = x1604 - x1610
    x1612 = x1603 + x1611
    x1613 = x1612 * x3
    x1614 = x1256 * x699
    x1615 = x1614 + x947
    x1616 = x1615 * x5
    x1617 = x1597 * x3
    x1618 = -x1617
    x1619 = x1616 + x1618
    x1620 = x1619 * x5
    x1621 = x4 * (-x1596 + x1615 + x941)
    x1622 = x1602 * x3
    x1623 = x1621 - x1622
    x1624 = x1620 + x1623
    x1625 = x1624 * x54
    x1626 = x4 * (-x1598 + x1601 + x1619)
    x1627 = 2 * x1626
    x1628 = x1256 * x757 + x950
    x1629 = -x1615 * x3
    x1630 = x1628 * x5 + x1629
    x1631 = x4 * (-x1616 + x1617 + x1630)
    x1632 = x4 * (-x1614 + x1628 + x946)
    x1633 = -x1619 * x3 + x1632
    x1634 = x1630 * x5 + x1633
    x1635 = -x1624 * x3 + 2 * x1631 + x1634 * x54
    x1636 = x1615 * x54
    x1637 = x1630 * x54 + x1633
    x1638 = x1602 * x54
    x1639 = x1619 * x54
    x1640 = x1623 + x1639
    x1641 = -x1621
    x1642 = x1622 + x1641
    x1643 = -x1613 + x1625 + x1627
    x1644 = -x1604
    x1645 = x1610 + x1644
    x1646 = x4 * (x1600 - x1606 + x972)
    x1647 = x1004 + x1256 * x738
    x1648 = x1256 * x806
    x1649 = x1106 + x1256 * x809
    x1650 = x4 * (x1108 - x1648 + x1649)
    x1651 = x1256 * x800
    x1652 = x1097 + x1648
    x1653 = x4 * (x1099 - x1651 + x1652)
    x1654 = -x1653
    x1655 = -x1652 * x3
    x1656 = x1649 * x54 + x1655
    x1657 = x1083 + x1651
    x1658 = x1657 * x54
    x1659 = x1256 * x817
    x1660 = x1089 + x1659
    x1661 = x1660 * x3
    x1662 = -x1661
    x1663 = x1652 * x54
    x1664 = x1657 * x3
    x1665 = -x1664
    x1666 = x1663 + x1665
    x1667 = x1657 * x5
    x1668 = x1662 + x1667
    x1669 = x1668 * x3
    x1670 = x1652 * x5
    x1671 = x1665 + x1670
    x1672 = x1671 * x54
    x1673 = x1649 * x5 + x1655
    x1674 = x1650 - x1671 * x3 + x1673 * x54
    x1675 = x1653 - x1669 + x1672
    x1676 = x4 * (x1113 + x1657 - x1659)
    x1677 = x1115 + x1256 * x836
    x1678 = x1256 * x878
    x1679 = x1143 + x1256 * x881
    x1680 = x4 * (x1145 - x1678 + x1679)
    x1681 = x1256 * x873
    x1682 = x1134 + x1678
    x1683 = x4 * (x1136 - x1681 + x1682)
    x1684 = -x1683
    x1685 = -x1682 * x3
    x1686 = x1679 * x54 + x1685
    x1687 = x1120 + x1681
    x1688 = x1687 * x54
    x1689 = x1256 * x888
    x1690 = x1126 + x1689
    x1691 = x1690 * x3
    x1692 = -x1691
    x1693 = x1682 * x54
    x1694 = x1687 * x3
    x1695 = -x1694
    x1696 = x1693 + x1695
    x1697 = x1687 * x5
    x1698 = x1692 + x1697
    x1699 = x1698 * x3
    x1700 = x1682 * x5
    x1701 = x1695 + x1700
    x1702 = x1701 * x54
    x1703 = x1679 * x5 + x1685
    x1704 = x1680 - x1701 * x3 + x1703 * x54
    x1705 = x1683 - x1699 + x1702
    x1706 = x4 * (x1150 + x1687 - x1689)
    x1707 = x1152 + x1256 * x906
    x1708 = x1256 * x948
    x1709 = x1177 + x1256 * x951
    x1710 = x4 * (x1179 - x1708 + x1709)
    x1711 = x1256 * x943
    x1712 = x1168 + x1708
    x1713 = x4 * (x1170 - x1711 + x1712)
    x1714 = -x1713
    x1715 = -x1712 * x3
    x1716 = x1709 * x54 + x1715
    x1717 = x1156 + x1711
    x1718 = x1717 * x54
    x1719 = x1256 * x958
    x1720 = x1161 + x1719
    x1721 = x1720 * x3
    x1722 = -x1721
    x1723 = x1712 * x54
    x1724 = x1717 * x3
    x1725 = -x1724
    x1726 = x1723 + x1725
    x1727 = x1717 * x5
    x1728 = x1722 + x1727
    x1729 = x1728 * x3
    x1730 = x1712 * x5
    x1731 = x1725 + x1730
    x1732 = x1731 * x54
    x1733 = x1709 * x5 + x1715
    x1734 = x1710 - x1731 * x3 + x1733 * x54
    x1735 = x1713 - x1729 + x1732
    x1736 = x4 * (x1184 + x1717 - x1719)
    x1737 = x1186 + x1256 * x974
    x1738 = x1016 * x1256
    x1739 = x1019 * x1256 + x1210
    x1740 = x4 * (x1201 - x1738 + x1739)
    x1741 = x1010 * x1256
    x1742 = x1202 + x1738
    x1743 = x4 * (x1189 - x1741 + x1742)
    x1744 = -x1743
    x1745 = -x1742 * x3
    x1746 = x1739 * x54 + x1745
    x1747 = x1190 + x1741
    x1748 = x1747 * x54
    x1749 = x1027 * x1256
    x1750 = x1195 + x1749
    x1751 = x1750 * x3
    x1752 = -x1751
    x1753 = x1742 * x54
    x1754 = x1747 * x3
    x1755 = -x1754
    x1756 = x1753 + x1755
    x1757 = x1747 * x5
    x1758 = x1752 + x1757
    x1759 = x1758 * x3
    x1760 = x1742 * x5
    x1761 = x1755 + x1760
    x1762 = x1761 * x54
    x1763 = x1739 * x5 + x1745
    x1764 = x1740 - x1761 * x3 + x1763 * x54
    x1765 = x1743 - x1759 + x1762
    x1766 = x4 * (x1194 + x1747 - x1749)
    x1767 = x1046 * x1256 + x1217
    x1768 = 4 * x827
    x1769 = x1084 * x1256
    x1770 = x1090 * x7
    x1771 = x1768 + x1769 - x1770
    x1772 = x1771 * x3
    x1773 = 4 * x841
    x1774 = x1098 * x1256
    x1775 = x1084 * x7
    x1776 = x1773 + x1774 - x1775
    x1777 = x1776 * x54
    x1778 = -x1098 * x7 + x1107 * x1256 + 4 * x824
    x1779 = -x1776 * x3 + x1778 * x54
    x1780 = x4 * (-x1773 - x1774 + x1775 + x1778)
    x1781 = -x1772 + x1777
    x1782 = x4 * (-x1768 - x1769 + x1770 + x1776)
    x1783 = x1090 * x1256 - x1116 * x7 + 4 * x867
    x1784 = 3 * x898
    x1785 = x1121 * x1256
    x1786 = x1127 * x7
    x1787 = x1784 + x1785 - x1786
    x1788 = x1787 * x3
    x1789 = 3 * x911
    x1790 = x1135 * x1256
    x1791 = x1121 * x7
    x1792 = x1789 + x1790 - x1791
    x1793 = x1792 * x54
    x1794 = -x1135 * x7 + x1144 * x1256 + 3 * x895
    x1795 = -x1792 * x3 + x1794 * x54
    x1796 = x4 * (-x1789 - x1790 + x1791 + x1794)
    x1797 = -x1788 + x1793
    x1798 = x4 * (-x1784 - x1785 + x1786 + x1792)
    x1799 = x1127 * x1256 - x1153 * x7 + 3 * x937
    x1800 = 2 * x966
    x1801 = x1157 * x1256
    x1802 = x1162 * x7
    x1803 = x1800 + x1801 - x1802
    x1804 = x1803 * x3
    x1805 = 2 * x978
    x1806 = x1169 * x1256
    x1807 = x1157 * x7
    x1808 = x1805 + x1806 - x1807
    x1809 = x1808 * x54
    x1810 = -x1169 * x7 + x1178 * x1256 + 2 * x964
    x1811 = -x1808 * x3 + x1810 * x54
    x1812 = x4 * (-x1805 - x1806 + x1807 + x1810)
    x1813 = -x1804 + x1809
    x1814 = x4 * (-x1800 - x1801 + x1802 + x1808)
    x1815 = 2 * x1003 + x1162 * x1256 - x1187 * x7
    x1816 = x1191 * x1256
    x1817 = x1196 * x7
    x1818 = x1037 + x1816 - x1817
    x1819 = x1818 * x3
    x1820 = x1203 * x1256
    x1821 = x1191 * x7
    x1822 = x1051 + x1820 - x1821
    x1823 = x1822 * x54
    x1824 = x1034 - x1203 * x7 + x1211 * x1256
    x1825 = -x1822 * x3 + x1824 * x54
    x1826 = x4 * (x1073 - x1820 + x1821 + x1824)
    x1827 = -x1819 + x1823
    x1828 = x4 * (x1075 - x1816 + x1817 + x1822)
    x1829 = x1077 + x1196 * x1256 - x1218 * x7
    x1830 = x1223 * x1256
    x1831 = x1229 * x7
    x1832 = x1830 - x1831
    x1833 = x1832 * x3
    x1834 = x1237 * x1256
    x1835 = x1223 * x7
    x1836 = x1834 - x1835
    x1837 = x1836 * x54
    x1838 = -x1237 * x7 + x1246 * x1256
    x1839 = -x1836 * x3 + x1838 * x54
    x1840 = x4 * (-x1834 + x1835 + x1838)
    x1841 = -x1833 + x1837
    x1842 = x4 * (-x1830 + x1831 + x1836)
    x1843 = x1229 * x1256 - x1255 * x7
    x1844 = -x8 - A[2]
    x1845 = x13 * x1844
    x1846 = x1845 + x324
    x1847 = x1846 * x3
    x1848 = x12 * x1844
    x1849 = x1848 + x319
    x1850 = x1849 * x5
    x1851 = x1844 * x26
    x1852 = x1851 + x331
    x1853 = x1852 * x5
    x1854 = x1849 * x3
    x1855 = x1853 - x1854
    x1856 = x37 * (x1847 - x1850 + x1855)
    x1857 = x4 * (-x1848 + x1852 + x318)
    x1858 = x1855 * x5
    x1859 = -x1847 + x1850
    x1860 = x1859 * x3
    x1861 = x1857 + x1858 - x1860
    x1862 = x1861 * x5
    x1863 = x4 * (-x1845 + x1849 + x323)
    x1864 = x1859 * x5
    x1865 = x1846 * x5
    x1866 = x1844 * x20
    x1867 = x1866 + x345
    x1868 = x1867 * x3
    x1869 = x1865 - x1868
    x1870 = x1869 * x3
    x1871 = x1863 + x1864 - x1870
    x1872 = x1871 * x3
    x1873 = x1856 + x1862 - x1872
    x1874 = x1873 * x5
    x1875 = x37 * (x1859 - x1865 + x1868)
    x1876 = x1871 * x5
    x1877 = x4 * (x1846 - x1866 + x344)
    x1878 = x1869 * x5
    x1879 = x1867 * x5
    x1880 = x1844 * x44
    x1881 = x1880 + x370
    x1882 = x1881 * x3
    x1883 = x1879 - x1882
    x1884 = x1883 * x3
    x1885 = x1877 + x1878 - x1884
    x1886 = x1885 * x3
    x1887 = x1875 + x1876 - x1886
    x1888 = x1887 * x3
    x1889 = -x1863
    x1890 = x81 * (x1861 - x1864 + x1870 + x1889)
    x1891 = -x1888 + x1890
    x1892 = x1874 + x1891
    x1893 = x1892 * x3
    x1894 = x1844 * x88
    x1895 = x1894 + x385
    x1896 = x4 * (-x1851 + x1895 + x330)
    x1897 = x1895 * x5
    x1898 = x1852 * x3
    x1899 = x1897 - x1898
    x1900 = x1899 * x5
    x1901 = x1855 * x3
    x1902 = x1896 + x1900 - x1901
    x1903 = x1902 * x5
    x1904 = x1861 * x3
    x1905 = x37 * (-x1853 + x1854 + x1899)
    x1906 = -x1904 + x1905
    x1907 = x1903 + x1906
    x1908 = x1907 * x5
    x1909 = x1873 * x3
    x1910 = -x1857
    x1911 = x81 * (-x1858 + x1860 + x1902 + x1910)
    x1912 = -x1909 + x1911
    x1913 = x1908 + x1912
    x1914 = x1913 * x54
    x1915 = -x1856 + x1872
    x1916 = x4 * (-x1862 + x1907 + x1915)
    x1917 = 4 * x1916
    x1918 = x125 * x1844 + x417
    x1919 = x4 * (-x1894 + x1918 + x384)
    x1920 = -x1895 * x3 + x1918 * x5
    x1921 = -x1899 * x3 + x1919 + x1920 * x5
    x1922 = -x1902 * x3 + x37 * (-x1897 + x1898 + x1920)
    x1923 = x1921 * x5 + x1922
    x1924 = x1904 - x1905
    x1925 = x4 * (-x1903 + x1923 + x1924)
    x1926 = -x1896
    x1927 = -x1907 * x3 + x81 * (-x1900 + x1901 + x1921 + x1926)
    x1928 = x1923 * x5 + x1927
    x1929 = -x1913 * x3 + 4 * x1925 + x1928 * x54
    x1930 = x1902 * x54
    x1931 = x1923 * x54 + x1927
    x1932 = x1873 * x54
    x1933 = x1907 * x54
    x1934 = x1912 + x1933
    x1935 = x1909 - x1911
    x1936 = -x1893 + x1914 + x1917
    x1937 = x1888 - x1890
    x1938 = -x1877
    x1939 = x4 * (x1867 - x1880 + x369)
    x1940 = x1844 * x72 + x460
    x1941 = x1846 * x7
    x1942 = x170 * x1849
    x1943 = x170 * x1852
    x1944 = x1849 * x7
    x1945 = -x1944
    x1946 = x1943 + x1945
    x1947 = x4 * (x1941 - x1942 + x1946)
    x1948 = x1946 * x5
    x1949 = -x1941
    x1950 = x1942 + x1949
    x1951 = x1950 * x3
    x1952 = x1948 - x1951
    x1953 = x1952 * x5
    x1954 = x1950 * x5
    x1955 = x170 * x1846
    x1956 = x1867 * x7
    x1957 = -x1956
    x1958 = x1955 + x1957
    x1959 = x1958 * x3
    x1960 = x1954 - x1959
    x1961 = x1960 * x3
    x1962 = x1947 + x1953 - x1961
    x1963 = x1962 * x5
    x1964 = x4 * (x1950 - x1955 + x1956)
    x1965 = x1960 * x5
    x1966 = x1958 * x5
    x1967 = x170 * x1867
    x1968 = x1881 * x7
    x1969 = -x1968
    x1970 = x1967 + x1969
    x1971 = x1970 * x3
    x1972 = x1966 - x1971
    x1973 = x1972 * x3
    x1974 = x1964 + x1965 - x1973
    x1975 = x1974 * x3
    x1976 = x37 * (x1952 - x1954 + x1959)
    x1977 = -x1975 + x1976
    x1978 = x1963 + x1977
    x1979 = x1978 * x3
    x1980 = x170 * x1895
    x1981 = x1852 * x7
    x1982 = -x1981
    x1983 = x1980 + x1982
    x1984 = x1983 * x5
    x1985 = x1946 * x3
    x1986 = x1984 - x1985
    x1987 = x1986 * x5
    x1988 = x4 * (-x1943 + x1944 + x1983)
    x1989 = x1952 * x3
    x1990 = x1988 - x1989
    x1991 = x1987 + x1990
    x1992 = x1991 * x5
    x1993 = x1962 * x3
    x1994 = x37 * (-x1948 + x1951 + x1986)
    x1995 = -x1993 + x1994
    x1996 = x1992 + x1995
    x1997 = x1996 * x54
    x1998 = -x1947
    x1999 = x1961 + x1998
    x2000 = x4 * (-x1953 + x1991 + x1999)
    x2001 = 3 * x2000
    x2002 = -x1895 * x7
    x2003 = x170 * x1918 + x2002
    x2004 = -x1983 * x3 + x2003 * x5
    x2005 = x4 * (-x1980 + x1981 + x2003)
    x2006 = -x1986 * x3 + x2005
    x2007 = x2004 * x5 + x2006
    x2008 = -x1988
    x2009 = x1989 + x2008
    x2010 = x4 * (-x1987 + x2007 + x2009)
    x2011 = -x1991 * x3 + x37 * (-x1984 + x1985 + x2004)
    x2012 = x2007 * x5 + x2011
    x2013 = -x1996 * x3 + 3 * x2010 + x2012 * x54
    x2014 = x1986 * x54
    x2015 = x2007 * x54 + x2011
    x2016 = x1962 * x54
    x2017 = x1991 * x54
    x2018 = x1995 + x2017
    x2019 = x1993 - x1994
    x2020 = -x1979 + x1997 + x2001
    x2021 = x1975 - x1976
    x2022 = -x1964
    x2023 = x4 * (x1958 - x1967 + x1968)
    x2024 = -x1940 * x7
    x2025 = x170 * x1881 + x2024
    x2026 = x1844 * x320
    x2027 = x1844 * x332
    x2028 = x2027 + x685
    x2029 = x4 * (-x2026 + x2028 + x719)
    x2030 = x2028 * x5
    x2031 = x2026 + x690
    x2032 = x2031 * x3
    x2033 = x2030 - x2032
    x2034 = x2033 * x5
    x2035 = x2031 * x5
    x2036 = x1844 * x325
    x2037 = x2036 + x713
    x2038 = x2037 * x3
    x2039 = x2035 - x2038
    x2040 = x2039 * x3
    x2041 = x2029 + x2034 - x2040
    x2042 = x2041 * x5
    x2043 = x4 * (x2031 - x2036 + x732)
    x2044 = x2039 * x5
    x2045 = x2037 * x5
    x2046 = x1844 * x346
    x2047 = x2046 + x737
    x2048 = x2047 * x3
    x2049 = x2045 - x2048
    x2050 = x2049 * x3
    x2051 = x2043 + x2044 - x2050
    x2052 = x2051 * x3
    x2053 = x37 * (x2033 - x2035 + x2038)
    x2054 = -x2052 + x2053
    x2055 = x2042 + x2054
    x2056 = x2055 * x3
    x2057 = x1844 * x386
    x2058 = x2057 + x698
    x2059 = x2058 * x5
    x2060 = x2028 * x3
    x2061 = x2059 - x2060
    x2062 = x2061 * x5
    x2063 = x4 * (-x2027 + x2058 + x705)
    x2064 = x2033 * x3
    x2065 = x2063 - x2064
    x2066 = x2062 + x2065
    x2067 = x2066 * x5
    x2068 = x2041 * x3
    x2069 = x37 * (-x2030 + x2032 + x2061)
    x2070 = -x2068 + x2069
    x2071 = x2067 + x2070
    x2072 = x2071 * x54
    x2073 = -x2029
    x2074 = x2040 + x2073
    x2075 = x4 * (-x2034 + x2066 + x2074)
    x2076 = 3 * x2075
    x2077 = x1844 * x418 + x756
    x2078 = -x2058 * x3 + x2077 * x5
    x2079 = x4 * (-x2057 + x2077 + x760)
    x2080 = -x2061 * x3 + x2079
    x2081 = x2078 * x5 + x2080
    x2082 = -x2063
    x2083 = x2064 + x2082
    x2084 = x4 * (-x2062 + x2081 + x2083)
    x2085 = -x2066 * x3 + x37 * (-x2059 + x2060 + x2078)
    x2086 = x2081 * x5 + x2085
    x2087 = -x2071 * x3 + 3 * x2084 + x2086 * x54
    x2088 = x2061 * x54
    x2089 = x2081 * x54 + x2085
    x2090 = x2041 * x54
    x2091 = x2066 * x54
    x2092 = x2070 + x2091
    x2093 = x2068 - x2069
    x2094 = -x2056 + x2072 + x2076
    x2095 = x2052 - x2053
    x2096 = -x2043
    x2097 = x4 * (x2037 - x2046 + x792)
    x2098 = x1844 * x371 + x794
    x2099 = x170 * x1946
    x2100 = x1950 * x7
    x2101 = x1857 - x2100
    x2102 = x2099 + x2101
    x2103 = x2102 * x5
    x2104 = x170 * x1950
    x2105 = x1958 * x7
    x2106 = x1863 - x2105
    x2107 = x2104 + x2106
    x2108 = x2107 * x3
    x2109 = x2103 - x2108
    x2110 = x2109 * x5
    x2111 = x1889 + x2105
    x2112 = x4 * (x2102 - x2104 + x2111)
    x2113 = x2107 * x5
    x2114 = x170 * x1958
    x2115 = x1970 * x7
    x2116 = x1877 - x2115
    x2117 = x2114 + x2116
    x2118 = x2117 * x3
    x2119 = x2113 - x2118
    x2120 = x2119 * x3
    x2121 = x2112 - x2120
    x2122 = x2110 + x2121
    x2123 = x2122 * x3
    x2124 = x170 * x1983
    x2125 = x1946 * x7
    x2126 = x1896 - x2125
    x2127 = x2124 + x2126
    x2128 = x2127 * x5
    x2129 = x2102 * x3
    x2130 = -x2129
    x2131 = x2128 + x2130
    x2132 = x2131 * x5
    x2133 = x1910 + x2100
    x2134 = x4 * (-x2099 + x2127 + x2133)
    x2135 = x2109 * x3
    x2136 = x2134 - x2135
    x2137 = x2132 + x2136
    x2138 = x2137 * x54
    x2139 = x4 * (-x2103 + x2108 + x2131)
    x2140 = 2 * x2139
    x2141 = x1919 - x1983 * x7
    x2142 = x170 * x2003 + x2141
    x2143 = -x2127 * x3
    x2144 = x2142 * x5 + x2143
    x2145 = x4 * (-x2128 + x2129 + x2144)
    x2146 = x1926 + x2125
    x2147 = x4 * (-x2124 + x2142 + x2146)
    x2148 = -x2131 * x3 + x2147
    x2149 = x2144 * x5 + x2148
    x2150 = -x2137 * x3 + 2 * x2145 + x2149 * x54
    x2151 = x2127 * x54
    x2152 = x2144 * x54 + x2148
    x2153 = x2109 * x54
    x2154 = x2131 * x54
    x2155 = x2136 + x2154
    x2156 = -x2134
    x2157 = x2135 + x2156
    x2158 = -x2123 + x2138 + x2140
    x2159 = -x2112
    x2160 = x2120 + x2159
    x2161 = x1938 + x2115
    x2162 = x4 * (x2107 - x2114 + x2161)
    x2163 = x1939 - x2025 * x7
    x2164 = x170 * x1970 + x2163
    x2165 = x170 * x2028
    x2166 = x2031 * x7
    x2167 = -x2166
    x2168 = x2165 + x2167
    x2169 = x2168 * x5
    x2170 = x170 * x2031
    x2171 = x2037 * x7
    x2172 = -x2171
    x2173 = x2170 + x2172
    x2174 = x2173 * x3
    x2175 = x2169 - x2174
    x2176 = x2175 * x5
    x2177 = x4 * (x2168 - x2170 + x2171)
    x2178 = x2173 * x5
    x2179 = x170 * x2037
    x2180 = x2047 * x7
    x2181 = -x2180
    x2182 = x2179 + x2181
    x2183 = x2182 * x3
    x2184 = x2178 - x2183
    x2185 = x2184 * x3
    x2186 = x2177 - x2185
    x2187 = x2176 + x2186
    x2188 = x2187 * x3
    x2189 = x170 * x2058
    x2190 = x2028 * x7
    x2191 = -x2190
    x2192 = x2189 + x2191
    x2193 = x2192 * x5
    x2194 = x2168 * x3
    x2195 = -x2194
    x2196 = x2193 + x2195
    x2197 = x2196 * x5
    x2198 = x4 * (-x2165 + x2166 + x2192)
    x2199 = x2175 * x3
    x2200 = x2198 - x2199
    x2201 = x2197 + x2200
    x2202 = x2201 * x54
    x2203 = x4 * (-x2169 + x2174 + x2196)
    x2204 = 2 * x2203
    x2205 = -x2058 * x7
    x2206 = x170 * x2077 + x2205
    x2207 = -x2192 * x3
    x2208 = x2206 * x5 + x2207
    x2209 = x4 * (-x2193 + x2194 + x2208)
    x2210 = x4 * (-x2189 + x2190 + x2206)
    x2211 = -x2196 * x3 + x2210
    x2212 = x2208 * x5 + x2211
    x2213 = -x2201 * x3 + 2 * x2209 + x2212 * x54
    x2214 = x2192 * x54
    x2215 = x2208 * x54 + x2211
    x2216 = x2175 * x54
    x2217 = x2196 * x54
    x2218 = x2200 + x2217
    x2219 = -x2198
    x2220 = x2199 + x2219
    x2221 = -x2188 + x2202 + x2204
    x2222 = -x2177
    x2223 = x2185 + x2222
    x2224 = x4 * (x2173 - x2179 + x2180)
    x2225 = -x2098 * x7
    x2226 = x170 * x2047 + x2225
    x2227 = x1844 * x686
    x2228 = x1009 + x2227
    x2229 = x2228 * x5
    x2230 = x1844 * x691
    x2231 = x1026 + x2230
    x2232 = x2231 * x3
    x2233 = x2229 - x2232
    x2234 = x2233 * x5
    x2235 = x4 * (x1036 + x2228 - x2230)
    x2236 = x2231 * x5
    x2237 = x1844 * x714
    x2238 = x1045 + x2237
    x2239 = x2238 * x3
    x2240 = x2236 - x2239
    x2241 = x2240 * x3
    x2242 = x2235 - x2241
    x2243 = x2234 + x2242
    x2244 = x2243 * x3
    x2245 = x1844 * x699
    x2246 = x1015 + x2245
    x2247 = x2246 * x5
    x2248 = x2228 * x3
    x2249 = -x2248
    x2250 = x2247 + x2249
    x2251 = x2250 * x5
    x2252 = x4 * (x1050 - x2227 + x2246)
    x2253 = x2233 * x3
    x2254 = x2252 - x2253
    x2255 = x2251 + x2254
    x2256 = x2255 * x54
    x2257 = x4 * (-x2229 + x2232 + x2250)
    x2258 = 2 * x2257
    x2259 = x1018 + x1844 * x757
    x2260 = -x2246 * x3
    x2261 = x2259 * x5 + x2260
    x2262 = x4 * (-x2247 + x2248 + x2261)
    x2263 = x4 * (x1033 - x2245 + x2259)
    x2264 = -x2250 * x3 + x2263
    x2265 = x2261 * x5 + x2264
    x2266 = -x2255 * x3 + 2 * x2262 + x2265 * x54
    x2267 = x2246 * x54
    x2268 = x2261 * x54 + x2264
    x2269 = x2233 * x54
    x2270 = x2250 * x54
    x2271 = x2254 + x2270
    x2272 = -x2252
    x2273 = x2253 + x2272
    x2274 = -x2244 + x2256 + x2258
    x2275 = -x2235
    x2276 = x2241 + x2275
    x2277 = x4 * (x1076 + x2231 - x2237)
    x2278 = x1078 + x1844 * x738
    x2279 = x170 * x2127
    x2280 = 2 * x2005 - x2127 * x7
    x2281 = x170 * x2142 + x2280
    x2282 = x2102 * x7
    x2283 = 2 * x1988
    x2284 = x2282 - x2283
    x2285 = x4 * (-x2279 + x2281 + x2284)
    x2286 = x170 * x2102
    x2287 = -x2282 + x2283
    x2288 = x2279 + x2287
    x2289 = x2107 * x7
    x2290 = 2 * x1947
    x2291 = x2289 - x2290
    x2292 = x4 * (-x2286 + x2288 + x2291)
    x2293 = -x2292
    x2294 = -x2288 * x3
    x2295 = x2281 * x54 + x2294
    x2296 = -x2289 + x2290
    x2297 = x2286 + x2296
    x2298 = x2297 * x54
    x2299 = x170 * x2107
    x2300 = x2117 * x7
    x2301 = 2 * x1964
    x2302 = -x2300 + x2301
    x2303 = x2299 + x2302
    x2304 = x2303 * x3
    x2305 = -x2304
    x2306 = x2288 * x54
    x2307 = x2297 * x3
    x2308 = -x2307
    x2309 = x2306 + x2308
    x2310 = x2297 * x5
    x2311 = x2305 + x2310
    x2312 = x2311 * x3
    x2313 = x2288 * x5
    x2314 = x2308 + x2313
    x2315 = x2314 * x54
    x2316 = x2281 * x5 + x2294
    x2317 = x2285 - x2314 * x3 + x2316 * x54
    x2318 = x2292 - x2312 + x2315
    x2319 = x2300 - x2301
    x2320 = x4 * (x2297 - x2299 + x2319)
    x2321 = 2 * x2023 - x2164 * x7
    x2322 = x170 * x2117 + x2321
    x2323 = x170 * x2192
    x2324 = x2079 - x2192 * x7
    x2325 = x170 * x2206 + x2324
    x2326 = x2168 * x7
    x2327 = x2082 + x2326
    x2328 = x4 * (-x2323 + x2325 + x2327)
    x2329 = x170 * x2168
    x2330 = x2063 - x2326
    x2331 = x2323 + x2330
    x2332 = x2173 * x7
    x2333 = x2073 + x2332
    x2334 = x4 * (-x2329 + x2331 + x2333)
    x2335 = -x2334
    x2336 = -x2331 * x3
    x2337 = x2325 * x54 + x2336
    x2338 = x2029 - x2332
    x2339 = x2329 + x2338
    x2340 = x2339 * x54
    x2341 = x170 * x2173
    x2342 = x2182 * x7
    x2343 = x2043 - x2342
    x2344 = x2341 + x2343
    x2345 = x2344 * x3
    x2346 = -x2345
    x2347 = x2331 * x54
    x2348 = x2339 * x3
    x2349 = -x2348
    x2350 = x2347 + x2349
    x2351 = x2339 * x5
    x2352 = x2346 + x2351
    x2353 = x2352 * x3
    x2354 = x2331 * x5
    x2355 = x2349 + x2354
    x2356 = x2355 * x54
    x2357 = x2325 * x5 + x2336
    x2358 = x2328 - x2355 * x3 + x2357 * x54
    x2359 = x2334 - x2353 + x2356
    x2360 = x2096 + x2342
    x2361 = x4 * (x2339 - x2341 + x2360)
    x2362 = x2097 - x2226 * x7
    x2363 = x170 * x2182 + x2362
    x2364 = x2228 * x7
    x2365 = x170 * x2246
    x2366 = -x2246 * x7
    x2367 = x170 * x2259 + x2366
    x2368 = x4 * (x2364 - x2365 + x2367)
    x2369 = x2231 * x7
    x2370 = x170 * x2228
    x2371 = -x2364
    x2372 = x2365 + x2371
    x2373 = x4 * (x2369 - x2370 + x2372)
    x2374 = -x2373
    x2375 = -x2372 * x3
    x2376 = x2367 * x54 + x2375
    x2377 = -x2369
    x2378 = x2370 + x2377
    x2379 = x2378 * x54
    x2380 = x170 * x2231
    x2381 = x2238 * x7
    x2382 = -x2381
    x2383 = x2380 + x2382
    x2384 = x2383 * x3
    x2385 = -x2384
    x2386 = x2372 * x54
    x2387 = x2378 * x3
    x2388 = -x2387
    x2389 = x2386 + x2388
    x2390 = x2378 * x5
    x2391 = x2385 + x2390
    x2392 = x2391 * x3
    x2393 = x2372 * x5
    x2394 = x2388 + x2393
    x2395 = x2394 * x54
    x2396 = x2367 * x5 + x2375
    x2397 = x2368 - x2394 * x3 + x2396 * x54
    x2398 = x2373 - x2392 + x2395
    x2399 = x4 * (x2378 - x2380 + x2381)
    x2400 = -x2278 * x7
    x2401 = x170 * x2238 + x2400
    x2402 = x1016 * x1844
    x2403 = x1019 * x1844 + x1245
    x2404 = x4 * (x1247 - x2402 + x2403)
    x2405 = x1010 * x1844
    x2406 = x1236 + x2402
    x2407 = x4 * (x1238 - x2405 + x2406)
    x2408 = -x2407
    x2409 = -x2406 * x3
    x2410 = x2403 * x54 + x2409
    x2411 = x1222 + x2405
    x2412 = x2411 * x54
    x2413 = x1027 * x1844
    x2414 = x1228 + x2413
    x2415 = x2414 * x3
    x2416 = -x2415
    x2417 = x2406 * x54
    x2418 = x2411 * x3
    x2419 = -x2418
    x2420 = x2417 + x2419
    x2421 = x2411 * x5
    x2422 = x2416 + x2421
    x2423 = x2422 * x3
    x2424 = x2406 * x5
    x2425 = x2419 + x2424
    x2426 = x2425 * x54
    x2427 = x2403 * x5 + x2409
    x2428 = x2404 - x2425 * x3 + x2427 * x54
    x2429 = x2407 - x2423 + x2426
    x2430 = x4 * (x1252 + x2411 - x2413)
    x2431 = x1046 * x1844 + x1254
    x2432 = x170 * x2297
    x2433 = x2303 * x7
    x2434 = 3 * x2112
    x2435 = -x2433 + x2434
    x2436 = x2432 + x2435
    x2437 = x2436 * x3
    x2438 = x170 * x2288
    x2439 = x2297 * x7
    x2440 = 3 * x2134
    x2441 = -x2439 + x2440
    x2442 = x2438 + x2441
    x2443 = x2442 * x54
    x2444 = 3 * x2147 - x2288 * x7
    x2445 = x170 * x2281 + x2444
    x2446 = -x2442 * x3 + x2445 * x54
    x2447 = x2439 - x2440
    x2448 = x4 * (-x2438 + x2445 + x2447)
    x2449 = -x2437 + x2443
    x2450 = x2433 - x2434
    x2451 = x4 * (-x2432 + x2442 + x2450)
    x2452 = 3 * x2162 - x2322 * x7
    x2453 = x170 * x2303 + x2452
    x2454 = x170 * x2339
    x2455 = x2344 * x7
    x2456 = 2 * x2177
    x2457 = -x2455 + x2456
    x2458 = x2454 + x2457
    x2459 = x2458 * x3
    x2460 = x170 * x2331
    x2461 = x2339 * x7
    x2462 = 2 * x2198
    x2463 = -x2461 + x2462
    x2464 = x2460 + x2463
    x2465 = x2464 * x54
    x2466 = 2 * x2210 - x2331 * x7
    x2467 = x170 * x2325 + x2466
    x2468 = -x2464 * x3 + x2467 * x54
    x2469 = x2461 - x2462
    x2470 = x4 * (-x2460 + x2467 + x2469)
    x2471 = -x2459 + x2465
    x2472 = x2455 - x2456
    x2473 = x4 * (-x2454 + x2464 + x2472)
    x2474 = 2 * x2224 - x2363 * x7
    x2475 = x170 * x2344 + x2474
    x2476 = x170 * x2378
    x2477 = x2383 * x7
    x2478 = x2235 - x2477
    x2479 = x2476 + x2478
    x2480 = x2479 * x3
    x2481 = x170 * x2372
    x2482 = x2378 * x7
    x2483 = x2252 - x2482
    x2484 = x2481 + x2483
    x2485 = x2484 * x54
    x2486 = x2263 - x2372 * x7
    x2487 = x170 * x2367 + x2486
    x2488 = -x2484 * x3 + x2487 * x54
    x2489 = x2272 + x2482
    x2490 = x4 * (-x2481 + x2487 + x2489)
    x2491 = -x2480 + x2485
    x2492 = x2275 + x2477
    x2493 = x4 * (-x2476 + x2484 + x2492)
    x2494 = x2277 - x2401 * x7
    x2495 = x170 * x2383 + x2494
    x2496 = x170 * x2411
    x2497 = x2414 * x7
    x2498 = -x2497
    x2499 = x2496 + x2498
    x2500 = x2499 * x3
    x2501 = x170 * x2406
    x2502 = x2411 * x7
    x2503 = -x2502
    x2504 = x2501 + x2503
    x2505 = x2504 * x54
    x2506 = -x2406 * x7
    x2507 = x170 * x2403 + x2506
    x2508 = -x2504 * x3 + x2507 * x54
    x2509 = x4 * (-x2501 + x2502 + x2507)
    x2510 = -x2500 + x2505
    x2511 = x4 * (-x2496 + x2497 + x2504)
    x2512 = -x2431 * x7
    x2513 = x170 * x2414 + x2512
    x2514 = 4 * x1037
    x2515 = x1223 * x1844
    x2516 = x1229 * x9
    x2517 = x2514 + x2515 - x2516
    x2518 = x2517 * x3
    x2519 = 4 * x1051
    x2520 = x1237 * x1844
    x2521 = x1223 * x9
    x2522 = x2519 + x2520 - x2521
    x2523 = x2522 * x54
    x2524 = 4 * x1034 - x1237 * x9 + x1246 * x1844
    x2525 = -x2522 * x3 + x2524 * x54
    x2526 = x4 * (-x2519 - x2520 + x2521 + x2524)
    x2527 = -x2518 + x2523
    x2528 = x4 * (-x2514 - x2515 + x2516 + x2522)
    x2529 = 4 * x1077 + x1229 * x1844 - x1255 * x9
    x2530 = x1256 * x1261
    x2531 = x1258 * x7
    x2532 = x14 + x2530 - x2531
    x2533 = x2532 * x3
    x2534 = x1256 * x1264
    x2535 = x1261 * x7
    x2536 = x2534 - x2535 + x31
    x2537 = x2536 * x5
    x2538 = x1256 * x1307
    x2539 = x1264 * x7
    x2540 = x2538 - x2539 + x93
    x2541 = x2540 * x5
    x2542 = x2536 * x3
    x2543 = x2541 - x2542
    x2544 = x37 * (x2533 - x2537 + x2543)
    x2545 = x4 * (x104 - x2534 + x2535 + x2540)
    x2546 = x2543 * x5
    x2547 = -x2533 + x2537
    x2548 = x2547 * x3
    x2549 = x2545 + x2546 - x2548
    x2550 = x2549 * x5
    x2551 = x4 * (-x2530 + x2531 + x2536 + x59)
    x2552 = x2547 * x5
    x2553 = x2532 * x5
    x2554 = x1256 * x1258
    x2555 = x1279 * x7
    x2556 = x2554 - x2555 + x41
    x2557 = x2556 * x3
    x2558 = x2553 - x2557
    x2559 = x2558 * x3
    x2560 = x2551 + x2552 - x2559
    x2561 = x2560 * x3
    x2562 = x2544 + x2550 - x2561
    x2563 = x2562 * x5
    x2564 = x1256 * x1330 + x127 - x1307 * x7
    x2565 = -x2540 * x3 + x2564 * x5
    x2566 = x4 * (x132 - x2538 + x2539 + x2564)
    x2567 = -x2543 * x3 + x2565 * x5 + x2566
    x2568 = -x2549 * x3 + x2567 * x5 + x37 * (-x2541 + x2542 + x2565)
    x2569 = -x2545
    x2570 = -x2562 * x3 + x81 * (-x2546 + x2548 + x2567 + x2569)
    x2571 = x2568 * x5 + x2570
    x2572 = x37 * (x2547 - x2553 + x2557)
    x2573 = x2560 * x5
    x2574 = x4 * (x2532 - x2554 + x2555 + x80)
    x2575 = x2558 * x5
    x2576 = x2556 * x5
    x2577 = x1256 * x1279
    x2578 = x1293 * x7
    x2579 = x2577 - x2578 + x69
    x2580 = x2579 * x3
    x2581 = x2576 - x2580
    x2582 = x2581 * x3
    x2583 = x2574 + x2575 - x2582
    x2584 = x2583 * x3
    x2585 = x2572 + x2573 - x2584
    x2586 = x2585 * x3
    x2587 = -x2551
    x2588 = x81 * (x2549 - x2552 + x2559 + x2587)
    x2589 = x2586 - x2588
    x2590 = x2563 - x2586 + x2588
    x2591 = -x2574
    x2592 = x4 * (x167 + x2556 - x2577 + x2578)
    x2593 = x1256 * x1293 - x1352 * x7 + x168
    x2594 = x1358 * x7
    x2595 = x1256 * x1355
    x2596 = x1256 * x1385
    x2597 = x1355 * x7
    x2598 = x1308 + x246 + x2596 - x2597
    x2599 = x4 * (x1322 + x258 + x2594 - x2595 + x2598)
    x2600 = x2598 * x5
    x2601 = x1269 + x192 - x2594 + x2595
    x2602 = x2601 * x3
    x2603 = x2600 - x2602
    x2604 = x2603 * x5
    x2605 = x2601 * x5
    x2606 = x1256 * x1358
    x2607 = x1364 * x7
    x2608 = x1275 + x204 + x2606 - x2607
    x2609 = x2608 * x3
    x2610 = x2605 - x2609
    x2611 = x2610 * x3
    x2612 = x2599 + x2604 - x2611
    x2613 = x2612 * x5
    x2614 = x1256 * x1403 + x1331 - x1385 * x7 + x275
    x2615 = x4 * (x1338 - x2596 + x2597 + x2614 + x284)
    x2616 = -x2598 * x3 + x2614 * x5
    x2617 = -x2603 * x3 + x2615 + x2616 * x5
    x2618 = -x2612 * x3 + x37 * (-x2600 + x2602 + x2616)
    x2619 = x2617 * x5 + x2618
    x2620 = x4 * (x1301 + x205 + x2601 - x2606 + x2607)
    x2621 = x2610 * x5
    x2622 = x2608 * x5
    x2623 = x1256 * x1364
    x2624 = x1374 * x7
    x2625 = x1289 + x219 + x2623 - x2624
    x2626 = x2625 * x3
    x2627 = x2622 - x2626
    x2628 = x2627 * x3
    x2629 = x2620 + x2621 - x2628
    x2630 = x2629 * x3
    x2631 = x37 * (x2603 - x2605 + x2609)
    x2632 = x2630 - x2631
    x2633 = x2613 - x2630 + x2631
    x2634 = x4 * (x1350 + x2608 - x2623 + x2624 + x312)
    x2635 = x1256 * x1374 + x1351 - x1422 * x7 + x313
    x2636 = x1428 * x7
    x2637 = x1256 * x1425
    x2638 = x1256 * x1455
    x2639 = x1425 * x7
    x2640 = x2638 - x2639 + x392
    x2641 = x4 * (x2636 - x2637 + x2640 + x404)
    x2642 = x2640 * x5
    x2643 = -x2636 + x2637 + x338
    x2644 = x2643 * x3
    x2645 = x2642 - x2644
    x2646 = x2645 * x5
    x2647 = x2643 * x5
    x2648 = x1256 * x1428
    x2649 = x1434 * x7
    x2650 = x2648 - x2649 + x350
    x2651 = x2650 * x3
    x2652 = x2647 - x2651
    x2653 = x2652 * x3
    x2654 = x2641 + x2646 - x2653
    x2655 = x2654 * x5
    x2656 = x1256 * x1474 - x1455 * x7 + x421
    x2657 = x4 * (-x2638 + x2639 + x2656 + x430)
    x2658 = -x2640 * x3 + x2656 * x5
    x2659 = -x2645 * x3 + x2657 + x2658 * x5
    x2660 = -x2654 * x3 + x37 * (-x2642 + x2644 + x2658)
    x2661 = x2659 * x5 + x2660
    x2662 = x4 * (x2643 - x2648 + x2649 + x351)
    x2663 = x2652 * x5
    x2664 = x2650 * x5
    x2665 = x1256 * x1434
    x2666 = x1444 * x7
    x2667 = x2665 - x2666 + x365
    x2668 = x2667 * x3
    x2669 = x2664 - x2668
    x2670 = x2669 * x3
    x2671 = x2662 + x2663 - x2670
    x2672 = x2671 * x3
    x2673 = x37 * (x2645 - x2647 + x2651)
    x2674 = x2672 - x2673
    x2675 = -x2641
    x2676 = x2655 - x2672 + x2673
    x2677 = -x2662
    x2678 = x4 * (x2650 - x2665 + x2666 + x458)
    x2679 = x1256 * x1444 - x1495 * x7 + x459
    x2680 = 2 * x1390
    x2681 = x1256 * x1515
    x2682 = x1497 * x7
    x2683 = x2680 + x2681 - x2682 + x485
    x2684 = x2683 * x5
    x2685 = 2 * x1356
    x2686 = x1256 * x1497
    x2687 = x1500 * x7
    x2688 = x2685 + x2686 - x2687 + x499
    x2689 = x2688 * x3
    x2690 = x2684 - x2689
    x2691 = x2690 * x5
    x2692 = 2 * x1405
    x2693 = x1256 * x1528 - x1515 * x7 + x2692 + x540
    x2694 = -x2683 * x3 + x2693 * x5
    x2695 = -x2680
    x2696 = x4 * (-x2681 + x2682 + x2693 + x2695 + x543)
    x2697 = -x2690 * x3 + x2696
    x2698 = x2694 * x5 + x2697
    x2699 = x2688 * x5
    x2700 = 2 * x1370
    x2701 = x1256 * x1500
    x2702 = x1507 * x7
    x2703 = x2700 + x2701 - x2702 + x512
    x2704 = x2703 * x3
    x2705 = x2699 - x2704
    x2706 = x2705 * x3
    x2707 = -x2685
    x2708 = x4 * (x2683 - x2686 + x2687 + x2707 + x500)
    x2709 = x2706 - x2708
    x2710 = x2691 - x2706 + x2708
    x2711 = -x2700
    x2712 = x4 * (x2688 - x2701 + x2702 + x2711 + x569)
    x2713 = 2 * x1421
    x2714 = x1256 * x1507 - x1545 * x7 + x2713 + x572
    x2715 = x1256 * x1565
    x2716 = x1547 * x7
    x2717 = x1460 + x2715 - x2716 + x597
    x2718 = x2717 * x5
    x2719 = x1256 * x1547
    x2720 = x1550 * x7
    x2721 = x1426 + x2719 - x2720 + x610
    x2722 = x2721 * x3
    x2723 = x2718 - x2722
    x2724 = x2723 * x5
    x2725 = x1256 * x1578 + x1476 - x1565 * x7 + x649
    x2726 = -x2717 * x3 + x2725 * x5
    x2727 = x4 * (x1479 - x2715 + x2716 + x2725 + x652)
    x2728 = -x2723 * x3 + x2727
    x2729 = x2726 * x5 + x2728
    x2730 = x2721 * x5
    x2731 = x1256 * x1550
    x2732 = x1557 * x7
    x2733 = x1440 + x2731 - x2732 + x622
    x2734 = x2733 * x3
    x2735 = x2730 - x2734
    x2736 = x2735 * x3
    x2737 = x4 * (x1470 + x2717 - x2719 + x2720 + x611)
    x2738 = x2736 - x2737
    x2739 = x2724 - x2736 + x2737
    x2740 = x4 * (x1493 + x2721 - x2731 + x2732 + x678)
    x2741 = x1256 * x1557 + x1494 - x1595 * x7 + x680
    x2742 = x1256 * x1615
    x2743 = x1597 * x7
    x2744 = x2742 - x2743 + x706
    x2745 = x2744 * x5
    x2746 = x1256 * x1597
    x2747 = x1600 * x7
    x2748 = x2746 - x2747 + x720
    x2749 = x2748 * x3
    x2750 = x2745 - x2749
    x2751 = x2750 * x5
    x2752 = x1256 * x1628 - x1615 * x7 + x761
    x2753 = -x2744 * x3 + x2752 * x5
    x2754 = x4 * (-x2742 + x2743 + x2752 + x764)
    x2755 = -x2750 * x3 + x2754
    x2756 = x2753 * x5 + x2755
    x2757 = x2748 * x5
    x2758 = x1256 * x1600
    x2759 = x1607 * x7
    x2760 = x2758 - x2759 + x733
    x2761 = x2760 * x3
    x2762 = x2757 - x2761
    x2763 = x2762 * x3
    x2764 = x4 * (x2744 - x2746 + x2747 + x721)
    x2765 = -x2764
    x2766 = x2763 + x2765
    x2767 = x2751 - x2763 + x2764
    x2768 = x4 * (x2748 - x2758 + x2759 + x790)
    x2769 = x1256 * x1607 - x1647 * x7 + x793
    x2770 = x1256 * x1649 + 3 * x1532 - x1652 * x7 + x824
    x2771 = 3 * x1504
    x2772 = x1256 * x1657
    x2773 = x1660 * x7
    x2774 = x2771 + x2772 - x2773 + x827
    x2775 = x2774 * x3
    x2776 = 3 * x1521
    x2777 = x1256 * x1652
    x2778 = x1657 * x7
    x2779 = x2776 + x2777 - x2778 + x841
    x2780 = -x2779 * x3
    x2781 = x2779 * x5
    x2782 = x2770 * x5 + x2780
    x2783 = x4 * (x2770 - x2776 - x2777 + x2778 + x863)
    x2784 = -x2775 + x2781
    x2785 = x4 * (-x2771 - x2772 + x2773 + x2779 + x865)
    x2786 = x1256 * x1660 + 3 * x1544 - x1677 * x7 + x867
    x2787 = 2 * x1582
    x2788 = x1256 * x1679 - x1682 * x7 + x2787 + x895
    x2789 = 2 * x1554
    x2790 = x1256 * x1687
    x2791 = x1690 * x7
    x2792 = x2789 + x2790 - x2791 + x898
    x2793 = x2792 * x3
    x2794 = 2 * x1571
    x2795 = x1256 * x1682
    x2796 = x1687 * x7
    x2797 = x2794 + x2795 - x2796 + x911
    x2798 = -x2797 * x3
    x2799 = x2797 * x5
    x2800 = x2788 * x5 + x2798
    x2801 = -x2794
    x2802 = x4 * (x2788 - x2795 + x2796 + x2801 + x933)
    x2803 = -x2793 + x2799
    x2804 = -x2789
    x2805 = x4 * (-x2790 + x2791 + x2797 + x2804 + x935)
    x2806 = 2 * x1594
    x2807 = x1256 * x1690 - x1707 * x7 + x2806 + x937
    x2808 = x1256 * x1709 + x1632 - x1712 * x7 + x964
    x2809 = x1256 * x1717
    x2810 = x1720 * x7
    x2811 = x1604 + x2809 - x2810 + x966
    x2812 = x2811 * x3
    x2813 = x1256 * x1712
    x2814 = x1717 * x7
    x2815 = x1621 + x2813 - x2814 + x978
    x2816 = -x2815 * x3
    x2817 = x2815 * x5
    x2818 = x2808 * x5 + x2816
    x2819 = x4 * (x1000 + x1641 + x2808 - x2813 + x2814)
    x2820 = -x2812 + x2817
    x2821 = x4 * (x1002 + x1644 - x2809 + x2810 + x2815)
    x2822 = x1003 + x1256 * x1720 + x1646 - x1737 * x7
    x2823 = x1034 + x1256 * x1739 - x1742 * x7
    x2824 = x1256 * x1747
    x2825 = x1750 * x7
    x2826 = x1037 + x2824 - x2825
    x2827 = x2826 * x3
    x2828 = x1256 * x1742
    x2829 = x1747 * x7
    x2830 = x1051 + x2828 - x2829
    x2831 = -x2830 * x3
    x2832 = x2830 * x5
    x2833 = x2823 * x5 + x2831
    x2834 = x4 * (x1073 + x2823 - x2828 + x2829)
    x2835 = -x2827 + x2832
    x2836 = x4 * (x1075 - x2824 + x2825 + x2830)
    x2837 = x1077 + x1256 * x1750 - x1767 * x7
    x2838 = x1771 * x7
    x2839 = x1256 * x1776
    x2840 = 4 * x1653
    x2841 = x1109 + x1256 * x1778 + 4 * x1650 - x1776 * x7
    x2842 = x4 * (x1101 + x2838 - x2839 - x2840 + x2841)
    x2843 = x1100 - x2838 + x2839 + x2840
    x2844 = x1114 + x1256 * x1771 + 4 * x1676 - x1783 * x7
    x2845 = x1787 * x7
    x2846 = x1256 * x1792
    x2847 = 3 * x1683
    x2848 = x1146 + x1256 * x1794 + 3 * x1680 - x1792 * x7
    x2849 = x4 * (x1138 + x2845 - x2846 - x2847 + x2848)
    x2850 = x1137 - x2845 + x2846 + x2847
    x2851 = x1151 + x1256 * x1787 + 3 * x1706 - x1799 * x7
    x2852 = x1803 * x7
    x2853 = x1256 * x1808
    x2854 = 2 * x1713
    x2855 = -x2854
    x2856 = 2 * x1710
    x2857 = x1180 + x1256 * x1810 - x1808 * x7 + x2856
    x2858 = x4 * (x1172 + x2852 - x2853 + x2855 + x2857)
    x2859 = x1171 - x2852 + x2853 + x2854
    x2860 = 2 * x1736
    x2861 = x1185 + x1256 * x1803 - x1815 * x7 + x2860
    x2862 = x1818 * x7
    x2863 = x1256 * x1822
    x2864 = x1212 + x1256 * x1824 + x1740 - x1822 * x7
    x2865 = x4 * (x1205 + x1744 + x2862 - x2863 + x2864)
    x2866 = x1204 + x1743 - x2862 + x2863
    x2867 = x1216 + x1256 * x1818 + x1766 - x1829 * x7
    x2868 = x1832 * x7
    x2869 = x1256 * x1836
    x2870 = x1248 + x1256 * x1838 - x1836 * x7
    x2871 = x4 * (x1240 + x2868 - x2869 + x2870)
    x2872 = x1239 - x2868 + x2869
    x2873 = x1253 + x1256 * x1832 - x1843 * x7
    x2874 = x1256 * x1849
    x2875 = x1949 + x2874
    x2876 = x2875 * x3
    x2877 = x1256 * x1852
    x2878 = x1945 + x2877
    x2879 = x2878 * x5
    x2880 = x1256 * x1895
    x2881 = x1982 + x2880
    x2882 = x2881 * x5
    x2883 = x2878 * x3
    x2884 = x2882 - x2883
    x2885 = x37 * (x2876 - x2879 + x2884)
    x2886 = x4 * (x1944 - x2877 + x2881)
    x2887 = x2884 * x5
    x2888 = -x2876 + x2879
    x2889 = x2888 * x3
    x2890 = x2886 + x2887 - x2889
    x2891 = x2890 * x5
    x2892 = x4 * (x1941 - x2874 + x2878)
    x2893 = x2888 * x5
    x2894 = x2875 * x5
    x2895 = x1256 * x1846
    x2896 = x1957 + x2895
    x2897 = x2896 * x3
    x2898 = x2894 - x2897
    x2899 = x2898 * x3
    x2900 = x2892 + x2893 - x2899
    x2901 = x2900 * x3
    x2902 = x2885 + x2891 - x2901
    x2903 = x2902 * x5
    x2904 = x1256 * x1918 + x2002
    x2905 = -x2881 * x3 + x2904 * x5
    x2906 = x4 * (x1981 - x2880 + x2904)
    x2907 = -x2884 * x3 + x2905 * x5 + x2906
    x2908 = -x2890 * x3 + x2907 * x5 + x37 * (-x2882 + x2883 + x2905)
    x2909 = -x2886
    x2910 = -x2902 * x3 + x81 * (-x2887 + x2889 + x2907 + x2909)
    x2911 = x2908 * x5 + x2910
    x2912 = x37 * (x2888 - x2894 + x2897)
    x2913 = x2900 * x5
    x2914 = x4 * (x1956 + x2875 - x2895)
    x2915 = x2898 * x5
    x2916 = x2896 * x5
    x2917 = x1256 * x1867
    x2918 = x1969 + x2917
    x2919 = x2918 * x3
    x2920 = x2916 - x2919
    x2921 = x2920 * x3
    x2922 = x2914 + x2915 - x2921
    x2923 = x2922 * x3
    x2924 = x2912 + x2913 - x2923
    x2925 = x2924 * x3
    x2926 = -x2892
    x2927 = x81 * (x2890 - x2893 + x2899 + x2926)
    x2928 = x2925 - x2927
    x2929 = x2903 - x2925 + x2927
    x2930 = -x2914
    x2931 = x4 * (x1968 + x2896 - x2917)
    x2932 = x1256 * x1881 + x2024
    x2933 = x1256 * x1946
    x2934 = x1256 * x1983
    x2935 = x2126 + x2934
    x2936 = x4 * (x2133 - x2933 + x2935)
    x2937 = x2935 * x5
    x2938 = x2101 + x2933
    x2939 = x2938 * x3
    x2940 = x2937 - x2939
    x2941 = x2940 * x5
    x2942 = x2938 * x5
    x2943 = x1256 * x1950
    x2944 = x2106 + x2943
    x2945 = x2944 * x3
    x2946 = x2942 - x2945
    x2947 = x2946 * x3
    x2948 = x2936 + x2941 - x2947
    x2949 = x2948 * x5
    x2950 = x1256 * x2003 + x2141
    x2951 = x4 * (x2146 - x2934 + x2950)
    x2952 = -x2935 * x3 + x2950 * x5
    x2953 = -x2940 * x3 + x2951 + x2952 * x5
    x2954 = -x2948 * x3 + x37 * (-x2937 + x2939 + x2952)
    x2955 = x2953 * x5 + x2954
    x2956 = x4 * (x2111 + x2938 - x2943)
    x2957 = x2946 * x5
    x2958 = x2944 * x5
    x2959 = x1256 * x1958
    x2960 = x2116 + x2959
    x2961 = x2960 * x3
    x2962 = x2958 - x2961
    x2963 = x2962 * x3
    x2964 = x2956 + x2957 - x2963
    x2965 = x2964 * x3
    x2966 = x37 * (x2940 - x2942 + x2945)
    x2967 = x2965 - x2966
    x2968 = x2949 - x2965 + x2966
    x2969 = x4 * (x2161 + x2944 - x2959)
    x2970 = x1256 * x1970 + x2163
    x2971 = x1256 * x2028
    x2972 = x1256 * x2058
    x2973 = x2191 + x2972
    x2974 = x4 * (x2166 - x2971 + x2973)
    x2975 = x2973 * x5
    x2976 = x2167 + x2971
    x2977 = x2976 * x3
    x2978 = x2975 - x2977
    x2979 = x2978 * x5
    x2980 = x2976 * x5
    x2981 = x1256 * x2031
    x2982 = x2172 + x2981
    x2983 = x2982 * x3
    x2984 = x2980 - x2983
    x2985 = x2984 * x3
    x2986 = x2974 + x2979 - x2985
    x2987 = x2986 * x5
    x2988 = x1256 * x2077 + x2205
    x2989 = x4 * (x2190 - x2972 + x2988)
    x2990 = -x2973 * x3 + x2988 * x5
    x2991 = -x2978 * x3 + x2989 + x2990 * x5
    x2992 = -x2986 * x3 + x37 * (-x2975 + x2977 + x2990)
    x2993 = x2991 * x5 + x2992
    x2994 = x4 * (x2171 + x2976 - x2981)
    x2995 = x2984 * x5
    x2996 = x2982 * x5
    x2997 = x1256 * x2037
    x2998 = x2181 + x2997
    x2999 = x2998 * x3
    x3000 = x2996 - x2999
    x3001 = x3 * x3000
    x3002 = x2994 + x2995 - x3001
    x3003 = x3 * x3002
    x3004 = x37 * (x2978 - x2980 + x2983)
    x3005 = x3003 - x3004
    x3006 = -x2974
    x3007 = x2987 - x3003 + x3004
    x3008 = -x2994
    x3009 = x4 * (x2180 + x2982 - x2997)
    x3010 = x1256 * x2047 + x2225
    x3011 = x1256 * x2127
    x3012 = x2287 + x3011
    x3013 = x3012 * x5
    x3014 = x1256 * x2102
    x3015 = x2296 + x3014
    x3016 = x3 * x3015
    x3017 = x3013 - x3016
    x3018 = x3017 * x5
    x3019 = x1256 * x2142 + x2280
    x3020 = -x3 * x3012 + x3019 * x5
    x3021 = x4 * (x2284 - x3011 + x3019)
    x3022 = -x3 * x3017 + x3021
    x3023 = x3020 * x5 + x3022
    x3024 = x3015 * x5
    x3025 = x1256 * x2107
    x3026 = x2302 + x3025
    x3027 = x3 * x3026
    x3028 = x3024 - x3027
    x3029 = x3 * x3028
    x3030 = x4 * (x2291 + x3012 - x3014)
    x3031 = x3029 - x3030
    x3032 = x3018 - x3029 + x3030
    x3033 = x4 * (x2319 + x3015 - x3025)
    x3034 = x1256 * x2117 + x2321
    x3035 = x1256 * x2192
    x3036 = x2330 + x3035
    x3037 = x3036 * x5
    x3038 = x1256 * x2168
    x3039 = x2338 + x3038
    x3040 = x3 * x3039
    x3041 = x3037 - x3040
    x3042 = x3041 * x5
    x3043 = x1256 * x2206 + x2324
    x3044 = -x3 * x3036 + x3043 * x5
    x3045 = x4 * (x2327 - x3035 + x3043)
    x3046 = -x3 * x3041 + x3045
    x3047 = x3044 * x5 + x3046
    x3048 = x3039 * x5
    x3049 = x1256 * x2173
    x3050 = x2343 + x3049
    x3051 = x3 * x3050
    x3052 = x3048 - x3051
    x3053 = x3 * x3052
    x3054 = x4 * (x2333 + x3036 - x3038)
    x3055 = x3053 - x3054
    x3056 = x3042 - x3053 + x3054
    x3057 = x4 * (x2360 + x3039 - x3049)
    x3058 = x1256 * x2182 + x2362
    x3059 = x1256 * x2246
    x3060 = x2371 + x3059
    x3061 = x3060 * x5
    x3062 = x1256 * x2228
    x3063 = x2377 + x3062
    x3064 = x3 * x3063
    x3065 = x3061 - x3064
    x3066 = x3065 * x5
    x3067 = x1256 * x2259 + x2366
    x3068 = -x3 * x3060 + x3067 * x5
    x3069 = x4 * (x2364 - x3059 + x3067)
    x3070 = -x3 * x3065 + x3069
    x3071 = x3068 * x5 + x3070
    x3072 = x3063 * x5
    x3073 = x1256 * x2231
    x3074 = x2382 + x3073
    x3075 = x3 * x3074
    x3076 = x3072 - x3075
    x3077 = x3 * x3076
    x3078 = x4 * (x2369 + x3060 - x3062)
    x3079 = -x3078
    x3080 = x3077 + x3079
    x3081 = x3066 - x3077 + x3078
    x3082 = x4 * (x2381 + x3063 - x3073)
    x3083 = x1256 * x2238 + x2400
    x3084 = x1256 * x2281 + x2444
    x3085 = x1256 * x2297
    x3086 = x2435 + x3085
    x3087 = x3 * x3086
    x3088 = x1256 * x2288
    x3089 = x2441 + x3088
    x3090 = -x3 * x3089
    x3091 = x3089 * x5
    x3092 = x3084 * x5 + x3090
    x3093 = x4 * (x2447 + x3084 - x3088)
    x3094 = -x3087 + x3091
    x3095 = x4 * (x2450 - x3085 + x3089)
    x3096 = x1256 * x2303 + x2452
    x3097 = x1256 * x2325 + x2466
    x3098 = x1256 * x2339
    x3099 = x2457 + x3098
    x3100 = x3 * x3099
    x3101 = x1256 * x2331
    x3102 = x2463 + x3101
    x3103 = -x3 * x3102
    x3104 = x3102 * x5
    x3105 = x3097 * x5 + x3103
    x3106 = x4 * (x2469 + x3097 - x3101)
    x3107 = -x3100 + x3104
    x3108 = x4 * (x2472 - x3098 + x3102)
    x3109 = x1256 * x2344 + x2474
    x3110 = x1256 * x2367 + x2486
    x3111 = x1256 * x2378
    x3112 = x2478 + x3111
    x3113 = x3 * x3112
    x3114 = x1256 * x2372
    x3115 = x2483 + x3114
    x3116 = -x3 * x3115
    x3117 = x3115 * x5
    x3118 = x3110 * x5 + x3116
    x3119 = x4 * (x2489 + x3110 - x3114)
    x3120 = -x3113 + x3117
    x3121 = x4 * (x2492 - x3111 + x3115)
    x3122 = x1256 * x2383 + x2494
    x3123 = x1256 * x2403 + x2506
    x3124 = x1256 * x2411
    x3125 = x2498 + x3124
    x3126 = x3 * x3125
    x3127 = x1256 * x2406
    x3128 = x2503 + x3127
    x3129 = -x3 * x3128
    x3130 = x3128 * x5
    x3131 = x3123 * x5 + x3129
    x3132 = x4 * (x2502 + x3123 - x3127)
    x3133 = -x3126 + x3130
    x3134 = x4 * (x2497 - x3124 + x3128)
    x3135 = x1256 * x2414 + x2512
    x3136 = x2436 * x7
    x3137 = x1256 * x2442
    x3138 = 4 * x2292
    x3139 = x1256 * x2445 + 4 * x2285 - x2442 * x7
    x3140 = x4 * (x3136 - x3137 - x3138 + x3139)
    x3141 = -x3136 + x3137 + x3138
    x3142 = x1256 * x2436 + 4 * x2320 - x2453 * x7
    x3143 = x2458 * x7
    x3144 = x1256 * x2464
    x3145 = 3 * x2334
    x3146 = x1256 * x2467 + 3 * x2328 - x2464 * x7
    x3147 = x4 * (x3143 - x3144 - x3145 + x3146)
    x3148 = -x3143 + x3144 + x3145
    x3149 = x1256 * x2458 + 3 * x2361 - x2475 * x7
    x3150 = x2479 * x7
    x3151 = x1256 * x2484
    x3152 = 2 * x2373
    x3153 = x1256 * x2487 + 2 * x2368 - x2484 * x7
    x3154 = x4 * (x3150 - x3151 - x3152 + x3153)
    x3155 = -x3150 + x3151 + x3152
    x3156 = x1256 * x2479 + 2 * x2399 - x2495 * x7
    x3157 = x2499 * x7
    x3158 = x1256 * x2504
    x3159 = x1256 * x2507 + x2404 - x2504 * x7
    x3160 = x4 * (x2408 + x3157 - x3158 + x3159)
    x3161 = x2407 - x3157 + x3158
    x3162 = x1256 * x2499 + x2430 - x2513 * x7
    x3163 = x2517 * x7
    x3164 = x1256 * x2522
    x3165 = x1256 * x2524 - x2522 * x7
    x3166 = x4 * (x3163 - x3164 + x3165)
    x3167 = -x3163 + x3164
    x3168 = x1256 * x2517 - x2529 * x7
    x3169 = x1844 * x1849
    x3170 = x1846 * x9
    x3171 = x14 + x3169 - x3170
    x3172 = x3 * x3171
    x3173 = x1844 * x1852
    x3174 = x1849 * x9
    x3175 = x31 + x3173 - x3174
    x3176 = x3175 * x5
    x3177 = x1844 * x1895
    x3178 = x1852 * x9
    x3179 = x3177 - x3178 + x93
    x3180 = x3179 * x5
    x3181 = x3 * x3175
    x3182 = x3180 - x3181
    x3183 = x37 * (x3172 - x3176 + x3182)
    x3184 = x4 * (x104 - x3173 + x3174 + x3179)
    x3185 = x3182 * x5
    x3186 = -x3172 + x3176
    x3187 = x3 * x3186
    x3188 = x3184 + x3185 - x3187
    x3189 = x3188 * x5
    x3190 = x4 * (-x3169 + x3170 + x3175 + x59)
    x3191 = x3186 * x5
    x3192 = x3171 * x5
    x3193 = x1844 * x1846
    x3194 = x1867 * x9
    x3195 = x3193 - x3194 + x41
    x3196 = x3 * x3195
    x3197 = x3192 - x3196
    x3198 = x3 * x3197
    x3199 = x3190 + x3191 - x3198
    x3200 = x3 * x3199
    x3201 = x3183 + x3189 - x3200
    x3202 = x3201 * x5
    x3203 = x127 + x1844 * x1918 - x1895 * x9
    x3204 = -x3 * x3179 + x3203 * x5
    x3205 = x4 * (x132 - x3177 + x3178 + x3203)
    x3206 = -x3 * x3182 + x3204 * x5 + x3205
    x3207 = -x3 * x3188 + x3206 * x5 + x37 * (-x3180 + x3181 + x3204)
    x3208 = -x3184
    x3209 = -x3 * x3201 + x81 * (-x3185 + x3187 + x3206 + x3208)
    x3210 = x3207 * x5 + x3209
    x3211 = x37 * (x3186 - x3192 + x3196)
    x3212 = x3199 * x5
    x3213 = x4 * (x3171 - x3193 + x3194 + x80)
    x3214 = x3197 * x5
    x3215 = x3195 * x5
    x3216 = x1844 * x1867
    x3217 = x1881 * x9
    x3218 = x3216 - x3217 + x69
    x3219 = x3 * x3218
    x3220 = x3215 - x3219
    x3221 = x3 * x3220
    x3222 = x3213 + x3214 - x3221
    x3223 = x3 * x3222
    x3224 = x3211 + x3212 - x3223
    x3225 = x3 * x3224
    x3226 = -x3190
    x3227 = x81 * (x3188 - x3191 + x3198 + x3226)
    x3228 = x3225 - x3227
    x3229 = x3202 - x3225 + x3227
    x3230 = -x3213
    x3231 = x4 * (x167 + x3195 - x3216 + x3217)
    x3232 = x168 + x1844 * x1881 - x1940 * x9
    x3233 = x3171 * x7
    x3234 = x170 * x3175
    x3235 = x170 * x3179
    x3236 = x3175 * x7
    x3237 = -x3236
    x3238 = x3235 + x3237
    x3239 = x4 * (x3233 - x3234 + x3238)
    x3240 = x3238 * x5
    x3241 = -x3233
    x3242 = x3234 + x3241
    x3243 = x3 * x3242
    x3244 = x3240 - x3243
    x3245 = x3244 * x5
    x3246 = x3242 * x5
    x3247 = x170 * x3171
    x3248 = x3195 * x7
    x3249 = -x3248
    x3250 = x3247 + x3249
    x3251 = x3 * x3250
    x3252 = x3246 - x3251
    x3253 = x3 * x3252
    x3254 = x3239 + x3245 - x3253
    x3255 = x3254 * x5
    x3256 = -x3179 * x7
    x3257 = x170 * x3203 + x3256
    x3258 = x4 * (-x3235 + x3236 + x3257)
    x3259 = -x3 * x3238 + x3257 * x5
    x3260 = -x3 * x3244 + x3258 + x3259 * x5
    x3261 = -x3 * x3254 + x37 * (-x3240 + x3243 + x3259)
    x3262 = x3260 * x5 + x3261
    x3263 = x4 * (x3242 - x3247 + x3248)
    x3264 = x3252 * x5
    x3265 = x3250 * x5
    x3266 = x170 * x3195
    x3267 = x3218 * x7
    x3268 = -x3267
    x3269 = x3266 + x3268
    x3270 = x3 * x3269
    x3271 = x3265 - x3270
    x3272 = x3 * x3271
    x3273 = x3263 + x3264 - x3272
    x3274 = x3 * x3273
    x3275 = x37 * (x3244 - x3246 + x3251)
    x3276 = x3274 - x3275
    x3277 = -x3239
    x3278 = x3255 - x3274 + x3275
    x3279 = -x3263
    x3280 = x4 * (x3250 - x3266 + x3267)
    x3281 = -x3232 * x7
    x3282 = x170 * x3218 + x3281
    x3283 = x2031 * x9
    x3284 = x1844 * x2028
    x3285 = x1844 * x2058
    x3286 = x2028 * x9
    x3287 = x1896 + x3285 - x3286 + x392
    x3288 = x4 * (x1910 + x3283 - x3284 + x3287 + x404)
    x3289 = x3287 * x5
    x3290 = x1857 - x3283 + x3284 + x338
    x3291 = x3 * x3290
    x3292 = x3289 - x3291
    x3293 = x3292 * x5
    x3294 = x3290 * x5
    x3295 = x1844 * x2031
    x3296 = x2037 * x9
    x3297 = x1863 + x3295 - x3296 + x350
    x3298 = x3 * x3297
    x3299 = x3294 - x3298
    x3300 = x3 * x3299
    x3301 = x3288 + x3293 - x3300
    x3302 = x3301 * x5
    x3303 = x1844 * x2077 + x1919 - x2058 * x9 + x421
    x3304 = x4 * (x1926 - x3285 + x3286 + x3303 + x430)
    x3305 = -x3 * x3287 + x3303 * x5
    x3306 = -x3 * x3292 + x3304 + x3305 * x5
    x3307 = -x3 * x3301 + x37 * (-x3289 + x3291 + x3305)
    x3308 = x3306 * x5 + x3307
    x3309 = x4 * (x1889 + x3290 - x3295 + x3296 + x351)
    x3310 = x3299 * x5
    x3311 = x3297 * x5
    x3312 = x1844 * x2037
    x3313 = x2047 * x9
    x3314 = x1877 + x3312 - x3313 + x365
    x3315 = x3 * x3314
    x3316 = x3311 - x3315
    x3317 = x3 * x3316
    x3318 = x3309 + x3310 - x3317
    x3319 = x3 * x3318
    x3320 = x37 * (x3292 - x3294 + x3298)
    x3321 = x3319 - x3320
    x3322 = -x3288
    x3323 = x3302 - x3319 + x3320
    x3324 = -x3309
    x3325 = x4 * (x1938 + x3297 - x3312 + x3313 + x458)
    x3326 = x1844 * x2047 + x1939 - x2098 * x9 + x459
    x3327 = x170 * x3238
    x3328 = x3242 * x7
    x3329 = x3184 - x3328
    x3330 = x3327 + x3329
    x3331 = x3330 * x5
    x3332 = x170 * x3242
    x3333 = x3250 * x7
    x3334 = x3190 - x3333
    x3335 = x3332 + x3334
    x3336 = x3 * x3335
    x3337 = x3331 - x3336
    x3338 = x3337 * x5
    x3339 = x3205 - x3238 * x7
    x3340 = x170 * x3257 + x3339
    x3341 = -x3 * x3330 + x3340 * x5
    x3342 = x3208 + x3328
    x3343 = x4 * (-x3327 + x3340 + x3342)
    x3344 = -x3 * x3337 + x3343
    x3345 = x3341 * x5 + x3344
    x3346 = x3335 * x5
    x3347 = x170 * x3250
    x3348 = x3269 * x7
    x3349 = x3213 - x3348
    x3350 = x3347 + x3349
    x3351 = x3 * x3350
    x3352 = x3346 - x3351
    x3353 = x3 * x3352
    x3354 = x3226 + x3333
    x3355 = x4 * (x3330 - x3332 + x3354)
    x3356 = -x3355
    x3357 = x3353 + x3356
    x3358 = x3338 - x3353 + x3355
    x3359 = x3230 + x3348
    x3360 = x4 * (x3335 - x3347 + x3359)
    x3361 = x3231 - x3282 * x7
    x3362 = x170 * x3269 + x3361
    x3363 = x170 * x3287
    x3364 = x3290 * x7
    x3365 = -x3364
    x3366 = x3363 + x3365
    x3367 = x3366 * x5
    x3368 = x170 * x3290
    x3369 = x3297 * x7
    x3370 = -x3369
    x3371 = x3368 + x3370
    x3372 = x3 * x3371
    x3373 = x3367 - x3372
    x3374 = x3373 * x5
    x3375 = -x3287 * x7
    x3376 = x170 * x3303 + x3375
    x3377 = -x3 * x3366 + x3376 * x5
    x3378 = x4 * (-x3363 + x3364 + x3376)
    x3379 = -x3 * x3373 + x3378
    x3380 = x3377 * x5 + x3379
    x3381 = x3371 * x5
    x3382 = x170 * x3297
    x3383 = x3314 * x7
    x3384 = -x3383
    x3385 = x3382 + x3384
    x3386 = x3 * x3385
    x3387 = x3381 - x3386
    x3388 = x3 * x3387
    x3389 = x4 * (x3366 - x3368 + x3369)
    x3390 = -x3389
    x3391 = x3388 + x3390
    x3392 = x3374 - x3388 + x3389
    x3393 = x4 * (x3371 - x3382 + x3383)
    x3394 = -x3326 * x7
    x3395 = x170 * x3314 + x3394
    x3396 = 2 * x2063
    x3397 = x1844 * x2246
    x3398 = x2228 * x9
    x3399 = x3396 + x3397 - x3398 + x706
    x3400 = x3399 * x5
    x3401 = 2 * x2029
    x3402 = x1844 * x2228
    x3403 = x2231 * x9
    x3404 = x3401 + x3402 - x3403 + x720
    x3405 = x3 * x3404
    x3406 = x3400 - x3405
    x3407 = x3406 * x5
    x3408 = 2 * x2079
    x3409 = x1844 * x2259 - x2246 * x9 + x3408 + x761
    x3410 = -x3 * x3399 + x3409 * x5
    x3411 = -x3396
    x3412 = x4 * (-x3397 + x3398 + x3409 + x3411 + x764)
    x3413 = -x3 * x3406 + x3412
    x3414 = x3410 * x5 + x3413
    x3415 = x3404 * x5
    x3416 = 2 * x2043
    x3417 = x1844 * x2231
    x3418 = x2238 * x9
    x3419 = x3416 + x3417 - x3418 + x733
    x3420 = x3 * x3419
    x3421 = x3415 - x3420
    x3422 = x3 * x3421
    x3423 = -x3401
    x3424 = x4 * (x3399 - x3402 + x3403 + x3423 + x721)
    x3425 = -x3424
    x3426 = x3422 + x3425
    x3427 = x3407 - x3422 + x3424
    x3428 = -x3416
    x3429 = x4 * (x3404 - x3417 + x3418 + x3428 + x790)
    x3430 = 2 * x2097
    x3431 = x1844 * x2238 - x2278 * x9 + x3430 + x793
    x3432 = 2 * x3258 - x3330 * x7
    x3433 = x170 * x3340 + x3432
    x3434 = x170 * x3335
    x3435 = x3350 * x7
    x3436 = 2 * x3263
    x3437 = -x3435 + x3436
    x3438 = x3434 + x3437
    x3439 = x3 * x3438
    x3440 = x170 * x3330
    x3441 = x3335 * x7
    x3442 = 2 * x3239
    x3443 = -x3441 + x3442
    x3444 = x3440 + x3443
    x3445 = -x3 * x3444
    x3446 = x3444 * x5
    x3447 = x3433 * x5 + x3445
    x3448 = x3441 - x3442
    x3449 = x4 * (x3433 - x3440 + x3448)
    x3450 = -x3439 + x3446
    x3451 = x3435 - x3436
    x3452 = x4 * (-x3434 + x3444 + x3451)
    x3453 = 2 * x3280 - x3362 * x7
    x3454 = x170 * x3350 + x3453
    x3455 = x3304 - x3366 * x7
    x3456 = x170 * x3376 + x3455
    x3457 = x170 * x3371
    x3458 = x3385 * x7
    x3459 = x3309 - x3458
    x3460 = x3457 + x3459
    x3461 = x3 * x3460
    x3462 = x170 * x3366
    x3463 = x3371 * x7
    x3464 = x3288 - x3463
    x3465 = x3462 + x3464
    x3466 = -x3 * x3465
    x3467 = x3465 * x5
    x3468 = x3456 * x5 + x3466
    x3469 = x3322 + x3463
    x3470 = x4 * (x3456 - x3462 + x3469)
    x3471 = -x3461 + x3467
    x3472 = x3324 + x3458
    x3473 = x4 * (-x3457 + x3465 + x3472)
    x3474 = x3325 - x3395 * x7
    x3475 = x170 * x3385 + x3474
    x3476 = -x3399 * x7
    x3477 = x170 * x3409 + x3476
    x3478 = x170 * x3404
    x3479 = x3419 * x7
    x3480 = -x3479
    x3481 = x3478 + x3480
    x3482 = x3 * x3481
    x3483 = x170 * x3399
    x3484 = x3404 * x7
    x3485 = -x3484
    x3486 = x3483 + x3485
    x3487 = -x3 * x3486
    x3488 = x3486 * x5
    x3489 = x3477 * x5 + x3487
    x3490 = x4 * (x3477 - x3483 + x3484)
    x3491 = -x3482 + x3488
    x3492 = x4 * (-x3478 + x3479 + x3486)
    x3493 = -x3431 * x7
    x3494 = x170 * x3419 + x3493
    x3495 = x1034 + x1844 * x2403 + 3 * x2263 - x2406 * x9
    x3496 = 3 * x2235
    x3497 = x1844 * x2411
    x3498 = x2414 * x9
    x3499 = x1037 + x3496 + x3497 - x3498
    x3500 = x3 * x3499
    x3501 = 3 * x2252
    x3502 = x1844 * x2406
    x3503 = x2411 * x9
    x3504 = x1051 + x3501 + x3502 - x3503
    x3505 = -x3 * x3504
    x3506 = x3504 * x5
    x3507 = x3495 * x5 + x3505
    x3508 = x4 * (x1073 + x3495 - x3501 - x3502 + x3503)
    x3509 = -x3500 + x3506
    x3510 = x4 * (x1075 - x3496 - x3497 + x3498 + x3504)
    x3511 = x1077 + x1844 * x2414 + 3 * x2277 - x2431 * x9
    x3512 = x170 * x3444
    x3513 = 3 * x3343 - x3444 * x7
    x3514 = x170 * x3433 + x3513
    x3515 = x3438 * x7
    x3516 = 3 * x3355
    x3517 = x3515 - x3516
    x3518 = x4 * (-x3512 + x3514 + x3517)
    x3519 = -x3515 + x3516
    x3520 = x3512 + x3519
    x3521 = 3 * x3360 - x3454 * x7
    x3522 = x170 * x3438 + x3521
    x3523 = x170 * x3465
    x3524 = 2 * x3378 - x3465 * x7
    x3525 = x170 * x3456 + x3524
    x3526 = x3460 * x7
    x3527 = 2 * x3389
    x3528 = x3526 - x3527
    x3529 = x4 * (-x3523 + x3525 + x3528)
    x3530 = -x3526 + x3527
    x3531 = x3523 + x3530
    x3532 = 2 * x3393 - x3475 * x7
    x3533 = x170 * x3460 + x3532
    x3534 = x170 * x3486
    x3535 = x3412 - x3486 * x7
    x3536 = x170 * x3477 + x3535
    x3537 = x3481 * x7
    x3538 = x3425 + x3537
    x3539 = x4 * (-x3534 + x3536 + x3538)
    x3540 = x3424 - x3537
    x3541 = x3534 + x3540
    x3542 = x3429 - x3494 * x7
    x3543 = x170 * x3481 + x3542
    x3544 = x3499 * x7
    x3545 = x170 * x3504
    x3546 = -x3504 * x7
    x3547 = x170 * x3495 + x3546
    x3548 = x4 * (x3544 - x3545 + x3547)
    x3549 = -x3544
    x3550 = x3545 + x3549
    x3551 = -x3511 * x7
    x3552 = x170 * x3499 + x3551
    x3553 = x2517 * x9
    x3554 = x1844 * x2522
    x3555 = 4 * x2407
    x3556 = x1248 + x1844 * x2524 + 4 * x2404 - x2522 * x9
    x3557 = x4 * (x1240 + x3553 - x3554 - x3555 + x3556)
    x3558 = x1239 - x3553 + x3554 + x3555
    x3559 = x1253 + x1844 * x2517 + 4 * x2430 - x2529 * x9
    x3560 = x2556 * x7
    x3561 = x1256 * x2532
    x3562 = 2 * x1275
    x3563 = 2 * x1269
    x3564 = x1256 * x2536
    x3565 = x2532 * x7
    x3566 = x3563 + x3564 - x3565
    x3567 = x4 * (x3560 - x3561 - x3562 + x3566)
    x3568 = x3566 * x5
    x3569 = -x3560 + x3561 + x3562
    x3570 = x3 * x3569
    x3571 = x3568 - x3570
    x3572 = x3571 * x5
    x3573 = x3569 * x5
    x3574 = 2 * x1289
    x3575 = x1256 * x2556
    x3576 = x2579 * x7
    x3577 = x3574 + x3575 - x3576
    x3578 = x3 * x3577
    x3579 = x3573 - x3578
    x3580 = x3 * x3579
    x3581 = x3567 + x3572 - x3580
    x3582 = x3 * x3581
    x3583 = 2 * x1308
    x3584 = x1256 * x2540
    x3585 = x2536 * x7
    x3586 = x3583 + x3584 - x3585
    x3587 = x4 * (-x3563 - x3564 + x3565 + x3586)
    x3588 = x3586 * x5
    x3589 = x3 * x3566
    x3590 = x3588 - x3589
    x3591 = x3590 * x5
    x3592 = x3 * x3571
    x3593 = x3587 + x3591 - x3592
    x3594 = x3593 * x5
    x3595 = x37 * (-x3568 + x3570 + x3590)
    x3596 = x1256 * x2564 + 2 * x1331 - x2540 * x7
    x3597 = -x3 * x3586 + x3596 * x5
    x3598 = x4 * (-x3583 - x3584 + x3585 + x3596)
    x3599 = -x3 * x3590 + x3597 * x5 + x3598
    x3600 = -x3 * x3593 + x3599 * x5 + x37 * (-x3588 + x3589 + x3597)
    x3601 = -x3587
    x3602 = -x3582 + x3594 + x3595
    x3603 = -x3567
    x3604 = x4 * (x3569 - x3574 - x3575 + x3576)
    x3605 = x1256 * x2579 + 2 * x1351 - x2593 * x7
    x3606 = x1256 * x2601
    x3607 = x2608 * x7
    x3608 = x2551 + x2685 + x3606 - x3607
    x3609 = x3608 * x5
    x3610 = x1256 * x2608
    x3611 = x2625 * x7
    x3612 = x2574 + x2700 + x3610 - x3611
    x3613 = x3 * x3612
    x3614 = x3609 - x3613
    x3615 = x3 * x3614
    x3616 = x1256 * x2598
    x3617 = x2601 * x7
    x3618 = x2545 + x2680 + x3616 - x3617
    x3619 = x4 * (x2587 + x2707 - x3606 + x3607 + x3618)
    x3620 = x3618 * x5
    x3621 = x3 * x3608
    x3622 = x3620 - x3621
    x3623 = x3622 * x5
    x3624 = x1256 * x2614 + x2566 - x2598 * x7 + x2692
    x3625 = x4 * (x2569 + x2695 - x3616 + x3617 + x3624)
    x3626 = -x3 * x3618 + x3624 * x5
    x3627 = -x3 * x3622 + x3625 + x3626 * x5
    x3628 = -x3615 + x3619 + x3623
    x3629 = x4 * (x2591 + x2711 + x3608 - x3610 + x3611)
    x3630 = x1256 * x2625 + x2592 - x2635 * x7 + x2713
    x3631 = 2 * x1426
    x3632 = x1256 * x2643
    x3633 = x2650 * x7
    x3634 = x3631 + x3632 - x3633
    x3635 = x3634 * x5
    x3636 = 2 * x1440
    x3637 = x1256 * x2650
    x3638 = x2667 * x7
    x3639 = x3636 + x3637 - x3638
    x3640 = x3 * x3639
    x3641 = x3635 - x3640
    x3642 = x3 * x3641
    x3643 = 2 * x1460
    x3644 = x1256 * x2640
    x3645 = x2643 * x7
    x3646 = x3643 + x3644 - x3645
    x3647 = x4 * (-x3631 - x3632 + x3633 + x3646)
    x3648 = -x3647
    x3649 = x3646 * x5
    x3650 = x3 * x3634
    x3651 = x3649 - x3650
    x3652 = x3651 * x5
    x3653 = x1256 * x2656 + 2 * x1476 - x2640 * x7
    x3654 = x4 * (-x3643 - x3644 + x3645 + x3653)
    x3655 = -x3 * x3646 + x3653 * x5
    x3656 = -x3 * x3651 + x3654 + x3655 * x5
    x3657 = -x3642 + x3647 + x3652
    x3658 = x4 * (x3634 - x3636 - x3637 + x3638)
    x3659 = x1256 * x2667 + 2 * x1494 - x2679 * x7
    x3660 = 2 * x1504
    x3661 = 2 * x2620
    x3662 = x1256 * x2688
    x3663 = x2703 * x7
    x3664 = x3660 + x3661 + x3662 - x3663
    x3665 = x3 * x3664
    x3666 = 2 * x1521
    x3667 = 2 * x2599
    x3668 = x1256 * x2683
    x3669 = x2688 * x7
    x3670 = x3666 + x3667 + x3668 - x3669
    x3671 = x3670 * x5
    x3672 = x1256 * x2693 + 2 * x1532 + 2 * x2615 - x2683 * x7
    x3673 = -x3 * x3670 + x3672 * x5
    x3674 = x4 * (-x3666 - x3667 - x3668 + x3669 + x3672)
    x3675 = -x3665 + x3671
    x3676 = x4 * (-x3660 - x3661 - x3662 + x3663 + x3670)
    x3677 = x1256 * x2703 + 2 * x1544 + 2 * x2634 - x2714 * x7
    x3678 = x1256 * x2721
    x3679 = x2733 * x7
    x3680 = x2662 + x2789 + x3678 - x3679
    x3681 = x3 * x3680
    x3682 = x1256 * x2717
    x3683 = x2721 * x7
    x3684 = x2641 + x2794 + x3682 - x3683
    x3685 = x3684 * x5
    x3686 = x1256 * x2725 + x2657 - x2717 * x7 + x2787
    x3687 = -x3 * x3684 + x3686 * x5
    x3688 = x4 * (x2675 + x2801 - x3682 + x3683 + x3686)
    x3689 = -x3681 + x3685
    x3690 = x4 * (x2677 + x2804 - x3678 + x3679 + x3684)
    x3691 = x1256 * x2733 + x2678 - x2741 * x7 + x2806
    x3692 = 2 * x1604
    x3693 = x1256 * x2748
    x3694 = x2760 * x7
    x3695 = x3692 + x3693 - x3694
    x3696 = x3 * x3695
    x3697 = 2 * x1621
    x3698 = x1256 * x2744
    x3699 = x2748 * x7
    x3700 = x3697 + x3698 - x3699
    x3701 = x3700 * x5
    x3702 = x1256 * x2752 + 2 * x1632 - x2744 * x7
    x3703 = -x3 * x3700 + x3702 * x5
    x3704 = x4 * (-x3697 - x3698 + x3699 + x3702)
    x3705 = -x3696 + x3701
    x3706 = x4 * (-x3692 - x3693 + x3694 + x3700)
    x3707 = x1256 * x2760 + 2 * x1646 - x2769 * x7
    x3708 = x2774 * x7
    x3709 = x1256 * x2779
    x3710 = 3 * x2708
    x3711 = -x3710
    x3712 = 2 * x1653
    x3713 = 3 * x2696
    x3714 = x1256 * x2770 + 2 * x1650 - x2779 * x7 + x3713
    x3715 = x4 * (x3708 - x3709 + x3711 - x3712 + x3714)
    x3716 = -x3708 + x3709 + x3710 + x3712
    x3717 = 3 * x2712
    x3718 = x1256 * x2774 + 2 * x1676 - x2786 * x7 + x3717
    x3719 = x2792 * x7
    x3720 = x1256 * x2797
    x3721 = 2 * x1683
    x3722 = 2 * x2737
    x3723 = x1256 * x2788 + 2 * x1680 + 2 * x2727 - x2797 * x7
    x3724 = x4 * (x3719 - x3720 - x3721 - x3722 + x3723)
    x3725 = -x3719 + x3720 + x3721 + x3722
    x3726 = x1256 * x2792 + 2 * x1706 + 2 * x2740 - x2807 * x7
    x3727 = x2811 * x7
    x3728 = x1256 * x2815
    x3729 = x1256 * x2808 + x2754 - x2815 * x7 + x2856
    x3730 = x4 * (x2765 + x2855 + x3727 - x3728 + x3729)
    x3731 = x2764 + x2854 - x3727 + x3728
    x3732 = x1256 * x2811 + x2768 - x2822 * x7 + x2860
    x3733 = x2826 * x7
    x3734 = x1256 * x2830
    x3735 = 2 * x1743
    x3736 = x1256 * x2823 + 2 * x1740 - x2830 * x7
    x3737 = x4 * (x3733 - x3734 - x3735 + x3736)
    x3738 = -x3733 + x3734 + x3735
    x3739 = x1256 * x2826 + 2 * x1766 - x2837 * x7
    x3740 = x1256 * x2841 + 2 * x1780 + 4 * x2783 - x2843 * x7
    x3741 = x1256 * x2843 + 2 * x1782 + 4 * x2785 - x2844 * x7
    x3742 = 3 * x2802
    x3743 = x1256 * x2848 + 2 * x1796 - x2850 * x7 + x3742
    x3744 = 3 * x2805
    x3745 = x1256 * x2850 + 2 * x1798 - x2851 * x7 + x3744
    x3746 = x1256 * x2857 + 2 * x1812 + 2 * x2819 - x2859 * x7
    x3747 = x1256 * x2859 + 2 * x1814 + 2 * x2821 - x2861 * x7
    x3748 = x1256 * x2864 + 2 * x1826 + x2834 - x2866 * x7
    x3749 = x1256 * x2866 + 2 * x1828 + x2836 - x2867 * x7
    x3750 = x1256 * x2870 + 2 * x1840 - x2872 * x7
    x3751 = x1256 * x2872 + 2 * x1842 - x2873 * x7
    x3752 = x2896 * x7
    x3753 = x1256 * x2875
    x3754 = x1256 * x2878
    x3755 = x2875 * x7
    x3756 = x1857 + x3754 - x3755
    x3757 = x4 * (x1889 + x3752 - x3753 + x3756)
    x3758 = x3756 * x5
    x3759 = x1863 - x3752 + x3753
    x3760 = x3 * x3759
    x3761 = x3758 - x3760
    x3762 = x3761 * x5
    x3763 = x3759 * x5
    x3764 = x1256 * x2896
    x3765 = x2918 * x7
    x3766 = x1877 + x3764 - x3765
    x3767 = x3 * x3766
    x3768 = x3763 - x3767
    x3769 = x3 * x3768
    x3770 = x3757 + x3762 - x3769
    x3771 = x3 * x3770
    x3772 = x1256 * x2881
    x3773 = x2878 * x7
    x3774 = x1896 + x3772 - x3773
    x3775 = x4 * (x1910 - x3754 + x3755 + x3774)
    x3776 = x3774 * x5
    x3777 = x3 * x3756
    x3778 = x3776 - x3777
    x3779 = x3778 * x5
    x3780 = x3 * x3761
    x3781 = x3775 + x3779 - x3780
    x3782 = x3781 * x5
    x3783 = x37 * (-x3758 + x3760 + x3778)
    x3784 = x1256 * x2904 + x1919 - x2881 * x7
    x3785 = -x3 * x3774 + x3784 * x5
    x3786 = x4 * (x1926 - x3772 + x3773 + x3784)
    x3787 = -x3 * x3778 + x3785 * x5 + x3786
    x3788 = -x3 * x3781 + x37 * (-x3776 + x3777 + x3785) + x3787 * x5
    x3789 = -x3775
    x3790 = -x3771 + x3782 + x3783
    x3791 = -x3757
    x3792 = x4 * (x1938 + x3759 - x3764 + x3765)
    x3793 = x1256 * x2918 + x1939 - x2932 * x7
    x3794 = x1256 * x2938
    x3795 = x2944 * x7
    x3796 = x1947 + x2892 + x3794 - x3795
    x3797 = x3796 * x5
    x3798 = x1256 * x2944
    x3799 = x2960 * x7
    x3800 = x1964 + x2914 + x3798 - x3799
    x3801 = x3 * x3800
    x3802 = x3797 - x3801
    x3803 = x3 * x3802
    x3804 = x1256 * x2935
    x3805 = x2938 * x7
    x3806 = x1988 + x2886 + x3804 - x3805
    x3807 = x4 * (x1998 + x2926 - x3794 + x3795 + x3806)
    x3808 = x3806 * x5
    x3809 = x3 * x3796
    x3810 = x3808 - x3809
    x3811 = x3810 * x5
    x3812 = x1256 * x2950 + x2005 + x2906 - x2935 * x7
    x3813 = x4 * (x2008 + x2909 - x3804 + x3805 + x3812)
    x3814 = -x3 * x3806 + x3812 * x5
    x3815 = -x3 * x3810 + x3813 + x3814 * x5
    x3816 = -x3803 + x3807 + x3811
    x3817 = x4 * (x2022 + x2930 + x3796 - x3798 + x3799)
    x3818 = x1256 * x2960 + x2023 + x2931 - x2970 * x7
    x3819 = x1256 * x2976
    x3820 = x2982 * x7
    x3821 = x2029 + x3819 - x3820
    x3822 = x3821 * x5
    x3823 = x1256 * x2982
    x3824 = x2998 * x7
    x3825 = x2043 + x3823 - x3824
    x3826 = x3 * x3825
    x3827 = x3822 - x3826
    x3828 = x3 * x3827
    x3829 = x1256 * x2973
    x3830 = x2976 * x7
    x3831 = x2063 + x3829 - x3830
    x3832 = x4 * (x2073 - x3819 + x3820 + x3831)
    x3833 = -x3832
    x3834 = x3831 * x5
    x3835 = x3 * x3821
    x3836 = x3834 - x3835
    x3837 = x3836 * x5
    x3838 = x1256 * x2988 + x2079 - x2973 * x7
    x3839 = x4 * (x2082 - x3829 + x3830 + x3838)
    x3840 = -x3 * x3831 + x3838 * x5
    x3841 = -x3 * x3836 + x3839 + x3840 * x5
    x3842 = -x3828 + x3832 + x3837
    x3843 = x4 * (x2096 + x3821 - x3823 + x3824)
    x3844 = x1256 * x2998 + x2097 - x3010 * x7
    x3845 = 2 * x2956
    x3846 = x1256 * x3015
    x3847 = x3026 * x7
    x3848 = x2112 + x3845 + x3846 - x3847
    x3849 = x3 * x3848
    x3850 = 2 * x2936
    x3851 = x1256 * x3012
    x3852 = x3015 * x7
    x3853 = x2134 + x3850 + x3851 - x3852
    x3854 = x3853 * x5
    x3855 = 2 * x2951
    x3856 = x1256 * x3019 + x2147 - x3012 * x7 + x3855
    x3857 = -x3 * x3853 + x3856 * x5
    x3858 = -x3850
    x3859 = x4 * (x2156 - x3851 + x3852 + x3856 + x3858)
    x3860 = -x3849 + x3854
    x3861 = -x3845
    x3862 = x4 * (x2159 - x3846 + x3847 + x3853 + x3861)
    x3863 = 2 * x2969
    x3864 = x1256 * x3026 + x2162 - x3034 * x7 + x3863
    x3865 = x1256 * x3039
    x3866 = x3050 * x7
    x3867 = x2177 + x2994 + x3865 - x3866
    x3868 = x3 * x3867
    x3869 = x1256 * x3036
    x3870 = x3039 * x7
    x3871 = x2198 + x2974 + x3869 - x3870
    x3872 = x3871 * x5
    x3873 = x1256 * x3043 + x2210 + x2989 - x3036 * x7
    x3874 = -x3 * x3871 + x3873 * x5
    x3875 = x4 * (x2219 + x3006 - x3869 + x3870 + x3873)
    x3876 = -x3868 + x3872
    x3877 = x4 * (x2222 + x3008 - x3865 + x3866 + x3871)
    x3878 = x1256 * x3050 + x2224 + x3009 - x3058 * x7
    x3879 = x1256 * x3063
    x3880 = x3074 * x7
    x3881 = x2235 + x3879 - x3880
    x3882 = x3 * x3881
    x3883 = x1256 * x3060
    x3884 = x3063 * x7
    x3885 = x2252 + x3883 - x3884
    x3886 = x3885 * x5
    x3887 = x1256 * x3067 + x2263 - x3060 * x7
    x3888 = -x3 * x3885 + x3887 * x5
    x3889 = x4 * (x2272 - x3883 + x3884 + x3887)
    x3890 = -x3882 + x3886
    x3891 = x4 * (x2275 - x3879 + x3880 + x3885)
    x3892 = x1256 * x3074 + x2277 - x3083 * x7
    x3893 = x3086 * x7
    x3894 = x1256 * x3089
    x3895 = 3 * x3030
    x3896 = x1256 * x3084 + x2285 + 3 * x3021 - x3089 * x7
    x3897 = x4 * (x2293 + x3893 - x3894 - x3895 + x3896)
    x3898 = x2292 - x3893 + x3894 + x3895
    x3899 = x1256 * x3086 + x2320 + 3 * x3033 - x3096 * x7
    x3900 = x3099 * x7
    x3901 = x1256 * x3102
    x3902 = 2 * x3054
    x3903 = -x3902
    x3904 = 2 * x3045
    x3905 = x1256 * x3097 + x2328 - x3102 * x7 + x3904
    x3906 = x4 * (x2335 + x3900 - x3901 + x3903 + x3905)
    x3907 = x2334 - x3900 + x3901 + x3902
    x3908 = 2 * x3057
    x3909 = x1256 * x3099 + x2361 - x3109 * x7 + x3908
    x3910 = x3112 * x7
    x3911 = x1256 * x3115
    x3912 = x1256 * x3110 + x2368 + x3069 - x3115 * x7
    x3913 = x4 * (x2374 + x3079 + x3910 - x3911 + x3912)
    x3914 = x2373 + x3078 - x3910 + x3911
    x3915 = x1256 * x3112 + x2399 + x3082 - x3122 * x7
    x3916 = x3125 * x7
    x3917 = x1256 * x3128
    x3918 = x1256 * x3123 + x2404 - x3128 * x7
    x3919 = x4 * (x2408 + x3916 - x3917 + x3918)
    x3920 = x2407 - x3916 + x3917
    x3921 = x1256 * x3125 + x2430 - x3135 * x7
    x3922 = x1256 * x3139 + x2448 + 4 * x3093 - x3141 * x7
    x3923 = x1256 * x3141 + x2451 + 4 * x3095 - x3142 * x7
    x3924 = x1256 * x3146 + x2470 + 3 * x3106 - x3148 * x7
    x3925 = x1256 * x3148 + x2473 + 3 * x3108 - x3149 * x7
    x3926 = 2 * x3119
    x3927 = x1256 * x3153 + x2490 - x3155 * x7 + x3926
    x3928 = 2 * x3121
    x3929 = x1256 * x3155 + x2493 - x3156 * x7 + x3928
    x3930 = x1256 * x3159 + x2509 + x3132 - x3161 * x7
    x3931 = x1256 * x3161 + x2511 + x3134 - x3162 * x7
    x3932 = x1256 * x3165 + x2526 - x3167 * x7
    x3933 = x1256 * x3167 + x2528 - x3168 * x7
    x3934 = x1256 * x3171
    x3935 = x1256 * x3175
    x3936 = x3241 + x3935
    x3937 = x4 * (x3248 - x3934 + x3936)
    x3938 = x3936 * x5
    x3939 = x3249 + x3934
    x3940 = x3 * x3939
    x3941 = x3938 - x3940
    x3942 = x3941 * x5
    x3943 = x3939 * x5
    x3944 = x1256 * x3195
    x3945 = x3268 + x3944
    x3946 = x3 * x3945
    x3947 = x3943 - x3946
    x3948 = x3 * x3947
    x3949 = x3937 + x3942 - x3948
    x3950 = x3 * x3949
    x3951 = x1256 * x3179
    x3952 = x3237 + x3951
    x3953 = x4 * (x3233 - x3935 + x3952)
    x3954 = x3952 * x5
    x3955 = x3 * x3936
    x3956 = x3954 - x3955
    x3957 = x3956 * x5
    x3958 = x3 * x3941
    x3959 = x3953 + x3957 - x3958
    x3960 = x3959 * x5
    x3961 = x37 * (-x3938 + x3940 + x3956)
    x3962 = x1256 * x3203 + x3256
    x3963 = -x3 * x3952 + x3962 * x5
    x3964 = x4 * (x3236 - x3951 + x3962)
    x3965 = -x3 * x3956 + x3963 * x5 + x3964
    x3966 = -x3 * x3959 + x37 * (-x3954 + x3955 + x3963) + x3965 * x5
    x3967 = -x3953
    x3968 = -x3950 + x3960 + x3961
    x3969 = -x3937
    x3970 = x4 * (x3267 + x3939 - x3944)
    x3971 = x1256 * x3218 + x3281
    x3972 = x1256 * x3242
    x3973 = x3334 + x3972
    x3974 = x3973 * x5
    x3975 = x1256 * x3250
    x3976 = x3349 + x3975
    x3977 = x3 * x3976
    x3978 = x3974 - x3977
    x3979 = x3 * x3978
    x3980 = x1256 * x3238
    x3981 = x3329 + x3980
    x3982 = x4 * (x3354 - x3972 + x3981)
    x3983 = x3981 * x5
    x3984 = x3 * x3973
    x3985 = x3983 - x3984
    x3986 = x3985 * x5
    x3987 = x1256 * x3257 + x3339
    x3988 = x4 * (x3342 - x3980 + x3987)
    x3989 = -x3 * x3981 + x3987 * x5
    x3990 = -x3 * x3985 + x3988 + x3989 * x5
    x3991 = -x3979 + x3982 + x3986
    x3992 = x4 * (x3359 + x3973 - x3975)
    x3993 = x1256 * x3269 + x3361
    x3994 = x1256 * x3290
    x3995 = x3370 + x3994
    x3996 = x3995 * x5
    x3997 = x1256 * x3297
    x3998 = x3384 + x3997
    x3999 = x3 * x3998
    x4000 = x3996 - x3999
    x4001 = x3 * x4000
    x4002 = x1256 * x3287
    x4003 = x3365 + x4002
    x4004 = x4 * (x3369 - x3994 + x4003)
    x4005 = -x4004
    x4006 = x4003 * x5
    x4007 = x3 * x3995
    x4008 = x4006 - x4007
    x4009 = x4008 * x5
    x4010 = x1256 * x3303 + x3375
    x4011 = x4 * (x3364 - x4002 + x4010)
    x4012 = -x3 * x4003 + x4010 * x5
    x4013 = -x3 * x4008 + x4011 + x4012 * x5
    x4014 = -x4001 + x4004 + x4009
    x4015 = x4 * (x3383 + x3995 - x3997)
    x4016 = x1256 * x3314 + x3394
    x4017 = x1256 * x3335
    x4018 = x3437 + x4017
    x4019 = x3 * x4018
    x4020 = x1256 * x3330
    x4021 = x3443 + x4020
    x4022 = x4021 * x5
    x4023 = x1256 * x3340 + x3432
    x4024 = -x3 * x4021 + x4023 * x5
    x4025 = x4 * (x3448 - x4020 + x4023)
    x4026 = -x4019 + x4022
    x4027 = x4 * (x3451 - x4017 + x4021)
    x4028 = x1256 * x3350 + x3453
    x4029 = x1256 * x3371
    x4030 = x3459 + x4029
    x4031 = x3 * x4030
    x4032 = x1256 * x3366
    x4033 = x3464 + x4032
    x4034 = x4033 * x5
    x4035 = x1256 * x3376 + x3455
    x4036 = -x3 * x4033 + x4035 * x5
    x4037 = x4 * (x3469 - x4032 + x4035)
    x4038 = -x4031 + x4034
    x4039 = x4 * (x3472 - x4029 + x4033)
    x4040 = x1256 * x3385 + x3474
    x4041 = x1256 * x3404
    x4042 = x3480 + x4041
    x4043 = x3 * x4042
    x4044 = x1256 * x3399
    x4045 = x3485 + x4044
    x4046 = x4045 * x5
    x4047 = x1256 * x3409 + x3476
    x4048 = -x3 * x4045 + x4047 * x5
    x4049 = x4 * (x3484 - x4044 + x4047)
    x4050 = -x4043 + x4046
    x4051 = x4 * (x3479 - x4041 + x4045)
    x4052 = x1256 * x3419 + x3493
    x4053 = x1256 * x3444
    x4054 = x1256 * x3433 + x3513
    x4055 = x4 * (x3517 - x4053 + x4054)
    x4056 = x3519 + x4053
    x4057 = x1256 * x3438 + x3521
    x4058 = x1256 * x3465
    x4059 = x1256 * x3456 + x3524
    x4060 = x4 * (x3528 - x4058 + x4059)
    x4061 = x3530 + x4058
    x4062 = x1256 * x3460 + x3532
    x4063 = x1256 * x3486
    x4064 = x1256 * x3477 + x3535
    x4065 = x4 * (x3538 - x4063 + x4064)
    x4066 = x3540 + x4063
    x4067 = x1256 * x3481 + x3542
    x4068 = x1256 * x3504
    x4069 = x1256 * x3495 + x3546
    x4070 = x4 * (x3544 - x4068 + x4069)
    x4071 = x3549 + x4068
    x4072 = x1256 * x3499 + x3551
    x4073 = x1256 * x3514 + 4 * x3449 - x3520 * x7
    x4074 = x1256 * x3520 + 4 * x3452 - x3522 * x7
    x4075 = x1256 * x3525 + 3 * x3470 - x3531 * x7
    x4076 = x1256 * x3531 + 3 * x3473 - x3533 * x7
    x4077 = x1256 * x3536 + 2 * x3490 - x3541 * x7
    x4078 = x1256 * x3541 + 2 * x3492 - x3543 * x7
    x4079 = x1256 * x3547 + x3508 - x3550 * x7
    x4080 = x1256 * x3550 + x3510 - x3552 * x7
    x4081 = x1256 * x3556 - x3558 * x7
    x4082 = x1256 * x3558 - x3559 * x7
    x4083 = x3195 * x9
    x4084 = x1844 * x3171
    x4085 = 2 * x1863
    x4086 = 2 * x1857
    x4087 = x1844 * x3175
    x4088 = x3171 * x9
    x4089 = x4086 + x4087 - x4088
    x4090 = x4 * (x4083 - x4084 - x4085 + x4089)
    x4091 = x4089 * x5
    x4092 = -x4083 + x4084 + x4085
    x4093 = x3 * x4092
    x4094 = x4091 - x4093
    x4095 = x4094 * x5
    x4096 = x4092 * x5
    x4097 = 2 * x1877
    x4098 = x1844 * x3195
    x4099 = x3218 * x9
    x4100 = x4097 + x4098 - x4099
    x4101 = x3 * x4100
    x4102 = x4096 - x4101
    x4103 = x3 * x4102
    x4104 = x4090 + x4095 - x4103
    x4105 = x3 * x4104
    x4106 = 2 * x1896
    x4107 = x1844 * x3179
    x4108 = x3175 * x9
    x4109 = x4106 + x4107 - x4108
    x4110 = x4 * (-x4086 - x4087 + x4088 + x4109)
    x4111 = x4109 * x5
    x4112 = x3 * x4089
    x4113 = x4111 - x4112
    x4114 = x4113 * x5
    x4115 = x3 * x4094
    x4116 = x4110 + x4114 - x4115
    x4117 = x4116 * x5
    x4118 = x37 * (-x4091 + x4093 + x4113)
    x4119 = x1844 * x3203 + 2 * x1919 - x3179 * x9
    x4120 = -x3 * x4109 + x4119 * x5
    x4121 = x4 * (-x4106 - x4107 + x4108 + x4119)
    x4122 = -x3 * x4113 + x4120 * x5 + x4121
    x4123 = -x3 * x4116 + x37 * (-x4111 + x4112 + x4120) + x4122 * x5
    x4124 = -x4110
    x4125 = -x4105 + x4117 + x4118
    x4126 = -x4090
    x4127 = x4 * (x4092 - x4097 - x4098 + x4099)
    x4128 = x1844 * x3218 + 2 * x1939 - x3232 * x9
    x4129 = x170 * x4089
    x4130 = x4092 * x7
    x4131 = -x4130
    x4132 = x4129 + x4131
    x4133 = x4132 * x5
    x4134 = x170 * x4092
    x4135 = x4100 * x7
    x4136 = -x4135
    x4137 = x4134 + x4136
    x4138 = x3 * x4137
    x4139 = x4133 - x4138
    x4140 = x3 * x4139
    x4141 = x170 * x4109
    x4142 = x4089 * x7
    x4143 = -x4142
    x4144 = x4141 + x4143
    x4145 = x4 * (-x4129 + x4130 + x4144)
    x4146 = x4144 * x5
    x4147 = x3 * x4132
    x4148 = x4146 - x4147
    x4149 = x4148 * x5
    x4150 = -x4109 * x7
    x4151 = x170 * x4119 + x4150
    x4152 = x4 * (-x4141 + x4142 + x4151)
    x4153 = -x3 * x4144 + x4151 * x5
    x4154 = -x3 * x4148 + x4152 + x4153 * x5
    x4155 = -x4140 + x4145 + x4149
    x4156 = x4 * (x4132 - x4134 + x4135)
    x4157 = -x4128 * x7
    x4158 = x170 * x4100 + x4157
    x4159 = x1844 * x3290
    x4160 = x3297 * x9
    x4161 = x3190 + x3401 + x4159 - x4160
    x4162 = x4161 * x5
    x4163 = x1844 * x3297
    x4164 = x3314 * x9
    x4165 = x3213 + x3416 + x4163 - x4164
    x4166 = x3 * x4165
    x4167 = x4162 - x4166
    x4168 = x3 * x4167
    x4169 = x1844 * x3287
    x4170 = x3290 * x9
    x4171 = x3184 + x3396 + x4169 - x4170
    x4172 = x4 * (x3226 + x3423 - x4159 + x4160 + x4171)
    x4173 = -x4172
    x4174 = x4171 * x5
    x4175 = x3 * x4161
    x4176 = x4174 - x4175
    x4177 = x4176 * x5
    x4178 = x1844 * x3303 + x3205 - x3287 * x9 + x3408
    x4179 = x4 * (x3208 + x3411 - x4169 + x4170 + x4178)
    x4180 = -x3 * x4171 + x4178 * x5
    x4181 = -x3 * x4176 + x4179 + x4180 * x5
    x4182 = -x4168 + x4172 + x4177
    x4183 = x4 * (x3230 + x3428 + x4161 - x4163 + x4164)
    x4184 = x1844 * x3314 + x3231 - x3326 * x9 + x3430
    x4185 = x170 * x4132
    x4186 = x4137 * x7
    x4187 = x4090 - x4186
    x4188 = x4185 + x4187
    x4189 = x3 * x4188
    x4190 = x170 * x4144
    x4191 = x4132 * x7
    x4192 = x4110 - x4191
    x4193 = x4190 + x4192
    x4194 = x4193 * x5
    x4195 = x4121 - x4144 * x7
    x4196 = x170 * x4151 + x4195
    x4197 = -x3 * x4193 + x4196 * x5
    x4198 = x4124 + x4191
    x4199 = x4 * (-x4190 + x4196 + x4198)
    x4200 = -x4189 + x4194
    x4201 = x4126 + x4186
    x4202 = x4 * (-x4185 + x4193 + x4201)
    x4203 = x4127 - x4158 * x7
    x4204 = x170 * x4137 + x4203
    x4205 = x170 * x4161
    x4206 = x4165 * x7
    x4207 = -x4206
    x4208 = x4205 + x4207
    x4209 = x3 * x4208
    x4210 = x170 * x4171
    x4211 = x4161 * x7
    x4212 = -x4211
    x4213 = x4210 + x4212
    x4214 = x4213 * x5
    x4215 = -x4171 * x7
    x4216 = x170 * x4178 + x4215
    x4217 = -x3 * x4213 + x4216 * x5
    x4218 = x4 * (-x4210 + x4211 + x4216)
    x4219 = -x4209 + x4214
    x4220 = x4 * (-x4205 + x4206 + x4213)
    x4221 = -x4184 * x7
    x4222 = x170 * x4165 + x4221
    x4223 = 2 * x2235
    x4224 = 2 * x3309
    x4225 = x1844 * x3404
    x4226 = x3419 * x9
    x4227 = x4223 + x4224 + x4225 - x4226
    x4228 = x3 * x4227
    x4229 = 2 * x2252
    x4230 = 2 * x3288
    x4231 = x1844 * x3399
    x4232 = x3404 * x9
    x4233 = x4229 + x4230 + x4231 - x4232
    x4234 = x4233 * x5
    x4235 = x1844 * x3409 + 2 * x2263 + 2 * x3304 - x3399 * x9
    x4236 = -x3 * x4233 + x4235 * x5
    x4237 = x4 * (-x4229 - x4230 - x4231 + x4232 + x4235)
    x4238 = -x4228 + x4234
    x4239 = x4 * (-x4223 - x4224 - x4225 + x4226 + x4233)
    x4240 = x1844 * x3419 + 2 * x2277 + 2 * x3325 - x3431 * x9
    x4241 = x170 * x4193
    x4242 = 2 * x4152 - x4193 * x7
    x4243 = x170 * x4196 + x4242
    x4244 = x4188 * x7
    x4245 = 2 * x4145
    x4246 = x4244 - x4245
    x4247 = x4 * (-x4241 + x4243 + x4246)
    x4248 = -x4244 + x4245
    x4249 = x4241 + x4248
    x4250 = 2 * x4156 - x4204 * x7
    x4251 = x170 * x4188 + x4250
    x4252 = x170 * x4213
    x4253 = x4179 - x4213 * x7
    x4254 = x170 * x4216 + x4253
    x4255 = x4208 * x7
    x4256 = x4173 + x4255
    x4257 = x4 * (-x4252 + x4254 + x4256)
    x4258 = x4172 - x4255
    x4259 = x4252 + x4258
    x4260 = x4183 - x4222 * x7
    x4261 = x170 * x4208 + x4260
    x4262 = x4227 * x7
    x4263 = x170 * x4233
    x4264 = -x4233 * x7
    x4265 = x170 * x4235 + x4264
    x4266 = x4 * (x4262 - x4263 + x4265)
    x4267 = -x4262
    x4268 = x4263 + x4267
    x4269 = -x4240 * x7
    x4270 = x170 * x4227 + x4269
    x4271 = x3499 * x9
    x4272 = x1844 * x3504
    x4273 = 3 * x3424
    x4274 = -x4273
    x4275 = 2 * x2407
    x4276 = 3 * x3412
    x4277 = x1844 * x3495 + 2 * x2404 - x3504 * x9 + x4276
    x4278 = x4 * (x4271 - x4272 + x4274 - x4275 + x4277)
    x4279 = -x4271 + x4272 + x4273 + x4275
    x4280 = 3 * x3429
    x4281 = x1844 * x3499 + 2 * x2430 - x3511 * x9 + x4280
    x4282 = 3 * x4199 - x4249 * x7
    x4283 = x170 * x4243 + x4282
    x4284 = 3 * x4202 - x4251 * x7
    x4285 = x170 * x4249 + x4284
    x4286 = 2 * x4218 - x4259 * x7
    x4287 = x170 * x4254 + x4286
    x4288 = 2 * x4220 - x4261 * x7
    x4289 = x170 * x4259 + x4288
    x4290 = x4237 - x4268 * x7
    x4291 = x170 * x4265 + x4290
    x4292 = x4239 - x4270 * x7
    x4293 = x170 * x4268 + x4292
    x4294 = -x4279 * x7
    x4295 = x170 * x4277 + x4294
    x4296 = -x4281 * x7
    x4297 = x170 * x4279 + x4296
    x4298 = x1844 * x3556 + 2 * x2526 + 4 * x3508 - x3558 * x9
    x4299 = x1844 * x3558 + 2 * x2528 + 4 * x3510 - x3559 * x9
    x4300 = 3 * x2551
    x4301 = x1256 * x3566
    x4302 = x3569 * x7
    x4303 = x4300 + x4301 - x4302
    x4304 = x4303 * x5
    x4305 = 3 * x2574
    x4306 = x1256 * x3569
    x4307 = x3577 * x7
    x4308 = x4305 + x4306 - x4307
    x4309 = x3 * x4308
    x4310 = x4304 - x4309
    x4311 = x3 * x4310
    x4312 = 3 * x2545
    x4313 = x1256 * x3586
    x4314 = x3566 * x7
    x4315 = x4312 + x4313 - x4314
    x4316 = x4 * (-x4300 - x4301 + x4302 + x4315)
    x4317 = x4315 * x5
    x4318 = x3 * x4303
    x4319 = x4317 - x4318
    x4320 = x4319 * x5
    x4321 = x1256 * x3596 + 3 * x2566 - x3586 * x7
    x4322 = -x3 * x4315 + x4321 * x5
    x4323 = -x3 * x4319 + x4 * (-x4312 - x4313 + x4314 + x4321) + x4322 * x5
    x4324 = -x4311 + x4316 + x4320
    x4325 = 3 * x2620
    x4326 = x1256 * x3608
    x4327 = x3612 * x7
    x4328 = x3567 + x4325 + x4326 - x4327
    x4329 = x3 * x4328
    x4330 = 3 * x2599
    x4331 = x1256 * x3618
    x4332 = x3608 * x7
    x4333 = x3587 + x4330 + x4331 - x4332
    x4334 = x4333 * x5
    x4335 = x1256 * x3624 + 3 * x2615 + x3598 - x3618 * x7
    x4336 = -x3 * x4333 + x4335 * x5
    x4337 = -x4329 + x4334
    x4338 = 3 * x2662
    x4339 = x1256 * x3634
    x4340 = x3639 * x7
    x4341 = x4338 + x4339 - x4340
    x4342 = x3 * x4341
    x4343 = 3 * x2641
    x4344 = x1256 * x3646
    x4345 = x3634 * x7
    x4346 = x4343 + x4344 - x4345
    x4347 = x4346 * x5
    x4348 = x1256 * x3653 + 3 * x2657 - x3646 * x7
    x4349 = -x3 * x4346 + x4348 * x5
    x4350 = -x4342 + x4347
    x4351 = x3664 * x7
    x4352 = x1256 * x3670
    x4353 = 2 * x3619
    x4354 = x1256 * x3672 + 2 * x3625 - x3670 * x7 + x3713
    x4355 = x3710 - x4351 + x4352 + x4353
    x4356 = x3680 * x7
    x4357 = x1256 * x3684
    x4358 = 3 * x2737
    x4359 = x1256 * x3686 + 3 * x2727 + x3654 - x3684 * x7
    x4360 = x3647 - x4356 + x4357 + x4358
    x4361 = x3695 * x7
    x4362 = x1256 * x3700
    x4363 = 3 * x2764
    x4364 = x1256 * x3702 + 3 * x2754 - x3700 * x7
    x4365 = -x4361 + x4362 + x4363
    x4366 = 2 * x2892
    x4367 = x1256 * x3756
    x4368 = x3759 * x7
    x4369 = x4366 + x4367 - x4368
    x4370 = x4369 * x5
    x4371 = 2 * x2914
    x4372 = x1256 * x3759
    x4373 = x3766 * x7
    x4374 = x4371 + x4372 - x4373
    x4375 = x3 * x4374
    x4376 = x4370 - x4375
    x4377 = x3 * x4376
    x4378 = 2 * x2886
    x4379 = x1256 * x3774
    x4380 = x3756 * x7
    x4381 = x4378 + x4379 - x4380
    x4382 = x4 * (-x4366 - x4367 + x4368 + x4381)
    x4383 = x4381 * x5
    x4384 = x3 * x4369
    x4385 = x4383 - x4384
    x4386 = x4385 * x5
    x4387 = x1256 * x3784 + 2 * x2906 - x3774 * x7
    x4388 = -x3 * x4381 + x4387 * x5
    x4389 = -x3 * x4385 + x4 * (-x4378 - x4379 + x4380 + x4387) + x4388 * x5
    x4390 = -x4377 + x4382 + x4386
    x4391 = x1256 * x3796
    x4392 = x3800 * x7
    x4393 = x3757 + x3845 + x4391 - x4392
    x4394 = x3 * x4393
    x4395 = x1256 * x3806
    x4396 = x3796 * x7
    x4397 = x3775 + x3850 + x4395 - x4396
    x4398 = x4397 * x5
    x4399 = x1256 * x3812 + x3786 - x3806 * x7 + x3855
    x4400 = -x3 * x4397 + x4399 * x5
    x4401 = -x4394 + x4398
    x4402 = 2 * x2994
    x4403 = x1256 * x3821
    x4404 = x3825 * x7
    x4405 = x4402 + x4403 - x4404
    x4406 = x3 * x4405
    x4407 = 2 * x2974
    x4408 = x1256 * x3831
    x4409 = x3821 * x7
    x4410 = x4407 + x4408 - x4409
    x4411 = x4410 * x5
    x4412 = x1256 * x3838 + 2 * x2989 - x3831 * x7
    x4413 = -x3 * x4410 + x4412 * x5
    x4414 = -x4406 + x4411
    x4415 = x3848 * x7
    x4416 = x1256 * x3853
    x4417 = 2 * x3030
    x4418 = 2 * x3807
    x4419 = x1256 * x3856 + 2 * x3021 + 2 * x3813 - x3853 * x7
    x4420 = -x4415 + x4416 + x4417 + x4418
    x4421 = x3867 * x7
    x4422 = x1256 * x3871
    x4423 = x1256 * x3873 + x3839 - x3871 * x7 + x3904
    x4424 = x3832 + x3902 - x4421 + x4422
    x4425 = x3881 * x7
    x4426 = x1256 * x3885
    x4427 = 2 * x3078
    x4428 = x1256 * x3887 + 2 * x3069 - x3885 * x7
    x4429 = -x4425 + x4426 + x4427
    x4430 = x1256 * x3936
    x4431 = x3939 * x7
    x4432 = x3190 + x4430 - x4431
    x4433 = x4432 * x5
    x4434 = x1256 * x3939
    x4435 = x3945 * x7
    x4436 = x3213 + x4434 - x4435
    x4437 = x3 * x4436
    x4438 = x4433 - x4437
    x4439 = x3 * x4438
    x4440 = x1256 * x3952
    x4441 = x3936 * x7
    x4442 = x3184 + x4440 - x4441
    x4443 = x4 * (x3226 - x4430 + x4431 + x4442)
    x4444 = x4442 * x5
    x4445 = x3 * x4432
    x4446 = x4444 - x4445
    x4447 = x4446 * x5
    x4448 = x1256 * x3962 + x3205 - x3952 * x7
    x4449 = -x3 * x4442 + x4448 * x5
    x4450 = -x3 * x4446 + x4 * (x3208 - x4440 + x4441 + x4448) + x4449 * x5
    x4451 = -x4439 + x4443 + x4447
    x4452 = x1256 * x3973
    x4453 = x3976 * x7
    x4454 = x3263 + x3937 + x4452 - x4453
    x4455 = x3 * x4454
    x4456 = x1256 * x3981
    x4457 = x3973 * x7
    x4458 = x3239 + x3953 + x4456 - x4457
    x4459 = x4458 * x5
    x4460 = x1256 * x3987 + x3258 + x3964 - x3981 * x7
    x4461 = -x3 * x4458 + x4460 * x5
    x4462 = -x4455 + x4459
    x4463 = x1256 * x3995
    x4464 = x3998 * x7
    x4465 = x3309 + x4463 - x4464
    x4466 = x3 * x4465
    x4467 = x1256 * x4003
    x4468 = x3995 * x7
    x4469 = x3288 + x4467 - x4468
    x4470 = x4469 * x5
    x4471 = x1256 * x4010 + x3304 - x4003 * x7
    x4472 = -x3 * x4469 + x4471 * x5
    x4473 = -x4466 + x4470
    x4474 = x4018 * x7
    x4475 = x1256 * x4021
    x4476 = 2 * x3982
    x4477 = x1256 * x4023 + x3343 + 2 * x3988 - x4021 * x7
    x4478 = x3355 - x4474 + x4475 + x4476
    x4479 = x4030 * x7
    x4480 = x1256 * x4033
    x4481 = x1256 * x4035 + x3378 + x4011 - x4033 * x7
    x4482 = x3389 + x4004 - x4479 + x4480
    x4483 = x4042 * x7
    x4484 = x1256 * x4045
    x4485 = x1256 * x4047 + x3412 - x4045 * x7
    x4486 = x3424 - x4483 + x4484
    x4487 = x1256 * x4089
    x4488 = x4131 + x4487
    x4489 = x4488 * x5
    x4490 = x1256 * x4092
    x4491 = x4136 + x4490
    x4492 = x3 * x4491
    x4493 = x4489 - x4492
    x4494 = x3 * x4493
    x4495 = x1256 * x4109
    x4496 = x4143 + x4495
    x4497 = x4 * (x4130 - x4487 + x4496)
    x4498 = x4496 * x5
    x4499 = x3 * x4488
    x4500 = x4498 - x4499
    x4501 = x4500 * x5
    x4502 = x1256 * x4119 + x4150
    x4503 = -x3 * x4496 + x4502 * x5
    x4504 = -x3 * x4500 + x4 * (x4142 - x4495 + x4502) + x4503 * x5
    x4505 = -x4494 + x4497 + x4501
    x4506 = x1256 * x4132
    x4507 = x4187 + x4506
    x4508 = x3 * x4507
    x4509 = x1256 * x4144
    x4510 = x4192 + x4509
    x4511 = x4510 * x5
    x4512 = x1256 * x4151 + x4195
    x4513 = -x3 * x4510 + x4512 * x5
    x4514 = -x4508 + x4511
    x4515 = x1256 * x4161
    x4516 = x4207 + x4515
    x4517 = x3 * x4516
    x4518 = x1256 * x4171
    x4519 = x4212 + x4518
    x4520 = x4519 * x5
    x4521 = x1256 * x4178 + x4215
    x4522 = -x3 * x4519 + x4521 * x5
    x4523 = -x4517 + x4520
    x4524 = x1256 * x4193
    x4525 = x1256 * x4196 + x4242
    x4526 = x4248 + x4524
    x4527 = x1256 * x4213
    x4528 = x1256 * x4216 + x4253
    x4529 = x4258 + x4527
    x4530 = x1256 * x4233
    x4531 = x1256 * x4235 + x4264
    x4532 = x4267 + x4530
    x4533 = 3 * x3190
    x4534 = x1844 * x4089
    x4535 = x4092 * x9
    x4536 = x4533 + x4534 - x4535
    x4537 = x4536 * x5
    x4538 = 3 * x3213
    x4539 = x1844 * x4092
    x4540 = x4100 * x9
    x4541 = x4538 + x4539 - x4540
    x4542 = x3 * x4541
    x4543 = x4537 - x4542
    x4544 = x3 * x4543
    x4545 = 3 * x3184
    x4546 = x1844 * x4109
    x4547 = x4089 * x9
    x4548 = x4545 + x4546 - x4547
    x4549 = x4 * (-x4533 - x4534 + x4535 + x4548)
    x4550 = -x4549
    x4551 = x4548 * x5
    x4552 = x3 * x4536
    x4553 = x4551 - x4552
    x4554 = x4553 * x5
    x4555 = x1844 * x4119 + 3 * x3205 - x4109 * x9
    x4556 = x4 * (-x4545 - x4546 + x4547 + x4555)
    x4557 = -x3 * x4548 + x4555 * x5
    x4558 = -x3 * x4553 + x4556 + x4557 * x5
    x4559 = -x4544 + x4549 + x4554
    x4560 = x4 * (x4536 - x4538 - x4539 + x4540)
    x4561 = x1844 * x4100 + 3 * x3231 - x4128 * x9
    x4562 = x170 * x4536
    x4563 = x4541 * x7
    x4564 = x4562 - x4563
    x4565 = x3 * x4564
    x4566 = x170 * x4548
    x4567 = x4536 * x7
    x4568 = x4566 - x4567
    x4569 = x4568 * x5
    x4570 = x170 * x4555 - x4548 * x7
    x4571 = -x3 * x4568 + x4570 * x5
    x4572 = x4 * (-x4566 + x4567 + x4570)
    x4573 = -x4565 + x4569
    x4574 = x4 * (-x4562 + x4563 + x4568)
    x4575 = x170 * x4541 - x4561 * x7
    x4576 = 3 * x3309
    x4577 = x1844 * x4161
    x4578 = x4165 * x9
    x4579 = x4090 + x4576 + x4577 - x4578
    x4580 = x3 * x4579
    x4581 = 3 * x3288
    x4582 = x1844 * x4171
    x4583 = x4161 * x9
    x4584 = x4110 + x4581 + x4582 - x4583
    x4585 = x4584 * x5
    x4586 = x1844 * x4178 + 3 * x3304 + x4121 - x4171 * x9
    x4587 = -x3 * x4584 + x4586 * x5
    x4588 = x4 * (x4124 - x4581 - x4582 + x4583 + x4586)
    x4589 = -x4580 + x4585
    x4590 = x4 * (x4126 - x4576 - x4577 + x4578 + x4584)
    x4591 = x1844 * x4165 + 3 * x3325 + x4127 - x4184 * x9
    x4592 = x4564 * x7
    x4593 = x170 * x4568
    x4594 = x170 * x4570 + x4556 - x4568 * x7
    x4595 = x4 * (x4550 + x4592 - x4593 + x4594)
    x4596 = x4549 - x4592 + x4593
    x4597 = x170 * x4564 + x4560 - x4575 * x7
    x4598 = x4579 * x7
    x4599 = x170 * x4584
    x4600 = x170 * x4586 - x4584 * x7
    x4601 = x4 * (x4598 - x4599 + x4600)
    x4602 = -x4598 + x4599
    x4603 = x170 * x4579 - x4591 * x7
    x4604 = x4227 * x9
    x4605 = x1844 * x4233
    x4606 = 2 * x4172
    x4607 = x1844 * x4235 + 2 * x4179 - x4233 * x9 + x4276
    x4608 = x4 * (x4274 + x4604 - x4605 - x4606 + x4607)
    x4609 = x4273 - x4604 + x4605 + x4606
    x4610 = x1844 * x4227 + 2 * x4183 - x4240 * x9 + x4280
    x4611 = x170 * x4594 + 2 * x4572 - x4596 * x7
    x4612 = x170 * x4596 + 2 * x4574 - x4597 * x7
    x4613 = x170 * x4600 + x4588 - x4602 * x7
    x4614 = x170 * x4602 + x4590 - x4603 * x7
    x4615 = x170 * x4607 - x4609 * x7
    x4616 = x170 * x4609 - x4610 * x7
    x4617 = x1844 * x4277 + 3 * x3508 + 3 * x4237 - x4279 * x9
    x4618 = x1844 * x4279 + 3 * x3510 + 3 * x4239 - x4281 * x9

    # 225 item(s)
    return numpy.array(
        [
            x123
            * (
                -x122 * x37
                + x139 * x37
                + x155 * x54
                - x164 * x3
                - x164 * x54
                + x3 * (x156 + x158 - x160 + x52)
                + x81
                * (
                    -x106
                    + x134
                    - x146
                    + x147 * x54
                    + x150
                    - x152 * x3
                    - x153
                    + x37 * (x126 * x54 + x128 + x133 - x144)
                )
                - x81
                * (
                    x106
                    + x146
                    - x149 * x54
                    - x150
                    + x153
                    + x3 * (x154 + x56)
                    - x37 * (x145 - x17 * x54 + x33 + x60)
                    - x61
                )
            )
            - x3
            * (
                x123 * (-x156 - x158 + x160 + x164 - x52)
                + x165 * x54
                - x3
                * (
                    x123 * (x157 - x159 + x166)
                    - x3
                    * (
                        x123 * (x57 - x67 - x68 + x77)
                        - x3
                        * (
                            -x3
                            * (
                                -x3 * (x168 - x3 * (-x169 * x3 + x5 * x72) + x5 * x74)
                                + x37 * (x46 - x71 + x73)
                                + x5 * x76
                            )
                            + x5 * x78
                            + x81 * (x167 + x48 - x70 + x75)
                        )
                        + x54 * x84
                    )
                    + x4 * (x166 + x64 - x66)
                    + x54 * x86
                )
                + x37 * (x117 - x53 - x65 + x85)
            )
            + x54
            * (
                x123 * (-x113 + x155 - x161 - x162 + x163)
                + x143 * x54
                - x165 * x3
                + x37 * (-x114 - x115 + x116 + x142)
            )
            + x81 * (-x111 - x118 - x124 + x143 + x87),
            -x3
            * (
                -x3
                * (
                    x235 * x54
                    - x3
                    * (
                        x233 * x54
                        - x3
                        * (
                            x229 * x5
                            - x3 * (x227 * x5 - x3 * (x225 * x5 - x3 * x315) + x313)
                            + x37 * (x202 - x221 + x226)
                        )
                        + x81 * (x211 - x220 + x228 + x312)
                    )
                    + x4 * (x216 - x218 + x311)
                    + x81 * (x302 - x304 + x311)
                )
                + x310 * x54
                + x37 * (-x208 - x217 + x234 + x264)
                + x81 * (-x207 - x301 - x303 + x305 + x309)
            )
            + x54
            * (
                x288 * x54
                - x3 * x310
                + x37 * (-x261 - x262 + x263 + x287)
                + x81 * (-x260 + x300 - x306 - x307 + x308)
            )
            + x81 * (x236 - x257 - x265 - x270 + x288)
            + x81
            * (
                -x269 * x37
                + x283 * x37
                - x3 * x309
                + x3 * (x207 + x301 + x303 - x305)
                + x300 * x54
                - x309 * x54
                - x37
                * (
                    -x213
                    + x252
                    + x291
                    - x294 * x54
                    - x295
                    + x298
                    + x3 * (x210 + x299)
                    - x4 * (-x174 * x54 + x180 + x189 + x290)
                )
                + x37
                * (
                    -x252
                    + x278
                    - x291
                    + x292 * x54
                    + x295
                    - x297 * x3
                    - x298
                    + x4 * (x242 + x272 * x54 + x273 - x289)
                )
            ),
            -x3
            * (
                -x3
                * (
                    -x3
                    * (
                        -x3
                        * (
                            -x3 * (-x3 * (-x3 * x461 + x371 * x5) + x373 * x5 + x459)
                            + x37 * (x348 - x367 + x372)
                            + x375 * x5
                        )
                        + x379 * x54
                        + x81 * (x357 - x366 + x374 + x458)
                    )
                    + x381 * x54
                    + x4 * (x362 - x364 + x457)
                    + x81 * (x448 - x450 + x457)
                )
                + x37 * (-x354 - x363 + x380 + x410)
                + x456 * x54
                + x81 * (-x353 - x447 - x449 + x451 + x455)
            )
            + x54
            * (
                -x3 * x456
                + x37 * (-x407 - x408 + x409 + x433)
                + x434 * x54
                + x81 * (-x406 + x446 - x452 - x453 + x454)
            )
            + x81 * (x382 - x403 - x411 - x416 + x434)
            + x81
            * (
                -x3 * x455
                + x3 * (x353 + x447 + x449 - x451)
                - x37 * x415
                + x37 * x429
                + x37
                * (
                    -x3 * x443
                    - x398
                    + x4 * (x388 + x418 * x54 + x419 - x435)
                    + x424
                    - x437
                    + x438 * x54
                    + x441
                    - x444
                )
                - x37
                * (
                    x3 * (x356 + x445)
                    - x359
                    + x398
                    - x4 * (-x320 * x54 + x326 + x335 + x436)
                    + x437
                    - x440 * x54
                    - x441
                    + x444
                )
                + x446 * x54
                - x455 * x54
            ),
            -x3
            * (
                -x3
                * (
                    -x3
                    * (
                        -x3 * (-x3 * (-x3 * x574 + x5 * x517) + x5 * x519 + x572)
                        + x37 * (x496 - x513 + x518)
                        + x522 * x54
                    )
                    + x37 * (x560 - x562 + x570)
                    + x4 * (x508 - x510 + x570)
                    + x524 * x54
                )
                + x37 * (-x505 - x509 + x523 + x533)
                + x37 * (-x504 - x559 - x561 + x563 + x567)
                + x54 * x568
            )
            + x37
            * (
                -x3 * x567
                + x3 * (x504 + x559 + x561 - x563)
                + x4 * (-x3 * x555 + x54 * x550 + x540 + x543 + x553 - x556)
                - x4 * (x3 * (x495 + x557) + x485 + x500 - x54 * x552 - x553 + x556)
                + x503
                + x54 * x558
                - x54 * x567
                + x546
            )
            + x54
            * (
                -x3 * x568
                + x37 * (-x530 - x531 + x532 + x548)
                + x37 * (-x529 + x558 - x564 - x565 + x566)
                + x54 * x549
            )
            + x81 * (x503 + x525 - x528 - x534 + x549),
            -x3
            * (
                -x3
                * (
                    -x3
                    * (
                        -x3 * (-x3 * (-x3 * x682 + x5 * x627) + x5 * x629 + x680)
                        + x37 * (x608 - x623 + x628)
                        + x54 * x632
                    )
                    + x37 * (x669 - x671 + x679)
                    + x4 * (x619 - x621 + x679)
                    + x54 * x634
                )
                + x37 * (-x616 - x620 + x633 + x643)
                + x37 * (-x615 - x668 - x670 + x672 + x676)
                + x54 * x677
            )
            + x37
            * (
                -x3 * x676
                + x3 * (x615 + x668 + x670 - x672)
                + x4 * (-x3 * x664 + x54 * x659 + x649 + x652 + x662 - x665)
                - x4 * (x3 * (x607 + x666) - x54 * x661 + x597 + x611 - x662 + x665)
                + x54 * x667
                - x54 * x676
                + x614
                + x655
            )
            + x54
            * (
                -x3 * x677
                + x37 * (-x640 - x641 + x642 + x657)
                + x37 * (-x639 + x667 - x673 - x674 + x675)
                + x54 * x658
            )
            + x81 * (x614 + x635 - x638 - x644 + x658),
            -x3
            * (
                -x3
                * (
                    -x3
                    * (
                        -x3 * (-x3 * (-x3 * x795 + x5 * x738) + x5 * x740 + x793)
                        + x37 * (x717 - x734 + x739)
                        + x54 * x743
                    )
                    + x37 * (x781 - x783 + x791)
                    + x4 * (x729 - x731 + x791)
                    + x54 * x745
                )
                + x37 * (-x726 - x730 + x744 + x754)
                + x37 * (-x725 - x780 - x782 + x784 + x788)
                + x54 * x789
            )
            + x37
            * (
                -x3 * x788
                + x3 * (x725 + x780 + x782 - x784)
                + x4 * (-x3 * x776 + x54 * x771 + x761 + x764 + x774 - x777)
                - x4 * (x3 * (x716 + x778) - x54 * x773 + x706 + x721 - x774 + x777)
                + x54 * x779
                - x54 * x788
                + x724
                + x767
            )
            + x54
            * (
                -x3 * x789
                + x37 * (-x751 - x752 + x753 + x769)
                + x37 * (-x750 + x779 - x785 - x786 + x787)
                + x54 * x770
            )
            + x81 * (x724 + x746 - x749 - x755 + x770),
            -x3
            * (
                -x3
                * (
                    -x3 * (-x3 * (-x3 * x869 + x5 * x836) + x54 * x849 + x867)
                    + x4 * (x829 - x831 + x837)
                    + x4 * (x837 + x846 - x848)
                    + x54 * x851
                )
                + x37 * (-x847 + x850 + x858 + x865)
                + x4 * (-x830 + x839 + x844 + x865)
                + x54 * x864
            )
            + x4
            * (
                -x3 * x844
                + x3 * (x827 + x830 - x839)
                + x54 * x825
                - x54 * x844
                + 2 * x812
                - 2 * x822
            )
            + x54
            * (
                -x3 * x864
                + x37 * (-x856 + x857 + x861 + x863)
                + x4 * (x825 - x842 + x843 + x863)
                + x54 * x862
            )
            + x81 * (-x822 + x852 - x855 - x859 + x862),
            -x3
            * (
                -x3
                * (
                    -x3 * (-x3 * (-x3 * x939 + x5 * x906) + x54 * x919 + x937)
                    + x4 * (x900 - x902 + x907)
                    + x4 * (x907 + x916 - x918)
                    + x54 * x921
                )
                + x37 * (-x917 + x920 + x928 + x935)
                + x4 * (-x901 + x909 + x914 + x935)
                + x54 * x934
            )
            + x4
            * (
                -x3 * x914
                + x3 * (x898 + x901 - x909)
                + x54 * x896
                - x54 * x914
                + 2 * x884
                - 2 * x893
            )
            + x54
            * (
                -x3 * x934
                + x37 * (-x926 + x927 + x931 + x933)
                + x4 * (x896 - x912 + x913 + x933)
                + x54 * x932
            )
            + x81 * (-x893 + x922 - x925 - x929 + x932),
            -x3
            * (
                x1001 * x54
                - x3
                * (
                    -x3 * (x1003 - x3 * (-x1005 * x3 + x5 * x974) + x54 * x986)
                    + x4 * (x968 - x970 + x975)
                    + x4 * (x975 + x983 - x985)
                    + x54 * x988
                )
                + x37 * (x1002 - x984 + x987 + x995)
                + x4 * (x1002 - x969 + x977 + x981)
            )
            + x4
            * (
                -x3 * x981
                + x3 * (x966 + x969 - x977)
                + x54 * x965
                - x54 * x981
                + 2 * x954
                - 2 * x963
            )
            + x54
            * (
                -x1001 * x3
                + x37 * (x1000 - x993 + x994 + x998)
                + x4 * (x1000 + x965 - x979 + x980)
                + x54 * x999
            )
            + x81 * (-x963 + x989 - x992 - x996 + x999),
            -x3
            * (
                x1074 * x54
                - x3
                * (
                    x1061 * x54
                    - x3 * (x1059 * x54 + x1077 - x3 * (x1046 * x5 - x1079 * x3))
                    + x4 * (x1039 - x1041 + x1047)
                    + x4 * (x1047 + x1056 - x1058)
                )
                + x37 * (-x1057 + x1060 + x1068 + x1075)
                + x4 * (-x1040 + x1049 + x1054 + x1075)
            )
            + x4
            * (
                2 * x1022
                - 2 * x1032
                + x1035 * x54
                - x1054 * x3
                - x1054 * x54
                + x3 * (x1037 + x1040 - x1049)
            )
            + x54
            * (
                x1072 * x54
                - x1074 * x3
                + x37 * (-x1066 + x1067 + x1071 + x1073)
                + x4 * (x1035 - x1052 + x1053 + x1073)
            )
            + x81 * (-x1032 + x1062 - x1065 - x1069 + x1072),
            -x3
            * (
                x1112 * x54
                - x3 * (x1092 * x54 + x1114 - x3 * (x1090 * x54 - x1116 * x3))
                + x37 * (-x1085 + x1091 + x1104)
            )
            + x54 * (x1111 * x54 - x1112 * x3 + x37 * (-x1102 + x1103 + x1110))
            + x81 * (x1093 + x1101 - x1105 + x1111),
            -x3
            * (
                x1149 * x54
                - x3 * (x1129 * x54 + x1151 - x3 * (x1127 * x54 - x1153 * x3))
                + x37 * (-x1122 + x1128 + x1141)
            )
            + x54 * (x1148 * x54 - x1149 * x3 + x37 * (-x1139 + x1140 + x1147))
            + x81 * (x1130 + x1138 - x1142 + x1148),
            -x3
            * (
                x1183 * x54
                - x3 * (x1164 * x54 + x1185 - x3 * (x1162 * x54 - x1187 * x3))
                + x37 * (-x1158 + x1163 + x1175)
            )
            + x54 * (x1182 * x54 - x1183 * x3 + x37 * (-x1173 + x1174 + x1181))
            + x81 * (x1165 + x1172 - x1176 + x1182),
            -x3
            * (
                x1215 * x54
                - x3 * (x1198 * x54 + x1216 - x3 * (x1196 * x54 - x1218 * x3))
                + x37 * (-x1192 + x1197 + x1208)
            )
            + x54 * (x1214 * x54 - x1215 * x3 + x37 * (-x1206 + x1207 + x1213))
            + x81 * (x1199 + x1205 - x1209 + x1214),
            -x3
            * (
                x1251 * x54
                - x3 * (x1231 * x54 + x1253 - x3 * (x1229 * x54 - x1255 * x3))
                + x37 * (-x1224 + x1230 + x1243)
            )
            + x54 * (x1250 * x54 - x1251 * x3 + x37 * (-x1241 + x1242 + x1249))
            + x81 * (x1232 + x1240 - x1244 + x1250),
            x123
            * (
                -x1328
                + x1337
                + x1343 * x54
                - x1346 * x3
                - x1346 * x54
                + x3 * (x1303 + x1344)
                - x81 * (-x1273 * x54 + x1318 + x1327 + x1342)
                + x81 * (x1333 * x54 + x1334 + x1336 - x1342)
            )
            - x3
            * (
                x123 * (-x1344 + x1346 + x1349)
                + x1348 * x54
                - x3
                * (
                    x123 * (x1285 - x1287 - x1288 + x1298)
                    + x1304 * x54
                    - x3
                    * (
                        x1299 * x5
                        - x3
                        * (
                            x1297 * x5
                            - x3 * (x1295 * x5 + x1351 - x3 * (x1293 * x5 - x1352 * x3))
                            + x37 * (x1281 - x1291 + x1294)
                        )
                        + x81 * (x1283 - x1290 + x1296 + x1350)
                    )
                )
                + x4 * (-x1286 + x1325 + x1349)
            )
            + x37 * (x1305 - x1326 - x1329 + x1341)
            + x54
            * (
                x123 * (x1343 - x1345 + x1347)
                + x1341 * x54
                - x1348 * x3
                + x4 * (-x1320 + x1340 + x1347)
            ),
            -x3
            * (
                x1419 * x54
                - x3
                * (
                    x1382 * x54
                    - x3
                    * (
                        x1378 * x5
                        - x3 * (x1376 * x5 + x1421 - x3 * (x1374 * x5 - x1422 * x3))
                        + x37 * (x1366 - x1372 + x1375)
                    )
                    + x81 * (x1368 - x1370 - x1371 + x1377)
                )
                + x4 * (-x1369 + x1398 + x1420)
                + x81 * (-x1415 + x1417 + x1420)
            )
            + x37 * (x1383 - x1399 - x1402 + x1412)
            + x54
            * (
                x1412 * x54
                - x1419 * x3
                + x4 * (-x1394 + x1411 + x1418)
                + x81 * (x1414 - x1416 + x1418)
            )
            + x81
            * (
                -x1401
                + x1409
                + x1414 * x54
                - x1417 * x3
                - x1417 * x54
                + x3 * (x1381 + x1415)
                - x37 * (-x1360 * x54 + x1392 + x1400 + x1413)
                + x37 * (x1404 * x54 + x1406 + x1408 - x1413)
            ),
            -x3
            * (
                x1491 * x54
                - x3
                * (
                    x1452 * x54
                    - x3
                    * (
                        x1448 * x5
                        - x3 * (x1446 * x5 + x1494 - x3 * (x1444 * x5 - x1495 * x3))
                        + x37 * (x1436 - x1442 + x1445)
                    )
                    + x81 * (x1438 - x1441 + x1447 + x1493)
                )
                + x4 * (-x1439 + x1468 + x1492)
                + x81 * (-x1487 + x1489 + x1492)
            )
            + x37 * (x1453 - x1469 - x1473 + x1484)
            + x54
            * (
                x1484 * x54
                - x1491 * x3
                + x4 * (-x1464 + x1483 + x1490)
                + x81 * (x1486 - x1488 + x1490)
            )
            + x81
            * (
                -x1472
                + x1481
                + x1486 * x54
                - x1489 * x3
                - x1489 * x54
                + x3 * (x1451 + x1487)
                - x37 * (-x1430 * x54 + x1462 + x1471 + x1485)
                + x37 * (x1475 * x54 + x1477 + x1480 - x1485)
            ),
            -x3
            * (
                x1542 * x54
                - x3
                * (
                    x1512 * x54
                    - x3 * (x1509 * x5 + x1544 - x3 * (x1507 * x5 - x1545 * x3))
                    + x37 * (x1502 - x1505 + x1508)
                )
                + x37 * (-x1538 + x1540 + x1543)
                + x4 * (-x1503 + x1524 + x1543)
            )
            + x37 * (x1513 - x1525 - x1527 + x1535)
            + x37
            * (
                -x1526
                + x1531
                + x1537 * x54
                - x1540 * x3
                - x1540 * x54
                + x3 * (x1511 + x1538)
                + x4 * (x1517 + x1528 * x54 + x1529 - x1536)
                - x4 * (-x1497 * x54 + x1501 + x1518 + x1536)
            )
            + x54
            * (
                x1535 * x54
                - x1542 * x3
                + x37 * (x1537 - x1539 + x1541)
                + x4 * (-x1520 + x1534 + x1541)
            ),
            -x3
            * (
                x1592 * x54
                - x3
                * (
                    x1562 * x54
                    - x3 * (x1559 * x5 + x1594 - x3 * (x1557 * x5 - x1595 * x3))
                    + x37 * (x1552 - x1555 + x1558)
                )
                + x37 * (-x1588 + x1590 + x1593)
                + x4 * (-x1553 + x1574 + x1593)
            )
            + x37 * (x1563 - x1575 - x1577 + x1585)
            + x37
            * (
                -x1576
                + x1581
                + x1587 * x54
                - x1590 * x3
                - x1590 * x54
                + x3 * (x1561 + x1588)
                + x4 * (x1567 + x1578 * x54 + x1579 - x1586)
                - x4 * (-x1547 * x54 + x1551 + x1568 + x1586)
            )
            + x54
            * (
                x1585 * x54
                - x1592 * x3
                + x37 * (x1587 - x1589 + x1591)
                + x4 * (-x1570 + x1584 + x1591)
            ),
            -x3
            * (
                x1643 * x54
                - x3
                * (
                    x1612 * x54
                    - x3 * (x1609 * x5 + x1646 - x3 * (x1607 * x5 - x1647 * x3))
                    + x37 * (x1602 - x1605 + x1608)
                )
                + x37 * (-x1638 + x1640 + x1645)
                + x4 * (-x1603 + x1624 + x1645)
            )
            + x37 * (x1613 - x1625 - x1627 + x1635)
            + x37
            * (
                -x1626
                + x1631
                + x1637 * x54
                - x1640 * x3
                - x1640 * x54
                + x3 * (x1611 + x1638)
                + x4 * (x1617 + x1628 * x54 + x1629 - x1636)
                - x4 * (-x1597 * x54 + x1601 + x1618 + x1636)
            )
            + x54
            * (
                x1635 * x54
                - x1643 * x3
                + x37 * (x1637 - x1639 + x1642)
                + x4 * (-x1620 + x1634 + x1642)
            ),
            -x3
            * (
                x1675 * x54
                - x3 * (x1668 * x54 + x1676 - x3 * (x1660 * x5 - x1677 * x3))
                + x4 * (-x1658 + x1661 + x1666)
                + x4 * (x1661 - x1667 + x1671)
            )
            + x37 * (x1654 + x1669 - x1672 + x1674)
            + x4
            * (
                x1650
                + x1654
                + x1656 * x54
                - x1666 * x3
                - x1666 * x54
                + x3 * (x1658 + x1662)
            )
            + x54
            * (
                x1674 * x54
                - x1675 * x3
                + x4 * (x1656 - x1663 + x1664)
                + x4 * (x1664 - x1670 + x1673)
            ),
            -x3
            * (
                x1705 * x54
                - x3 * (x1698 * x54 + x1706 - x3 * (x1690 * x5 - x1707 * x3))
                + x4 * (-x1688 + x1691 + x1696)
                + x4 * (x1691 - x1697 + x1701)
            )
            + x37 * (x1684 + x1699 - x1702 + x1704)
            + x4
            * (
                x1680
                + x1684
                + x1686 * x54
                - x1696 * x3
                - x1696 * x54
                + x3 * (x1688 + x1692)
            )
            + x54
            * (
                x1704 * x54
                - x1705 * x3
                + x4 * (x1686 - x1693 + x1694)
                + x4 * (x1694 - x1700 + x1703)
            ),
            -x3
            * (
                x1735 * x54
                - x3 * (x1728 * x54 + x1736 - x3 * (x1720 * x5 - x1737 * x3))
                + x4 * (-x1718 + x1721 + x1726)
                + x4 * (x1721 - x1727 + x1731)
            )
            + x37 * (x1714 + x1729 - x1732 + x1734)
            + x4
            * (
                x1710
                + x1714
                + x1716 * x54
                - x1726 * x3
                - x1726 * x54
                + x3 * (x1718 + x1722)
            )
            + x54
            * (
                x1734 * x54
                - x1735 * x3
                + x4 * (x1716 - x1723 + x1724)
                + x4 * (x1724 - x1730 + x1733)
            ),
            -x3
            * (
                x1765 * x54
                - x3 * (x1758 * x54 + x1766 - x3 * (x1750 * x5 - x1767 * x3))
                + x4 * (-x1748 + x1751 + x1756)
                + x4 * (x1751 - x1757 + x1761)
            )
            + x37 * (x1744 + x1759 - x1762 + x1764)
            + x4
            * (
                x1740
                + x1744
                + x1746 * x54
                - x1756 * x3
                - x1756 * x54
                + x3 * (x1748 + x1752)
            )
            + x54
            * (
                x1764 * x54
                - x1765 * x3
                + x4 * (x1746 - x1753 + x1754)
                + x4 * (x1754 - x1760 + x1763)
            ),
            -x3 * (x1781 * x54 + x1782 - x3 * (x1771 * x54 - x1783 * x3))
            + x37 * (x1772 - x1777 + x1779)
            + x54 * (x1779 * x54 + x1780 - x1781 * x3),
            -x3 * (x1797 * x54 + x1798 - x3 * (x1787 * x54 - x1799 * x3))
            + x37 * (x1788 - x1793 + x1795)
            + x54 * (x1795 * x54 + x1796 - x1797 * x3),
            -x3 * (x1813 * x54 + x1814 - x3 * (x1803 * x54 - x1815 * x3))
            + x37 * (x1804 - x1809 + x1811)
            + x54 * (x1811 * x54 + x1812 - x1813 * x3),
            -x3 * (x1827 * x54 + x1828 - x3 * (x1818 * x54 - x1829 * x3))
            + x37 * (x1819 - x1823 + x1825)
            + x54 * (x1825 * x54 + x1826 - x1827 * x3),
            -x3 * (x1841 * x54 + x1842 - x3 * (x1832 * x54 - x1843 * x3))
            + x37 * (x1833 - x1837 + x1839)
            + x54 * (x1839 * x54 + x1840 - x1841 * x3),
            x123
            * (
                -x1916
                + x1925
                + x1931 * x54
                - x1934 * x3
                - x1934 * x54
                + x3 * (x1891 + x1932)
                - x81 * (-x1861 * x54 + x1906 + x1915 + x1930)
                + x81 * (x1921 * x54 + x1922 + x1924 - x1930)
            )
            - x3
            * (
                x123 * (-x1932 + x1934 + x1937)
                + x1936 * x54
                - x3
                * (
                    x123 * (x1873 - x1875 - x1876 + x1886)
                    + x1892 * x54
                    - x3
                    * (
                        x1887 * x5
                        - x3
                        * (
                            x1885 * x5
                            - x3 * (x1883 * x5 + x1939 - x3 * (x1881 * x5 - x1940 * x3))
                            + x37 * (x1869 - x1879 + x1882)
                        )
                        + x81 * (x1871 - x1878 + x1884 + x1938)
                    )
                )
                + x4 * (-x1874 + x1913 + x1937)
            )
            + x37 * (x1893 - x1914 - x1917 + x1929)
            + x54
            * (
                x123 * (x1931 - x1933 + x1935)
                + x1929 * x54
                - x1936 * x3
                + x4 * (-x1908 + x1928 + x1935)
            ),
            -x3
            * (
                x2020 * x54
                - x3
                * (
                    x1978 * x54
                    - x3
                    * (
                        x1974 * x5
                        - x3 * (x1972 * x5 + x2023 - x3 * (x1970 * x5 - x2025 * x3))
                        + x37 * (x1960 - x1966 + x1971)
                    )
                    + x81 * (x1962 - x1965 + x1973 + x2022)
                )
                + x4 * (-x1963 + x1996 + x2021)
                + x81 * (-x2016 + x2018 + x2021)
            )
            + x37 * (x1979 - x1997 - x2001 + x2013)
            + x54
            * (
                x2013 * x54
                - x2020 * x3
                + x4 * (-x1992 + x2012 + x2019)
                + x81 * (x2015 - x2017 + x2019)
            )
            + x81
            * (
                -x2000
                + x2010
                + x2015 * x54
                - x2018 * x3
                - x2018 * x54
                + x3 * (x1977 + x2016)
                - x37 * (-x1952 * x54 + x1990 + x1999 + x2014)
                + x37 * (x2004 * x54 + x2006 + x2009 - x2014)
            ),
            -x3
            * (
                x2094 * x54
                - x3
                * (
                    x2055 * x54
                    - x3
                    * (
                        x2051 * x5
                        - x3 * (x2049 * x5 + x2097 - x3 * (x2047 * x5 - x2098 * x3))
                        + x37 * (x2039 - x2045 + x2048)
                    )
                    + x81 * (x2041 - x2044 + x2050 + x2096)
                )
                + x4 * (-x2042 + x2071 + x2095)
                + x81 * (-x2090 + x2092 + x2095)
            )
            + x37 * (x2056 - x2072 - x2076 + x2087)
            + x54
            * (
                x2087 * x54
                - x2094 * x3
                + x4 * (-x2067 + x2086 + x2093)
                + x81 * (x2089 - x2091 + x2093)
            )
            + x81
            * (
                -x2075
                + x2084
                + x2089 * x54
                - x2092 * x3
                - x2092 * x54
                + x3 * (x2054 + x2090)
                - x37 * (-x2033 * x54 + x2065 + x2074 + x2088)
                + x37 * (x2078 * x54 + x2080 + x2083 - x2088)
            ),
            -x3
            * (
                x2158 * x54
                - x3
                * (
                    x2122 * x54
                    - x3 * (x2119 * x5 + x2162 - x3 * (x2117 * x5 - x2164 * x3))
                    + x37 * (x2109 - x2113 + x2118)
                )
                + x37 * (-x2153 + x2155 + x2160)
                + x4 * (-x2110 + x2137 + x2160)
            )
            + x37 * (x2123 - x2138 - x2140 + x2150)
            + x37
            * (
                -x2139
                + x2145
                + x2152 * x54
                - x2155 * x3
                - x2155 * x54
                + x3 * (x2121 + x2153)
                + x4 * (x2129 + x2142 * x54 + x2143 - x2151)
                - x4 * (-x2102 * x54 + x2108 + x2130 + x2151)
            )
            + x54
            * (
                x2150 * x54
                - x2158 * x3
                + x37 * (x2152 - x2154 + x2157)
                + x4 * (-x2132 + x2149 + x2157)
            ),
            -x3
            * (
                x2221 * x54
                - x3
                * (
                    x2187 * x54
                    - x3 * (x2184 * x5 + x2224 - x3 * (x2182 * x5 - x2226 * x3))
                    + x37 * (x2175 - x2178 + x2183)
                )
                + x37 * (-x2216 + x2218 + x2223)
                + x4 * (-x2176 + x2201 + x2223)
            )
            + x37 * (x2188 - x2202 - x2204 + x2213)
            + x37
            * (
                -x2203
                + x2209
                + x2215 * x54
                - x2218 * x3
                - x2218 * x54
                + x3 * (x2186 + x2216)
                + x4 * (x2194 + x2206 * x54 + x2207 - x2214)
                - x4 * (-x2168 * x54 + x2174 + x2195 + x2214)
            )
            + x54
            * (
                x2213 * x54
                - x2221 * x3
                + x37 * (x2215 - x2217 + x2220)
                + x4 * (-x2197 + x2212 + x2220)
            ),
            -x3
            * (
                x2274 * x54
                - x3
                * (
                    x2243 * x54
                    - x3 * (x2240 * x5 + x2277 - x3 * (x2238 * x5 - x2278 * x3))
                    + x37 * (x2233 - x2236 + x2239)
                )
                + x37 * (-x2269 + x2271 + x2276)
                + x4 * (-x2234 + x2255 + x2276)
            )
            + x37 * (x2244 - x2256 - x2258 + x2266)
            + x37
            * (
                -x2257
                + x2262
                + x2268 * x54
                - x2271 * x3
                - x2271 * x54
                + x3 * (x2242 + x2269)
                + x4 * (x2248 + x2259 * x54 + x2260 - x2267)
                - x4 * (-x2228 * x54 + x2232 + x2249 + x2267)
            )
            + x54
            * (
                x2266 * x54
                - x2274 * x3
                + x37 * (x2268 - x2270 + x2273)
                + x4 * (-x2251 + x2265 + x2273)
            ),
            -x3
            * (
                x2318 * x54
                - x3 * (x2311 * x54 + x2320 - x3 * (x2303 * x5 - x2322 * x3))
                + x4 * (-x2298 + x2304 + x2309)
                + x4 * (x2304 - x2310 + x2314)
            )
            + x37 * (x2293 + x2312 - x2315 + x2317)
            + x4
            * (
                x2285
                + x2293
                + x2295 * x54
                - x2309 * x3
                - x2309 * x54
                + x3 * (x2298 + x2305)
            )
            + x54
            * (
                x2317 * x54
                - x2318 * x3
                + x4 * (x2295 - x2306 + x2307)
                + x4 * (x2307 - x2313 + x2316)
            ),
            -x3
            * (
                x2359 * x54
                - x3 * (x2352 * x54 + x2361 - x3 * (x2344 * x5 - x2363 * x3))
                + x4 * (-x2340 + x2345 + x2350)
                + x4 * (x2345 - x2351 + x2355)
            )
            + x37 * (x2335 + x2353 - x2356 + x2358)
            + x4
            * (
                x2328
                + x2335
                + x2337 * x54
                - x2350 * x3
                - x2350 * x54
                + x3 * (x2340 + x2346)
            )
            + x54
            * (
                x2358 * x54
                - x2359 * x3
                + x4 * (x2337 - x2347 + x2348)
                + x4 * (x2348 - x2354 + x2357)
            ),
            -x3
            * (
                x2398 * x54
                - x3 * (x2391 * x54 + x2399 - x3 * (x2383 * x5 - x2401 * x3))
                + x4 * (-x2379 + x2384 + x2389)
                + x4 * (x2384 - x2390 + x2394)
            )
            + x37 * (x2374 + x2392 - x2395 + x2397)
            + x4
            * (
                x2368
                + x2374
                + x2376 * x54
                - x2389 * x3
                - x2389 * x54
                + x3 * (x2379 + x2385)
            )
            + x54
            * (
                x2397 * x54
                - x2398 * x3
                + x4 * (x2376 - x2386 + x2387)
                + x4 * (x2387 - x2393 + x2396)
            ),
            -x3
            * (
                x2429 * x54
                - x3 * (x2422 * x54 + x2430 - x3 * (x2414 * x5 - x2431 * x3))
                + x4 * (-x2412 + x2415 + x2420)
                + x4 * (x2415 - x2421 + x2425)
            )
            + x37 * (x2408 + x2423 - x2426 + x2428)
            + x4
            * (
                x2404
                + x2408
                + x2410 * x54
                - x2420 * x3
                - x2420 * x54
                + x3 * (x2412 + x2416)
            )
            + x54
            * (
                x2428 * x54
                - x2429 * x3
                + x4 * (x2410 - x2417 + x2418)
                + x4 * (x2418 - x2424 + x2427)
            ),
            -x3 * (x2449 * x54 + x2451 - x3 * (x2436 * x54 - x2453 * x3))
            + x37 * (x2437 - x2443 + x2446)
            + x54 * (x2446 * x54 + x2448 - x2449 * x3),
            -x3 * (x2471 * x54 + x2473 - x3 * (x2458 * x54 - x2475 * x3))
            + x37 * (x2459 - x2465 + x2468)
            + x54 * (x2468 * x54 + x2470 - x2471 * x3),
            -x3 * (x2491 * x54 + x2493 - x3 * (x2479 * x54 - x2495 * x3))
            + x37 * (x2480 - x2485 + x2488)
            + x54 * (x2488 * x54 + x2490 - x2491 * x3),
            -x3 * (x2510 * x54 + x2511 - x3 * (x2499 * x54 - x2513 * x3))
            + x37 * (x2500 - x2505 + x2508)
            + x54 * (x2508 * x54 + x2509 - x2510 * x3),
            -x3 * (x2527 * x54 + x2528 - x3 * (x2517 * x54 - x2529 * x3))
            + x37 * (x2518 - x2523 + x2525)
            + x54 * (x2525 * x54 + x2526 - x2527 * x3),
            x123 * (-x2562 * x54 + x2568 * x54 + x2570 + x2589)
            - x3
            * (
                x123 * (x2562 - x2572 - x2573 + x2584)
                + x2590 * x54
                - x3
                * (
                    x2585 * x5
                    - x3
                    * (
                        x2583 * x5
                        - x3 * (x2581 * x5 + x2592 - x3 * (x2579 * x5 - x2593 * x3))
                        + x37 * (x2558 - x2576 + x2580)
                    )
                    + x81 * (x2560 - x2575 + x2582 + x2591)
                )
            )
            + x4 * (-x2563 + x2571 + x2589)
            + x54 * (x123 * (-x2544 - x2550 + x2561 + x2568) + x2571 * x54 - x2590 * x3),
            -x3
            * (
                x2633 * x54
                - x3
                * (
                    x2629 * x5
                    - x3 * (x2627 * x5 + x2634 - x3 * (x2625 * x5 - x2635 * x3))
                    + x37 * (x2610 - x2622 + x2626)
                )
                + x81 * (x2612 - x2620 - x2621 + x2628)
            )
            + x4 * (-x2613 + x2619 + x2632)
            + x54 * (x2619 * x54 - x2633 * x3 + x81 * (-x2599 - x2604 + x2611 + x2617))
            + x81 * (-x2612 * x54 + x2617 * x54 + x2618 + x2632),
            -x3
            * (
                x2676 * x54
                - x3
                * (
                    x2671 * x5
                    - x3 * (x2669 * x5 + x2678 - x3 * (x2667 * x5 - x2679 * x3))
                    + x37 * (x2652 - x2664 + x2668)
                )
                + x81 * (x2654 - x2663 + x2670 + x2677)
            )
            + x4 * (-x2655 + x2661 + x2674)
            + x54 * (x2661 * x54 - x2676 * x3 + x81 * (-x2646 + x2653 + x2659 + x2675))
            + x81 * (-x2654 * x54 + x2659 * x54 + x2660 + x2674),
            -x3
            * (
                x2710 * x54
                - x3 * (x2705 * x5 + x2712 - x3 * (x2703 * x5 - x2714 * x3))
                + x37 * (x2690 - x2699 + x2704)
            )
            + x37 * (-x2690 * x54 + x2694 * x54 + x2697 + x2709)
            + x4 * (-x2691 + x2698 + x2709)
            + x54 * (x2698 * x54 - x2710 * x3 + x37 * (-x2684 + x2689 + x2694)),
            -x3
            * (
                x2739 * x54
                - x3 * (x2735 * x5 + x2740 - x3 * (x2733 * x5 - x2741 * x3))
                + x37 * (x2723 - x2730 + x2734)
            )
            + x37 * (-x2723 * x54 + x2726 * x54 + x2728 + x2738)
            + x4 * (-x2724 + x2729 + x2738)
            + x54 * (x2729 * x54 - x2739 * x3 + x37 * (-x2718 + x2722 + x2726)),
            -x3
            * (
                x2767 * x54
                - x3 * (x2762 * x5 + x2768 - x3 * (x2760 * x5 - x2769 * x3))
                + x37 * (x2750 - x2757 + x2761)
            )
            + x37 * (-x2750 * x54 + x2753 * x54 + x2755 + x2766)
            + x4 * (-x2751 + x2756 + x2766)
            + x54 * (x2756 * x54 - x2767 * x3 + x37 * (-x2745 + x2749 + x2753)),
            -x3 * (x2784 * x54 + x2785 - x3 * (x2774 * x5 - x2786 * x3))
            + x4 * (x2775 - x2781 + x2782)
            + x4 * (x2770 * x54 + x2775 - x2779 * x54 + x2780)
            + x54 * (x2782 * x54 + x2783 - x2784 * x3),
            -x3 * (x2803 * x54 + x2805 - x3 * (x2792 * x5 - x2807 * x3))
            + x4 * (x2793 - x2799 + x2800)
            + x4 * (x2788 * x54 + x2793 - x2797 * x54 + x2798)
            + x54 * (x2800 * x54 + x2802 - x2803 * x3),
            -x3 * (x2820 * x54 + x2821 - x3 * (x2811 * x5 - x2822 * x3))
            + x4 * (x2812 - x2817 + x2818)
            + x4 * (x2808 * x54 + x2812 - x2815 * x54 + x2816)
            + x54 * (x2818 * x54 + x2819 - x2820 * x3),
            -x3 * (x2835 * x54 + x2836 - x3 * (x2826 * x5 - x2837 * x3))
            + x4 * (x2827 - x2832 + x2833)
            + x4 * (x2823 * x54 + x2827 - x2830 * x54 + x2831)
            + x54 * (x2833 * x54 + x2834 - x2835 * x3),
            x2842 - x3 * (x2843 * x54 - x2844 * x3) + x54 * (x2841 * x54 - x2843 * x3),
            x2849 - x3 * (x2850 * x54 - x2851 * x3) + x54 * (x2848 * x54 - x2850 * x3),
            x2858 - x3 * (x2859 * x54 - x2861 * x3) + x54 * (x2857 * x54 - x2859 * x3),
            x2865 - x3 * (x2866 * x54 - x2867 * x3) + x54 * (x2864 * x54 - x2866 * x3),
            x2871 - x3 * (x2872 * x54 - x2873 * x3) + x54 * (x2870 * x54 - x2872 * x3),
            x123 * (-x2902 * x54 + x2908 * x54 + x2910 + x2928)
            - x3
            * (
                x123 * (x2902 - x2912 - x2913 + x2923)
                + x2929 * x54
                - x3
                * (
                    x2924 * x5
                    - x3
                    * (
                        x2922 * x5
                        - x3 * (x2920 * x5 + x2931 - x3 * (x2918 * x5 - x2932 * x3))
                        + x37 * (x2898 - x2916 + x2919)
                    )
                    + x81 * (x2900 - x2915 + x2921 + x2930)
                )
            )
            + x4 * (-x2903 + x2911 + x2928)
            + x54 * (x123 * (-x2885 - x2891 + x2901 + x2908) + x2911 * x54 - x2929 * x3),
            -x3
            * (
                x2968 * x54
                - x3
                * (
                    x2964 * x5
                    - x3 * (x2962 * x5 + x2969 - x3 * (x2960 * x5 - x2970 * x3))
                    + x37 * (x2946 - x2958 + x2961)
                )
                + x81 * (x2948 - x2956 - x2957 + x2963)
            )
            + x4 * (-x2949 + x2955 + x2967)
            + x54 * (x2955 * x54 - x2968 * x3 + x81 * (-x2936 - x2941 + x2947 + x2953))
            + x81 * (-x2948 * x54 + x2953 * x54 + x2954 + x2967),
            -x3
            * (
                -x3
                * (
                    -x3 * (-x3 * (x2998 * x5 - x3 * x3010) + x3000 * x5 + x3009)
                    + x3002 * x5
                    + x37 * (x2984 - x2996 + x2999)
                )
                + x3007 * x54
                + x81 * (x2986 - x2995 + x3001 + x3008)
            )
            + x4 * (-x2987 + x2993 + x3005)
            + x54 * (x2993 * x54 - x3 * x3007 + x81 * (-x2979 + x2985 + x2991 + x3006))
            + x81 * (-x2986 * x54 + x2991 * x54 + x2992 + x3005),
            -x3
            * (
                -x3 * (-x3 * (-x3 * x3034 + x3026 * x5) + x3028 * x5 + x3033)
                + x3032 * x54
                + x37 * (x3017 - x3024 + x3027)
            )
            + x37 * (-x3017 * x54 + x3020 * x54 + x3022 + x3031)
            + x4 * (-x3018 + x3023 + x3031)
            + x54 * (-x3 * x3032 + x3023 * x54 + x37 * (-x3013 + x3016 + x3020)),
            -x3
            * (
                -x3 * (-x3 * (-x3 * x3058 + x3050 * x5) + x3052 * x5 + x3057)
                + x3056 * x54
                + x37 * (x3041 - x3048 + x3051)
            )
            + x37 * (-x3041 * x54 + x3044 * x54 + x3046 + x3055)
            + x4 * (-x3042 + x3047 + x3055)
            + x54 * (-x3 * x3056 + x3047 * x54 + x37 * (-x3037 + x3040 + x3044)),
            -x3
            * (
                -x3 * (-x3 * (-x3 * x3083 + x3074 * x5) + x3076 * x5 + x3082)
                + x3081 * x54
                + x37 * (x3065 - x3072 + x3075)
            )
            + x37 * (-x3065 * x54 + x3068 * x54 + x3070 + x3080)
            + x4 * (-x3066 + x3071 + x3080)
            + x54 * (-x3 * x3081 + x3071 * x54 + x37 * (-x3061 + x3064 + x3068)),
            -x3 * (-x3 * (-x3 * x3096 + x3086 * x5) + x3094 * x54 + x3095)
            + x4 * (x3087 - x3091 + x3092)
            + x4 * (x3084 * x54 + x3087 - x3089 * x54 + x3090)
            + x54 * (-x3 * x3094 + x3092 * x54 + x3093),
            -x3 * (-x3 * (-x3 * x3109 + x3099 * x5) + x3107 * x54 + x3108)
            + x4 * (x3100 - x3104 + x3105)
            + x4 * (x3097 * x54 + x3100 - x3102 * x54 + x3103)
            + x54 * (-x3 * x3107 + x3105 * x54 + x3106),
            -x3 * (-x3 * (-x3 * x3122 + x3112 * x5) + x3120 * x54 + x3121)
            + x4 * (x3113 - x3117 + x3118)
            + x4 * (x3110 * x54 + x3113 - x3115 * x54 + x3116)
            + x54 * (-x3 * x3120 + x3118 * x54 + x3119),
            -x3 * (-x3 * (-x3 * x3135 + x3125 * x5) + x3133 * x54 + x3134)
            + x4 * (x3126 - x3130 + x3131)
            + x4 * (x3123 * x54 + x3126 - x3128 * x54 + x3129)
            + x54 * (-x3 * x3133 + x3131 * x54 + x3132),
            -x3 * (-x3 * x3142 + x3141 * x54) + x3140 + x54 * (-x3 * x3141 + x3139 * x54),
            -x3 * (-x3 * x3149 + x3148 * x54) + x3147 + x54 * (-x3 * x3148 + x3146 * x54),
            -x3 * (-x3 * x3156 + x3155 * x54) + x3154 + x54 * (-x3 * x3155 + x3153 * x54),
            -x3 * (-x3 * x3162 + x3161 * x54) + x3160 + x54 * (-x3 * x3161 + x3159 * x54),
            -x3 * (-x3 * x3168 + x3167 * x54) + x3166 + x54 * (-x3 * x3167 + x3165 * x54),
            x123 * (-x3201 * x54 + x3207 * x54 + x3209 + x3228)
            - x3
            * (
                x123 * (x3201 - x3211 - x3212 + x3223)
                - x3
                * (
                    -x3
                    * (
                        -x3 * (-x3 * (-x3 * x3232 + x3218 * x5) + x3220 * x5 + x3231)
                        + x3222 * x5
                        + x37 * (x3197 - x3215 + x3219)
                    )
                    + x3224 * x5
                    + x81 * (x3199 - x3214 + x3221 + x3230)
                )
                + x3229 * x54
            )
            + x4 * (-x3202 + x3210 + x3228)
            + x54 * (x123 * (-x3183 - x3189 + x3200 + x3207) - x3 * x3229 + x3210 * x54),
            -x3
            * (
                -x3
                * (
                    -x3 * (-x3 * (-x3 * x3282 + x3269 * x5) + x3271 * x5 + x3280)
                    + x3273 * x5
                    + x37 * (x3252 - x3265 + x3270)
                )
                + x3278 * x54
                + x81 * (x3254 - x3264 + x3272 + x3279)
            )
            + x4 * (-x3255 + x3262 + x3276)
            + x54 * (-x3 * x3278 + x3262 * x54 + x81 * (-x3245 + x3253 + x3260 + x3277))
            + x81 * (-x3254 * x54 + x3260 * x54 + x3261 + x3276),
            -x3
            * (
                -x3
                * (
                    -x3 * (-x3 * (-x3 * x3326 + x3314 * x5) + x3316 * x5 + x3325)
                    + x3318 * x5
                    + x37 * (x3299 - x3311 + x3315)
                )
                + x3323 * x54
                + x81 * (x3301 - x3310 + x3317 + x3324)
            )
            + x4 * (-x3302 + x3308 + x3321)
            + x54 * (-x3 * x3323 + x3308 * x54 + x81 * (-x3293 + x3300 + x3306 + x3322))
            + x81 * (-x3301 * x54 + x3306 * x54 + x3307 + x3321),
            -x3
            * (
                -x3 * (-x3 * (-x3 * x3362 + x3350 * x5) + x3352 * x5 + x3360)
                + x3358 * x54
                + x37 * (x3337 - x3346 + x3351)
            )
            + x37 * (-x3337 * x54 + x3341 * x54 + x3344 + x3357)
            + x4 * (-x3338 + x3345 + x3357)
            + x54 * (-x3 * x3358 + x3345 * x54 + x37 * (-x3331 + x3336 + x3341)),
            -x3
            * (
                -x3 * (-x3 * (-x3 * x3395 + x3385 * x5) + x3387 * x5 + x3393)
                + x3392 * x54
                + x37 * (x3373 - x3381 + x3386)
            )
            + x37 * (-x3373 * x54 + x3377 * x54 + x3379 + x3391)
            + x4 * (-x3374 + x3380 + x3391)
            + x54 * (-x3 * x3392 + x3380 * x54 + x37 * (-x3367 + x3372 + x3377)),
            -x3
            * (
                -x3 * (-x3 * (-x3 * x3431 + x3419 * x5) + x3421 * x5 + x3429)
                + x3427 * x54
                + x37 * (x3406 - x3415 + x3420)
            )
            + x37 * (-x3406 * x54 + x3410 * x54 + x3413 + x3426)
            + x4 * (-x3407 + x3414 + x3426)
            + x54 * (-x3 * x3427 + x3414 * x54 + x37 * (-x3400 + x3405 + x3410)),
            -x3 * (-x3 * (-x3 * x3454 + x3438 * x5) + x3450 * x54 + x3452)
            + x4 * (x3439 - x3446 + x3447)
            + x4 * (x3433 * x54 + x3439 - x3444 * x54 + x3445)
            + x54 * (-x3 * x3450 + x3447 * x54 + x3449),
            -x3 * (-x3 * (-x3 * x3475 + x3460 * x5) + x3471 * x54 + x3473)
            + x4 * (x3461 - x3467 + x3468)
            + x4 * (x3456 * x54 + x3461 - x3465 * x54 + x3466)
            + x54 * (-x3 * x3471 + x3468 * x54 + x3470),
            -x3 * (-x3 * (-x3 * x3494 + x3481 * x5) + x3491 * x54 + x3492)
            + x4 * (x3482 - x3488 + x3489)
            + x4 * (x3477 * x54 + x3482 - x3486 * x54 + x3487)
            + x54 * (-x3 * x3491 + x3489 * x54 + x3490),
            -x3 * (-x3 * (-x3 * x3511 + x3499 * x5) + x3509 * x54 + x3510)
            + x4 * (x3500 - x3506 + x3507)
            + x4 * (x3495 * x54 + x3500 - x3504 * x54 + x3505)
            + x54 * (-x3 * x3509 + x3507 * x54 + x3508),
            -x3 * (-x3 * x3522 + x3520 * x54) + x3518 + x54 * (-x3 * x3520 + x3514 * x54),
            -x3 * (-x3 * x3533 + x3531 * x54) + x3529 + x54 * (-x3 * x3531 + x3525 * x54),
            -x3 * (-x3 * x3543 + x3541 * x54) + x3539 + x54 * (-x3 * x3541 + x3536 * x54),
            -x3 * (-x3 * x3552 + x3550 * x54) + x3548 + x54 * (-x3 * x3550 + x3547 * x54),
            -x3 * (-x3 * x3559 + x3558 * x54) + x3557 + x54 * (-x3 * x3558 + x3556 * x54),
            x123 * (x3582 - x3594 - x3595 + x3600)
            - x3
            * (
                -x3
                * (
                    -x3 * (-x3 * (-x3 * x3605 + x3577 * x5) + x3579 * x5 + x3604)
                    + x3581 * x5
                    + x37 * (x3571 - x3573 + x3578)
                )
                + x3602 * x5
                + x81 * (-x3572 + x3580 + x3593 + x3603)
            )
            + x54 * (-x3 * x3602 + x3600 * x5 + x81 * (-x3591 + x3592 + x3599 + x3601)),
            -x3
            * (
                -x3 * (-x3 * (-x3 * x3630 + x3612 * x5) + x3614 * x5 + x3629)
                + x3628 * x5
                + x37 * (-x3609 + x3613 + x3622)
            )
            + x54 * (-x3 * x3628 + x3627 * x5 + x37 * (-x3620 + x3621 + x3626))
            + x81 * (x3615 - x3619 - x3623 + x3627),
            -x3
            * (
                -x3 * (-x3 * (-x3 * x3659 + x3639 * x5) + x3641 * x5 + x3658)
                + x3657 * x5
                + x37 * (-x3635 + x3640 + x3651)
            )
            + x54 * (-x3 * x3657 + x3656 * x5 + x37 * (-x3649 + x3650 + x3655))
            + x81 * (x3642 + x3648 - x3652 + x3656),
            -x3 * (-x3 * (-x3 * x3677 + x3664 * x5) + x3675 * x5 + x3676)
            + x37 * (x3665 - x3671 + x3673)
            + x54 * (-x3 * x3675 + x3673 * x5 + x3674),
            -x3 * (-x3 * (-x3 * x3691 + x3680 * x5) + x3689 * x5 + x3690)
            + x37 * (x3681 - x3685 + x3687)
            + x54 * (-x3 * x3689 + x3687 * x5 + x3688),
            -x3 * (-x3 * (-x3 * x3707 + x3695 * x5) + x3705 * x5 + x3706)
            + x37 * (x3696 - x3701 + x3703)
            + x54 * (-x3 * x3705 + x3703 * x5 + x3704),
            -x3 * (-x3 * x3718 + x3716 * x5) + x3715 + x54 * (-x3 * x3716 + x3714 * x5),
            -x3 * (-x3 * x3726 + x3725 * x5) + x3724 + x54 * (-x3 * x3725 + x3723 * x5),
            -x3 * (-x3 * x3732 + x3731 * x5) + x3730 + x54 * (-x3 * x3731 + x3729 * x5),
            -x3 * (-x3 * x3739 + x3738 * x5) + x3737 + x54 * (-x3 * x3738 + x3736 * x5),
            -x3 * x3741 + x3740 * x54,
            -x3 * x3745 + x3743 * x54,
            -x3 * x3747 + x3746 * x54,
            -x3 * x3749 + x3748 * x54,
            -x3 * x3751 + x3750 * x54,
            x123 * (x3771 - x3782 - x3783 + x3788)
            - x3
            * (
                -x3
                * (
                    -x3 * (-x3 * (-x3 * x3793 + x3766 * x5) + x3768 * x5 + x3792)
                    + x37 * (x3761 - x3763 + x3767)
                    + x3770 * x5
                )
                + x3790 * x5
                + x81 * (-x3762 + x3769 + x3781 + x3791)
            )
            + x54 * (-x3 * x3790 + x3788 * x5 + x81 * (-x3779 + x3780 + x3787 + x3789)),
            -x3
            * (
                -x3 * (-x3 * (-x3 * x3818 + x3800 * x5) + x3802 * x5 + x3817)
                + x37 * (-x3797 + x3801 + x3810)
                + x3816 * x5
            )
            + x54 * (-x3 * x3816 + x37 * (-x3808 + x3809 + x3814) + x3815 * x5)
            + x81 * (x3803 - x3807 - x3811 + x3815),
            -x3
            * (
                -x3 * (-x3 * (-x3 * x3844 + x3825 * x5) + x3827 * x5 + x3843)
                + x37 * (-x3822 + x3826 + x3836)
                + x3842 * x5
            )
            + x54 * (-x3 * x3842 + x37 * (-x3834 + x3835 + x3840) + x3841 * x5)
            + x81 * (x3828 + x3833 - x3837 + x3841),
            -x3 * (-x3 * (-x3 * x3864 + x3848 * x5) + x3860 * x5 + x3862)
            + x37 * (x3849 - x3854 + x3857)
            + x54 * (-x3 * x3860 + x3857 * x5 + x3859),
            -x3 * (-x3 * (-x3 * x3878 + x3867 * x5) + x3876 * x5 + x3877)
            + x37 * (x3868 - x3872 + x3874)
            + x54 * (-x3 * x3876 + x3874 * x5 + x3875),
            -x3 * (-x3 * (-x3 * x3892 + x3881 * x5) + x3890 * x5 + x3891)
            + x37 * (x3882 - x3886 + x3888)
            + x54 * (-x3 * x3890 + x3888 * x5 + x3889),
            -x3 * (-x3 * x3899 + x3898 * x5) + x3897 + x54 * (-x3 * x3898 + x3896 * x5),
            -x3 * (-x3 * x3909 + x3907 * x5) + x3906 + x54 * (-x3 * x3907 + x3905 * x5),
            -x3 * (-x3 * x3915 + x3914 * x5) + x3913 + x54 * (-x3 * x3914 + x3912 * x5),
            -x3 * (-x3 * x3921 + x3920 * x5) + x3919 + x54 * (-x3 * x3920 + x3918 * x5),
            -x3 * x3923 + x3922 * x54,
            -x3 * x3925 + x3924 * x54,
            -x3 * x3929 + x3927 * x54,
            -x3 * x3931 + x3930 * x54,
            -x3 * x3933 + x3932 * x54,
            x123 * (x3950 - x3960 - x3961 + x3966)
            - x3
            * (
                -x3
                * (
                    -x3 * (-x3 * (-x3 * x3971 + x3945 * x5) + x3947 * x5 + x3970)
                    + x37 * (x3941 - x3943 + x3946)
                    + x3949 * x5
                )
                + x3968 * x5
                + x81 * (-x3942 + x3948 + x3959 + x3969)
            )
            + x54 * (-x3 * x3968 + x3966 * x5 + x81 * (-x3957 + x3958 + x3965 + x3967)),
            -x3
            * (
                -x3 * (-x3 * (-x3 * x3993 + x3976 * x5) + x3978 * x5 + x3992)
                + x37 * (-x3974 + x3977 + x3985)
                + x3991 * x5
            )
            + x54 * (-x3 * x3991 + x37 * (-x3983 + x3984 + x3989) + x3990 * x5)
            + x81 * (x3979 - x3982 - x3986 + x3990),
            -x3
            * (
                -x3 * (-x3 * (-x3 * x4016 + x3998 * x5) + x4000 * x5 + x4015)
                + x37 * (-x3996 + x3999 + x4008)
                + x4014 * x5
            )
            + x54 * (-x3 * x4014 + x37 * (-x4006 + x4007 + x4012) + x4013 * x5)
            + x81 * (x4001 + x4005 - x4009 + x4013),
            -x3 * (-x3 * (-x3 * x4028 + x4018 * x5) + x4026 * x5 + x4027)
            + x37 * (x4019 - x4022 + x4024)
            + x54 * (-x3 * x4026 + x4024 * x5 + x4025),
            -x3 * (-x3 * (-x3 * x4040 + x4030 * x5) + x4038 * x5 + x4039)
            + x37 * (x4031 - x4034 + x4036)
            + x54 * (-x3 * x4038 + x4036 * x5 + x4037),
            -x3 * (-x3 * (-x3 * x4052 + x4042 * x5) + x4050 * x5 + x4051)
            + x37 * (x4043 - x4046 + x4048)
            + x54 * (-x3 * x4050 + x4048 * x5 + x4049),
            -x3 * (-x3 * x4057 + x4056 * x5) + x4055 + x54 * (-x3 * x4056 + x4054 * x5),
            -x3 * (-x3 * x4062 + x4061 * x5) + x4060 + x54 * (-x3 * x4061 + x4059 * x5),
            -x3 * (-x3 * x4067 + x4066 * x5) + x4065 + x54 * (-x3 * x4066 + x4064 * x5),
            -x3 * (-x3 * x4072 + x4071 * x5) + x4070 + x54 * (-x3 * x4071 + x4069 * x5),
            -x3 * x4074 + x4073 * x54,
            -x3 * x4076 + x4075 * x54,
            -x3 * x4078 + x4077 * x54,
            -x3 * x4080 + x4079 * x54,
            -x3 * x4082 + x4081 * x54,
            x123 * (x4105 - x4117 - x4118 + x4123)
            - x3
            * (
                -x3
                * (
                    -x3 * (-x3 * (-x3 * x4128 + x4100 * x5) + x4102 * x5 + x4127)
                    + x37 * (x4094 - x4096 + x4101)
                    + x4104 * x5
                )
                + x4125 * x5
                + x81 * (-x4095 + x4103 + x4116 + x4126)
            )
            + x54 * (-x3 * x4125 + x4123 * x5 + x81 * (-x4114 + x4115 + x4122 + x4124)),
            -x3
            * (
                -x3 * (-x3 * (-x3 * x4158 + x4137 * x5) + x4139 * x5 + x4156)
                + x37 * (-x4133 + x4138 + x4148)
                + x4155 * x5
            )
            + x54 * (-x3 * x4155 + x37 * (-x4146 + x4147 + x4153) + x4154 * x5)
            + x81 * (x4140 - x4145 - x4149 + x4154),
            -x3
            * (
                -x3 * (-x3 * (-x3 * x4184 + x4165 * x5) + x4167 * x5 + x4183)
                + x37 * (-x4162 + x4166 + x4176)
                + x4182 * x5
            )
            + x54 * (-x3 * x4182 + x37 * (-x4174 + x4175 + x4180) + x4181 * x5)
            + x81 * (x4168 + x4173 - x4177 + x4181),
            -x3 * (-x3 * (-x3 * x4204 + x4188 * x5) + x4200 * x5 + x4202)
            + x37 * (x4189 - x4194 + x4197)
            + x54 * (-x3 * x4200 + x4197 * x5 + x4199),
            -x3 * (-x3 * (-x3 * x4222 + x4208 * x5) + x4219 * x5 + x4220)
            + x37 * (x4209 - x4214 + x4217)
            + x54 * (-x3 * x4219 + x4217 * x5 + x4218),
            -x3 * (-x3 * (-x3 * x4240 + x4227 * x5) + x4238 * x5 + x4239)
            + x37 * (x4228 - x4234 + x4236)
            + x54 * (-x3 * x4238 + x4236 * x5 + x4237),
            -x3 * (-x3 * x4251 + x4249 * x5) + x4247 + x54 * (-x3 * x4249 + x4243 * x5),
            -x3 * (-x3 * x4261 + x4259 * x5) + x4257 + x54 * (-x3 * x4259 + x4254 * x5),
            -x3 * (-x3 * x4270 + x4268 * x5) + x4266 + x54 * (-x3 * x4268 + x4265 * x5),
            -x3 * (-x3 * x4281 + x4279 * x5) + x4278 + x54 * (-x3 * x4279 + x4277 * x5),
            -x3 * x4285 + x4283 * x54,
            -x3 * x4289 + x4287 * x54,
            -x3 * x4293 + x4291 * x54,
            -x3 * x4297 + x4295 * x54,
            -x3 * x4299 + x4298 * x54,
            -x3
            * (
                -x3
                * (
                    -x3 * (-x3 * (x1256 * x3577 + 3 * x2592 - x3605 * x7) + x4308 * x5)
                    + x4 * (x4303 - x4305 - x4306 + x4307)
                    + x4310 * x5
                )
                + x37 * (-x4304 + x4309 + x4319)
                + x4324 * x5
            )
            + x5 * (-x3 * x4324 + x37 * (-x4317 + x4318 + x4322) + x4323 * x5)
            + x81 * (x4311 - x4316 - x4320 + x4323),
            -x3
            * (
                -x3
                * (-x3 * (x1256 * x3612 + 3 * x2634 + x3604 - x3630 * x7) + x4328 * x5)
                + x4 * (x3603 - x4325 - x4326 + x4327 + x4333)
                + x4337 * x5
            )
            + x37 * (x4329 - x4334 + x4336)
            + x5
            * (-x3 * x4337 + x4 * (x3601 - x4330 - x4331 + x4332 + x4335) + x4336 * x5),
            -x3
            * (
                -x3 * (-x3 * (x1256 * x3639 + 3 * x2678 - x3659 * x7) + x4341 * x5)
                + x4 * (-x4338 - x4339 + x4340 + x4346)
                + x4350 * x5
            )
            + x37 * (x4342 - x4347 + x4349)
            + x5 * (-x3 * x4350 + x4 * (-x4343 - x4344 + x4345 + x4348) + x4349 * x5),
            -x3 * (-x3 * (x1256 * x3664 + 2 * x3629 - x3677 * x7 + x3717) + x4355 * x5)
            + x4 * (x3711 + x4351 - x4352 - x4353 + x4354)
            + x5 * (-x3 * x4355 + x4354 * x5),
            -x3 * (-x3 * (x1256 * x3680 + 3 * x2740 + x3658 - x3691 * x7) + x4360 * x5)
            + x4 * (x3648 + x4356 - x4357 - x4358 + x4359)
            + x5 * (-x3 * x4360 + x4359 * x5),
            -x3 * (-x3 * (x1256 * x3695 + 3 * x2768 - x3707 * x7) + x4365 * x5)
            + x4 * (x4361 - x4362 - x4363 + x4364)
            + x5 * (-x3 * x4365 + x4364 * x5),
            -x3 * (x1256 * x3716 + 3 * x2785 + 3 * x3676 - x3718 * x7)
            + x5 * (x1256 * x3714 + 3 * x2783 + 3 * x3674 - x3716 * x7),
            -x3 * (x1256 * x3725 + 2 * x3690 - x3726 * x7 + x3744)
            + x5 * (x1256 * x3723 + 2 * x3688 - x3725 * x7 + x3742),
            -x3 * (x1256 * x3731 + 3 * x2821 + x3706 - x3732 * x7)
            + x5 * (x1256 * x3729 + 3 * x2819 + x3704 - x3731 * x7),
            -x3 * (x1256 * x3738 + 3 * x2836 - x3739 * x7)
            + x5 * (x1256 * x3736 + 3 * x2834 - x3738 * x7),
            x1256 * x3740 + 3 * x2842 + 4 * x3715 - x3741 * x7,
            x1256 * x3743 + 3 * x2849 + 3 * x3724 - x3745 * x7,
            x1256 * x3746 + 3 * x2858 + 2 * x3730 - x3747 * x7,
            x1256 * x3748 + 3 * x2865 + x3737 - x3749 * x7,
            x1256 * x3750 + 3 * x2871 - x3751 * x7,
            -x3
            * (
                -x3
                * (
                    -x3 * (-x3 * (x1256 * x3766 + 2 * x2931 - x3793 * x7) + x4374 * x5)
                    + x4 * (x4369 - x4371 - x4372 + x4373)
                    + x4376 * x5
                )
                + x37 * (-x4370 + x4375 + x4385)
                + x4390 * x5
            )
            + x5 * (-x3 * x4390 + x37 * (-x4383 + x4384 + x4388) + x4389 * x5)
            + x81 * (x4377 - x4382 - x4386 + x4389),
            -x3
            * (
                -x3 * (-x3 * (x1256 * x3800 + x3792 - x3818 * x7 + x3863) + x4393 * x5)
                + x4 * (x3791 + x3861 - x4391 + x4392 + x4397)
                + x4401 * x5
            )
            + x37 * (x4394 - x4398 + x4400)
            + x5
            * (-x3 * x4401 + x4 * (x3789 + x3858 - x4395 + x4396 + x4399) + x4400 * x5),
            -x3
            * (
                -x3 * (-x3 * (x1256 * x3825 + 2 * x3009 - x3844 * x7) + x4405 * x5)
                + x4 * (-x4402 - x4403 + x4404 + x4410)
                + x4414 * x5
            )
            + x37 * (x4406 - x4411 + x4413)
            + x5 * (-x3 * x4414 + x4 * (-x4407 - x4408 + x4409 + x4412) + x4413 * x5),
            -x3
            * (-x3 * (x1256 * x3848 + 2 * x3033 + 2 * x3817 - x3864 * x7) + x4420 * x5)
            + x4 * (x4415 - x4416 - x4417 - x4418 + x4419)
            + x5 * (-x3 * x4420 + x4419 * x5),
            -x3 * (-x3 * (x1256 * x3867 + x3843 - x3878 * x7 + x3908) + x4424 * x5)
            + x4 * (x3833 + x3903 + x4421 - x4422 + x4423)
            + x5 * (-x3 * x4424 + x4423 * x5),
            -x3 * (-x3 * (x1256 * x3881 + 2 * x3082 - x3892 * x7) + x4429 * x5)
            + x4 * (x4425 - x4426 - x4427 + x4428)
            + x5 * (-x3 * x4429 + x4428 * x5),
            -x3 * (x1256 * x3898 + 2 * x3095 + 3 * x3862 - x3899 * x7)
            + x5 * (x1256 * x3896 + 2 * x3093 + 3 * x3859 - x3898 * x7),
            -x3 * (x1256 * x3907 + 2 * x3108 + 2 * x3877 - x3909 * x7)
            + x5 * (x1256 * x3905 + 2 * x3106 + 2 * x3875 - x3907 * x7),
            -x3 * (x1256 * x3914 + x3891 - x3915 * x7 + x3928)
            + x5 * (x1256 * x3912 + x3889 - x3914 * x7 + x3926),
            -x3 * (x1256 * x3920 + 2 * x3134 - x3921 * x7)
            + x5 * (x1256 * x3918 + 2 * x3132 - x3920 * x7),
            x1256 * x3922 + 2 * x3140 + 4 * x3897 - x3923 * x7,
            x1256 * x3924 + 2 * x3147 + 3 * x3906 - x3925 * x7,
            x1256 * x3927 + 2 * x3154 + 2 * x3913 - x3929 * x7,
            x1256 * x3930 + 2 * x3160 + x3919 - x3931 * x7,
            x1256 * x3932 + 2 * x3166 - x3933 * x7,
            -x3
            * (
                -x3
                * (
                    -x3 * (-x3 * (x1256 * x3945 + x3231 - x3971 * x7) + x4436 * x5)
                    + x4 * (x3230 + x4432 - x4434 + x4435)
                    + x4438 * x5
                )
                + x37 * (-x4433 + x4437 + x4446)
                + x4451 * x5
            )
            + x5 * (-x3 * x4451 + x37 * (-x4444 + x4445 + x4449) + x4450 * x5)
            + x81 * (x4439 - x4443 - x4447 + x4450),
            -x3
            * (
                -x3 * (-x3 * (x1256 * x3976 + x3280 + x3970 - x3993 * x7) + x4454 * x5)
                + x4 * (x3279 + x3969 - x4452 + x4453 + x4458)
                + x4462 * x5
            )
            + x37 * (x4455 - x4459 + x4461)
            + x5
            * (-x3 * x4462 + x4 * (x3277 + x3967 - x4456 + x4457 + x4460) + x4461 * x5),
            -x3
            * (
                -x3 * (-x3 * (x1256 * x3998 + x3325 - x4016 * x7) + x4465 * x5)
                + x4 * (x3324 - x4463 + x4464 + x4469)
                + x4473 * x5
            )
            + x37 * (x4466 - x4470 + x4472)
            + x5 * (-x3 * x4473 + x4 * (x3322 - x4467 + x4468 + x4471) + x4472 * x5),
            -x3 * (-x3 * (x1256 * x4018 + x3360 + 2 * x3992 - x4028 * x7) + x4478 * x5)
            + x4 * (x3356 + x4474 - x4475 - x4476 + x4477)
            + x5 * (-x3 * x4478 + x4477 * x5),
            -x3 * (-x3 * (x1256 * x4030 + x3393 + x4015 - x4040 * x7) + x4482 * x5)
            + x4 * (x3390 + x4005 + x4479 - x4480 + x4481)
            + x5 * (-x3 * x4482 + x4481 * x5),
            -x3 * (-x3 * (x1256 * x4042 + x3429 - x4052 * x7) + x4486 * x5)
            + x4 * (x3425 + x4483 - x4484 + x4485)
            + x5 * (-x3 * x4486 + x4485 * x5),
            -x3 * (x1256 * x4056 + x3452 + 3 * x4027 - x4057 * x7)
            + x5 * (x1256 * x4054 + x3449 + 3 * x4025 - x4056 * x7),
            -x3 * (x1256 * x4061 + x3473 + 2 * x4039 - x4062 * x7)
            + x5 * (x1256 * x4059 + x3470 + 2 * x4037 - x4061 * x7),
            -x3 * (x1256 * x4066 + x3492 + x4051 - x4067 * x7)
            + x5 * (x1256 * x4064 + x3490 + x4049 - x4066 * x7),
            -x3 * (x1256 * x4071 + x3510 - x4072 * x7)
            + x5 * (x1256 * x4069 + x3508 - x4071 * x7),
            x1256 * x4073 + x3518 + 4 * x4055 - x4074 * x7,
            x1256 * x4075 + x3529 + 3 * x4060 - x4076 * x7,
            x1256 * x4077 + x3539 + 2 * x4065 - x4078 * x7,
            x1256 * x4079 + x3548 + x4070 - x4080 * x7,
            x1256 * x4081 + x3557 - x4082 * x7,
            -x3
            * (
                -x3
                * (
                    -x3 * (-x3 * (x1256 * x4100 + x4157) + x4491 * x5)
                    + x4 * (x4135 + x4488 - x4490)
                    + x4493 * x5
                )
                + x37 * (-x4489 + x4492 + x4500)
                + x4505 * x5
            )
            + x5 * (-x3 * x4505 + x37 * (-x4498 + x4499 + x4503) + x4504 * x5)
            + x81 * (x4494 - x4497 - x4501 + x4504),
            -x3
            * (
                -x3 * (-x3 * (x1256 * x4137 + x4203) + x4507 * x5)
                + x4 * (x4201 - x4506 + x4510)
                + x4514 * x5
            )
            + x37 * (x4508 - x4511 + x4513)
            + x5 * (-x3 * x4514 + x4 * (x4198 - x4509 + x4512) + x4513 * x5),
            -x3
            * (
                -x3 * (-x3 * (x1256 * x4165 + x4221) + x4516 * x5)
                + x4 * (x4206 - x4515 + x4519)
                + x4523 * x5
            )
            + x37 * (x4517 - x4520 + x4522)
            + x5 * (-x3 * x4523 + x4 * (x4211 - x4518 + x4521) + x4522 * x5),
            -x3 * (-x3 * (x1256 * x4188 + x4250) + x4526 * x5)
            + x4 * (x4246 - x4524 + x4525)
            + x5 * (-x3 * x4526 + x4525 * x5),
            -x3 * (-x3 * (x1256 * x4208 + x4260) + x4529 * x5)
            + x4 * (x4256 - x4527 + x4528)
            + x5 * (-x3 * x4529 + x4528 * x5),
            -x3 * (-x3 * (x1256 * x4227 + x4269) + x4532 * x5)
            + x4 * (x4262 - x4530 + x4531)
            + x5 * (-x3 * x4532 + x4531 * x5),
            -x3 * (x1256 * x4249 + x4284) + x5 * (x1256 * x4243 + x4282),
            -x3 * (x1256 * x4259 + x4288) + x5 * (x1256 * x4254 + x4286),
            -x3 * (x1256 * x4268 + x4292) + x5 * (x1256 * x4265 + x4290),
            -x3 * (x1256 * x4279 + x4296) + x5 * (x1256 * x4277 + x4294),
            x1256 * x4283 + 4 * x4247 - x4285 * x7,
            x1256 * x4287 + 3 * x4257 - x4289 * x7,
            x1256 * x4291 + 2 * x4266 - x4293 * x7,
            x1256 * x4295 + x4278 - x4297 * x7,
            x1256 * x4298 - x4299 * x7,
            -x3
            * (
                -x3 * (-x3 * (-x3 * x4561 + x4541 * x5) + x4543 * x5 + x4560)
                + x37 * (-x4537 + x4542 + x4553)
                + x4559 * x5
            )
            + x5 * (-x3 * x4559 + x37 * (-x4551 + x4552 + x4557) + x4558 * x5)
            + x81 * (x4544 + x4550 - x4554 + x4558),
            -x3 * (-x3 * (-x3 * x4575 + x4564 * x5) + x4573 * x5 + x4574)
            + x37 * (x4565 - x4569 + x4571)
            + x5 * (-x3 * x4573 + x4571 * x5 + x4572),
            -x3 * (-x3 * (-x3 * x4591 + x4579 * x5) + x4589 * x5 + x4590)
            + x37 * (x4580 - x4585 + x4587)
            + x5 * (-x3 * x4589 + x4587 * x5 + x4588),
            -x3 * (-x3 * x4597 + x4596 * x5) + x4595 + x5 * (-x3 * x4596 + x4594 * x5),
            -x3 * (-x3 * x4603 + x4602 * x5) + x4601 + x5 * (-x3 * x4602 + x4600 * x5),
            -x3 * (-x3 * x4610 + x4609 * x5) + x4608 + x5 * (-x3 * x4609 + x4607 * x5),
            -x3 * x4612 + x4611 * x5,
            -x3 * x4614 + x4613 * x5,
            -x3 * x4616 + x4615 * x5,
            -x3 * x4618 + x4617 * x5,
            x170 * x4611 + 3 * x4595 - x4612 * x7,
            x170 * x4613 + 2 * x4601 - x4614 * x7,
            x170 * x4615 + x4608 - x4616 * x7,
            x170 * x4617 - x4618 * x7,
            x1844 * x4298 + 3 * x3557 + 4 * x4278 - x4299 * x9,
        ]
    )
