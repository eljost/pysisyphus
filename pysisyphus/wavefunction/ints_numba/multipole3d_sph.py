"""
Molecular integrals over Gaussian basis functions generated by sympleints.
See https://github.com/eljost/sympleints for more information.

sympleints version: 0.1.dev103+g56f68c5.d20240122
sympy version: 1.12

sympleints was executed with the following arguments:
	/home/johannes/.pyenv/versions/sympleints/bin/sympleints --norm cgto --keys ~2c2e ~3c2e_sph ~coul --opt-basic --prefix opt_new

	lmax = 4
	lauxmax = 6
	out_dir = .
	prefix = opt_new
	keys = ['~2c2e', '~3c2e_sph', '~coul']
	sph = False
	opt_basic = True
	boys_func = sympleints.testing.boys
	normalize = cgto
"""


import numba
from numba import i8, f8
import numpy


func_type = numba.types.FunctionType(
    numba.types.void(f8, f8, f8[:], f8, f8, f8[:], f8[:], f8[::1])
)


@numba.jit(
    func_type.signature,
    nopython=True,
    nogil=True,
    fastmath=True,
    cache=True,
)
def multipole3d_sph_00(ax, da, A, bx, db, B, R, result):
    """Primitive Cartesian 3D (ss) spherical multipole integrals.
    In contrast to the other multipole integrals, the origin R is calculated
    inside the function and is (possibly) unique for all primitive pairs.

    Generated code; DO NOT modify by hand!"""

    x0 = (ax + bx) ** (-1.0)
    x1 = ax * bx * x0

    # 9 item(s)
    result[0] = (
        5.56832799683170785
        * da
        * db
        * x0**1.5
        * numpy.exp(-x1 * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2))
    )
    result[1] = 0
    result[2] = 0
    result[3] = 0
    result[4] = 0
    result[5] = 0
    result[6] = 0
    result[7] = 0
    result[8] = 0


@numba.jit(
    func_type.signature,
    nopython=True,
    nogil=True,
    fastmath=True,
    cache=True,
)
def multipole3d_sph_10(ax, da, A, bx, db, B, R, result):
    """Primitive Cartesian 3D (ps) spherical multipole integrals.
    In contrast to the other multipole integrals, the origin R is calculated
    inside the function and is (possibly) unique for all primitive pairs.

    Generated code; DO NOT modify by hand!"""

    x0 = ax + bx
    x1 = x0 ** (-1.0)
    x2 = ax * bx * x1
    x3 = (
        5.56832799683170785
        * da
        * db
        * numpy.sqrt(x1)
        * numpy.exp(-x2 * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2))
    )
    x4 = 1.0 * x1 * x3
    x5 = 0.5 * x3 / x0**2

    # 27 item(s)
    result[0] = -x4 * (-x1 * (ax * A[0] + bx * B[0]) + A[0])
    result[1] = -x4 * (-x1 * (ax * A[1] + bx * B[1]) + A[1])
    result[2] = -x4 * (-x1 * (ax * A[2] + bx * B[2]) + A[2])
    result[3] = 0
    result[4] = x5
    result[5] = 0
    result[6] = 0
    result[7] = 0
    result[8] = x5
    result[9] = x5
    result[10] = 0
    result[11] = 0
    result[12] = 0
    result[13] = 0
    result[14] = 0
    result[15] = 0
    result[16] = 0
    result[17] = 0
    result[18] = 0
    result[19] = 0
    result[20] = 0
    result[21] = 0
    result[22] = 0
    result[23] = 0
    result[24] = 0
    result[25] = 0
    result[26] = 0


@numba.jit(
    func_type.signature,
    nopython=True,
    nogil=True,
    fastmath=True,
    cache=True,
)
def multipole3d_sph_01(ax, da, A, bx, db, B, R, result):
    """See docstring of multipole3d_sph_10."""

    # Call equivalent function and write to result
    tmp = numpy.zeros_like(result)
    multipole3d_sph_10(bx, db, B, ax, da, A, R, tmp)
    result[:] = numpy.transpose(tmp.reshape(9, 3, 1), axes=(0, 2, 1)).flatten()


@numba.jit(
    func_type.signature,
    nopython=True,
    nogil=True,
    fastmath=True,
    cache=True,
)
def multipole3d_sph_20(ax, da, A, bx, db, B, R, result):
    """Primitive Cartesian 3D (ds) spherical multipole integrals.
    In contrast to the other multipole integrals, the origin R is calculated
    inside the function and is (possibly) unique for all primitive pairs.

    Generated code; DO NOT modify by hand!"""

    x0 = ax + bx
    x1 = x0 ** (-1.0)
    x2 = -x1 * (ax * A[0] + bx * B[0]) + A[0]
    x3 = 0.5 * x1
    x4 = ax * bx * x1
    x5 = (
        5.56832799683170785
        * da
        * db
        * numpy.sqrt(x1)
        * numpy.exp(-x4 * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2))
    )
    x6 = x1 * x5
    x7 = 1.73205080756887729
    x8 = 0.333333333333333315 * x7
    x9 = x6 * x8
    x10 = -x1 * (ax * A[1] + bx * B[1]) + A[1]
    x11 = 1.0 * x10
    x12 = x2 * x5
    x13 = x1 * x12
    x14 = -x1 * (ax * A[2] + bx * B[2]) + A[2]
    x15 = x0 ** (-2.0)
    x16 = 0.5 * x15
    x17 = -x12 * x16
    x18 = x15 * x8
    x19 = x18 * x5
    x20 = x16 * x5
    x21 = -x14 * x20
    x22 = -x10 * x20
    x23 = x5 / x0**3
    x24 = 0.433012701892219298 * x23
    x25 = x23 * x7
    x26 = -0.0833333333333333287 * x25
    x27 = 0.144337567297406433 * x25

    # 54 item(s)
    result[0] = x9 * (x2**2 + x3)
    result[1] = x11 * x13
    result[2] = 1.0 * x13 * x14
    result[3] = x9 * (x10**2 + x3)
    result[4] = x11 * x14 * x6
    result[5] = x9 * (x14**2 + x3)
    result[6] = 0
    result[7] = x17
    result[8] = 0
    result[9] = -x10 * x19
    result[10] = x21
    result[11] = 0
    result[12] = 0
    result[13] = 0
    result[14] = x17
    result[15] = 0
    result[16] = x22
    result[17] = -x14 * x19
    result[18] = -x12 * x18
    result[19] = x22
    result[20] = x21
    result[21] = 0
    result[22] = 0
    result[23] = 0
    result[24] = 0
    result[25] = x24
    result[26] = 0
    result[27] = 0
    result[28] = 0
    result[29] = 0
    result[30] = 0
    result[31] = 0
    result[32] = 0
    result[33] = 0
    result[34] = x24
    result[35] = 0
    result[36] = x26
    result[37] = 0
    result[38] = 0
    result[39] = x26
    result[40] = 0
    result[41] = 0.166666666666666657 * x25
    result[42] = 0
    result[43] = 0
    result[44] = x24
    result[45] = 0
    result[46] = 0
    result[47] = 0
    result[48] = x27
    result[49] = 0
    result[50] = 0
    result[51] = -x27
    result[52] = 0
    result[53] = 0


@numba.jit(
    func_type.signature,
    nopython=True,
    nogil=True,
    fastmath=True,
    cache=True,
)
def multipole3d_sph_02(ax, da, A, bx, db, B, R, result):
    """See docstring of multipole3d_sph_20."""

    # Call equivalent function and write to result
    tmp = numpy.zeros_like(result)
    multipole3d_sph_20(bx, db, B, ax, da, A, R, tmp)
    result[:] = numpy.transpose(tmp.reshape(9, 6, 1), axes=(0, 2, 1)).flatten()


@numba.jit(
    func_type.signature,
    nopython=True,
    nogil=True,
    fastmath=True,
    cache=True,
)
def multipole3d_sph_30(ax, da, A, bx, db, B, R, result):
    """Primitive Cartesian 3D (fs) spherical multipole integrals.
    In contrast to the other multipole integrals, the origin R is calculated
    inside the function and is (possibly) unique for all primitive pairs.

    Generated code; DO NOT modify by hand!"""

    x0 = ax + bx
    x1 = x0 ** (-1.0)
    x2 = -x1 * (ax * A[0] + bx * B[0]) + A[0]
    x3 = x2**2
    x4 = 1.5 * x1
    x5 = ax * bx * x1
    x6 = (
        5.56832799683170785
        * da
        * db
        * numpy.sqrt(x1)
        * numpy.exp(-x5 * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2))
    )
    x7 = x2 * x6
    x8 = x1 * x7
    x9 = 3.87298334620741689
    x10 = 0.0666666666666666657 * x9
    x11 = -x1 * (ax * A[1] + bx * B[1]) + A[1]
    x12 = x11 * x6
    x13 = x1 * x12
    x14 = 1.73205080756887729
    x15 = 0.5 * x1
    x16 = x14 * (x15 + x3)
    x17 = 0.333333333333333315 * x16
    x18 = -x1 * (ax * A[2] + bx * B[2]) + A[2]
    x19 = x18 * x6
    x20 = x1 * x19
    x21 = x11**2
    x22 = x15 + x21
    x23 = 0.333333333333333315 * x14
    x24 = x23 * x8
    x25 = x18**2
    x26 = x15 + x25
    x27 = x0 ** (-2.0)
    x28 = x27 * x6
    x29 = 0.166666666666666657 * x28
    x30 = x16 * x29
    x31 = x11 * x28
    x32 = x2 * x23
    x33 = x31 * x32
    x34 = 0.5 * x2
    x35 = x19 * x27
    x36 = 3.0 * x1
    x37 = 0.0166666666666666664 * x28 * x9
    x38 = x11 * x35
    x39 = x23 * x38
    x40 = x14 * x29
    x41 = x26 * x40
    x42 = x32 * x35
    x43 = x22 * x40
    x44 = x0 ** (-3.0)
    x45 = x14 * x44
    x46 = 0.288675134594812866 * x45
    x47 = -x46 * x7
    x48 = -x12 * x46
    x49 = 0.433012701892219298 * x44
    x50 = x49 * x6
    x51 = -x19 * x46
    x52 = x44 * x9
    x53 = 0.0500000000000000028 * x52
    x54 = 0.0833333333333333287 * x45
    x55 = x19 * x54
    x56 = 0.166666666666666657 * x45
    x57 = 0.0866025403784438513 * x52
    x58 = 0.144337567297406433 * x45
    x59 = x19 * x58

    # 90 item(s)
    result[0] = -x10 * x8 * (x3 + x4)
    result[1] = -x13 * x17
    result[2] = -x17 * x20
    result[3] = -x22 * x24
    result[4] = -1.0 * x11 * x2 * x20
    result[5] = -x24 * x26
    result[6] = -x10 * x13 * (x21 + x4)
    result[7] = -x20 * x22 * x23
    result[8] = -x13 * x23 * x26
    result[9] = -x10 * x20 * (x25 + x4)
    result[10] = 0
    result[11] = x30
    result[12] = 0
    result[13] = x33
    result[14] = x34 * x35
    result[15] = 0
    result[16] = x37 * (6.0 * x21 + x36)
    result[17] = x39
    result[18] = x41
    result[19] = 0
    result[20] = 0
    result[21] = 0
    result[22] = x30
    result[23] = 0
    result[24] = x31 * x34
    result[25] = x42
    result[26] = 0
    result[27] = x43
    result[28] = x39
    result[29] = x37 * (6.0 * x25 + x36)
    result[30] = x37 * (6.0 * x3 + x36)
    result[31] = x33
    result[32] = x42
    result[33] = x43
    result[34] = 0.5 * x38
    result[35] = x41
    result[36] = 0
    result[37] = 0
    result[38] = 0
    result[39] = 0
    result[40] = 0
    result[41] = x47
    result[42] = 0
    result[43] = x48
    result[44] = -x19 * x49
    result[45] = 0
    result[46] = 0
    result[47] = 0
    result[48] = 0
    result[49] = 0
    result[50] = 0
    result[51] = 0
    result[52] = 0
    result[53] = 0
    result[54] = -x2 * x50
    result[55] = 0
    result[56] = 0
    result[57] = x48
    result[58] = x51
    result[59] = 0
    result[60] = x53 * x7
    result[61] = x12 * x54
    result[62] = x55
    result[63] = x54 * x7
    result[64] = 0
    result[65] = -x56 * x7
    result[66] = x12 * x53
    result[67] = x55
    result[68] = -x12 * x56
    result[69] = -0.100000000000000006 * x19 * x52
    result[70] = 0
    result[71] = 0
    result[72] = x47
    result[73] = 0
    result[74] = -x11 * x50
    result[75] = x51
    result[76] = 0
    result[77] = 0
    result[78] = 0
    result[79] = 0
    result[80] = -x57 * x7
    result[81] = -x12 * x58
    result[82] = -x59
    result[83] = x58 * x7
    result[84] = 0
    result[85] = 0
    result[86] = x12 * x57
    result[87] = x59
    result[88] = 0
    result[89] = 0


@numba.jit(
    func_type.signature,
    nopython=True,
    nogil=True,
    fastmath=True,
    cache=True,
)
def multipole3d_sph_03(ax, da, A, bx, db, B, R, result):
    """See docstring of multipole3d_sph_30."""

    # Call equivalent function and write to result
    tmp = numpy.zeros_like(result)
    multipole3d_sph_30(bx, db, B, ax, da, A, R, tmp)
    result[:] = numpy.transpose(tmp.reshape(9, 10, 1), axes=(0, 2, 1)).flatten()


@numba.jit(
    func_type.signature,
    nopython=True,
    nogil=True,
    fastmath=True,
    cache=True,
)
def multipole3d_sph_40(ax, da, A, bx, db, B, R, result):
    """Primitive Cartesian 3D (gs) spherical multipole integrals.
    In contrast to the other multipole integrals, the origin R is calculated
    inside the function and is (possibly) unique for all primitive pairs.

    Generated code; DO NOT modify by hand!"""

    x0 = 2.0 * ax + 2.0 * bx
    x1 = x0 ** (-1.0)
    x2 = (ax + bx) ** (-1.0)
    x3 = x2 * (ax * A[0] + bx * B[0]) - A[0]
    x4 = ax * bx * x2
    x5 = numpy.exp(-x4 * (A[0] - B[0]) ** 2)
    x6 = 1.77245385090551603
    x7 = numpy.sqrt(x2)
    x8 = x6 * x7
    x9 = x5 * x8
    x10 = x3**2 * x9
    x11 = x1 * x9
    x12 = 3.0 * x11
    x13 = x10 + x11
    x14 = x13 * x3
    x15 = x11 * x3
    x16 = x14 + 2.0 * x15
    x17 = x1 * (3.0 * x10 + x12) + x16 * x3
    x18 = da * db
    x19 = 10.2469507659595984 * x18
    x20 = 0.00952380952380952467 * x19
    x21 = numpy.exp(-x4 * (A[2] - B[2]) ** 2)
    x22 = numpy.exp(-x4 * (A[1] - B[1]) ** 2)
    x23 = 3.14159265358979324 * x2 * x22
    x24 = x21 * x23
    x25 = x20 * x24
    x26 = x2 * (ax * A[1] + bx * B[1]) - A[1]
    x27 = x24 * x26
    x28 = 3.87298334620741689 * x18
    x29 = 0.0666666666666666657 * x28
    x30 = x16 * x29
    x31 = x2 * (ax * A[2] + bx * B[2]) - A[2]
    x32 = x24 * x31
    x33 = x21 * x8
    x34 = x22 * x8
    x35 = x26**2 * x34
    x36 = x1 * x34
    x37 = x35 + x36
    x38 = 0.333333333333333315 * x18
    x39 = x13 * x27
    x40 = 1.73205080756887729
    x41 = x38 * x40
    x42 = x31 * x41
    x43 = x31**2 * x33
    x44 = x1 * x33
    x45 = x43 + x44
    x46 = x38 * x45
    x47 = x29 * x3
    x48 = x26 * x37
    x49 = x26 * x36
    x50 = x48 + 2.0 * x49
    x51 = x2 * x5
    x52 = 3.14159265358979324 * x51
    x53 = x21 * x52
    x54 = x50 * x53
    x55 = x37 * x53
    x56 = x3 * x55
    x57 = x23 * x5
    x58 = x26 * x3
    x59 = x57 * x58
    x60 = x40 * x46
    x61 = x31 * x45
    x62 = x31 * x44
    x63 = x61 + 2.0 * x62
    x64 = x57 * x63
    x65 = 3.0 * x36
    x66 = x1 * (3.0 * x35 + x65) + x26 * x50
    x67 = x20 * x53
    x68 = x29 * x31
    x69 = x29 * x64
    x70 = 3.0 * x44
    x71 = x1 * (3.0 * x43 + x70) + x31 * x63
    x72 = x20 * x57
    x73 = x1 * x16
    x74 = x24 * x29 * x73
    x75 = 0.66666666666666663 * x18
    x76 = x1 * x75
    x77 = x1 * x31
    x78 = x13 * x77
    x79 = x24 * x78
    x80 = x1 * (x35 + x65)
    x81 = x1 * x35
    x82 = x80 + 2.0 * x81
    x83 = x53 * x82
    x84 = 5.56832799683170785 * x21 * x22 * x51 * x7
    x85 = x58 * x84
    x86 = x40 * x75 * x77 * x85
    x87 = x3 * x57
    x88 = x1 * x60
    x89 = x26 * x57
    x90 = x45 * x76
    x91 = x1 * x69
    x92 = x1 * x41
    x93 = x1 * (x43 + x70)
    x94 = x1 * x43
    x95 = x93 + 2.0 * x94
    x96 = x57 * x95
    x97 = x1 * x29 * x50 * x53
    x98 = x37 * x53 * x77
    x99 = x1 * (x10 + x12)
    x100 = x1 * x10
    x101 = 2.0 * x100 + x99
    x102 = x101 * x29
    x103 = 0.115470053837925149 * x1 * x28
    x104 = x101 * x103 * x24
    x105 = x0 ** (-2.0)
    x106 = x105 * x18
    x107 = 2.30940107675850292 * x106
    x108 = x31 * x84
    x109 = x106 * x40
    x110 = 1.15470053837925146 * x109
    x111 = x108 * x110
    x112 = x111 * x3
    x113 = x103 * x83
    x114 = x111 * x26
    x115 = 0.577350269189625731 * x109
    x116 = x110 * x85
    x117 = x107 * x108
    x118 = x103 * x96
    x119 = 0.5 * x21
    x120 = x105 * x9
    x121 = x100 + 3.0 * x120
    x122 = x3 * (6.0 * x120 + x121)
    x123 = x23 * (x1 * (7.0 * x100 + 9.0 * x120 + 2.0 * x99) + x122 * x3)
    x124 = 0.00952380952380952381 * x19
    x125 = x119 * x23
    x126 = x122 * x125
    x127 = 0.0666666666666666667 * x28
    x128 = 0.5 * x33
    x129 = 3.0 * x105
    x130 = x129 * x34 + x81
    x131 = x13 * x130
    x132 = 0.333333333333333333 * x18
    x133 = x121 * x31
    x134 = x132 * x40
    x135 = 0.5 * x45
    x136 = x121 * x34
    x137 = x129 * x33 + x94
    x138 = x13 * x36
    x139 = 6.0 * x105
    x140 = x26 * (x130 + x139 * x34)
    x141 = x119 * x52
    x142 = x140 * x141
    x143 = x130 * x31
    x144 = 1.0 * x57
    x145 = x1 * x144
    x146 = x31 * (x137 + x139 * x33)
    x147 = x144 * x146
    x148 = x145 * x63
    x149 = 9.0 * x105
    x150 = x52 * (x1 * (x149 * x34 + 2.0 * x80 + 7.0 * x81) + x140 * x26)
    x151 = x130 * x9
    x152 = 0.866025403784438597 * x21
    x153 = x152 * x23
    x154 = x122 * x153
    x155 = x153 * x26
    x156 = 0.866025403784438597 * x45
    x157 = x152 * x52
    x158 = x140 * x157

    # 135 item(s)
    result[0] = x17 * x25
    result[1] = x27 * x30
    result[2] = x30 * x32
    result[3] = x13 * x33 * x37 * x38
    result[4] = x39 * x42
    result[5] = x13 * x34 * x46
    result[6] = x47 * x54
    result[7] = x42 * x56
    result[8] = x59 * x60
    result[9] = x47 * x64
    result[10] = x66 * x67
    result[11] = x54 * x68
    result[12] = x37 * x46 * x9
    result[13] = x26 * x69
    result[14] = x71 * x72
    result[15] = 0
    result[16] = x74
    result[17] = 0
    result[18] = x39 * x76
    result[19] = x41 * x79
    result[20] = 0
    result[21] = x47 * x83
    result[22] = x86
    result[23] = x87 * x88
    result[24] = 0
    result[25] = x67 * (x1 * (x48 + 8.0 * x49) + x26 * x82)
    result[26] = x68 * x83
    result[27] = x89 * x90
    result[28] = x91
    result[29] = 0
    result[30] = 0
    result[31] = 0
    result[32] = x74
    result[33] = 0
    result[34] = x39 * x92
    result[35] = x75 * x79
    result[36] = 0
    result[37] = x56 * x92
    result[38] = x86
    result[39] = x47 * x96
    result[40] = 0
    result[41] = x97
    result[42] = x75 * x98
    result[43] = x29 * x89 * x95
    result[44] = x72 * (x1 * (x61 + 8.0 * x62) + x31 * x95)
    result[45] = x25 * (x1 * (x14 + 8.0 * x15) + x101 * x3)
    result[46] = x102 * x27
    result[47] = x102 * x32
    result[48] = x56 * x76
    result[49] = x86
    result[50] = x87 * x90
    result[51] = x97
    result[52] = x41 * x98
    result[53] = x88 * x89
    result[54] = x91
    result[55] = 0
    result[56] = 0
    result[57] = 0
    result[58] = 0
    result[59] = 0
    result[60] = 0
    result[61] = x104
    result[62] = 0
    result[63] = x107 * x85
    result[64] = x112
    result[65] = 0
    result[66] = x113
    result[67] = x114
    result[68] = x115 * x45 * x57
    result[69] = 0
    result[70] = 0
    result[71] = 0
    result[72] = 0
    result[73] = 0
    result[74] = 0
    result[75] = 0
    result[76] = 0
    result[77] = 0
    result[78] = 0
    result[79] = x115 * x13 * x24
    result[80] = 0
    result[81] = 0
    result[82] = x116
    result[83] = x112
    result[84] = 0
    result[85] = 0
    result[86] = x113
    result[87] = x117 * x26
    result[88] = x118
    result[89] = 0
    result[90] = x124 * (1.57079632679489662 * x1 * x17 * x2 * x21 * x22 - x119 * x123)
    result[91] = x127 * x26 * (1.57079632679489662 * x1 * x16 * x2 * x21 * x22 - x126)
    result[92] = x127 * x31 * (1.57079632679489662 * x1 * x16 * x2 * x21 * x22 - x126)
    result[93] = (
        1.0 * x132 * (x1 * x13 * x21 * x37 * x6 * x7 - x121 * x128 * x37 - x128 * x131)
    )
    result[94] = (
        x134 * x26 * (1.57079632679489662 * x1 * x13 * x2 * x21 * x22 * x31 - x125 * x133)
    )
    result[95] = 1.0 * x132 * (x13 * x137 * x22 * x6 * x7 - x135 * x136 - x135 * x138)
    result[96] = x127 * x3 * (1.57079632679489662 * x1 * x2 * x21 * x5 * x50 - x142)
    result[97] = (
        x134 * x3 * (1.57079632679489662 * x1 * x2 * x21 * x31 * x37 * x5 - x141 * x143)
    )
    result[98] = x134 * (1.0 * x137 * x59 - x145 * x45 * x58)
    result[99] = x127 * x3 * (x147 - x148)
    result[100] = x124 * (1.57079632679489662 * x1 * x2 * x21 * x5 * x66 - x119 * x150)
    result[101] = x127 * x31 * (1.57079632679489662 * x1 * x2 * x21 * x5 * x50 - x142)
    result[102] = (
        1.0 * x132 * (-x11 * x135 * x37 - x135 * x151 + x137 * x37 * x5 * x6 * x7)
    )
    result[103] = x127 * x26 * (x147 - x148)
    result[104] = x124 * (
        x144 * (x1 * (x149 * x33 + 2.0 * x93 + 7.0 * x94) + x146 * x31) - x145 * x71
    )
    result[105] = 0
    result[106] = 0
    result[107] = x104
    result[108] = 0
    result[109] = x116
    result[110] = x117 * x3
    result[111] = 0
    result[112] = x115 * x55
    result[113] = x114
    result[114] = x118
    result[115] = 0
    result[116] = 0
    result[117] = 0
    result[118] = 0
    result[119] = 0
    result[120] = x124 * (-x1 * x153 * x17 + x123 * x152)
    result[121] = x127 * (x154 * x26 - x155 * x73)
    result[122] = x127 * x31 * (-x153 * x73 + x154)
    result[123] = 0.866025403784438597 * x132 * (x121 * x21 * x37 * x6 * x7 - x131 * x33)
    result[124] = x134 * x155 * (x133 - x78)
    result[125] = x132 * x156 * (x136 - x138)
    result[126] = x127 * x3 * (2.72069904635132662 * x1 * x2 * x21 * x5 * x50 - x158)
    result[127] = (
        x134 * x3 * (2.72069904635132662 * x1 * x2 * x21 * x31 * x37 * x5 - x143 * x157)
    )
    result[128] = 0
    result[129] = 0
    result[130] = x124 * (2.72069904635132662 * x1 * x2 * x21 * x5 * x66 - x150 * x152)
    result[131] = x127 * x31 * (2.72069904635132662 * x1 * x2 * x21 * x5 * x50 - x158)
    result[132] = x132 * (
        0.866025403784438597 * x1 * x37 * x45 * x5 * x6 * x7 - x151 * x156
    )
    result[133] = 0
    result[134] = 0


@numba.jit(
    func_type.signature,
    nopython=True,
    nogil=True,
    fastmath=True,
    cache=True,
)
def multipole3d_sph_04(ax, da, A, bx, db, B, R, result):
    """See docstring of multipole3d_sph_40."""

    # Call equivalent function and write to result
    tmp = numpy.zeros_like(result)
    multipole3d_sph_40(bx, db, B, ax, da, A, R, tmp)
    result[:] = numpy.transpose(tmp.reshape(9, 15, 1), axes=(0, 2, 1)).flatten()


@numba.jit(
    func_type.signature,
    nopython=True,
    nogil=True,
    fastmath=True,
    cache=True,
)
def multipole3d_sph_11(ax, da, A, bx, db, B, R, result):
    """Primitive Cartesian 3D (pp) spherical multipole integrals.
    In contrast to the other multipole integrals, the origin R is calculated
    inside the function and is (possibly) unique for all primitive pairs.

    Generated code; DO NOT modify by hand!"""

    x0 = ax + bx
    x1 = x0 ** (-1.0)
    x2 = 0.5 * x1
    x3 = x1 * (ax * A[0] + bx * B[0])
    x4 = -x3
    x5 = x4 + A[0]
    x6 = x4 + B[0]
    x7 = ax * bx * x1
    x8 = (
        5.56832799683170785
        * da
        * db
        * numpy.sqrt(x1)
        * numpy.exp(-x7 * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2))
    )
    x9 = 1.0 * x1 * x8
    x10 = x1 * (ax * A[1] + bx * B[1])
    x11 = -x10
    x12 = x11 + B[1]
    x13 = x5 * x9
    x14 = x1 * (ax * A[2] + bx * B[2])
    x15 = -x14
    x16 = x15 + B[2]
    x17 = x11 + A[1]
    x18 = x17 * x9
    x19 = x15 + A[2]
    x20 = x19 * x9
    x21 = 0.5 * x8 / x0**2
    x22 = -x21 * x5
    x23 = -x21 * x6
    x24 = -x16 * x21
    x25 = -x19 * x21
    x26 = -x17 * x21
    x27 = -x12 * x21
    x28 = x8 / x0**3
    x29 = 0.433012701892219298 * x28
    x30 = -0.25 * x28

    # 81 item(s)
    result[0] = x9 * (x2 + x5 * x6)
    result[1] = x12 * x13
    result[2] = x13 * x16
    result[3] = x18 * x6
    result[4] = x9 * (x12 * x17 + x2)
    result[5] = x16 * x18
    result[6] = x20 * x6
    result[7] = x12 * x20
    result[8] = x9 * (x16 * x19 + x2)
    result[9] = 0
    result[10] = x22
    result[11] = 0
    result[12] = x23
    result[13] = x21 * (2.0 * x10 - A[1] - B[1])
    result[14] = x24
    result[15] = 0
    result[16] = x25
    result[17] = 0
    result[18] = 0
    result[19] = 0
    result[20] = x22
    result[21] = 0
    result[22] = 0
    result[23] = x26
    result[24] = x23
    result[25] = x27
    result[26] = x21 * (2.0 * x14 - A[2] - B[2])
    result[27] = x21 * (2.0 * x3 - A[0] - B[0])
    result[28] = x27
    result[29] = x24
    result[30] = x26
    result[31] = 0
    result[32] = 0
    result[33] = x25
    result[34] = 0
    result[35] = 0
    result[36] = 0
    result[37] = x29
    result[38] = 0
    result[39] = x29
    result[40] = 0
    result[41] = 0
    result[42] = 0
    result[43] = 0
    result[44] = 0
    result[45] = 0
    result[46] = 0
    result[47] = 0
    result[48] = 0
    result[49] = 0
    result[50] = x29
    result[51] = 0
    result[52] = x29
    result[53] = 0
    result[54] = x30
    result[55] = 0
    result[56] = 0
    result[57] = 0
    result[58] = x30
    result[59] = 0
    result[60] = 0
    result[61] = 0
    result[62] = 0.5 * x28
    result[63] = 0
    result[64] = 0
    result[65] = x29
    result[66] = 0
    result[67] = 0
    result[68] = 0
    result[69] = x29
    result[70] = 0
    result[71] = 0
    result[72] = x29
    result[73] = 0
    result[74] = 0
    result[75] = 0
    result[76] = -x29
    result[77] = 0
    result[78] = 0
    result[79] = 0
    result[80] = 0


@numba.jit(
    func_type.signature,
    nopython=True,
    nogil=True,
    fastmath=True,
    cache=True,
)
def multipole3d_sph_21(ax, da, A, bx, db, B, R, result):
    """Primitive Cartesian 3D (dp) spherical multipole integrals.
    In contrast to the other multipole integrals, the origin R is calculated
    inside the function and is (possibly) unique for all primitive pairs.

    Generated code; DO NOT modify by hand!"""

    x0 = ax + bx
    x1 = x0 ** (-1.0)
    x2 = x1 * (ax * A[0] + bx * B[0])
    x3 = -2.0 * x2 + A[0] + B[0]
    x4 = x1 * x3
    x5 = -x2
    x6 = x5 + A[0]
    x7 = x5 + B[0]
    x8 = x6 * x7
    x9 = 2.0 * x8
    x10 = x1 + x9
    x11 = ax * bx * x1
    x12 = (
        5.56832799683170785
        * da
        * db
        * numpy.sqrt(x1)
        * numpy.exp(-x11 * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2))
    )
    x13 = x1 * x12
    x14 = 1.73205080756887729
    x15 = 0.166666666666666657 * x14
    x16 = x13 * x15
    x17 = x1 * (ax * A[1] + bx * B[1])
    x18 = -x17
    x19 = x18 + B[1]
    x20 = 0.333333333333333315 * x19
    x21 = 0.5 * x1
    x22 = x21 + x6**2
    x23 = x13 * x14
    x24 = x22 * x23
    x25 = x1 * (ax * A[2] + bx * B[2])
    x26 = -x25
    x27 = x26 + B[2]
    x28 = 0.333333333333333315 * x27
    x29 = x18 + A[1]
    x30 = x21 + x8
    x31 = 1.0 * x13
    x32 = x30 * x31
    x33 = x19 * x29
    x34 = x21 + x33
    x35 = x31 * x6
    x36 = x26 + A[2]
    x37 = x27 * x36
    x38 = x21 + x37
    x39 = x21 + x29**2
    x40 = x23 * x39
    x41 = 0.333333333333333315 * x7
    x42 = -2.0 * x17 + A[1] + B[1]
    x43 = x1 * x42
    x44 = 2.0 * x33
    x45 = x1 + x44
    x46 = x31 * x36
    x47 = x21 + x36**2
    x48 = x23 * x47
    x49 = -2.0 * x25 + A[2] + B[2]
    x50 = x1 * x49
    x51 = 2.0 * x37
    x52 = x1 + x51
    x53 = x0 ** (-2.0)
    x54 = x12 * x53
    x55 = x15 * x54
    x56 = x22 * x55
    x57 = 0.5 * x12
    x58 = x53 * x57
    x59 = x30 * x58
    x60 = x58 * x6
    x61 = x14 * x54
    x62 = x29 * x61
    x63 = 1.5 * x1
    x64 = x36 * x58
    x65 = x38 * x58
    x66 = x47 * x55
    x67 = x39 * x55
    x68 = x29 * x58
    x69 = x34 * x58
    x70 = x36 * x61
    x71 = x6 * x61
    x72 = x0 ** (-3.0)
    x73 = x12 * x72
    x74 = x14 * x73
    x75 = 0.288675134594812866 * x74
    x76 = -x6 * x75
    x77 = 0.433012701892219298 * x73
    x78 = -x3 * x77
    x79 = -x42 * x77
    x80 = x36 * x77
    x81 = -x80
    x82 = -x29 * x75
    x83 = x6 * x77
    x84 = -x83
    x85 = -x49 * x77
    x86 = -x36 * x75
    x87 = 3.0 * x1
    x88 = x10 * x6 - 2.0 * x4 - x6 * (x87 + x9)
    x89 = 0.0416666666666666644 * x61
    x90 = 0.0833333333333333287 * x74
    x91 = x27 * x90
    x92 = 0.25 * x73
    x93 = x36 * x92
    x94 = x57 * x72
    x95 = x29 * x45 - x29 * (x44 + x87) - 2.0 * x43
    x96 = x15 * x73
    x97 = -x29 * x77
    x98 = 0.0721687836487032164 * x61
    x99 = 0.144337567297406433 * x74
    x100 = x27 * x99

    # 162 item(s)
    result[0] = -x16 * (x10 * x6 + x4)
    result[1] = -x20 * x24
    result[2] = -x24 * x28
    result[3] = -x29 * x32
    result[4] = -x34 * x35
    result[5] = -x27 * x29 * x35
    result[6] = -x32 * x36
    result[7] = -x19 * x35 * x36
    result[8] = -x35 * x38
    result[9] = -x40 * x41
    result[10] = -x16 * (x29 * x45 + x43)
    result[11] = -x28 * x40
    result[12] = -x29 * x46 * x7
    result[13] = -x34 * x46
    result[14] = -x29 * x31 * x38
    result[15] = -x41 * x48
    result[16] = -x20 * x48
    result[17] = -x16 * (x36 * x52 + x50)
    result[18] = 0
    result[19] = x56
    result[20] = 0
    result[21] = x59
    result[22] = x42 * x60
    result[23] = x27 * x60
    result[24] = 0
    result[25] = x36 * x60
    result[26] = 0
    result[27] = x41 * x62
    result[28] = x55 * (x29 * x42 + x33 + x63)
    result[29] = x28 * x62
    result[30] = x64 * x7
    result[31] = x42 * x64
    result[32] = x65
    result[33] = 0
    result[34] = x66
    result[35] = 0
    result[36] = 0
    result[37] = 0
    result[38] = x56
    result[39] = 0
    result[40] = 0
    result[41] = x29 * x60
    result[42] = x59
    result[43] = x19 * x60
    result[44] = x49 * x60
    result[45] = 0
    result[46] = 0
    result[47] = x67
    result[48] = x68 * x7
    result[49] = x69
    result[50] = x49 * x68
    result[51] = x41 * x70
    result[52] = x20 * x70
    result[53] = x55 * (x36 * x49 + x37 + x63)
    result[54] = x55 * (x3 * x6 + x63 + x8)
    result[55] = x20 * x71
    result[56] = x28 * x71
    result[57] = x3 * x68
    result[58] = x69
    result[59] = x27 * x68
    result[60] = x3 * x64
    result[61] = x19 * x64
    result[62] = x65
    result[63] = x67
    result[64] = 0
    result[65] = 0
    result[66] = x29 * x64
    result[67] = 0
    result[68] = 0
    result[69] = x66
    result[70] = 0
    result[71] = 0
    result[72] = 0
    result[73] = x76
    result[74] = 0
    result[75] = x78
    result[76] = x79
    result[77] = -x27 * x77
    result[78] = 0
    result[79] = x81
    result[80] = 0
    result[81] = x82
    result[82] = 0
    result[83] = 0
    result[84] = x81
    result[85] = 0
    result[86] = 0
    result[87] = 0
    result[88] = 0
    result[89] = 0
    result[90] = 0
    result[91] = 0
    result[92] = 0
    result[93] = 0
    result[94] = 0
    result[95] = x84
    result[96] = 0
    result[97] = x84
    result[98] = 0
    result[99] = 0
    result[100] = 0
    result[101] = x82
    result[102] = -x7 * x77
    result[103] = x79
    result[104] = x85
    result[105] = 0
    result[106] = x86
    result[107] = 0
    result[108] = -x88 * x89
    result[109] = x19 * x90
    result[110] = x91
    result[111] = x29 * x92
    result[112] = x6 * x92
    result[113] = 0
    result[114] = x93
    result[115] = 0
    result[116] = -x6 * x94
    result[117] = x7 * x90
    result[118] = -x89 * x95
    result[119] = x91
    result[120] = 0
    result[121] = x93
    result[122] = -x29 * x94
    result[123] = -x7 * x96
    result[124] = -x19 * x96
    result[125] = (
        -0.0833333333333333287 * x61 * (-x36 * x52 + x36 * (x51 + x87) + 2.0 * x50)
    )
    result[126] = 0
    result[127] = 0
    result[128] = x76
    result[129] = 0
    result[130] = 0
    result[131] = x97
    result[132] = x78
    result[133] = -x19 * x77
    result[134] = x85
    result[135] = 0
    result[136] = 0
    result[137] = 0
    result[138] = x97
    result[139] = 0
    result[140] = 0
    result[141] = x86
    result[142] = 0
    result[143] = 0
    result[144] = x88 * x98
    result[145] = -x19 * x99
    result[146] = -x100
    result[147] = x97
    result[148] = x83
    result[149] = 0
    result[150] = x81
    result[151] = 0
    result[152] = 0
    result[153] = x7 * x99
    result[154] = -x95 * x98
    result[155] = x100
    result[156] = 0
    result[157] = x80
    result[158] = 0
    result[159] = 0
    result[160] = 0
    result[161] = 0


@numba.jit(
    func_type.signature,
    nopython=True,
    nogil=True,
    fastmath=True,
    cache=True,
)
def multipole3d_sph_12(ax, da, A, bx, db, B, R, result):
    """See docstring of multipole3d_sph_21."""

    # Call equivalent function and write to result
    tmp = numpy.zeros_like(result)
    multipole3d_sph_21(bx, db, B, ax, da, A, R, tmp)
    result[:] = numpy.transpose(tmp.reshape(9, 6, 3), axes=(0, 2, 1)).flatten()


@numba.jit(
    func_type.signature,
    nopython=True,
    nogil=True,
    fastmath=True,
    cache=True,
)
def multipole3d_sph_31(ax, da, A, bx, db, B, R, result):
    """Primitive Cartesian 3D (fp) spherical multipole integrals.
    In contrast to the other multipole integrals, the origin R is calculated
    inside the function and is (possibly) unique for all primitive pairs.

    Generated code; DO NOT modify by hand!"""

    x0 = ax + bx
    x1 = x0 ** (-1.0)
    x2 = x1 * (ax * A[0] + bx * B[0])
    x3 = -x2
    x4 = x3 + A[0]
    x5 = x3 + B[0]
    x6 = x4 * x5
    x7 = x4**2
    x8 = 2.0 * x7
    x9 = 3.0 * x1
    x10 = x8 + x9
    x11 = x1 * (x10 + 4.0 * x6)
    x12 = -2.0 * x2 + A[0] + B[0]
    x13 = x1 * x12
    x14 = 2.0 * x6
    x15 = x1 + x14
    x16 = x15 * x4
    x17 = x13 + x16
    x18 = 2.0 * x4
    x19 = ax * bx * x1
    x20 = (
        5.56832799683170785
        * da
        * db
        * numpy.exp(-x19 * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2))
    )
    x21 = numpy.sqrt(x1) * x20
    x22 = 3.87298334620741689 * x21
    x23 = 0.0166666666666666664 * x22
    x24 = x1 * x23
    x25 = x1 * (ax * A[1] + bx * B[1])
    x26 = -x25
    x27 = x26 + B[1]
    x28 = x1 * x27
    x29 = 1.5 * x1
    x30 = x4 * (x29 + x7)
    x31 = 0.0666666666666666657 * x22
    x32 = x30 * x31
    x33 = x1 * (ax * A[2] + bx * B[2])
    x34 = -x33
    x35 = x34 + B[2]
    x36 = x1 * x35
    x37 = x26 + A[1]
    x38 = 0.166666666666666657 * x37
    x39 = 1.73205080756887729
    x40 = x17 * x39
    x41 = x1 * x21
    x42 = x40 * x41
    x43 = 0.5 * x1
    x44 = x27 * x37
    x45 = x43 + x44
    x46 = 0.333333333333333315 * x45
    x47 = x39 * (x43 + x7)
    x48 = x1**1.5 * x20
    x49 = x47 * x48
    x50 = 0.333333333333333315 * x21
    x51 = x47 * x50
    x52 = x34 + A[2]
    x53 = 0.166666666666666657 * x52
    x54 = x35 * x52
    x55 = x43 + x54
    x56 = 0.333333333333333315 * x55
    x57 = x37**2
    x58 = x43 + x57
    x59 = x39 * x48
    x60 = x58 * x59
    x61 = x43 + x6
    x62 = 0.333333333333333315 * x61
    x63 = -2.0 * x25 + A[1] + B[1]
    x64 = x1 * x63
    x65 = 2.0 * x44
    x66 = x1 + x65
    x67 = x37 * x66
    x68 = x64 + x67
    x69 = x4 * x41
    x70 = 0.166666666666666657 * x39
    x71 = x69 * x70
    x72 = x39 * x4
    x73 = x50 * x72
    x74 = 1.0 * x52
    x75 = x21 * x55
    x76 = x37 * x4
    x77 = x52**2
    x78 = x43 + x77
    x79 = x59 * x78
    x80 = -2.0 * x33 + A[2] + B[2]
    x81 = x1 * x80
    x82 = 2.0 * x54
    x83 = x1 + x82
    x84 = x52 * x83
    x85 = x81 + x84
    x86 = x1 * x5
    x87 = x37 * (x29 + x57)
    x88 = x31 * x87
    x89 = 2.0 * x57
    x90 = x89 + x9
    x91 = x1 * (4.0 * x44 + x90)
    x92 = 2.0 * x37
    x93 = x50 * x86
    x94 = x39 * x41
    x95 = x37 * x39
    x96 = x52 * (x29 + x77)
    x97 = x31 * x96
    x98 = 2.0 * x77
    x99 = x9 + x98
    x100 = x1 * (4.0 * x54 + x99)
    x101 = 2.0 * x52
    x102 = x0 ** (-2.0)
    x103 = x102 * x22
    x104 = 0.0333333333333333329 * x103
    x105 = -x104 * x30
    x106 = x102 * x21
    x107 = 0.0833333333333333287 * x106
    x108 = -x107 * x40
    x109 = 0.166666666666666657 * x64
    x110 = x106 * x47
    x111 = 0.166666666666666657 * x110
    x112 = x106 * x39
    x113 = x112 * x62
    x114 = x37 * x63
    x115 = x114 + x29 + x44
    x116 = x106 * x4
    x117 = x116 * x70
    x118 = 0.333333333333333315 * x112
    x119 = -x118 * x35 * x76
    x120 = 0.5 * x52
    x121 = x106 * x61
    x122 = 0.5 * x4
    x123 = x102 * x75
    x124 = 6.0 * x57 + x9
    x125 = x102 * x23
    x126 = x124 * x125
    x127 = x65 + x9
    x128 = x37 * x5
    x129 = x118 * x52
    x130 = -x128 * x129
    x131 = x112 * x53
    x132 = 0.333333333333333315 * x123
    x133 = x106 * x70
    x134 = x133 * x5
    x135 = x107 * x39
    x136 = -x135 * x85
    x137 = -x104 * x96
    x138 = 0.166666666666666657 * x81
    x139 = 0.5 * x37
    x140 = x106 * x45
    x141 = x122 * x37
    x142 = x27 * x4
    x143 = -x129 * x142
    x144 = x52 * x80
    x145 = x144 + x29 + x54
    x146 = -x104 * x87
    x147 = -x135 * x68
    x148 = x112 * x46
    x149 = x112 * x38
    x150 = 6.0 * x77 + x9
    x151 = x125 * x150
    x152 = x82 + x9
    x153 = x12 * x4
    x154 = x14 + x9
    x155 = 6.0 * x7 + x9
    x156 = x125 * x155
    x157 = x39 * (x153 + x29 + x6)
    x158 = x106 * x157
    x159 = 0.166666666666666657 * x13
    x160 = x0 ** (-3.0)
    x161 = x160 * x22
    x162 = 0.0144337567297406436 * x161
    x163 = x155 * x162
    x164 = x160 * x21
    x165 = 0.144337567297406433 * x164
    x166 = x157 * x165
    x167 = 0.288675134594812866 * x72
    x168 = x164 * x167
    x169 = x164 * x52
    x170 = x167 * x169
    x171 = 0.288675134594812866 * x95
    x172 = x164 * x171
    x173 = x165 * x39
    x174 = x115 * x173
    x175 = 0.433012701892219298 * x160
    x176 = x175 * x21
    x177 = x176 * x52
    x178 = x173 * x78
    x179 = x124 * x162
    x180 = x169 * x171
    x181 = x165 * x47
    x182 = 0.288675134594812866 * x39
    x183 = x164 * x182 * x76
    x184 = 0.433012701892219298 * x4
    x185 = x164 * x184
    x186 = x169 * x182
    x187 = x145 * x173
    x188 = x150 * x162
    x189 = 0.25 * x4
    x190 = 15.0 * x1
    x191 = 4.0 * x153 + x190 + 8.0 * x6 + x8
    x192 = x154 * x4
    x193 = x12 * x9 + x192
    x194 = 0.0333333333333333333 * x103
    x195 = 0.0500000000000000028 * x161
    x196 = x195 * x35
    x197 = 2.0 * x13 - x16 + x192
    x198 = 0.0416666666666666644 * x112
    x199 = x197 * x198
    x200 = x1 + x8
    x201 = 0.25 * x200
    x202 = 0.25 * x10
    x203 = 0.5 * x200
    x204 = x1 * x59
    x205 = 0.0833333333333333333 * x204
    x206 = 0.0833333333333333287 * x164 * x35
    x207 = 0.0833333333333333287 * x169 * x39
    x208 = x1 + x89
    x209 = 0.25 * x208
    x210 = 0.25 * x90
    x211 = 0.5 * x208
    x212 = x127 * x37
    x213 = x212 + 2.0 * x64 - x67
    x214 = x198 * x213
    x215 = 0.25 * x37
    x216 = x1 + x98
    x217 = 2.0 * x99
    x218 = 0.0208333333333333322 * x204
    x219 = x152 * x52
    x220 = x135 * (-x219 + x52 * x83 - 2.0 * x81)
    x221 = 4.0 * x114 + x190 + 8.0 * x44 + x89
    x222 = x212 + x63 * x9
    x223 = x5 * x52
    x224 = 0.100000000000000006 * x161
    x225 = x27 * x52
    x226 = x173 * x58
    x227 = 0.433012701892219298 * x37
    x228 = x164 * x227
    x229 = 0.0866025403784438513 * x161
    x230 = x35 * x4
    x231 = 0.0721687836487032164 * x112
    x232 = -x197 * x231
    x233 = x35 * x37
    x234 = 0.0721687836487032164 * x102 * x59
    x235 = x234 * x83
    x236 = x213 * x231
    x237 = x216 * x234

    # 270 item(s)
    result[0] = x24 * (x11 + x17 * x18)
    result[1] = x28 * x32
    result[2] = x32 * x36
    result[3] = x38 * x42
    result[4] = x46 * x49
    result[5] = x36 * x37 * x51
    result[6] = x42 * x53
    result[7] = x28 * x51 * x52
    result[8] = x49 * x56
    result[9] = x60 * x62
    result[10] = x68 * x71
    result[11] = x36 * x58 * x73
    result[12] = x37 * x41 * x61 * x74
    result[13] = x45 * x69 * x74
    result[14] = 1.0 * x1 * x75 * x76
    result[15] = x62 * x79
    result[16] = x28 * x73 * x78
    result[17] = x71 * x85
    result[18] = x86 * x88
    result[19] = x24 * (x68 * x92 + x91)
    result[20] = x36 * x88
    result[21] = x39 * x52 * x58 * x93
    result[22] = x53 * x68 * x94
    result[23] = x56 * x60
    result[24] = x78 * x93 * x95
    result[25] = x46 * x79
    result[26] = x38 * x85 * x94
    result[27] = x86 * x97
    result[28] = x28 * x97
    result[29] = x24 * (x100 + x101 * x85)
    result[30] = 0
    result[31] = x105
    result[32] = 0
    result[33] = x108
    result[34] = -x109 * x49
    result[35] = -x111 * x35
    result[36] = 0
    result[37] = -x110 * x53
    result[38] = 0
    result[39] = -x113 * x37
    result[40] = -x115 * x117
    result[41] = x119
    result[42] = -x120 * x121
    result[43] = -x116 * x120 * x63
    result[44] = -x122 * x123
    result[45] = 0
    result[46] = -x117 * x78
    result[47] = 0
    result[48] = -x126 * x5
    result[49] = (
        -0.5
        * x104
        * (2.0 * x1 * x92 + 2.0 * x28 + x37 * (2.0 * x114 + x127) + 2.0 * x43 * x63 + x67)
    )
    result[50] = -x126 * x35
    result[51] = x130
    result[52] = -x115 * x131
    result[53] = -x132 * x95
    result[54] = -x134 * x78
    result[55] = -x109 * x79
    result[56] = x136
    result[57] = 0
    result[58] = x137
    result[59] = 0
    result[60] = 0
    result[61] = 0
    result[62] = x105
    result[63] = 0
    result[64] = 0
    result[65] = -x110 * x38
    result[66] = x108
    result[67] = -x111 * x27
    result[68] = -x138 * x49
    result[69] = 0
    result[70] = 0
    result[71] = -x117 * x58
    result[72] = -x121 * x139
    result[73] = -x122 * x140
    result[74] = -x106 * x141 * x80
    result[75] = -x113 * x52
    result[76] = x143
    result[77] = -x117 * x145
    result[78] = 0
    result[79] = 0
    result[80] = x146
    result[81] = -x134 * x58
    result[82] = x147
    result[83] = -x138 * x60
    result[84] = x130
    result[85] = -x148 * x52
    result[86] = -x145 * x149
    result[87] = -x151 * x5
    result[88] = -x151 * x27
    result[89] = (
        -0.5
        * x104
        * (
            2.0 * x1 * x101
            + 2.0 * x36
            + 2.0 * x43 * x80
            + x52 * (2.0 * x144 + x152)
            + x84
        )
    )
    result[90] = (
        -0.5 * x104 * (2.0 * x1 * x18 + x13 + x16 + x4 * (2.0 * x153 + x154) + 2.0 * x86)
    )
    result[91] = -x156 * x27
    result[92] = -x156 * x35
    result[93] = -x158 * x38
    result[94] = -x148 * x4
    result[95] = x119
    result[96] = -x158 * x53
    result[97] = x143
    result[98] = -x132 * x72
    result[99] = -x159 * x60
    result[100] = x147
    result[101] = -x133 * x35 * x58
    result[102] = -x106 * x12 * x120 * x37
    result[103] = -x120 * x140
    result[104] = -x123 * x139
    result[105] = -x159 * x79
    result[106] = -x133 * x27 * x78
    result[107] = x136
    result[108] = x146
    result[109] = 0
    result[110] = 0
    result[111] = -x131 * x58
    result[112] = 0
    result[113] = 0
    result[114] = -x149 * x78
    result[115] = 0
    result[116] = 0
    result[117] = x137
    result[118] = 0
    result[119] = 0
    result[120] = 0
    result[121] = x163
    result[122] = 0
    result[123] = x166
    result[124] = x168 * x63
    result[125] = x168 * x35
    result[126] = 0
    result[127] = x170
    result[128] = 0
    result[129] = x12 * x172
    result[130] = x174
    result[131] = x172 * x35
    result[132] = x12 * x177
    result[133] = x177 * x63
    result[134] = x175 * x75
    result[135] = 0
    result[136] = x178
    result[137] = 0
    result[138] = x179
    result[139] = 0
    result[140] = 0
    result[141] = x180
    result[142] = 0
    result[143] = 0
    result[144] = x178
    result[145] = 0
    result[146] = 0
    result[147] = 0
    result[148] = 0
    result[149] = 0
    result[150] = 0
    result[151] = 0
    result[152] = 0
    result[153] = 0
    result[154] = 0
    result[155] = x181
    result[156] = 0
    result[157] = x181
    result[158] = 0
    result[159] = 0
    result[160] = 0
    result[161] = x183
    result[162] = x176 * x61
    result[163] = x185 * x63
    result[164] = x185 * x80
    result[165] = 0
    result[166] = x170
    result[167] = 0
    result[168] = 0
    result[169] = 0
    result[170] = x179
    result[171] = x172 * x5
    result[172] = x174
    result[173] = x172 * x80
    result[174] = x186 * x5
    result[175] = x186 * x63
    result[176] = x187
    result[177] = 0
    result[178] = x188
    result[179] = 0
    result[180] = -x194 * (
        0.125 * x1 * x191 - 0.125 * x11 - x17 * x189 + 0.25 * x193 * x4
    )
    result[181] = -x142 * x195
    result[182] = -x196 * x4
    result[183] = -x199 * x37
    result[184] = x205 * (-x127 * x201 - x202 * x66 + x203 * x66)
    result[185] = -x206 * x95
    result[186] = -x199 * x52
    result[187] = -x207 * x27
    result[188] = x205 * (x152 * x203 - x201 * x83 - x202 * x83)
    result[189] = x205 * (-x15 * x210 + x15 * x211 - x154 * x209)
    result[190] = -x214 * x4
    result[191] = -x206 * x72
    result[192] = -x169 * x215
    result[193] = -x169 * x189
    result[194] = x141 * x164
    result[195] = x218 * (-x15 * x216 + x15 * x217 - x154 * x216)
    result[196] = x142 * x164 * x70
    result[197] = -x220 * x4
    result[198] = -x128 * x195
    result[199] = -x194 * (
        0.125 * x1 * x221 - x215 * x68 + 0.25 * x222 * x37 - 0.125 * x91
    )
    result[200] = -x196 * x37
    result[201] = -x207 * x5
    result[202] = -x214 * x52
    result[203] = x205 * (x152 * x211 - x209 * x83 - x210 * x83)
    result[204] = x164 * x38 * x39 * x5
    result[205] = x218 * (-x127 * x216 - x216 * x66 + x217 * x66)
    result[206] = -x220 * x37
    result[207] = x223 * x224
    result[208] = x224 * x225
    result[209] = x194 * (
        0.25 * x1 * (4.0 * x144 + x190 + 8.0 * x54 + x98)
        - 0.25 * x100
        - x120 * x85
        + 0.5 * x52 * (x219 + x80 * x9)
    )
    result[210] = 0
    result[211] = 0
    result[212] = x163
    result[213] = 0
    result[214] = 0
    result[215] = x183
    result[216] = x166
    result[217] = x168 * x27
    result[218] = x168 * x80
    result[219] = 0
    result[220] = 0
    result[221] = x226
    result[222] = x12 * x228
    result[223] = x176 * x45
    result[224] = x228 * x80
    result[225] = x12 * x186
    result[226] = x186 * x27
    result[227] = x187
    result[228] = 0
    result[229] = 0
    result[230] = 0
    result[231] = x226
    result[232] = 0
    result[233] = 0
    result[234] = x180
    result[235] = 0
    result[236] = 0
    result[237] = x188
    result[238] = 0
    result[239] = 0
    result[240] = x194 * (
        0.216506350946109649 * x1 * x191
        - 0.216506350946109649 * x11
        - x17 * x184
        + 0.433012701892219298 * x193 * x4
    )
    result[241] = x142 * x229
    result[242] = x229 * x230
    result[243] = -x232 * x37
    result[244] = 0.433012701892219298 * x205 * (x10 * x66 - x127 * x200)
    result[245] = x173 * x233
    result[246] = -x232 * x52
    result[247] = x173 * x225
    result[248] = x235
    result[249] = 0.433012701892219298 * x205 * (-x15 * x90 + x154 * x208)
    result[250] = -x236 * x4
    result[251] = -x173 * x230
    result[252] = x169 * x227
    result[253] = -x185 * x52
    result[254] = 0
    result[255] = x237
    result[256] = 0
    result[257] = 0
    result[258] = -x128 * x229
    result[259] = -x194 * (
        0.216506350946109649 * x1 * x221
        + 0.433012701892219298 * x222 * x37
        - x227 * x68
        - 0.216506350946109649 * x91
    )
    result[260] = -x229 * x233
    result[261] = -x173 * x223
    result[262] = -x236 * x52
    result[263] = -x235
    result[264] = 0
    result[265] = -x237
    result[266] = 0
    result[267] = 0
    result[268] = 0
    result[269] = 0


@numba.jit(
    func_type.signature,
    nopython=True,
    nogil=True,
    fastmath=True,
    cache=True,
)
def multipole3d_sph_13(ax, da, A, bx, db, B, R, result):
    """See docstring of multipole3d_sph_31."""

    # Call equivalent function and write to result
    tmp = numpy.zeros_like(result)
    multipole3d_sph_31(bx, db, B, ax, da, A, R, tmp)
    result[:] = numpy.transpose(tmp.reshape(9, 10, 3), axes=(0, 2, 1)).flatten()


@numba.jit(
    func_type.signature,
    nopython=True,
    nogil=True,
    fastmath=True,
    cache=True,
)
def multipole3d_sph_41(ax, da, A, bx, db, B, R, result):
    """Primitive Cartesian 3D (gp) spherical multipole integrals.
    In contrast to the other multipole integrals, the origin R is calculated
    inside the function and is (possibly) unique for all primitive pairs.

    Generated code; DO NOT modify by hand!"""

    x0 = 2.0 * ax + 2.0 * bx
    x1 = x0 ** (-1.0)
    x2 = (ax + bx) ** (-1.0)
    x3 = -x2 * (ax * A[0] + bx * B[0])
    x4 = -x3 - A[0]
    x5 = ax * bx * x2
    x6 = numpy.exp(-x5 * (A[0] - B[0]) ** 2)
    x7 = 1.77245385090551603
    x8 = numpy.sqrt(x2)
    x9 = x7 * x8
    x10 = x6 * x9
    x11 = x10 * x4
    x12 = -x3 - B[0]
    x13 = x10 * x12
    x14 = x1 * (x11 + x13)
    x15 = x1 * x10
    x16 = x11 * x12
    x17 = x15 + x16
    x18 = x17 * x4
    x19 = x10 * x4**2
    x20 = x15 + x19
    x21 = x20 * x4
    x22 = x15 * x4
    x23 = x21 + 2.0 * x22
    x24 = 3.0 * x15
    x25 = x19 + x24
    x26 = x14 + x18
    x27 = x1 * (2.0 * x16 + x25) + x26 * x4
    x28 = x1 * (3.0 * x14 + 3.0 * x18 + x23) + x27 * x4
    x29 = da * db
    x30 = 10.2469507659595984 * x29
    x31 = 0.00952380952380952467 * x30
    x32 = numpy.exp(-x5 * (A[2] - B[2]) ** 2)
    x33 = numpy.exp(-x5 * (A[1] - B[1]) ** 2)
    x34 = 3.14159265358979324 * x2 * x33
    x35 = x32 * x34
    x36 = x31 * x35
    x37 = -x2 * (ax * A[1] + bx * B[1])
    x38 = -x37 - B[1]
    x39 = x1 * (3.0 * x19 + x24) + x23 * x4
    x40 = x38 * x39
    x41 = -x2 * (ax * A[2] + bx * B[2])
    x42 = -x41 - B[2]
    x43 = x39 * x42
    x44 = -x37 - A[1]
    x45 = 3.87298334620741689 * x29
    x46 = 0.0666666666666666657 * x45
    x47 = x44 * x46
    x48 = x27 * x35
    x49 = x1 * x9
    x50 = x33 * x49
    x51 = x33 * x9
    x52 = x44 * x51
    x53 = x38 * x52
    x54 = x50 + x53
    x55 = x32 * x9
    x56 = x54 * x55
    x57 = x23 * x46
    x58 = x42 * x44
    x59 = x35 * x57
    x60 = -x41 - A[2]
    x61 = x46 * x60
    x62 = x38 * x60
    x63 = x32 * x49
    x64 = x55 * x60
    x65 = x42 * x64
    x66 = x63 + x65
    x67 = x51 * x66
    x68 = x44**2
    x69 = x51 * x68
    x70 = x50 + x69
    x71 = 0.333333333333333315 * x29
    x72 = x55 * x71
    x73 = x38 * x51
    x74 = x1 * (x52 + x73)
    x75 = x44 * x54
    x76 = x74 + x75
    x77 = x42 * x55
    x78 = x20 * x71
    x79 = x70 * x78
    x80 = x44 * x60
    x81 = x26 * x80
    x82 = 1.73205080756887729
    x83 = x71 * x82
    x84 = x35 * x83
    x85 = x54 * x64
    x86 = x78 * x82
    x87 = x52 * x86
    x88 = x60**2
    x89 = x55 * x88
    x90 = x63 + x89
    x91 = x26 * x90
    x92 = x51 * x71
    x93 = x71 * x90
    x94 = x1 * (x64 + x77)
    x95 = x60 * x66
    x96 = x94 + x95
    x97 = x20 * x96
    x98 = x44 * x70
    x99 = x44 * x50
    x100 = x98 + 2.0 * x99
    x101 = x46 * x55
    x102 = x4 * x46
    x103 = 3.0 * x50
    x104 = x103 + x69
    x105 = x1 * (x104 + 2.0 * x53) + x44 * x76
    x106 = x2 * x6
    x107 = 3.14159265358979324 * x106
    x108 = x107 * x32
    x109 = x105 * x108
    x110 = x100 * x42
    x111 = x102 * x108
    x112 = x17 * x64
    x113 = x70 * x83
    x114 = x108 * x4
    x115 = x60 * x76
    x116 = x115 * x83
    x117 = x11 * x113
    x118 = x82 * x93
    x119 = x34 * x6
    x120 = x44 * x96
    x121 = x119 * x120
    x122 = x121 * x83
    x123 = x60 * x90
    x124 = x60 * x63
    x125 = x123 + 2.0 * x124
    x126 = x125 * x17
    x127 = x46 * x51
    x128 = x125 * x38
    x129 = x102 * x119
    x130 = 3.0 * x63
    x131 = x130 + x89
    x132 = x1 * (x131 + 2.0 * x65) + x60 * x96
    x133 = x119 * x132
    x134 = x1 * (x103 + 3.0 * x69) + x100 * x44
    x135 = x108 * x31
    x136 = x134 * x135
    x137 = x1 * (x100 + 3.0 * x74 + 3.0 * x75) + x105 * x44
    x138 = x100 * x108
    x139 = x12 * x61
    x140 = x10 * x46
    x141 = x140 * x66
    x142 = x76 * x90
    x143 = x10 * x71
    x144 = x70 * x96
    x145 = x12 * x44
    x146 = x125 * x145
    x147 = x119 * x46
    x148 = x125 * x54
    x149 = x1 * (x130 + 3.0 * x89) + x125 * x60
    x150 = x119 * x31
    x151 = x149 * x150
    x152 = x1 * (x125 + 3.0 * x94 + 3.0 * x95) + x132 * x60
    x153 = x1 * x36 * x39
    x154 = x1 * x46
    x155 = x154 * x48
    x156 = x38 * x50
    x157 = x156 + x99
    x158 = x157 * x55
    x159 = x1 * x35
    x160 = x159 * x57
    x161 = x1 * x60
    x162 = 0.66666666666666663 * x26
    x163 = x29 * x44
    x164 = x159 * x163
    x165 = x1 * (x103 + x53)
    x166 = x157 * x44
    x167 = x165 + x166
    x168 = x159 * x29
    x169 = 0.66666666666666663 * x168
    x170 = x169 * x20
    x171 = x50 * x78
    x172 = x66 * x82
    x173 = x1 * x104
    x174 = x50 * x68
    x175 = x173 + 2.0 * x174
    x176 = x1 * (2.0 * x156 + x76 + 4.0 * x99)
    x177 = x167 * x44
    x178 = x176 + x177
    x179 = x108 * x178
    x180 = x17 * x82
    x181 = x169 * x180 * x80
    x182 = x114 * x167
    x183 = x119 * x4
    x184 = x1 * x183
    x185 = 0.66666666666666663 * x163 * x172 * x184
    x186 = x183 * x96
    x187 = x1 * x83
    x188 = x1 * x119
    x189 = x125 * x188
    x190 = x1 * (x98 + 8.0 * x99) + x175 * x44
    x191 = x135 * x190
    x192 = 3.0 * x165
    x193 = x1 * x29
    x194 = 0.66666666666666663 * x193
    x195 = x119 * x90
    x196 = x12 * x154
    x197 = x133 * x154
    x198 = x1 * x151
    x199 = x42 * x63
    x200 = x124 + x199
    x201 = x200 * x51
    x202 = x44 * x83
    x203 = x29 * x35
    x204 = x161 * x203
    x205 = x130 + x65
    x206 = x1 * x205
    x207 = x200 * x60
    x208 = x206 + x207
    x209 = x4 * x76
    x210 = x54 * x82
    x211 = x114 * x29
    x212 = x161 * x211
    x213 = 0.66666666666666663 * x210 * x212
    x214 = x183 * x208
    x215 = x1 * x131
    x216 = x63 * x88
    x217 = x215 + 2.0 * x216
    x218 = x1 * (4.0 * x124 + 2.0 * x199 + x96)
    x219 = x208 * x60
    x220 = x218 + x219
    x221 = x119 * x220
    x222 = x1 * x134 * x135
    x223 = x108 * x46
    x224 = x1 * x105 * x223
    x225 = x108 * x29
    x226 = x161 * x225
    x227 = x108 * x194
    x228 = x1 * (x123 + 8.0 * x124) + x217 * x60
    x229 = x150 * x228
    x230 = 3.0 * x206
    x231 = x16 + x24
    x232 = x1 * x231
    x233 = 3.0 * x232
    x234 = x12 * x15
    x235 = x22 + x234
    x236 = x235 * x4
    x237 = x1 * x25
    x238 = x1 * x19
    x239 = x237 + 2.0 * x238
    x240 = x1 * (4.0 * x22 + 2.0 * x234 + x26)
    x241 = x232 + x236
    x242 = x241 * x4
    x243 = x240 + x242
    x244 = x1 * (x21 + 8.0 * x22) + x239 * x4
    x245 = x244 * x36
    x246 = x243 * x35
    x247 = x239 * x46
    x248 = x247 * x35
    x249 = x64 * x70
    x250 = x235 * x83
    x251 = x1 * x108
    x252 = x15 * x70
    x253 = x52 * x90
    x254 = 0.0164957219768464523 * x30
    x255 = x159 * x244 * x254
    x256 = 0.115470053837925149 * x45
    x257 = x159 * x243 * x256
    x258 = x239 * x256
    x259 = x159 * x258
    x260 = 1.15470053837925146 * x241
    x261 = 1.15470053837925146 * x193
    x262 = x0 ** (-2.0)
    x263 = 12.8595026716276638 * x106 * x262 * x29 * x32 * x33 * x8
    x264 = x263 * x4
    x265 = 0.577350269189625731 * x82
    x266 = x241 * x265
    x267 = 1.15470053837925146 * x82
    x268 = x157 * x212 * x267
    x269 = 1.15470053837925146 * x262
    x270 = x183 * x269
    x271 = x29 * x90
    x272 = x175 * x256
    x273 = x1 * x256
    x274 = x179 * x273
    x275 = x251 * x272
    x276 = x168 * x235 * x267 * x80
    x277 = x265 * x29
    x278 = x108 * x277
    x279 = x163 * x269
    x280 = x265 * x271
    x281 = x119 * x262
    x282 = x125 * x256 * x281
    x283 = x1 * x254
    x284 = x108 * x190 * x283
    x285 = x256 * x262
    x286 = x23 * x285 * x35
    x287 = x279 * x35
    x288 = x20 * x277
    x289 = x269 * x60
    x290 = x203 * x289
    x291 = x193 * x265
    x292 = 1.15470053837925146 * x163
    x293 = x184 * x200 * x292 * x82
    x294 = x217 * x256
    x295 = x188 * x208
    x296 = x188 * x294
    x297 = x221 * x273
    x298 = x119 * x228 * x283
    x299 = 0.5 * x32
    x300 = x1 * x24 * (x12 + x4)
    x301 = x10 * x262
    x302 = x238 + 3.0 * x301
    x303 = 6.0 * x262
    x304 = x11 * x303 + x302 * x4
    x305 = x232 * x4 + x300
    x306 = x1 * (4.0 * x232 + 2.0 * x236 + x302) + x305 * x4
    x307 = x34 * (
        x1 * (x233 * x4 + 2.0 * x240 + 2.0 * x242 + 3.0 * x300 + x304) + x306 * x4
    )
    x308 = 0.00952380952380952381 * x30
    x309 = x1 * (2.0 * x237 + 7.0 * x238 + 9.0 * x301) + x304 * x4
    x310 = x299 * x34
    x311 = x309 * x310
    x312 = x306 * x310
    x313 = 0.0666666666666666667 * x45
    x314 = 0.5 * x304
    x315 = 0.5 * x55
    x316 = x165 * x23
    x317 = x304 * x310
    x318 = 0.5 * x66
    x319 = x23 * x50
    x320 = 3.0 * x262
    x321 = x174 + x320 * x51
    x322 = x26 * x321
    x323 = 0.333333333333333333 * x29
    x324 = x302 * x76
    x325 = x1 * x103 * (x38 + x44)
    x326 = x165 * x44 + x325
    x327 = x20 * x326
    x328 = 0.5 * x77
    x329 = x20 * x321
    x330 = x305 * x80
    x331 = x323 * x82
    x332 = 0.5 * x302
    x333 = 0.5 * x20
    x334 = x165 * x64
    x335 = x302 * x52
    x336 = x20 * x99
    x337 = 0.5 * x51
    x338 = x305 * x90
    x339 = x216 + x320 * x55
    x340 = 0.5 * x50
    x341 = x73 * x90
    x342 = x156 * x90
    x343 = x302 * x96
    x344 = x1 * x130 * (x42 + x60)
    x345 = x206 * x60 + x344
    x346 = x303 * x52 + x321 * x44
    x347 = x17 * x346
    x348 = x1 * (4.0 * x165 + 2.0 * x166 + x321) + x326 * x44
    x349 = x107 * x299
    x350 = x348 * x349
    x351 = x349 * x4
    x352 = x346 * x42
    x353 = 0.5 * x321
    x354 = 0.5 * x232
    x355 = x326 * x60
    x356 = x11 * x321
    x357 = 0.5 * x90
    x358 = x17 * x99
    x359 = x22 * x54
    x360 = x11 * x165
    x361 = 1.0 * x119
    x362 = x361 * x4
    x363 = x1 * x361
    x364 = x363 * x4
    x365 = x303 * x64 + x339 * x60
    x366 = x1 * (4.0 * x206 + 2.0 * x207 + x339) + x345 * x60
    x367 = x361 * x366
    x368 = x132 * x363
    x369 = 9.0 * x262
    x370 = x1 * (2.0 * x173 + 7.0 * x174 + x369 * x51) + x346 * x44
    x371 = x349 * x370
    x372 = x107 * (
        x1 * (2.0 * x176 + 2.0 * x177 + x192 * x44 + 3.0 * x325 + x346) + x348 * x44
    )
    x373 = x346 * x60
    x374 = 0.5 * x10
    x375 = x346 * x66
    x376 = x13 * x90
    x377 = x326 * x90
    x378 = 0.5 * x15
    x379 = x321 * x96
    x380 = x125 * x165
    x381 = x361 * (x1 * (2.0 * x215 + 7.0 * x216 + x369 * x55) + x365 * x60)
    x382 = x149 * x363
    x383 = x211 * x269
    x384 = x138 * x285
    x385 = x225 * x289
    x386 = 0.866025403784438597 * x32
    x387 = x34 * x386
    x388 = x309 * x387
    x389 = x1 * x387
    x390 = x306 * x387
    x391 = x27 * x389
    x392 = 0.866025403784438597 * x304
    x393 = 0.866025403784438597 * x55
    x394 = x304 * x387
    x395 = x23 * x389
    x396 = 0.866025403784438597 * x66
    x397 = 0.866025403784438597 * x302
    x398 = 0.866025403784438597 * x20
    x399 = 0.866025403784438597 * x51
    x400 = 0.866025403784438597 * x50
    x401 = x107 * x386
    x402 = x348 * x401
    x403 = x4 * x401
    x404 = 0.866025403784438597 * x321
    x405 = 0.866025403784438597 * x90
    x406 = x370 * x401
    x407 = 0.866025403784438597 * x10

    # 405 item(s)
    result[0] = x28 * x36
    result[1] = x36 * x40
    result[2] = x36 * x43
    result[3] = x47 * x48
    result[4] = x56 * x57
    result[5] = x58 * x59
    result[6] = x48 * x61
    result[7] = x59 * x62
    result[8] = x57 * x67
    result[9] = x26 * x70 * x72
    result[10] = x20 * x72 * x76
    result[11] = x77 * x79
    result[12] = x81 * x84
    result[13] = x85 * x86
    result[14] = x66 * x87
    result[15] = x91 * x92
    result[16] = x20 * x73 * x93
    result[17] = x92 * x97
    result[18] = x100 * x101 * x17
    result[19] = x102 * x109
    result[20] = x110 * x111
    result[21] = x112 * x113
    result[22] = x114 * x116
    result[23] = x117 * x66
    result[24] = x118 * x17 * x52
    result[25] = x11 * x118 * x54
    result[26] = x122 * x4
    result[27] = x126 * x127
    result[28] = x128 * x129
    result[29] = x102 * x133
    result[30] = x12 * x136
    result[31] = x135 * x137
    result[32] = x136 * x42
    result[33] = x138 * x139
    result[34] = x109 * x61
    result[35] = x100 * x141
    result[36] = x13 * x70 * x93
    result[37] = x142 * x143
    result[38] = x143 * x144
    result[39] = x146 * x147
    result[40] = x140 * x148
    result[41] = x133 * x47
    result[42] = x12 * x151
    result[43] = x151 * x38
    result[44] = x150 * x152
    result[45] = 0
    result[46] = x153
    result[47] = 0
    result[48] = x155
    result[49] = x158 * x57
    result[50] = x160 * x42
    result[51] = 0
    result[52] = x161 * x59
    result[53] = 0
    result[54] = x162 * x164
    result[55] = x167 * x20 * x72
    result[56] = x170 * x58
    result[57] = x161 * x26 * x84
    result[58] = x157 * x64 * x86
    result[59] = x171 * x172
    result[60] = 0
    result[61] = x171 * x90
    result[62] = 0
    result[63] = x101 * x17 * x175
    result[64] = x102 * x179
    result[65] = x111 * x175 * x42
    result[66] = x181
    result[67] = x182 * x60 * x83
    result[68] = x185
    result[69] = x118 * x17 * x50
    result[70] = x11 * x118 * x157
    result[71] = x186 * x187
    result[72] = 0
    result[73] = x102 * x189
    result[74] = 0
    result[75] = x12 * x191
    result[76] = x135 * (x1 * (x105 + 3.0 * x166 + x175 + x192) + x178 * x44)
    result[77] = x191 * x42
    result[78] = x108 * x139 * x175
    result[79] = x179 * x61
    result[80] = x141 * x175
    result[81] = x145 * x194 * x195
    result[82] = x143 * x167 * x90
    result[83] = x121 * x194
    result[84] = x119 * x125 * x196
    result[85] = x125 * x140 * x157
    result[86] = x197
    result[87] = 0
    result[88] = x198
    result[89] = 0
    result[90] = 0
    result[91] = 0
    result[92] = x153
    result[93] = 0
    result[94] = 0
    result[95] = x160 * x44
    result[96] = x155
    result[97] = x160 * x38
    result[98] = x201 * x57
    result[99] = 0
    result[100] = 0
    result[101] = x63 * x79
    result[102] = x159 * x202 * x26
    result[103] = x54 * x63 * x86
    result[104] = x200 * x87
    result[105] = x162 * x204
    result[106] = x170 * x62
    result[107] = x20 * x208 * x92
    result[108] = 0
    result[109] = 0
    result[110] = x1 * x102 * x138
    result[111] = x113 * x17 * x63
    result[112] = x108 * x187 * x209
    result[113] = x117 * x200
    result[114] = x181
    result[115] = x213
    result[116] = x202 * x214
    result[117] = x127 * x17 * x217
    result[118] = x129 * x217 * x38
    result[119] = x102 * x221
    result[120] = 0
    result[121] = 0
    result[122] = x222
    result[123] = x138 * x196
    result[124] = x224
    result[125] = x100 * x140 * x200
    result[126] = 0.66666666666666663 * x12 * x226 * x70
    result[127] = x115 * x227
    result[128] = x143 * x208 * x70
    result[129] = x145 * x147 * x217
    result[130] = x140 * x217 * x54
    result[131] = x221 * x47
    result[132] = x12 * x229
    result[133] = x229 * x38
    result[134] = x150 * (x1 * (x132 + 3.0 * x207 + x217 + x230) + x220 * x60)
    result[135] = x36 * (x1 * (x233 + 3.0 * x236 + x239 + x27) + x243 * x4)
    result[136] = x245 * x38
    result[137] = x245 * x42
    result[138] = x246 * x47
    result[139] = x247 * x56
    result[140] = x248 * x58
    result[141] = x246 * x61
    result[142] = x248 * x62
    result[143] = x247 * x67
    result[144] = x241 * x70 * x72
    result[145] = x209 * x227
    result[146] = x227 * x4 * x42 * x70
    result[147] = x241 * x80 * x84
    result[148] = x213
    result[149] = x185
    result[150] = x241 * x90 * x92
    result[151] = x183 * x194 * x38 * x90
    result[152] = x186 * x194
    result[153] = x100 * x101 * x235
    result[154] = x224
    result[155] = x108 * x110 * x154
    result[156] = x249 * x250
    result[157] = x116 * x251
    result[158] = x252 * x66 * x83
    result[159] = x250 * x253
    result[160] = x118 * x15 * x54
    result[161] = x1 * x122
    result[162] = x125 * x127 * x235
    result[163] = x119 * x128 * x154
    result[164] = x197
    result[165] = x222
    result[166] = 0
    result[167] = 0
    result[168] = x100 * x161 * x223
    result[169] = 0
    result[170] = 0
    result[171] = x252 * x93
    result[172] = 0
    result[173] = 0
    result[174] = x189 * x47
    result[175] = 0
    result[176] = 0
    result[177] = x198
    result[178] = 0
    result[179] = 0
    result[180] = 0
    result[181] = x255
    result[182] = 0
    result[183] = x257
    result[184] = x158 * x258
    result[185] = x259 * x42
    result[186] = 0
    result[187] = x161 * x258 * x35
    result[188] = 0
    result[189] = x164 * x260
    result[190] = x182 * x261
    result[191] = x264 * x58
    result[192] = x204 * x266
    result[193] = x268
    result[194] = x172 * x270 * x29
    result[195] = 0
    result[196] = x270 * x271
    result[197] = 0
    result[198] = x235 * x272 * x55
    result[199] = x274
    result[200] = x275 * x42
    result[201] = x276
    result[202] = x161 * x167 * x278
    result[203] = x119 * x172 * x279
    result[204] = x235 * x280 * x50
    result[205] = x15 * x157 * x280
    result[206] = x277 * x281 * x96
    result[207] = 0
    result[208] = x282
    result[209] = 0
    result[210] = x284
    result[211] = 0
    result[212] = 0
    result[213] = x108 * x161 * x272
    result[214] = 0
    result[215] = 0
    result[216] = x195 * x279
    result[217] = 0
    result[218] = 0
    result[219] = x282
    result[220] = 0
    result[221] = 0
    result[222] = 0
    result[223] = 0
    result[224] = 0
    result[225] = 0
    result[226] = 0
    result[227] = 0
    result[228] = 0
    result[229] = 0
    result[230] = x286
    result[231] = 0
    result[232] = x286
    result[233] = 0
    result[234] = 0
    result[235] = 0
    result[236] = x20 * x287
    result[237] = x203 * x26 * x262 * x265
    result[238] = x157 * x288 * x63
    result[239] = x200 * x288 * x50
    result[240] = 0
    result[241] = x20 * x290
    result[242] = 0
    result[243] = 0
    result[244] = 0
    result[245] = x1 * x114 * x272
    result[246] = x180 * x287
    result[247] = x182 * x291
    result[248] = x293
    result[249] = x180 * x290
    result[250] = x268
    result[251] = x214 * x291
    result[252] = 0
    result[253] = x184 * x294
    result[254] = 0
    result[255] = 0
    result[256] = 0
    result[257] = x284
    result[258] = x12 * x275
    result[259] = x274
    result[260] = x10 * x200 * x272
    result[261] = x12 * x263 * x80
    result[262] = 1.15470053837925146 * x167 * x226
    result[263] = x292 * x295
    result[264] = x12 * x296
    result[265] = x10 * x157 * x294
    result[266] = x297
    result[267] = 0
    result[268] = x298
    result[269] = 0
    result[270] = x308 * (1.57079632679489662 * x1 * x2 * x28 * x32 * x33 - x299 * x307)
    result[271] = x308 * x38 * (1.57079632679489662 * x1 * x2 * x32 * x33 * x39 - x311)
    result[272] = x308 * x42 * (1.57079632679489662 * x1 * x2 * x32 * x33 * x39 - x311)
    result[273] = x313 * x44 * (1.57079632679489662 * x1 * x2 * x27 * x32 * x33 - x312)
    result[274] = 1.0 * x313 * (x1 * x23 * x32 * x54 * x7 * x8 - x314 * x56 - x315 * x316)
    result[275] = x313 * (
        1.57079632679489662 * x1 * x2 * x23 * x32 * x33 * x42 * x44 - x317 * x58
    )
    result[276] = x313 * x60 * (1.57079632679489662 * x1 * x2 * x27 * x32 * x33 - x312)
    result[277] = x313 * (
        1.57079632679489662 * x1 * x2 * x23 * x32 * x33 * x38 * x60 - x317 * x62
    )
    result[278] = (
        1.0 * x313 * (x1 * x205 * x23 * x33 * x7 * x8 - x314 * x67 - x318 * x319)
    )
    result[279] = (
        1.0 * x323 * (x1 * x26 * x32 * x7 * x70 * x8 - x305 * x315 * x70 - x315 * x322)
    )
    result[280] = (
        1.0 * x323 * (x1 * x20 * x32 * x7 * x76 * x8 - x315 * x324 - x315 * x327)
    )
    result[281] = (
        1.0
        * x323
        * (x1 * x20 * x32 * x42 * x7 * x70 * x8 - x302 * x328 * x70 - x328 * x329)
    )
    result[282] = x331 * (
        1.57079632679489662 * x1 * x2 * x26 * x32 * x33 * x44 * x60 - x310 * x330
    )
    result[283] = (
        1.0 * x331 * (x1 * x20 * x32 * x54 * x60 * x7 * x8 - x332 * x85 - x333 * x334)
    )
    result[284] = (
        1.0 * x331 * (x1 * x20 * x205 * x33 * x44 * x7 * x8 - x318 * x335 - x318 * x336)
    )
    result[285] = 1.0 * x323 * (x26 * x33 * x339 * x7 * x8 - x337 * x338 - x340 * x91)
    result[286] = (
        1.0 * x323 * (x20 * x33 * x339 * x38 * x7 * x8 - x332 * x341 - x333 * x342)
    )
    result[287] = 1.0 * x323 * (x20 * x33 * x345 * x7 * x8 - x337 * x343 - x340 * x97)
    result[288] = (
        1.0 * x313 * (x1 * x100 * x17 * x32 * x7 * x8 - x100 * x232 * x315 - x315 * x347)
    )
    result[289] = x313 * x4 * (1.57079632679489662 * x1 * x105 * x2 * x32 * x6 - x350)
    result[290] = x313 * (
        1.57079632679489662 * x1 * x100 * x2 * x32 * x4 * x42 * x6 - x351 * x352
    )
    result[291] = (
        1.0 * x331 * (x1 * x17 * x32 * x60 * x7 * x70 * x8 - x112 * x353 - x249 * x354)
    )
    result[292] = x331 * (
        1.57079632679489662 * x1 * x2 * x32 * x4 * x6 * x60 * x76 - x351 * x355
    )
    result[293] = (
        1.0
        * x331
        * (x1 * x205 * x4 * x6 * x7 * x70 * x8 - x22 * x318 * x70 - x318 * x356)
    )
    result[294] = (
        1.0 * x331 * (x17 * x33 * x339 * x44 * x7 * x8 - x253 * x354 - x357 * x358)
    )
    result[295] = (
        1.0 * x331 * (x339 * x4 * x54 * x6 * x7 * x8 - x357 * x359 - x357 * x360)
    )
    result[296] = x331 * (-x120 * x364 + x345 * x362 * x44)
    result[297] = (
        1.0 * x313 * (-x125 * x232 * x337 - x126 * x340 + x17 * x33 * x365 * x7 * x8)
    )
    result[298] = x313 * (-x128 * x364 + x362 * x365 * x38)
    result[299] = x313 * x4 * (x367 - x368)
    result[300] = x12 * x308 * (1.57079632679489662 * x1 * x134 * x2 * x32 * x6 - x371)
    result[301] = x308 * (1.57079632679489662 * x1 * x137 * x2 * x32 * x6 - x299 * x372)
    result[302] = x308 * x42 * (1.57079632679489662 * x1 * x134 * x2 * x32 * x6 - x371)
    result[303] = (
        x12 * x313 * (1.57079632679489662 * x1 * x100 * x2 * x32 * x6 * x60 - x349 * x373)
    )
    result[304] = x313 * x60 * (1.57079632679489662 * x1 * x105 * x2 * x32 * x6 - x350)
    result[305] = (
        1.0 * x313 * (x1 * x100 * x205 * x6 * x7 * x8 - x100 * x15 * x318 - x374 * x375)
    )
    result[306] = (
        1.0 * x323 * (x12 * x339 * x6 * x7 * x70 * x8 - x234 * x357 * x70 - x353 * x376)
    )
    result[307] = 1.0 * x323 * (-x142 * x378 + x339 * x6 * x7 * x76 * x8 - x374 * x377)
    result[308] = 1.0 * x323 * (-x144 * x378 + x345 * x6 * x7 * x70 * x8 - x374 * x379)
    result[309] = x313 * (x145 * x361 * x365 - x146 * x363)
    result[310] = 1.0 * x313 * (-x148 * x378 + x365 * x54 * x6 * x7 * x8 - x374 * x380)
    result[311] = x313 * x44 * (x367 - x368)
    result[312] = x12 * x308 * (x381 - x382)
    result[313] = x308 * x38 * (x381 - x382)
    result[314] = -x308 * (
        x152 * x363
        - x361
        * (x1 * (2.0 * x218 + 2.0 * x219 + x230 * x60 + 3.0 * x344 + x365) + x366 * x60)
    )
    result[315] = 0
    result[316] = 0
    result[317] = x255
    result[318] = 0
    result[319] = 0
    result[320] = x259 * x44
    result[321] = x257
    result[322] = x259 * x38
    result[323] = x201 * x258
    result[324] = 0
    result[325] = 0
    result[326] = x383 * x70
    result[327] = x164 * x266
    result[328] = x210 * x383
    result[329] = x293
    result[330] = x204 * x260
    result[331] = x264 * x62
    result[332] = x214 * x261
    result[333] = 0
    result[334] = 0
    result[335] = x384
    result[336] = x235 * x277 * x63 * x70
    result[337] = x262 * x278 * x76
    result[338] = x200 * x252 * x277
    result[339] = x276
    result[340] = x210 * x385
    result[341] = x163 * x265 * x295
    result[342] = x235 * x294 * x51
    result[343] = x296 * x38
    result[344] = x297
    result[345] = 0
    result[346] = 0
    result[347] = 0
    result[348] = x384
    result[349] = 0
    result[350] = 0
    result[351] = x385 * x70
    result[352] = 0
    result[353] = 0
    result[354] = x296 * x44
    result[355] = 0
    result[356] = 0
    result[357] = x298
    result[358] = 0
    result[359] = 0
    result[360] = x308 * (-x1 * x28 * x387 + x307 * x386)
    result[361] = x308 * (x38 * x388 - x389 * x40)
    result[362] = x308 * (x388 * x42 - x389 * x43)
    result[363] = x313 * x44 * (x390 - x391)
    result[364] = x313 * (-x316 * x393 + x392 * x56)
    result[365] = x313 * x58 * (x394 - x395)
    result[366] = x313 * x60 * (x390 - x391)
    result[367] = x313 * x62 * (x394 - x395)
    result[368] = x313 * (-x319 * x396 + x392 * x67)
    result[369] = x323 * (0.866025403784438597 * x305 * x32 * x7 * x70 * x8 - x322 * x393)
    result[370] = x323 * x393 * (x324 - x327)
    result[371] = (
        0.866025403784438597 * x323 * (x302 * x32 * x42 * x7 * x70 * x8 - x329 * x77)
    )
    result[372] = x331 * (x330 * x387 - x389 * x81)
    result[373] = x331 * (-x334 * x398 + x397 * x85)
    result[374] = x331 * x396 * (x335 - x336)
    result[375] = x323 * (x338 * x399 - x400 * x91)
    result[376] = x323 * (x341 * x397 - x342 * x398)
    result[377] = x323 * (x343 * x399 - x400 * x97)
    result[378] = x313 * (
        0.866025403784438597 * x1 * x100 * x231 * x32 * x7 * x8 - x347 * x393
    )
    result[379] = x313 * x4 * (2.72069904635132662 * x1 * x105 * x2 * x32 * x6 - x402)
    result[380] = x313 * (
        2.72069904635132662 * x1 * x100 * x2 * x32 * x4 * x42 * x6 - x352 * x403
    )
    result[381] = x331 * (
        0.866025403784438597 * x1 * x231 * x32 * x60 * x7 * x70 * x8 - x112 * x404
    )
    result[382] = x331 * (
        2.72069904635132662 * x1 * x2 * x32 * x4 * x6 * x60 * x76 - x355 * x403
    )
    result[383] = x331 * (
        0.866025403784438597 * x1 * x4 * x6 * x66 * x7 * x70 * x8 - x356 * x396
    )
    result[384] = x331 * (
        0.866025403784438597 * x1 * x231 * x33 * x44 * x7 * x8 * x90 - x358 * x405
    )
    result[385] = x331 * x405 * (x359 - x360)
    result[386] = 0
    result[387] = x313 * (
        0.866025403784438597 * x1 * x125 * x231 * x33 * x7 * x8 - x126 * x400
    )
    result[388] = 0
    result[389] = 0
    result[390] = x12 * x308 * (2.72069904635132662 * x1 * x134 * x2 * x32 * x6 - x406)
    result[391] = x308 * (2.72069904635132662 * x1 * x137 * x2 * x32 * x6 - x372 * x386)
    result[392] = x308 * x42 * (2.72069904635132662 * x1 * x134 * x2 * x32 * x6 - x406)
    result[393] = (
        x12 * x313 * (2.72069904635132662 * x1 * x100 * x2 * x32 * x6 * x60 - x373 * x401)
    )
    result[394] = x313 * x60 * (2.72069904635132662 * x1 * x105 * x2 * x32 * x6 - x402)
    result[395] = x313 * (
        0.866025403784438597 * x1 * x100 * x6 * x66 * x7 * x8 - x375 * x407
    )
    result[396] = x323 * (
        0.866025403784438597 * x1 * x12 * x6 * x7 * x70 * x8 * x90 - x376 * x404
    )
    result[397] = x323 * (
        0.866025403784438597 * x1 * x6 * x7 * x76 * x8 * x90 - x377 * x407
    )
    result[398] = x323 * (
        0.866025403784438597 * x1 * x6 * x7 * x70 * x8 * x96 - x379 * x407
    )
    result[399] = 0
    result[400] = x313 * (0.866025403784438597 * x148 * x15 - x380 * x407)
    result[401] = 0
    result[402] = 0
    result[403] = 0
    result[404] = 0


@numba.jit(
    func_type.signature,
    nopython=True,
    nogil=True,
    fastmath=True,
    cache=True,
)
def multipole3d_sph_14(ax, da, A, bx, db, B, R, result):
    """See docstring of multipole3d_sph_41."""

    # Call equivalent function and write to result
    tmp = numpy.zeros_like(result)
    multipole3d_sph_41(bx, db, B, ax, da, A, R, tmp)
    result[:] = numpy.transpose(tmp.reshape(9, 15, 3), axes=(0, 2, 1)).flatten()


@numba.jit(
    func_type.signature,
    nopython=True,
    nogil=True,
    fastmath=True,
    cache=True,
)
def multipole3d_sph_22(ax, da, A, bx, db, B, R, result):
    """Primitive Cartesian 3D (dd) spherical multipole integrals.
    In contrast to the other multipole integrals, the origin R is calculated
    inside the function and is (possibly) unique for all primitive pairs.

    Generated code; DO NOT modify by hand!"""

    x0 = ax + bx
    x1 = x0 ** (-1.0)
    x2 = x1 * (ax * A[0] + bx * B[0])
    x3 = -x2
    x4 = x3 + A[0]
    x5 = x3 + B[0]
    x6 = x4 * x5
    x7 = x5**2
    x8 = 2.0 * x7
    x9 = 3.0 * x1
    x10 = x8 + x9
    x11 = x1 * (x10 + 4.0 * x6)
    x12 = -2.0 * x2 + A[0] + B[0]
    x13 = x1 * x12
    x14 = 2.0 * x6
    x15 = x1 + x14
    x16 = x15 * x5
    x17 = x13 + x16
    x18 = x17 * x4
    x19 = ax * bx * x1
    x20 = (
        5.56832799683170785
        * da
        * db
        * numpy.exp(-x19 * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2))
    )
    x21 = numpy.sqrt(x1) * x20
    x22 = 0.0833333333333333287 * x21
    x23 = x1 * x22
    x24 = x1 * (ax * A[1] + bx * B[1])
    x25 = -x24
    x26 = x25 + B[1]
    x27 = 1.73205080756887729
    x28 = x15 * x4
    x29 = x27 * (x13 + x28)
    x30 = 0.166666666666666657 * x21
    x31 = x1 * x30
    x32 = x29 * x31
    x33 = x1 * (ax * A[2] + bx * B[2])
    x34 = -x33
    x35 = x34 + B[2]
    x36 = x26**2
    x37 = 0.5 * x1
    x38 = x36 + x37
    x39 = x1**1.5 * x20
    x40 = x4**2
    x41 = x37 + x40
    x42 = 0.333333333333333315 * x41
    x43 = x39 * x42
    x44 = x21 * x35
    x45 = x1 * x27
    x46 = x44 * x45
    x47 = x35**2
    x48 = x37 + x47
    x49 = x25 + A[1]
    x50 = x1 * x49
    x51 = x27 * x30
    x52 = x17 * x51
    x53 = x37 + x6
    x54 = x39 * x53
    x55 = x26 * x49
    x56 = x37 + x55
    x57 = 1.0 * x56
    x58 = 1.0 * x53
    x59 = -2.0 * x24 + A[1] + B[1]
    x60 = x1 * x59
    x61 = 2.0 * x55
    x62 = x1 + x61
    x63 = x26 * x62
    x64 = x60 + x63
    x65 = x1 * x4
    x66 = x51 * x65
    x67 = x27 * x4
    x68 = 0.333333333333333315 * x21
    x69 = x50 * x68
    x70 = x34 + A[2]
    x71 = x1 * x70
    x72 = x21 * x26
    x73 = x35 * x70
    x74 = x37 + x73
    x75 = 1.0 * x74
    x76 = x38 * x4
    x77 = -2.0 * x33 + A[2] + B[2]
    x78 = x1 * x77
    x79 = 2.0 * x73
    x80 = x1 + x79
    x81 = x35 * x80
    x82 = x78 + x81
    x83 = x37 + x7
    x84 = x49**2
    x85 = x37 + x84
    x86 = 0.333333333333333315 * x39
    x87 = x85 * x86
    x88 = x49 * x62
    x89 = x60 + x88
    x90 = x27 * x31
    x91 = x89 * x90
    x92 = 2.0 * x36
    x93 = x9 + x92
    x94 = x1 * (4.0 * x55 + x93)
    x95 = x49 * x64
    x96 = x21 * x5
    x97 = x39 * x74
    x98 = x70**2
    x99 = x37 + x98
    x100 = x86 * x99
    x101 = 0.333333333333333315 * x99
    x102 = x70 * x80 + x78
    x103 = x102 * x90
    x104 = 2.0 * x47
    x105 = x104 + x9
    x106 = x1 * (x105 + 4.0 * x73)
    x107 = x70 * x82
    x108 = x0 ** (-2.0)
    x109 = x108 * x22
    x110 = -x109 * x29
    x111 = x108 * x21
    x112 = x111 * x26
    x113 = 0.166666666666666657 * x111
    x114 = x113 * x27
    x115 = x114 * x35
    x116 = x109 * x27
    x117 = -x116 * x17
    x118 = 0.5 * x60
    x119 = x111 * x53
    x120 = 0.5 * x119
    x121 = x26 * x59
    x122 = 1.5 * x1
    x123 = x122 + x55
    x124 = x121 + x123
    x125 = x114 * x4
    x126 = 0.5 * x111
    x127 = x35 * x4
    x128 = 0.5 * x70
    x129 = 0.333333333333333315 * x112
    x130 = x126 * x74
    x131 = 0.333333333333333315 * x111
    x132 = x49 * x83
    x133 = x123 + x49 * x59
    x134 = x114 * x5
    x135 = x35 * x49
    x136 = x131 * x135
    x137 = x61 + x9
    x138 = 2.0 * x1
    x139 = x131 * x48
    x140 = x114 * x70
    x141 = x111 * x128
    x142 = -x116 * x82
    x143 = x5 * x99
    x144 = -x102 * x116
    x145 = x114 * x26
    x146 = x111 * x35
    x147 = x126 * x56
    x148 = 0.5 * x112
    x149 = 0.5 * x78
    x150 = x35 * x77
    x151 = x122 + x73
    x152 = x150 + x151
    x153 = -x116 * x89
    x154 = x131 * x85
    x155 = x49 * x5
    x156 = -x116 * x64
    x157 = x39 * x56
    x158 = x114 * x49
    x159 = x131 * x70
    x160 = x5 * x70
    x161 = x129 * x27
    x162 = x151 + x70 * x77
    x163 = x79 + x9
    x164 = x12 * x5
    x165 = x14 + x9
    x166 = x122 + x6
    x167 = x27 * (x12 * x4 + x166)
    x168 = x113 * x167
    x169 = x164 + x166
    x170 = 0.5 * x13
    x171 = x0 ** (-3.0)
    x172 = x171 * x21
    x173 = 0.144337567297406433 * x172
    x174 = x167 * x173
    x175 = 0.577350269189625731 * x172
    x176 = x175 * x26
    x177 = x172 * x27
    x178 = 0.288675134594812866 * x177
    x179 = x127 * x178
    x180 = x173 * x27
    x181 = x169 * x180
    x182 = x108 * x39
    x183 = 0.433012701892219298 * x182 * x59
    x184 = 0.433012701892219298 * x172
    x185 = x184 * x35
    x186 = x124 * x180
    x187 = x184 * x70
    x188 = x178 * x26 * x70
    x189 = x184 * x74
    x190 = x175 * x49
    x191 = x133 * x180
    x192 = x135 * x178
    x193 = x160 * x178
    x194 = x184 * x53
    x195 = x184 * x4
    x196 = x26 * x4
    x197 = x178 * x196
    x198 = x155 * x178
    x199 = x184 * x5
    x200 = x152 * x180
    x201 = x162 * x180
    x202 = 15.0 * x1
    x203 = 4.0 * x164 + x202 + 8.0 * x6 + x8
    x204 = x165 * x5
    x205 = x12 * x9 + x204
    x206 = 0.166666666666666667 * x111
    x207 = 2.0 * x13
    x208 = x165 * x4 + x207 - x28
    x209 = 0.0416666666666666644 * x27
    x210 = x208 * x209
    x211 = 2.0 * x40
    x212 = x1 + x211
    x213 = x212 * x93
    x214 = x1 + x92
    x215 = x211 + x9
    x216 = x214 * x215
    x217 = 0.5 * x212
    x218 = x1 * x39
    x219 = 0.0833333333333333333 * x218
    x220 = x26 * x35
    x221 = x171 * x22 * x27
    x222 = x1 + x104
    x223 = 0.25 * x222
    x224 = -x16 + x204 + x207
    x225 = x111 * x209
    x226 = x224 * x225
    x227 = x137 * x15
    x228 = x165 * x62
    x229 = 0.5 * x15
    x230 = 0.25 * x218
    x231 = 0.25 * x172
    x232 = x137 * x26
    x233 = 2.0 * x60
    x234 = x232 + x233 - x63
    x235 = x225 * x234
    x236 = 0.166666666666666657 * x177
    x237 = x231 * x70
    x238 = 0.25 * x80
    x239 = x221 * x70
    x240 = 0.5 * x172
    x241 = x163 * x35
    x242 = 2.0 * x78
    x243 = x116 * (-x241 - x242 + x35 * x80)
    x244 = 2.0 * x84
    x245 = x1 + x244
    x246 = x10 * x245
    x247 = x1 + x8
    x248 = x244 + x9
    x249 = x247 * x248
    x250 = 0.5 * x245
    x251 = x137 * x49 + x233 - x88
    x252 = x251 * x5
    x253 = x35 * x5
    x254 = 4.0 * x121 + x202 + 8.0 * x55 + x92
    x255 = x232 + x59 * x9
    x256 = x146 * x251
    x257 = 2.0 * x98
    x258 = x1 + x257
    x259 = 0.25 * x258
    x260 = 0.5 * x257 + 0.5 * x9
    x261 = x116 * (-x163 * x70 - x242 + x70 * x80)
    x262 = x12 * x184
    x263 = x184 * x56
    x264 = x184 * x77
    x265 = 0.0721687836487032164 * x27
    x266 = -x208 * x265
    x267 = 0.0360843918243516082 * x218
    x268 = 0.0721687836487032164 * x182
    x269 = x222 * x268
    x270 = x111 * x265
    x271 = -x224 * x270
    x272 = x234 * x270
    x273 = 0.216506350946109649 * x182 * x80
    x274 = x180 * x70
    x275 = x258 * x268

    # 324 item(s)
    result[0] = x23 * (x11 + 2.0 * x18)
    result[1] = x26 * x32
    result[2] = x32 * x35
    result[3] = x38 * x43
    result[4] = x26 * x42 * x46
    result[5] = x43 * x48
    result[6] = x50 * x52
    result[7] = x54 * x57
    result[8] = x44 * x50 * x58
    result[9] = x64 * x66
    result[10] = x44 * x57 * x65
    result[11] = x48 * x67 * x69
    result[12] = x52 * x71
    result[13] = x58 * x71 * x72
    result[14] = x54 * x75
    result[15] = x27 * x68 * x71 * x76
    result[16] = x65 * x72 * x75
    result[17] = x66 * x82
    result[18] = x83 * x87
    result[19] = x5 * x91
    result[20] = 0.333333333333333315 * x46 * x5 * x85
    result[21] = x23 * (x94 + 2.0 * x95)
    result[22] = x35 * x91
    result[23] = x48 * x87
    result[24] = x27 * x69 * x70 * x83
    result[25] = x57 * x71 * x96
    result[26] = x50 * x75 * x96
    result[27] = x51 * x64 * x71
    result[28] = x57 * x97
    result[29] = x50 * x51 * x82
    result[30] = x100 * x83
    result[31] = x101 * x45 * x5 * x72
    result[32] = x103 * x5
    result[33] = x100 * x38
    result[34] = x103 * x26
    result[35] = x23 * (x106 + 2.0 * x107)
    result[36] = 0
    result[37] = x110
    result[38] = 0
    result[39] = -x112 * x42
    result[40] = -x115 * x41
    result[41] = 0
    result[42] = x117
    result[43] = -x118 * x54
    result[44] = -x120 * x35
    result[45] = -x124 * x125
    result[46] = -x126 * x127 * x59
    result[47] = -x125 * x48
    result[48] = 0
    result[49] = -x119 * x128
    result[50] = 0
    result[51] = -x129 * x67 * x70
    result[52] = -x130 * x4
    result[53] = 0
    result[54] = -x131 * x132
    result[55] = -x133 * x134
    result[56] = -x136 * x27 * x5
    result[57] = (
        -0.5
        * x113
        * (
            2.0 * x138 * x26
            + 2.0 * x37 * x59
            + x49 * (2.0 * x121 + x137)
            + 2.0 * x50
            + x63
        )
    )
    result[58] = -x115 * x133
    result[59] = -x139 * x49
    result[60] = -x140 * x83
    result[61] = -x141 * x5 * x59
    result[62] = -x130 * x5
    result[63] = -x124 * x140
    result[64] = -x118 * x97
    result[65] = x142
    result[66] = 0
    result[67] = -x114 * x143
    result[68] = 0
    result[69] = -x101 * x112
    result[70] = x144
    result[71] = 0
    result[72] = 0
    result[73] = 0
    result[74] = x110
    result[75] = 0
    result[76] = -x145 * x41
    result[77] = -x146 * x42
    result[78] = 0
    result[79] = 0
    result[80] = -x120 * x49
    result[81] = 0
    result[82] = -x147 * x4
    result[83] = -x136 * x67
    result[84] = x117
    result[85] = -x148 * x53
    result[86] = -x149 * x54
    result[87] = -x114 * x76
    result[88] = -x148 * x4 * x77
    result[89] = -x125 * x152
    result[90] = 0
    result[91] = 0
    result[92] = -x134 * x85
    result[93] = 0
    result[94] = x153
    result[95] = -x154 * x35
    result[96] = -x114 * x132
    result[97] = -x147 * x5
    result[98] = -x126 * x155 * x77
    result[99] = x156
    result[100] = -x149 * x157
    result[101] = -x152 * x158
    result[102] = -x159 * x83
    result[103] = -x160 * x161
    result[104] = -x134 * x162
    result[105] = -x159 * x38
    result[106] = -x145 * x162
    result[107] = (
        -0.5
        * x113
        * (
            2.0 * x138 * x35
            + 2.0 * x37 * x77
            + x70 * (2.0 * x150 + x163)
            + 2.0 * x71
            + x81
        )
    )
    result[108] = (
        -0.5 * x113 * (x13 + 2.0 * x138 * x5 + x16 + x4 * (2.0 * x164 + x165) + 2.0 * x65)
    )
    result[109] = -x168 * x26
    result[110] = -x168 * x35
    result[111] = -x131 * x76
    result[112] = -x127 * x161
    result[113] = -x139 * x4
    result[114] = -x158 * x169
    result[115] = -x157 * x170
    result[116] = -x12 * x126 * x135
    result[117] = x156
    result[118] = -x147 * x35
    result[119] = -x158 * x48
    result[120] = -x140 * x169
    result[121] = -x112 * x12 * x128
    result[122] = -x170 * x97
    result[123] = -x140 * x38
    result[124] = -x148 * x74
    result[125] = x142
    result[126] = -x154 * x5
    result[127] = x153
    result[128] = -x115 * x85
    result[129] = 0
    result[130] = 0
    result[131] = 0
    result[132] = -x155 * x159 * x27
    result[133] = -x141 * x56
    result[134] = -x130 * x49
    result[135] = 0
    result[136] = 0
    result[137] = 0
    result[138] = -x131 * x143
    result[139] = -x145 * x99
    result[140] = x144
    result[141] = 0
    result[142] = 0
    result[143] = 0
    result[144] = 0
    result[145] = x174
    result[146] = 0
    result[147] = x176 * x4
    result[148] = x179
    result[149] = 0
    result[150] = x181
    result[151] = x12 * x183
    result[152] = x12 * x185
    result[153] = x186
    result[154] = x185 * x59
    result[155] = x180 * x48
    result[156] = 0
    result[157] = x12 * x187
    result[158] = 0
    result[159] = x188
    result[160] = x189
    result[161] = 0
    result[162] = x190 * x5
    result[163] = x191
    result[164] = x192
    result[165] = 0
    result[166] = 0
    result[167] = 0
    result[168] = x193
    result[169] = x187 * x59
    result[170] = x189
    result[171] = 0
    result[172] = 0
    result[173] = 0
    result[174] = 0
    result[175] = x180 * x99
    result[176] = 0
    result[177] = 0
    result[178] = 0
    result[179] = 0
    result[180] = 0
    result[181] = 0
    result[182] = 0
    result[183] = 0
    result[184] = x180 * x41
    result[185] = 0
    result[186] = 0
    result[187] = 0
    result[188] = x194
    result[189] = 0
    result[190] = x195 * x59
    result[191] = x179
    result[192] = 0
    result[193] = x194
    result[194] = 0
    result[195] = x197
    result[196] = x195 * x77
    result[197] = 0
    result[198] = 0
    result[199] = 0
    result[200] = x198
    result[201] = 0
    result[202] = x191
    result[203] = x190 * x35
    result[204] = x180 * x83
    result[205] = x199 * x59
    result[206] = x199 * x77
    result[207] = x186
    result[208] = x183 * x77
    result[209] = x200
    result[210] = 0
    result[211] = x193
    result[212] = 0
    result[213] = x176 * x70
    result[214] = x201
    result[215] = 0
    result[216] = x206 * (
        -0.125 * x1 * x203 + 0.125 * x11 + 0.25 * x18 - 0.25 * x205 * x4
    )
    result[217] = -x112 * x210
    result[218] = -x146 * x210
    result[219] = -x219 * (0.25 * x213 - x214 * x217 + 0.25 * x216)
    result[220] = -x220 * x221
    result[221] = x219 * (x105 * x217 - x212 * x223 - x215 * x223)
    result[222] = -x226 * x49
    result[223] = -x230 * (0.25 * x227 + 0.25 * x228 - x229 * x62)
    result[224] = -x135 * x231
    result[225] = -x235 * x4
    result[226] = -x127 * x231
    result[227] = x236 * x4 * x49
    result[228] = -x226 * x70
    result[229] = -x237 * x26
    result[230] = x230 * (-x15 * x238 + x163 * x229 - x165 * x238)
    result[231] = -x239 * x4
    result[232] = x196 * x240
    result[233] = -x243 * x4
    result[234] = -x219 * (0.25 * x246 - x247 * x250 + 0.25 * x249)
    result[235] = -x225 * x252
    result[236] = -x221 * x253
    result[237] = x206 * (
        -0.125 * x1 * x254 - 0.25 * x255 * x49 + 0.125 * x94 + 0.25 * x95
    )
    result[238] = -x209 * x256
    result[239] = x219 * (x105 * x250 - x223 * x245 - x223 * x248)
    result[240] = -x239 * x49
    result[241] = -x237 * x5
    result[242] = x155 * x240
    result[243] = -x235 * x70
    result[244] = -x230 * (x137 * x238 - 0.5 * x163 * x62 + x238 * x62)
    result[245] = -x243 * x49
    result[246] = x219 * (-x10 * x259 - x247 * x259 + x247 * x260)
    result[247] = x236 * x26 * x5
    result[248] = -x261 * x5
    result[249] = x219 * (-x214 * x259 + x214 * x260 - x259 * x93)
    result[250] = -x26 * x261
    result[251] = x206 * (
        0.25 * x1 * (x104 + 4.0 * x150 + x202 + 8.0 * x73)
        - 0.25 * x106
        - 0.5 * x107
        + 0.5 * x70 * (x241 + x77 * x9)
    )
    result[252] = 0
    result[253] = 0
    result[254] = x174
    result[255] = 0
    result[256] = x197
    result[257] = x127 * x175
    result[258] = 0
    result[259] = 0
    result[260] = x262 * x49
    result[261] = 0
    result[262] = x263
    result[263] = x192
    result[264] = x181
    result[265] = x26 * x262
    result[266] = 0.433012701892219298 * x12 * x182 * x77
    result[267] = x180 * x38
    result[268] = x26 * x264
    result[269] = x200
    result[270] = 0
    result[271] = 0
    result[272] = x180 * x85
    result[273] = 0
    result[274] = 0
    result[275] = 0
    result[276] = x198
    result[277] = x263
    result[278] = x264 * x49
    result[279] = 0
    result[280] = 0
    result[281] = 0
    result[282] = x160 * x175
    result[283] = x188
    result[284] = x201
    result[285] = 0
    result[286] = 0
    result[287] = 0
    result[288] = x206 * (
        0.216506350946109649 * x1 * x203
        - 0.216506350946109649 * x11
        - 0.433012701892219298 * x18
        + 0.433012701892219298 * x205 * x4
    )
    result[289] = -x112 * x266
    result[290] = -x146 * x266
    result[291] = x267 * (-x213 + x216)
    result[292] = x180 * x220
    result[293] = x269
    result[294] = -x271 * x49
    result[295] = 0.108253175473054825 * x218 * (-x227 + x228)
    result[296] = x185 * x49
    result[297] = -x272 * x4
    result[298] = -x185 * x4
    result[299] = 0
    result[300] = -x271 * x70
    result[301] = x187 * x26
    result[302] = x273
    result[303] = -x274 * x4
    result[304] = 0
    result[305] = 0
    result[306] = x267 * (x246 - x249)
    result[307] = -x252 * x270
    result[308] = -x180 * x253
    result[309] = x206 * (
        -0.216506350946109649 * x1 * x254
        - 0.433012701892219298 * x255 * x49
        + 0.216506350946109649 * x94
        + 0.433012701892219298 * x95
    )
    result[310] = -x256 * x265
    result[311] = -x269
    result[312] = x274 * x49
    result[313] = -x187 * x5
    result[314] = 0
    result[315] = -x272 * x70
    result[316] = -x273
    result[317] = 0
    result[318] = x275
    result[319] = 0
    result[320] = 0
    result[321] = -x275
    result[322] = 0
    result[323] = 0


@numba.jit(
    func_type.signature,
    nopython=True,
    nogil=True,
    fastmath=True,
    cache=True,
)
def multipole3d_sph_32(ax, da, A, bx, db, B, R, result):
    """Primitive Cartesian 3D (fd) spherical multipole integrals.
    In contrast to the other multipole integrals, the origin R is calculated
    inside the function and is (possibly) unique for all primitive pairs.

    Generated code; DO NOT modify by hand!"""

    x0 = ax + bx
    x1 = x0 ** (-1.0)
    x2 = x1 * (ax * A[0] + bx * B[0])
    x3 = -x2
    x4 = x3 + A[0]
    x5 = x3 + B[0]
    x6 = x4 * x5
    x7 = 4.0 * x6
    x8 = x5**2
    x9 = 2.0 * x8
    x10 = 3.0 * x1
    x11 = x10 + x9
    x12 = x1 * (x11 + x7)
    x13 = -2.0 * x2 + A[0] + B[0]
    x14 = x1 * x13
    x15 = 2.0 * x6
    x16 = x1 + x15
    x17 = x16 * x5
    x18 = x14 + x17
    x19 = 2.0 * x4
    x20 = x12 + x18 * x19
    x21 = x20 * x4
    x22 = x16 * x4
    x23 = 2.0 * x14
    x24 = x17 + x22 + x23
    x25 = 2.0 * x1
    x26 = 2.2360679774997897
    x27 = ax * bx * x1
    x28 = (
        5.56832799683170785
        * da
        * db
        * numpy.exp(-x27 * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2))
    )
    x29 = numpy.sqrt(x1) * x28
    x30 = x26 * x29
    x31 = 0.0166666666666666664 * x1 * x30
    x32 = x1 * (ax * A[1] + bx * B[1])
    x33 = -x32
    x34 = x33 + B[1]
    x35 = x1 * x34
    x36 = 3.87298334620741689
    x37 = x4**2
    x38 = 2.0 * x37
    x39 = x10 + x38
    x40 = x1 * (x39 + x7)
    x41 = x14 + x22
    x42 = x36 * (x19 * x41 + x40)
    x43 = 0.0166666666666666664 * x29
    x44 = x42 * x43
    x45 = x1 * (ax * A[2] + bx * B[2])
    x46 = -x45
    x47 = x46 + B[2]
    x48 = x1 * x47
    x49 = x34**2
    x50 = 0.5 * x1
    x51 = x49 + x50
    x52 = x1**1.5 * x28
    x53 = x4 * x52
    x54 = x51 * x53
    x55 = 1.5 * x1
    x56 = x37 + x55
    x57 = 0.0666666666666666657 * x26
    x58 = x56 * x57
    x59 = x36 * x47
    x60 = x4 * x56
    x61 = x29 * x35
    x62 = 0.0666666666666666657 * x61
    x63 = x47**2
    x64 = x50 + x63
    x65 = x53 * x64
    x66 = x33 + A[1]
    x67 = x1 * x66
    x68 = x20 * x29
    x69 = 0.0833333333333333287 * x68
    x70 = x34 * x66
    x71 = x50 + x70
    x72 = 1.73205080756887729
    x73 = 0.166666666666666657 * x52
    x74 = x72 * x73
    x75 = x41 * x74
    x76 = x41 * x72
    x77 = x47 * x76
    x78 = x29 * x67
    x79 = 0.166666666666666657 * x78
    x80 = -2.0 * x32 + A[1] + B[1]
    x81 = x1 * x80
    x82 = 2.0 * x70
    x83 = x1 + x82
    x84 = x34 * x83
    x85 = x81 + x84
    x86 = x37 + x50
    x87 = x73 * x86
    x88 = x52 * x71
    x89 = 0.333333333333333315 * x86
    x90 = x72 * x89
    x91 = x52 * x66
    x92 = x64 * x91
    x93 = x46 + A[2]
    x94 = x1 * x93
    x95 = 0.166666666666666657 * x93
    x96 = x47 * x93
    x97 = x50 + x96
    x98 = x52 * x93
    x99 = x51 * x98
    x100 = x52 * x97
    x101 = -2.0 * x45 + A[2] + B[2]
    x102 = x1 * x101
    x103 = 2.0 * x96
    x104 = x1 + x103
    x105 = x104 * x47
    x106 = x102 + x105
    x107 = x66**2
    x108 = x107 + x50
    x109 = x18 * x73
    x110 = x66 * x83
    x111 = x110 + x81
    x112 = x50 + x6
    x113 = x112 * x74
    x114 = x112 * x52
    x115 = x114 * x72
    x116 = 0.333333333333333315 * x108
    x117 = x116 * x47
    x118 = 4.0 * x70
    x119 = 2.0 * x49
    x120 = x10 + x119
    x121 = x1 * (x118 + x120)
    x122 = 2.0 * x66
    x123 = x121 + x122 * x85
    x124 = x1 * x4
    x125 = 0.0833333333333333287 * x29
    x126 = x124 * x125
    x127 = 0.166666666666666657 * x4
    x128 = x111 * x72
    x129 = 1.0 * x112
    x130 = x91 * x97
    x131 = x4 * x85
    x132 = 0.166666666666666657 * x29 * x94
    x133 = x71 * x97
    x134 = x106 * x72
    x135 = x93**2
    x136 = x135 + x50
    x137 = 0.333333333333333315 * x136
    x138 = x137 * x34
    x139 = x104 * x93
    x140 = x102 + x139
    x141 = x140 * x72
    x142 = 4.0 * x96
    x143 = 2.0 * x63
    x144 = x10 + x143
    x145 = x1 * (x142 + x144)
    x146 = 2.0 * x93
    x147 = x106 * x146 + x145
    x148 = x50 + x8
    x149 = x148 * x91
    x150 = x107 + x55
    x151 = x150 * x57
    x152 = x1 * x5
    x153 = 2.0 * x107
    x154 = x10 + x153
    x155 = x1 * (x118 + x154)
    x156 = x111 * x122 + x155
    x157 = x36 * x43
    x158 = x156 * x157
    x159 = x36 * x5
    x160 = x123 * x66
    x161 = 2.0 * x81
    x162 = x110 + x161 + x84
    x163 = x148 * x98
    x164 = x5 * x72
    x165 = x74 * x97
    x166 = x108 * x73
    x167 = x136 * x73
    x168 = x71 * x74
    x169 = x135 + x55
    x170 = x169 * x57
    x171 = x169 * x93
    x172 = 2.0 * x135
    x173 = x10 + x172
    x174 = x1 * (x142 + x173)
    x175 = x140 * x146 + x174
    x176 = x157 * x175
    x177 = x147 * x93
    x178 = 2.0 * x102
    x179 = x105 + x139 + x178
    x180 = x0 ** (-2.0)
    x181 = x180 * x29
    x182 = 0.00833333333333333322 * x181
    x183 = x182 * x42
    x184 = x34 * x4
    x185 = x180 * x30
    x186 = 0.0666666666666666657 * x185
    x187 = x181 * x4
    x188 = 0.0333333333333333329 * x187 * x56
    x189 = 0.0416666666666666644 * x180
    x190 = x189 * x68
    x191 = 0.0833333333333333287 * x52
    x192 = x191 * x81
    x193 = x125 * x180
    x194 = x34 * x80
    x195 = x55 + x70
    x196 = x194 + x195
    x197 = x1 * x87
    x198 = x47 * x72
    x199 = x193 * x93
    x200 = x181 * x93
    x201 = x200 * x34
    x202 = x197 * x72
    x203 = 0.166666666666666657 * x181
    x204 = x18 * x66
    x205 = x66 * x80
    x206 = x195 + x205
    x207 = x1 * x206
    x208 = 0.333333333333333315 * x66
    x209 = x112 * x72
    x210 = x181 * x47
    x211 = x50 * x80
    x212 = x10 + x82
    x213 = x66 * (2.0 * x194 + x212)
    x214 = x211 + 0.5 * x213 + 2.0 * x35 + x67 + 0.5 * x84
    x215 = x203 * x214
    x216 = x4 * x72
    x217 = x203 * x216
    x218 = x187 * x208 * x64
    x219 = x199 * x72
    x220 = 0.5 * x93
    x221 = 0.5 * x1
    x222 = x221 * x52
    x223 = x112 * x222
    x224 = x203 * x93
    x225 = x196 * x4
    x226 = 0.5 * x53
    x227 = x106 * x180
    x228 = x125 * x227
    x229 = x1 * x167
    x230 = x141 * x193
    x231 = x10 + 6.0 * x107
    x232 = 0.0166666666666666664 * x231
    x233 = x1 * x52
    x234 = x233 * x26
    x235 = x232 * x234
    x236 = 0.5 * x66
    x237 = 2.0 * x67
    x238 = 0.5 * x110 + x211 + x236 * (2.0 * x205 + x212) + x237 + x35
    x239 = 0.0333333333333333329 * x181
    x240 = x238 * x239
    x241 = x213 + x237 + 4.0 * x35
    x242 = 0.0333333333333333329 * x185
    x243 = x148 * x200 * x208
    x244 = 0.166666666666666657 * x66
    x245 = x227 * x29
    x246 = x189 * x29
    x247 = x147 * x246
    x248 = 0.0333333333333333329 * x169
    x249 = x171 * x186
    x250 = x182 * x36
    x251 = x175 * x250
    x252 = x34 * x36
    x253 = x193 * x76
    x254 = x181 * x66
    x255 = x254 * x47
    x256 = x102 * x191
    x257 = x34 * x72
    x258 = x101 * x47
    x259 = x55 + x96
    x260 = x258 + x259
    x261 = x1 * x166
    x262 = x111 * x193
    x263 = x193 * x72
    x264 = x101 * x93
    x265 = x259 + x264
    x266 = x1 * x265
    x267 = 0.333333333333333315 * x200
    x268 = x267 * x4 * x51
    x269 = x265 * x34
    x270 = x101 * x50
    x271 = x10 + x103
    x272 = x93 * (2.0 * x258 + x271)
    x273 = 0.5 * x105 + x270 + 0.5 * x272 + 2.0 * x48 + x94
    x274 = x203 * x273
    x275 = x150 * x66
    x276 = x239 * x275
    x277 = x156 * x250
    x278 = x47 * x66
    x279 = x150 * x186
    x280 = x123 * x246
    x281 = x203 * x66
    x282 = x10 + 6.0 * x135
    x283 = 0.0166666666666666664 * x234
    x284 = x282 * x283
    x285 = 0.0166666666666666664 * x181
    x286 = x159 * x34
    x287 = 0.5 * x93
    x288 = 2.0 * x94
    x289 = 0.5 * x139 + x270 + x287 * (2.0 * x264 + x271) + x288 + x48
    x290 = x239 * x289
    x291 = x272 + x288 + 4.0 * x48
    x292 = x10 + x15
    x293 = 0.5 * x4
    x294 = x13 * x5
    x295 = x4 * (x292 + 2.0 * x294)
    x296 = 2.0 * x124
    x297 = 4.0 * x152 + x295 + x296
    x298 = 0.5 * x14
    x299 = x13 * x4
    x300 = (
        0.5
        * x36
        * (2.0 * x152 + x22 + 2.0 * x293 * (x292 + 2.0 * x299) + 2.0 * x296 + 2.0 * x298)
    )
    x301 = x239 * x300
    x302 = x10 + 6.0 * x37
    x303 = x283 * x302
    x304 = x302 * x34
    x305 = 0.5 * x29 * (2.0 * x124 + 4.0 * x152 + x17 + x295 + 2.0 * x298)
    x306 = x180 * x305
    x307 = x55 + x6
    x308 = x299 + x307
    x309 = x1 * x308
    x310 = 0.333333333333333315 * x187
    x311 = x308 * x72
    x312 = x311 * x34
    x313 = x72 * x97
    x314 = x294 + x307
    x315 = x14 * x191
    x316 = x66 * x72
    x317 = x5 * x66
    x318 = x71 * x72
    x319 = x0 ** (-3.0)
    x320 = x29 * x319
    x321 = 0.0288675134594812872 * x320
    x322 = -x300 * x321
    x323 = 0.0288675134594812872 * x30 * x319
    x324 = 0.0144337567297406436 * x320
    x325 = x324 * x59
    x326 = 0.144337567297406433 * x319
    x327 = -x305 * x326
    x328 = x180 * x52
    x329 = x328 * x80
    x330 = 0.144337567297406433 * x329
    x331 = x29 * x326
    x332 = x198 * x331
    x333 = 0.288675134594812866 * x320
    x334 = x333 * x4
    x335 = x333 * x64
    x336 = x331 * x93
    x337 = 0.577350269189625731 * x320 * x93
    x338 = -x184 * x337
    x339 = x333 * x66
    x340 = x206 * x72
    x341 = 0.144337567297406433 * x328
    x342 = x13 * x341
    x343 = -x214 * x331
    x344 = x336 * x72
    x345 = 0.433012701892219298 * x180
    x346 = x13 * x345
    x347 = x345 * x80
    x348 = 0.0721687836487032164 * x320
    x349 = x136 * x72
    x350 = x136 * x333
    x351 = x348 * x72
    x352 = -x140 * x351
    x353 = x231 * x323
    x354 = x321 * x36
    x355 = -x238 * x354
    x356 = -x317 * x337
    x357 = -x351 * x41
    x358 = x72 * x86
    x359 = x333 * x86
    x360 = x101 * x341
    x361 = x216 * x331
    x362 = x278 * x320
    x363 = -0.577350269189625731 * x362 * x4
    x364 = x101 * x345
    x365 = x331 * x72
    x366 = 0.433012701892219298 * x4
    x367 = x333 * x93
    x368 = x159 * x324
    x369 = x164 * x331
    x370 = x265 * x72
    x371 = -x273 * x331
    x372 = x282 * x323
    x373 = -x289 * x354
    x374 = 0.25 * x1
    x375 = 15.0 * x1
    x376 = x375 + 8.0 * x6
    x377 = 4.0 * x294 + x376 + x9
    x378 = x1 * x377
    x379 = x292 * x5
    x380 = x10 * x13
    x381 = x379 + x380
    x382 = x4 * (x19 * x381 + x378)
    x383 = x292 * x4
    x384 = 7.0 * x14 + x17 + x297 + x379 + x383
    x385 = 0.0333333333333333333 * x185
    x386 = 0.25 * x4
    x387 = 4.0 * x299 + x376 + x38
    x388 = 0.125 * x1
    x389 = x380 + x383
    x390 = 0.0333333333333333333 * x181
    x391 = -x390 * (x386 * x389 - x386 * x41 + x387 * x388 - 0.125 * x40)
    x392 = x1 + x119
    x393 = 9.0 * x1
    x394 = x38 + x393
    x395 = x120 * x39
    x396 = 0.0166666666666666667 * x26
    x397 = x396 * x52
    x398 = x124 * x397
    x399 = x184 * x320 * x59
    x400 = x1 + x143
    x401 = 0.25 * x400
    x402 = x39 * x401
    x403 = 0.166666666666666667 * x181
    x404 = x403 * (0.125 * x12 + x18 * x386 - 0.125 * x378 - x381 * x386)
    x405 = x389 * x83
    x406 = x212 * x41
    x407 = 0.166666666666666667 * x233
    x408 = x407 * x72
    x409 = x16 * x4 - x23 - x383
    x410 = x246 * x409
    x411 = x212 * x34
    x412 = x10 * x80
    x413 = x411 + x412
    x414 = x1 + x38
    x415 = 0.125 * x414
    x416 = 0.125 * x39
    x417 = 0.25 * x414
    x418 = 0.25 * x83
    x419 = 0.0833333333333333333 * x52
    x420 = x419 * x72
    x421 = x420 * x48
    x422 = x419 * x67
    x423 = 0.125 * x104
    x424 = x120 * x414
    x425 = x419 * x94
    x426 = 0.25 * x104
    x427 = x271 * x47
    x428 = x10 * x101
    x429 = x427 + x428
    x430 = x1 + x153
    x431 = 0.125 * x430
    x432 = 0.125 * x154
    x433 = x212 * x66
    x434 = x412 + x433
    x435 = x16 * x434
    x436 = 0.25 * x66
    x437 = x375 + 8.0 * x70
    x438 = x1 * (x119 + 4.0 * x194 + x437)
    x439 = 0.125 * x121 - x413 * x436 + x436 * x85 - 0.125 * x438
    x440 = x4 * x403
    x441 = -x161 - x433 + x66 * x83
    x442 = x216 * x246
    x443 = x154 * x401
    x444 = x124 * x419
    x445 = x246 * x93
    x446 = x16 * x5 - x23 - x379
    x447 = x316 * x446
    x448 = x16 * x212
    x449 = 0.25 * x52
    x450 = -x161 + x34 * x83 - x411
    x451 = x193 * x216
    x452 = x1 + x172
    x453 = 0.0208333333333333322 * x233
    x454 = 0.0208333333333333322 * x52 * x72
    x455 = 0.125 * x140
    x456 = x271 * x93
    x457 = x428 + x456
    x458 = 0.25 * x452
    x459 = x104 * x93 - x178 - x456
    x460 = x375 + 8.0 * x96
    x461 = x143 + 4.0 * x258 + x460
    x462 = 0.25 * x1 * x461 - x106 * x220 - 0.25 * x145 + 0.5 * x429 * x93
    x463 = x1 + x9
    x464 = x153 + x393
    x465 = x11 * x154
    x466 = x397 * x67
    x467 = x153 + 4.0 * x205 + x437
    x468 = x390 * (x111 * x436 + 0.125 * x155 - x388 * x467 - x434 * x436)
    x469 = x159 * x362
    x470 = x66 * (x122 * x413 + x438)
    x471 = x241 + x411 + x433 + 7.0 * x81 + x84
    x472 = x11 * x430
    x473 = x154 * x463
    x474 = x164 * x441
    x475 = x403 * x93
    x476 = x403 * x66
    x477 = 0.25 * x173
    x478 = x172 + x393
    x479 = x52 * x94
    x480 = x396 * x479
    x481 = x390 * (
        0.25 * x1 * (x172 + 4.0 * x264 + x460)
        - x140 * x220
        - 0.25 * x174
        + 0.5 * x457 * x93
    )
    x482 = x252 * x324
    x483 = x316 * x331
    x484 = x108 * x72
    x485 = -x111 * x351
    x486 = x108 * x333
    x487 = 0.433012701892219298 * x66
    x488 = 0.433012701892219298 * x1
    x489 = x390 * (
        0.216506350946109649 * x1 * x387
        - x366 * x41
        + 0.433012701892219298 * x389 * x4
        - 0.216506350946109649 * x40
    )
    x490 = 0.00721687836487032181 * x26 * x52
    x491 = x180 * x53
    x492 = 0.0433012701892219257 * x26 * x400
    x493 = (
        0.216506350946109649 * x1 * x377
        - 0.216506350946109649 * x12
        - x18 * x366
        + 0.433012701892219298 * x381 * x4
    )
    x494 = 0.0360843918243516082 * x233
    x495 = x494 * x72
    x496 = 0.0721687836487032164 * x409 * x72
    x497 = 0.0721687836487032164 * x52
    x498 = x180 * x497
    x499 = x400 * x498
    x500 = x104 * x495
    x501 = 0.0360843918243516082 * x479
    x502 = x104 * x498
    x503 = x227 * x497
    x504 = (
        0.216506350946109649 * x121
        - x413 * x487
        - 0.216506350946109649 * x438
        + x487 * x85
    )
    x505 = 0.0721687836487032164 * x200
    x506 = x180 * x91
    x507 = 0.216506350946109649 * x104
    x508 = x452 * x494
    x509 = x452 * x498
    x510 = x141 * x498
    x511 = -x390 * (
        0.216506350946109649 * x1 * x467
        - x111 * x487
        - 0.216506350946109649 * x155
        + x434 * x487
    )
    x512 = 0.0144337567297406454 * x173 * x180 * x26 * x98

    # 540 item(s)
    result[0] = -x31 * (x21 + x24 * x25)
    result[1] = -x35 * x44
    result[2] = -x44 * x48
    result[3] = -x54 * x58
    result[4] = -x59 * x60 * x62
    result[5] = -x58 * x65
    result[6] = -x67 * x69
    result[7] = -x71 * x75
    result[8] = -x77 * x79
    result[9] = -x85 * x87
    result[10] = -x47 * x88 * x90
    result[11] = -x89 * x92
    result[12] = -x69 * x94
    result[13] = -x61 * x76 * x95
    result[14] = -x75 * x97
    result[15] = -x89 * x99
    result[16] = -x100 * x34 * x90
    result[17] = -x106 * x87
    result[18] = -x108 * x109
    result[19] = -x111 * x113
    result[20] = -x115 * x117
    result[21] = -x123 * x126
    result[22] = -x127 * x128 * x29 * x48
    result[23] = -x116 * x65
    result[24] = -x18 * x72 * x78 * x95
    result[25] = -x129 * x71 * x98
    result[26] = -x129 * x130
    result[27] = -x131 * x132 * x72
    result[28] = -1.0 * x133 * x53
    result[29] = -x127 * x134 * x78
    result[30] = -x109 * x136
    result[31] = -x115 * x138
    result[32] = -x113 * x140
    result[33] = -x137 * x54
    result[34] = -x127 * x141 * x61
    result[35] = -x126 * x147
    result[36] = -x149 * x151
    result[37] = -x152 * x158
    result[38] = -0.0666666666666666657 * x150 * x159 * x47 * x78
    result[39] = -x31 * (x160 + x162 * x25)
    result[40] = -x158 * x48
    result[41] = -x151 * x92
    result[42] = -x116 * x163
    result[43] = -x111 * x132 * x164
    result[44] = -x100 * x116 * x164
    result[45] = -x123 * x125 * x94
    result[46] = -x111 * x165
    result[47] = -x106 * x166
    result[48] = -x137 * x149
    result[49] = -x137 * x164 * x88
    result[50] = -x141 * x5 * x79
    result[51] = -x167 * x85
    result[52] = -x140 * x168
    result[53] = -x125 * x147 * x67
    result[54] = -x163 * x170
    result[55] = -x159 * x171 * x62
    result[56] = -x152 * x176
    result[57] = -x170 * x99
    result[58] = -x176 * x35
    result[59] = -x31 * (x177 + x179 * x25)
    result[60] = 0
    result[61] = x183
    result[62] = 0
    result[63] = x184 * x186 * x56
    result[64] = x188 * x59
    result[65] = 0
    result[66] = x190
    result[67] = x192 * x76
    result[68] = x193 * x77
    result[69] = x196 * x197
    result[70] = x198 * x81 * x87
    result[71] = x197 * x64
    result[72] = 0
    result[73] = x199 * x76
    result[74] = 0
    result[75] = x201 * x89
    result[76] = x202 * x97
    result[77] = 0
    result[78] = x203 * x204
    result[79] = x113 * x207
    result[80] = x208 * x209 * x210
    result[81] = x215 * x4
    result[82] = x206 * x217 * x47
    result[83] = x218
    result[84] = x18 * x219
    result[85] = x114 * x220 * x81
    result[86] = x223 * x97
    result[87] = x224 * x225 * x72
    result[88] = x226 * x81 * x97
    result[89] = x216 * x228
    result[90] = 0
    result[91] = x209 * x229
    result[92] = 0
    result[93] = x138 * x187
    result[94] = x230 * x4
    result[95] = 0
    result[96] = x148 * x235
    result[97] = x159 * x240
    result[98] = x159 * x210 * x232
    result[99] = (
        0.25
        * x242
        * (
            4.0 * x1 * x212
            + x121
            + 4.0 * x236 * x241
            + 8.0 * x236 * x85
            + 4.0 * x34 * x81
            + 4.0 * x66 * x81
        )
    )
    result[100] = x240 * x59
    result[101] = x235 * x64
    result[102] = x243
    result[103] = x164 * x206 * x224
    result[104] = x164 * x181 * x208 * x97
    result[105] = x215 * x93
    result[106] = x165 * x207
    result[107] = x244 * x245
    result[108] = x148 * x229
    result[109] = x164 * x167 * x81
    result[110] = x230 * x5
    result[111] = x196 * x229
    result[112] = x141 * x192
    result[113] = x247
    result[114] = 0
    result[115] = x159 * x200 * x248
    result[116] = 0
    result[117] = x249 * x34
    result[118] = x251
    result[119] = 0
    result[120] = 0
    result[121] = 0
    result[122] = x183
    result[123] = 0
    result[124] = x188 * x252
    result[125] = x186 * x47 * x60
    result[126] = 0
    result[127] = 0
    result[128] = x253 * x66
    result[129] = 0
    result[130] = x202 * x71
    result[131] = x255 * x89
    result[132] = x190
    result[133] = x253 * x34
    result[134] = x256 * x76
    result[135] = x197 * x51
    result[136] = x102 * x257 * x87
    result[137] = x197 * x260
    result[138] = 0
    result[139] = 0
    result[140] = x209 * x261
    result[141] = 0
    result[142] = x216 * x262
    result[143] = x117 * x187
    result[144] = x204 * x263
    result[145] = x223 * x71
    result[146] = 0.5 * x102 * x112 * x91
    result[147] = x131 * x263
    result[148] = x102 * x226 * x71
    result[149] = x217 * x260 * x66
    result[150] = x18 * x224
    result[151] = 0.333333333333333315 * x201 * x209
    result[152] = x113 * x266
    result[153] = x268
    result[154] = x217 * x269
    result[155] = x274 * x4
    result[156] = 0
    result[157] = 0
    result[158] = x159 * x276
    result[159] = 0
    result[160] = x277
    result[161] = x278 * x279
    result[162] = x148 * x261
    result[163] = x164 * x262
    result[164] = x102 * x164 * x166
    result[165] = x280
    result[166] = x128 * x256
    result[167] = x260 * x261
    result[168] = x243
    result[169] = x164 * x267 * x71
    result[170] = x164 * x265 * x281
    result[171] = x224 * x85
    result[172] = x168 * x266
    result[173] = x274 * x66
    result[174] = x148 * x284
    result[175] = x282 * x285 * x286
    result[176] = x159 * x290
    result[177] = x284 * x51
    result[178] = x252 * x290
    result[179] = (
        0.25
        * x242
        * (
            4.0 * x1 * x271
            + 4.0 * x102 * x47
            + 4.0 * x102 * x93
            + 8.0 * x106 * x287
            + x145
            + 4.0 * x287 * x291
        )
    )
    result[180] = (
        0.25
        * x242
        * (
            4.0 * x1 * x292
            + x12
            + 4.0 * x14 * x4
            + 4.0 * x14 * x5
            + 8.0 * x18 * x293
            + 4.0 * x293 * x297
        )
    )
    result[181] = x301 * x34
    result[182] = x301 * x47
    result[183] = x303 * x51
    result[184] = x285 * x304 * x59
    result[185] = x303 * x64
    result[186] = x244 * x306
    result[187] = x168 * x309
    result[188] = x198 * x281 * x308
    result[189] = x131 * x203
    result[190] = x198 * x310 * x71
    result[191] = x218
    result[192] = x306 * x95
    result[193] = x224 * x312
    result[194] = x165 * x309
    result[195] = x268
    result[196] = x310 * x313 * x34
    result[197] = x127 * x245
    result[198] = x261 * x314
    result[199] = x128 * x315
    result[200] = x14 * x166 * x198
    result[201] = x280
    result[202] = x198 * x262
    result[203] = x261 * x64
    result[204] = x224 * x314 * x316
    result[205] = x14 * x220 * x88
    result[206] = 0.5 * x130 * x14
    result[207] = x219 * x85
    result[208] = x133 * x222
    result[209] = x228 * x316
    result[210] = x229 * x314
    result[211] = x14 * x167 * x257
    result[212] = x141 * x315
    result[213] = x229 * x51
    result[214] = x230 * x34
    result[215] = x247
    result[216] = x279 * x317
    result[217] = x277
    result[218] = x276 * x59
    result[219] = 0
    result[220] = 0
    result[221] = 0
    result[222] = x116 * x200 * x5
    result[223] = x111 * x219
    result[224] = x261 * x313
    result[225] = 0
    result[226] = 0
    result[227] = 0
    result[228] = x137 * x254 * x5
    result[229] = x229 * x318
    result[230] = x230 * x66
    result[231] = 0
    result[232] = 0
    result[233] = 0
    result[234] = x249 * x5
    result[235] = x201 * x248 * x36
    result[236] = x251
    result[237] = 0
    result[238] = 0
    result[239] = 0
    result[240] = 0
    result[241] = x322
    result[242] = 0
    result[243] = -x304 * x323
    result[244] = -x302 * x325
    result[245] = 0
    result[246] = x327
    result[247] = -x311 * x330
    result[248] = -x308 * x332
    result[249] = -x225 * x333
    result[250] = -x198 * x334 * x80
    result[251] = -x335 * x4
    result[252] = 0
    result[253] = -x311 * x336
    result[254] = 0
    result[255] = x338
    result[256] = -x313 * x334
    result[257] = 0
    result[258] = -x314 * x339
    result[259] = -x340 * x342
    result[260] = -x13 * x198 * x339
    result[261] = x343
    result[262] = -x206 * x332
    result[263] = -x335 * x66
    result[264] = -x314 * x344
    result[265] = -x346 * x80 * x98
    result[266] = -x100 * x346
    result[267] = -x196 * x344
    result[268] = -x100 * x347
    result[269] = -x134 * x348
    result[270] = 0
    result[271] = -x342 * x349
    result[272] = 0
    result[273] = -x34 * x350
    result[274] = x352
    result[275] = 0
    result[276] = -x353 * x5
    result[277] = x355
    result[278] = -x231 * x325
    result[279] = 0
    result[280] = 0
    result[281] = 0
    result[282] = x356
    result[283] = -x336 * x340
    result[284] = -x313 * x339
    result[285] = 0
    result[286] = 0
    result[287] = 0
    result[288] = -x350 * x5
    result[289] = -x330 * x349
    result[290] = x352
    result[291] = 0
    result[292] = 0
    result[293] = 0
    result[294] = 0
    result[295] = -x171 * x354
    result[296] = 0
    result[297] = 0
    result[298] = 0
    result[299] = 0
    result[300] = 0
    result[301] = 0
    result[302] = 0
    result[303] = 0
    result[304] = -x354 * x60
    result[305] = 0
    result[306] = 0
    result[307] = 0
    result[308] = x357
    result[309] = 0
    result[310] = -x330 * x358
    result[311] = -x359 * x47
    result[312] = 0
    result[313] = x357
    result[314] = 0
    result[315] = -x34 * x359
    result[316] = -x358 * x360
    result[317] = 0
    result[318] = 0
    result[319] = 0
    result[320] = -x209 * x339
    result[321] = 0
    result[322] = -x206 * x361
    result[323] = x363
    result[324] = -x18 * x351
    result[325] = -x114 * x347
    result[326] = -x114 * x364
    result[327] = -x225 * x365
    result[328] = -x101 * x329 * x366
    result[329] = -x260 * x361
    result[330] = 0
    result[331] = -x209 * x367
    result[332] = 0
    result[333] = x338
    result[334] = -x265 * x361
    result[335] = 0
    result[336] = 0
    result[337] = 0
    result[338] = -x231 * x368
    result[339] = 0
    result[340] = x355
    result[341] = -x353 * x47
    result[342] = -x148 * x339
    result[343] = -x206 * x369
    result[344] = -x101 * x164 * x339
    result[345] = x343
    result[346] = -x340 * x360
    result[347] = -x260 * x339
    result[348] = -x148 * x367
    result[349] = -x164 * x367 * x80
    result[350] = -x265 * x369
    result[351] = -x196 * x367
    result[352] = -x330 * x370
    result[353] = x371
    result[354] = 0
    result[355] = -x282 * x368
    result[356] = 0
    result[357] = -x34 * x372
    result[358] = x373
    result[359] = 0
    result[360] = -x385 * (0.125 * x21 + x24 * x374 - x374 * x384 - 0.125 * x382)
    result[361] = -x252 * x391
    result[362] = -x391 * x59
    result[363] = x398 * (-0.5 * x39 * x392 + 0.25 * x392 * x394 + 0.25 * x395)
    result[364] = 0.0500000000000000028 * x399
    result[365] = x398 * (-0.5 * x144 * x39 + x394 * x401 + x402)
    result[366] = -x404 * x66
    result[367] = x408 * (0.125 * x405 + 0.125 * x406 - 0.25 * x41 * x83)
    result[368] = -x198 * x410 * x66
    result[369] = x407 * (x413 * x415 - 0.25 * x414 * x85 + x416 * x85)
    result[370] = x421 * (x212 * x417 + x39 * x418 - 0.5 * x414 * x83)
    result[371] = x422 * (-0.5 * x144 * x414 + x401 * x414 + x402)
    result[372] = -x404 * x93
    result[373] = -x257 * x410 * x93
    result[374] = x408 * (-0.25 * x271 * x41 + x389 * x423 + x41 * x423)
    result[375] = x425 * (0.25 * x39 * x392 - 0.5 * x392 * x414 + 0.25 * x424)
    result[376] = x35 * x420 * (x104 * x417 - 0.5 * x271 * x414 + x39 * x426)
    result[377] = x407 * (x106 * x415 + x106 * x416 - 0.25 * x414 * x429)
    result[378] = x407 * (-0.25 * x18 * x430 + x18 * x432 + x381 * x431)
    result[379] = x408 * (-0.25 * x111 * x16 + 0.125 * x111 * x292 + 0.125 * x435)
    result[380] = x421 * (0.25 * x154 * x16 - 0.5 * x16 * x430 + 0.25 * x292 * x430)
    result[381] = -x439 * x440
    result[382] = -x441 * x442 * x47
    result[383] = x444 * (-0.5 * x144 * x430 + x401 * x430 + x443)
    result[384] = -x445 * x447
    result[385] = x449 * x94 * (-0.5 * x16 * x83 + 0.25 * x292 * x83 + 0.25 * x448)
    result[386] = x449 * x67 * (-0.5 * x16 * x271 + x16 * x426 + x292 * x426)
    result[387] = -x442 * x450 * x93
    result[388] = x124 * x449 * (x104 * x418 + x212 * x426 - 0.5 * x271 * x83)
    result[389] = x451 * x66 * (x104 * x47 - x178 - x427)
    result[390] = x453 * (-2.0 * x173 * x18 + x18 * x452 + x381 * x452)
    result[391] = x35 * x454 * (-2.0 * x16 * x173 + x16 * x452 + x292 * x452)
    result[392] = x408 * (x16 * x455 - 0.25 * x16 * x457 + x292 * x455)
    result[393] = x444 * (x120 * x458 - 0.5 * x173 * x392 + x392 * x458)
    result[394] = x34 * x451 * x459
    result[395] = -x440 * x462
    result[396] = x466 * (-0.5 * x154 * x463 + 0.25 * x463 * x464 + 0.25 * x465)
    result[397] = -x159 * x468
    result[398] = 0.0500000000000000028 * x469
    result[399] = -x385 * (0.125 * x160 + x162 * x374 - x374 * x471 - 0.125 * x470)
    result[400] = -x468 * x59
    result[401] = x466 * (-0.5 * x144 * x154 + x401 * x464 + x443)
    result[402] = x425 * (-0.5 * x430 * x463 + 0.25 * x472 + 0.25 * x473)
    result[403] = -x445 * x474
    result[404] = x152 * x420 * (x154 * x426 - 0.5 * x271 * x430 + x426 * x430)
    result[405] = -x439 * x475
    result[406] = x408 * (-0.25 * x111 * x271 + x111 * x423 + x423 * x434)
    result[407] = x407 * (x106 * x431 + x106 * x432 - 0.25 * x429 * x430)
    result[408] = x422 * (x11 * x458 - 0.5 * x173 * x463 + x458 * x463)
    result[409] = x152 * x454 * (-2.0 * x173 * x83 + x212 * x452 + x452 * x83)
    result[410] = x164 * x193 * x459 * x66
    result[411] = x453 * (-2.0 * x173 * x85 + x413 * x452 + x452 * x85)
    result[412] = x408 * (x212 * x455 + x455 * x83 - 0.25 * x457 * x83)
    result[413] = -x462 * x476
    result[414] = x480 * (x11 * x477 + x463 * x477 - 0.5 * x463 * x478)
    result[415] = -0.100000000000000006 * x286 * x320 * x93
    result[416] = -x159 * x481
    result[417] = x480 * (x120 * x477 + x392 * x477 - 0.5 * x392 * x478)
    result[418] = -x252 * x481
    result[419] = x385 * (
        0.25 * x177
        + x179 * x221
        - x221 * (7.0 * x102 + x105 + x291 + x427 + x456)
        - 0.25 * x93 * (x1 * x461 + x146 * x429)
    )
    result[420] = 0
    result[421] = 0
    result[422] = x322
    result[423] = 0
    result[424] = -x302 * x482
    result[425] = -x302 * x323 * x47
    result[426] = 0
    result[427] = 0
    result[428] = -x308 * x483
    result[429] = 0
    result[430] = -x318 * x334
    result[431] = x363
    result[432] = x327
    result[433] = -x312 * x331
    result[434] = -x311 * x360
    result[435] = -x334 * x51
    result[436] = -x101 * x257 * x334
    result[437] = -x260 * x334
    result[438] = 0
    result[439] = 0
    result[440] = -x342 * x484
    result[441] = 0
    result[442] = x485
    result[443] = -x47 * x486
    result[444] = -x314 * x483
    result[445] = -x346 * x88
    result[446] = -x101 * x13 * x328 * x487
    result[447] = -x351 * x85
    result[448] = -x364 * x88
    result[449] = -x260 * x483
    result[450] = -x314 * x367
    result[451] = -x13 * x257 * x367
    result[452] = -x342 * x370
    result[453] = -x367 * x51
    result[454] = -x269 * x365
    result[455] = x371
    result[456] = 0
    result[457] = 0
    result[458] = -x275 * x354
    result[459] = 0
    result[460] = 0
    result[461] = 0
    result[462] = -x486 * x5
    result[463] = x485
    result[464] = -x360 * x484
    result[465] = 0
    result[466] = 0
    result[467] = 0
    result[468] = x356
    result[469] = -x318 * x367
    result[470] = -x265 * x483
    result[471] = 0
    result[472] = 0
    result[473] = 0
    result[474] = -x372 * x5
    result[475] = -x282 * x482
    result[476] = x373
    result[477] = 0
    result[478] = 0
    result[479] = 0
    result[480] = x385 * (
        0.216506350946109649 * x21
        + x24 * x488
        - 0.216506350946109649 * x382
        - x384 * x488
    )
    result[481] = -x252 * x489
    result[482] = -x489 * x59
    result[483] = x124 * x490 * (-x392 * x394 + x395)
    result[484] = -0.0866025403784438513 * x399
    result[485] = -x491 * x492
    result[486] = -x476 * x493
    result[487] = x495 * (-x405 + x406)
    result[488] = x255 * x496
    result[489] = 0.216506350946109649 * x407 * (-x39 * x85 + x413 * x414)
    result[490] = 0.433012701892219298 * x421 * (x212 * x414 - x39 * x83)
    result[491] = -x499 * x66
    result[492] = -x475 * x493
    result[493] = x201 * x496
    result[494] = x409 * x500
    result[495] = x501 * (-x39 * x392 + x424)
    result[496] = -x257 * x502
    result[497] = -x503
    result[498] = 0.216506350946109649 * x407 * (x154 * x18 - x381 * x430)
    result[499] = x495 * (-x111 * x292 + x435)
    result[500] = 0.433012701892219298 * x421 * (x154 * x16 - x292 * x430)
    result[501] = -x440 * x504
    result[502] = -0.0721687836487032164 * x187 * x198 * x441
    result[503] = x4 * x499
    result[504] = x447 * x505
    result[505] = 0.108253175473054825 * x479 * (-x292 * x83 + x448)
    result[506] = -x506 * x507
    result[507] = -x216 * x450 * x505
    result[508] = x491 * x507
    result[509] = 0
    result[510] = x446 * x508
    result[511] = -x257 * x509
    result[512] = -x510
    result[513] = x4 * x509
    result[514] = 0
    result[515] = 0
    result[516] = x490 * x67 * (x463 * x464 - x465)
    result[517] = -x159 * x511
    result[518] = 0.0866025403784438513 * x469
    result[519] = -x385 * (
        0.216506350946109649 * x160
        + x162 * x488
        - 0.216506350946109649 * x470
        - x471 * x488
    )
    result[520] = -x511 * x59
    result[521] = x492 * x506
    result[522] = x501 * (-x472 + x473)
    result[523] = -x474 * x505
    result[524] = x164 * x502
    result[525] = -x475 * x504
    result[526] = -x441 * x500
    result[527] = x503
    result[528] = -x509 * x66
    result[529] = x164 * x509
    result[530] = 0
    result[531] = -x450 * x508
    result[532] = x510
    result[533] = 0
    result[534] = -x512
    result[535] = 0
    result[536] = 0
    result[537] = x512
    result[538] = 0
    result[539] = 0


@numba.jit(
    func_type.signature,
    nopython=True,
    nogil=True,
    fastmath=True,
    cache=True,
)
def multipole3d_sph_23(ax, da, A, bx, db, B, R, result):
    """See docstring of multipole3d_sph_32."""

    # Call equivalent function and write to result
    tmp = numpy.zeros_like(result)
    multipole3d_sph_32(bx, db, B, ax, da, A, R, tmp)
    result[:] = numpy.transpose(tmp.reshape(9, 10, 6), axes=(0, 2, 1)).flatten()


@numba.jit(
    func_type.signature,
    nopython=True,
    nogil=True,
    fastmath=True,
    cache=True,
)
def multipole3d_sph_42(ax, da, A, bx, db, B, R, result):
    """Primitive Cartesian 3D (gd) spherical multipole integrals.
    In contrast to the other multipole integrals, the origin R is calculated
    inside the function and is (possibly) unique for all primitive pairs.

    Generated code; DO NOT modify by hand!"""

    x0 = 2.0 * ax + 2.0 * bx
    x1 = x0 ** (-1.0)
    x2 = (ax + bx) ** (-1.0)
    x3 = -x2 * (ax * A[0] + bx * B[0])
    x4 = -x3 - B[0]
    x5 = -x3 - A[0]
    x6 = ax * bx * x2
    x7 = numpy.exp(-x6 * (A[0] - B[0]) ** 2)
    x8 = 1.77245385090551603
    x9 = numpy.sqrt(x2)
    x10 = x8 * x9
    x11 = x10 * x7
    x12 = x11 * x5
    x13 = x12 * x4
    x14 = 2.0 * x13
    x15 = x11 * x5**2
    x16 = x1 * x11
    x17 = 3.0 * x16
    x18 = x15 + x17
    x19 = x1 * (x14 + x18)
    x20 = x11 * x4
    x21 = x1 * (x12 + x20)
    x22 = x13 + x16
    x23 = x22 * x5
    x24 = x21 + x23
    x25 = x24 * x5
    x26 = x4**2
    x27 = x11 * x26
    x28 = x1 * (x14 + x17 + x27)
    x29 = x22 * x4
    x30 = x21 + x29
    x31 = x30 * x5
    x32 = x28 + x31
    x33 = 2.0 * x1 * (2.0 * x21 + x23 + x29) + x32 * x5
    x34 = x1 * (2.0 * x19 + 2.0 * x25 + 3.0 * x28 + 3.0 * x31) + x33 * x5
    x35 = 5.91607978309961604
    x36 = 0.00952380952380952467 * x35
    x37 = numpy.exp(-x6 * (A[1] - B[1]) ** 2)
    x38 = 3.14159265358979324 * x2 * x37
    x39 = numpy.exp(-x6 * (A[2] - B[2]) ** 2)
    x40 = da * db
    x41 = x39 * x40
    x42 = x38 * x41
    x43 = x36 * x42
    x44 = -x2 * (ax * A[1] + bx * B[1])
    x45 = -x44 - B[1]
    x46 = x42 * x45
    x47 = x15 + x16
    x48 = x47 * x5
    x49 = x1 * x12
    x50 = 2.0 * x49
    x51 = x48 + x50
    x52 = x19 + x25
    x53 = x1 * (3.0 * x21 + 3.0 * x23 + x51) + x5 * x52
    x54 = 10.2469507659595984
    x55 = 0.00952380952380952467 * x54
    x56 = x53 * x55
    x57 = -x2 * (ax * A[2] + bx * B[2])
    x58 = -x57 - B[2]
    x59 = x42 * x58
    x60 = x10 * x37
    x61 = x45**2 * x60
    x62 = x1 * x60
    x63 = x61 + x62
    x64 = x1 * (3.0 * x15 + x17) + x5 * x51
    x65 = x10 * x39
    x66 = x40 * x65
    x67 = x36 * x66
    x68 = x58 * x64
    x69 = x46 * x55
    x70 = x40 * x60
    x71 = x58**2 * x65
    x72 = x1 * x65
    x73 = x71 + x72
    x74 = x36 * x73
    x75 = x70 * x74
    x76 = -x44 - A[1]
    x77 = x42 * x76
    x78 = 2.2360679774997897
    x79 = 0.0666666666666666657 * x78
    x80 = x33 * x79
    x81 = x60 * x76
    x82 = x45 * x81
    x83 = x62 + x82
    x84 = 3.87298334620741689
    x85 = 0.0666666666666666657 * x66
    x86 = x84 * x85
    x87 = 0.0666666666666666657 * x84
    x88 = x76 * x87
    x89 = x59 * x88
    x90 = x45 * x60
    x91 = x1 * (x81 + x90)
    x92 = x45 * x83
    x93 = x91 + x92
    x94 = x78 * x85
    x95 = x58 * x65
    x96 = x83 * x95
    x97 = x40 * x51
    x98 = x87 * x97
    x99 = x40 * x79
    x100 = x73 * x99
    x101 = -x57 - A[2]
    x102 = x101 * x42
    x103 = x46 * x87
    x104 = x101 * x65
    x105 = x104 * x58
    x106 = x105 + x72
    x107 = x106 * x84
    x108 = 0.0666666666666666657 * x70
    x109 = x108 * x52
    x110 = x104 * x63
    x111 = x79 * x97
    x112 = 0.0666666666666666657 * x107
    x113 = x112 * x97
    x114 = x1 * (x104 + x95)
    x115 = x106 * x58
    x116 = x114 + x115
    x117 = x108 * x78
    x118 = x117 * x51
    x119 = x76**2
    x120 = x119 * x60
    x121 = x120 + x62
    x122 = 1.73205080756887729
    x123 = x122 * x40
    x124 = 0.111111111111111105 * x123
    x125 = x124 * x65
    x126 = x76 * x83
    x127 = x126 + x91
    x128 = 0.333333333333333315 * x40
    x129 = x128 * x65
    x130 = x121 * x128
    x131 = x130 * x24
    x132 = 3.0 * x62
    x133 = 2.0 * x82
    x134 = x1 * (x132 + x133 + x61)
    x135 = x76 * x93
    x136 = x134 + x135
    x137 = x136 * x65
    x138 = x123 * x47
    x139 = 0.111111111111111105 * x138
    x140 = x127 * x95
    x141 = x128 * x47
    x142 = x121 * x73
    x143 = x128 * x39
    x144 = x101 * x143
    x145 = x38 * x76
    x146 = x145 * x32
    x147 = 0.333333333333333315 * x123
    x148 = x147 * x83
    x149 = x104 * x24
    x150 = x106 * x147
    x151 = x150 * x24
    x152 = x104 * x93
    x153 = x106 * x83
    x154 = 0.333333333333333315 * x138
    x155 = x116 * x81
    x156 = x101**2
    x157 = x156 * x65
    x158 = x157 + x72
    x159 = x123 * x158
    x160 = 0.111111111111111105 * x159
    x161 = x128 * x158
    x162 = x101 * x106
    x163 = x114 + x162
    x164 = x163 * x24
    x165 = x128 * x60
    x166 = x158 * x63
    x167 = x163 * x90
    x168 = 3.0 * x72
    x169 = 2.0 * x105
    x170 = x1 * (x168 + x169 + x71)
    x171 = x101 * x116
    x172 = x170 + x171
    x173 = x172 * x60
    x174 = x121 * x76
    x175 = x62 * x76
    x176 = 2.0 * x175
    x177 = x174 + x176
    x178 = x120 + x132
    x179 = x1 * (x133 + x178)
    x180 = x127 * x76
    x181 = x179 + x180
    x182 = x22 * x86
    x183 = x22 * x87
    x184 = x177 * x40
    x185 = x184 * x95
    x186 = x5 * x79
    x187 = 2.0 * x1 * (x126 + 2.0 * x91 + x92) + x136 * x76
    x188 = 3.14159265358979324 * x2 * x7
    x189 = x188 * x41
    x190 = x187 * x189
    x191 = x5 * x87
    x192 = x189 * x58
    x193 = x191 * x192
    x194 = x121 * x128 * x30
    x195 = x147 * x22
    x196 = x104 * x195
    x197 = x121 * x195
    x198 = x188 * x5
    x199 = x144 * x198
    x200 = x12 * x150
    x201 = x12 * x130
    x202 = x22 * x83
    x203 = x147 * x158
    x204 = x195 * x81
    x205 = x12 * x163
    x206 = x38 * x7
    x207 = x172 * x76
    x208 = x206 * x207
    x209 = x128 * x5
    x210 = x101 * x158
    x211 = x101 * x72
    x212 = 2.0 * x211
    x213 = x210 + x212
    x214 = x213 * x30
    x215 = x213 * x40
    x216 = x183 * x215
    x217 = x157 + x168
    x218 = x1 * (x169 + x217)
    x219 = x101 * x163
    x220 = x218 + x219
    x221 = x22 * x220
    x222 = x108 * x84
    x223 = x213 * x99
    x224 = x12 * x63
    x225 = x220 * x45
    x226 = x206 * x40
    x227 = x191 * x226
    x228 = 2.0 * x1 * (2.0 * x114 + x115 + x162) + x101 * x172
    x229 = x226 * x228
    x230 = x16 + x27
    x231 = x1 * (3.0 * x120 + x132) + x177 * x76
    x232 = x4 * x55
    x233 = x1 * (3.0 * x126 + x177 + 3.0 * x91) + x181 * x76
    x234 = x189 * x233
    x235 = x192 * x232
    x236 = x1 * (3.0 * x134 + 3.0 * x135 + 2.0 * x179 + 2.0 * x180) + x187 * x76
    x237 = x189 * x36
    x238 = x55 * x58
    x239 = x11 * x40
    x240 = x239 * x74
    x241 = x177 * x230
    x242 = x104 * x99
    x243 = x101 * x189
    x244 = x4 * x87
    x245 = x243 * x244
    x246 = x112 * x20
    x247 = x101 * x79
    x248 = 0.0666666666666666657 * x239
    x249 = x107 * x248
    x250 = x116 * x177
    x251 = x248 * x78
    x252 = x121 * x230
    x253 = x130 * x20
    x254 = x127 * x163
    x255 = x11 * x128
    x256 = x121 * x172
    x257 = x11 * x124
    x258 = x223 * x230
    x259 = x20 * x215
    x260 = x83 * x87
    x261 = x220 * x76
    x262 = x226 * x244
    x263 = x213 * x93
    x264 = x220 * x83
    x265 = x248 * x84
    x266 = x229 * x79
    x267 = x1 * (3.0 * x157 + x168) + x101 * x213
    x268 = x230 * x267
    x269 = x36 * x70
    x270 = x267 * x45
    x271 = x226 * x232
    x272 = x1 * (3.0 * x114 + 3.0 * x162 + x213) + x101 * x220
    x273 = x226 * x272
    x274 = x267 * x63
    x275 = x239 * x36
    x276 = x273 * x55
    x277 = x1 * (3.0 * x170 + 3.0 * x171 + 2.0 * x218 + 2.0 * x219) + x101 * x228
    x278 = x226 * x36
    x279 = x1 * x53
    x280 = x42 * x55
    x281 = x279 * x280
    x282 = x1 * x64
    x283 = 0.0190476190476190493 * x35
    x284 = x1 * x68
    x285 = x1 * x33
    x286 = x285 * x42 * x79
    x287 = x45 * x62
    x288 = x175 + x287
    x289 = x1 * x52
    x290 = x289 * x58
    x291 = x42 * x87
    x292 = x1 * (x132 + x82)
    x293 = x288 * x45
    x294 = x292 + x293
    x295 = x288 * x84
    x296 = 0.0666666666666666657 * x295
    x297 = x62 * x73
    x298 = x101 * x289
    x299 = x1 * x101
    x300 = x299 * x46
    x301 = 0.133333333333333331 * x78
    x302 = x301 * x51
    x303 = 0.22222222222222221 * x123
    x304 = x303 * x39
    x305 = x1 * x304
    x306 = x288 * x76
    x307 = x292 + x306
    x308 = x24 * x77
    x309 = x1 * x58
    x310 = 0.66666666666666663 * x309
    x311 = x1 * (x176 + 4.0 * x287 + x93)
    x312 = x294 * x76
    x313 = x311 + x312
    x314 = 0.22222222222222221 * x138
    x315 = x299 * x32
    x316 = x315 * x38
    x317 = x147 * x288
    x318 = x106 * x288
    x319 = x116 * x62
    x320 = x161 * x62
    x321 = x163 * x62
    x322 = x1 * x178
    x323 = x119 * x62
    x324 = x322 + 2.0 * x323
    x325 = x1 * (x127 + 4.0 * x175 + 2.0 * x287)
    x326 = x307 * x76
    x327 = x325 + x326
    x328 = x324 * x40
    x329 = x328 * x95
    x330 = 2.0 * x306
    x331 = 4.0 * x292
    x332 = 2.0 * x293 + x331
    x333 = x1 * (x136 + x330 + x332)
    x334 = x313 * x76
    x335 = x333 + x334
    x336 = x189 * x335
    x337 = x30 * x77
    x338 = 0.66666666666666663 * x299
    x339 = x337 * x338
    x340 = x175 * x22
    x341 = 0.66666666666666663 * x123
    x342 = x116 * x76
    x343 = x1 * x226
    x344 = 0.66666666666666663 * x343
    x345 = x344 * x5
    x346 = x342 * x345
    x347 = x206 * x209
    x348 = x1 * x172
    x349 = x213 * x45
    x350 = x343 * x5
    x351 = x1 * x220
    x352 = x1 * (x174 + 8.0 * x175) + x324 * x76
    x353 = 3.0 * x292
    x354 = x189 * (x1 * (x181 + 3.0 * x306 + x324 + x353) + x327 * x76)
    x355 = 2.0 * x325 + 2.0 * x326
    x356 = x175 * x230
    x357 = 0.22222222222222221 * x159
    x358 = x163 * x76
    x359 = x1 * x208
    x360 = x1 * x266
    x361 = x283 * x343
    x362 = x1 * x276
    x363 = x72 * x83
    x364 = x309 * x77
    x365 = x58 * x72
    x366 = x211 + x365
    x367 = x366 * x84
    x368 = x63 * x72
    x369 = 0.0666666666666666657 * x367
    x370 = x105 + x168
    x371 = x1 * x370
    x372 = x366 * x58
    x373 = x371 + x372
    x374 = x141 * x72
    x375 = x1 * x143
    x376 = x24 * x72
    x377 = x147 * x366
    x378 = x366 * x83
    x379 = x101 * x366
    x380 = x371 + x379
    x381 = x1 * (x116 + x212 + 4.0 * x365)
    x382 = x101 * x373
    x383 = x381 + x382
    x384 = x184 * x72
    x385 = x1 * x189
    x386 = x181 * x385
    x387 = x177 * x301
    x388 = x189 * x5
    x389 = x309 * x388
    x390 = x127 * x72
    x391 = x136 * x198
    x392 = x189 * x338
    x393 = x392 * x5 * x93
    x394 = x12 * x380
    x395 = x383 * x76
    x396 = x1 * x217
    x397 = x156 * x72
    x398 = x396 + 2.0 * x397
    x399 = x398 * x40
    x400 = x399 * x90
    x401 = x1 * (x163 + 4.0 * x211 + 2.0 * x365)
    x402 = x101 * x380
    x403 = x401 + x402
    x404 = x398 * x99
    x405 = x403 * x45
    x406 = 2.0 * x379
    x407 = 4.0 * x371
    x408 = 2.0 * x372 + x407
    x409 = x1 * (x172 + x406 + x408)
    x410 = x101 * x383
    x411 = x409 + x410
    x412 = x226 * x411
    x413 = x231 * x385
    x414 = x189 * x55
    x415 = x1 * x233 * x414
    x416 = x231 * x309
    x417 = x1 * x187 * x189 * x79
    x418 = x136 * x188 * x299
    x419 = x20 * x399
    x420 = x4 * x403
    x421 = x1 * (x210 + 8.0 * x211) + x101 * x398
    x422 = x421 * x45
    x423 = 3.0 * x371
    x424 = x226 * (x1 * (x220 + 3.0 * x379 + x398 + x423) + x101 * x403)
    x425 = 2.0 * x401 + 2.0 * x402
    x426 = x1 * x20
    x427 = x1 * (x30 + 4.0 * x426 + x50)
    x428 = x13 + x17
    x429 = x1 * x428
    x430 = x426 + x49
    x431 = x4 * x430
    x432 = x429 + x431
    x433 = x432 * x5
    x434 = x1 * (x24 + 2.0 * x426 + 4.0 * x49)
    x435 = x430 * x5
    x436 = x429 + x435
    x437 = x436 * x5
    x438 = 2.0 * x434 + 2.0 * x437
    x439 = 2.0 * x431
    x440 = 4.0 * x429
    x441 = 2.0 * x435 + x440
    x442 = x1 * (x32 + x439 + x441)
    x443 = x427 + x433
    x444 = x443 * x5
    x445 = x442 + x444
    x446 = 3.0 * x429
    x447 = x1 * x18
    x448 = x1 * x15
    x449 = x447 + 2.0 * x448
    x450 = x434 + x437
    x451 = x1 * (3.0 * x435 + x446 + x449 + x52) + x450 * x5
    x452 = x451 * x55
    x453 = x1 * (x48 + 8.0 * x49) + x449 * x5
    x454 = x453 * x46
    x455 = x445 * x79
    x456 = x40 * x449
    x457 = x456 * x90
    x458 = x303 * x49
    x459 = x145 * x443
    x460 = x104 * x436
    x461 = x436 * x81
    x462 = x206 * x5
    x463 = x430 * x84
    x464 = 0.0666666666666666657 * x463
    x465 = x189 * x87
    x466 = x147 * x430
    x467 = x121 * x430
    x468 = x127 * x16
    x469 = x130 * x16
    x470 = x430 * x83
    x471 = x16 * x161
    x472 = x16 * x163
    x473 = x16 * x63
    x474 = x343 * x87
    x475 = x189 * x299
    x476 = x4 * x475
    x477 = x16 * x184
    x478 = x121 * x426
    x479 = x213 * x4
    x480 = x343 * x76
    x481 = x16 * x215
    x482 = x1 * x42
    x483 = 0.0164957219768464523 * x54
    x484 = x451 * x482 * x483
    x485 = 0.0329914439536929047 * x35
    x486 = x309 * x42
    x487 = x453 * x486
    x488 = 0.115470053837925149 * x78
    x489 = x445 * x482 * x488
    x490 = 0.115470053837925149 * x66
    x491 = 0.115470053837925149 * x84
    x492 = x450 * x491
    x493 = x490 * x78
    x494 = 0.115470053837925149 * x456
    x495 = x456 * x488
    x496 = 0.230940107675850298 * x78
    x497 = x449 * x496
    x498 = x123 * x39
    x499 = 0.384900179459750469 * x498
    x500 = x1 * x499
    x501 = 0.577350269189625731 * x307
    x502 = 1.15470053837925146 * x77
    x503 = 1.15470053837925146 * x5
    x504 = x189 * x503
    x505 = x0 ** (-2.0)
    x506 = 0.769800358919500938 * x505
    x507 = x462 * x506
    x508 = 0.577350269189625731 * x299
    x509 = 0.577350269189625731 * x288
    x510 = x123 * x509
    x511 = 0.577350269189625731 * x123
    x512 = x106 * x511
    x513 = x294 * x299 * x504
    x514 = 1.15470053837925146 * x123
    x515 = x49 * x514
    x516 = x226 * x505
    x517 = x503 * x516
    x518 = 0.577350269189625731 * x436
    x519 = x158 * x40
    x520 = x519 * x62
    x521 = 0.115470053837925149 * x463
    x522 = x1 * x488
    x523 = x336 * x522
    x524 = x189 * x309
    x525 = x327 * x491
    x526 = x16 * x328
    x527 = x299 * x432 * x502
    x528 = x430 * x511
    x529 = x189 * x313
    x530 = 1.15470053837925146 * x516
    x531 = 0.577350269189625731 * x432
    x532 = x16 * x519
    x533 = 0.577350269189625731 * x294
    x534 = 0.577350269189625731 * x505
    x535 = x496 * x516
    x536 = x220 * x491 * x516
    x537 = x352 * x4
    x538 = x1 * x483
    x539 = x354 * x538
    x540 = x352 * x524
    x541 = x324 * x496
    x542 = x4 * x506
    x543 = 0.115470053837925149 * x295
    x544 = x42 * x505
    x545 = x491 * x52 * x544
    x546 = x496 * x505 * x51
    x547 = 0.115470053837925149 * x367
    x548 = 1.15470053837925146 * x505
    x549 = x40 * x47
    x550 = x549 * x72
    x551 = x145 * x506
    x552 = x138 * x39
    x553 = x366 * x511
    x554 = 0.577350269189625731 * x62
    x555 = x102 * x548
    x556 = x101 * x506
    x557 = x380 * x40
    x558 = x22 * x72
    x559 = x385 * x525
    x560 = 0.577350269189625731 * x1
    x561 = x5 * x560
    x562 = x373 * x480 * x503
    x563 = x211 * x514
    x564 = x22 * x62
    x565 = x380 * x511
    x566 = x399 * x491
    x567 = x398 * x496
    x568 = x343 * x491
    x569 = x230 * x488
    x570 = 0.115470053837925149 * x239
    x571 = x570 * x78
    x572 = x101 * x498
    x573 = 1.15470053837925146 * x4
    x574 = x1 * x206
    x575 = x557 * x574
    x576 = x299 * x499
    x577 = 0.384900179459750469 * x123
    x578 = x412 * x522
    x579 = x4 * x421
    x580 = x226 * x538
    x581 = x343 * x485
    x582 = x424 * x538
    x583 = 0.5 * x39
    x584 = 3.0 * x505
    x585 = x11 * x584
    x586 = x448 + x585
    x587 = x1 * (x441 + x586)
    x588 = 3.0 * x1 * (x426 + x49)
    x589 = x429 * x5
    x590 = x588 + x589
    x591 = x5 * x590
    x592 = x16 * x26 + x585
    x593 = x1 * (x439 + x440 + x592)
    x594 = x4 * x429
    x595 = x588 + x594
    x596 = x5 * x595
    x597 = x593 + x596
    x598 = 2.0 * x1 * (x427 + x433 + 2.0 * x588 + x589 + x594) + x5 * x597
    x599 = x38 * (
        x1 * (2.0 * x442 + 2.0 * x444 + 2.0 * x587 + 2.0 * x591 + 3.0 * x593 + 3.0 * x596)
        + x5 * x598
    )
    x600 = 0.00952380952380952381 * x40
    x601 = x35 * x600
    x602 = 6.0 * x505
    x603 = x12 * x602 + x5 * x586
    x604 = x587 + x591
    x605 = x1 * (x438 + x446 * x5 + 3.0 * x588 + x603) + x5 * x604
    x606 = x38 * x583
    x607 = x605 * x606
    x608 = x54 * x600
    x609 = 0.5 * x65
    x610 = x584 * x60
    x611 = x1 * x61 + x610
    x612 = x611 * x64
    x613 = 9.0 * x505
    x614 = x1 * (x11 * x613 + 2.0 * x447 + 7.0 * x448) + x5 * x603
    x615 = x45 * x606
    x616 = x58 * x614
    x617 = 0.5 * x73
    x618 = x60 * x614
    x619 = x584 * x65
    x620 = x1 * x71 + x619
    x621 = x62 * x64
    x622 = x598 * x606
    x623 = 0.0666666666666666667 * x40
    x624 = x623 * x78
    x625 = x604 * x83
    x626 = x292 * x52
    x627 = x623 * x84
    x628 = x604 * x76
    x629 = x1 * x132 * (x45 + x76)
    x630 = x292 * x45
    x631 = x629 + x630
    x632 = x51 * x631
    x633 = 0.5 * x603
    x634 = 0.5 * x51
    x635 = x292 * x95
    x636 = x603 * x81
    x637 = x175 * x51
    x638 = x101 * x604
    x639 = 0.5 * x106
    x640 = x60 * x604
    x641 = x52 * x62
    x642 = x104 * x611
    x643 = x603 * x90
    x644 = x287 * x51
    x645 = 0.5 * x60
    x646 = x116 * x603
    x647 = x1 * x168 * (x101 + x58)
    x648 = x371 * x58
    x649 = x647 + x648
    x650 = x323 + x610
    x651 = x32 * x650
    x652 = 0.111111111111111111 * x123
    x653 = x292 * x76
    x654 = x629 + x653
    x655 = x24 * x654
    x656 = 0.333333333333333333 * x40
    x657 = 0.5 * x95
    x658 = x24 * x650
    x659 = 0.5 * x586
    x660 = x1 * (x332 + x611)
    x661 = x631 * x76
    x662 = x660 + x661
    x663 = x47 * x662
    x664 = x47 * x654
    x665 = x47 * x650
    x666 = x101 * x597
    x667 = 0.5 * x104
    x668 = x590 * x83
    x669 = x24 * x292
    x670 = x122 * x656
    x671 = x590 * x81
    x672 = x175 * x24
    x673 = x47 * x631
    x674 = x292 * x47
    x675 = 0.5 * x116
    x676 = x175 * x47
    x677 = 0.5 * x158
    x678 = x597 * x60
    x679 = x397 + x619
    x680 = x32 * x62
    x681 = x590 * x90
    x682 = x24 * x287
    x683 = x163 * x590
    x684 = x101 * x371
    x685 = x647 + x684
    x686 = 0.5 * x62
    x687 = x47 * x611
    x688 = 0.5 * x163
    x689 = x287 * x47
    x690 = x1 * (x408 + x620)
    x691 = x101 * x649
    x692 = x690 + x691
    x693 = x172 * x47
    x694 = x602 * x81 + x650 * x76
    x695 = x30 * x694
    x696 = x177 * x595
    x697 = x1 * (x330 + x331 + x650)
    x698 = x654 * x76
    x699 = x697 + x698
    x700 = x22 * x699
    x701 = x22 * x694
    x702 = 2.0 * x1 * (x311 + x312 + 2.0 * x629 + x630 + x653) + x662 * x76
    x703 = x188 * x583
    x704 = x702 * x703
    x705 = x5 * x703
    x706 = x58 * x699
    x707 = x12 * x694
    x708 = x30 * x650
    x709 = x22 * x654
    x710 = x22 * x650
    x711 = x101 * x662
    x712 = x12 * x654
    x713 = 0.5 * x12
    x714 = x116 * x650
    x715 = x595 * x81
    x716 = x175 * x30
    x717 = x22 * x292
    x718 = x12 * x631
    x719 = x49 * x83
    x720 = x163 * x292
    x721 = 1.0 * x206
    x722 = x5 * x721
    x723 = x1 * x721
    x724 = x5 * x723
    x725 = x213 * x595
    x726 = x101 * x679 + x104 * x602
    x727 = 0.5 * x213
    x728 = x22 * x287
    x729 = x1 * (x406 + x407 + x679)
    x730 = x101 * x685
    x731 = x729 + x730
    x732 = x213 * x611
    x733 = 2.0 * x1 * (x381 + x382 + 2.0 * x647 + x648 + x684) + x101 * x692
    x734 = x721 * x733
    x735 = x228 * x723
    x736 = x231 * x592
    x737 = x1 * (2.0 * x322 + 7.0 * x323 + x60 * x613) + x694 * x76
    x738 = x230 * x737
    x739 = x1 * (x353 * x76 + x355 + 3.0 * x629 + x694) + x699 * x76
    x740 = x703 * x739
    x741 = x4 * x703
    x742 = x58 * x737
    x743 = x188 * (
        x1 * (2.0 * x333 + 2.0 * x334 + 3.0 * x660 + 3.0 * x661 + 2.0 * x697 + 2.0 * x698)
        + x702 * x76
    )
    x744 = x11 * x737
    x745 = x177 * x592
    x746 = x230 * x694
    x747 = x101 * x699
    x748 = x20 * x694
    x749 = x11 * x699
    x750 = 0.5 * x11
    x751 = x116 * x694
    x752 = 0.5 * x16
    x753 = x121 * x592
    x754 = x230 * x650
    x755 = x20 * x654
    x756 = x20 * x650
    x757 = x11 * x662
    x758 = x163 * x654
    x759 = x172 * x650
    x760 = x592 * x81
    x761 = x426 * x83
    x762 = x20 * x292
    x763 = x4 * x721
    x764 = x4 * x723
    x765 = x213 * x631
    x766 = x220 * x292
    x767 = x267 * x592
    x768 = x1 * (2.0 * x396 + 7.0 * x397 + x613 * x65) + x101 * x726
    x769 = x721 * (x1 * (x101 * x423 + x425 + 3.0 * x647 + x726) + x101 * x731)
    x770 = x272 * x723
    x771 = x267 * x611
    x772 = x1 * x492
    x773 = 0.115470053837925149 * x70
    x774 = x773 * x78
    x775 = x121 * x40
    x776 = x72 * x775
    x777 = x189 * x505
    x778 = x503 * x777
    x779 = x198 * x498
    x780 = x181 * x491 * x777
    x781 = x177 * x496 * x777
    x782 = 0.577350269189625731 * x16
    x783 = x243 * x548
    x784 = x16 * x83
    x785 = 0.866025403784438597 * x39
    x786 = x38 * x785
    x787 = x605 * x786
    x788 = x279 * x786
    x789 = 0.866025403784438597 * x65
    x790 = x45 * x786
    x791 = 0.866025403784438597 * x73
    x792 = x598 * x786
    x793 = x76 * x786
    x794 = 0.866025403784438597 * x51
    x795 = 0.866025403784438597 * x106
    x796 = 0.866025403784438597 * x60
    x797 = 0.866025403784438597 * x95
    x798 = 0.866025403784438597 * x586
    x799 = 0.866025403784438597 * x104
    x800 = 0.866025403784438597 * x158
    x801 = 0.866025403784438597 * x62
    x802 = 0.866025403784438597 * x163
    x803 = x188 * x785
    x804 = x702 * x803
    x805 = x5 * x803
    x806 = 0.866025403784438597 * x12
    x807 = 0.866025403784438597 * x213
    x808 = x739 * x803
    x809 = x4 * x803
    x810 = 0.866025403784438597 * x11

    # 810 item(s)
    result[0] = x34 * x43
    result[1] = x46 * x56
    result[2] = x56 * x59
    result[3] = x63 * x64 * x67
    result[4] = x68 * x69
    result[5] = x64 * x75
    result[6] = x77 * x80
    result[7] = x52 * x83 * x86
    result[8] = x52 * x89
    result[9] = x51 * x93 * x94
    result[10] = x96 * x98
    result[11] = x100 * x51 * x81
    result[12] = x102 * x80
    result[13] = x101 * x103 * x52
    result[14] = x107 * x109
    result[15] = x110 * x111
    result[16] = x113 * x90
    result[17] = x116 * x118
    result[18] = x121 * x125 * x32
    result[19] = x127 * x129 * x24
    result[20] = x131 * x95
    result[21] = x137 * x139
    result[22] = x140 * x141
    result[23] = x139 * x142
    result[24] = x144 * x146
    result[25] = x148 * x149
    result[26] = x151 * x81
    result[27] = x141 * x152
    result[28] = x153 * x154
    result[29] = x141 * x155
    result[30] = x160 * x32 * x60
    result[31] = x161 * x24 * x90
    result[32] = x164 * x165
    result[33] = x139 * x166
    result[34] = x141 * x167
    result[35] = x139 * x173
    result[36] = x177 * x30 * x94
    result[37] = x181 * x182
    result[38] = x183 * x185
    result[39] = x186 * x190
    result[40] = x181 * x193
    result[41] = x100 * x12 * x177
    result[42] = x104 * x194
    result[43] = x127 * x196
    result[44] = x106 * x197
    result[45] = x136 * x199
    result[46] = x127 * x200
    result[47] = x116 * x201
    result[48] = x161 * x30 * x81
    result[49] = x202 * x203
    result[50] = x163 * x204
    result[51] = x12 * x161 * x93
    result[52] = x148 * x205
    result[53] = x208 * x209
    result[54] = x117 * x214
    result[55] = x216 * x90
    result[56] = x221 * x222
    result[57] = x223 * x224
    result[58] = x225 * x227
    result[59] = x186 * x229
    result[60] = x230 * x231 * x67
    result[61] = x232 * x234
    result[62] = x231 * x235
    result[63] = x236 * x237
    result[64] = x234 * x238
    result[65] = x231 * x240
    result[66] = x241 * x242
    result[67] = x181 * x245
    result[68] = x184 * x246
    result[69] = x190 * x247
    result[70] = x181 * x249
    result[71] = x250 * x251
    result[72] = x160 * x252
    result[73] = x127 * x161 * x20
    result[74] = x163 * x253
    result[75] = x11 * x136 * x160
    result[76] = x254 * x255
    result[77] = x256 * x257
    result[78] = x258 * x81
    result[79] = x259 * x260
    result[80] = x261 * x262
    result[81] = x251 * x263
    result[82] = x264 * x265
    result[83] = x266 * x76
    result[84] = x268 * x269
    result[85] = x270 * x271
    result[86] = x232 * x273
    result[87] = x274 * x275
    result[88] = x276 * x45
    result[89] = x277 * x278
    result[90] = 0
    result[91] = x281
    result[92] = 0
    result[93] = x282 * x283 * x46
    result[94] = x280 * x284
    result[95] = 0
    result[96] = x286
    result[97] = x288 * x52 * x86
    result[98] = x290 * x291
    result[99] = x294 * x51 * x94
    result[100] = x296 * x95 * x97
    result[101] = x111 * x297
    result[102] = 0
    result[103] = x291 * x298
    result[104] = 0
    result[105] = x300 * x302
    result[106] = x113 * x62
    result[107] = 0
    result[108] = x146 * x305
    result[109] = x129 * x24 * x307
    result[110] = x308 * x310
    result[111] = x139 * x313 * x65
    result[112] = x141 * x307 * x95
    result[113] = x175 * x314 * x73
    result[114] = x143 * x316
    result[115] = x149 * x317
    result[116] = x151 * x62
    result[117] = x104 * x141 * x294
    result[118] = x154 * x318
    result[119] = x141 * x319
    result[120] = 0
    result[121] = x24 * x320
    result[122] = 0
    result[123] = x158 * x287 * x314
    result[124] = x141 * x321
    result[125] = 0
    result[126] = x30 * x324 * x94
    result[127] = x182 * x327
    result[128] = x183 * x329
    result[129] = x186 * x336
    result[130] = x193 * x327
    result[131] = x100 * x12 * x324
    result[132] = x339
    result[133] = x196 * x307
    result[134] = x106 * x340 * x341
    result[135] = x199 * x313
    result[136] = x200 * x307
    result[137] = x346
    result[138] = x30 * x320
    result[139] = x158 * x195 * x288
    result[140] = x195 * x321
    result[141] = x12 * x161 * x294
    result[142] = x205 * x317
    result[143] = x347 * x348
    result[144] = 0
    result[145] = x216 * x62
    result[146] = 0
    result[147] = x301 * x349 * x350
    result[148] = x227 * x351
    result[149] = 0
    result[150] = x230 * x352 * x67
    result[151] = x232 * x354
    result[152] = x235 * x352
    result[153] = x237 * (x1 * (x187 + 3.0 * x311 + 3.0 * x312 + x355) + x335 * x76)
    result[154] = x238 * x354
    result[155] = x240 * x352
    result[156] = x230 * x242 * x324
    result[157] = x245 * x327
    result[158] = x246 * x328
    result[159] = x247 * x336
    result[160] = x249 * x327
    result[161] = x116 * x251 * x324
    result[162] = x356 * x357
    result[163] = x161 * x20 * x307
    result[164] = x344 * x358 * x4
    result[165] = x11 * x160 * x313
    result[166] = x163 * x255 * x307
    result[167] = x303 * x359
    result[168] = x258 * x62
    result[169] = x259 * x296
    result[170] = x262 * x351
    result[171] = x213 * x251 * x294
    result[172] = x220 * x265 * x288
    result[173] = x360
    result[174] = 0
    result[175] = x1 * x267 * x271
    result[176] = 0
    result[177] = x270 * x361
    result[178] = x362
    result[179] = 0
    result[180] = 0
    result[181] = 0
    result[182] = x281
    result[183] = 0
    result[184] = x282 * x69
    result[185] = x283 * x284 * x42
    result[186] = 0
    result[187] = 0
    result[188] = x289 * x291 * x76
    result[189] = 0
    result[190] = x363 * x98
    result[191] = x302 * x364
    result[192] = x286
    result[193] = x103 * x289
    result[194] = x109 * x367
    result[195] = x111 * x368
    result[196] = x369 * x90 * x97
    result[197] = x118 * x373
    result[198] = 0
    result[199] = 0
    result[200] = x131 * x72
    result[201] = 0
    result[202] = x127 * x374
    result[203] = x121 * x314 * x365
    result[204] = x146 * x375
    result[205] = x148 * x376
    result[206] = x24 * x377 * x81
    result[207] = x374 * x93
    result[208] = x154 * x378
    result[209] = x141 * x373 * x81
    result[210] = x304 * x316
    result[211] = x24 * x338 * x46
    result[212] = x165 * x24 * x380
    result[213] = x211 * x314 * x63
    result[214] = x141 * x380 * x90
    result[215] = x139 * x383 * x60
    result[216] = 0
    result[217] = 0
    result[218] = x183 * x384
    result[219] = 0
    result[220] = x191 * x386
    result[221] = x387 * x389
    result[222] = x194 * x72
    result[223] = x195 * x390
    result[224] = x197 * x366
    result[225] = x375 * x391
    result[226] = x12 * x127 * x377
    result[227] = x201 * x373
    result[228] = x339
    result[229] = x202 * x211 * x341
    result[230] = x204 * x380
    result[231] = x393
    result[232] = x148 * x394
    result[233] = x347 * x395
    result[234] = x117 * x30 * x398
    result[235] = x183 * x400
    result[236] = x22 * x222 * x403
    result[237] = x224 * x404
    result[238] = x227 * x405
    result[239] = x186 * x412
    result[240] = 0
    result[241] = 0
    result[242] = x232 * x413
    result[243] = 0
    result[244] = x415
    result[245] = x189 * x283 * x416
    result[246] = x241 * x72 * x99
    result[247] = x244 * x386
    result[248] = x184 * x20 * x369
    result[249] = x417
    result[250] = x181 * x265 * x366
    result[251] = x177 * x251 * x373
    result[252] = x211 * x252 * x303
    result[253] = x127 * x392 * x4
    result[254] = x253 * x380
    result[255] = x304 * x418
    result[256] = x127 * x255 * x380
    result[257] = x121 * x257 * x383
    result[258] = x230 * x404 * x81
    result[259] = x260 * x419
    result[260] = x226 * x420 * x88
    result[261] = x251 * x398 * x93
    result[262] = x265 * x403 * x83
    result[263] = x412 * x76 * x79
    result[264] = x230 * x269 * x421
    result[265] = x271 * x422
    result[266] = x232 * x424
    result[267] = x275 * x421 * x63
    result[268] = x424 * x45 * x55
    result[269] = x278 * (x1 * (x228 + 3.0 * x381 + 3.0 * x382 + x425) + x101 * x411)
    result[270] = x43 * (x1 * (x33 + 3.0 * x427 + 3.0 * x433 + x438) + x445 * x5)
    result[271] = x452 * x46
    result[272] = x452 * x59
    result[273] = x453 * x63 * x67
    result[274] = x238 * x454
    result[275] = x453 * x75
    result[276] = x455 * x77
    result[277] = x450 * x83 * x86
    result[278] = x450 * x89
    result[279] = x449 * x93 * x94
    result[280] = x456 * x87 * x96
    result[281] = x100 * x449 * x81
    result[282] = x102 * x455
    result[283] = x101 * x103 * x450
    result[284] = x107 * x108 * x450
    result[285] = x110 * x449 * x99
    result[286] = x112 * x457
    result[287] = x116 * x117 * x449
    result[288] = x121 * x125 * x443
    result[289] = x127 * x129 * x436
    result[290] = x130 * x436 * x95
    result[291] = x305 * x391
    result[292] = x127 * x310 * x388
    result[293] = x142 * x458
    result[294] = x144 * x459
    result[295] = x148 * x460
    result[296] = x150 * x461
    result[297] = x393
    result[298] = x153 * x341 * x49
    result[299] = x346
    result[300] = x160 * x443 * x60
    result[301] = x161 * x436 * x90
    result[302] = x163 * x165 * x436
    result[303] = x166 * x458
    result[304] = x163 * x345 * x45
    result[305] = x303 * x348 * x462
    result[306] = x177 * x432 * x94
    result[307] = x181 * x430 * x86
    result[308] = x185 * x464
    result[309] = x417
    result[310] = x181 * x309 * x465
    result[311] = x100 * x16 * x177
    result[312] = x104 * x130 * x432
    result[313] = x104 * x127 * x466
    result[314] = x150 * x467
    result[315] = x143 * x418
    result[316] = x150 * x468
    result[317] = x116 * x469
    result[318] = x161 * x432 * x81
    result[319] = x203 * x470
    result[320] = x163 * x466 * x81
    result[321] = x471 * x93
    result[322] = x148 * x472
    result[323] = x128 * x359
    result[324] = x117 * x213 * x432
    result[325] = x215 * x464 * x90
    result[326] = x220 * x222 * x430
    result[327] = x223 * x473
    result[328] = x225 * x474
    result[329] = x360
    result[330] = x283 * x4 * x413
    result[331] = x415
    result[332] = x414 * x416
    result[333] = 0
    result[334] = 0
    result[335] = 0
    result[336] = x387 * x476
    result[337] = x181 * x299 * x465
    result[338] = x112 * x477
    result[339] = 0
    result[340] = 0
    result[341] = 0
    result[342] = x357 * x478
    result[343] = x127 * x471
    result[344] = x163 * x469
    result[345] = 0
    result[346] = 0
    result[347] = 0
    result[348] = x301 * x479 * x480
    result[349] = x260 * x481
    result[350] = x261 * x474
    result[351] = 0
    result[352] = 0
    result[353] = 0
    result[354] = x267 * x361 * x4
    result[355] = x270 * x343 * x55
    result[356] = x362
    result[357] = 0
    result[358] = 0
    result[359] = 0
    result[360] = 0
    result[361] = x484
    result[362] = 0
    result[363] = x1 * x454 * x485
    result[364] = x483 * x487
    result[365] = 0
    result[366] = x489
    result[367] = x295 * x450 * x490
    result[368] = x486 * x492
    result[369] = x294 * x449 * x493
    result[370] = x295 * x494 * x95
    result[371] = x297 * x495
    result[372] = 0
    result[373] = x299 * x42 * x492
    result[374] = 0
    result[375] = x300 * x497
    result[376] = x107 * x494 * x62
    result[377] = 0
    result[378] = x459 * x500
    result[379] = x436 * x501 * x66
    result[380] = x309 * x436 * x502
    result[381] = x198 * x313 * x500
    result[382] = x307 * x309 * x504
    result[383] = x123 * x507 * x73 * x76
    result[384] = x42 * x443 * x508
    result[385] = x460 * x510
    result[386] = x436 * x512 * x62
    result[387] = x513
    result[388] = x318 * x515
    result[389] = x116 * x517
    result[390] = 0
    result[391] = x518 * x520
    result[392] = 0
    result[393] = x159 * x45 * x507
    result[394] = x163 * x517
    result[395] = 0
    result[396] = x324 * x432 * x493
    result[397] = x327 * x463 * x490
    result[398] = x329 * x521
    result[399] = x523
    result[400] = x524 * x525
    result[401] = x488 * x526 * x73
    result[402] = x527
    result[403] = x104 * x307 * x528
    result[404] = x106 * x175 * x430 * x514
    result[405] = x508 * x529
    result[406] = x16 * x307 * x512
    result[407] = x342 * x530
    result[408] = x520 * x531
    result[409] = x159 * x430 * x509
    result[410] = x321 * x528
    result[411] = x532 * x533
    result[412] = x472 * x510
    result[413] = x172 * x226 * x534
    result[414] = 0
    result[415] = x215 * x521 * x62
    result[416] = 0
    result[417] = x349 * x535
    result[418] = x536
    result[419] = 0
    result[420] = x385 * x485 * x537
    result[421] = x539
    result[422] = x483 * x540
    result[423] = 0
    result[424] = 0
    result[425] = 0
    result[426] = x476 * x541
    result[427] = x475 * x525
    result[428] = 0.115470053837925149 * x107 * x526
    result[429] = 0
    result[430] = 0
    result[431] = 0
    result[432] = x159 * x206 * x542 * x76
    result[433] = x501 * x532
    result[434] = x358 * x530
    result[435] = 0
    result[436] = 0
    result[437] = 0
    result[438] = x479 * x535
    result[439] = x481 * x543
    result[440] = x536
    result[441] = 0
    result[442] = 0
    result[443] = 0
    result[444] = 0
    result[445] = x267 * x483 * x516
    result[446] = 0
    result[447] = 0
    result[448] = 0
    result[449] = 0
    result[450] = 0
    result[451] = 0
    result[452] = 0
    result[453] = 0
    result[454] = x483 * x544 * x64
    result[455] = 0
    result[456] = 0
    result[457] = 0
    result[458] = x545
    result[459] = 0
    result[460] = x543 * x72 * x97
    result[461] = x546 * x59
    result[462] = 0
    result[463] = x545
    result[464] = 0
    result[465] = x46 * x546
    result[466] = x547 * x62 * x97
    result[467] = 0
    result[468] = 0
    result[469] = 0
    result[470] = x308 * x548
    result[471] = 0
    result[472] = x501 * x550
    result[473] = x551 * x552 * x58
    result[474] = x32 * x42 * x534
    result[475] = x376 * x510
    result[476] = x24 * x553 * x62
    result[477] = x533 * x550
    result[478] = x138 * x366 * x509
    result[479] = x373 * x549 * x554
    result[480] = 0
    result[481] = x24 * x555
    result[482] = 0
    result[483] = x38 * x45 * x552 * x556
    result[484] = x47 * x554 * x557
    result[485] = 0
    result[486] = 0
    result[487] = 0
    result[488] = x328 * x491 * x558
    result[489] = 0
    result[490] = x5 * x559
    result[491] = x389 * x541
    result[492] = x337 * x548
    result[493] = x307 * x511 * x558
    result[494] = x340 * x366 * x514
    result[495] = x529 * x561
    result[496] = x12 * x307 * x553
    result[497] = x562
    result[498] = x30 * x555
    result[499] = x22 * x288 * x563
    result[500] = x564 * x565
    result[501] = x513
    result[502] = x394 * x510
    result[503] = x226 * x383 * x561
    result[504] = 0
    result[505] = x564 * x566
    result[506] = 0
    result[507] = x350 * x45 * x567
    result[508] = x403 * x5 * x568
    result[509] = 0
    result[510] = 0
    result[511] = 0
    result[512] = x189 * x537 * x538
    result[513] = 0
    result[514] = x539
    result[515] = x485 * x540
    result[516] = x328 * x569 * x72
    result[517] = x4 * x559
    result[518] = x20 * x328 * x547
    result[519] = x523
    result[520] = x327 * x367 * x570
    result[521] = x324 * x373 * x571
    result[522] = x230 * x551 * x572
    result[523] = x307 * x475 * x573
    result[524] = x573 * x575 * x76
    result[525] = x188 * x313 * x576
    result[526] = x11 * x501 * x557
    result[527] = x395 * x574 * x577
    result[528] = x399 * x569 * x62
    result[529] = x419 * x543
    result[530] = x420 * x568
    result[531] = x294 * x398 * x571
    result[532] = x295 * x403 * x570
    result[533] = x578
    result[534] = 0
    result[535] = x579 * x580
    result[536] = 0
    result[537] = x422 * x581
    result[538] = x582
    result[539] = 0
    result[540] = x601 * (1.57079632679489662 * x1 * x2 * x34 * x37 * x39 - x583 * x599)
    result[541] = x45 * x608 * (1.57079632679489662 * x1 * x2 * x37 * x39 * x53 - x607)
    result[542] = x58 * x608 * (1.57079632679489662 * x1 * x2 * x37 * x39 * x53 - x607)
    result[543] = (
        1.0 * x601 * (x1 * x39 * x63 * x64 * x8 * x9 - x609 * x612 - x609 * x614 * x63)
    )
    result[544] = x608 * (
        1.57079632679489662 * x1 * x2 * x37 * x39 * x45 * x58 * x64 - x615 * x616
    )
    result[545] = 1.0 * x601 * (x37 * x620 * x64 * x8 * x9 - x617 * x618 - x617 * x621)
    result[546] = x624 * x76 * (1.57079632679489662 * x1 * x2 * x33 * x37 * x39 - x622)
    result[547] = (
        1.0 * x627 * (x1 * x39 * x52 * x8 * x83 * x9 - x609 * x625 - x609 * x626)
    )
    result[548] = (
        x58 * x627 * (1.57079632679489662 * x1 * x2 * x37 * x39 * x52 * x76 - x606 * x628)
    )
    result[549] = (
        1.0 * x624 * (x1 * x39 * x51 * x8 * x9 * x93 - x603 * x609 * x93 - x609 * x632)
    )
    result[550] = (
        1.0 * x627 * (x1 * x39 * x51 * x58 * x8 * x83 * x9 - x633 * x96 - x634 * x635)
    )
    result[551] = (
        1.0 * x624 * (x37 * x51 * x620 * x76 * x8 * x9 - x617 * x636 - x617 * x637)
    )
    result[552] = x101 * x624 * (1.57079632679489662 * x1 * x2 * x33 * x37 * x39 - x622)
    result[553] = x627 * (
        1.57079632679489662 * x1 * x101 * x2 * x37 * x39 * x45 * x52 - x615 * x638
    )
    result[554] = (
        1.0 * x627 * (x1 * x37 * x370 * x52 * x8 * x9 - x639 * x640 - x639 * x641)
    )
    result[555] = (
        1.0 * x624 * (x1 * x101 * x39 * x51 * x63 * x8 * x9 - x110 * x633 - x634 * x642)
    )
    result[556] = (
        1.0 * x627 * (x1 * x37 * x370 * x45 * x51 * x8 * x9 - x639 * x643 - x639 * x644)
    )
    result[557] = 1.0 * x624 * (-x319 * x634 + x37 * x51 * x649 * x8 * x9 - x645 * x646)
    result[558] = (
        1.0 * x652 * (x1 * x121 * x32 * x39 * x8 * x9 - x121 * x597 * x609 - x609 * x651)
    )
    result[559] = (
        1.0 * x656 * (x1 * x127 * x24 * x39 * x8 * x9 - x127 * x590 * x609 - x609 * x655)
    )
    result[560] = (
        1.0
        * x656
        * (x1 * x121 * x24 * x39 * x58 * x8 * x9 - x121 * x590 * x657 - x657 * x658)
    )
    result[561] = (
        1.0 * x652 * (x1 * x136 * x39 * x47 * x8 * x9 - x137 * x659 - x609 * x663)
    )
    result[562] = (
        1.0 * x656 * (x1 * x127 * x39 * x47 * x58 * x8 * x9 - x140 * x659 - x657 * x664)
    )
    result[563] = 1.0 * x652 * (x121 * x47 * x620 - x121 * x586 * x617 - x617 * x665)
    result[564] = (
        x656
        * x76
        * (1.57079632679489662 * x1 * x101 * x2 * x32 * x37 * x39 - x606 * x666)
    )
    result[565] = (
        1.0 * x670 * (x1 * x101 * x24 * x39 * x8 * x83 * x9 - x667 * x668 - x667 * x669)
    )
    result[566] = (
        1.0 * x670 * (x1 * x24 * x37 * x370 * x76 * x8 * x9 - x639 * x671 - x639 * x672)
    )
    result[567] = (
        1.0 * x656 * (x1 * x101 * x39 * x47 * x8 * x9 * x93 - x152 * x659 - x667 * x673)
    )
    result[568] = 1.0 * x670 * (x1 * x370 * x47 * x83 - x153 * x659 - x639 * x674)
    result[569] = (
        1.0 * x656 * (-x155 * x659 + x37 * x47 * x649 * x76 * x8 * x9 - x675 * x676)
    )
    result[570] = 1.0 * x652 * (x32 * x37 * x679 * x8 * x9 - x677 * x678 - x677 * x680)
    result[571] = (
        1.0 * x656 * (x24 * x37 * x45 * x679 * x8 * x9 - x677 * x681 - x677 * x682)
    )
    result[572] = 1.0 * x656 * (-x164 * x686 + x24 * x37 * x685 * x8 * x9 - x645 * x683)
    result[573] = 1.0 * x652 * (-x166 * x659 + x47 * x63 * x679 - x677 * x687)
    result[574] = (
        1.0 * x656 * (-x167 * x659 + x37 * x45 * x47 * x685 * x8 * x9 - x688 * x689)
    )
    result[575] = 1.0 * x652 * (-x173 * x659 + x37 * x47 * x692 * x8 * x9 - x686 * x693)
    result[576] = (
        1.0 * x624 * (x1 * x177 * x30 * x39 * x8 * x9 - x609 * x695 - x609 * x696)
    )
    result[577] = (
        1.0 * x627 * (x1 * x181 * x22 * x39 * x8 * x9 - x181 * x429 * x609 - x609 * x700)
    )
    result[578] = (
        1.0
        * x627
        * (x1 * x177 * x22 * x39 * x58 * x8 * x9 - x177 * x429 * x657 - x657 * x701)
    )
    result[579] = x5 * x624 * (1.57079632679489662 * x1 * x187 * x2 * x39 * x7 - x704)
    result[580] = x627 * (
        1.57079632679489662 * x1 * x181 * x2 * x39 * x5 * x58 * x7 - x705 * x706
    )
    result[581] = (
        1.0 * x624 * (-x177 * x49 * x617 + x177 * x5 * x620 * x7 * x8 * x9 - x617 * x707)
    )
    result[582] = (
        1.0
        * x656
        * (x1 * x101 * x121 * x30 * x39 * x8 * x9 - x121 * x595 * x667 - x667 * x708)
    )
    result[583] = (
        1.0
        * x670
        * (x1 * x101 * x127 * x22 * x39 * x8 * x9 - x127 * x429 * x667 - x667 * x709)
    )
    result[584] = 1.0 * x670 * (x1 * x121 * x22 * x370 - x121 * x429 * x639 - x639 * x710)
    result[585] = x656 * (
        1.57079632679489662 * x1 * x101 * x136 * x2 * x39 * x5 * x7 - x705 * x711
    )
    result[586] = (
        1.0
        * x670
        * (x1 * x127 * x370 * x5 * x7 * x8 * x9 - x127 * x49 * x639 - x639 * x712)
    )
    result[587] = (
        1.0 * x656 * (-x121 * x49 * x675 + x121 * x5 * x649 * x7 * x8 * x9 - x713 * x714)
    )
    result[588] = (
        1.0 * x656 * (x30 * x37 * x679 * x76 * x8 * x9 - x677 * x715 - x677 * x716)
    )
    result[589] = 1.0 * x670 * (x22 * x679 * x83 - x429 * x677 * x83 - x677 * x717)
    result[590] = (
        1.0 * x670 * (x22 * x37 * x685 * x76 * x8 * x9 - x340 * x688 - x429 * x688 * x81)
    )
    result[591] = (
        1.0 * x656 * (-x49 * x677 * x93 + x5 * x679 * x7 * x8 * x9 * x93 - x677 * x718)
    )
    result[592] = (
        1.0 * x670 * (x5 * x685 * x7 * x8 * x83 * x9 - x688 * x719 - x713 * x720)
    )
    result[593] = x656 * (-x207 * x724 + x692 * x722 * x76)
    result[594] = 1.0 * x624 * (-x214 * x686 + x30 * x37 * x726 * x8 * x9 - x645 * x725)
    result[595] = (
        1.0 * x627 * (x22 * x37 * x45 * x726 * x8 * x9 - x429 * x727 * x90 - x727 * x728)
    )
    result[596] = (
        1.0 * x627 * (x22 * x37 * x731 * x8 * x9 - x220 * x429 * x645 - x221 * x686)
    )
    result[597] = (
        1.0 * x624 * (-x49 * x63 * x727 + x5 * x63 * x7 * x726 * x8 * x9 - x713 * x732)
    )
    result[598] = x627 * (-x225 * x724 + x45 * x722 * x731)
    result[599] = x5 * x624 * (x734 - x735)
    result[600] = (
        1.0 * x601 * (x1 * x230 * x231 * x39 * x8 * x9 - x609 * x736 - x609 * x738)
    )
    result[601] = x4 * x608 * (1.57079632679489662 * x1 * x2 * x233 * x39 * x7 - x740)
    result[602] = x608 * (
        1.57079632679489662 * x1 * x2 * x231 * x39 * x4 * x58 * x7 - x741 * x742
    )
    result[603] = x601 * (1.57079632679489662 * x1 * x2 * x236 * x39 * x7 - x583 * x743)
    result[604] = x58 * x608 * (1.57079632679489662 * x1 * x2 * x233 * x39 * x7 - x740)
    result[605] = (
        1.0 * x601 * (-x16 * x231 * x617 + x231 * x620 * x7 * x8 * x9 - x617 * x744)
    )
    result[606] = (
        1.0 * x624 * (x1 * x101 * x177 * x230 * x39 * x8 * x9 - x667 * x745 - x667 * x746)
    )
    result[607] = x627 * (
        1.57079632679489662 * x1 * x101 * x181 * x2 * x39 * x4 * x7 - x741 * x747
    )
    result[608] = (
        1.0
        * x627
        * (x1 * x177 * x370 * x4 * x7 * x8 * x9 - x177 * x426 * x639 - x639 * x748)
    )
    result[609] = x101 * x624 * (1.57079632679489662 * x1 * x187 * x2 * x39 * x7 - x704)
    result[610] = (
        1.0 * x627 * (x1 * x181 * x370 * x7 * x8 * x9 - x16 * x181 * x639 - x639 * x749)
    )
    result[611] = 1.0 * x624 * (x177 * x649 * x7 * x8 * x9 - x250 * x752 - x750 * x751)
    result[612] = 1.0 * x652 * (x121 * x230 * x679 - x677 * x753 - x677 * x754)
    result[613] = (
        1.0 * x656 * (x127 * x4 * x679 * x7 * x8 * x9 - x127 * x426 * x677 - x677 * x755)
    )
    result[614] = (
        1.0 * x656 * (x121 * x4 * x685 * x7 * x8 * x9 - x478 * x688 - x688 * x756)
    )
    result[615] = (
        1.0 * x652 * (-x136 * x16 * x677 + x136 * x679 * x7 * x8 * x9 - x677 * x757)
    )
    result[616] = 1.0 * x656 * (x127 * x685 * x7 * x8 * x9 - x254 * x752 - x750 * x758)
    result[617] = 1.0 * x652 * (x121 * x692 * x7 * x8 * x9 - x256 * x752 - x750 * x759)
    result[618] = (
        1.0 * x624 * (x230 * x37 * x726 * x76 * x8 * x9 - x356 * x727 - x727 * x760)
    )
    result[619] = (
        1.0 * x627 * (x4 * x7 * x726 * x8 * x83 * x9 - x727 * x761 - x727 * x762)
    )
    result[620] = x627 * (-x261 * x764 + x731 * x76 * x763)
    result[621] = 1.0 * x624 * (-x263 * x752 + x7 * x726 * x8 * x9 * x93 - x750 * x765)
    result[622] = 1.0 * x627 * (-x264 * x752 + x7 * x731 * x8 * x83 * x9 - x750 * x766)
    result[623] = x624 * x76 * (x734 - x735)
    result[624] = 1.0 * x601 * (x230 * x37 * x768 * x8 * x9 - x268 * x686 - x645 * x767)
    result[625] = x608 * (-x270 * x764 + x45 * x763 * x768)
    result[626] = x4 * x608 * (x769 - x770)
    result[627] = 1.0 * x601 * (-x274 * x752 + x63 * x7 * x768 * x8 * x9 - x750 * x771)
    result[628] = x45 * x608 * (x769 - x770)
    result[629] = -x601 * (
        x277 * x723
        - x721
        * (
            x1
            * (
                2.0 * x409
                + 2.0 * x410
                + 3.0 * x690
                + 3.0 * x691
                + 2.0 * x729
                + 2.0 * x730
            )
            + x101 * x733
        )
    )
    result[630] = 0
    result[631] = 0
    result[632] = x484
    result[633] = 0
    result[634] = x454 * x538
    result[635] = x485 * x487
    result[636] = 0
    result[637] = 0
    result[638] = x77 * x772
    result[639] = 0
    result[640] = x363 * x494 * x84
    result[641] = x364 * x497
    result[642] = x489
    result[643] = x46 * x772
    result[644] = x367 * x450 * x773
    result[645] = x368 * x495
    result[646] = x457 * x547
    result[647] = x373 * x449 * x774
    result[648] = 0
    result[649] = 0
    result[650] = x518 * x776
    result[651] = 0
    result[652] = x127 * x778
    result[653] = x121 * x506 * x58 * x779
    result[654] = x443 * x560 * x77
    result[655] = x363 * x436 * x511
    result[656] = x461 * x553
    result[657] = x778 * x93
    result[658] = x378 * x515
    result[659] = x562
    result[660] = x38 * x443 * x576
    result[661] = 1.15470053837925146 * x300 * x436
    result[662] = x518 * x557 * x60
    result[663] = x556 * x63 * x779
    result[664] = x45 * x503 * x575
    result[665] = x1 * x383 * x462 * x577
    result[666] = 0
    result[667] = 0
    result[668] = x384 * x521
    result[669] = 0
    result[670] = x780
    result[671] = x58 * x781
    result[672] = x531 * x776
    result[673] = x390 * x528
    result[674] = x467 * x553
    result[675] = x136 * x189 * x534
    result[676] = x468 * x553
    result[677] = x373 * x775 * x782
    result[678] = x527
    result[679] = x470 * x563
    result[680] = x380 * x528 * x81
    result[681] = x783 * x93
    result[682] = x565 * x784
    result[683] = x226 * x395 * x560
    result[684] = x398 * x432 * x774
    result[685] = x400 * x521
    result[686] = x403 * x463 * x773
    result[687] = x399 * x473 * x488
    result[688] = x405 * x568
    result[689] = x578
    result[690] = 0
    result[691] = 0
    result[692] = x231 * x483 * x777
    result[693] = 0
    result[694] = 0
    result[695] = 0
    result[696] = x4 * x781
    result[697] = x780
    result[698] = x477 * x547
    result[699] = 0
    result[700] = 0
    result[701] = 0
    result[702] = x121 * x188 * x542 * x572
    result[703] = x127 * x783
    result[704] = x121 * x557 * x782
    result[705] = 0
    result[706] = 0
    result[707] = 0
    result[708] = x4 * x480 * x567
    result[709] = x566 * x784
    result[710] = x403 * x480 * x491
    result[711] = 0
    result[712] = 0
    result[713] = 0
    result[714] = x579 * x581
    result[715] = x422 * x580
    result[716] = x582
    result[717] = 0
    result[718] = 0
    result[719] = 0
    result[720] = x601 * (-x1 * x34 * x786 + x599 * x785)
    result[721] = x45 * x608 * (x787 - x788)
    result[722] = x58 * x608 * (x787 - x788)
    result[723] = x601 * (0.866025403784438597 * x39 * x614 * x63 * x8 * x9 - x612 * x789)
    result[724] = x608 * x790 * (-x284 + x616)
    result[725] = x601 * x791 * (x618 - x621)
    result[726] = x624 * (-x285 * x793 + x76 * x792)
    result[727] = x627 * x789 * (x625 - x626)
    result[728] = x627 * (-x290 * x793 + x58 * x628 * x786)
    result[729] = x624 * (0.866025403784438597 * x39 * x603 * x8 * x9 * x93 - x632 * x789)
    result[730] = x627 * (0.866025403784438597 * x603 * x96 - x635 * x794)
    result[731] = x624 * x791 * (x636 - x637)
    result[732] = x101 * x624 * (-x285 * x786 + x792)
    result[733] = x627 * x790 * (-x298 + x638)
    result[734] = x627 * x795 * (x640 - x641)
    result[735] = x624 * (
        0.866025403784438597 * x101 * x39 * x603 * x63 * x8 * x9 - x642 * x794
    )
    result[736] = x627 * x795 * (x643 - x644)
    result[737] = x624 * (-x319 * x794 + x646 * x796)
    result[738] = x652 * (
        0.866025403784438597 * x121 * x39 * x597 * x8 * x9 - x651 * x789
    )
    result[739] = x656 * (
        0.866025403784438597 * x127 * x39 * x590 * x8 * x9 - x655 * x789
    )
    result[740] = x656 * (
        0.866025403784438597 * x121 * x39 * x58 * x590 * x8 * x9 - x658 * x797
    )
    result[741] = x652 * (x137 * x798 - x663 * x789)
    result[742] = x656 * (x140 * x798 - x664 * x797)
    result[743] = x652 * (0.866025403784438597 * x121 * x586 * x73 - x665 * x791)
    result[744] = x656 * x793 * (-x315 + x666)
    result[745] = x670 * x799 * (x668 - x669)
    result[746] = x670 * x795 * (x671 - x672)
    result[747] = x656 * (x152 * x798 - x673 * x799)
    result[748] = x670 * (x153 * x798 - x674 * x795)
    result[749] = -x656 * (0.866025403784438597 * x116 * x676 - x155 * x798)
    result[750] = x652 * x800 * (x678 - x680)
    result[751] = x656 * x800 * (x681 - x682)
    result[752] = x656 * (-x164 * x801 + x683 * x796)
    result[753] = x652 * (0.866025403784438597 * x158 * x586 * x63 - x687 * x800)
    result[754] = x656 * (x167 * x798 - x689 * x802)
    result[755] = x652 * (x173 * x798 - x693 * x801)
    result[756] = x624 * x789 * (-x695 + x696)
    result[757] = x627 * (
        0.866025403784438597 * x1 * x181 * x39 * x428 * x8 * x9 - x700 * x789
    )
    result[758] = x627 * (
        0.866025403784438597 * x1 * x177 * x39 * x428 * x58 * x8 * x9 - x701 * x797
    )
    result[759] = x5 * x624 * (2.72069904635132662 * x1 * x187 * x2 * x39 * x7 - x804)
    result[760] = x627 * (
        2.72069904635132662 * x1 * x181 * x2 * x39 * x5 * x58 * x7 - x706 * x805
    )
    result[761] = x624 * (
        0.866025403784438597 * x1 * x177 * x5 * x7 * x73 * x8 * x9 - x707 * x791
    )
    result[762] = x656 * (
        0.866025403784438597 * x101 * x121 * x39 * x595 * x8 * x9 - x708 * x799
    )
    result[763] = x670 * (
        0.866025403784438597 * x1 * x101 * x127 * x39 * x428 * x8 * x9 - x709 * x799
    )
    result[764] = x670 * (0.866025403784438597 * x1 * x106 * x121 * x428 - x710 * x795)
    result[765] = x656 * (
        2.72069904635132662 * x1 * x101 * x136 * x2 * x39 * x5 * x7 - x711 * x805
    )
    result[766] = x670 * (
        0.866025403784438597 * x1 * x106 * x127 * x5 * x7 * x8 * x9 - x712 * x795
    )
    result[767] = x656 * (
        0.866025403784438597 * x1 * x116 * x121 * x5 * x7 * x8 * x9 - x714 * x806
    )
    result[768] = x656 * x800 * (x715 - x716)
    result[769] = x670 * (0.866025403784438597 * x1 * x158 * x428 * x83 - x717 * x800)
    result[770] = x670 * (
        0.866025403784438597 * x1 * x163 * x37 * x428 * x76 * x8 * x9 - x340 * x802
    )
    result[771] = x656 * (
        0.866025403784438597 * x1 * x158 * x5 * x7 * x8 * x9 * x93 - x718 * x800
    )
    result[772] = x670 * (x719 * x802 - x720 * x806)
    result[773] = 0
    result[774] = x624 * (-x214 * x801 + x725 * x796)
    result[775] = x627 * (
        0.866025403784438597 * x1 * x213 * x37 * x428 * x45 * x8 * x9 - x728 * x807
    )
    result[776] = x627 * (
        0.866025403784438597 * x1 * x220 * x37 * x428 * x8 * x9 - x221 * x801
    )
    result[777] = x624 * (
        0.866025403784438597 * x1 * x213 * x5 * x63 * x7 * x8 * x9 - x732 * x806
    )
    result[778] = 0
    result[779] = 0
    result[780] = x601 * x789 * (x736 - x738)
    result[781] = x4 * x608 * (2.72069904635132662 * x1 * x2 * x233 * x39 * x7 - x808)
    result[782] = x608 * (
        2.72069904635132662 * x1 * x2 * x231 * x39 * x4 * x58 * x7 - x742 * x809
    )
    result[783] = x601 * (2.72069904635132662 * x1 * x2 * x236 * x39 * x7 - x743 * x785)
    result[784] = x58 * x608 * (2.72069904635132662 * x1 * x2 * x233 * x39 * x7 - x808)
    result[785] = x601 * (
        0.866025403784438597 * x1 * x231 * x7 * x73 * x8 * x9 - x744 * x791
    )
    result[786] = x624 * x799 * (x745 - x746)
    result[787] = x627 * (
        2.72069904635132662 * x1 * x101 * x181 * x2 * x39 * x4 * x7 - x747 * x809
    )
    result[788] = x627 * (
        0.866025403784438597 * x1 * x106 * x177 * x4 * x7 * x8 * x9 - x748 * x795
    )
    result[789] = x101 * x624 * (2.72069904635132662 * x1 * x187 * x2 * x39 * x7 - x804)
    result[790] = x627 * (
        0.866025403784438597 * x1 * x106 * x181 * x7 * x8 * x9 - x749 * x795
    )
    result[791] = x624 * (
        0.866025403784438597 * x1 * x116 * x177 * x7 * x8 * x9 - x751 * x810
    )
    result[792] = x652 * x800 * (x753 - x754)
    result[793] = x656 * (
        0.866025403784438597 * x1 * x127 * x158 * x4 * x7 * x8 * x9 - x755 * x800
    )
    result[794] = x656 * (
        0.866025403784438597 * x1 * x121 * x163 * x4 * x7 * x8 * x9 - x756 * x802
    )
    result[795] = x652 * (
        0.866025403784438597 * x1 * x136 * x158 * x7 * x8 * x9 - x757 * x800
    )
    result[796] = x656 * (
        0.866025403784438597 * x1 * x127 * x163 * x7 * x8 * x9 - x758 * x810
    )
    result[797] = x652 * (
        0.866025403784438597 * x1 * x121 * x172 * x7 * x8 * x9 - x759 * x810
    )
    result[798] = x624 * x807 * (-x356 + x760)
    result[799] = x627 * x807 * (x761 - x762)
    result[800] = 0
    result[801] = x624 * (
        0.866025403784438597 * x1 * x213 * x7 * x8 * x9 * x93 - x765 * x810
    )
    result[802] = x627 * (0.866025403784438597 * x16 * x264 - x766 * x810)
    result[803] = 0
    result[804] = x601 * (-x268 * x801 + x767 * x796)
    result[805] = 0
    result[806] = 0
    result[807] = x601 * (
        0.866025403784438597 * x1 * x267 * x63 * x7 * x8 * x9 - x771 * x810
    )
    result[808] = 0
    result[809] = 0


@numba.jit(
    func_type.signature,
    nopython=True,
    nogil=True,
    fastmath=True,
    cache=True,
)
def multipole3d_sph_24(ax, da, A, bx, db, B, R, result):
    """See docstring of multipole3d_sph_42."""

    # Call equivalent function and write to result
    tmp = numpy.zeros_like(result)
    multipole3d_sph_42(bx, db, B, ax, da, A, R, tmp)
    result[:] = numpy.transpose(tmp.reshape(9, 15, 6), axes=(0, 2, 1)).flatten()


@numba.jit(
    func_type.signature,
    nopython=True,
    nogil=True,
    fastmath=True,
    cache=True,
)
def multipole3d_sph_33(ax, da, A, bx, db, B, R, result):
    """Primitive Cartesian 3D (ff) spherical multipole integrals.
    In contrast to the other multipole integrals, the origin R is calculated
    inside the function and is (possibly) unique for all primitive pairs.

    Generated code; DO NOT modify by hand!"""

    x0 = ax + bx
    x1 = x0 ** (-1.0)
    x2 = x1 * (ax * A[0] + bx * B[0])
    x3 = -x2
    x4 = x3 + B[0]
    x5 = -2.0 * x2 + A[0] + B[0]
    x6 = x1 * x5
    x7 = x3 + A[0]
    x8 = x4 * x7
    x9 = 2.0 * x8
    x10 = x1 + x9
    x11 = x10 * x4
    x12 = x11 + x6
    x13 = x12 * x4
    x14 = 4.0 * x8
    x15 = x4**2
    x16 = 2.0 * x15
    x17 = 3.0 * x1
    x18 = x16 + x17
    x19 = x1 * (x14 + x18)
    x20 = x12 * x7
    x21 = x19 + 2.0 * x20
    x22 = x21 * x4
    x23 = x10 * x7
    x24 = 2.0 * x6
    x25 = x11 + x23 + x24
    x26 = 2.0 * x1
    x27 = x25 * x26
    x28 = x22 + x27
    x29 = 2.0 * x7
    x30 = x1 * (4.0 * x13 + 5.0 * x19 + 6.0 * x20) + x28 * x29
    x31 = ax * bx * x1
    x32 = (
        5.56832799683170785
        * da
        * db
        * numpy.exp(-x31 * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2))
    )
    x33 = numpy.sqrt(x1) * x32
    x34 = 0.00833333333333333322 * x33
    x35 = x1 * x34
    x36 = x1 * (ax * A[1] + bx * B[1])
    x37 = -x36
    x38 = x37 + B[1]
    x39 = x1 * x38
    x40 = x21 * x7
    x41 = x27 + x40
    x42 = 2.2360679774997897
    x43 = 0.0166666666666666664 * x42
    x44 = x33 * x43
    x45 = x41 * x44
    x46 = x1 * (ax * A[2] + bx * B[2])
    x47 = -x46
    x48 = x47 + B[2]
    x49 = x1 * x48
    x50 = x38**2
    x51 = 0.5 * x1
    x52 = x50 + x51
    x53 = x1**1.5 * x32
    x54 = x52 * x53
    x55 = x7**2
    x56 = 2.0 * x55
    x57 = x17 + x56
    x58 = x1 * (x14 + x57)
    x59 = x23 + x6
    x60 = x29 * x59 + x58
    x61 = x43 * x60
    x62 = 3.87298334620741689
    x63 = 0.0166666666666666664 * x62
    x64 = x33 * x63
    x65 = x48**2
    x66 = x51 + x65
    x67 = x53 * x66
    x68 = 1.5 * x1
    x69 = x55 + x68
    x70 = 0.0666666666666666657 * x7
    x71 = x69 * x70
    x72 = x50 + x68
    x73 = x38 * x53
    x74 = x72 * x73
    x75 = x42 * x71
    x76 = x65 + x68
    x77 = x48 * x53
    x78 = x76 * x77
    x79 = x37 + A[1]
    x80 = x1 * x79
    x81 = x28 * x44
    x82 = 0.0833333333333333287 * x21
    x83 = x38 * x79
    x84 = x51 + x83
    x85 = x53 * x84
    x86 = x33 * x82
    x87 = -2.0 * x36 + A[1] + B[1]
    x88 = x1 * x87
    x89 = 2.0 * x83
    x90 = x1 + x89
    x91 = x38 * x90
    x92 = x88 + x91
    x93 = 0.0833333333333333287 * x53
    x94 = x59 * x93
    x95 = 1.73205080756887729
    x96 = 0.166666666666666657 * x59
    x97 = x95 * x96
    x98 = x67 * x79
    x99 = x51 + x55
    x100 = x53 * x99
    x101 = 4.0 * x83
    x102 = 2.0 * x50
    x103 = x102 + x17
    x104 = x1 * (x101 + x103)
    x105 = 2.0 * x92
    x106 = x104 + x105 * x38
    x107 = x106 * x43
    x108 = 0.166666666666666657 * x100
    x109 = x48 * x92
    x110 = 0.333333333333333315 * x99
    x111 = x110 * x85
    x112 = 0.0666666666666666657 * x100
    x113 = x42 * x76
    x114 = x113 * x48 * x79
    x115 = x47 + A[2]
    x116 = x1 * x115
    x117 = x115 * x39
    x118 = x115 * x48
    x119 = x118 + x51
    x120 = x119 * x53
    x121 = x115 * x96
    x122 = -2.0 * x46 + A[2] + B[2]
    x123 = x1 * x122
    x124 = 2.0 * x118
    x125 = x1 + x124
    x126 = x125 * x48
    x127 = x123 + x126
    x128 = x115 * x42
    x129 = x38 * x72
    x130 = x128 * x129
    x131 = x110 * x120
    x132 = x127 * x38
    x133 = 4.0 * x118
    x134 = 2.0 * x65
    x135 = x134 + x17
    x136 = x1 * (x133 + x135)
    x137 = 2.0 * x127
    x138 = x136 + x137 * x48
    x139 = x138 * x43
    x140 = x79**2
    x141 = x140 + x51
    x142 = x141 * x53
    x143 = 2.0 * x13 + x19
    x144 = x143 * x43
    x145 = x79 * x90
    x146 = x145 + x88
    x147 = x12 * x93
    x148 = 0.166666666666666657 * x12
    x149 = x142 * x48
    x150 = x104 + x105 * x79
    x151 = x51 + x8
    x152 = x151 * x93
    x153 = x146 * x95
    x154 = 0.166666666666666657 * x151
    x155 = 0.333333333333333315 * x151
    x156 = x141 * x67
    x157 = x150 * x38
    x158 = 2.0 * x88
    x159 = x145 + x158 + x91
    x160 = x159 * x26
    x161 = x157 + x160
    x162 = x1 * x7
    x163 = x162 * x44
    x164 = x33 * x7
    x165 = 0.0833333333333333287 * x150
    x166 = 0.166666666666666657 * x7
    x167 = x146 * x166
    x168 = x148 * x95
    x169 = x92 * x95
    x170 = x115 * x53
    x171 = x151 * x85
    x172 = x127 * x95
    x173 = x53 * x79
    x174 = x138 * x62
    x175 = x115**2
    x176 = x175 + x51
    x177 = x176 * x53
    x178 = x148 * x38
    x179 = x115 * x125
    x180 = x123 + x179
    x181 = x155 * x54
    x182 = x180 * x95
    x183 = x115 * x137 + x136
    x184 = x177 * x42
    x185 = x166 * x180
    x186 = 0.0833333333333333287 * x183
    x187 = x183 * x48
    x188 = 2.0 * x123 + x126 + x179
    x189 = x188 * x26
    x190 = x187 + x189
    x191 = x140 + x68
    x192 = 0.0666666666666666657 * x191
    x193 = x15 + x68
    x194 = x193 * x4
    x195 = 2.0 * x140
    x196 = x17 + x195
    x197 = x1 * (x101 + x196)
    x198 = 2.0 * x79
    x199 = x146 * x198 + x197
    x200 = x199 * x43
    x201 = x15 + x51
    x202 = x201 * x53
    x203 = x202 * x42
    x204 = x192 * x79
    x205 = x204 * x48
    x206 = x1 * x4
    x207 = x150 * x79
    x208 = x160 + x207
    x209 = x208 * x44
    x210 = x33 * x4
    x211 = x210 * x63
    x212 = x4 * x42
    x213 = x38 * x92
    x214 = x79 * x92
    x215 = x1 * (5.0 * x104 + 4.0 * x213 + 6.0 * x214) + x161 * x198
    x216 = 0.0666666666666666657 * x194
    x217 = 0.166666666666666657 * x202
    x218 = x115 * x146
    x219 = 0.333333333333333315 * x201
    x220 = x120 * x219
    x221 = 0.166666666666666657 * x4
    x222 = x127 * x221
    x223 = x119 * x93
    x224 = x127 * x93
    x225 = x219 * x85
    x226 = x180 * x79
    x227 = x221 * x92
    x228 = x180 * x93
    x229 = x175 + x68
    x230 = 0.0666666666666666657 * x229
    x231 = x115 * x230
    x232 = x231 * x38
    x233 = 2.0 * x175
    x234 = x17 + x233
    x235 = x1 * (x133 + x234)
    x236 = 2.0 * x115
    x237 = x180 * x236 + x235
    x238 = x237 * x43
    x239 = x115 * x183
    x240 = x189 + x239
    x241 = x240 * x44
    x242 = x127 * x48
    x243 = x115 * x127
    x244 = x1 * (5.0 * x136 + 4.0 * x242 + 6.0 * x243) + x190 * x236
    x245 = x0 ** (-2.0)
    x246 = x245 * x34
    x247 = x246 * x42
    x248 = -x247 * x41
    x249 = x245 * x33
    x250 = x249 * x38
    x251 = x246 * x62
    x252 = x251 * x60
    x253 = x162 * x69
    x254 = x17 + 6.0 * x50
    x255 = 0.0166666666666666664 * x53
    x256 = x254 * x255
    x257 = x249 * x7
    x258 = 0.0666666666666666657 * x257
    x259 = -x258 * x38 * x42 * x48 * x69
    x260 = 0.0333333333333333329 * x42
    x261 = x253 * x260
    x262 = -x247 * x28
    x263 = 0.0416666666666666644 * x21
    x264 = x53 * x88
    x265 = x249 * x263
    x266 = x38 * x87
    x267 = x68 + x83
    x268 = x266 + x267
    x269 = x1 * x94
    x270 = x88 * x95
    x271 = x17 + x89
    x272 = 2.0 * x266 + x271
    x273 = 0.5 * x38
    x274 = x51 * x87
    x275 = 2.0 * x39
    x276 = x274 + x275 + x80 + 0.5 * x91
    x277 = x272 * x273 + x276
    x278 = x1 * x53
    x279 = x278 * x42
    x280 = 0.0333333333333333329 * x279
    x281 = x277 * x280
    x282 = 0.166666666666666657 * x67
    x283 = x49 * x76
    x284 = x100 * x260
    x285 = x119 * x95
    x286 = x254 * x43
    x287 = x1 * x224
    x288 = x249 * x79
    x289 = x79 * x87
    x290 = x267 + x289
    x291 = x1 * x147
    x292 = x288 * x48
    x293 = x272 * x79
    x294 = x276 + 0.5 * x293
    x295 = 0.166666666666666657 * x294
    x296 = x151 * x278
    x297 = x290 * x95
    x298 = x49 * x53
    x299 = x67 * x80
    x300 = 2.0 * x80
    x301 = x300 + 4.0 * x39
    x302 = x301 + x92
    x303 = x293 + x302
    x304 = x1 * x271
    x305 = x79 * x88
    x306 = x38 * x88
    x307 = 0.25 * x104 + 0.5 * x214 + x304 + x305 + x306
    x308 = x273 * x303 + x307
    x309 = x260 * x308
    x310 = x249 * x48
    x311 = -x114 * x258
    x312 = x143 * x251
    x313 = x268 * x95
    x314 = x116 * x53
    x315 = x1 * x152
    x316 = 0.0333333333333333329 * x62
    x317 = x257 * x316
    x318 = 0.166666666666666657 * x120
    x319 = x174 * x246
    x320 = x177 * x39
    x321 = 0.0416666666666666644 * x183
    x322 = 6.0 * x140 + x17
    x323 = x255 * x322
    x324 = x193 * x206
    x325 = 0.5 * x79
    x326 = 0.5 * x145 + x274 + x300 + x325 * (x271 + 2.0 * x289) + x39
    x327 = x280 * x326
    x328 = x322 * x43
    x329 = x249 * x4
    x330 = x303 * x325 + x307
    x331 = x260 * x330
    x332 = x316 * x329
    x333 = 2.0 * x38
    x334 = 5.0 * x1
    x335 = -0.0666666666666666657 * x128 * x193 * x329 * x79
    x336 = x115 * x249
    x337 = x1 * x120
    x338 = x260 * x324
    x339 = 0.166666666666666657 * x177
    x340 = x1 * x228
    x341 = -x190 * x247
    x342 = x116 * x229
    x343 = x202 * x260
    x344 = x329 * x42
    x345 = -x232 * x344
    x346 = x251 * x4
    x347 = -x240 * x247
    x348 = x17 + 6.0 * x65
    x349 = x255 * x348
    x350 = x1 * x85
    x351 = 0.0833333333333333287 * x350
    x352 = x59 * x95
    x353 = x1 * x93
    x354 = x353 * x92
    x355 = x348 * x43
    x356 = x123 * x53
    x357 = x123 * x95
    x358 = x122 * x48
    x359 = x118 + x68
    x360 = x358 + x359
    x361 = x39 * x72
    x362 = 0.166666666666666657 * x54
    x363 = x124 + x17
    x364 = 2.0 * x358 + x363
    x365 = 0.5 * x48
    x366 = x122 * x51
    x367 = 2.0 * x49
    x368 = x116 + 0.5 * x126 + x366 + x367
    x369 = x364 * x365 + x368
    x370 = x280 * x369
    x371 = x142 * x49
    x372 = 0.0416666666666666644 * x150
    x373 = x12 * x95
    x374 = x79 * x95
    x375 = x53 * x80
    x376 = x360 * x95
    x377 = x106 * x251
    x378 = x7 * x92
    x379 = 0.166666666666666657 * x85
    x380 = x115 * x122
    x381 = x359 + x380
    x382 = x39 * x53
    x383 = x381 * x95
    x384 = x115 * x364
    x385 = x368 + 0.5 * x384
    x386 = 0.166666666666666657 * x385
    x387 = -x130 * x258
    x388 = 2.0 * x116
    x389 = x388 + 4.0 * x49
    x390 = x127 + x389
    x391 = x384 + x390
    x392 = x1 * x363
    x393 = x115 * x123
    x394 = x123 * x48
    x395 = 0.25 * x136 + 0.5 * x243 + x392 + x393 + x394
    x396 = x365 * x391 + x395
    x397 = x260 * x396
    x398 = x191 * x80
    x399 = -x205 * x344
    x400 = -x208 * x247
    x401 = x146 * x353
    x402 = 0.166666666666666657 * x142
    x403 = x153 * x93
    x404 = -x161 * x247
    x405 = x17 + 6.0 * x175
    x406 = x255 * x405
    x407 = x405 * x43
    x408 = 0.5 * x115
    x409 = 0.5 * x179 + x366 + x388 + x408 * (x363 + 2.0 * x380) + x49
    x410 = x280 * x409
    x411 = x391 * x408 + x395
    x412 = x260 * x411
    x413 = 2.0 * x48
    x414 = x4 * x5
    x415 = x17 + x9
    x416 = 2.0 * x414 + x415
    x417 = x416 * x7
    x418 = 2.0 * x162
    x419 = 4.0 * x206 + x418
    x420 = x12 + x419
    x421 = x417 + x420
    x422 = x4 * x421
    x423 = x1 * x415
    x424 = x6 * x7
    x425 = x4 * x6
    x426 = 2.0 * x206
    x427 = 0.5 * x7
    x428 = 0.25 * x19 + 0.5 * x20 + x423 + x424 + x425
    x429 = x42 * (x421 * x427 + x428)
    x430 = 0.0333333333333333329 * x429
    x431 = 0.5 * x6
    x432 = x5 * x7
    x433 = x206 + 0.5 * x23 + x418 + x427 * (x415 + 2.0 * x432) + x431
    x434 = x280 * x433
    x435 = x433 * x48
    x436 = x17 + 6.0 * x55
    x437 = x255 * x436
    x438 = x43 * x436
    x439 = 0.5 * x422 + x428
    x440 = x260 * x439
    x441 = 0.5 * x11 + x162 + x426 + x431
    x442 = 0.5 * x417 + x441
    x443 = 0.166666666666666657 * x442
    x444 = x68 + x8
    x445 = x432 + x444
    x446 = x445 * x95
    x447 = x166 * x249
    x448 = 0.333333333333333315 * x162
    x449 = x115 * x250
    x450 = 0.5 * x4 * x416 + x441
    x451 = x280 * x450
    x452 = x414 + x444
    x453 = 0.166666666666666657 * x452
    x454 = x53 * x6
    x455 = x249 * x372
    x456 = x115 * x288
    x457 = x453 * x95
    x458 = x1 * x223
    x459 = x38 * x95
    x460 = x249 * x321
    x461 = 6.0 * x15 + x17
    x462 = x255 * x461
    x463 = x43 * x461
    x464 = x221 * x249
    x465 = 0.333333333333333315 * x206
    x466 = x33 / x0**3
    x467 = 0.0288675134594812872 * x466
    x468 = x429 * x467
    x469 = x38 * x466
    x470 = 0.0577350269189625745 * x42
    x471 = x469 * x470
    x472 = x467 * x62
    x473 = x245 * x53
    x474 = 0.00721687836487032181 * x473
    x475 = x254 * x474
    x476 = x42 * x467
    x477 = x476 * x48
    x478 = x38 * x436 * x477
    x479 = x42 * x473
    x480 = 0.0144337567297406436 * x479
    x481 = x480 * x66
    x482 = x439 * x476
    x483 = 0.144337567297406433 * x442
    x484 = x473 * x87
    x485 = x466 * x483
    x486 = 0.144337567297406433 * x473
    x487 = x445 * x486
    x488 = 0.144337567297406433 * x484
    x489 = x466 * x7
    x490 = x277 * x470
    x491 = 0.288675134594812866 * x48
    x492 = x489 * x491
    x493 = 0.288675134594812866 * x66
    x494 = x48 * x489
    x495 = x470 * x494
    x496 = 0.288675134594812866 * x115
    x497 = x469 * x496
    x498 = x120 * x245
    x499 = 0.144337567297406433 * x498
    x500 = x115 * x476
    x501 = x254 * x500 * x7
    x502 = 0.577350269189625731 * x119
    x503 = x469 * x7
    x504 = 0.144337567297406433 * x466
    x505 = x127 * x7
    x506 = x466 * x79
    x507 = x470 * x506
    x508 = x290 * x486
    x509 = x491 * x506
    x510 = x294 * x486
    x511 = x5 * x95
    x512 = x473 * x5
    x513 = x308 * x476
    x514 = x294 * x504
    x515 = x48 * x507
    x516 = x115 * x472
    x517 = x499 * x95
    x518 = x486 * x5
    x519 = 0.433012701892219298 * x5
    x520 = 0.0721687836487032164 * x473
    x521 = x127 * x520
    x522 = 0.0721687836487032164 * x484
    x523 = 0.00721687836487032181 * x466
    x524 = x176 * x486
    x525 = 0.288675134594812866 * x176
    x526 = x180 * x520
    x527 = x176 * x480
    x528 = x180 * x504
    x529 = 0.0360843918243516082 * x183
    x530 = x466 * x529
    x531 = x322 * x474
    x532 = x4 * x466
    x533 = x326 * x470
    x534 = x322 * x4 * x477
    x535 = x330 * x476
    x536 = x326 * x472
    x537 = x461 * x500 * x79
    x538 = x496 * x532
    x539 = x4 * x506
    x540 = x504 * x79
    x541 = x115 * x532
    x542 = x115 * x471
    x543 = x523 * x62
    x544 = x471 * x7
    x545 = 0.0360843918243516082 * x466
    x546 = x21 * x545
    x547 = x504 * x59
    x548 = x486 * x99
    x549 = x480 * x99
    x550 = x122 * x473
    x551 = 0.0721687836487032164 * x550
    x552 = 0.288675134594812866 * x550
    x553 = x151 * x95
    x554 = 0.577350269189625731 * x151
    x555 = x348 * x476 * x7 * x79
    x556 = x486 * x553
    x557 = x472 * x7
    x558 = x122 * x486
    x559 = x115 * x504
    x560 = x381 * x486
    x561 = 0.288675134594812866 * x503
    x562 = x385 * x504
    x563 = x201 * x480
    x564 = 0.288675134594812866 * x539
    x565 = x115 * x466
    x566 = x470 * x565
    x567 = x396 * x476
    x568 = x38 * x4 * x405 * x476
    x569 = x409 * x472
    x570 = x411 * x476
    x571 = x4 * x415
    x572 = 3.0 * x6
    x573 = x571 + x572
    x574 = x4 * x573
    x575 = 15.0 * x1
    x576 = x575 + 8.0 * x8
    x577 = x16 + 4.0 * x414 + x576
    x578 = x1 * x577
    x579 = x29 * x573 + x578
    x580 = x4 * x579
    x581 = x415 * x7
    x582 = x11 + x417 + x419 + x571 + x581 + 7.0 * x6
    x583 = (
        x1
        * (
            2.0 * x19
            + 4.0 * x20
            + 4.0 * x422
            + 8.0 * x423
            + 8.0 * x424
            + 8.0 * x425
            + 6.0 * x573 * x7
            + 4.0 * x574
            + 5.0 * x578
        )
        - x30
        + 2.0 * x7 * (x26 * x582 + x580)
    )
    x584 = 0.0020833333333333333 * x249
    x585 = 0.25 * x1
    x586 = -0.25 * x1 * x582 + x25 * x585
    x587 = 0.0333333333333333333 * x42
    x588 = -x587 * (0.125 * x40 - 0.125 * x579 * x7 + x586)
    x589 = x1 + x102
    x590 = 4.0 * x432 + x56 + x576
    x591 = x572 + x581
    x592 = x1 * x590 + x29 * x591
    x593 = 0.125 * x592
    x594 = 0.125 * x60
    x595 = 0.25 * x60
    x596 = 0.0166666666666666667 * x279
    x597 = 0.0333333333333333333 * x62
    x598 = x48 * x597
    x599 = x250 * x598
    x600 = x1 + x134
    x601 = 9.0 * x1
    x602 = x102 + x601
    x603 = x57 * x602
    x604 = x56 + x601
    x605 = x103 * x604
    x606 = x103 * x57
    x607 = 0.0166666666666666667 * x53
    x608 = x607 * x7
    x609 = x39 * x608
    x610 = x589 * x604
    x611 = 0.25 * x606
    x612 = x57 * x589
    x613 = x49 * x608
    x614 = x42 * x613
    x615 = 0.25 * x600
    x616 = x57 * x615
    x617 = x135 * x57
    x618 = x42 * x609
    x619 = 0.25 * x617
    x620 = 0.25 * x135
    x621 = 0.5 * x134 + 0.5 * x601
    x622 = -x587 * (0.125 * x22 - 0.125 * x4 * x579 + x586)
    x623 = 0.125 * x579
    x624 = 0.125 * x21
    x625 = 0.25 * x90
    x626 = 0.0833333333333333333 * x278
    x627 = -0.125 * x1 * x577 + 0.125 * x19
    x628 = (
        -0.0416666666666666644 * x20
        + 0.0416666666666666644 * x573 * x7
        - 0.166666666666666667 * x627
    )
    x629 = x271 * x38
    x630 = x17 * x87
    x631 = x629 + x630
    x632 = x59 * x631
    x633 = x591 * x92
    x634 = 0.125 * x92
    x635 = 0.333333333333333333 * x278
    x636 = x591 * x90
    x637 = x271 * x59
    x638 = 0.166666666666666667 * x53
    x639 = x49 * x638
    x640 = x639 * x95
    x641 = 2.0 * x135
    x642 = 0.0208333333333333322 * x53
    x643 = x575 + 8.0 * x83
    x644 = x102 + 4.0 * x266 + x643
    x645 = x1 * x644
    x646 = x333 * x631 + x645
    x647 = x1 + x56
    x648 = 0.125 * x647
    x649 = 0.125 * x57
    x650 = 0.25 * x647
    x651 = 0.5 * x135
    x652 = 0.0416666666666666667 * x278
    x653 = x77 * x80
    x654 = 0.0166666666666666667 * x653
    x655 = x42 * x654
    x656 = 0.25 * x363
    x657 = 0.125 * x591
    x658 = 0.125 * x59
    x659 = 0.25 * x589
    x660 = x116 * x638
    x661 = x39 * x638
    x662 = x661 * x95
    x663 = 0.0625 * x127
    x664 = x363 * x48
    x665 = x122 * x17
    x666 = x664 + x665
    x667 = x602 * x647
    x668 = x103 * x647
    x669 = x117 * x607
    x670 = x42 * x669
    x671 = 0.25 * x125
    x672 = 0.5 * x363
    x673 = 8.0 * x118 + x575
    x674 = x134 + 4.0 * x358 + x673
    x675 = x1 * x674
    x676 = x413 * x666 + x675
    x677 = 2.0 * x574 + x578
    x678 = x1 + x195
    x679 = 0.125 * x678
    x680 = 0.125 * x196
    x681 = 0.25 * x678
    x682 = x271 * x79
    x683 = x630 + x682
    x684 = x12 * x683
    x685 = x146 * x573
    x686 = 0.125 * x12
    x687 = x198 * x631 + x645
    x688 = 0.125 * x10
    x689 = 0.125 * x415
    x690 = 0.25 * x10
    x691 = x10 * x683
    x692 = x146 * x415
    x693 = x196 * x615
    x694 = x293 + x301 + x629 + x682 + 7.0 * x88 + x91
    x695 = -0.25 * x1 * x694 + x159 * x585
    x696 = -0.125 * x157 + 0.125 * x38 * x687 - x695
    x697 = x257 * x587
    x698 = -0.125 * x1 * x644 + 0.125 * x104
    x699 = -0.25 * x214 + 0.25 * x631 * x79 - x698
    x700 = 0.166666666666666667 * x257
    x701 = x48 * x700
    x702 = x196 * x620
    x703 = x456 * x597
    x704 = x573 * x90
    x705 = x660 * x95
    x706 = 0.125 * x125
    x707 = x638 * x80
    x708 = x707 * x95
    x709 = x10 * x631
    x710 = x415 * x92
    x711 = x10 * x271
    x712 = x415 * x90
    x713 = x257 * x597
    x714 = x115 * x713
    x715 = x162 * x638
    x716 = x715 * x95
    x717 = 0.125 * x127
    x718 = -0.25 * x1 * x674 + 0.25 * x136
    x719 = x1 + x233
    x720 = 0.125 * x719
    x721 = 0.25 * x234
    x722 = 0.0625 * x180
    x723 = x115 * x363
    x724 = x665 + x723
    x725 = 0.5 * x234
    x726 = x236 * x666 + x675
    x727 = 0.25 * x719
    x728 = 0.125 * x180
    x729 = 0.5 * x115 * x666 - 0.5 * x243 - x718
    x730 = x48 * x726
    x731 = 0.5 * x1
    x732 = 7.0 * x123 + x126 + x384 + x389 + x664 + x723
    x733 = x731 * (x188 - x732)
    x734 = 0.25 * x187 - 0.25 * x730 + x733
    x735 = x16 + x601
    x736 = x196 * x735
    x737 = x195 + x601
    x738 = x18 * x737
    x739 = x18 * x196
    x740 = x4 * x607
    x741 = x740 * x80
    x742 = x1 + x16
    x743 = x195 + 4.0 * x289 + x643
    x744 = x1 * x743 + x198 * x683
    x745 = 0.125 * x744
    x746 = 0.125 * x199
    x747 = 0.25 * x742
    x748 = 0.25 * x739
    x749 = x196 * x742
    x750 = -x587 * (0.125 * x207 - 0.125 * x687 * x79 + x695)
    x751 = x329 * x598
    x752 = x42 * x741
    x753 = 4.0 * x38
    x754 = (
        x1
        * (
            2.0 * x104
            + 4.0 * x214
            + x303 * x753
            + 8.0 * x304
            + 8.0 * x305
            + 8.0 * x306
            + x631 * x753
            + 6.0 * x631 * x79
            + 5.0 * x645
        )
        - x215
        + 2.0 * x79 * (x26 * x694 + x38 * x687)
    )
    x755 = x678 * x735
    x756 = x18 * x678
    x757 = x116 * x740
    x758 = x42 * x757
    x759 = 0.125 * x742
    x760 = 0.125 * x146
    x761 = 0.166666666666666667 * x329
    x762 = x115 * x761
    x763 = x206 * x638
    x764 = x763 * x95
    x765 = x336 * x587
    x766 = 0.125 * x183
    x767 = x288 * x587
    x768 = x18 * x721
    x769 = 0.5 * x233 + 0.5 * x601
    x770 = 0.125 * x237
    x771 = x233 + 4.0 * x380 + x673
    x772 = x1 * x771 + x236 * x724
    x773 = x103 * x721
    x774 = x587 * (-0.25 * x115 * x726 + 0.25 * x239 + x733)
    x775 = 4.0 * x48
    x776 = x480 * x52
    x777 = x245 * x85
    x778 = 0.144337567297406433 * x777
    x779 = 0.577350269189625731 * x84
    x780 = x141 * x486
    x781 = x5 * x520
    x782 = x150 * x545
    x783 = x146 * x504
    x784 = x141 * x480
    x785 = x472 * x79
    x786 = x778 * x95
    x787 = 0.00360843918243516091 * x249
    x788 = 0.433012701892219298 * x1
    x789 = x788 * (x25 - x582)
    x790 = x587 * (0.216506350946109649 * x40 - 0.216506350946109649 * x579 * x7 + x789)
    x791 = 0.216506350946109649 * x103
    x792 = 0.216506350946109649 * x589
    x793 = (
        0.216506350946109649 * x1 * x590
        - 0.216506350946109649 * x58
        - 0.433012701892219298 * x59 * x7
        + 0.433012701892219298 * x591 * x7
    )
    x794 = x596 * x600
    x795 = 0.00721687836487032181 * x7
    x796 = 0.0433012701892219257 * x479
    x797 = x600 * x796
    x798 = x38 * x7
    x799 = 0.0433012701892219257 * x473
    x800 = x135 * x48
    x801 = x7 * x800
    x802 = 0.216506350946109649 * x22 - 0.216506350946109649 * x580 + x789
    x803 = -0.216506350946109649 * x1 * x577 + 0.216506350946109649 * x19
    x804 = -0.433012701892219298 * x20 + 0.433012701892219298 * x573 * x7 - x803
    x805 = 0.166666666666666667 * x804
    x806 = 0.0360843918243516082 * x278
    x807 = 0.0360843918243516082 * x53
    x808 = x807 * x95
    x809 = x49 * x808
    x810 = -x10 * x7 + x24 + x581
    x811 = -x810
    x812 = x600 * x807
    x813 = 0.216506350946109649 * x57
    x814 = 0.433012701892219298 * x90
    x815 = 0.433012701892219298 * x271
    x816 = x600 * x652
    x817 = x79 * x800
    x818 = 0.0144337567297406454 * x479
    x819 = x125 * x626
    x820 = 0.0360843918243516082 * x382
    x821 = x127 * x806
    x822 = 0.00721687836487032181 * x42
    x823 = x125 * x278
    x824 = 0.0180421959121758041 * x823
    x825 = 0.00721687836487032268 * x479
    x826 = x138 * x825
    x827 = 0.216506350946109649 * x196
    x828 = 0.216506350946109649 * x678
    x829 = 0.433012701892219298 * x10
    x830 = 0.433012701892219298 * x415
    x831 = -0.433012701892219298 * x1 * x694 + x159 * x788
    x832 = -0.216506350946109649 * x157 + 0.216506350946109649 * x38 * x687 - x831
    x833 = -0.216506350946109649 * x1 * x644 + 0.216506350946109649 * x104
    x834 = -0.433012701892219298 * x214 + 0.433012701892219298 * x631 * x79 - x833
    x835 = -x145 + x158 + x682
    x836 = -0.433012701892219298 * x13 + 0.433012701892219298 * x4 * x573 - x803
    x837 = x116 * x808
    x838 = -x10 * x4 + x24 + x571
    x839 = -x838
    x840 = x125 * x808
    x841 = -0.433012701892219298 * x213 + 0.433012701892219298 * x38 * x631 - x833
    x842 = x158 + x629 - x91
    x843 = x596 * x719
    x844 = x180 * x806
    x845 = x652 * x719
    x846 = x526 * x95
    x847 = x473 * x529
    x848 = x719 * x796
    x849 = 0.00721687836487032181 * x4
    x850 = 0.216506350946109649 * x18
    x851 = -x587 * (
        0.216506350946109649 * x207 - 0.216506350946109649 * x687 * x79 + x831
    )
    x852 = (
        0.216506350946109649 * x1 * x743
        - 0.433012701892219298 * x146 * x79
        - 0.216506350946109649 * x197
        + 0.433012701892219298 * x683 * x79
    )
    x853 = x4 * x79
    x854 = x115 * x234
    x855 = x799 * x854
    x856 = x818 * x854
    x857 = x237 * x825

    # 900 item(s)
    result[0] = x30 * x35
    result[1] = x39 * x45
    result[2] = x45 * x49
    result[3] = x54 * x61
    result[4] = x39 * x48 * x60 * x64
    result[5] = x61 * x67
    result[6] = x71 * x74
    result[7] = x48 * x54 * x75
    result[8] = x38 * x67 * x75
    result[9] = x71 * x78
    result[10] = x80 * x81
    result[11] = x82 * x85
    result[12] = x48 * x80 * x86
    result[13] = x92 * x94
    result[14] = x48 * x85 * x97
    result[15] = x96 * x98
    result[16] = x100 * x107
    result[17] = x108 * x109
    result[18] = x111 * x66
    result[19] = x112 * x114
    result[20] = x116 * x81
    result[21] = x117 * x86
    result[22] = x120 * x82
    result[23] = x121 * x54
    result[24] = x120 * x38 * x97
    result[25] = x127 * x94
    result[26] = x112 * x130
    result[27] = x131 * x52
    result[28] = x108 * x132
    result[29] = x100 * x139
    result[30] = x142 * x144
    result[31] = x146 * x147
    result[32] = x148 * x149
    result[33] = x150 * x152
    result[34] = x153 * x154 * x77
    result[35] = x155 * x156
    result[36] = x161 * x163
    result[37] = x164 * x165 * x49
    result[38] = x167 * x67
    result[39] = x113 * x149 * x70
    result[40] = x115 * x143 * x64 * x80
    result[41] = x115 * x168 * x85
    result[42] = x120 * x168 * x79
    result[43] = x154 * x169 * x170
    result[44] = 1.0 * x119 * x171
    result[45] = x154 * x172 * x173
    result[46] = x106 * x116 * x164 * x63
    result[47] = x120 * x166 * x169
    result[48] = x166 * x172 * x85
    result[49] = 0.0166666666666666664 * x164 * x174 * x80
    result[50] = x144 * x177
    result[51] = x177 * x178
    result[52] = x147 * x180
    result[53] = x176 * x181
    result[54] = x154 * x182 * x73
    result[55] = x152 * x183
    result[56] = x129 * x184 * x70
    result[57] = x185 * x54
    result[58] = x164 * x186 * x39
    result[59] = x163 * x190
    result[60] = x173 * x192 * x194
    result[61] = x200 * x202
    result[62] = x203 * x205
    result[63] = x206 * x209
    result[64] = x199 * x211 * x49
    result[65] = x192 * x212 * x98
    result[66] = x215 * x35
    result[67] = x209 * x49
    result[68] = x200 * x67
    result[69] = x204 * x78
    result[70] = x128 * x142 * x216
    result[71] = x217 * x218
    result[72] = x141 * x220
    result[73] = x116 * x165 * x210
    result[74] = x120 * x153 * x221
    result[75] = x142 * x222
    result[76] = x116 * x161 * x44
    result[77] = x150 * x223
    result[78] = x146 * x224
    result[79] = x139 * x142
    result[80] = x184 * x216 * x79
    result[81] = x176 * x225
    result[82] = x217 * x226
    result[83] = x177 * x227
    result[84] = x182 * x221 * x85
    result[85] = x186 * x210 * x80
    result[86] = x107 * x177
    result[87] = x228 * x92
    result[88] = x186 * x85
    result[89] = x190 * x44 * x80
    result[90] = x170 * x194 * x230
    result[91] = x203 * x232
    result[92] = x202 * x238
    result[93] = x212 * x231 * x54
    result[94] = x211 * x237 * x39
    result[95] = x206 * x241
    result[96] = x231 * x74
    result[97] = x238 * x54
    result[98] = x241 * x39
    result[99] = x244 * x35
    result[100] = 0
    result[101] = x248
    result[102] = 0
    result[103] = -x250 * x61
    result[104] = -x252 * x48
    result[105] = 0
    result[106] = -x253 * x256
    result[107] = x259
    result[108] = -x261 * x67
    result[109] = 0
    result[110] = x262
    result[111] = -x263 * x264
    result[112] = -x265 * x48
    result[113] = -x268 * x269
    result[114] = -x270 * x48 * x94
    result[115] = -x269 * x66
    result[116] = -x281 * x99
    result[117] = -x108 * x268 * x49
    result[118] = -x282 * x88 * x99
    result[119] = -x283 * x284
    result[120] = 0
    result[121] = -x115 * x265
    result[122] = 0
    result[123] = -x121 * x250
    result[124] = -x269 * x285
    result[125] = 0
    result[126] = -x100 * x116 * x286
    result[127] = -x131 * x39
    result[128] = -x287 * x99
    result[129] = 0
    result[130] = -x144 * x288
    result[131] = -x290 * x291
    result[132] = -x148 * x292
    result[133] = -x295 * x296
    result[134] = -x154 * x297 * x298
    result[135] = -x155 * x299
    result[136] = -x257 * x309
    result[137] = -x166 * x294 * x310
    result[138] = -x162 * x282 * x290
    result[139] = x311
    result[140] = -x115 * x312
    result[141] = -x115 * x147 * x270
    result[142] = -x285 * x291
    result[143] = -x154 * x313 * x314
    result[144] = -0.5 * x120 * x151 * x88
    result[145] = -x172 * x315
    result[146] = -x115 * x277 * x317
    result[147] = -x162 * x313 * x318
    result[148] = -x224 * x270 * x7
    result[149] = -x319 * x7
    result[150] = 0
    result[151] = -x176 * x291
    result[152] = 0
    result[153] = -x155 * x320
    result[154] = -x182 * x315
    result[155] = 0
    result[156] = -x162 * x177 * x286
    result[157] = -x185 * x250
    result[158] = -x257 * x321
    result[159] = 0
    result[160] = -x323 * x324
    result[161] = -x201 * x327
    result[162] = -x202 * x328 * x49
    result[163] = -x329 * x331
    result[164] = -x326 * x332 * x48
    result[165] = -x206 * x328 * x67
    result[166] = -x246 * (
        x161
        + x17 * x293
        + x272 * x275
        + x302 * x334
        + x79 * (x150 + x303 * x333 + 4.0 * x304 + 4.0 * x305 + 4.0 * x306)
    )
    result[167] = -x310 * x331
    result[168] = -x327 * x66
    result[169] = -x283 * x323
    result[170] = x335
    result[171] = -x116 * x217 * x290
    result[172] = -x220 * x80
    result[173] = -x221 * x294 * x336
    result[174] = -x206 * x297 * x318
    result[175] = -x222 * x288
    result[176] = -x309 * x336
    result[177] = -x295 * x337
    result[178] = -x287 * x290
    result[179] = -x139 * x288
    result[180] = -x177 * x338
    result[181] = -x201 * x339 * x88
    result[182] = -x201 * x340
    result[183] = -x206 * x268 * x339
    result[184] = -x228 * x270 * x4
    result[185] = -x321 * x329
    result[186] = -x176 * x281
    result[187] = -x268 * x340
    result[188] = -x264 * x321
    result[189] = x341
    result[190] = 0
    result[191] = -x342 * x343
    result[192] = 0
    result[193] = x345
    result[194] = -x237 * x346
    result[195] = 0
    result[196] = -x256 * x342
    result[197] = -x238 * x250
    result[198] = x347
    result[199] = 0
    result[200] = 0
    result[201] = 0
    result[202] = x248
    result[203] = 0
    result[204] = -x252 * x38
    result[205] = -x310 * x61
    result[206] = 0
    result[207] = -x261 * x54
    result[208] = x259
    result[209] = -x253 * x349
    result[210] = 0
    result[211] = 0
    result[212] = -x265 * x79
    result[213] = 0
    result[214] = -x351 * x352
    result[215] = -x292 * x96
    result[216] = 0
    result[217] = -x354 * x99
    result[218] = -x111 * x49
    result[219] = -x100 * x355 * x80
    result[220] = x262
    result[221] = -x265 * x38
    result[222] = -x263 * x356
    result[223] = -x269 * x52
    result[224] = -x357 * x38 * x94
    result[225] = -x269 * x360
    result[226] = -x284 * x361
    result[227] = -x123 * x362 * x99
    result[228] = -x108 * x360 * x39
    result[229] = -x370 * x99
    result[230] = 0
    result[231] = 0
    result[232] = -x141 * x291
    result[233] = 0
    result[234] = -x153 * x315
    result[235] = -x155 * x371
    result[236] = 0
    result[237] = -x257 * x372
    result[238] = -x167 * x310
    result[239] = -x142 * x162 * x355
    result[240] = -x312 * x79
    result[241] = -x351 * x373
    result[242] = -x123 * x147 * x374
    result[243] = -x169 * x315
    result[244] = -0.5 * x123 * x171
    result[245] = -x154 * x375 * x376
    result[246] = -x377 * x7
    result[247] = -x357 * x378 * x93
    result[248] = -x162 * x376 * x379
    result[249] = -x317 * x369 * x79
    result[250] = -x144 * x336
    result[251] = -x178 * x336
    result[252] = -x291 * x381
    result[253] = -x116 * x181
    result[254] = -x154 * x382 * x383
    result[255] = -x296 * x386
    result[256] = x387
    result[257] = -x162 * x362 * x381
    result[258] = -x166 * x250 * x385
    result[259] = -x257 * x397
    result[260] = 0
    result[261] = 0
    result[262] = -x343 * x398
    result[263] = 0
    result[264] = -x199 * x346
    result[265] = x399
    result[266] = 0
    result[267] = x400
    result[268] = -x200 * x310
    result[269] = -x349 * x398
    result[270] = -x142 * x338
    result[271] = -x201 * x401
    result[272] = -x123 * x201 * x402
    result[273] = -x329 * x372
    result[274] = -x123 * x4 * x403
    result[275] = -x206 * x360 * x402
    result[276] = x404
    result[277] = -x356 * x372
    result[278] = -x360 * x401
    result[279] = -x141 * x370
    result[280] = x335
    result[281] = -x116 * x225
    result[282] = -x217 * x381 * x80
    result[283] = -x227 * x336
    result[284] = -x206 * x379 * x383
    result[285] = -x221 * x288 * x385
    result[286] = -x107 * x336
    result[287] = -x354 * x381
    result[288] = -x350 * x386
    result[289] = -x288 * x397
    result[290] = -x324 * x406
    result[291] = -x202 * x39 * x407
    result[292] = -x201 * x410
    result[293] = -x206 * x407 * x54
    result[294] = -x332 * x38 * x409
    result[295] = -x329 * x412
    result[296] = -x361 * x406
    result[297] = -x410 * x52
    result[298] = -x250 * x412
    result[299] = -x246 * (
        x115 * (x183 + x391 * x413 + 4.0 * x392 + 4.0 * x393 + 4.0 * x394)
        + x17 * x384
        + x190
        + x334 * x390
        + x364 * x367
    )
    result[300] = -x246 * (
        x17 * x417
        + x28
        + x334 * x420
        + x416 * x426
        + x7 * (x21 + 2.0 * x422 + 4.0 * x423 + 4.0 * x424 + 4.0 * x425)
    )
    result[301] = -x250 * x430
    result[302] = -x310 * x430
    result[303] = -x434 * x52
    result[304] = -x250 * x316 * x435
    result[305] = -x434 * x66
    result[306] = -x361 * x437
    result[307] = -x438 * x49 * x54
    result[308] = -x39 * x438 * x67
    result[309] = -x283 * x437
    result[310] = -x288 * x440
    result[311] = -x350 * x443
    result[312] = -x292 * x443
    result[313] = -x354 * x445
    result[314] = -x379 * x446 * x49
    result[315] = -x282 * x445 * x80
    result[316] = -x107 * x257
    result[317] = -x109 * x447
    result[318] = -x448 * x66 * x85
    result[319] = x311
    result[320] = -x336 * x440
    result[321] = -x443 * x449
    result[322] = -x337 * x443
    result[323] = -x116 * x362 * x445
    result[324] = -x318 * x39 * x446
    result[325] = -x287 * x445
    result[326] = x387
    result[327] = -x120 * x448 * x52
    result[328] = -x132 * x447
    result[329] = -x139 * x257
    result[330] = -x141 * x451
    result[331] = -x401 * x452
    result[332] = -x371 * x453
    result[333] = -x372 * x454
    result[334] = -x403 * x48 * x6
    result[335] = -0.166666666666666657 * x156 * x6
    result[336] = x404
    result[337] = -x455 * x48
    result[338] = -x401 * x66
    result[339] = -x142 * x260 * x283
    result[340] = -x316 * x450 * x456
    result[341] = -x116 * x457 * x85
    result[342] = -x120 * x457 * x80
    result[343] = -x115 * x169 * x6 * x93
    result[344] = -0.5 * x119 * x6 * x85
    result[345] = -x224 * x374 * x6
    result[346] = -x115 * x377
    result[347] = -x169 * x458
    result[348] = -x172 * x351
    result[349] = -x319 * x79
    result[350] = -x176 * x451
    result[351] = -x320 * x453
    result[352] = -x340 * x452
    result[353] = -x176 * x362 * x6
    result[354] = -x228 * x459 * x6
    result[355] = -x321 * x454
    result[356] = -x260 * x320 * x72
    result[357] = -x340 * x52
    result[358] = -x38 * x460
    result[359] = x341
    result[360] = -x398 * x462
    result[361] = -x200 * x329
    result[362] = x399
    result[363] = x400
    result[364] = -x199 * x251 * x48
    result[365] = -x191 * x260 * x299
    result[366] = 0
    result[367] = 0
    result[368] = 0
    result[369] = 0
    result[370] = -x116 * x142 * x463
    result[371] = -x218 * x464
    result[372] = -x120 * x141 * x465
    result[373] = -x115 * x455
    result[374] = -x153 * x458
    result[375] = -x141 * x287
    result[376] = 0
    result[377] = 0
    result[378] = 0
    result[379] = 0
    result[380] = -x177 * x463 * x80
    result[381] = -x176 * x465 * x85
    result[382] = -x226 * x464
    result[383] = -x176 * x354
    result[384] = -x182 * x351
    result[385] = -x460 * x79
    result[386] = 0
    result[387] = 0
    result[388] = 0
    result[389] = 0
    result[390] = -x342 * x462
    result[391] = x345
    result[392] = -x238 * x329
    result[393] = -x260 * x342 * x54
    result[394] = -x237 * x251 * x38
    result[395] = x347
    result[396] = 0
    result[397] = 0
    result[398] = 0
    result[399] = 0
    result[400] = 0
    result[401] = x468
    result[402] = 0
    result[403] = x433 * x471
    result[404] = x435 * x472
    result[405] = 0
    result[406] = x436 * x475
    result[407] = x478
    result[408] = x436 * x481
    result[409] = 0
    result[410] = x482
    result[411] = x483 * x484
    result[412] = x48 * x485
    result[413] = x268 * x487
    result[414] = x446 * x48 * x488
    result[415] = x487 * x66
    result[416] = x489 * x490
    result[417] = x268 * x492
    result[418] = x484 * x493 * x7
    result[419] = x495 * x76
    result[420] = 0
    result[421] = x115 * x485
    result[422] = 0
    result[423] = x445 * x497
    result[424] = x446 * x499
    result[425] = 0
    result[426] = x501
    result[427] = x502 * x503
    result[428] = x504 * x505
    result[429] = 0
    result[430] = x450 * x507
    result[431] = x452 * x508
    result[432] = x452 * x509
    result[433] = x5 * x510
    result[434] = x48 * x508 * x511
    result[435] = x493 * x512 * x79
    result[436] = x513
    result[437] = x48 * x514
    result[438] = x508 * x66
    result[439] = x515 * x76
    result[440] = x450 * x516
    result[441] = x115 * x452 * x488 * x95
    result[442] = x452 * x517
    result[443] = x115 * x313 * x518
    result[444] = x498 * x519 * x87
    result[445] = x511 * x521
    result[446] = x277 * x516
    result[447] = x268 * x517
    result[448] = x172 * x522
    result[449] = x174 * x523
    result[450] = 0
    result[451] = x452 * x524
    result[452] = 0
    result[453] = x38 * x512 * x525
    result[454] = x511 * x526
    result[455] = 0
    result[456] = x254 * x527
    result[457] = x38 * x528
    result[458] = x530
    result[459] = 0
    result[460] = x461 * x531
    result[461] = x532 * x533
    result[462] = x534
    result[463] = x535
    result[464] = x48 * x536
    result[465] = x322 * x481
    result[466] = 0
    result[467] = 0
    result[468] = 0
    result[469] = 0
    result[470] = x537
    result[471] = x290 * x538
    result[472] = x502 * x539
    result[473] = x115 * x514
    result[474] = x290 * x517
    result[475] = x127 * x540
    result[476] = 0
    result[477] = 0
    result[478] = 0
    result[479] = 0
    result[480] = x461 * x527
    result[481] = x4 * x484 * x525
    result[482] = x4 * x528
    result[483] = x268 * x524
    result[484] = x182 * x522
    result[485] = x530
    result[486] = 0
    result[487] = 0
    result[488] = 0
    result[489] = 0
    result[490] = 0
    result[491] = x229 * x470 * x541
    result[492] = 0
    result[493] = x229 * x542
    result[494] = x237 * x543
    result[495] = 0
    result[496] = 0
    result[497] = 0
    result[498] = 0
    result[499] = 0
    result[500] = 0
    result[501] = 0
    result[502] = 0
    result[503] = 0
    result[504] = x543 * x60
    result[505] = 0
    result[506] = 0
    result[507] = x544 * x69
    result[508] = x495 * x69
    result[509] = 0
    result[510] = 0
    result[511] = 0
    result[512] = x546
    result[513] = 0
    result[514] = x352 * x522
    result[515] = x48 * x547
    result[516] = 0
    result[517] = x268 * x548
    result[518] = x484 * x491 * x99
    result[519] = x348 * x549
    result[520] = 0
    result[521] = x546
    result[522] = 0
    result[523] = x38 * x547
    result[524] = x352 * x551
    result[525] = 0
    result[526] = x254 * x549
    result[527] = x38 * x552 * x99
    result[528] = x360 * x548
    result[529] = 0
    result[530] = 0
    result[531] = 0
    result[532] = x12 * x540
    result[533] = 0
    result[534] = x508 * x553
    result[535] = x48 * x506 * x554
    result[536] = 0
    result[537] = x514 * x7
    result[538] = x290 * x492
    result[539] = x555
    result[540] = x143 * x543
    result[541] = x373 * x522
    result[542] = x373 * x551
    result[543] = x268 * x556
    result[544] = 0.433012701892219298 * x122 * x151 * x484
    result[545] = x360 * x556
    result[546] = x277 * x557
    result[547] = x313 * x558 * x7
    result[548] = x376 * x488 * x7
    result[549] = x369 * x557
    result[550] = 0
    result[551] = x12 * x559
    result[552] = 0
    result[553] = x115 * x469 * x554
    result[554] = x553 * x560
    result[555] = 0
    result[556] = x501
    result[557] = x381 * x561
    result[558] = x562 * x7
    result[559] = 0
    result[560] = 0
    result[561] = 0
    result[562] = x322 * x563
    result[563] = 0
    result[564] = x4 * x536
    result[565] = x534
    result[566] = 0
    result[567] = x535
    result[568] = x466 * x48 * x533
    result[569] = x348 * x531
    result[570] = x194 * x507
    result[571] = x201 * x508
    result[572] = x201 * x552 * x79
    result[573] = x4 * x514
    result[574] = x122 * x4 * x508 * x95
    result[575] = x360 * x564
    result[576] = x513
    result[577] = x122 * x510
    result[578] = x360 * x508
    result[579] = x369 * x507
    result[580] = x194 * x566
    result[581] = x201 * x484 * x496
    result[582] = x201 * x560
    result[583] = x268 * x538
    result[584] = x383 * x4 * x488
    result[585] = x4 * x562
    result[586] = x490 * x565
    result[587] = x268 * x560
    result[588] = x385 * x488
    result[589] = x567
    result[590] = 0
    result[591] = x405 * x563
    result[592] = 0
    result[593] = x568
    result[594] = x4 * x569
    result[595] = 0
    result[596] = x405 * x475
    result[597] = x409 * x471
    result[598] = x570
    result[599] = 0
    result[600] = -x583 * x584
    result[601] = -x250 * x588
    result[602] = -x310 * x588
    result[603] = x596 * (-x103 * x594 - x589 * x593 + x589 * x595)
    result[604] = x599 * (
        -0.125 * x1 * x590 + 0.125 * x58 + 0.25 * x59 * x7 - 0.25 * x591 * x7
    )
    result[605] = x596 * (x135 * x595 - x593 * x600 - x594 * x600)
    result[606] = x609 * (-0.25 * x603 - 0.25 * x605 + 0.5 * x606)
    result[607] = -x614 * (0.25 * x610 + x611 - 0.5 * x612)
    result[608] = -x618 * (x604 * x615 + x616 - 0.5 * x617)
    result[609] = x613 * (x57 * x621 - x604 * x620 - x619)
    result[610] = -x288 * x622
    result[611] = x626 * (x21 * x625 - x271 * x624 - x623 * x90)
    result[612] = -x292 * x628
    result[613] = -x635 * (-x59 * x634 + 0.0625 * x632 + 0.0625 * x633)
    result[614] = -x640 * (-x59 * x625 + 0.125 * x636 + 0.125 * x637)
    result[615] = x642 * x80 * (-x59 * x600 + x59 * x641 - x591 * x600)
    result[616] = x596 * (-x106 * x649 + x106 * x650 - x646 * x648)
    result[617] = x639 * (-x57 * x634 - x631 * x648 + x650 * x92)
    result[618] = x652 * (-x271 * x615 * x647 - x616 * x90 + x647 * x651 * x90)
    result[619] = x655 * (-x619 - x620 * x647 + x621 * x647)
    result[620] = -x336 * x622
    result[621] = -x449 * x628
    result[622] = x626 * (-x125 * x623 - x125 * x624 + x21 * x656)
    result[623] = x660 * (-x103 * x658 - x589 * x657 + x59 * x659)
    result[624] = x662 * (-x125 * x657 - x125 * x658 + x59 * x656)
    result[625] = x635 * (-x59 * x663 - x591 * x663 + x658 * x666)
    result[626] = -x670 * (x611 + 0.25 * x667 - 0.5 * x668)
    result[627] = x652 * (x589 * x647 * x672 - x612 * x671 - x668 * x671)
    result[628] = x661 * (-x127 * x648 - x127 * x649 + x650 * x666)
    result[629] = x596 * (-x138 * x648 - x138 * x649 + x650 * x676)
    result[630] = x596 * (-x143 * x680 + x143 * x681 - x677 * x679)
    result[631] = -x635 * (-x146 * x686 + 0.0625 * x684 + 0.0625 * x685)
    result[632] = x639 * (-x12 * x680 + x12 * x681 - x573 * x679)
    result[633] = x626 * (-x150 * x689 + x150 * x690 - x687 * x688)
    result[634] = -x640 * (-x146 * x690 + 0.125 * x691 + 0.125 * x692)
    result[635] = x652 * (x10 * x651 * x678 - x10 * x693 - x415 * x615 * x678)
    result[636] = -x696 * x697
    result[637] = -x699 * x701
    result[638] = x162 * x642 * (-x146 * x600 + x146 * x641 - x600 * x683)
    result[639] = x614 * (-x620 * x678 + x621 * x678 - x702)
    result[640] = x703 * (0.25 * x13 - 0.25 * x4 * x573 + x627)
    result[641] = -x705 * (0.125 * x12 * x271 - x12 * x625 + 0.125 * x704)
    result[642] = x708 * (x12 * x656 - x125 * x686 - x573 * x706)
    result[643] = -x705 * (-x690 * x92 + 0.125 * x709 + 0.125 * x710)
    result[644] = 0.125 * x278 * (x10 * x672 * x90 - x671 * x711 - x671 * x712)
    result[645] = x708 * (-x127 * x688 - x127 * x689 + x666 * x690)
    result[646] = x714 * (0.25 * x213 - 0.25 * x38 * x631 + x698)
    result[647] = x716 * (-x125 * x634 - x631 * x706 + x656 * x92)
    result[648] = x716 * (-x271 * x717 + x625 * x666 - x717 * x90)
    result[649] = -x713 * x79 * (0.5 * x242 - 0.5 * x48 * x666 + x718)
    result[650] = x596 * (-x143 * x720 + x143 * x721 - x677 * x720)
    result[651] = x39 * x642 * (2.0 * x12 * x234 - x12 * x719 - x573 * x719)
    result[652] = x635 * (-x12 * x722 - x573 * x722 + x686 * x724)
    result[653] = x652 * (x10 * x589 * x725 - x103 * x690 * x719 - x415 * x659 * x719)
    result[654] = x662 * (-x180 * x688 - x180 * x689 + x690 * x724)
    result[655] = x626 * (-x183 * x688 - x183 * x689 + x690 * x726)
    result[656] = x618 * (x103 * x725 - x103 * x727 - x602 * x727)
    result[657] = x715 * (-x103 * x728 - x589 * x728 + x659 * x724)
    result[658] = x38 * x700 * x729
    result[659] = -x697 * x734
    result[660] = x741 * (-0.25 * x736 - 0.25 * x738 + 0.5 * x739)
    result[661] = x596 * (-x18 * x746 + x199 * x747 - x742 * x745)
    result[662] = -x655 * (0.25 * x737 * x742 + x748 - 0.5 * x749)
    result[663] = -x329 * x750
    result[664] = x751 * (
        -0.125 * x1 * x743 + 0.25 * x146 * x79 + 0.125 * x197 - 0.25 * x683 * x79
    )
    result[665] = x752 * (x196 * x651 - x615 * x737 - x693)
    result[666] = -x584 * x754
    result[667] = -x310 * x750
    result[668] = x596 * (x199 * x620 - x600 * x745 - x600 * x746)
    result[669] = x654 * (x196 * x621 - x620 * x737 - x702)
    result[670] = -x758 * (x748 + 0.25 * x755 - 0.5 * x756)
    result[671] = x660 * (x146 * x747 - x18 * x760 - x683 * x759)
    result[672] = x652 * (-x671 * x749 - x671 * x756 + x672 * x678 * x742)
    result[673] = -x699 * x762
    result[674] = x764 * (x146 * x656 - x146 * x706 - x683 * x706)
    result[675] = x763 * (-x127 * x679 - x127 * x680 + x666 * x681)
    result[676] = -x696 * x765
    result[677] = x626 * (x150 * x656 - x150 * x706 - x687 * x706)
    result[678] = x635 * (-x146 * x663 - x663 * x683 + x666 * x760)
    result[679] = x596 * (-x138 * x679 - x138 * x680 + x676 * x681)
    result[680] = x752 * (x18 * x725 - x18 * x727 - x727 * x735)
    result[681] = x652 * (-x18 * x625 * x719 - x271 * x727 * x742 + x725 * x742 * x90)
    result[682] = x707 * (-x18 * x728 + x724 * x747 - x728 * x742)
    result[683] = x206 * x642 * (x105 * x234 - x631 * x719 - x719 * x92)
    result[684] = x764 * (-x271 * x728 + x625 * x724 - x728 * x90)
    result[685] = x729 * x761 * x79
    result[686] = x596 * (-x106 * x720 + x106 * x721 - x646 * x720)
    result[687] = x635 * (-x631 * x722 + x634 * x724 - x722 * x92)
    result[688] = x626 * (-x271 * x766 + x625 * x726 - x766 * x90)
    result[689] = -x734 * x767
    result[690] = x757 * (x18 * x769 - x721 * x735 - x768)
    result[691] = x670 * (-x721 * x742 + x742 * x769 - x768)
    result[692] = x596 * (-x18 * x770 - x237 * x759 + x747 * x772)
    result[693] = x758 * (-x234 * x659 + x589 * x769 - x773)
    result[694] = (
        x329
        * x38
        * x597
        * (0.25 * x1 * x771 - 0.5 * x115 * x180 + 0.5 * x115 * x724 - 0.25 * x235)
    )
    result[695] = -x329 * x774
    result[696] = x669 * (x103 * x769 - x602 * x721 - x773)
    result[697] = x596 * (-x103 * x770 - x589 * x770 + x659 * x772)
    result[698] = -x250 * x774
    result[699] = (
        0.00416666666666666661
        * x249
        * (
            x1
            * (
                6.0 * x115 * x666
                + 2.0 * x136
                + 4.0 * x243
                + x391 * x775
                + 8.0 * x392
                + 8.0 * x393
                + 8.0 * x394
                + x666 * x775
                + 5.0 * x675
            )
            + 2.0 * x115 * (x26 * x732 + x730)
            - x244
        )
    )
    result[700] = 0
    result[701] = 0
    result[702] = x468
    result[703] = 0
    result[704] = x38 * x433 * x472
    result[705] = x435 * x466 * x470
    result[706] = 0
    result[707] = x436 * x776
    result[708] = x478
    result[709] = x348 * x436 * x474
    result[710] = 0
    result[711] = 0
    result[712] = x485 * x79
    result[713] = 0
    result[714] = x446 * x778
    result[715] = x445 * x509
    result[716] = 0
    result[717] = x378 * x504
    result[718] = x494 * x779
    result[719] = x555
    result[720] = x482
    result[721] = x38 * x485
    result[722] = x483 * x550
    result[723] = x487 * x52
    result[724] = x122 * x459 * x487
    result[725] = x360 * x487
    result[726] = x544 * x72
    result[727] = x52 * x552 * x7
    result[728] = x360 * x561
    result[729] = x369 * x470 * x489
    result[730] = 0
    result[731] = 0
    result[732] = x452 * x780
    result[733] = 0
    result[734] = x153 * x781
    result[735] = x141 * x491 * x512
    result[736] = 0
    result[737] = x782
    result[738] = x48 * x783
    result[739] = x348 * x784
    result[740] = x450 * x785
    result[741] = x452 * x786
    result[742] = x374 * x452 * x558
    result[743] = x169 * x781
    result[744] = x122 * x519 * x777
    result[745] = x360 * x374 * x518
    result[746] = x106 * x543
    result[747] = x169 * x551
    result[748] = x360 * x786
    result[749] = x369 * x785
    result[750] = x450 * x566
    result[751] = x452 * x497
    result[752] = x452 * x560
    result[753] = x496 * x512 * x52
    result[754] = x38 * x511 * x560
    result[755] = x385 * x518
    result[756] = x542 * x72
    result[757] = x52 * x560
    result[758] = x38 * x562
    result[759] = x567
    result[760] = 0
    result[761] = 0
    result[762] = x191 * x4 * x507
    result[763] = 0
    result[764] = x199 * x543
    result[765] = x191 * x515
    result[766] = 0
    result[767] = 0
    result[768] = 0
    result[769] = 0
    result[770] = x461 * x784
    result[771] = x4 * x783
    result[772] = x141 * x4 * x552
    result[773] = x782
    result[774] = x153 * x551
    result[775] = x360 * x780
    result[776] = 0
    result[777] = 0
    result[778] = 0
    result[779] = 0
    result[780] = x537
    result[781] = x541 * x779
    result[782] = x381 * x564
    result[783] = x559 * x92
    result[784] = x381 * x786
    result[785] = x385 * x540
    result[786] = 0
    result[787] = 0
    result[788] = 0
    result[789] = 0
    result[790] = x405 * x461 * x474
    result[791] = x568
    result[792] = x409 * x470 * x532
    result[793] = x405 * x776
    result[794] = x38 * x569
    result[795] = x570
    result[796] = 0
    result[797] = 0
    result[798] = 0
    result[799] = 0
    result[800] = x583 * x787
    result[801] = -x250 * x790
    result[802] = -x310 * x790
    result[803] = x596 * (x592 * x792 - x60 * x791)
    result[804] = x599 * x793
    result[805] = x793 * x794
    result[806] = x382 * x795 * (-x603 + x605)
    result[807] = x298 * x42 * x795 * (-x606 + x610)
    result[808] = x797 * x798
    result[809] = x799 * x801
    result[810] = -x767 * x802
    result[811] = 0.216506350946109649 * x626 * (-x21 * x271 + x579 * x90)
    result[812] = x292 * x805
    result[813] = x806 * (-x632 + x633)
    result[814] = x809 * (x636 - x637)
    result[815] = -x80 * x811 * x812
    result[816] = x596 * (x106 * x813 - 0.216506350946109649 * x646 * x647)
    result[817] = -x639 * (0.216506350946109649 * x631 * x647 - x813 * x92)
    result[818] = x816 * (x57 * x814 - x647 * x815)
    result[819] = x817 * x818
    result[820] = -x765 * x802
    result[821] = x449 * x805
    result[822] = x804 * x819
    result[823] = x660 * (-x59 * x791 + x591 * x792)
    result[824] = -x125 * x811 * x820 * x95
    result[825] = x810 * x821
    result[826] = x117 * x53 * x822 * (x606 - x667)
    result[827] = x824 * (x612 - x668)
    result[828] = x132 * x520
    result[829] = x826
    result[830] = x596 * (-x143 * x827 + x677 * x828)
    result[831] = x806 * (-x684 + x685)
    result[832] = x639 * (-x12 * x827 + x573 * x828)
    result[833] = 0.216506350946109649 * x626 * (-x10 * x687 + x150 * x415)
    result[834] = x809 * (-x691 + x692)
    result[835] = x816 * (-x196 * x829 + x678 * x830)
    result[836] = -x697 * x832
    result[837] = -x701 * x834
    result[838] = -x162 * x812 * x835
    result[839] = -x801 * x818
    result[840] = x703 * x836
    result[841] = x837 * (-x12 * x271 + x704)
    result[842] = -x80 * x839 * x840
    result[843] = x837 * (-x709 + x710)
    result[844] = 0.0541265877365274123 * x823 * (-x711 + x712)
    result[845] = x374 * x521
    result[846] = -x714 * x841
    result[847] = -x162 * x840 * x842
    result[848] = -x505 * x520 * x95
    result[849] = 0
    result[850] = x836 * x843
    result[851] = -x719 * x820 * x839
    result[852] = x838 * x844
    result[853] = x845 * (-x103 * x829 + x589 * x830)
    result[854] = x38 * x846
    result[855] = x847
    result[856] = -x798 * x848
    result[857] = -x526 * x7
    result[858] = 0
    result[859] = 0
    result[860] = x375 * x849 * (x736 - x738)
    result[861] = x596 * (x199 * x850 - 0.216506350946109649 * x742 * x744)
    result[862] = x653 * x822 * (-x737 * x742 + x739)
    result[863] = -x329 * x851
    result[864] = -x751 * x852
    result[865] = -x797 * x853
    result[866] = -x754 * x787
    result[867] = -x310 * x851
    result[868] = -x794 * x852
    result[869] = -x799 * x817
    result[870] = x314 * x42 * x849 * (-x739 + x755)
    result[871] = x660 * (x146 * x850 - 0.216506350946109649 * x683 * x742)
    result[872] = x824 * (-x749 + x756)
    result[873] = -x762 * x834
    result[874] = -x206 * x835 * x840
    result[875] = -x4 * x521
    result[876] = -x765 * x832
    result[877] = -x819 * x834
    result[878] = -x821 * x835
    result[879] = -x826
    result[880] = x848 * x853
    result[881] = x845 * (x18 * x814 - x742 * x815)
    result[882] = x226 * x520
    result[883] = -x206 * x719 * x807 * x842
    result[884] = -x4 * x846
    result[885] = 0
    result[886] = -x841 * x843
    result[887] = -x842 * x844
    result[888] = -x847
    result[889] = 0
    result[890] = x4 * x855
    result[891] = x38 * x856
    result[892] = x857
    result[893] = -x4 * x856
    result[894] = 0
    result[895] = 0
    result[896] = -x38 * x855
    result[897] = -x857
    result[898] = 0
    result[899] = 0


@numba.jit(
    func_type.signature,
    nopython=True,
    nogil=True,
    fastmath=True,
    cache=True,
)
def multipole3d_sph_43(ax, da, A, bx, db, B, R, result):
    """Primitive Cartesian 3D (gf) spherical multipole integrals.
    In contrast to the other multipole integrals, the origin R is calculated
    inside the function and is (possibly) unique for all primitive pairs.

    Generated code; DO NOT modify by hand!"""

    x0 = 2.0 * ax + 2.0 * bx
    x1 = x0 ** (-1.0)
    x2 = (ax + bx) ** (-1.0)
    x3 = -x2 * (ax * A[0] + bx * B[0])
    x4 = -x3 - A[0]
    x5 = -x3 - B[0]
    x6 = ax * bx * x2
    x7 = numpy.exp(-x6 * (A[0] - B[0]) ** 2)
    x8 = 1.77245385090551603
    x9 = numpy.sqrt(x2)
    x10 = x8 * x9
    x11 = x10 * x7
    x12 = x11 * x4
    x13 = x12 * x5
    x14 = 2.0 * x13
    x15 = x11 * x5**2
    x16 = x1 * x11
    x17 = 3.0 * x16
    x18 = x15 + x17
    x19 = x1 * (x14 + x18)
    x20 = x11 * x5
    x21 = x1 * (x12 + x20)
    x22 = x13 + x16
    x23 = x22 * x5
    x24 = x21 + x23
    x25 = x24 * x4
    x26 = x19 + x25
    x27 = x26 * x4
    x28 = x26 * x5
    x29 = x22 * x4
    x30 = 2.0 * x1 * (2.0 * x21 + x23 + x29)
    x31 = x24 * x5
    x32 = 3.0 * x25
    x33 = x28 + x30
    x34 = x1 * (5.0 * x19 + 2.0 * x31 + x32) + x33 * x4
    x35 = 3.0 * x1 * (x27 + x28 + 2.0 * x30) + x34 * x4
    x36 = numpy.exp(-x6 * (A[2] - B[2]) ** 2)
    x37 = numpy.exp(-x6 * (A[1] - B[1]) ** 2)
    x38 = 3.14159265358979324 * x2 * x37
    x39 = x36 * x38
    x40 = 2.64575131106459059
    x41 = da * db
    x42 = 0.00952380952380952467 * x41
    x43 = x40 * x42
    x44 = x39 * x43
    x45 = -x2 * (ax * A[1] + bx * B[1])
    x46 = -x45 - B[1]
    x47 = 5.91607978309961604
    x48 = x42 * x47
    x49 = x46 * x48
    x50 = x4**2
    x51 = x11 * x50
    x52 = x17 + x51
    x53 = x1 * (x14 + x52)
    x54 = x21 + x29
    x55 = x4 * x54
    x56 = x27 + x30
    x57 = x1 * (3.0 * x19 + x32 + 2.0 * x53 + 2.0 * x55) + x4 * x56
    x58 = x39 * x57
    x59 = -x2 * (ax * A[2] + bx * B[2])
    x60 = -x59 - B[2]
    x61 = x48 * x60
    x62 = x16 + x51
    x63 = x4 * x62
    x64 = x1 * x12
    x65 = 2.0 * x64
    x66 = x63 + x65
    x67 = x53 + x55
    x68 = x1 * (3.0 * x21 + 3.0 * x29 + x66) + x4 * x67
    x69 = x10 * x36
    x70 = x68 * x69
    x71 = x10 * x37
    x72 = x46**2 * x71
    x73 = x1 * x71
    x74 = x72 + x73
    x75 = x48 * x74
    x76 = x60 * x68
    x77 = x39 * x46
    x78 = 10.2469507659595984
    x79 = x42 * x78
    x80 = x77 * x79
    x81 = x60**2 * x69
    x82 = x1 * x69
    x83 = x81 + x82
    x84 = x48 * x83
    x85 = x46 * x73
    x86 = 2.0 * x85
    x87 = x46 * x74 + x86
    x88 = x1 * (x17 + 3.0 * x51) + x4 * x66
    x89 = x43 * x69
    x90 = x60 * x69
    x91 = x88 * x90
    x92 = x46 * x71
    x93 = x60 * x82
    x94 = 2.0 * x93
    x95 = x60 * x83 + x94
    x96 = x43 * x95
    x97 = x71 * x88
    x98 = -x45 - A[1]
    x99 = 0.0666666666666666657 * x41
    x100 = x98 * x99
    x101 = x34 * x39
    x102 = x71 * x98
    x103 = x102 * x46
    x104 = x103 + x73
    x105 = 2.2360679774997897
    x106 = x105 * x41
    x107 = 0.0666666666666666657 * x106
    x108 = x107 * x69
    x109 = x107 * x60
    x110 = x39 * x98
    x111 = x109 * x110
    x112 = x1 * (x102 + x92)
    x113 = x104 * x46
    x114 = x112 + x113
    x115 = x104 * x67
    x116 = 3.87298334620741689
    x117 = x116 * x41
    x118 = 0.0666666666666666657 * x117
    x119 = x118 * x90
    x120 = x107 * x83
    x121 = 2.0 * x103
    x122 = 3.0 * x73
    x123 = x122 + x72
    x124 = x1 * (x121 + x123)
    x125 = x114 * x46
    x126 = x124 + x125
    x127 = x126 * x69
    x128 = x66 * x99
    x129 = x114 * x90
    x130 = x107 * x66
    x131 = x104 * x66
    x132 = x102 * x95
    x133 = -x59 - A[2]
    x134 = x133 * x99
    x135 = x107 * x77
    x136 = x56 * x71
    x137 = x133 * x69
    x138 = x137 * x60
    x139 = x138 + x82
    x140 = x107 * x139
    x141 = x107 * x74
    x142 = x137 * x67
    x143 = x67 * x92
    x144 = x118 * x139
    x145 = x1 * (x137 + x90)
    x146 = x139 * x60
    x147 = x145 + x146
    x148 = x107 * x71
    x149 = x148 * x67
    x150 = x137 * x87
    x151 = x139 * x74
    x152 = x107 * x151
    x153 = x147 * x92
    x154 = 2.0 * x138
    x155 = 3.0 * x82
    x156 = x155 + x81
    x157 = x1 * (x154 + x156)
    x158 = x147 * x60
    x159 = x157 + x158
    x160 = x159 * x71
    x161 = x33 * x69
    x162 = x98**2
    x163 = x162 * x71
    x164 = x163 + x73
    x165 = 0.0222222222222222231 * x117
    x166 = x164 * x165
    x167 = x104 * x98
    x168 = x112 + x167
    x169 = 1.73205080756887729
    x170 = x169 * x41
    x171 = 0.111111111111111105 * x170
    x172 = x171 * x69
    x173 = x26 * x90
    x174 = x164 * x171
    x175 = x114 * x98
    x176 = x124 + x175
    x177 = 0.333333333333333315 * x41
    x178 = x177 * x54
    x179 = x178 * x90
    x180 = x164 * x54
    x181 = x171 * x83
    x182 = 2.0 * x1 * (2.0 * x112 + x113 + x167)
    x183 = x176 * x46
    x184 = x182 + x183
    x185 = x184 * x69
    x186 = x165 * x62
    x187 = x176 * x90
    x188 = x171 * x62
    x189 = x168 * x62
    x190 = x164 * x95
    x191 = x107 * x133
    x192 = x110 * x33
    x193 = x104 * x26
    x194 = x137 * x177
    x195 = x102 * x26
    x196 = x139 * x177
    x197 = x137 * x178
    x198 = x104 * x54
    x199 = 0.333333333333333315 * x170
    x200 = x139 * x199
    x201 = x147 * x178
    x202 = x126 * x137
    x203 = x107 * x62
    x204 = x177 * x62
    x205 = x114 * x139
    x206 = x104 * x147
    x207 = x102 * x159
    x208 = x133**2
    x209 = x208 * x69
    x210 = x209 + x82
    x211 = x165 * x210
    x212 = x171 * x210
    x213 = x133 * x139
    x214 = x145 + x213
    x215 = x171 * x71
    x216 = x215 * x26
    x217 = x54 * x74
    x218 = x178 * x214
    x219 = x133 * x147
    x220 = x157 + x219
    x221 = x220 * x54
    x222 = x210 * x87
    x223 = x214 * x62
    x224 = x171 * x74
    x225 = x220 * x92
    x226 = 2.0 * x1 * (2.0 * x145 + x146 + x213)
    x227 = x220 * x60
    x228 = x226 + x227
    x229 = x228 * x71
    x230 = x164 * x98
    x231 = x73 * x98
    x232 = 2.0 * x231
    x233 = x230 + x232
    x234 = x19 + x31
    x235 = x69 * x99
    x236 = x122 + x163
    x237 = x1 * (x121 + x236)
    x238 = x168 * x98
    x239 = x237 + x238
    x240 = x107 * x24
    x241 = x240 * x90
    x242 = x176 * x98
    x243 = x182 + x242
    x244 = x108 * x22
    x245 = x119 * x22
    x246 = x22 * x233
    x247 = x4 * x99
    x248 = 3.0 * x175
    x249 = x1 * (5.0 * x124 + 2.0 * x125 + x248) + x184 * x98
    x250 = 3.14159265358979324 * x2 * x7
    x251 = x250 * x36
    x252 = x249 * x251
    x253 = x251 * x4
    x254 = x109 * x253
    x255 = x233 * x99
    x256 = x12 * x95
    x257 = x137 * x234
    x258 = x107 * x164
    x259 = x194 * x24
    x260 = x164 * x177 * x24
    x261 = x194 * x22
    x262 = x200 * x22
    x263 = x147 * x22
    x264 = x164 * x177
    x265 = x191 * x253
    x266 = x12 * x176
    x267 = x12 * x177
    x268 = x147 * x267
    x269 = x12 * x159
    x270 = x107 * x210
    x271 = x104 * x24
    x272 = x177 * x210
    x273 = x102 * x177
    x274 = x214 * x24
    x275 = x114 * x22
    x276 = x199 * x22
    x277 = x214 * x276
    x278 = x22 * x220
    x279 = x214 * x267
    x280 = x104 * x220
    x281 = x228 * x98
    x282 = x38 * x7
    x283 = x107 * x282
    x284 = x283 * x4
    x285 = x133 * x210
    x286 = x133 * x82
    x287 = 2.0 * x286
    x288 = x285 + x287
    x289 = x288 * x99
    x290 = x234 * x71
    x291 = x240 * x288
    x292 = x155 + x209
    x293 = x1 * (x154 + x292)
    x294 = x133 * x214
    x295 = x293 + x294
    x296 = x24 * x295
    x297 = x22 * x288
    x298 = x118 * x295
    x299 = x22 * x298
    x300 = x133 * x220
    x301 = x226 + x300
    x302 = x22 * x301
    x303 = x12 * x289
    x304 = x12 * x295
    x305 = x301 * x46
    x306 = 3.0 * x219
    x307 = x1 * (5.0 * x157 + 2.0 * x158 + x306) + x133 * x228
    x308 = x282 * x307
    x309 = x15 + x16
    x310 = x1 * x20
    x311 = 2.0 * x310
    x312 = x309 * x5 + x311
    x313 = x1 * (x122 + 3.0 * x163) + x233 * x98
    x314 = x1 * (3.0 * x112 + 3.0 * x167 + x233) + x239 * x98
    x315 = x314 * x69
    x316 = x309 * x48
    x317 = x313 * x90
    x318 = x1 * (3.0 * x124 + 2.0 * x237 + 2.0 * x238 + x248) + x243 * x98
    x319 = x251 * x318
    x320 = x48 * x5
    x321 = x251 * x5
    x322 = x314 * x321
    x323 = x60 * x79
    x324 = 3.0 * x1 * (2.0 * x182 + x183 + x242) + x249 * x98
    x325 = x251 * x43
    x326 = x11 * x96
    x327 = x137 * x312
    x328 = x107 * x309
    x329 = x137 * x239
    x330 = x139 * x233
    x331 = x191 * x321
    x332 = x20 * x239
    x333 = x107 * x20
    x334 = x147 * x333
    x335 = x11 * x243
    x336 = x107 * x11
    x337 = x147 * x336
    x338 = x159 * x233
    x339 = x11 * x99
    x340 = x164 * x312
    x341 = x168 * x309
    x342 = x164 * x214
    x343 = x171 * x309
    x344 = x168 * x177
    x345 = x20 * x214
    x346 = x20 * x220
    x347 = x11 * x171
    x348 = x214 * x347
    x349 = x168 * x220
    x350 = x11 * x228
    x351 = x289 * x312
    x352 = x104 * x288
    x353 = x102 * x295
    x354 = x288 * x333
    x355 = x20 * x298
    x356 = x301 * x98
    x357 = x283 * x5
    x358 = x11 * x289
    x359 = x114 * x295
    x360 = x104 * x301
    x361 = x1 * (x155 + 3.0 * x209) + x133 * x288
    x362 = x312 * x361
    x363 = x43 * x71
    x364 = x361 * x92
    x365 = x1 * (3.0 * x145 + 3.0 * x213 + x288) + x133 * x295
    x366 = x365 * x71
    x367 = x20 * x361
    x368 = x365 * x46
    x369 = x282 * x368
    x370 = x5 * x79
    x371 = x1 * (3.0 * x157 + 2.0 * x293 + 2.0 * x294 + x306) + x133 * x301
    x372 = x282 * x371
    x373 = x361 * x87
    x374 = x11 * x43
    x375 = x11 * x365
    x376 = 3.0 * x1 * (2.0 * x226 + x227 + x300) + x133 * x307
    x377 = x282 * x43
    x378 = x1 * x57
    x379 = x378 * x39 * x48
    x380 = x1 * x68
    x381 = x41 * x47
    x382 = 0.0190476190476190493 * x381
    x383 = x382 * x77
    x384 = x1 * x76
    x385 = x384 * x39
    x386 = x1 * x72
    x387 = x1 * x123 + 2.0 * x386
    x388 = x1 * x60
    x389 = x383 * x388 * x88
    x390 = x73 * x88
    x391 = x1 * x34
    x392 = x39 * x391 * x99
    x393 = x231 + x85
    x394 = x1 * x56
    x395 = x394 * x60
    x396 = x107 * x39
    x397 = x1 * (x103 + x122)
    x398 = x393 * x46
    x399 = x397 + x398
    x400 = x393 * x67
    x401 = x67 * x73
    x402 = x1 * (x114 + x232 + 4.0 * x85)
    x403 = x399 * x46
    x404 = x402 + x403
    x405 = x404 * x69
    x406 = x399 * x90
    x407 = x393 * x66
    x408 = x73 * x95
    x409 = x133 * x394
    x410 = x1 * x133
    x411 = 0.133333333333333331 * x106
    x412 = x410 * x411
    x413 = x137 * x387
    x414 = x66 * x85
    x415 = x147 * x73
    x416 = 0.0444444444444444461 * x117
    x417 = x1 * x192
    x418 = x393 * x98
    x419 = x397 + x418
    x420 = x110 * x388
    x421 = 0.22222222222222221 * x170
    x422 = x26 * x421
    x423 = x399 * x98
    x424 = x402 + x423
    x425 = x231 * x54
    x426 = x421 * x83
    x427 = 2.0 * x418
    x428 = 4.0 * x397
    x429 = 2.0 * x398 + x428
    x430 = x1 * (x176 + x427 + x429)
    x431 = x424 * x46
    x432 = x430 + x431
    x433 = x419 * x62
    x434 = x416 * x62
    x435 = x33 * x410
    x436 = x26 * x393
    x437 = x26 * x73
    x438 = x393 * x54
    x439 = x139 * x399
    x440 = x147 * x393
    x441 = x54 * x85
    x442 = x210 * x421
    x443 = x210 * x387
    x444 = x1 * x236
    x445 = x162 * x73
    x446 = x444 + 2.0 * x445
    x447 = x1 * (x168 + 4.0 * x231 + x86)
    x448 = x419 * x98
    x449 = x447 + x448
    x450 = x424 * x98
    x451 = x430 + x450
    x452 = x22 * x446
    x453 = 3.0 * x423
    x454 = x1 * (x184 + 5.0 * x402 + 2.0 * x403 + x453)
    x455 = x432 * x98
    x456 = x454 + x455
    x457 = x251 * x456
    x458 = x446 * x99
    x459 = x110 * x234 * x412
    x460 = x231 * x24
    x461 = 0.66666666666666663 * x41
    x462 = x12 * x424
    x463 = x1 * x282
    x464 = x463 * x98
    x465 = x4 * x411
    x466 = x159 * x464 * x465
    x467 = x234 * x73
    x468 = x24 * x393
    x469 = x177 * x73
    x470 = x22 * x399
    x471 = x220 * x393
    x472 = x1 * x284
    x473 = x46 * x463
    x474 = x1 * (x230 + 8.0 * x231) + x446 * x98
    x475 = 3.0 * x397
    x476 = x1 * (x239 + 3.0 * x418 + x446 + x475) + x449 * x98
    x477 = 2.0 * x447 + 2.0 * x448
    x478 = x251 * (x1 * (x243 + 3.0 * x402 + x453 + x477) + x451 * x98)
    x479 = x321 * x476
    x480 = x139 * x446
    x481 = x20 * x449
    x482 = x11 * x451
    x483 = x231 * x312
    x484 = x309 * x419
    x485 = x214 * x309
    x486 = x220 * x421
    x487 = x464 * x5
    x488 = x416 * x463
    x489 = x288 * x393
    x490 = x295 * x73
    x491 = x1 * x308 * x99
    x492 = x382 * x5
    x493 = x361 * x473 * x492
    x494 = x365 * x463
    x495 = x1 * x382
    x496 = x1 * x372 * x48
    x497 = x1 * x81
    x498 = x1 * x156 + 2.0 * x497
    x499 = x114 * x82
    x500 = x411 * x93
    x501 = x102 * x498
    x502 = x286 + x93
    x503 = x107 * x502
    x504 = x118 * x502
    x505 = x138 + x155
    x506 = x1 * x505
    x507 = x502 * x60
    x508 = x506 + x507
    x509 = x82 * x87
    x510 = x508 * x92
    x511 = x1 * (x147 + x287 + 4.0 * x93)
    x512 = x508 * x60
    x513 = x511 + x512
    x514 = x513 * x71
    x515 = x178 * x82
    x516 = x421 * x93
    x517 = x164 * x498
    x518 = x177 * x82
    x519 = x177 * x502
    x520 = x102 * x508
    x521 = x114 * x502
    x522 = x104 * x508
    x523 = x410 * x77
    x524 = x133 * x502
    x525 = x506 + x524
    x526 = x286 * x421
    x527 = x525 * x92
    x528 = x133 * x508
    x529 = x511 + x528
    x530 = x525 * x62
    x531 = 2.0 * x524
    x532 = 4.0 * x506
    x533 = 2.0 * x507 + x532
    x534 = x1 * (x220 + x531 + x533)
    x535 = x529 * x60
    x536 = x534 + x535
    x537 = x24 * x82
    x538 = x107 * x233
    x539 = x22 * x82
    x540 = x1 * x253
    x541 = x107 * x540
    x542 = x253 * x388
    x543 = x12 * x498
    x544 = x168 * x502
    x545 = x22 * x508
    x546 = x168 * x508
    x547 = x286 * x461
    x548 = x24 * x525
    x549 = x104 * x525
    x550 = x22 * x529
    x551 = x126 * x253 * x412
    x552 = x114 * x525
    x553 = x104 * x529
    x554 = x536 * x98
    x555 = x1 * x292
    x556 = x208 * x82
    x557 = x555 + 2.0 * x556
    x558 = x557 * x99
    x559 = x557 * x92
    x560 = x1 * (x214 + 4.0 * x286 + x94)
    x561 = x133 * x525
    x562 = x560 + x561
    x563 = x22 * x557
    x564 = x118 * x562
    x565 = x133 * x529
    x566 = x534 + x565
    x567 = x46 * x566
    x568 = 3.0 * x528
    x569 = x1 * (x228 + 5.0 * x511 + 2.0 * x512 + x568)
    x570 = x133 * x536
    x571 = x569 + x570
    x572 = x282 * x571
    x573 = x1 * x79
    x574 = x321 * x388
    x575 = x313 * x382 * x574
    x576 = x1 * x251 * x318 * x48
    x577 = x251 * x314 * x388
    x578 = x312 * x82
    x579 = x239 * x82
    x580 = x233 * x502
    x581 = x1 * x321
    x582 = x233 * x508
    x583 = x1 * x249 * x251 * x99
    x584 = x164 * x525
    x585 = x176 * x421
    x586 = x321 * x410
    x587 = x20 * x525
    x588 = x184 * x251 * x410
    x589 = x104 * x557
    x590 = x566 * x98
    x591 = x1 * (x285 + 8.0 * x286) + x133 * x557
    x592 = 3.0 * x506
    x593 = x1 * (x295 + 3.0 * x524 + x557 + x592) + x133 * x562
    x594 = x46 * x593
    x595 = 2.0 * x560 + 2.0 * x561
    x596 = x282 * (x1 * (x301 + 3.0 * x511 + x568 + x595) + x133 * x566)
    x597 = x1 * (x24 + 4.0 * x310 + x65)
    x598 = x13 + x17
    x599 = x1 * x598
    x600 = x310 + x64
    x601 = x5 * x600
    x602 = x599 + x601
    x603 = x4 * x602
    x604 = x597 + x603
    x605 = x4 * x604
    x606 = x5 * x604
    x607 = x4 * x600
    x608 = 2.0 * x607
    x609 = 4.0 * x599
    x610 = 2.0 * x601 + x609
    x611 = x1 * (x26 + x608 + x610)
    x612 = x5 * x602
    x613 = 3.0 * x603
    x614 = x1 * (x33 + 5.0 * x597 + 2.0 * x612 + x613)
    x615 = x606 + x611
    x616 = x4 * x615
    x617 = x614 + x616
    x618 = x1 * (x311 + x54 + 4.0 * x64)
    x619 = x599 + x607
    x620 = x4 * x619
    x621 = 2.0 * x618 + 2.0 * x620
    x622 = x605 + x611
    x623 = x39 * (x1 * (x56 + 3.0 * x597 + x613 + x621) + x4 * x622)
    x624 = 3.0 * x599
    x625 = x1 * x52
    x626 = x16 * x50
    x627 = x625 + 2.0 * x626
    x628 = x618 + x620
    x629 = x1 * (3.0 * x607 + x624 + x627 + x67) + x4 * x628
    x630 = x1 * (x63 + 8.0 * x64) + x4 * x627
    x631 = x630 * x71
    x632 = x39 * x617
    x633 = x104 * x628
    x634 = x627 * x99
    x635 = x107 * x627
    x636 = x104 * x83
    x637 = x622 * x71
    x638 = x628 * x92
    x639 = x619 * x90
    x640 = x164 * x619
    x641 = x168 * x64
    x642 = x416 * x64
    x643 = x110 * x615
    x644 = x104 * x604
    x645 = x102 * x604
    x646 = x114 * x619
    x647 = x104 * x619
    x648 = x147 * x619
    x649 = x461 * x64
    x650 = x619 * x74
    x651 = x177 * x214
    x652 = x214 * x74
    x653 = x4 * x473
    x654 = x597 + x612
    x655 = x602 * x90
    x656 = x233 * x600
    x657 = x107 * x251
    x658 = x16 * x239
    x659 = x16 * x95
    x660 = x168 * x602
    x661 = x139 * x602
    x662 = x176 * x600
    x663 = x147 * x600
    x664 = x16 * x176
    x665 = x16 * x344
    x666 = x159 * x164
    x667 = x104 * x602
    x668 = x214 * x602
    x669 = x114 * x600
    x670 = x214 * x600
    x671 = x220 * x600
    x672 = x126 * x16
    x673 = x114 * x16
    x674 = x1 * x283
    x675 = x654 * x71
    x676 = x107 * x288
    x677 = x288 * x600
    x678 = x600 * x92
    x679 = x16 * x87
    x680 = x16 * x295
    x681 = x1 * x15
    x682 = x1 * x18 + 2.0 * x681
    x683 = x16 * x313
    x684 = x137 * x682
    x685 = x310 * x411
    x686 = x147 * x16
    x687 = x164 * x682
    x688 = x168 * x310
    x689 = x102 * x682
    x690 = x104 * x16
    x691 = 0.0164957219768464523 * x41
    x692 = x47 * x691
    x693 = x1 * x692
    x694 = x623 * x693
    x695 = 0.0329914439536929047 * x381
    x696 = x1 * x77
    x697 = x629 * x696
    x698 = x691 * x78
    x699 = x388 * x39
    x700 = x629 * x699
    x701 = x40 * x691
    x702 = x69 * x701
    x703 = x388 * x630 * x695 * x77
    x704 = x692 * x83
    x705 = 0.115470053837925149 * x41
    x706 = x1 * x705
    x707 = x632 * x706
    x708 = 0.115470053837925149 * x106
    x709 = x69 * x708
    x710 = x622 * x708
    x711 = 0.115470053837925149 * x117
    x712 = x628 * x711
    x713 = x708 * x83
    x714 = x627 * x705
    x715 = x627 * x708
    x716 = x39 * x410
    x717 = 0.230940107675850298 * x106
    x718 = x628 * x717
    x719 = x139 * x73
    x720 = x717 * x85
    x721 = 0.0769800358919500993 * x117
    x722 = x1 * x643
    x723 = 0.192450089729875234 * x170
    x724 = x69 * x723
    x725 = 0.384900179459750469 * x170
    x726 = x604 * x725
    x727 = 0.577350269189625731 * x41
    x728 = x419 * x727
    x729 = x725 * x83
    x730 = x432 * x540
    x731 = x424 * x725
    x732 = x0 ** (-2.0)
    x733 = x282 * x732
    x734 = x4 * x733
    x735 = 0.153960071783900199 * x117
    x736 = x615 * x716
    x737 = x604 * x727
    x738 = x619 * x727
    x739 = 0.577350269189625731 * x170
    x740 = x139 * x739
    x741 = x727 * x73
    x742 = x410 * x717
    x743 = x253 * x404 * x742
    x744 = 1.15470053837925146 * x41
    x745 = x64 * x744
    x746 = x159 * x717
    x747 = x210 * x73
    x748 = x604 * x723
    x749 = x210 * x725
    x750 = x64 * x721
    x751 = 0.769800358919500938 * x170
    x752 = x214 * x751
    x753 = x220 * x725
    x754 = x446 * x705
    x755 = x446 * x708
    x756 = x600 * x711
    x757 = x457 * x706
    x758 = x251 * x708
    x759 = x451 * x758
    x760 = x110 * x654 * x742
    x761 = x231 * x744
    x762 = x424 * x727
    x763 = x410 * x432
    x764 = x139 * x16
    x765 = x16 * x728
    x766 = x733 * x98
    x767 = x654 * x708
    x768 = x210 * x727
    x769 = x393 * x739
    x770 = x16 * x210
    x771 = x404 * x708
    x772 = x16 * x727
    x773 = x708 * x733
    x774 = x288 * x708
    x775 = x288 * x705
    x776 = x46 * x733
    x777 = x295 * x717
    x778 = x301 * x773
    x779 = x1 * x479
    x780 = x474 * x574 * x695
    x781 = x478 * x693
    x782 = x251 * x388 * x476
    x783 = x449 * x717
    x784 = x310 * x717
    x785 = x449 * x711
    x786 = x231 * x721
    x787 = x424 * x723
    x788 = x5 * x733
    x789 = x393 * x711
    x790 = x361 * x695
    x791 = x39 * x732
    x792 = x46 * x791
    x793 = x695 * x88
    x794 = x60 * x791
    x795 = x708 * x791
    x796 = x56 * x795
    x797 = x711 * x82
    x798 = x67 * x717
    x799 = x66 * x708
    x800 = x717 * x93
    x801 = x66 * x705
    x802 = x502 * x711
    x803 = x791 * x98
    x804 = x26 * x725
    x805 = x54 * x82
    x806 = x54 * x751
    x807 = x62 * x82
    x808 = x725 * x93
    x809 = x727 * x82
    x810 = x502 * x727
    x811 = x399 * x727
    x812 = x502 * x739
    x813 = x54 * x741
    x814 = x62 * x727
    x815 = x62 * x73
    x816 = x513 * x708
    x817 = x133 * x791
    x818 = x286 * x721
    x819 = x529 * x723
    x820 = x451 * x708
    x821 = x234 * x717
    x822 = x4 * x464 * x513 * x717
    x823 = x286 * x744
    x824 = x529 * x727
    x825 = x463 * x708
    x826 = x4 * x825
    x827 = x557 * x708
    x828 = x562 * x73
    x829 = x557 * x705
    x830 = x562 * x717
    x831 = x309 * x692
    x832 = x11 * x701
    x833 = x309 * x708
    x834 = x502 * x708
    x835 = x11 * x708
    x836 = x133 * x735
    x837 = x286 * x725
    x838 = x231 * x309
    x839 = x525 * x725
    x840 = x529 * x725
    x841 = x11 * x723
    x842 = x463 * x721
    x843 = x572 * x706
    x844 = x463 * x695
    x845 = x46 * x5 * x591 * x844
    x846 = x463 * x698
    x847 = x5 * x593
    x848 = x596 * x693
    x849 = 0.5 * x36
    x850 = 3.0 * x732
    x851 = x11 * x850
    x852 = x681 + x851
    x853 = x1 * (x610 + x852)
    x854 = 3.0 * x1 * (x310 + x64)
    x855 = x5 * x599
    x856 = x854 + x855
    x857 = x4 * x856
    x858 = x853 + x857
    x859 = x4 * x858
    x860 = x5 * x858
    x861 = x4 * x599
    x862 = 2.0 * x1 * (x597 + x603 + 2.0 * x854 + x855 + x861)
    x863 = x5 * x856
    x864 = 2.0 * x611 + 3.0 * x857
    x865 = x860 + x862
    x866 = x1 * (2.0 * x606 + 5.0 * x853 + 2.0 * x863 + x864) + x4 * x865
    x867 = x38 * (
        x1 * (2.0 * x614 + 2.0 * x616 + 3.0 * x859 + 3.0 * x860 + 6.0 * x862) + x4 * x866
    )
    x868 = 0.00952380952380952381 * x41
    x869 = x40 * x868
    x870 = x626 + x851
    x871 = x1 * (x608 + x609 + x870)
    x872 = x854 + x861
    x873 = x4 * x872
    x874 = x859 + x862
    x875 = x1 * (2.0 * x605 + 3.0 * x853 + x864 + 2.0 * x871 + 2.0 * x873) + x4 * x874
    x876 = x38 * x849
    x877 = x875 * x876
    x878 = x47 * x868
    x879 = x71 * x850
    x880 = x386 + x879
    x881 = 0.5 * x880
    x882 = 0.5 * x69
    x883 = 6.0 * x732
    x884 = x12 * x883 + x4 * x870
    x885 = x871 + x873
    x886 = x1 * (x4 * x624 + x621 + 3.0 * x854 + x884) + x4 * x885
    x887 = x46 * x876
    x888 = x60 * x886
    x889 = x78 * x868
    x890 = 0.5 * x83
    x891 = x71 * x886
    x892 = x69 * x850
    x893 = x497 + x892
    x894 = x68 * x73
    x895 = x46 * x880 + x883 * x92
    x896 = x88 * x895
    x897 = 9.0 * x732
    x898 = x1 * (x11 * x897 + 2.0 * x625 + 7.0 * x626) + x4 * x884
    x899 = 0.5 * x90
    x900 = x898 * x92
    x901 = x85 * x88
    x902 = 0.5 * x95
    x903 = x71 * x898
    x904 = x60 * x893 + x883 * x90
    x905 = x866 * x876
    x906 = 0.0666666666666666667 * x41
    x907 = x104 * x874
    x908 = x397 * x56
    x909 = x105 * x906
    x910 = x874 * x98
    x911 = x1 * x122 * (x46 + x98)
    x912 = x397 * x46
    x913 = x911 + x912
    x914 = x67 * x913
    x915 = x104 * x885
    x916 = x397 * x67
    x917 = x116 * x906
    x918 = x102 * x885
    x919 = x231 * x67
    x920 = 0.5 * x884
    x921 = x1 * (x429 + x880)
    x922 = x46 * x913
    x923 = x921 + x922
    x924 = x66 * x923
    x925 = x66 * x913
    x926 = x397 * x66
    x927 = x231 * x66
    x928 = x133 * x874
    x929 = 0.5 * x139
    x930 = x71 * x874
    x931 = x56 * x73
    x932 = 0.5 * x137
    x933 = x885 * x92
    x934 = x67 * x85
    x935 = 0.5 * x147
    x936 = x71 * x885
    x937 = x1 * x155 * (x133 + x60)
    x938 = x506 * x60
    x939 = x937 + x938
    x940 = x66 * x895
    x941 = x66 * x880
    x942 = x1 * (x533 + x893)
    x943 = x60 * x939
    x944 = x942 + x943
    x945 = 0.5 * x73
    x946 = x159 * x66
    x947 = x445 + x879
    x948 = 0.5 * x947
    x949 = 0.0222222222222222222 * x117
    x950 = x397 * x98
    x951 = x911 + x950
    x952 = x26 * x951
    x953 = 0.111111111111111111 * x170
    x954 = x913 * x98
    x955 = x921 + x954
    x956 = x54 * x955
    x957 = x54 * x951
    x958 = 0.333333333333333333 * x41
    x959 = x54 * x947
    x960 = 0.5 * x870
    x961 = 2.0 * x1 * (x402 + x423 + 2.0 * x911 + x912 + x950)
    x962 = x46 * x955
    x963 = x961 + x962
    x964 = x62 * x963
    x965 = x62 * x955
    x966 = x168 * x870
    x967 = x62 * x951
    x968 = x62 * x947
    x969 = x133 * x865
    x970 = x104 * x858
    x971 = x26 * x397
    x972 = x102 * x858
    x973 = x231 * x26
    x974 = x54 * x913
    x975 = x104 * x872
    x976 = x397 * x54
    x977 = x169 * x958
    x978 = x102 * x872
    x979 = x62 * x923
    x980 = x114 * x870
    x981 = x62 * x913
    x982 = x397 * x62
    x983 = 0.5 * x62
    x984 = x159 * x231
    x985 = 0.5 * x210
    x986 = x71 * x865
    x987 = x556 + x892
    x988 = x33 * x73
    x989 = x858 * x92
    x990 = x26 * x85
    x991 = 0.5 * x214
    x992 = x71 * x858
    x993 = x133 * x506
    x994 = x937 + x993
    x995 = x54 * x880
    x996 = x872 * x92
    x997 = 0.5 * x71
    x998 = x220 * x872
    x999 = x133 * x939
    x1000 = x942 + x999
    x1001 = x62 * x895
    x1002 = x220 * x85
    x1003 = 2.0 * x1 * (x511 + x528 + 2.0 * x937 + x938 + x993)
    x1004 = x1000 * x60
    x1005 = x1003 + x1004
    x1006 = x228 * x62
    x1007 = x102 * x883 + x947 * x98
    x1008 = x1007 * x234
    x1009 = x853 + x863
    x1010 = x1009 * x233
    x1011 = x1 * (x427 + x428 + x947)
    x1012 = x951 * x98
    x1013 = x1011 + x1012
    x1014 = x1013 * x24
    x1015 = x239 * x856
    x1016 = x1007 * x24
    x1017 = x233 * x856
    x1018 = x955 * x98
    x1019 = x1018 + x961
    x1020 = x1019 * x22
    x1021 = x1013 * x22
    x1022 = x1007 * x22
    x1023 = 2.0 * x430 + 3.0 * x954
    x1024 = x1 * (x1023 + 2.0 * x431 + 5.0 * x921 + 2.0 * x922) + x963 * x98
    x1025 = x250 * x849
    x1026 = x1024 * x1025
    x1027 = x1025 * x4
    x1028 = x1019 * x60
    x1029 = x1013 * x12
    x1030 = x1007 * x12
    x1031 = x24 * x951
    x1032 = x168 * x856
    x1033 = x24 * x947
    x1034 = x22 * x955
    x1035 = x22 * x951
    x1036 = x133 * x963
    x1037 = x12 * x955
    x1038 = x12 * x951
    x1039 = 0.5 * x64
    x1040 = x1009 * x102
    x1041 = x231 * x234
    x1042 = x104 * x856
    x1043 = x24 * x397
    x1044 = x102 * x856
    x1045 = x22 * x913
    x1046 = x22 * x397
    x1047 = 0.5 * x220
    x1048 = x22 * x231
    x1049 = x12 * x923
    x1050 = x12 * x913
    x1051 = x12 * x397
    x1052 = 1.0 * x282
    x1053 = x1052 * x4
    x1054 = x1 * x1052
    x1055 = x1054 * x4
    x1056 = 0.5 * x288
    x1057 = x1009 * x71
    x1058 = x133 * x987 + x137 * x883
    x1059 = x856 * x92
    x1060 = x24 * x85
    x1061 = x295 * x856
    x1062 = x1 * (x531 + x532 + x987)
    x1063 = x133 * x994
    x1064 = x1062 + x1063
    x1065 = 0.5 * x295
    x1066 = x22 * x85
    x1067 = x1000 * x133
    x1068 = x1003 + x1067
    x1069 = x12 * x895
    x1070 = 2.0 * x534 + 3.0 * x999
    x1071 = x1 * (x1070 + 2.0 * x535 + 5.0 * x942 + 2.0 * x943) + x1005 * x133
    x1072 = x1052 * x1071
    x1073 = x1054 * x307
    x1074 = x20 * x883 + x5 * x852
    x1075 = x1074 * x313
    x1076 = x1 * (2.0 * x444 + 7.0 * x445 + x71 * x897) + x1007 * x98
    x1077 = x1076 * x312
    x1078 = 0.5 * x852
    x1079 = x1 * (x1007 + x475 * x98 + x477 + 3.0 * x911) + x1013 * x98
    x1080 = x1079 * x309
    x1081 = x1076 * x309
    x1082 = (
        x1 * (2.0 * x1011 + 2.0 * x1012 + x1023 + 2.0 * x450 + 3.0 * x921) + x1019 * x98
    )
    x1083 = x1025 * x1082
    x1084 = x1025 * x5
    x1085 = x1079 * x60
    x1086 = x1076 * x20
    x1087 = x250 * (
        x1 * (3.0 * x1018 + 2.0 * x454 + 2.0 * x455 + 6.0 * x961 + 3.0 * x962)
        + x1024 * x98
    )
    x1088 = x1079 * x11
    x1089 = x1076 * x11
    x1090 = x1074 * x233
    x1091 = x1007 * x312
    x1092 = x1013 * x309
    x1093 = x233 * x852
    x1094 = x1007 * x309
    x1095 = x1019 * x133
    x1096 = x1013 * x20
    x1097 = x1007 * x20
    x1098 = x1019 * x11
    x1099 = x1013 * x11
    x1100 = 0.5 * x11
    x1101 = x1007 * x159
    x1102 = 0.5 * x16
    x1103 = x312 * x947
    x1104 = x168 * x852
    x1105 = x309 * x951
    x1106 = x20 * x955
    x1107 = x20 * x951
    x1108 = x11 * x963
    x1109 = x11 * x955
    x1110 = x220 * x951
    x1111 = x102 * x1074
    x1112 = x309 * x397
    x1113 = x20 * x913
    x1114 = x104 * x310
    x1115 = x20 * x397
    x1116 = x1052 * x5
    x1117 = x1054 * x5
    x1118 = x11 * x923
    x1119 = x295 * x913
    x1120 = x301 * x397
    x1121 = x1074 * x361
    x1122 = x1 * (2.0 * x555 + 7.0 * x556 + x69 * x897) + x1058 * x133
    x1123 = 0.5 * x361
    x1124 = x309 * x85
    x1125 = x1 * (x1058 + x133 * x592 + x595 + 3.0 * x937) + x1064 * x133
    x1126 = x309 * x365
    x1127 = x1052 * (
        x1 * (2.0 * x1062 + 2.0 * x1063 + x1070 + 2.0 * x565 + 3.0 * x942) + x1068 * x133
    )
    x1128 = x1054 * x371
    x1129 = x361 * x895
    x1130 = x692 * x74
    x1131 = x708 * x74
    x1132 = x708 * x71
    x1133 = x164 * x82
    x1134 = x251 * x732
    x1135 = x1134 * x4
    x1136 = x176 * x725
    x1137 = x168 * x751
    x1138 = x126 * x717
    x1139 = x71 * x723
    x1140 = x602 * x708
    x1141 = x1134 * x708
    x1142 = x1141 * x243
    x1143 = x1134 * x60
    x1144 = x239 * x717
    x1145 = x233 * x705
    x1146 = x164 * x727
    x1147 = x600 * x739
    x1148 = x16 * x164
    x1149 = x1134 * x133
    x1150 = x562 * x711
    x1151 = x313 * x695
    x1152 = x1134 * x5
    x1153 = 0.866025403784438597 * x36
    x1154 = x1153 * x38
    x1155 = x1154 * x875
    x1156 = x1154 * x378
    x1157 = 0.866025403784438597 * x880
    x1158 = x1154 * x46
    x1159 = 0.866025403784438597 * x83
    x1160 = 0.866025403784438597 * x69
    x1161 = 0.866025403784438597 * x95
    x1162 = x1154 * x866
    x1163 = x1154 * x98
    x1164 = 0.866025403784438597 * x90
    x1165 = 0.866025403784438597 * x884
    x1166 = 0.866025403784438597 * x139
    x1167 = 0.866025403784438597 * x147
    x1168 = 0.866025403784438597 * x137
    x1169 = 0.866025403784438597 * x73
    x1170 = 0.866025403784438597 * x947
    x1171 = 0.866025403784438597 * x870
    x1172 = 0.866025403784438597 * x62
    x1173 = 0.866025403784438597 * x210
    x1174 = 0.866025403784438597 * x214
    x1175 = 0.866025403784438597 * x71
    x1176 = x1153 * x250
    x1177 = x1024 * x1176
    x1178 = x1176 * x4
    x1179 = 0.866025403784438597 * x220
    x1180 = 0.866025403784438597 * x288
    x1181 = 0.866025403784438597 * x295
    x1182 = 0.866025403784438597 * x852
    x1183 = x1082 * x1176
    x1184 = x1176 * x5
    x1185 = 0.866025403784438597 * x11

    # 1350 item(s)
    result[0] = x35 * x44
    result[1] = x49 * x58
    result[2] = x58 * x61
    result[3] = x70 * x75
    result[4] = x76 * x80
    result[5] = x68 * x71 * x84
    result[6] = x87 * x88 * x89
    result[7] = x75 * x91
    result[8] = x84 * x88 * x92
    result[9] = x96 * x97
    result[10] = x100 * x101
    result[11] = x104 * x108 * x56
    result[12] = x111 * x56
    result[13] = x108 * x114 * x67
    result[14] = x115 * x119
    result[15] = x102 * x120 * x67
    result[16] = x127 * x128
    result[17] = x129 * x130
    result[18] = x120 * x131
    result[19] = x128 * x132
    result[20] = x101 * x134
    result[21] = x133 * x135 * x56
    result[22] = x136 * x140
    result[23] = x141 * x142
    result[24] = x143 * x144
    result[25] = x147 * x149
    result[26] = x128 * x150
    result[27] = x152 * x66
    result[28] = x130 * x153
    result[29] = x128 * x160
    result[30] = x161 * x166
    result[31] = x168 * x172 * x26
    result[32] = x173 * x174
    result[33] = x172 * x176 * x54
    result[34] = x168 * x179
    result[35] = x180 * x181
    result[36] = x185 * x186
    result[37] = x187 * x188
    result[38] = x181 * x189
    result[39] = x186 * x190
    result[40] = x191 * x192
    result[41] = x193 * x194
    result[42] = x195 * x196
    result[43] = x114 * x197
    result[44] = x198 * x200
    result[45] = x102 * x201
    result[46] = x202 * x203
    result[47] = x204 * x205
    result[48] = x204 * x206
    result[49] = x203 * x207
    result[50] = x211 * x33 * x71
    result[51] = x212 * x26 * x92
    result[52] = x214 * x216
    result[53] = x212 * x217
    result[54] = x218 * x92
    result[55] = x215 * x221
    result[56] = x186 * x222
    result[57] = x223 * x224
    result[58] = x188 * x225
    result[59] = x186 * x229
    result[60] = x233 * x234 * x235
    result[61] = x108 * x239 * x24
    result[62] = x233 * x241
    result[63] = x243 * x244
    result[64] = x239 * x245
    result[65] = x120 * x246
    result[66] = x247 * x252
    result[67] = x243 * x254
    result[68] = x12 * x120 * x239
    result[69] = x255 * x256
    result[70] = x257 * x258
    result[71] = x168 * x259
    result[72] = x139 * x260
    result[73] = x176 * x261
    result[74] = x168 * x262
    result[75] = x263 * x264
    result[76] = x184 * x265
    result[77] = x196 * x266
    result[78] = x168 * x268
    result[79] = x258 * x269
    result[80] = x102 * x234 * x270
    result[81] = x271 * x272
    result[82] = x273 * x274
    result[83] = x272 * x275
    result[84] = x104 * x277
    result[85] = x273 * x278
    result[86] = x12 * x126 * x270
    result[87] = x114 * x279
    result[88] = x267 * x280
    result[89] = x281 * x284
    result[90] = x289 * x290
    result[91] = x291 * x92
    result[92] = x148 * x296
    result[93] = x141 * x297
    result[94] = x299 * x92
    result[95] = x148 * x302
    result[96] = x303 * x87
    result[97] = x141 * x304
    result[98] = x284 * x305
    result[99] = x247 * x308
    result[100] = x312 * x313 * x89
    result[101] = x315 * x316
    result[102] = x316 * x317
    result[103] = x319 * x320
    result[104] = x322 * x323
    result[105] = x20 * x313 * x84
    result[106] = x324 * x325
    result[107] = x319 * x61
    result[108] = x11 * x314 * x84
    result[109] = x313 * x326
    result[110] = x255 * x327
    result[111] = x328 * x329
    result[112] = x328 * x330
    result[113] = x243 * x331
    result[114] = x144 * x332
    result[115] = x233 * x334
    result[116] = x134 * x252
    result[117] = x140 * x335
    result[118] = x239 * x337
    result[119] = x338 * x339
    result[120] = x211 * x340
    result[121] = x212 * x341
    result[122] = x342 * x343
    result[123] = x176 * x20 * x212
    result[124] = x344 * x345
    result[125] = x174 * x346
    result[126] = x11 * x184 * x211
    result[127] = x176 * x348
    result[128] = x347 * x349
    result[129] = x166 * x350
    result[130] = x102 * x351
    result[131] = x328 * x352
    result[132] = x328 * x353
    result[133] = x114 * x354
    result[134] = x104 * x355
    result[135] = x356 * x357
    result[136] = x126 * x358
    result[137] = x336 * x359
    result[138] = x336 * x360
    result[139] = x100 * x308
    result[140] = x362 * x363
    result[141] = x316 * x364
    result[142] = x316 * x366
    result[143] = x367 * x75
    result[144] = x369 * x370
    result[145] = x320 * x372
    result[146] = x373 * x374
    result[147] = x375 * x75
    result[148] = x372 * x49
    result[149] = x376 * x377
    result[150] = 0
    result[151] = x379
    result[152] = 0
    result[153] = x380 * x383
    result[154] = x385 * x79
    result[155] = 0
    result[156] = x387 * x88 * x89
    result[157] = x389
    result[158] = x390 * x84
    result[159] = 0
    result[160] = x392
    result[161] = x108 * x393 * x56
    result[162] = x395 * x396
    result[163] = x108 * x399 * x67
    result[164] = x119 * x400
    result[165] = x120 * x401
    result[166] = x128 * x405
    result[167] = x130 * x406
    result[168] = x120 * x407
    result[169] = x128 * x408
    result[170] = 0
    result[171] = x396 * x409
    result[172] = 0
    result[173] = x412 * x67 * x77
    result[174] = x144 * x401
    result[175] = 0
    result[176] = x128 * x413
    result[177] = x139 * x411 * x414
    result[178] = x130 * x415
    result[179] = 0
    result[180] = x416 * x417
    result[181] = x172 * x26 * x419
    result[182] = x420 * x422
    result[183] = x172 * x424 * x54
    result[184] = x179 * x419
    result[185] = x425 * x426
    result[186] = x186 * x432 * x69
    result[187] = x188 * x424 * x90
    result[188] = x181 * x433
    result[189] = x231 * x434 * x95
    result[190] = x396 * x435
    result[191] = x194 * x436
    result[192] = x196 * x437
    result[193] = x197 * x399
    result[194] = x200 * x438
    result[195] = x201 * x73
    result[196] = x137 * x203 * x404
    result[197] = x204 * x439
    result[198] = x204 * x440
    result[199] = x159 * x203 * x73
    result[200] = 0
    result[201] = x212 * x437
    result[202] = 0
    result[203] = x441 * x442
    result[204] = x218 * x73
    result[205] = 0
    result[206] = x186 * x443
    result[207] = x223 * x421 * x85
    result[208] = x188 * x220 * x73
    result[209] = 0
    result[210] = x234 * x235 * x446
    result[211] = x108 * x24 * x449
    result[212] = x241 * x446
    result[213] = x244 * x451
    result[214] = x245 * x449
    result[215] = x120 * x452
    result[216] = x247 * x457
    result[217] = x254 * x451
    result[218] = x12 * x120 * x449
    result[219] = x256 * x458
    result[220] = x459
    result[221] = x259 * x419
    result[222] = x139 * x460 * x461
    result[223] = x261 * x424
    result[224] = x262 * x419
    result[225] = x231 * x263 * x461
    result[226] = x265 * x432
    result[227] = x196 * x462
    result[228] = x268 * x419
    result[229] = x466
    result[230] = x270 * x467
    result[231] = x272 * x468
    result[232] = x274 * x469
    result[233] = x272 * x470
    result[234] = x277 * x393
    result[235] = x278 * x469
    result[236] = x12 * x270 * x404
    result[237] = x279 * x399
    result[238] = x267 * x471
    result[239] = x228 * x472
    result[240] = 0
    result[241] = x291 * x73
    result[242] = 0
    result[243] = x297 * x411 * x85
    result[244] = x299 * x73
    result[245] = 0
    result[246] = x303 * x387
    result[247] = x295 * x465 * x473
    result[248] = x301 * x472
    result[249] = 0
    result[250] = x312 * x474 * x89
    result[251] = x316 * x476 * x69
    result[252] = x316 * x474 * x90
    result[253] = x320 * x478
    result[254] = x323 * x479
    result[255] = x20 * x474 * x84
    result[256] = x325 * (x1 * (x249 + 6.0 * x430 + 3.0 * x431 + 3.0 * x450) + x456 * x98)
    result[257] = x478 * x61
    result[258] = x11 * x476 * x84
    result[259] = x326 * x474
    result[260] = x327 * x458
    result[261] = x137 * x328 * x449
    result[262] = x328 * x480
    result[263] = x331 * x451
    result[264] = x144 * x481
    result[265] = x334 * x446
    result[266] = x134 * x457
    result[267] = x140 * x482
    result[268] = x337 * x449
    result[269] = x159 * x339 * x446
    result[270] = x210 * x416 * x483
    result[271] = x212 * x484
    result[272] = x231 * x421 * x485
    result[273] = x20 * x212 * x424
    result[274] = x177 * x345 * x419
    result[275] = x486 * x487
    result[276] = x11 * x211 * x432
    result[277] = x348 * x424
    result[278] = x220 * x347 * x419
    result[279] = x281 * x488
    result[280] = x351 * x73
    result[281] = x328 * x489
    result[282] = x328 * x490
    result[283] = x354 * x399
    result[284] = x355 * x393
    result[285] = x1 * x301 * x357
    result[286] = x358 * x404
    result[287] = x295 * x336 * x399
    result[288] = x301 * x336 * x393
    result[289] = x491
    result[290] = 0
    result[291] = x316 * x361 * x73
    result[292] = 0
    result[293] = x493
    result[294] = x370 * x494
    result[295] = 0
    result[296] = x361 * x374 * x387
    result[297] = x369 * x495
    result[298] = x496
    result[299] = 0
    result[300] = 0
    result[301] = 0
    result[302] = x379
    result[303] = 0
    result[304] = x380 * x80
    result[305] = x382 * x385
    result[306] = 0
    result[307] = x48 * x74 * x82 * x88
    result[308] = x389
    result[309] = x43 * x498 * x97
    result[310] = 0
    result[311] = 0
    result[312] = x394 * x396 * x98
    result[313] = 0
    result[314] = x115 * x118 * x82
    result[315] = x411 * x420 * x67
    result[316] = 0
    result[317] = x130 * x499
    result[318] = x131 * x500
    result[319] = x128 * x501
    result[320] = x392
    result[321] = x135 * x394
    result[322] = x136 * x503
    result[323] = x141 * x67 * x82
    result[324] = x143 * x504
    result[325] = x149 * x508
    result[326] = x128 * x509
    result[327] = x503 * x66 * x74
    result[328] = x130 * x510
    result[329] = x128 * x514
    result[330] = 0
    result[331] = 0
    result[332] = x164 * x171 * x26 * x82
    result[333] = 0
    result[334] = x168 * x515
    result[335] = x180 * x516
    result[336] = 0
    result[337] = x176 * x188 * x82
    result[338] = x189 * x516
    result[339] = x186 * x517
    result[340] = x107 * x417
    result[341] = x193 * x518
    result[342] = x195 * x519
    result[343] = x114 * x515
    result[344] = x198 * x199 * x502
    result[345] = x178 * x520
    result[346] = x126 * x203 * x82
    result[347] = x204 * x521
    result[348] = x204 * x522
    result[349] = x102 * x203 * x513
    result[350] = x39 * x416 * x435
    result[351] = x422 * x523
    result[352] = x216 * x525
    result[353] = x217 * x526
    result[354] = x178 * x527
    result[355] = x215 * x529 * x54
    result[356] = x286 * x434 * x87
    result[357] = x224 * x530
    result[358] = x188 * x529 * x92
    result[359] = x186 * x536 * x71
    result[360] = 0
    result[361] = 0
    result[362] = x537 * x538
    result[363] = 0
    result[364] = x118 * x239 * x539
    result[365] = x246 * x500
    result[366] = 0
    result[367] = x243 * x541
    result[368] = x239 * x411 * x542
    result[369] = x255 * x543
    result[370] = x107 * x164 * x234 * x82
    result[371] = x344 * x537
    result[372] = x260 * x502
    result[373] = x176 * x22 * x518
    result[374] = x276 * x544
    result[375] = x264 * x545
    result[376] = x184 * x541
    result[377] = x266 * x519
    result[378] = x267 * x546
    result[379] = x12 * x258 * x513
    result[380] = x459
    result[381] = x271 * x547
    result[382] = x273 * x548
    result[383] = x275 * x547
    result[384] = x276 * x549
    result[385] = x273 * x550
    result[386] = x551
    result[387] = x267 * x552
    result[388] = x267 * x553
    result[389] = x284 * x554
    result[390] = x290 * x558
    result[391] = x240 * x559
    result[392] = x148 * x24 * x562
    result[393] = x141 * x563
    result[394] = x22 * x564 * x92
    result[395] = x148 * x22 * x566
    result[396] = x12 * x558 * x87
    result[397] = x12 * x141 * x562
    result[398] = x284 * x567
    result[399] = x247 * x572
    result[400] = 0
    result[401] = 0
    result[402] = x313 * x316 * x82
    result[403] = 0
    result[404] = x322 * x573
    result[405] = x575
    result[406] = 0
    result[407] = x576
    result[408] = x382 * x577
    result[409] = x313 * x374 * x498
    result[410] = x255 * x578
    result[411] = x328 * x579
    result[412] = x328 * x580
    result[413] = x107 * x243 * x581
    result[414] = x332 * x504
    result[415] = x333 * x582
    result[416] = x583
    result[417] = x335 * x503
    result[418] = x239 * x336 * x508
    result[419] = x233 * x339 * x513
    result[420] = x286 * x340 * x416
    result[421] = x341 * x526
    result[422] = x343 * x584
    result[423] = x585 * x586
    result[424] = x344 * x587
    result[425] = x174 * x20 * x529
    result[426] = x416 * x588
    result[427] = x176 * x347 * x525
    result[428] = x168 * x347 * x529
    result[429] = x11 * x166 * x536
    result[430] = x102 * x312 * x558
    result[431] = x328 * x589
    result[432] = x102 * x328 * x562
    result[433] = x114 * x333 * x557
    result[434] = x104 * x20 * x564
    result[435] = x357 * x590
    result[436] = x126 * x339 * x557
    result[437] = x114 * x336 * x562
    result[438] = x104 * x336 * x566
    result[439] = x100 * x572
    result[440] = x312 * x363 * x591
    result[441] = x316 * x591 * x92
    result[442] = x316 * x593 * x71
    result[443] = x20 * x591 * x75
    result[444] = x282 * x370 * x594
    result[445] = x320 * x596
    result[446] = x374 * x591 * x87
    result[447] = x11 * x593 * x75
    result[448] = x49 * x596
    result[449] = x377 * (
        x1 * (x307 + 6.0 * x534 + 3.0 * x535 + 3.0 * x565) + x133 * x571
    )
    result[450] = x44 * (x1 * (x34 + 3.0 * x605 + 3.0 * x606 + 6.0 * x611) + x4 * x617)
    result[451] = x49 * x623
    result[452] = x61 * x623
    result[453] = x629 * x69 * x75
    result[454] = x60 * x629 * x80
    result[455] = x629 * x71 * x84
    result[456] = x630 * x87 * x89
    result[457] = x630 * x75 * x90
    result[458] = x630 * x84 * x92
    result[459] = x631 * x96
    result[460] = x100 * x632
    result[461] = x104 * x108 * x622
    result[462] = x111 * x622
    result[463] = x108 * x114 * x628
    result[464] = x119 * x633
    result[465] = x102 * x120 * x628
    result[466] = x127 * x634
    result[467] = x129 * x635
    result[468] = x635 * x636
    result[469] = x132 * x634
    result[470] = x134 * x632
    result[471] = x133 * x135 * x622
    result[472] = x140 * x637
    result[473] = x137 * x141 * x628
    result[474] = x144 * x638
    result[475] = x147 * x148 * x628
    result[476] = x150 * x634
    result[477] = x152 * x627
    result[478] = x153 * x635
    result[479] = x160 * x634
    result[480] = x166 * x615 * x69
    result[481] = x168 * x172 * x604
    result[482] = x174 * x604 * x90
    result[483] = x172 * x176 * x619
    result[484] = x344 * x639
    result[485] = x181 * x640
    result[486] = x184 * x416 * x540
    result[487] = x542 * x585
    result[488] = x426 * x641
    result[489] = x190 * x642
    result[490] = x191 * x643
    result[491] = x194 * x644
    result[492] = x196 * x645
    result[493] = x194 * x646
    result[494] = x200 * x647
    result[495] = x273 * x648
    result[496] = x551
    result[497] = x205 * x649
    result[498] = x206 * x649
    result[499] = x466
    result[500] = x211 * x615 * x71
    result[501] = x212 * x604 * x92
    result[502] = x214 * x215 * x604
    result[503] = x212 * x650
    result[504] = x619 * x651 * x92
    result[505] = x215 * x220 * x619
    result[506] = x222 * x642
    result[507] = x421 * x64 * x652
    result[508] = x486 * x653
    result[509] = x228 * x4 * x488
    result[510] = x233 * x235 * x654
    result[511] = x108 * x239 * x602
    result[512] = x538 * x655
    result[513] = x108 * x243 * x600
    result[514] = x119 * x239 * x600
    result[515] = x120 * x656
    result[516] = x583
    result[517] = x243 * x388 * x657
    result[518] = x120 * x658
    result[519] = x255 * x659
    result[520] = x137 * x258 * x654
    result[521] = x194 * x660
    result[522] = x264 * x661
    result[523] = x194 * x662
    result[524] = x168 * x200 * x600
    result[525] = x264 * x663
    result[526] = x107 * x588
    result[527] = x196 * x664
    result[528] = x147 * x665
    result[529] = x107 * x16 * x666
    result[530] = x102 * x270 * x654
    result[531] = x272 * x667
    result[532] = x273 * x668
    result[533] = x272 * x669
    result[534] = x104 * x199 * x670
    result[535] = x273 * x671
    result[536] = x270 * x672
    result[537] = x651 * x673
    result[538] = x16 * x177 * x280
    result[539] = x281 * x674
    result[540] = x289 * x675
    result[541] = x602 * x676 * x92
    result[542] = x148 * x295 * x602
    result[543] = x141 * x677
    result[544] = x298 * x678
    result[545] = x148 * x301 * x600
    result[546] = x289 * x679
    result[547] = x141 * x680
    result[548] = x305 * x674
    result[549] = x491
    result[550] = x313 * x682 * x89
    result[551] = x322 * x495
    result[552] = x575
    result[553] = x576
    result[554] = x577 * x79
    result[555] = x683 * x84
    result[556] = 0
    result[557] = 0
    result[558] = 0
    result[559] = 0
    result[560] = x255 * x684
    result[561] = x239 * x321 * x412
    result[562] = x330 * x685
    result[563] = x243 * x410 * x657
    result[564] = x144 * x658
    result[565] = x538 * x686
    result[566] = 0
    result[567] = 0
    result[568] = 0
    result[569] = 0
    result[570] = x211 * x687
    result[571] = x442 * x688
    result[572] = x310 * x342 * x421
    result[573] = x212 * x664
    result[574] = x214 * x665
    result[575] = x16 * x174 * x220
    result[576] = 0
    result[577] = 0
    result[578] = 0
    result[579] = 0
    result[580] = x289 * x689
    result[581] = x352 * x685
    result[582] = x295 * x411 * x487
    result[583] = x673 * x676
    result[584] = x298 * x690
    result[585] = x356 * x674
    result[586] = 0
    result[587] = 0
    result[588] = 0
    result[589] = 0
    result[590] = x361 * x363 * x682
    result[591] = x493
    result[592] = x492 * x494
    result[593] = x16 * x361 * x75
    result[594] = x369 * x573
    result[595] = x496
    result[596] = 0
    result[597] = 0
    result[598] = 0
    result[599] = 0
    result[600] = 0
    result[601] = x694
    result[602] = 0
    result[603] = x695 * x697
    result[604] = x698 * x700
    result[605] = 0
    result[606] = x387 * x630 * x702
    result[607] = x703
    result[608] = x630 * x704 * x73
    result[609] = 0
    result[610] = x707
    result[611] = x393 * x622 * x709
    result[612] = x699 * x710
    result[613] = x399 * x628 * x709
    result[614] = x393 * x712 * x90
    result[615] = x628 * x713 * x73
    result[616] = x405 * x714
    result[617] = x406 * x715
    result[618] = x393 * x627 * x713
    result[619] = x408 * x714
    result[620] = 0
    result[621] = x710 * x716
    result[622] = 0
    result[623] = x523 * x718
    result[624] = x712 * x719
    result[625] = 0
    result[626] = x413 * x714
    result[627] = x139 * x627 * x720
    result[628] = x415 * x715
    result[629] = 0
    result[630] = x721 * x722
    result[631] = x419 * x604 * x724
    result[632] = x420 * x726
    result[633] = x424 * x619 * x724
    result[634] = x639 * x728
    result[635] = x231 * x619 * x729
    result[636] = x721 * x730
    result[637] = x542 * x731
    result[638] = x419 * x64 * x729
    result[639] = x734 * x735 * x95 * x98
    result[640] = x708 * x736
    result[641] = x137 * x393 * x737
    result[642] = x719 * x737
    result[643] = x137 * x399 * x738
    result[644] = x393 * x619 * x740
    result[645] = x648 * x741
    result[646] = x743
    result[647] = x439 * x745
    result[648] = x440 * x745
    result[649] = x734 * x746
    result[650] = 0
    result[651] = x747 * x748
    result[652] = 0
    result[653] = x619 * x749 * x85
    result[654] = x214 * x73 * x738
    result[655] = 0
    result[656] = x443 * x750
    result[657] = x46 * x734 * x752
    result[658] = x734 * x753
    result[659] = 0
    result[660] = x654 * x69 * x754
    result[661] = x449 * x602 * x709
    result[662] = x655 * x755
    result[663] = x451 * x600 * x709
    result[664] = x449 * x756 * x90
    result[665] = x446 * x600 * x713
    result[666] = x757
    result[667] = x388 * x759
    result[668] = x16 * x449 * x713
    result[669] = x659 * x754
    result[670] = x760
    result[671] = x137 * x602 * x728
    result[672] = x661 * x761
    result[673] = x137 * x600 * x762
    result[674] = x419 * x600 * x740
    result[675] = x663 * x761
    result[676] = x758 * x763
    result[677] = x762 * x764
    result[678] = x147 * x765
    result[679] = x746 * x766
    result[680] = x747 * x767
    result[681] = x393 * x602 * x768
    result[682] = x668 * x741
    result[683] = x399 * x600 * x768
    result[684] = x670 * x769
    result[685] = x671 * x741
    result[686] = x770 * x771
    result[687] = x214 * x399 * x772
    result[688] = x471 * x772
    result[689] = x228 * x773
    result[690] = 0
    result[691] = x602 * x73 * x774
    result[692] = 0
    result[693] = x677 * x720
    result[694] = x490 * x756
    result[695] = 0
    result[696] = x16 * x387 * x775
    result[697] = x776 * x777
    result[698] = x778
    result[699] = 0
    result[700] = x474 * x682 * x702
    result[701] = x695 * x779
    result[702] = x780
    result[703] = x781
    result[704] = x698 * x782
    result[705] = x16 * x474 * x704
    result[706] = 0
    result[707] = 0
    result[708] = 0
    result[709] = 0
    result[710] = x684 * x754
    result[711] = x586 * x783
    result[712] = x480 * x784
    result[713] = x410 * x759
    result[714] = x764 * x785
    result[715] = x686 * x755
    result[716] = 0
    result[717] = 0
    result[718] = 0
    result[719] = 0
    result[720] = x210 * x682 * x786
    result[721] = x310 * x419 * x749
    result[722] = x5 * x752 * x766
    result[723] = x770 * x787
    result[724] = x214 * x765
    result[725] = x753 * x766
    result[726] = 0
    result[727] = 0
    result[728] = 0
    result[729] = 0
    result[730] = x682 * x73 * x775
    result[731] = x489 * x784
    result[732] = x777 * x788
    result[733] = x16 * x399 * x774
    result[734] = x680 * x789
    result[735] = x778
    result[736] = 0
    result[737] = 0
    result[738] = 0
    result[739] = 0
    result[740] = 0
    result[741] = x788 * x790
    result[742] = 0
    result[743] = x776 * x790
    result[744] = x365 * x698 * x733
    result[745] = 0
    result[746] = 0
    result[747] = 0
    result[748] = 0
    result[749] = 0
    result[750] = 0
    result[751] = 0
    result[752] = 0
    result[753] = 0
    result[754] = x68 * x698 * x791
    result[755] = 0
    result[756] = 0
    result[757] = x792 * x793
    result[758] = x793 * x794
    result[759] = 0
    result[760] = 0
    result[761] = 0
    result[762] = x796
    result[763] = 0
    result[764] = x400 * x797
    result[765] = x794 * x798
    result[766] = 0
    result[767] = x399 * x799 * x82
    result[768] = x407 * x800
    result[769] = x498 * x73 * x801
    result[770] = 0
    result[771] = x796
    result[772] = 0
    result[773] = x792 * x798
    result[774] = x401 * x802
    result[775] = 0
    result[776] = x387 * x801 * x82
    result[777] = x414 * x502 * x717
    result[778] = x508 * x73 * x799
    result[779] = 0
    result[780] = 0
    result[781] = 0
    result[782] = x803 * x804
    result[783] = 0
    result[784] = x728 * x805
    result[785] = x794 * x806 * x98
    result[786] = 0
    result[787] = x787 * x807
    result[788] = x433 * x808
    result[789] = x498 * x62 * x786
    result[790] = x33 * x795
    result[791] = x436 * x809
    result[792] = x437 * x810
    result[793] = x805 * x811
    result[794] = x438 * x812
    result[795] = x508 * x813
    result[796] = x771 * x807
    result[797] = x399 * x502 * x814
    result[798] = x393 * x508 * x814
    result[799] = x815 * x816
    result[800] = 0
    result[801] = x804 * x817
    result[802] = 0
    result[803] = x133 * x792 * x806
    result[804] = x525 * x813
    result[805] = 0
    result[806] = x387 * x62 * x818
    result[807] = x530 * x725 * x85
    result[808] = x815 * x819
    result[809] = 0
    result[810] = 0
    result[811] = 0
    result[812] = x537 * x755
    result[813] = 0
    result[814] = x539 * x785
    result[815] = x452 * x800
    result[816] = 0
    result[817] = x540 * x820
    result[818] = x542 * x783
    result[819] = x543 * x754
    result[820] = x803 * x821
    result[821] = x537 * x728
    result[822] = x460 * x502 * x744
    result[823] = x539 * x762
    result[824] = x22 * x419 * x812
    result[825] = x545 * x761
    result[826] = x708 * x730
    result[827] = x462 * x810
    result[828] = x12 * x508 * x728
    result[829] = x822
    result[830] = x817 * x821
    result[831] = x468 * x823
    result[832] = x548 * x741
    result[833] = x470 * x823
    result[834] = x22 * x525 * x769
    result[835] = x550 * x741
    result[836] = x743
    result[837] = x12 * x525 * x811
    result[838] = x12 * x393 * x824
    result[839] = x536 * x826
    result[840] = 0
    result[841] = x24 * x73 * x827
    result[842] = 0
    result[843] = x563 * x720
    result[844] = x22 * x711 * x828
    result[845] = 0
    result[846] = x12 * x387 * x829
    result[847] = x653 * x830
    result[848] = x566 * x826
    result[849] = 0
    result[850] = 0
    result[851] = 0
    result[852] = x474 * x82 * x831
    result[853] = 0
    result[854] = x698 * x779
    result[855] = x780
    result[856] = 0
    result[857] = x781
    result[858] = x695 * x782
    result[859] = x474 * x498 * x832
    result[860] = x578 * x754
    result[861] = x449 * x82 * x833
    result[862] = x446 * x502 * x833
    result[863] = x581 * x820
    result[864] = x481 * x802
    result[865] = x20 * x508 * x755
    result[866] = x757
    result[867] = x482 * x834
    result[868] = x449 * x508 * x835
    result[869] = x11 * x513 * x754
    result[870] = x312 * x803 * x836
    result[871] = x484 * x837
    result[872] = x838 * x839
    result[873] = x586 * x731
    result[874] = x587 * x728
    result[875] = x487 * x840
    result[876] = x251 * x721 * x763
    result[877] = x424 * x525 * x841
    result[878] = x419 * x529 * x841
    result[879] = x554 * x842
    result[880] = x312 * x73 * x829
    result[881] = x393 * x557 * x833
    result[882] = x828 * x833
    result[883] = x20 * x399 * x827
    result[884] = x20 * x562 * x789
    result[885] = x5 * x566 * x825
    result[886] = x11 * x404 * x829
    result[887] = x399 * x562 * x835
    result[888] = x393 * x566 * x835
    result[889] = x843
    result[890] = 0
    result[891] = x591 * x73 * x831
    result[892] = 0
    result[893] = x845
    result[894] = x846 * x847
    result[895] = 0
    result[896] = x387 * x591 * x832
    result[897] = x594 * x844
    result[898] = x848
    result[899] = 0
    result[900] = x869 * (1.57079632679489662 * x1 * x2 * x35 * x36 * x37 - x849 * x867)
    result[901] = x46 * x878 * (1.57079632679489662 * x1 * x2 * x36 * x37 * x57 - x877)
    result[902] = x60 * x878 * (1.57079632679489662 * x1 * x2 * x36 * x37 * x57 - x877)
    result[903] = (
        1.0 * x878 * (x1 * x36 * x68 * x74 * x8 * x9 - x70 * x881 - x74 * x882 * x886)
    )
    result[904] = x889 * (
        1.57079632679489662 * x1 * x2 * x36 * x37 * x46 * x60 * x68 - x887 * x888
    )
    result[905] = 1.0 * x878 * (x37 * x68 * x8 * x893 * x9 - x890 * x891 - x890 * x894)
    result[906] = (
        1.0 * x869 * (x1 * x36 * x8 * x87 * x88 * x9 - x87 * x882 * x898 - x882 * x896)
    )
    result[907] = (
        1.0
        * x878
        * (x1 * x36 * x60 * x74 * x8 * x88 * x9 - x74 * x898 * x899 - x881 * x91)
    )
    result[908] = (
        1.0 * x878 * (x37 * x46 * x8 * x88 * x893 * x9 - x890 * x900 - x890 * x901)
    )
    result[909] = 1.0 * x869 * (x37 * x8 * x88 * x9 * x904 - x390 * x902 - x902 * x903)
    result[910] = x906 * x98 * (1.57079632679489662 * x1 * x2 * x34 * x36 * x37 - x905)
    result[911] = (
        1.0 * x909 * (x1 * x104 * x36 * x56 * x8 * x9 - x882 * x907 - x882 * x908)
    )
    result[912] = (
        x60 * x909 * (1.57079632679489662 * x1 * x2 * x36 * x37 * x56 * x98 - x876 * x910)
    )
    result[913] = (
        1.0 * x909 * (x1 * x114 * x36 * x67 * x8 * x9 - x114 * x882 * x885 - x882 * x914)
    )
    result[914] = (
        1.0 * x917 * (x1 * x104 * x36 * x60 * x67 * x8 * x9 - x899 * x915 - x899 * x916)
    )
    result[915] = (
        1.0 * x909 * (x37 * x67 * x8 * x893 * x9 * x98 - x890 * x918 - x890 * x919)
    )
    result[916] = (
        1.0 * x906 * (x1 * x126 * x36 * x66 * x8 * x9 - x127 * x920 - x882 * x924)
    )
    result[917] = (
        1.0 * x909 * (x1 * x114 * x36 * x60 * x66 * x8 * x9 - x129 * x920 - x899 * x925)
    )
    result[918] = 1.0 * x909 * (x104 * x66 * x893 - x636 * x920 - x890 * x926)
    result[919] = (
        1.0 * x906 * (-x132 * x920 + x37 * x66 * x8 * x9 * x904 * x98 - x902 * x927)
    )
    result[920] = x133 * x906 * (1.57079632679489662 * x1 * x2 * x34 * x36 * x37 - x905)
    result[921] = x909 * (
        1.57079632679489662 * x1 * x133 * x2 * x36 * x37 * x46 * x56 - x887 * x928
    )
    result[922] = (
        1.0 * x909 * (x1 * x37 * x505 * x56 * x8 * x9 - x929 * x930 - x929 * x931)
    )
    result[923] = (
        1.0
        * x909
        * (x1 * x133 * x36 * x67 * x74 * x8 * x9 - x142 * x881 - x74 * x885 * x932)
    )
    result[924] = (
        1.0 * x917 * (x1 * x37 * x46 * x505 * x67 * x8 * x9 - x929 * x933 - x929 * x934)
    )
    result[925] = 1.0 * x909 * (x37 * x67 * x8 * x9 * x939 - x401 * x935 - x935 * x936)
    result[926] = (
        1.0 * x906 * (x1 * x133 * x36 * x66 * x8 * x87 * x9 - x150 * x920 - x932 * x940)
    )
    result[927] = 1.0 * x909 * (x1 * x505 * x66 * x74 - x151 * x920 - x929 * x941)
    result[928] = (
        1.0 * x909 * (-x153 * x920 + x37 * x46 * x66 * x8 * x9 * x939 - x414 * x935)
    )
    result[929] = 1.0 * x906 * (-x160 * x920 + x37 * x66 * x8 * x9 * x944 - x945 * x946)
    result[930] = (
        1.0 * x949 * (x1 * x164 * x33 * x36 * x8 * x9 - x161 * x948 - x164 * x865 * x882)
    )
    result[931] = (
        1.0 * x953 * (x1 * x168 * x26 * x36 * x8 * x9 - x168 * x858 * x882 - x882 * x952)
    )
    result[932] = (
        1.0
        * x953
        * (x1 * x164 * x26 * x36 * x60 * x8 * x9 - x164 * x858 * x899 - x173 * x948)
    )
    result[933] = (
        1.0 * x953 * (x1 * x176 * x36 * x54 * x8 * x9 - x176 * x872 * x882 - x882 * x956)
    )
    result[934] = (
        1.0
        * x958
        * (x1 * x168 * x36 * x54 * x60 * x8 * x9 - x168 * x872 * x899 - x899 * x957)
    )
    result[935] = 1.0 * x953 * (x164 * x54 * x893 - x164 * x872 * x890 - x890 * x959)
    result[936] = (
        1.0 * x949 * (x1 * x184 * x36 * x62 * x8 * x9 - x185 * x960 - x882 * x964)
    )
    result[937] = (
        1.0 * x953 * (x1 * x176 * x36 * x60 * x62 * x8 * x9 - x187 * x960 - x899 * x965)
    )
    result[938] = 1.0 * x953 * (x168 * x62 * x893 - x890 * x966 - x890 * x967)
    result[939] = 1.0 * x949 * (x164 * x62 * x904 - x164 * x870 * x902 - x902 * x968)
    result[940] = (
        x909
        * x98
        * (1.57079632679489662 * x1 * x133 * x2 * x33 * x36 * x37 - x876 * x969)
    )
    result[941] = (
        1.0 * x958 * (x1 * x104 * x133 * x26 * x36 * x8 * x9 - x932 * x970 - x932 * x971)
    )
    result[942] = (
        1.0 * x958 * (x1 * x26 * x37 * x505 * x8 * x9 * x98 - x929 * x972 - x929 * x973)
    )
    result[943] = (
        1.0
        * x958
        * (x1 * x114 * x133 * x36 * x54 * x8 * x9 - x114 * x872 * x932 - x932 * x974)
    )
    result[944] = 1.0 * x977 * (x1 * x104 * x505 * x54 - x929 * x975 - x929 * x976)
    result[945] = (
        1.0 * x958 * (x37 * x54 * x8 * x9 * x939 * x98 - x425 * x935 - x935 * x978)
    )
    result[946] = (
        1.0 * x909 * (x1 * x126 * x133 * x36 * x62 * x8 * x9 - x202 * x960 - x932 * x979)
    )
    result[947] = 1.0 * x958 * (x1 * x114 * x505 * x62 - x929 * x980 - x929 * x981)
    result[948] = 1.0 * x958 * (x104 * x62 * x939 - x206 * x960 - x935 * x982)
    result[949] = (
        1.0 * x909 * (-x207 * x960 + x37 * x62 * x8 * x9 * x944 * x98 - x983 * x984)
    )
    result[950] = 1.0 * x949 * (x33 * x37 * x8 * x9 * x987 - x985 * x986 - x985 * x988)
    result[951] = (
        1.0 * x953 * (x26 * x37 * x46 * x8 * x9 * x987 - x985 * x989 - x985 * x990)
    )
    result[952] = 1.0 * x953 * (x26 * x37 * x8 * x9 * x994 - x437 * x991 - x991 * x992)
    result[953] = 1.0 * x953 * (x54 * x74 * x987 - x74 * x872 * x985 - x985 * x995)
    result[954] = (
        1.0 * x958 * (x37 * x46 * x54 * x8 * x9 * x994 - x441 * x991 - x991 * x996)
    )
    result[955] = 1.0 * x953 * (x1000 * x37 * x54 * x8 * x9 - x221 * x945 - x997 * x998)
    result[956] = 1.0 * x949 * (-x1001 * x985 - x222 * x960 + x62 * x87 * x987)
    result[957] = 1.0 * x953 * (-x223 * x881 + x62 * x74 * x994 - x652 * x960)
    result[958] = (
        1.0 * x953 * (x1000 * x37 * x46 * x62 * x8 * x9 - x1002 * x983 - x225 * x960)
    )
    result[959] = 1.0 * x949 * (x1005 * x37 * x62 * x8 * x9 - x1006 * x945 - x229 * x960)
    result[960] = (
        1.0 * x906 * (x1 * x233 * x234 * x36 * x8 * x9 - x1008 * x882 - x1010 * x882)
    )
    result[961] = (
        1.0 * x909 * (x1 * x239 * x24 * x36 * x8 * x9 - x1014 * x882 - x1015 * x882)
    )
    result[962] = (
        1.0 * x909 * (x1 * x233 * x24 * x36 * x60 * x8 * x9 - x1016 * x899 - x1017 * x899)
    )
    result[963] = (
        1.0 * x909 * (x1 * x22 * x243 * x36 * x8 * x9 - x1020 * x882 - x243 * x599 * x882)
    )
    result[964] = (
        1.0
        * x917
        * (x1 * x22 * x239 * x36 * x60 * x8 * x9 - x1021 * x899 - x239 * x599 * x899)
    )
    result[965] = 1.0 * x909 * (-x1022 * x890 + x22 * x233 * x893 - x233 * x599 * x890)
    result[966] = x4 * x906 * (1.57079632679489662 * x1 * x2 * x249 * x36 * x7 - x1026)
    result[967] = x909 * (
        1.57079632679489662 * x1 * x2 * x243 * x36 * x4 * x60 * x7 - x1027 * x1028
    )
    result[968] = (
        1.0 * x909 * (-x1029 * x890 + x239 * x4 * x7 * x8 * x893 * x9 - x239 * x64 * x890)
    )
    result[969] = (
        1.0 * x906 * (-x1030 * x902 + x233 * x4 * x7 * x8 * x9 * x904 - x233 * x64 * x902)
    )
    result[970] = (
        1.0
        * x909
        * (x1 * x133 * x164 * x234 * x36 * x8 * x9 - x1009 * x164 * x932 - x257 * x948)
    )
    result[971] = (
        1.0
        * x958
        * (x1 * x133 * x168 * x24 * x36 * x8 * x9 - x1031 * x932 - x1032 * x932)
    )
    result[972] = (
        1.0 * x958 * (x1 * x164 * x24 * x505 - x1033 * x929 - x164 * x856 * x929)
    )
    result[973] = (
        1.0
        * x958
        * (x1 * x133 * x176 * x22 * x36 * x8 * x9 - x1034 * x932 - x176 * x599 * x932)
    )
    result[974] = (
        1.0 * x977 * (x1 * x168 * x22 * x505 - x1035 * x929 - x168 * x599 * x929)
    )
    result[975] = 1.0 * x958 * (x164 * x22 * x939 - x164 * x599 * x935 - x263 * x948)
    result[976] = x909 * (
        1.57079632679489662 * x1 * x133 * x184 * x2 * x36 * x4 * x7 - x1027 * x1036
    )
    result[977] = (
        1.0
        * x958
        * (x1 * x176 * x4 * x505 * x7 * x8 * x9 - x1037 * x929 - x176 * x64 * x929)
    )
    result[978] = (
        1.0 * x958 * (-x1038 * x935 + x168 * x4 * x7 * x8 * x9 * x939 - x641 * x935)
    )
    result[979] = (
        1.0 * x909 * (-x1039 * x666 + x164 * x4 * x7 * x8 * x9 * x944 - x269 * x948)
    )
    result[980] = (
        1.0 * x909 * (-x1040 * x985 - x1041 * x985 + x234 * x37 * x8 * x9 * x98 * x987)
    )
    result[981] = 1.0 * x958 * (x104 * x24 * x987 - x1042 * x985 - x1043 * x985)
    result[982] = (
        1.0 * x958 * (-x1044 * x991 + x24 * x37 * x8 * x9 * x98 * x994 - x460 * x991)
    )
    result[983] = 1.0 * x958 * (-x1045 * x985 + x114 * x22 * x987 - x114 * x599 * x985)
    result[984] = 1.0 * x977 * (x104 * x22 * x994 - x104 * x599 * x991 - x1046 * x991)
    result[985] = (
        1.0
        * x958
        * (x1000 * x22 * x37 * x8 * x9 * x98 - x102 * x1047 * x599 - x1047 * x1048)
    )
    result[986] = (
        1.0 * x909 * (-x1049 * x985 + x126 * x4 * x7 * x8 * x9 * x987 - x126 * x64 * x985)
    )
    result[987] = (
        1.0 * x958 * (-x1050 * x991 + x114 * x4 * x7 * x8 * x9 * x994 - x114 * x64 * x991)
    )
    result[988] = (
        1.0 * x958 * (x1000 * x104 * x4 * x7 * x8 * x9 - x1039 * x280 - x1047 * x1051)
    )
    result[989] = x909 * (x1005 * x1053 * x98 - x1055 * x281)
    result[990] = (
        1.0 * x906 * (-x1056 * x1057 - x1056 * x467 + x1058 * x234 * x37 * x8 * x9)
    )
    result[991] = (
        1.0 * x909 * (-x1056 * x1059 - x1056 * x1060 + x1058 * x24 * x37 * x46 * x8 * x9)
    )
    result[992] = 1.0 * x909 * (-x1061 * x997 + x1064 * x24 * x37 * x8 * x9 - x296 * x945)
    result[993] = 1.0 * x909 * (-x1056 * x599 * x74 + x1058 * x22 * x74 - x297 * x881)
    result[994] = (
        1.0
        * x917
        * (x1064 * x22 * x37 * x46 * x8 * x9 - x1065 * x1066 - x1065 * x599 * x92)
    )
    result[995] = (
        1.0 * x909 * (x1068 * x22 * x37 * x8 * x9 - x301 * x599 * x997 - x302 * x945)
    )
    result[996] = (
        1.0
        * x906
        * (-x1056 * x1069 - x1056 * x64 * x87 + x1058 * x4 * x7 * x8 * x87 * x9)
    )
    result[997] = (
        1.0 * x909 * (-x1039 * x295 * x74 + x1064 * x4 * x7 * x74 * x8 * x9 - x304 * x881)
    )
    result[998] = x909 * (x1053 * x1068 * x46 - x1055 * x305)
    result[999] = x4 * x906 * (x1072 - x1073)
    result[1000] = (
        1.0 * x869 * (x1 * x312 * x313 * x36 * x8 * x9 - x1075 * x882 - x1077 * x882)
    )
    result[1001] = (
        1.0 * x878 * (x1 * x309 * x314 * x36 * x8 * x9 - x1078 * x315 - x1080 * x882)
    )
    result[1002] = (
        1.0
        * x878
        * (x1 * x309 * x313 * x36 * x60 * x8 * x9 - x1078 * x317 - x1081 * x899)
    )
    result[1003] = x5 * x878 * (1.57079632679489662 * x1 * x2 * x318 * x36 * x7 - x1083)
    result[1004] = x889 * (
        1.57079632679489662 * x1 * x2 * x314 * x36 * x5 * x60 * x7 - x1084 * x1085
    )
    result[1005] = (
        1.0
        * x878
        * (-x1086 * x890 - x310 * x313 * x890 + x313 * x5 * x7 * x8 * x893 * x9)
    )
    result[1006] = x869 * (1.57079632679489662 * x1 * x2 * x324 * x36 * x7 - x1087 * x849)
    result[1007] = x60 * x878 * (1.57079632679489662 * x1 * x2 * x318 * x36 * x7 - x1083)
    result[1008] = (
        1.0 * x878 * (-x1088 * x890 - x16 * x314 * x890 + x314 * x7 * x8 * x893 * x9)
    )
    result[1009] = 1.0 * x869 * (-x1089 * x902 + x313 * x7 * x8 * x9 * x904 - x683 * x902)
    result[1010] = (
        1.0
        * x906
        * (x1 * x133 * x233 * x312 * x36 * x8 * x9 - x1090 * x932 - x1091 * x932)
    )
    result[1011] = (
        1.0
        * x909
        * (x1 * x133 * x239 * x309 * x36 * x8 * x9 - x1078 * x329 - x1092 * x932)
    )
    result[1012] = 1.0 * x909 * (x1 * x233 * x309 * x505 - x1093 * x929 - x1094 * x929)
    result[1013] = x909 * (
        1.57079632679489662 * x1 * x133 * x2 * x243 * x36 * x5 * x7 - x1084 * x1095
    )
    result[1014] = (
        1.0
        * x917
        * (x1 * x239 * x5 * x505 * x7 * x8 * x9 - x1096 * x929 - x239 * x310 * x929)
    )
    result[1015] = (
        1.0
        * x909
        * (-x1097 * x935 - x233 * x310 * x935 + x233 * x5 * x7 * x8 * x9 * x939)
    )
    result[1016] = x133 * x906 * (1.57079632679489662 * x1 * x2 * x249 * x36 * x7 - x1026)
    result[1017] = (
        1.0 * x909 * (x1 * x243 * x505 * x7 * x8 * x9 - x1098 * x929 - x16 * x243 * x929)
    )
    result[1018] = 1.0 * x909 * (-x1099 * x935 + x239 * x7 * x8 * x9 * x939 - x658 * x935)
    result[1019] = (
        1.0 * x906 * (-x1100 * x1101 - x1102 * x338 + x233 * x7 * x8 * x9 * x944)
    )
    result[1020] = 1.0 * x949 * (-x1074 * x164 * x985 - x1103 * x985 + x164 * x312 * x987)
    result[1021] = 1.0 * x953 * (-x1104 * x985 - x1105 * x985 + x168 * x309 * x987)
    result[1022] = 1.0 * x953 * (-x1078 * x342 + x164 * x309 * x994 - x485 * x948)
    result[1023] = (
        1.0
        * x953
        * (-x1106 * x985 - x176 * x310 * x985 + x176 * x5 * x7 * x8 * x9 * x987)
    )
    result[1024] = (
        1.0 * x958 * (-x1107 * x991 + x168 * x5 * x7 * x8 * x9 * x994 - x688 * x991)
    )
    result[1025] = (
        1.0
        * x953
        * (x1000 * x164 * x5 * x7 * x8 * x9 - x1047 * x164 * x310 - x346 * x948)
    )
    result[1026] = (
        1.0 * x949 * (-x1108 * x985 - x16 * x184 * x985 + x184 * x7 * x8 * x9 * x987)
    )
    result[1027] = 1.0 * x953 * (-x1109 * x991 + x176 * x7 * x8 * x9 * x994 - x664 * x991)
    result[1028] = (
        1.0 * x953 * (x1000 * x168 * x7 * x8 * x9 - x1100 * x1110 - x1102 * x349)
    )
    result[1029] = (
        1.0 * x949 * (x1005 * x164 * x7 * x8 * x9 - x1102 * x164 * x228 - x350 * x948)
    )
    result[1030] = (
        1.0 * x906 * (-x1056 * x1111 - x1056 * x483 + x1058 * x312 * x37 * x8 * x9 * x98)
    )
    result[1031] = 1.0 * x909 * (x104 * x1058 * x309 - x1056 * x1112 - x1078 * x352)
    result[1032] = (
        1.0 * x909 * (x1064 * x309 * x37 * x8 * x9 * x98 - x1065 * x838 - x1078 * x353)
    )
    result[1033] = (
        1.0
        * x909
        * (-x1056 * x1113 - x1056 * x114 * x310 + x1058 * x114 * x5 * x7 * x8 * x9)
    )
    result[1034] = (
        1.0 * x917 * (x104 * x1064 * x5 * x7 * x8 * x9 - x1065 * x1114 - x1065 * x1115)
    )
    result[1035] = x909 * (x1068 * x1116 * x98 - x1117 * x356)
    result[1036] = (
        1.0 * x906 * (-x1056 * x1118 - x1056 * x672 + x1058 * x126 * x7 * x8 * x9)
    )
    result[1037] = (
        1.0 * x909 * (x1064 * x114 * x7 * x8 * x9 - x1100 * x1119 - x1102 * x359)
    )
    result[1038] = (
        1.0 * x909 * (x104 * x1068 * x7 * x8 * x9 - x1100 * x1120 - x1102 * x360)
    )
    result[1039] = x906 * x98 * (x1072 - x1073)
    result[1040] = (
        1.0 * x869 * (-x1121 * x997 + x1122 * x312 * x37 * x8 * x9 - x362 * x945)
    )
    result[1041] = (
        1.0 * x878 * (-x1078 * x364 + x1122 * x309 * x37 * x46 * x8 * x9 - x1123 * x1124)
    )
    result[1042] = (
        1.0 * x878 * (-x1078 * x366 + x1125 * x309 * x37 * x8 * x9 - x1126 * x945)
    )
    result[1043] = (
        1.0 * x878 * (x1122 * x5 * x7 * x74 * x8 * x9 - x1123 * x310 * x74 - x367 * x881)
    )
    result[1044] = x889 * (x1116 * x1125 * x46 - x1117 * x368)
    result[1045] = x5 * x878 * (x1127 - x1128)
    result[1046] = (
        1.0 * x869 * (-x1100 * x1129 - x1102 * x373 + x1122 * x7 * x8 * x87 * x9)
    )
    result[1047] = (
        1.0 * x878 * (-x1102 * x365 * x74 + x1125 * x7 * x74 * x8 * x9 - x375 * x881)
    )
    result[1048] = x46 * x878 * (x1127 - x1128)
    result[1049] = x869 * (
        x1052
        * (
            x1 * (6.0 * x1003 + 3.0 * x1004 + 3.0 * x1067 + 2.0 * x569 + 2.0 * x570)
            + x1071 * x133
        )
        - x1054 * x376
    )
    result[1050] = 0
    result[1051] = 0
    result[1052] = x694
    result[1053] = 0
    result[1054] = x697 * x698
    result[1055] = x695 * x700
    result[1056] = 0
    result[1057] = x1130 * x630 * x82
    result[1058] = x703
    result[1059] = x498 * x631 * x701
    result[1060] = 0
    result[1061] = 0
    result[1062] = x1 * x110 * x710
    result[1063] = 0
    result[1064] = x633 * x797
    result[1065] = x420 * x718
    result[1066] = 0
    result[1067] = x499 * x715
    result[1068] = x104 * x627 * x800
    result[1069] = x501 * x714
    result[1070] = x707
    result[1071] = x696 * x710
    result[1072] = x637 * x834
    result[1073] = x1131 * x628 * x82
    result[1074] = x638 * x802
    result[1075] = x1132 * x508 * x628
    result[1076] = x509 * x714
    result[1077] = x1131 * x502 * x627
    result[1078] = x510 * x715
    result[1079] = x514 * x714
    result[1080] = 0
    result[1081] = 0
    result[1082] = x1133 * x748
    result[1083] = 0
    result[1084] = x168 * x738 * x82
    result[1085] = x640 * x808
    result[1086] = 0
    result[1087] = x1135 * x1136
    result[1088] = x1135 * x1137 * x60
    result[1089] = x517 * x750
    result[1090] = x708 * x722
    result[1091] = x644 * x809
    result[1092] = x645 * x810
    result[1093] = x646 * x809
    result[1094] = x647 * x812
    result[1095] = x520 * x738
    result[1096] = x1135 * x1138
    result[1097] = x521 * x745
    result[1098] = x522 * x745
    result[1099] = x822
    result[1100] = x721 * x736
    result[1101] = x523 * x726
    result[1102] = x1139 * x525 * x604
    result[1103] = x650 * x837
    result[1104] = x527 * x738
    result[1105] = x1139 * x529 * x619
    result[1106] = x1135 * x836 * x87
    result[1107] = x64 * x74 * x839
    result[1108] = x653 * x840
    result[1109] = x4 * x536 * x842
    result[1110] = 0
    result[1111] = 0
    result[1112] = x1140 * x233 * x82
    result[1113] = 0
    result[1114] = x579 * x756
    result[1115] = x656 * x800
    result[1116] = 0
    result[1117] = x1142
    result[1118] = x1143 * x1144
    result[1119] = x1145 * x16 * x498
    result[1120] = x1133 * x767
    result[1121] = x660 * x809
    result[1122] = x1146 * x502 * x602
    result[1123] = x662 * x809
    result[1124] = x1147 * x544
    result[1125] = x1146 * x508 * x600
    result[1126] = x1141 * x184
    result[1127] = x664 * x810
    result[1128] = x546 * x772
    result[1129] = x1148 * x816
    result[1130] = x760
    result[1131] = x667 * x823
    result[1132] = x102 * x525 * x602 * x727
    result[1133] = x669 * x823
    result[1134] = x1147 * x549
    result[1135] = x102 * x600 * x824
    result[1136] = x1138 * x1149
    result[1137] = x552 * x772
    result[1138] = x553 * x772
    result[1139] = x554 * x825
    result[1140] = x675 * x829
    result[1141] = x1140 * x559
    result[1142] = x1132 * x562 * x602
    result[1143] = x1131 * x557 * x600
    result[1144] = x1150 * x678
    result[1145] = x1132 * x566 * x600
    result[1146] = x679 * x829
    result[1147] = x1131 * x16 * x562
    result[1148] = x567 * x825
    result[1149] = x843
    result[1150] = 0
    result[1151] = 0
    result[1152] = x1151 * x1152
    result[1153] = 0
    result[1154] = x1134 * x314 * x698
    result[1155] = x1143 * x1151
    result[1156] = 0
    result[1157] = 0
    result[1158] = 0
    result[1159] = 0
    result[1160] = x1145 * x682 * x82
    result[1161] = x1144 * x1152
    result[1162] = x580 * x784
    result[1163] = x1142
    result[1164] = x658 * x802
    result[1165] = x16 * x582 * x708
    result[1166] = 0
    result[1167] = 0
    result[1168] = 0
    result[1169] = 0
    result[1170] = x687 * x818
    result[1171] = x1137 * x1149 * x5
    result[1172] = x310 * x584 * x725
    result[1173] = x1136 * x1149
    result[1174] = x168 * x525 * x772
    result[1175] = x1148 * x819
    result[1176] = 0
    result[1177] = 0
    result[1178] = 0
    result[1179] = 0
    result[1180] = x689 * x829
    result[1181] = x589 * x784
    result[1182] = x487 * x830
    result[1183] = x673 * x827
    result[1184] = x1150 * x690
    result[1185] = x590 * x825
    result[1186] = 0
    result[1187] = 0
    result[1188] = 0
    result[1189] = 0
    result[1190] = x591 * x682 * x701 * x71
    result[1191] = x845
    result[1192] = x844 * x847
    result[1193] = x1130 * x16 * x591
    result[1194] = x594 * x846
    result[1195] = x848
    result[1196] = 0
    result[1197] = 0
    result[1198] = 0
    result[1199] = 0
    result[1200] = x869 * (-x1 * x1154 * x35 + x1153 * x867)
    result[1201] = x46 * x878 * (x1155 - x1156)
    result[1202] = x60 * x878 * (x1155 - x1156)
    result[1203] = -x878 * (
        x1157 * x70 - 0.866025403784438597 * x36 * x74 * x8 * x886 * x9
    )
    result[1204] = x1158 * x889 * (-x384 + x888)
    result[1205] = x1159 * x878 * (x891 - x894)
    result[1206] = -x869 * (
        x1160 * x896 - 0.866025403784438597 * x36 * x8 * x87 * x898 * x9
    )
    result[1207] = -x878 * (
        x1157 * x91 - 0.866025403784438597 * x36 * x60 * x74 * x8 * x898 * x9
    )
    result[1208] = x1159 * x878 * (x900 - x901)
    result[1209] = x1161 * x869 * (-x390 + x903)
    result[1210] = x906 * (x1162 * x98 - x1163 * x391)
    result[1211] = x1160 * x909 * (x907 - x908)
    result[1212] = x909 * (x1154 * x60 * x910 - x1163 * x395)
    result[1213] = x909 * (
        0.866025403784438597 * x114 * x36 * x8 * x885 * x9 - x1160 * x914
    )
    result[1214] = x1164 * x917 * (x915 - x916)
    result[1215] = x1159 * x909 * (x918 - x919)
    result[1216] = -x906 * (
        x1160 * x924 - 0.866025403784438597 * x126 * x36 * x8 * x884 * x9
    )
    result[1217] = x909 * (
        0.866025403784438597 * x114 * x36 * x60 * x8 * x884 * x9 - x1164 * x925
    )
    result[1218] = x909 * (-x1159 * x926 + x1165 * x636)
    result[1219] = x906 * (-x1161 * x927 + x1165 * x132)
    result[1220] = x133 * x906 * (-x1154 * x391 + x1162)
    result[1221] = x1158 * x909 * (-x409 + x928)
    result[1222] = x1166 * x909 * (x930 - x931)
    result[1223] = -x909 * (
        x1157 * x142 - 0.866025403784438597 * x133 * x36 * x74 * x8 * x885 * x9
    )
    result[1224] = x1166 * x917 * (x933 - x934)
    result[1225] = x1167 * x909 * (-x401 + x936)
    result[1226] = -x906 * (
        x1168 * x940 - 0.866025403784438597 * x133 * x36 * x8 * x87 * x884 * x9
    )
    result[1227] = -x909 * (x1166 * x941 - 0.866025403784438597 * x139 * x74 * x884)
    result[1228] = x909 * (x1165 * x153 - x1167 * x414)
    result[1229] = x906 * (x1165 * x160 - x1169 * x946)
    result[1230] = -x949 * (
        x1170 * x161 - 0.866025403784438597 * x164 * x36 * x8 * x865 * x9
    )
    result[1231] = -x953 * (
        x1160 * x952 - 0.866025403784438597 * x168 * x36 * x8 * x858 * x9
    )
    result[1232] = -x953 * (
        x1170 * x173 - 0.866025403784438597 * x164 * x36 * x60 * x8 * x858 * x9
    )
    result[1233] = -x953 * (
        x1160 * x956 - 0.866025403784438597 * x176 * x36 * x8 * x872 * x9
    )
    result[1234] = -x958 * (
        x1164 * x957 - 0.866025403784438597 * x168 * x36 * x60 * x8 * x872 * x9
    )
    result[1235] = -x953 * (x1159 * x959 - 0.866025403784438597 * x164 * x83 * x872)
    result[1236] = x949 * (-x1160 * x964 + x1171 * x185)
    result[1237] = x953 * (-x1164 * x965 + x1171 * x187)
    result[1238] = x1159 * x953 * (x966 - x967)
    result[1239] = -x949 * (x1161 * x968 - 0.866025403784438597 * x164 * x870 * x95)
    result[1240] = x1163 * x909 * (-x435 + x969)
    result[1241] = x1168 * x958 * (x970 - x971)
    result[1242] = x1166 * x958 * (x972 - x973)
    result[1243] = x958 * (
        0.866025403784438597 * x114 * x133 * x36 * x8 * x872 * x9 - x1168 * x974
    )
    result[1244] = x1166 * x977 * (x975 - x976)
    result[1245] = x1167 * x958 * (-x425 + x978)
    result[1246] = x909 * (-x1168 * x979 + x1171 * x202)
    result[1247] = x1166 * x958 * (x980 - x981)
    result[1248] = x958 * (-x1167 * x982 + x1171 * x206)
    result[1249] = x909 * (x1171 * x207 - x1172 * x984)
    result[1250] = x1173 * x949 * (x986 - x988)
    result[1251] = x1173 * x953 * (x989 - x990)
    result[1252] = x1174 * x953 * (-x437 + x992)
    result[1253] = -x953 * (x1173 * x995 - 0.866025403784438597 * x210 * x74 * x872)
    result[1254] = x1174 * x958 * (-x441 + x996)
    result[1255] = x953 * (-x1169 * x221 + x1175 * x998)
    result[1256] = x949 * (-x1001 * x1173 + x1171 * x222)
    result[1257] = -x953 * (x1157 * x223 - 0.866025403784438597 * x214 * x74 * x870)
    result[1258] = x953 * (-x1002 * x1172 + x1171 * x225)
    result[1259] = x949 * (-x1006 * x1169 + x1171 * x229)
    result[1260] = x1160 * x906 * (-x1008 + x1010)
    result[1261] = x1160 * x909 * (-x1014 + x1015)
    result[1262] = x1164 * x909 * (-x1016 + x1017)
    result[1263] = x909 * (
        0.866025403784438597 * x1 * x243 * x36 * x598 * x8 * x9 - x1020 * x1160
    )
    result[1264] = x917 * (
        0.866025403784438597 * x1 * x239 * x36 * x598 * x60 * x8 * x9 - x1021 * x1164
    )
    result[1265] = x909 * (0.866025403784438597 * x1 * x233 * x598 * x83 - x1022 * x1159)
    result[1266] = x4 * x906 * (2.72069904635132662 * x1 * x2 * x249 * x36 * x7 - x1177)
    result[1267] = x909 * (
        2.72069904635132662 * x1 * x2 * x243 * x36 * x4 * x60 * x7 - x1028 * x1178
    )
    result[1268] = x909 * (
        0.866025403784438597 * x1 * x239 * x4 * x7 * x8 * x83 * x9 - x1029 * x1159
    )
    result[1269] = x906 * (
        0.866025403784438597 * x1 * x233 * x4 * x7 * x8 * x9 * x95 - x1030 * x1161
    )
    result[1270] = x909 * (
        0.866025403784438597 * x1009 * x133 * x164 * x36 * x8 * x9 - x1170 * x257
    )
    result[1271] = x1168 * x958 * (-x1031 + x1032)
    result[1272] = -x958 * (x1033 * x1166 - 0.866025403784438597 * x139 * x164 * x856)
    result[1273] = x958 * (
        0.866025403784438597 * x1 * x133 * x176 * x36 * x598 * x8 * x9 - x1034 * x1168
    )
    result[1274] = x977 * (0.866025403784438597 * x1 * x139 * x168 * x598 - x1035 * x1166)
    result[1275] = x958 * (0.866025403784438597 * x1 * x147 * x164 * x598 - x1170 * x263)
    result[1276] = x909 * (
        2.72069904635132662 * x1 * x133 * x184 * x2 * x36 * x4 * x7 - x1036 * x1178
    )
    result[1277] = x958 * (
        0.866025403784438597 * x1 * x139 * x176 * x4 * x7 * x8 * x9 - x1037 * x1166
    )
    result[1278] = x958 * (
        0.866025403784438597 * x1 * x147 * x168 * x4 * x7 * x8 * x9 - x1038 * x1167
    )
    result[1279] = x909 * (
        0.866025403784438597 * x1 * x159 * x164 * x4 * x7 * x8 * x9 - x1170 * x269
    )
    result[1280] = x1173 * x909 * (x1040 - x1041)
    result[1281] = x1173 * x958 * (x1042 - x1043)
    result[1282] = x1174 * x958 * (x1044 - x460)
    result[1283] = x958 * (0.866025403784438597 * x1 * x114 * x210 * x598 - x1045 * x1173)
    result[1284] = x977 * (0.866025403784438597 * x1 * x104 * x214 * x598 - x1046 * x1174)
    result[1285] = x958 * (
        0.866025403784438597 * x1 * x220 * x37 * x598 * x8 * x9 * x98 - x1048 * x1179
    )
    result[1286] = x909 * (
        0.866025403784438597 * x1 * x126 * x210 * x4 * x7 * x8 * x9 - x1049 * x1173
    )
    result[1287] = x958 * (
        0.866025403784438597 * x1 * x114 * x214 * x4 * x7 * x8 * x9 - x1050 * x1174
    )
    result[1288] = -x958 * (x1051 * x1179 - 0.866025403784438597 * x280 * x64)
    result[1289] = 0
    result[1290] = x1180 * x906 * (x1057 - x467)
    result[1291] = x1180 * x909 * (x1059 - x1060)
    result[1292] = x909 * (x1061 * x1175 - x1169 * x296)
    result[1293] = x909 * (0.866025403784438597 * x1 * x288 * x598 * x74 - x1157 * x297)
    result[1294] = x917 * (
        0.866025403784438597 * x1 * x295 * x37 * x46 * x598 * x8 * x9 - x1066 * x1181
    )
    result[1295] = x909 * (
        0.866025403784438597 * x1 * x301 * x37 * x598 * x8 * x9 - x1169 * x302
    )
    result[1296] = x906 * (
        0.866025403784438597 * x1 * x288 * x4 * x7 * x8 * x87 * x9 - x1069 * x1180
    )
    result[1297] = x909 * (
        0.866025403784438597 * x1 * x295 * x4 * x7 * x74 * x8 * x9 - x1157 * x304
    )
    result[1298] = 0
    result[1299] = 0
    result[1300] = x1160 * x869 * (x1075 - x1077)
    result[1301] = x878 * (-x1080 * x1160 + x1182 * x315)
    result[1302] = x878 * (-x1081 * x1164 + x1182 * x317)
    result[1303] = x5 * x878 * (2.72069904635132662 * x1 * x2 * x318 * x36 * x7 - x1183)
    result[1304] = x889 * (
        2.72069904635132662 * x1 * x2 * x314 * x36 * x5 * x60 * x7 - x1085 * x1184
    )
    result[1305] = x878 * (
        0.866025403784438597 * x1 * x313 * x5 * x7 * x8 * x83 * x9 - x1086 * x1159
    )
    result[1306] = x869 * (
        2.72069904635132662 * x1 * x2 * x324 * x36 * x7 - x1087 * x1153
    )
    result[1307] = x60 * x878 * (2.72069904635132662 * x1 * x2 * x318 * x36 * x7 - x1183)
    result[1308] = x878 * (
        0.866025403784438597 * x1 * x314 * x7 * x8 * x83 * x9 - x1088 * x1159
    )
    result[1309] = x869 * (
        0.866025403784438597 * x1 * x313 * x7 * x8 * x9 * x95 - x1089 * x1161
    )
    result[1310] = x1168 * x906 * (x1090 - x1091)
    result[1311] = x909 * (-x1092 * x1168 + x1182 * x329)
    result[1312] = x1166 * x909 * (x1093 - x1094)
    result[1313] = x909 * (
        2.72069904635132662 * x1 * x133 * x2 * x243 * x36 * x5 * x7 - x1095 * x1184
    )
    result[1314] = x917 * (
        0.866025403784438597 * x1 * x139 * x239 * x5 * x7 * x8 * x9 - x1096 * x1166
    )
    result[1315] = x909 * (
        0.866025403784438597 * x1 * x147 * x233 * x5 * x7 * x8 * x9 - x1097 * x1167
    )
    result[1316] = x133 * x906 * (2.72069904635132662 * x1 * x2 * x249 * x36 * x7 - x1177)
    result[1317] = x909 * (
        0.866025403784438597 * x1 * x139 * x243 * x7 * x8 * x9 - x1098 * x1166
    )
    result[1318] = x909 * (
        0.866025403784438597 * x1 * x147 * x239 * x7 * x8 * x9 - x1099 * x1167
    )
    result[1319] = x906 * (
        0.866025403784438597 * x1 * x159 * x233 * x7 * x8 * x9 - x1101 * x1185
    )
    result[1320] = x949 * (0.866025403784438597 * x1074 * x164 * x210 - x1103 * x1173)
    result[1321] = x1173 * x953 * (x1104 - x1105)
    result[1322] = x953 * (-x1170 * x485 + x1182 * x342)
    result[1323] = x953 * (
        0.866025403784438597 * x1 * x176 * x210 * x5 * x7 * x8 * x9 - x1106 * x1173
    )
    result[1324] = x958 * (
        0.866025403784438597 * x1 * x168 * x214 * x5 * x7 * x8 * x9 - x1107 * x1174
    )
    result[1325] = x953 * (
        0.866025403784438597 * x1 * x164 * x220 * x5 * x7 * x8 * x9 - x1170 * x346
    )
    result[1326] = x949 * (
        0.866025403784438597 * x1 * x184 * x210 * x7 * x8 * x9 - x1108 * x1173
    )
    result[1327] = x953 * (
        0.866025403784438597 * x1 * x176 * x214 * x7 * x8 * x9 - x1109 * x1174
    )
    result[1328] = x953 * (
        0.866025403784438597 * x1 * x168 * x220 * x7 * x8 * x9 - x1110 * x1185
    )
    result[1329] = x949 * (
        0.866025403784438597 * x1 * x164 * x228 * x7 * x8 * x9 - x1170 * x350
    )
    result[1330] = x1180 * x906 * (x1111 - x483)
    result[1331] = x909 * (-x1112 * x1180 + x1182 * x352)
    result[1332] = x909 * (-x1181 * x838 + x1182 * x353)
    result[1333] = x909 * (
        0.866025403784438597 * x1 * x114 * x288 * x5 * x7 * x8 * x9 - x1113 * x1180
    )
    result[1334] = x1181 * x917 * (x1114 - x1115)
    result[1335] = 0
    result[1336] = x906 * (
        0.866025403784438597 * x1 * x126 * x288 * x7 * x8 * x9 - x1118 * x1180
    )
    result[1337] = x909 * (
        0.866025403784438597 * x1 * x114 * x295 * x7 * x8 * x9 - x1119 * x1185
    )
    result[1338] = -x909 * (x1120 * x1185 - 0.866025403784438597 * x16 * x360)
    result[1339] = 0
    result[1340] = x869 * (x1121 * x1175 - x1169 * x362)
    result[1341] = -x878 * (0.866025403784438597 * x1124 * x361 - x1182 * x364)
    result[1342] = x878 * (-x1126 * x1169 + x1182 * x366)
    result[1343] = x878 * (
        0.866025403784438597 * x1 * x361 * x5 * x7 * x74 * x8 * x9 - x1157 * x367
    )
    result[1344] = 0
    result[1345] = 0
    result[1346] = x869 * (
        0.866025403784438597 * x1 * x361 * x7 * x8 * x87 * x9 - x1129 * x1185
    )
    result[1347] = x878 * (
        0.866025403784438597 * x1 * x365 * x7 * x74 * x8 * x9 - x1157 * x375
    )
    result[1348] = 0
    result[1349] = 0


@numba.jit(
    func_type.signature,
    nopython=True,
    nogil=True,
    fastmath=True,
    cache=True,
)
def multipole3d_sph_34(ax, da, A, bx, db, B, R, result):
    """See docstring of multipole3d_sph_43."""

    # Call equivalent function and write to result
    tmp = numpy.zeros_like(result)
    multipole3d_sph_43(bx, db, B, ax, da, A, R, tmp)
    result[:] = numpy.transpose(tmp.reshape(9, 15, 10), axes=(0, 2, 1)).flatten()


@numba.jit(
    func_type.signature,
    nopython=True,
    nogil=True,
    fastmath=True,
    cache=True,
)
def multipole3d_sph_44(ax, da, A, bx, db, B, R, result):
    """Primitive Cartesian 3D (gg) spherical multipole integrals.
    In contrast to the other multipole integrals, the origin R is calculated
    inside the function and is (possibly) unique for all primitive pairs.

    Generated code; DO NOT modify by hand!"""

    x0 = 2.0 * ax + 2.0 * bx
    x1 = x0 ** (-1.0)
    x2 = (ax + bx) ** (-1.0)
    x3 = -x2 * (ax * A[0] + bx * B[0])
    x4 = -x3 - B[0]
    x5 = -x3 - A[0]
    x6 = 1.77245385090551603
    x7 = numpy.sqrt(x2)
    x8 = x6 * x7
    x9 = ax * bx * x2
    x10 = numpy.exp(-x9 * (A[0] - B[0]) ** 2)
    x11 = x1 * x10
    x12 = x11 * x8
    x13 = x10 * x8
    x14 = x13 * x5
    x15 = x14 * x4
    x16 = x12 + x15
    x17 = x16 * x5
    x18 = x16 * x4
    x19 = x13 * x4
    x20 = x1 * (x14 + x19)
    x21 = 2.0 * x1 * (x17 + x18 + 2.0 * x20)
    x22 = 2.0 * x15
    x23 = x4**2
    x24 = x13 * x23
    x25 = 3.0 * x12
    x26 = x24 + x25
    x27 = x1 * (x22 + x26)
    x28 = x18 + x20
    x29 = x28 * x5
    x30 = x27 + x29
    x31 = x30 * x4
    x32 = x21 + x31
    x33 = x32 * x4
    x34 = x32 * x5
    x35 = x28 * x4
    x36 = 3.0 * x29
    x37 = x1 * (5.0 * x27 + 2.0 * x35 + x36)
    x38 = x30 * x5
    x39 = 3.0 * x1 * (2.0 * x21 + x31 + x38)
    x40 = x34 + x37
    x41 = x39 + x4 * x40
    x42 = x1 * (3.0 * x33 + 4.0 * x34 + 7.0 * x37) + x41 * x5
    x43 = da * db
    x44 = 0.00952380952380952467 * x43
    x45 = numpy.exp(-x9 * (A[2] - B[2]) ** 2)
    x46 = numpy.exp(-x9 * (A[1] - B[1]) ** 2)
    x47 = 3.14159265358979324 * x2 * x46
    x48 = x45 * x47
    x49 = x44 * x48
    x50 = -x2 * (ax * A[1] + bx * B[1])
    x51 = -x50 - B[1]
    x52 = x39 + x40 * x5
    x53 = 2.64575131106459059
    x54 = x49 * x53
    x55 = x52 * x54
    x56 = -x2 * (ax * A[2] + bx * B[2])
    x57 = -x56 - B[2]
    x58 = x5**2
    x59 = x13 * x58
    x60 = x25 + x59
    x61 = x1 * (x22 + x60)
    x62 = x17 + x20
    x63 = x5 * x62
    x64 = x21 + x38
    x65 = x1 * (3.0 * x27 + x36 + 2.0 * x61 + 2.0 * x63) + x5 * x64
    x66 = x45 * x8
    x67 = x65 * x66
    x68 = x46 * x8
    x69 = x51**2 * x68
    x70 = x1 * x68
    x71 = x69 + x70
    x72 = 10.2469507659595984 * x43
    x73 = 0.0031746031746031746 * x72
    x74 = x71 * x73
    x75 = x57 * x65
    x76 = 5.91607978309961604
    x77 = x49 * x76
    x78 = x51 * x77
    x79 = x57**2 * x66
    x80 = x1 * x66
    x81 = x79 + x80
    x82 = x73 * x81
    x83 = x51 * x71
    x84 = x51 * x70
    x85 = 2.0 * x84
    x86 = x83 + x85
    x87 = 3.0 * x20
    x88 = x12 + x59
    x89 = x5 * x88
    x90 = x12 * x5
    x91 = 2.0 * x90
    x92 = x89 + x91
    x93 = x61 + x63
    x94 = x1 * (3.0 * x17 + x87 + x92) + x5 * x93
    x95 = x44 * x66
    x96 = x53 * x95
    x97 = x57 * x66
    x98 = x94 * x97
    x99 = x44 * x76
    x100 = x71 * x99
    x101 = x51 * x68
    x102 = x81 * x99
    x103 = x68 * x94
    x104 = x57 * x81
    x105 = x57 * x80
    x106 = 2.0 * x105
    x107 = x104 + x106
    x108 = x44 * x53
    x109 = x107 * x108
    x110 = x1 * (x25 + 3.0 * x59) + x5 * x92
    x111 = 3.0 * x70
    x112 = x1 * (x111 + 3.0 * x69) + x51 * x86
    x113 = x110 * x86
    x114 = x108 * x97
    x115 = x110 * x71
    x116 = x101 * x110
    x117 = 3.0 * x80
    x118 = x1 * (x117 + 3.0 * x79) + x107 * x57
    x119 = x118 * x44
    x120 = x110 * x68
    x121 = -x50 - A[1]
    x122 = x41 * x54
    x123 = x121 * x68
    x124 = x123 * x51
    x125 = x124 + x70
    x126 = 0.0666666666666666657 * x43
    x127 = x126 * x66
    x128 = x127 * x40
    x129 = x40 * x48
    x130 = x126 * x129
    x131 = x121 * x57
    x132 = x1 * (x101 + x123)
    x133 = x125 * x51
    x134 = x132 + x133
    x135 = 3.87298334620741689 * x43
    x136 = 0.0222222222222222231 * x135
    x137 = x134 * x136
    x138 = x64 * x66
    x139 = 2.2360679774997897
    x140 = x126 * x139
    x141 = x140 * x97
    x142 = x141 * x64
    x143 = x136 * x81
    x144 = 2.0 * x124
    x145 = x111 + x69
    x146 = x1 * (x144 + x145)
    x147 = x134 * x51
    x148 = x146 + x147
    x149 = x134 * x93
    x150 = x125 * x93
    x151 = x140 * x81
    x152 = x107 * x126
    x153 = x123 * x93
    x154 = 3.0 * x132
    x155 = x1 * (3.0 * x133 + x154 + x86) + x148 * x51
    x156 = x155 * x66
    x157 = x108 * x92
    x158 = x126 * x92
    x159 = x148 * x97
    x160 = x134 * x92
    x161 = x107 * x125
    x162 = x118 * x123
    x163 = -x56 - A[2]
    x164 = x130 * x51
    x165 = x163 * x66
    x166 = x165 * x57
    x167 = x166 + x80
    x168 = x126 * x167
    x169 = x40 * x68
    x170 = x136 * x71
    x171 = x165 * x64
    x172 = x139 * x168
    x173 = x101 * x64
    x174 = x64 * x68
    x175 = x1 * (x165 + x97)
    x176 = x167 * x57
    x177 = x175 + x176
    x178 = x136 * x177
    x179 = x86 * x93
    x180 = x126 * x165
    x181 = x71 * x93
    x182 = x101 * x93
    x183 = x140 * x177
    x184 = 2.0 * x166
    x185 = x117 + x79
    x186 = x1 * (x184 + x185)
    x187 = x177 * x57
    x188 = x186 + x187
    x189 = x126 * x68
    x190 = x189 * x93
    x191 = x112 * x165
    x192 = x167 * x86
    x193 = x177 * x71
    x194 = x136 * x92
    x195 = x101 * x188
    x196 = 3.0 * x175
    x197 = x1 * (x107 + 3.0 * x176 + x196) + x188 * x57
    x198 = x197 * x68
    x199 = x121**2
    x200 = x199 * x68
    x201 = x200 + x70
    x202 = x33 + x37
    x203 = x66 * x73
    x204 = x121 * x125
    x205 = x132 + x204
    x206 = x136 * x66
    x207 = x136 * x201 * x32
    x208 = x121 * x134
    x209 = x146 + x208
    x210 = 0.111111111111111105 * x43
    x211 = x210 * x66
    x212 = x205 * x30
    x213 = 1.73205080756887729
    x214 = x210 * x213
    x215 = x214 * x97
    x216 = x201 * x30
    x217 = x210 * x81
    x218 = 2.0 * x1 * (2.0 * x132 + x133 + x204)
    x219 = x209 * x51
    x220 = x218 + x219
    x221 = x206 * x62
    x222 = x215 * x62
    x223 = x205 * x62
    x224 = x213 * x217
    x225 = x201 * x62
    x226 = x107 * x136
    x227 = 3.0 * x208
    x228 = x1 * (5.0 * x146 + 2.0 * x147 + x227)
    x229 = x220 * x51
    x230 = x228 + x229
    x231 = x230 * x66
    x232 = x73 * x88
    x233 = x136 * x88
    x234 = x220 * x97
    x235 = x209 * x88
    x236 = x205 * x88
    x237 = x118 * x201
    x238 = x121 * x202
    x239 = x238 * x77
    x240 = x140 * x165
    x241 = x240 * x32
    x242 = x123 * x32
    x243 = x134 * x30
    x244 = x165 * x214
    x245 = 0.333333333333333315 * x43
    x246 = x167 * x245
    x247 = x246 * x30
    x248 = x177 * x214
    x249 = x123 * x30
    x250 = x240 * x62
    x251 = x246 * x62
    x252 = x177 * x245
    x253 = x252 * x62
    x254 = x140 * x188
    x255 = x254 * x62
    x256 = x155 * x165
    x257 = x88 * x99
    x258 = x172 * x88
    x259 = x248 * x88
    x260 = x125 * x188
    x261 = x140 * x88
    x262 = x123 * x197
    x263 = x163**2
    x264 = x263 * x66
    x265 = x264 + x80
    x266 = x265 * x73
    x267 = x136 * x265
    x268 = x32 * x68
    x269 = x163 * x167
    x270 = x175 + x269
    x271 = x136 * x270
    x272 = x30 * x71
    x273 = x210 * x265
    x274 = x101 * x30
    x275 = x214 * x270
    x276 = x163 * x177
    x277 = x186 + x276
    x278 = x210 * x277
    x279 = x30 * x68
    x280 = x62 * x86
    x281 = x213 * x270
    x282 = x210 * x71
    x283 = x282 * x62
    x284 = x214 * x277
    x285 = x284 * x62
    x286 = 2.0 * x1 * (2.0 * x175 + x176 + x269)
    x287 = x277 * x57
    x288 = x286 + x287
    x289 = x288 * x62
    x290 = x136 * x68
    x291 = x112 * x265
    x292 = x270 * x86
    x293 = x277 * x88
    x294 = x101 * x288
    x295 = 3.0 * x276
    x296 = x1 * (5.0 * x186 + 2.0 * x187 + x295)
    x297 = x288 * x57
    x298 = x296 + x297
    x299 = x298 * x68
    x300 = x121 * x201
    x301 = x121 * x70
    x302 = 2.0 * x301
    x303 = x300 + x302
    x304 = x12 + x24
    x305 = x304 * x4
    x306 = x12 * x4
    x307 = 2.0 * x306
    x308 = x305 + x307
    x309 = x27 + x35
    x310 = x1 * (3.0 * x18 + x308 + x87) + x309 * x4
    x311 = x111 + x200
    x312 = x1 * (x144 + x311)
    x313 = x121 * x205
    x314 = x312 + x313
    x315 = x303 * x309
    x316 = x126 * x97
    x317 = x121 * x209
    x318 = x218 + x317
    x319 = x206 * x28
    x320 = x141 * x28
    x321 = x28 * x303
    x322 = x121 * x220
    x323 = x228 + x322
    x324 = x127 * x16
    x325 = x140 * x16
    x326 = x325 * x97
    x327 = x16 * x314
    x328 = x16 * x303
    x329 = 3.0 * x1 * (2.0 * x218 + x219 + x317)
    x330 = x323 * x51 + x329
    x331 = x10 * x44
    x332 = 3.14159265358979324 * x2
    x333 = x332 * x45
    x334 = x331 * x333
    x335 = x334 * x53
    x336 = x323 * x57
    x337 = x10 * x126
    x338 = x333 * x5
    x339 = x337 * x338
    x340 = x14 * x314
    x341 = x119 * x53
    x342 = x14 * x341
    x343 = x201 * x310 * x99
    x344 = x205 * x309
    x345 = x201 * x309
    x346 = x244 * x28
    x347 = x246 * x28
    x348 = x201 * x28
    x349 = x165 * x325
    x350 = x16 * x246
    x351 = x16 * x205
    x352 = x201 * x325
    x353 = x163 * x230
    x354 = x5 * x76
    x355 = x334 * x354
    x356 = x14 * x220
    x357 = x14 * x209
    x358 = x14 * x254
    x359 = x14 * x99
    x360 = x201 * x359
    x361 = x265 * x99
    x362 = x125 * x309
    x363 = x140 * x265
    x364 = x123 * x309
    x365 = x140 * x270
    x366 = x134 * x28
    x367 = x213 * x273
    x368 = x245 * x270
    x369 = x28 * x368
    x370 = x28 * x284
    x371 = x148 * x16
    x372 = x16 * x368
    x373 = x125 * x245
    x374 = x16 * x277
    x375 = x288 * x325
    x376 = x14 * x148
    x377 = x14 * x284
    x378 = x125 * x140
    x379 = x14 * x288
    x380 = x121 * x298
    x381 = x331 * x47
    x382 = x354 * x381
    x383 = x163 * x265
    x384 = x163 * x80
    x385 = 2.0 * x384
    x386 = x383 + x385
    x387 = x386 * x53
    x388 = x44 * x68
    x389 = x310 * x388
    x390 = x126 * x386
    x391 = x101 * x309
    x392 = x117 + x264
    x393 = x1 * (x184 + x392)
    x394 = x163 * x270
    x395 = x393 + x394
    x396 = x189 * x309
    x397 = x28 * x386
    x398 = x140 * x395
    x399 = x101 * x28
    x400 = x163 * x277
    x401 = x286 + x400
    x402 = x28 * x401
    x403 = x16 * x390
    x404 = x16 * x395
    x405 = x140 * x71
    x406 = x325 * x401
    x407 = x163 * x288
    x408 = x296 + x407
    x409 = x16 * x189
    x410 = x108 * x386
    x411 = x14 * x410
    x412 = x126 * x395
    x413 = x14 * x412
    x414 = x14 * x401
    x415 = x408 * x47
    x416 = x337 * x415
    x417 = x5 * x51
    x418 = 3.0 * x1 * (2.0 * x286 + x287 + x400)
    x419 = x408 * x57 + x418
    x420 = x381 * x53
    x421 = x419 * x420
    x422 = x1 * (x111 + 3.0 * x200) + x121 * x303
    x423 = x1 * (3.0 * x24 + x25) + x308 * x4
    x424 = x1 * (x154 + 3.0 * x204 + x303) + x121 * x314
    x425 = x114 * x308
    x426 = x1 * (3.0 * x146 + x227 + 2.0 * x312 + 2.0 * x313) + x121 * x318
    x427 = x426 * x66
    x428 = x304 * x73
    x429 = x424 * x97
    x430 = x304 * x99
    x431 = x304 * x422
    x432 = x121 * x323 + x329
    x433 = x335 * x432
    x434 = x426 * x57
    x435 = x4 * x76
    x436 = x334 * x435
    x437 = x19 * x422
    x438 = x1 * (7.0 * x228 + 3.0 * x229 + 4.0 * x322) + x121 * x330
    x439 = x13 * x424
    x440 = x119 * x13
    x441 = x303 * x423
    x442 = x108 * x165
    x443 = x180 * x308
    x444 = x303 * x308
    x445 = x165 * x318
    x446 = x136 * x304
    x447 = x172 * x304
    x448 = x303 * x304
    x449 = x337 * x4
    x450 = x163 * x323 * x333
    x451 = x19 * x318
    x452 = x19 * x314
    x453 = x126 * x188
    x454 = x19 * x453
    x455 = x13 * x323
    x456 = x13 * x318
    x457 = x126 * x13
    x458 = x188 * x457
    x459 = x13 * x44
    x460 = x459 * x53
    x461 = x197 * x460
    x462 = x201 * x423
    x463 = x205 * x308
    x464 = x136 * x201 * x308
    x465 = x209 * x304
    x466 = x205 * x214 * x304
    x467 = x210 * x304
    x468 = x201 * x277
    x469 = x19 * x209
    x470 = x19 * x284
    x471 = x136 * x288
    x472 = x19 * x201
    x473 = x13 * x220
    x474 = x13 * x278
    x475 = x13 * x471
    x476 = x201 * x298
    x477 = x13 * x73
    x478 = x123 * x423
    x479 = x308 * x390
    x480 = x308 * x412
    x481 = x304 * x386
    x482 = x125 * x395
    x483 = x140 * x304
    x484 = x123 * x401
    x485 = x148 * x19
    x486 = x19 * x398
    x487 = x19 * x401
    x488 = x121 * x4
    x489 = x387 * x459
    x490 = x395 * x457
    x491 = x13 * x401
    x492 = x125 * x408
    x493 = x1 * (x117 + 3.0 * x264) + x163 * x386
    x494 = x423 * x493
    x495 = x108 * x493
    x496 = x101 * x308
    x497 = x1 * (x196 + 3.0 * x269 + x386) + x163 * x395
    x498 = x308 * x497
    x499 = x388 * x53
    x500 = x304 * x493
    x501 = x101 * x497
    x502 = x1 * (3.0 * x186 + x295 + 2.0 * x393 + 2.0 * x394) + x163 * x401
    x503 = x502 * x68
    x504 = x19 * x495
    x505 = x19 * x497
    x506 = x502 * x51
    x507 = x381 * x435
    x508 = x163 * x408 + x418
    x509 = x420 * x508
    x510 = x112 * x493
    x511 = x497 * x86
    x512 = x13 * x502
    x513 = x1 * (7.0 * x296 + 3.0 * x297 + 4.0 * x407) + x163 * x419
    x514 = x1 * x52
    x515 = x514 * x54
    x516 = 0.0063492063492063492 * x72
    x517 = x1 * x48
    x518 = x51 * x517
    x519 = x1 * x75
    x520 = x1 * x145
    x521 = x1 * x69
    x522 = x520 + 2.0 * x521
    x523 = 0.0190476190476190493 * x43
    x524 = x523 * x76
    x525 = x518 * x57
    x526 = x524 * x525 * x94
    x527 = x70 * x94
    x528 = x1 * (x83 + 8.0 * x84) + x51 * x522
    x529 = x110 * x522
    x530 = x110 * x84
    x531 = x516 * x81
    x532 = x110 * x70
    x533 = x1 * x41
    x534 = x533 * x54
    x535 = x301 + x84
    x536 = x1 * x130
    x537 = x1 * (x111 + x124)
    x538 = x51 * x535
    x539 = x537 + x538
    x540 = x136 * x539
    x541 = x64 * x70
    x542 = x1 * (x134 + x302 + 4.0 * x84)
    x543 = x51 * x539
    x544 = x542 + x543
    x545 = x539 * x93
    x546 = x535 * x93
    x547 = x70 * x93
    x548 = 3.0 * x537
    x549 = x1 * (x148 + x522 + 3.0 * x538 + x548) + x51 * x544
    x550 = x544 * x97
    x551 = x539 * x92
    x552 = x107 * x535
    x553 = x70 * x92
    x554 = x1 * x163
    x555 = 0.0444444444444444461 * x135
    x556 = x555 * x64
    x557 = x48 * x554
    x558 = x51 * x557
    x559 = x522 * x93
    x560 = x84 * x93
    x561 = x139 * x43
    x562 = 0.133333333333333331 * x561
    x563 = x167 * x562
    x564 = x165 * x528
    x565 = x167 * x522
    x566 = x84 * x92
    x567 = x177 * x555
    x568 = x188 * x70
    x569 = x121 * x535
    x570 = x537 + x569
    x571 = x131 * x517
    x572 = x32 * x555
    x573 = x121 * x539
    x574 = x542 + x573
    x575 = x30 * x301
    x576 = 0.22222222222222221 * x43
    x577 = x576 * x81
    x578 = 2.0 * x569
    x579 = 4.0 * x537
    x580 = 2.0 * x538 + x579
    x581 = x1 * (x209 + x578 + x580)
    x582 = x51 * x574
    x583 = x581 + x582
    x584 = x570 * x62
    x585 = x301 * x62
    x586 = x107 * x555
    x587 = 2.0 * x543
    x588 = 3.0 * x573
    x589 = x1 * (x220 + 5.0 * x542 + x587 + x588)
    x590 = x51 * x583
    x591 = x589 + x590
    x592 = x574 * x88
    x593 = x570 * x88
    x594 = x301 * x88
    x595 = x202 * x554
    x596 = x32 * x70
    x597 = x30 * x70
    x598 = x188 * x535
    x599 = x30 * x84
    x600 = x265 * x576
    x601 = x522 * x62
    x602 = x62 * x84
    x603 = x281 * x576
    x604 = x265 * x528
    x605 = x270 * x522
    x606 = x288 * x70
    x607 = x1 * x311
    x608 = x199 * x70
    x609 = x607 + 2.0 * x608
    x610 = x1 * (x205 + 4.0 * x301 + x85)
    x611 = x121 * x570
    x612 = x610 + x611
    x613 = x309 * x609
    x614 = x121 * x574
    x615 = x581 + x614
    x616 = x28 * x609
    x617 = x121 * x583
    x618 = x589 + x617
    x619 = x16 * x612
    x620 = x16 * x609
    x621 = x1 * (x323 + 6.0 * x581 + 3.0 * x582 + 3.0 * x614)
    x622 = x51 * x618
    x623 = x621 + x622
    x624 = x335 * x623
    x625 = x57 * x618
    x626 = x14 * x612
    x627 = x121 * x557
    x628 = x310 * x524 * x627
    x629 = x309 * x570
    x630 = x301 * x309
    x631 = x28 * x301
    x632 = x177 * x213
    x633 = x576 * x632
    x634 = x16 * x570
    x635 = x188 * x301
    x636 = x163 * x591
    x637 = x14 * x583
    x638 = x14 * x574
    x639 = x197 * x354
    x640 = x11 * x47
    x641 = x523 * x640
    x642 = x121 * x639 * x641
    x643 = x310 * x70
    x644 = x309 * x535
    x645 = x309 * x70
    x646 = x28 * x539
    x647 = x265 * x544
    x648 = x265 * x549
    x649 = x14 * x544
    x650 = x140 * x535
    x651 = x11 * x99
    x652 = x298 * x47
    x653 = x5 * x652
    x654 = x395 * x70
    x655 = x140 * x28
    x656 = x555 * x640
    x657 = x417 * x656
    x658 = x11 * x126
    x659 = x415 * x658
    x660 = x1 * (x300 + 8.0 * x301) + x121 * x609
    x661 = x1 * (x314 + x548 + 3.0 * x569 + x609) + x121 * x612
    x662 = 2.0 * x610 + 2.0 * x611
    x663 = x1 * (x318 + 3.0 * x542 + x588 + x662) + x121 * x615
    x664 = x304 * x660
    x665 = x121 * x618 + x621
    x666 = x335 * x665
    x667 = x57 * x663
    x668 = x19 * x660
    x669 = x423 * x609
    x670 = x308 * x609
    x671 = x304 * x609
    x672 = x333 * x618
    x673 = x163 * x672
    x674 = x19 * x615
    x675 = x19 * x612
    x676 = x13 * x618
    x677 = x13 * x615
    x678 = x301 * x423
    x679 = x308 * x570
    x680 = x301 * x308
    x681 = x304 * x574
    x682 = x281 * x570
    x683 = x301 * x304
    x684 = x19 * x574
    x685 = x488 * x656
    x686 = x13 * x583
    x687 = x516 * x640
    x688 = x386 * x70
    x689 = x395 * x535
    x690 = x401 * x70
    x691 = x19 * x544
    x692 = x108 * x11
    x693 = x47 * x692
    x694 = x419 * x693
    x695 = x308 * x70
    x696 = x435 * x497
    x697 = x51 * x641 * x696
    x698 = x47 * x502
    x699 = x4 * x698
    x700 = x508 * x693
    x701 = x48 * x516
    x702 = x1 * x185
    x703 = x1 * x79
    x704 = x702 + 2.0 * x703
    x705 = x108 * x704
    x706 = x108 * x80
    x707 = x105 * x516
    x708 = x1 * (x104 + 8.0 * x105) + x57 * x704
    x709 = x44 * x708
    x710 = x64 * x80
    x711 = x140 * x80
    x712 = x105 * x562
    x713 = x126 * x704
    x714 = x148 * x80
    x715 = x105 * x555
    x716 = x125 * x704
    x717 = x53 * x709
    x718 = x105 + x384
    x719 = x126 * x718
    x720 = x139 * x719
    x721 = x117 + x166
    x722 = x1 * x721
    x723 = x57 * x718
    x724 = x722 + x723
    x725 = x136 * x724
    x726 = x126 * x80
    x727 = x140 * x724
    x728 = x1 * (4.0 * x105 + x177 + x385)
    x729 = x57 * x724
    x730 = x728 + x729
    x731 = x112 * x80
    x732 = x718 * x86
    x733 = x71 * x724
    x734 = x101 * x730
    x735 = 3.0 * x722
    x736 = x1 * (x188 + x704 + 3.0 * x723 + x735) + x57 * x730
    x737 = x214 * x80
    x738 = x105 * x576
    x739 = x209 * x737
    x740 = x136 * x704
    x741 = x220 * x80
    x742 = x201 * x708
    x743 = x32 * x80
    x744 = x30 * x718
    x745 = x214 * x724
    x746 = x140 * x62
    x747 = x245 * x718
    x748 = x62 * x724
    x749 = x125 * x730
    x750 = x163 * x718
    x751 = x722 + x750
    x752 = x136 * x751
    x753 = x384 * x576
    x754 = x214 * x751
    x755 = x163 * x724
    x756 = x728 + x755
    x757 = x210 * x756
    x758 = x384 * x555
    x759 = x213 * x751
    x760 = x214 * x756
    x761 = 2.0 * x750
    x762 = 4.0 * x722
    x763 = 2.0 * x723 + x762
    x764 = x1 * (x277 + x761 + x763)
    x765 = x57 * x756
    x766 = x764 + x765
    x767 = x751 * x86
    x768 = x756 * x88
    x769 = 2.0 * x729
    x770 = 3.0 * x755
    x771 = x1 * (x288 + 5.0 * x728 + x769 + x770)
    x772 = x57 * x766
    x773 = x771 + x772
    x774 = x314 * x80
    x775 = x318 * x80
    x776 = x323 * x333
    x777 = x658 * x776
    x778 = x318 * x57
    x779 = x11 * x338
    x780 = x555 * x779
    x781 = x230 * x338
    x782 = x384 * x562
    x783 = x140 * x751
    x784 = x28 * x751
    x785 = x16 * x751
    x786 = x16 * x756
    x787 = x123 * x766
    x788 = x163 * x779
    x789 = x155 * x524 * x788
    x790 = x14 * x766
    x791 = x121 * x773
    x792 = x1 * x392
    x793 = x263 * x80
    x794 = x792 + 2.0 * x793
    x795 = x53 * x794
    x796 = x126 * x794
    x797 = x1 * (x106 + x270 + 4.0 * x384)
    x798 = x163 * x751
    x799 = x797 + x798
    x800 = x28 * x794
    x801 = x140 * x799
    x802 = x163 * x756
    x803 = x764 + x802
    x804 = x71 * x799
    x805 = x101 * x803
    x806 = x163 * x766
    x807 = x771 + x806
    x808 = x108 * x794
    x809 = x126 * x799
    x810 = x47 * x807
    x811 = x1 * (x408 + 6.0 * x764 + 3.0 * x765 + 3.0 * x802)
    x812 = x57 * x807
    x813 = x811 + x812
    x814 = x420 * x813
    x815 = x11 * x333
    x816 = x815 * x99
    x817 = x4 * x426
    x818 = x435 * x57 * x815
    x819 = x424 * x523 * x818
    x820 = x333 * x692
    x821 = x432 * x820
    x822 = x516 * x815
    x823 = x19 * x730
    x824 = x330 * x820
    x825 = x201 * x756
    x826 = x163 * x555 * x815
    x827 = x13 * x766
    x828 = x304 * x794
    x829 = x125 * x799
    x830 = x19 * x803
    x831 = x121 * x810
    x832 = x13 * x803
    x833 = x1 * (x383 + 8.0 * x384) + x163 * x794
    x834 = x108 * x833
    x835 = x1 * (x395 + x735 + 3.0 * x750 + x794) + x163 * x799
    x836 = x304 * x833
    x837 = 2.0 * x797 + 2.0 * x798
    x838 = x1 * (x401 + 3.0 * x728 + x770 + x837) + x163 * x803
    x839 = x51 * x838
    x840 = x163 * x807 + x811
    x841 = x420 * x840
    x842 = x306 + x90
    x843 = x5 * x842
    x844 = 2.0 * x843
    x845 = x4 * x842
    x846 = x15 + x25
    x847 = x1 * x846
    x848 = 4.0 * x847
    x849 = 2.0 * x845 + x848
    x850 = x1 * (x30 + x844 + x849)
    x851 = x1 * (x28 + 4.0 * x306 + x91)
    x852 = x845 + x847
    x853 = x5 * x852
    x854 = x851 + x853
    x855 = x4 * x854
    x856 = x850 + x855
    x857 = x4 * x856
    x858 = x5 * x856
    x859 = x4 * x852
    x860 = 2.0 * x859
    x861 = 3.0 * x853
    x862 = x1 * (x32 + 5.0 * x851 + x860 + x861)
    x863 = x5 * x854
    x864 = x1 * (x40 + 6.0 * x850 + 3.0 * x855 + 3.0 * x863)
    x865 = x858 + x862
    x866 = x4 * x865
    x867 = x864 + x866
    x868 = x5 * x865 + x864
    x869 = x54 * x868
    x870 = x1 * (x307 + x62 + 4.0 * x90)
    x871 = x843 + x847
    x872 = x5 * x871
    x873 = 2.0 * x870 + 2.0 * x872
    x874 = x850 + x863
    x875 = x1 * (x64 + 3.0 * x851 + x861 + x873) + x5 * x874
    x876 = x57 * x875
    x877 = 3.0 * x847
    x878 = x1 * x60
    x879 = x12 * x58
    x880 = x878 + 2.0 * x879
    x881 = x870 + x872
    x882 = x1 * (3.0 * x843 + x877 + x880 + x93) + x5 * x881
    x883 = x1 * (x89 + 8.0 * x90) + x5 * x880
    x884 = x86 * x883
    x885 = x71 * x883
    x886 = x101 * x883
    x887 = x68 * x883
    x888 = x54 * x867
    x889 = x48 * x865
    x890 = x126 * x889
    x891 = x66 * x874
    x892 = x125 * x874
    x893 = x125 * x881
    x894 = x123 * x881
    x895 = x108 * x880
    x896 = x126 * x880
    x897 = x134 * x880
    x898 = x163 * x51
    x899 = x68 * x865
    x900 = x101 * x874
    x901 = x68 * x874
    x902 = x86 * x881
    x903 = x71 * x881
    x904 = x857 + x862
    x905 = x201 * x856
    x906 = x205 * x854
    x907 = x201 * x854
    x908 = x209 * x871
    x909 = x205 * x871
    x910 = x201 * x871
    x911 = x11 * x516
    x912 = x209 * x90
    x913 = x205 * x90
    x914 = x516 * x90
    x915 = x121 * x904
    x916 = x125 * x856
    x917 = x123 * x856
    x918 = x134 * x854
    x919 = x125 * x854
    x920 = x123 * x854
    x921 = x134 * x871
    x922 = x125 * x871
    x923 = x123 * x871
    x924 = x148 * x90
    x925 = x134 * x90
    x926 = x68 * x856
    x927 = x71 * x854
    x928 = x101 * x854
    x929 = x68 * x854
    x930 = x86 * x871
    x931 = x281 * x871
    x932 = x101 * x871
    x933 = x277 * x71
    x934 = x1 * x26
    x935 = x12 * x23
    x936 = x934 + 2.0 * x935
    x937 = x851 + x859
    x938 = x1 * (x309 + 3.0 * x845 + x877 + x936) + x4 * x937
    x939 = x303 * x937
    x940 = x314 * x852
    x941 = x303 * x852
    x942 = x314 * x842
    x943 = x303 * x842
    x944 = x12 * x318
    x945 = x12 * x314
    x946 = x12 * x303
    x947 = x201 * x99
    x948 = x201 * x937
    x949 = x209 * x852
    x950 = x205 * x852
    x951 = x201 * x852
    x952 = x209 * x842
    x953 = x205 * x842
    x954 = x12 * x220
    x955 = x12 * x209
    x956 = x12 * x205
    x957 = x125 * x937
    x958 = x134 * x852
    x959 = x125 * x852
    x960 = x123 * x852
    x961 = x148 * x842
    x962 = x134 * x842
    x963 = x277 * x842
    x964 = x140 * x842
    x965 = x12 * x155
    x966 = x12 * x148
    x967 = x12 * x134
    x968 = x12 * x378
    x969 = x640 * x99
    x970 = x101 * x937
    x971 = x386 * x852
    x972 = x101 * x852
    x973 = x842 * x86
    x974 = x395 * x842
    x975 = x112 * x12
    x976 = x12 * x86
    x977 = x12 * x401
    x978 = x1 * (x305 + 8.0 * x306) + x4 * x936
    x979 = x422 * x936
    x980 = x306 * x422
    x981 = x12 * x424
    x982 = x12 * x422
    x983 = x303 * x978
    x984 = x303 * x936
    x985 = x318 * x4
    x986 = x306 * x314
    x987 = x303 * x306
    x988 = x201 * x978
    x989 = x205 * x936
    x990 = x201 * x936
    x991 = x209 * x306
    x992 = x205 * x306
    x993 = x12 * x201
    x994 = x123 * x978
    x995 = x125 * x936
    x996 = x134 * x306
    x997 = x101 * x936
    x998 = x493 * x71
    x999 = 0.0164957219768464523 * x43
    x1000 = x53 * x999
    x1001 = x1000 * x517
    x1002 = x1001 * x868
    x1003 = 0.0109971479845643004 * x72
    x1004 = x518 * x875
    x1005 = x76 * x999
    x1006 = x517 * x876
    x1007 = x66 * x999
    x1008 = x1007 * x53
    x1009 = 0.0329914439536929047 * x43
    x1010 = x1009 * x76
    x1011 = x1010 * x525 * x882
    x1012 = x1005 * x70
    x1013 = x1000 * x883
    x1014 = x1003 * x81
    x1015 = x107 * x70
    x1016 = x1001 * x867
    x1017 = 0.115470053837925149 * x43
    x1018 = x1017 * x535
    x1019 = x1017 * x889
    x1020 = x1 * x1019
    x1021 = 0.0384900179459750497 * x135
    x1022 = x1021 * x539
    x1023 = x1018 * x139
    x1024 = x1021 * x81
    x1025 = x70 * x874
    x1026 = x1017 * x66
    x1027 = x1017 * x881
    x1028 = x1027 * x139
    x1029 = x139 * x81
    x1030 = x1017 * x880
    x1031 = x1000 * x880
    x1032 = 0.0769800358919500993 * x135
    x1033 = x1032 * x874
    x1034 = x1017 * x139
    x1035 = x1034 * x167
    x1036 = 0.230940107675850298 * x561
    x1037 = x1036 * x167
    x1038 = x177 * x70
    x1039 = x1032 * x84
    x1040 = x517 * x915
    x1041 = x1021 * x66
    x1042 = x1032 * x856
    x1043 = 0.192450089729875234 * x43
    x1044 = x1043 * x574
    x1045 = x1043 * x213
    x1046 = x1045 * x570
    x1047 = 0.384900179459750469 * x43
    x1048 = x1047 * x81
    x1049 = x1045 * x871
    x1050 = x1032 * x107
    x1051 = x591 * x779
    x1052 = x1032 * x583
    x1053 = x57 * x779
    x1054 = x10 * x47
    x1055 = x0 ** (-2.0)
    x1056 = 0.0219942959691286008 * x1055 * x72
    x1057 = x1054 * x1056
    x1058 = x557 * x904
    x1059 = x70 * x856
    x1060 = x1045 * x539
    x1061 = 0.577350269189625731 * x43
    x1062 = x1061 * x167
    x1063 = x1034 * x871
    x1064 = x1061 * x177
    x1065 = x1010 * x549 * x788
    x1066 = x1047 * x632
    x1067 = x1036 * x90
    x1068 = x1055 * x43
    x1069 = 0.0329914439536929047 * x1068
    x1070 = x1054 * x1069
    x1071 = x1021 * x265
    x1072 = x1047 * x265
    x1073 = x1047 * x84
    x1074 = x277 * x70
    x1075 = x1003 * x90
    x1076 = x1032 * x90
    x1077 = 0.769800358919500938 * x1068
    x1078 = x1054 * x1077 * x277
    x1079 = x1032 * x1055
    x1080 = x1054 * x1079
    x1081 = x1080 * x288
    x1082 = x1017 * x937
    x1083 = x1021 * x852
    x1084 = x1034 * x852
    x1085 = x1017 * x842
    x1086 = x1085 * x139
    x1087 = x1000 * x815
    x1088 = x1087 * x623
    x1089 = x1017 * x12
    x1090 = x1089 * x612
    x1091 = x1000 * x12
    x1092 = x1010 * x627 * x938
    x1093 = x139 * x570
    x1094 = x1045 * x574
    x1095 = x1005 * x815
    x1096 = x139 * x583
    x1097 = x1089 * x167
    x1098 = x1089 * x188
    x1099 = x1070 * x76
    x1100 = x139 * x270
    x1101 = x1061 * x270
    x1102 = x1061 * x535
    x1103 = x1005 * x12
    x1104 = x1089 * x544
    x1105 = x12 * x277
    x1106 = x1005 * x1055
    x1107 = x10 * x1106
    x1108 = x1036 * x84
    x1109 = x387 * x999
    x1110 = x1089 * x395
    x1111 = x1080 * x401
    x1112 = x1017 * x1055
    x1113 = x10 * x1112
    x1114 = x1113 * x415
    x1115 = x1000 * x936
    x1116 = x4 * x663
    x1117 = x1003 * x815
    x1118 = x1009 * x661 * x818
    x1119 = x1087 * x665
    x1120 = x1017 * x936
    x1121 = x1032 * x615
    x1122 = x163 * x4 * x815
    x1123 = x1032 * x306
    x1124 = x1017 * x11
    x1125 = x139 * x615
    x1126 = x1047 * x306
    x1127 = x1036 * x306
    x1128 = x139 * x539
    x1129 = x1106 * x48
    x1130 = x48 * x51
    x1131 = x1069 * x76
    x1132 = x1131 * x94
    x1133 = x48 * x57
    x1134 = x1000 * x80
    x1135 = x1056 * x57
    x1136 = x1000 * x704
    x1137 = x1112 * x129
    x1138 = x1079 * x64
    x1139 = x1017 * x80
    x1140 = x1139 * x139
    x1141 = x1036 * x105
    x1142 = x1017 * x704
    x1143 = x1017 * x92
    x1144 = x544 * x80
    x1145 = x1032 * x105
    x1146 = x708 * x999
    x1147 = x1146 * x53
    x1148 = x1017 * x718
    x1149 = x1148 * x139
    x1150 = x1036 * x718
    x1151 = x1034 * x724
    x1152 = x1032 * x724
    x1153 = x70 * x730
    x1154 = x121 * x48
    x1155 = x1079 * x32
    x1156 = x30 * x80
    x1157 = x1077 * x30 * x48
    x1158 = x1094 * x80
    x1159 = x1047 * x105
    x1160 = x1159 * x213
    x1161 = x1032 * x704
    x1162 = x80 * x88
    x1163 = x1021 * x704
    x1164 = x1045 * x724
    x1165 = x1034 * x62
    x1166 = x1061 * x718
    x1167 = x163 * x48
    x1168 = x1043 * x759
    x1169 = x1032 * x384
    x1170 = x1047 * x759
    x1171 = x1045 * x756
    x1172 = x1171 * x70
    x1173 = x1003 * x384
    x1174 = x1021 * x751
    x1175 = x1021 * x766
    x1176 = x1139 * x612
    x1177 = x139 * x28
    x1178 = x1139 * x16
    x1179 = x1131 * x310
    x1180 = x1047 * x213 * x724
    x1181 = x1061 * x724
    x1182 = x1036 * x16
    x1183 = x1017 * x730
    x1184 = x1009 * x640
    x1185 = x1184 * x121 * x354 * x736
    x1186 = x1036 * x384
    x1187 = x1034 * x751
    x1188 = x1047 * x384
    x1189 = x1188 * x213
    x1190 = x1034 * x16 * x70
    x1191 = x1005 * x640
    x1192 = x5 * x773
    x1193 = x1017 * x794
    x1194 = x1017 * x799
    x1195 = x795 * x999
    x1196 = x1032 * x640
    x1197 = x1196 * x417
    x1198 = x1124 * x810
    x1199 = x304 * x80
    x1200 = x1003 * x105
    x1201 = x13 * x999
    x1202 = x1201 * x53
    x1203 = x1021 * x724
    x1204 = x1017 * x13
    x1205 = x1056 * x163
    x1206 = x1047 * x756
    x1207 = x1196 * x488
    x1208 = x1003 * x640
    x1209 = x1021 * x803
    x1210 = x1000 * x640
    x1211 = x1210 * x813
    x1212 = x1000 * x833
    x1213 = x1184 * x435 * x51 * x835
    x1214 = x4 * x838
    x1215 = x1210 * x840
    x1216 = 0.5 * x45
    x1217 = 2.0 * x851
    x1218 = x1 * x25 * (x4 + x5)
    x1219 = x5 * x847
    x1220 = x4 * x847
    x1221 = x1 * (x1217 + 4.0 * x1218 + 2.0 * x1219 + 2.0 * x1220 + 2.0 * x853)
    x1222 = 3.0 * x1055
    x1223 = x1222 * x13
    x1224 = x1223 + x935
    x1225 = x1 * (x1224 + x849)
    x1226 = x1218 + x1220
    x1227 = x1226 * x5
    x1228 = x1225 + x1227
    x1229 = x1228 * x4
    x1230 = x1221 + x1229
    x1231 = x1230 * x4
    x1232 = x1230 * x5
    x1233 = x1226 * x4
    x1234 = 3.0 * x1227 + 2.0 * x850
    x1235 = x1 * (5.0 * x1225 + 2.0 * x1233 + x1234 + 2.0 * x855)
    x1236 = x1228 * x5
    x1237 = x1 * (6.0 * x1221 + 3.0 * x1229 + 3.0 * x1236 + 2.0 * x858 + 2.0 * x862)
    x1238 = x1232 + x1235
    x1239 = x1237 + x1238 * x4
    x1240 = x47 * (
        x1 * (3.0 * x1231 + 4.0 * x1232 + 7.0 * x1235 + 2.0 * x864 + 2.0 * x866)
        + x1239 * x5
    )
    x1241 = 0.00952380952380952381 * x43
    x1242 = x1237 + x1238 * x5
    x1243 = x1216 * x47
    x1244 = x1242 * x1243
    x1245 = x1241 * x53
    x1246 = x1222 * x68
    x1247 = x1246 + x521
    x1248 = 0.5 * x1247
    x1249 = 0.5 * x66
    x1250 = x1223 + x879
    x1251 = x1 * (x1250 + x844 + x848)
    x1252 = x1218 + x1219
    x1253 = x1252 * x5
    x1254 = x1221 + x1236
    x1255 = (
        x1 * (3.0 * x1225 + x1234 + 2.0 * x1251 + 2.0 * x1253 + 2.0 * x863) + x1254 * x5
    )
    x1256 = 0.0031746031746031746 * x72
    x1257 = x1243 * x51
    x1258 = x1255 * x57
    x1259 = x1241 * x76
    x1260 = 0.5 * x81
    x1261 = x1255 * x68
    x1262 = x1222 * x66
    x1263 = x1262 + x703
    x1264 = x65 * x70
    x1265 = 6.0 * x1055
    x1266 = x101 * x1265 + x1247 * x51
    x1267 = x1266 * x94
    x1268 = 3.0 * x1218
    x1269 = x1250 * x5 + x1265 * x14
    x1270 = x1251 + x1253
    x1271 = x1 * (x1268 + x1269 + x5 * x877 + x873) + x1270 * x5
    x1272 = 0.5 * x97
    x1273 = x101 * x1271
    x1274 = x84 * x94
    x1275 = 0.5 * x107
    x1276 = x1271 * x68
    x1277 = x1263 * x57 + x1265 * x97
    x1278 = 9.0 * x1055
    x1279 = x1278 * x68
    x1280 = x1 * (x1279 + 2.0 * x520 + 7.0 * x521) + x1266 * x51
    x1281 = x110 * x1280
    x1282 = x1278 * x13
    x1283 = x1 * (x1282 + 2.0 * x878 + 7.0 * x879) + x1269 * x5
    x1284 = x110 * x1266
    x1285 = x110 * x1247
    x1286 = x101 * x1283
    x1287 = 0.5 * x118
    x1288 = x1283 * x68
    x1289 = x1278 * x66
    x1290 = x1 * (x1289 + 2.0 * x702 + 7.0 * x703) + x1277 * x57
    x1291 = x1239 * x1243
    x1292 = x1238 * x125
    x1293 = x40 * x537
    x1294 = 0.0666666666666666667 * x43
    x1295 = x121 * x1238
    x1296 = x1 * x111 * (x121 + x51)
    x1297 = x51 * x537
    x1298 = x1296 + x1297
    x1299 = x1298 * x64
    x1300 = 0.0222222222222222222 * x135
    x1301 = x125 * x1254
    x1302 = x537 * x64
    x1303 = x1294 * x139
    x1304 = x123 * x1254
    x1305 = x301 * x64
    x1306 = x1 * (x1247 + x580)
    x1307 = x1298 * x51
    x1308 = x1306 + x1307
    x1309 = x1308 * x93
    x1310 = x1298 * x93
    x1311 = x125 * x1270
    x1312 = x537 * x93
    x1313 = x123 * x1270
    x1314 = x301 * x93
    x1315 = 0.5 * x1269
    x1316 = 2.0 * x542
    x1317 = 3.0 * x1296
    x1318 = x1 * (x1266 + x1316 + x1317 + x51 * x548 + x587) + x1308 * x51
    x1319 = x1318 * x92
    x1320 = x1308 * x92
    x1321 = x1298 * x92
    x1322 = x537 * x92
    x1323 = x301 * x92
    x1324 = x1238 * x163
    x1325 = 0.5 * x167
    x1326 = x1238 * x68
    x1327 = x40 * x70
    x1328 = 0.5 * x165
    x1329 = x101 * x1254
    x1330 = x64 * x84
    x1331 = 0.5 * x177
    x1332 = x1254 * x68
    x1333 = x1 * x117 * (x163 + x57)
    x1334 = x57 * x722
    x1335 = x1333 + x1334
    x1336 = x1266 * x93
    x1337 = x1247 * x93
    x1338 = x101 * x1270
    x1339 = 0.5 * x188
    x1340 = x1270 * x68
    x1341 = x1 * (x1263 + x763)
    x1342 = x1335 * x57
    x1343 = x1341 + x1342
    x1344 = x1280 * x92
    x1345 = x1266 * x92
    x1346 = x1247 * x92
    x1347 = 2.0 * x728
    x1348 = 3.0 * x1333
    x1349 = x1 * (x1277 + x1347 + x1348 + x57 * x735 + x769) + x1343 * x57
    x1350 = 0.5 * x70
    x1351 = x197 * x92
    x1352 = x1246 + x608
    x1353 = x1352 * x202
    x1354 = x1231 + x1235
    x1355 = x1230 * x205
    x1356 = x121 * x537
    x1357 = x1296 + x1356
    x1358 = x1357 * x32
    x1359 = x1352 * x32
    x1360 = x121 * x1298
    x1361 = x1306 + x1360
    x1362 = x1361 * x30
    x1363 = 0.111111111111111111 * x43
    x1364 = x1357 * x30
    x1365 = x1363 * x213
    x1366 = x1352 * x30
    x1367 = x1 * (4.0 * x1296 + 2.0 * x1297 + x1316 + 2.0 * x1356 + 2.0 * x573)
    x1368 = x1361 * x51
    x1369 = x1367 + x1368
    x1370 = x1369 * x62
    x1371 = x1361 * x62
    x1372 = x1357 * x62
    x1373 = x1352 * x62
    x1374 = 0.5 * x1250
    x1375 = 3.0 * x1360 + 2.0 * x581
    x1376 = x1 * (5.0 * x1306 + 2.0 * x1307 + x1375 + 2.0 * x582)
    x1377 = x1369 * x51
    x1378 = x1376 + x1377
    x1379 = x1378 * x88
    x1380 = x1369 * x88
    x1381 = x1250 * x209
    x1382 = x1361 * x88
    x1383 = x1250 * x205
    x1384 = x1357 * x88
    x1385 = x1352 * x88
    x1386 = x1354 * x163
    x1387 = x1230 * x125
    x1388 = x32 * x537
    x1389 = x123 * x1230
    x1390 = x301 * x32
    x1391 = x1298 * x30
    x1392 = x1228 * x125
    x1393 = x30 * x537
    x1394 = 0.333333333333333333 * x43
    x1395 = x1228 * x123
    x1396 = x1308 * x62
    x1397 = x1298 * x62
    x1398 = x125 * x1252
    x1399 = x537 * x62
    x1400 = x123 * x1252
    x1401 = x1318 * x88
    x1402 = x1250 * x148
    x1403 = x1308 * x88
    x1404 = x1250 * x134
    x1405 = x1298 * x88
    x1406 = x537 * x88
    x1407 = 0.5 * x197
    x1408 = 0.5 * x265
    x1409 = x1354 * x68
    x1410 = x1262 + x793
    x1411 = x202 * x70
    x1412 = x101 * x1230
    x1413 = x32 * x84
    x1414 = 0.5 * x270
    x1415 = x1230 * x68
    x1416 = x163 * x722
    x1417 = x1333 + x1416
    x1418 = x1247 * x30
    x1419 = x101 * x1228
    x1420 = 0.5 * x277
    x1421 = x1228 * x68
    x1422 = x1335 * x163
    x1423 = x1341 + x1422
    x1424 = x1266 * x62
    x1425 = x1247 * x62
    x1426 = x101 * x1252
    x1427 = 0.5 * x68
    x1428 = x1252 * x288
    x1429 = x1 * (4.0 * x1333 + 2.0 * x1334 + x1347 + 2.0 * x1416 + 2.0 * x755)
    x1430 = x1423 * x57
    x1431 = x1429 + x1430
    x1432 = x1280 * x88
    x1433 = x1266 * x88
    x1434 = 0.5 * x288
    x1435 = x84 * x88
    x1436 = 3.0 * x1422 + 2.0 * x764
    x1437 = x1 * (5.0 * x1341 + 2.0 * x1342 + x1436 + 2.0 * x765)
    x1438 = x1431 * x57
    x1439 = x1437 + x1438
    x1440 = x298 * x88
    x1441 = x121 * x1352 + x123 * x1265
    x1442 = x1441 * x310
    x1443 = x1224 * x4 + x1265 * x19
    x1444 = x1225 + x1233
    x1445 = x1 * (x1217 + x1268 + x1443 + x4 * x877 + x860) + x1444 * x4
    x1446 = x1445 * x303
    x1447 = x1444 * x314
    x1448 = x1 * (x1352 + x578 + x579)
    x1449 = x121 * x1357
    x1450 = x1448 + x1449
    x1451 = x1450 * x309
    x1452 = x1441 * x309
    x1453 = x1444 * x303
    x1454 = x121 * x1361
    x1455 = x1367 + x1454
    x1456 = x1455 * x28
    x1457 = x1226 * x318
    x1458 = x1450 * x28
    x1459 = x1226 * x314
    x1460 = x1441 * x28
    x1461 = x1226 * x303
    x1462 = 0.5 * x16
    x1463 = x121 * x1369
    x1464 = x1376 + x1463
    x1465 = x1464 * x66
    x1466 = x1455 * x97
    x1467 = x1450 * x16
    x1468 = x1441 * x16
    x1469 = x1 * (6.0 * x1367 + 3.0 * x1368 + 3.0 * x1454 + 2.0 * x589 + 2.0 * x617)
    x1470 = x1464 * x51 + x1469
    x1471 = x1216 * x332
    x1472 = x10 * x1471
    x1473 = x1470 * x1472
    x1474 = x1472 * x5
    x1475 = x1464 * x57
    x1476 = x14 * x1455
    x1477 = x14 * x1450
    x1478 = x14 * x1441
    x1479 = x1352 * x310
    x1480 = x1444 * x205
    x1481 = x1357 * x309
    x1482 = x1352 * x309
    x1483 = x1361 * x28
    x1484 = x1226 * x209
    x1485 = x1357 * x28
    x1486 = x1226 * x205
    x1487 = x1352 * x28
    x1488 = x1369 * x165
    x1489 = x1361 * x16
    x1490 = x1357 * x16
    x1491 = x1352 * x188
    x1492 = x1378 * x163
    x1493 = x1369 * x14
    x1494 = x1361 * x14
    x1495 = x1357 * x14
    x1496 = x1352 * x14
    x1497 = x123 * x1445
    x1498 = x301 * x310
    x1499 = x125 * x1444
    x1500 = x309 * x537
    x1501 = x123 * x1444
    x1502 = x1298 * x28
    x1503 = x1226 * x125
    x1504 = x28 * x537
    x1505 = x1226 * x123
    x1506 = x1308 * x16
    x1507 = x1298 * x16
    x1508 = x277 * x537
    x1509 = x288 * x301
    x1510 = x1318 * x14
    x1511 = x1308 * x14
    x1512 = x1298 * x14
    x1513 = x125 * x90
    x1514 = x14 * x537
    x1515 = 1.0 * x47
    x1516 = x10 * x1515
    x1517 = x1516 * x5
    x1518 = x11 * x1515
    x1519 = x1518 * x5
    x1520 = 0.5 * x386
    x1521 = x1445 * x68
    x1522 = x1265 * x165 + x1410 * x163
    x1523 = x101 * x1444
    x1524 = x309 * x84
    x1525 = 0.5 * x395
    x1526 = x1444 * x68
    x1527 = x1 * (x1410 + x761 + x762)
    x1528 = x1417 * x163
    x1529 = x1527 + x1528
    x1530 = x101 * x1226
    x1531 = x28 * x84
    x1532 = x1226 * x401
    x1533 = x1423 * x163
    x1534 = x1429 + x1533
    x1535 = x1266 * x386
    x1536 = x401 * x84
    x1537 = 0.5 * x401
    x1538 = x1431 * x163
    x1539 = x1437 + x1538
    x1540 = x408 * x70
    x1541 = x1280 * x14
    x1542 = x1266 * x14
    x1543 = x71 * x90
    x1544 = x1 * (6.0 * x1429 + 3.0 * x1430 + 3.0 * x1533 + 2.0 * x771 + 2.0 * x806)
    x1545 = x1539 * x57 + x1544
    x1546 = x1516 * x1545
    x1547 = x1518 * x419
    x1548 = x1 * (x1282 + 2.0 * x934 + 7.0 * x935) + x1443 * x4
    x1549 = x1548 * x422
    x1550 = x1 * (x1279 + 2.0 * x607 + 7.0 * x608) + x121 * x1441
    x1551 = x1550 * x423
    x1552 = x1443 * x424
    x1553 = x1 * (x121 * x548 + x1317 + x1441 + x662) + x121 * x1450
    x1554 = x1553 * x308
    x1555 = x1443 * x422
    x1556 = x1550 * x308
    x1557 = 0.5 * x1224
    x1558 = (
        x1 * (3.0 * x1306 + x1375 + 2.0 * x1448 + 2.0 * x1449 + 2.0 * x614) + x121 * x1455
    )
    x1559 = x1558 * x304
    x1560 = x1553 * x304
    x1561 = x1224 * x422
    x1562 = x1550 * x304
    x1563 = x121 * x1464 + x1469
    x1564 = x1472 * x1563
    x1565 = x1472 * x4
    x1566 = x1558 * x57
    x1567 = x1553 * x19
    x1568 = x1550 * x19
    x1569 = x10 * (
        x1 * (7.0 * x1376 + 3.0 * x1377 + 4.0 * x1463 + 2.0 * x621 + 2.0 * x622)
        + x121 * x1470
    )
    x1570 = x13 * x1558
    x1571 = x13 * x1553
    x1572 = x13 * x1550
    x1573 = x1441 * x423
    x1574 = x1548 * x303
    x1575 = x1443 * x314
    x1576 = x1450 * x308
    x1577 = x1443 * x303
    x1578 = x1441 * x308
    x1579 = x1455 * x304
    x1580 = x1224 * x314
    x1581 = x1450 * x304
    x1582 = x1224 * x303
    x1583 = x1441 * x304
    x1584 = x1464 * x163
    x1585 = x1455 * x19
    x1586 = x1450 * x19
    x1587 = x1441 * x19
    x1588 = x13 * x1464
    x1589 = x13 * x1455
    x1590 = x13 * x1450
    x1591 = 0.5 * x13
    x1592 = x1441 * x197
    x1593 = x1352 * x423
    x1594 = x1443 * x205
    x1595 = x1357 * x308
    x1596 = x1352 * x308
    x1597 = x1224 * x209
    x1598 = x1361 * x304
    x1599 = x1224 * x205
    x1600 = x1357 * x304
    x1601 = x1224 * x201
    x1602 = x1352 * x304
    x1603 = x1369 * x19
    x1604 = x1361 * x19
    x1605 = x1357 * x19
    x1606 = x1352 * x19
    x1607 = x13 * x1378
    x1608 = x13 * x1369
    x1609 = x13 * x1361
    x1610 = x1357 * x288
    x1611 = x1352 * x298
    x1612 = 0.5 * x12
    x1613 = x123 * x1548
    x1614 = x125 * x1443
    x1615 = x308 * x537
    x1616 = x123 * x1443
    x1617 = x1224 * x134
    x1618 = x1298 * x304
    x1619 = x304 * x537
    x1620 = x1308 * x19
    x1621 = x1298 * x19
    x1622 = x125 * x306
    x1623 = x19 * x537
    x1624 = x1516 * x4
    x1625 = x1518 * x4
    x1626 = x13 * x1318
    x1627 = x13 * x1308
    x1628 = x1298 * x401
    x1629 = x408 * x537
    x1630 = x1548 * x493
    x1631 = x1 * (x1289 + 2.0 * x792 + 7.0 * x793) + x1522 * x163
    x1632 = 0.5 * x493
    x1633 = x101 * x1443
    x1634 = x308 * x84
    x1635 = x1443 * x497
    x1636 = x1 * (x1348 + x1522 + x163 * x735 + x837) + x1529 * x163
    x1637 = 0.5 * x497
    x1638 = x304 * x84
    x1639 = (
        x1 * (3.0 * x1341 + x1436 + 2.0 * x1527 + 2.0 * x1528 + 2.0 * x802) + x1534 * x163
    )
    x1640 = x304 * x502
    x1641 = x1266 * x19
    x1642 = x306 * x71
    x1643 = x1516 * (x1539 * x163 + x1544)
    x1644 = x1518 * x508
    x1645 = x1280 * x493
    x1646 = x1266 * x497
    x1647 = x71 * x80
    x1648 = x68 * x999
    x1649 = x1648 * x53
    x1650 = x1017 * x68
    x1651 = x1045 * x80
    x1652 = x10 * x338
    x1653 = x1079 * x220
    x1654 = x1077 * x209
    x1655 = x1183 * x139
    x1656 = x1131 * x155
    x1657 = x1113 * x776
    x1658 = x10 * x333
    x1659 = x1079 * x1658
    x1660 = x1082 * x139
    x1661 = x1107 * x333
    x1662 = x1061 * x751
    x1663 = x163 * x1658
    x1664 = x1089 * x139
    x1665 = x125 * x1664
    x1666 = x1658 * x424
    x1667 = 0.866025403784438597 * x45
    x1668 = x1667 * x47
    x1669 = x1242 * x1668
    x1670 = x1668 * x514
    x1671 = 0.866025403784438597 * x1247
    x1672 = x1668 * x51
    x1673 = 0.866025403784438597 * x81
    x1674 = 0.866025403784438597 * x66
    x1675 = 0.866025403784438597 * x107
    x1676 = 0.866025403784438597 * x97
    x1677 = 0.866025403784438597 * x118
    x1678 = x1239 * x1668
    x1679 = x121 * x1668
    x1680 = x1 * x40
    x1681 = 0.866025403784438597 * x1269
    x1682 = 0.866025403784438597 * x167
    x1683 = 0.866025403784438597 * x177
    x1684 = 0.866025403784438597 * x165
    x1685 = 0.866025403784438597 * x188
    x1686 = 0.866025403784438597 * x70
    x1687 = 0.866025403784438597 * x1250
    x1688 = 0.866025403784438597 * x197
    x1689 = 0.866025403784438597 * x265
    x1690 = 0.866025403784438597 * x270
    x1691 = 0.866025403784438597 * x277
    x1692 = 0.866025403784438597 * x68
    x1693 = 0.866025403784438597 * x288
    x1694 = 0.866025403784438597 * x16
    x1695 = x1667 * x332
    x1696 = x10 * x1695
    x1697 = x1470 * x1696
    x1698 = x1696 * x5
    x1699 = 0.866025403784438597 * x386
    x1700 = 0.866025403784438597 * x395
    x1701 = 0.866025403784438597 * x1224
    x1702 = x1563 * x1696
    x1703 = x1696 * x4
    x1704 = 0.866025403784438597 * x13
    x1705 = 0.866025403784438597 * x401
    x1706 = 0.866025403784438597 * x493

    # 2025 item(s)
    result[0] = x42 * x49
    result[1] = x51 * x55
    result[2] = x55 * x57
    result[3] = x67 * x74
    result[4] = x75 * x78
    result[5] = x65 * x68 * x82
    result[6] = x86 * x94 * x96
    result[7] = x100 * x98
    result[8] = x101 * x102 * x94
    result[9] = x103 * x109
    result[10] = x110 * x112 * x95
    result[11] = x113 * x114
    result[12] = x115 * x82
    result[13] = x109 * x116
    result[14] = x119 * x120
    result[15] = x121 * x122
    result[16] = x125 * x128
    result[17] = x130 * x131
    result[18] = x137 * x138
    result[19] = x125 * x142
    result[20] = x123 * x143 * x64
    result[21] = x127 * x148 * x93
    result[22] = x141 * x149
    result[23] = x150 * x151
    result[24] = x152 * x153
    result[25] = x156 * x157
    result[26] = x158 * x159
    result[27] = x143 * x160
    result[28] = x158 * x161
    result[29] = x157 * x162
    result[30] = x122 * x163
    result[31] = x163 * x164
    result[32] = x168 * x169
    result[33] = x170 * x171
    result[34] = x172 * x173
    result[35] = x174 * x178
    result[36] = x179 * x180
    result[37] = x172 * x181
    result[38] = x182 * x183
    result[39] = x188 * x190
    result[40] = x157 * x191
    result[41] = x158 * x192
    result[42] = x193 * x194
    result[43] = x158 * x195
    result[44] = x157 * x198
    result[45] = x201 * x202 * x203
    result[46] = x205 * x206 * x32
    result[47] = x207 * x97
    result[48] = x209 * x211 * x30
    result[49] = x212 * x215
    result[50] = x216 * x217
    result[51] = x220 * x221
    result[52] = x209 * x222
    result[53] = x223 * x224
    result[54] = x225 * x226
    result[55] = x231 * x232
    result[56] = x233 * x234
    result[57] = x217 * x235
    result[58] = x226 * x236
    result[59] = x232 * x237
    result[60] = x163 * x239
    result[61] = x125 * x241
    result[62] = x172 * x242
    result[63] = x243 * x244
    result[64] = x125 * x247
    result[65] = x248 * x249
    result[66] = x148 * x250
    result[67] = x134 * x251
    result[68] = x125 * x253
    result[69] = x123 * x255
    result[70] = x256 * x257
    result[71] = x148 * x258
    result[72] = x134 * x259
    result[73] = x260 * x261
    result[74] = x257 * x262
    result[75] = x202 * x266 * x68
    result[76] = x101 * x267 * x32
    result[77] = x268 * x271
    result[78] = x272 * x273
    result[79] = x274 * x275
    result[80] = x278 * x279
    result[81] = x267 * x280
    result[82] = x281 * x283
    result[83] = x101 * x285
    result[84] = x289 * x290
    result[85] = x232 * x291
    result[86] = x233 * x292
    result[87] = x282 * x293
    result[88] = x233 * x294
    result[89] = x232 * x299
    result[90] = x303 * x310 * x96
    result[91] = x127 * x309 * x314
    result[92] = x315 * x316
    result[93] = x318 * x319
    result[94] = x314 * x320
    result[95] = x143 * x321
    result[96] = x323 * x324
    result[97] = x318 * x326
    result[98] = x151 * x327
    result[99] = x152 * x328
    result[100] = x330 * x335 * x5
    result[101] = x336 * x339
    result[102] = x14 * x143 * x318
    result[103] = x152 * x340
    result[104] = x303 * x342
    result[105] = x165 * x343
    result[106] = x240 * x344
    result[107] = x172 * x345
    result[108] = x209 * x346
    result[109] = x205 * x347
    result[110] = x248 * x348
    result[111] = x220 * x349
    result[112] = x209 * x350
    result[113] = x252 * x351
    result[114] = x188 * x352
    result[115] = x353 * x355
    result[116] = x172 * x356
    result[117] = x248 * x357
    result[118] = x205 * x358
    result[119] = x197 * x360
    result[120] = x123 * x310 * x361
    result[121] = x362 * x363
    result[122] = x364 * x365
    result[123] = x366 * x367
    result[124] = x125 * x369
    result[125] = x123 * x370
    result[126] = x363 * x371
    result[127] = x134 * x372
    result[128] = x373 * x374
    result[129] = x123 * x375
    result[130] = x14 * x155 * x361
    result[131] = x365 * x376
    result[132] = x134 * x377
    result[133] = x378 * x379
    result[134] = x380 * x382
    result[135] = x387 * x389
    result[136] = x390 * x391
    result[137] = x395 * x396
    result[138] = x170 * x397
    result[139] = x398 * x399
    result[140] = x290 * x402
    result[141] = x403 * x86
    result[142] = x404 * x405
    result[143] = x101 * x406
    result[144] = x408 * x409
    result[145] = x112 * x411
    result[146] = x413 * x86
    result[147] = x170 * x414
    result[148] = x416 * x417
    result[149] = x421 * x5
    result[150] = x422 * x423 * x95
    result[151] = x308 * x424 * x96
    result[152] = x422 * x425
    result[153] = x427 * x428
    result[154] = x429 * x430
    result[155] = x431 * x82
    result[156] = x4 * x433
    result[157] = x434 * x436
    result[158] = x102 * x19 * x424
    result[159] = x109 * x437
    result[160] = x334 * x438
    result[161] = x433 * x57
    result[162] = x13 * x426 * x82
    result[163] = x109 * x439
    result[164] = x422 * x440
    result[165] = x441 * x442
    result[166] = x314 * x443
    result[167] = x168 * x444
    result[168] = x445 * x446
    result[169] = x314 * x447
    result[170] = x178 * x448
    result[171] = x449 * x450
    result[172] = x172 * x451
    result[173] = x183 * x452
    result[174] = x303 * x454
    result[175] = x163 * x330 * x335
    result[176] = x168 * x455
    result[177] = x178 * x456
    result[178] = x314 * x458
    result[179] = x303 * x461
    result[180] = x266 * x462
    result[181] = x267 * x463
    result[182] = x270 * x464
    result[183] = x273 * x465
    result[184] = x270 * x466
    result[185] = x467 * x468
    result[186] = x19 * x220 * x267
    result[187] = x275 * x469
    result[188] = x205 * x470
    result[189] = x471 * x472
    result[190] = x13 * x230 * x266
    result[191] = x271 * x473
    result[192] = x209 * x474
    result[193] = x205 * x475
    result[194] = x476 * x477
    result[195] = x410 * x478
    result[196] = x125 * x479
    result[197] = x123 * x480
    result[198] = x137 * x481
    result[199] = x482 * x483
    result[200] = x446 * x484
    result[201] = x390 * x485
    result[202] = x134 * x486
    result[203] = x378 * x487
    result[204] = x416 * x488
    result[205] = x155 * x489
    result[206] = x148 * x490
    result[207] = x137 * x491
    result[208] = x457 * x492
    result[209] = x121 * x421
    result[210] = x388 * x494
    result[211] = x495 * x496
    result[212] = x498 * x499
    result[213] = x500 * x74
    result[214] = x430 * x501
    result[215] = x428 * x503
    result[216] = x504 * x86
    result[217] = x100 * x505
    result[218] = x506 * x507
    result[219] = x4 * x509
    result[220] = x459 * x510
    result[221] = x460 * x511
    result[222] = x512 * x74
    result[223] = x509 * x51
    result[224] = x381 * x513
    result[225] = 0
    result[226] = x515
    result[227] = 0
    result[228] = x516 * x518 * x65
    result[229] = x519 * x77
    result[230] = 0
    result[231] = x522 * x94 * x96
    result[232] = x526
    result[233] = x102 * x527
    result[234] = 0
    result[235] = x110 * x528 * x95
    result[236] = x114 * x529
    result[237] = x530 * x531
    result[238] = x109 * x532
    result[239] = 0
    result[240] = x534
    result[241] = x128 * x535
    result[242] = x536 * x57
    result[243] = x138 * x540
    result[244] = x142 * x535
    result[245] = x143 * x541
    result[246] = x127 * x544 * x93
    result[247] = x141 * x545
    result[248] = x151 * x546
    result[249] = x152 * x547
    result[250] = x549 * x92 * x96
    result[251] = x158 * x550
    result[252] = x143 * x551
    result[253] = x158 * x552
    result[254] = x341 * x553
    result[255] = 0
    result[256] = x130 * x554
    result[257] = 0
    result[258] = x556 * x558
    result[259] = x172 * x541
    result[260] = 0
    result[261] = x180 * x559
    result[262] = x560 * x563
    result[263] = x183 * x547
    result[264] = 0
    result[265] = x157 * x564
    result[266] = x158 * x565
    result[267] = x566 * x567
    result[268] = x158 * x568
    result[269] = 0
    result[270] = x238 * x516 * x517
    result[271] = x206 * x32 * x570
    result[272] = x571 * x572
    result[273] = x211 * x30 * x574
    result[274] = x215 * x30 * x570
    result[275] = x575 * x577
    result[276] = x221 * x583
    result[277] = x222 * x574
    result[278] = x224 * x584
    result[279] = x585 * x586
    result[280] = x232 * x591 * x66
    result[281] = x233 * x583 * x97
    result[282] = x217 * x592
    result[283] = x226 * x593
    result[284] = x118 * x516 * x594
    result[285] = x595 * x77
    result[286] = x241 * x535
    result[287] = x172 * x596
    result[288] = x244 * x30 * x539
    result[289] = x247 * x535
    result[290] = x248 * x597
    result[291] = x250 * x544
    result[292] = x251 * x539
    result[293] = x253 * x535
    result[294] = x255 * x70
    result[295] = x165 * x257 * x549
    result[296] = x258 * x544
    result[297] = x259 * x539
    result[298] = x261 * x598
    result[299] = x197 * x257 * x70
    result[300] = 0
    result[301] = x267 * x596
    result[302] = 0
    result[303] = x599 * x600
    result[304] = x275 * x597
    result[305] = 0
    result[306] = x267 * x601
    result[307] = x602 * x603
    result[308] = x285 * x70
    result[309] = 0
    result[310] = x232 * x604
    result[311] = x233 * x605
    result[312] = x293 * x576 * x84
    result[313] = x233 * x606
    result[314] = 0
    result[315] = x310 * x609 * x96
    result[316] = x127 * x309 * x612
    result[317] = x316 * x613
    result[318] = x319 * x615
    result[319] = x320 * x612
    result[320] = x143 * x616
    result[321] = x324 * x618
    result[322] = x326 * x615
    result[323] = x151 * x619
    result[324] = x152 * x620
    result[325] = x5 * x624
    result[326] = x339 * x625
    result[327] = x14 * x143 * x615
    result[328] = x152 * x626
    result[329] = x342 * x609
    result[330] = x628
    result[331] = x240 * x629
    result[332] = x563 * x630
    result[333] = x346 * x574
    result[334] = x347 * x570
    result[335] = x631 * x633
    result[336] = x349 * x583
    result[337] = x350 * x574
    result[338] = x252 * x634
    result[339] = x16 * x562 * x635
    result[340] = x355 * x636
    result[341] = x172 * x637
    result[342] = x248 * x638
    result[343] = x358 * x570
    result[344] = x642
    result[345] = x361 * x643
    result[346] = x363 * x644
    result[347] = x365 * x645
    result[348] = x367 * x646
    result[349] = x369 * x535
    result[350] = x370 * x70
    result[351] = x325 * x647
    result[352] = x372 * x539
    result[353] = x245 * x374 * x535
    result[354] = x375 * x70
    result[355] = x359 * x648
    result[356] = x365 * x649
    result[357] = x377 * x539
    result[358] = x379 * x650
    result[359] = x651 * x653
    result[360] = 0
    result[361] = x390 * x645
    result[362] = 0
    result[363] = x397 * x555 * x84
    result[364] = x654 * x655
    result[365] = 0
    result[366] = x403 * x522
    result[367] = x404 * x562 * x84
    result[368] = x406 * x70
    result[369] = 0
    result[370] = x411 * x528
    result[371] = x413 * x522
    result[372] = x401 * x657
    result[373] = x5 * x659
    result[374] = 0
    result[375] = x423 * x660 * x95
    result[376] = x308 * x661 * x96
    result[377] = x425 * x660
    result[378] = x203 * x304 * x663
    result[379] = x430 * x661 * x97
    result[380] = x664 * x82
    result[381] = x4 * x666
    result[382] = x436 * x667
    result[383] = x102 * x19 * x661
    result[384] = x109 * x668
    result[385] = x334 * (
        x1 * (x330 + 7.0 * x589 + 3.0 * x590 + 4.0 * x617) + x121 * x623
    )
    result[386] = x57 * x666
    result[387] = x13 * x663 * x82
    result[388] = x107 * x460 * x661
    result[389] = x440 * x660
    result[390] = x442 * x669
    result[391] = x443 * x612
    result[392] = x168 * x670
    result[393] = x165 * x446 * x615
    result[394] = x447 * x612
    result[395] = x178 * x671
    result[396] = x449 * x673
    result[397] = x172 * x674
    result[398] = x183 * x675
    result[399] = x454 * x609
    result[400] = x163 * x624
    result[401] = x168 * x676
    result[402] = x178 * x677
    result[403] = x458 * x612
    result[404] = x461 * x609
    result[405] = x265 * x516 * x678
    result[406] = x267 * x679
    result[407] = x270 * x555 * x680
    result[408] = x273 * x681
    result[409] = x467 * x682
    result[410] = x277 * x576 * x683
    result[411] = x19 * x267 * x583
    result[412] = x275 * x684
    result[413] = x470 * x570
    result[414] = x288 * x685
    result[415] = x13 * x266 * x591
    result[416] = x271 * x686
    result[417] = x474 * x574
    result[418] = x475 * x570
    result[419] = x380 * x687
    result[420] = x108 * x423 * x688
    result[421] = x479 * x535
    result[422] = x480 * x70
    result[423] = x481 * x540
    result[424] = x483 * x689
    result[425] = x446 * x690
    result[426] = x390 * x691
    result[427] = x486 * x539
    result[428] = x487 * x650
    result[429] = x4 * x659
    result[430] = x489 * x549
    result[431] = x490 * x544
    result[432] = x491 * x540
    result[433] = x408 * x457 * x535
    result[434] = x694
    result[435] = 0
    result[436] = x495 * x695
    result[437] = 0
    result[438] = x500 * x516 * x84
    result[439] = x430 * x497 * x70
    result[440] = 0
    result[441] = x504 * x522
    result[442] = x697
    result[443] = x651 * x699
    result[444] = 0
    result[445] = x459 * x493 * x528
    result[446] = x460 * x497 * x522
    result[447] = x506 * x687
    result[448] = x700
    result[449] = 0
    result[450] = 0
    result[451] = 0
    result[452] = x515
    result[453] = 0
    result[454] = x1 * x65 * x78
    result[455] = x519 * x701
    result[456] = 0
    result[457] = x71 * x80 * x94 * x99
    result[458] = x526
    result[459] = x103 * x705
    result[460] = 0
    result[461] = x113 * x706
    result[462] = x115 * x707
    result[463] = x116 * x705
    result[464] = x120 * x709
    result[465] = 0
    result[466] = 0
    result[467] = x121 * x536
    result[468] = 0
    result[469] = x378 * x710
    result[470] = x556 * x571
    result[471] = 0
    result[472] = x149 * x711
    result[473] = x150 * x712
    result[474] = x153 * x713
    result[475] = 0
    result[476] = x158 * x714
    result[477] = x160 * x715
    result[478] = x158 * x716
    result[479] = x123 * x717 * x92
    result[480] = x534
    result[481] = x1 * x164
    result[482] = x169 * x719
    result[483] = x170 * x710
    result[484] = x173 * x720
    result[485] = x174 * x725
    result[486] = x179 * x726
    result[487] = x181 * x720
    result[488] = x182 * x727
    result[489] = x190 * x730
    result[490] = x157 * x731
    result[491] = x158 * x732
    result[492] = x194 * x733
    result[493] = x158 * x734
    result[494] = x499 * x736 * x92
    result[495] = 0
    result[496] = 0
    result[497] = x207 * x80
    result[498] = 0
    result[499] = x212 * x737
    result[500] = x216 * x738
    result[501] = 0
    result[502] = x62 * x739
    result[503] = x213 * x223 * x738
    result[504] = x225 * x740
    result[505] = 0
    result[506] = x233 * x741
    result[507] = x235 * x738
    result[508] = x236 * x740
    result[509] = x232 * x742
    result[510] = x1 * x239
    result[511] = x378 * x743
    result[512] = x242 * x720
    result[513] = x243 * x737
    result[514] = x373 * x744
    result[515] = x249 * x745
    result[516] = x714 * x746
    result[517] = x134 * x62 * x747
    result[518] = x373 * x748
    result[519] = x123 * x730 * x746
    result[520] = x155 * x257 * x80
    result[521] = x148 * x720 * x88
    result[522] = x134 * x745 * x88
    result[523] = x261 * x749
    result[524] = x123 * x257 * x736
    result[525] = x595 * x701
    result[526] = x558 * x572
    result[527] = x268 * x752
    result[528] = x272 * x753
    result[529] = x274 * x754
    result[530] = x279 * x757
    result[531] = x280 * x758
    result[532] = x283 * x759
    result[533] = x101 * x62 * x760
    result[534] = x290 * x62 * x766
    result[535] = x112 * x384 * x516 * x88
    result[536] = x233 * x767
    result[537] = x282 * x768
    result[538] = x101 * x233 * x766
    result[539] = x232 * x68 * x773
    result[540] = 0
    result[541] = 0
    result[542] = x315 * x726
    result[543] = 0
    result[544] = x655 * x774
    result[545] = x321 * x715
    result[546] = 0
    result[547] = x325 * x775
    result[548] = x327 * x712
    result[549] = x328 * x713
    result[550] = 0
    result[551] = x5 * x777
    result[552] = x778 * x780
    result[553] = x340 * x713
    result[554] = x14 * x303 * x717
    result[555] = x343 * x80
    result[556] = x344 * x711
    result[557] = x345 * x720
    result[558] = x28 * x739
    result[559] = x205 * x28 * x747
    result[560] = x348 * x745
    result[561] = x325 * x741
    result[562] = x16 * x209 * x747
    result[563] = x245 * x351 * x724
    result[564] = x352 * x730
    result[565] = x651 * x781
    result[566] = x356 * x720
    result[567] = x357 * x745
    result[568] = x14 * x140 * x205 * x730
    result[569] = x360 * x736
    result[570] = x628
    result[571] = x362 * x782
    result[572] = x364 * x783
    result[573] = x213 * x366 * x753
    result[574] = x373 * x784
    result[575] = x123 * x28 * x760
    result[576] = x371 * x782
    result[577] = x134 * x245 * x785
    result[578] = x373 * x786
    result[579] = x325 * x787
    result[580] = x789
    result[581] = x376 * x783
    result[582] = x134 * x14 * x760
    result[583] = x378 * x790
    result[584] = x382 * x791
    result[585] = x389 * x795
    result[586] = x391 * x796
    result[587] = x396 * x799
    result[588] = x170 * x800
    result[589] = x399 * x801
    result[590] = x28 * x290 * x803
    result[591] = x16 * x796 * x86
    result[592] = x325 * x804
    result[593] = x325 * x805
    result[594] = x409 * x807
    result[595] = x112 * x14 * x808
    result[596] = x14 * x809 * x86
    result[597] = x14 * x170 * x803
    result[598] = x337 * x417 * x810
    result[599] = x5 * x814
    result[600] = 0
    result[601] = 0
    result[602] = x308 * x422 * x706
    result[603] = 0
    result[604] = x424 * x430 * x80
    result[605] = x431 * x707
    result[606] = 0
    result[607] = x816 * x817
    result[608] = x819
    result[609] = x437 * x705
    result[610] = 0
    result[611] = x821
    result[612] = x434 * x822
    result[613] = x439 * x705
    result[614] = x422 * x459 * x708
    result[615] = x441 * x706
    result[616] = x308 * x314 * x726
    result[617] = x444 * x719
    result[618] = x446 * x775
    result[619] = x304 * x314 * x720
    result[620] = x448 * x725
    result[621] = x4 * x777
    result[622] = x451 * x720
    result[623] = x452 * x727
    result[624] = x126 * x303 * x823
    result[625] = x824
    result[626] = x455 * x719
    result[627] = x456 * x725
    result[628] = x314 * x457 * x730
    result[629] = x303 * x460 * x736
    result[630] = x384 * x462 * x516
    result[631] = x463 * x758
    result[632] = x464 * x751
    result[633] = x465 * x753
    result[634] = x466 * x751
    result[635] = x467 * x825
    result[636] = x220 * x4 * x826
    result[637] = x469 * x754
    result[638] = x19 * x205 * x760
    result[639] = x136 * x472 * x766
    result[640] = x353 * x822
    result[641] = x473 * x752
    result[642] = x13 * x209 * x757
    result[643] = x136 * x205 * x827
    result[644] = x201 * x477 * x773
    result[645] = x478 * x808
    result[646] = x125 * x308 * x796
    result[647] = x123 * x308 * x809
    result[648] = x137 * x828
    result[649] = x483 * x829
    result[650] = x123 * x446 * x803
    result[651] = x485 * x796
    result[652] = x134 * x19 * x801
    result[653] = x378 * x830
    result[654] = x449 * x831
    result[655] = x155 * x460 * x794
    result[656] = x148 * x457 * x799
    result[657] = x137 * x832
    result[658] = x125 * x457 * x807
    result[659] = x121 * x814
    result[660] = x388 * x423 * x833
    result[661] = x496 * x834
    result[662] = x308 * x499 * x835
    result[663] = x74 * x836
    result[664] = x101 * x430 * x835
    result[665] = x428 * x68 * x838
    result[666] = x19 * x834 * x86
    result[667] = x100 * x19 * x835
    result[668] = x507 * x839
    result[669] = x4 * x841
    result[670] = x112 * x459 * x833
    result[671] = x460 * x835 * x86
    result[672] = x13 * x74 * x838
    result[673] = x51 * x841
    result[674] = x381 * (
        x1 * (x419 + 7.0 * x771 + 3.0 * x772 + 4.0 * x806) + x163 * x813
    )
    result[675] = x49 * (x1 * (x41 + 3.0 * x857 + 4.0 * x858 + 7.0 * x862) + x5 * x867)
    result[676] = x51 * x869
    result[677] = x57 * x869
    result[678] = x66 * x74 * x875
    result[679] = x78 * x876
    result[680] = x68 * x82 * x875
    result[681] = x86 * x882 * x96
    result[682] = x100 * x882 * x97
    result[683] = x101 * x102 * x882
    result[684] = x107 * x499 * x882
    result[685] = x112 * x883 * x95
    result[686] = x114 * x884
    result[687] = x82 * x885
    result[688] = x109 * x886
    result[689] = x119 * x887
    result[690] = x121 * x888
    result[691] = x125 * x127 * x865
    result[692] = x131 * x890
    result[693] = x137 * x891
    result[694] = x141 * x892
    result[695] = x123 * x143 * x874
    result[696] = x127 * x148 * x881
    result[697] = x134 * x141 * x881
    result[698] = x151 * x893
    result[699] = x152 * x894
    result[700] = x156 * x895
    result[701] = x159 * x896
    result[702] = x143 * x897
    result[703] = x161 * x896
    result[704] = x162 * x895
    result[705] = x163 * x888
    result[706] = x890 * x898
    result[707] = x168 * x899
    result[708] = x165 * x170 * x874
    result[709] = x172 * x900
    result[710] = x178 * x901
    result[711] = x180 * x902
    result[712] = x172 * x903
    result[713] = x101 * x183 * x881
    result[714] = x188 * x189 * x881
    result[715] = x191 * x895
    result[716] = x192 * x896
    result[717] = x136 * x193 * x880
    result[718] = x195 * x896
    result[719] = x198 * x895
    result[720] = x201 * x203 * x904
    result[721] = x205 * x206 * x856
    result[722] = x136 * x905 * x97
    result[723] = x209 * x211 * x854
    result[724] = x215 * x906
    result[725] = x217 * x907
    result[726] = x206 * x220 * x871
    result[727] = x215 * x908
    result[728] = x224 * x909
    result[729] = x226 * x910
    result[730] = x781 * x911
    result[731] = x220 * x57 * x780
    result[732] = x577 * x912
    result[733] = x586 * x913
    result[734] = x237 * x914
    result[735] = x163 * x77 * x915
    result[736] = x240 * x916
    result[737] = x172 * x917
    result[738] = x244 * x918
    result[739] = x246 * x919
    result[740] = x248 * x920
    result[741] = x148 * x240 * x871
    result[742] = x246 * x921
    result[743] = x252 * x922
    result[744] = x254 * x923
    result[745] = x789
    result[746] = x563 * x924
    result[747] = x633 * x925
    result[748] = x260 * x562 * x90
    result[749] = x642
    result[750] = x266 * x68 * x904
    result[751] = x101 * x267 * x856
    result[752] = x271 * x926
    result[753] = x273 * x927
    result[754] = x275 * x928
    result[755] = x278 * x929
    result[756] = x267 * x930
    result[757] = x282 * x931
    result[758] = x284 * x932
    result[759] = x288 * x290 * x871
    result[760] = x291 * x914
    result[761] = x292 * x555 * x90
    result[762] = x576 * x90 * x933
    result[763] = x288 * x657
    result[764] = x653 * x911
    result[765] = x303 * x938 * x96
    result[766] = x127 * x314 * x937
    result[767] = x316 * x939
    result[768] = x206 * x318 * x852
    result[769] = x141 * x940
    result[770] = x143 * x941
    result[771] = x127 * x323 * x842
    result[772] = x141 * x318 * x842
    result[773] = x151 * x942
    result[774] = x152 * x943
    result[775] = x824
    result[776] = x333 * x336 * x658
    result[777] = x143 * x944
    result[778] = x152 * x945
    result[779] = x341 * x946
    result[780] = x165 * x938 * x947
    result[781] = x205 * x240 * x937
    result[782] = x172 * x948
    result[783] = x244 * x949
    result[784] = x246 * x950
    result[785] = x248 * x951
    result[786] = x220 * x240 * x842
    result[787] = x246 * x952
    result[788] = x252 * x953
    result[789] = x201 * x254 * x842
    result[790] = x353 * x816
    result[791] = x172 * x954
    result[792] = x248 * x955
    result[793] = x254 * x956
    result[794] = x12 * x197 * x947
    result[795] = x123 * x361 * x938
    result[796] = x363 * x957
    result[797] = x123 * x365 * x937
    result[798] = x367 * x958
    result[799] = x368 * x959
    result[800] = x284 * x960
    result[801] = x363 * x961
    result[802] = x368 * x962
    result[803] = x373 * x963
    result[804] = x123 * x288 * x964
    result[805] = x361 * x965
    result[806] = x365 * x966
    result[807] = x284 * x967
    result[808] = x288 * x968
    result[809] = x380 * x969
    result[810] = x387 * x388 * x938
    result[811] = x390 * x970
    result[812] = x189 * x395 * x937
    result[813] = x170 * x971
    result[814] = x398 * x972
    result[815] = x290 * x401 * x852
    result[816] = x390 * x973
    result[817] = x405 * x974
    result[818] = x101 * x401 * x964
    result[819] = x189 * x408 * x842
    result[820] = x410 * x975
    result[821] = x412 * x976
    result[822] = x170 * x977
    result[823] = x51 * x659
    result[824] = x694
    result[825] = x422 * x95 * x978
    result[826] = x424 * x936 * x96
    result[827] = x114 * x979
    result[828] = x817 * x822
    result[829] = x819
    result[830] = x531 * x980
    result[831] = x821
    result[832] = x434 * x816
    result[833] = x102 * x981
    result[834] = x109 * x982
    result[835] = 0
    result[836] = 0
    result[837] = 0
    result[838] = 0
    result[839] = 0
    result[840] = x442 * x983
    result[841] = x180 * x314 * x936
    result[842] = x168 * x984
    result[843] = x826 * x985
    result[844] = x563 * x986
    result[845] = x567 * x987
    result[846] = x450 * x658
    result[847] = x172 * x944
    result[848] = x183 * x945
    result[849] = x453 * x946
    result[850] = 0
    result[851] = 0
    result[852] = 0
    result[853] = 0
    result[854] = 0
    result[855] = x266 * x988
    result[856] = x267 * x989
    result[857] = x271 * x990
    result[858] = x600 * x991
    result[859] = x603 * x992
    result[860] = x306 * x468 * x576
    result[861] = x267 * x954
    result[862] = x275 * x955
    result[863] = x284 * x956
    result[864] = x471 * x993
    result[865] = 0
    result[866] = 0
    result[867] = 0
    result[868] = 0
    result[869] = 0
    result[870] = x410 * x994
    result[871] = x390 * x995
    result[872] = x123 * x412 * x936
    result[873] = x386 * x555 * x996
    result[874] = x306 * x482 * x562
    result[875] = x401 * x685
    result[876] = x390 * x966
    result[877] = x398 * x967
    result[878] = x401 * x968
    result[879] = x121 * x659
    result[880] = 0
    result[881] = 0
    result[882] = 0
    result[883] = 0
    result[884] = 0
    result[885] = x388 * x493 * x978
    result[886] = x495 * x997
    result[887] = x497 * x499 * x936
    result[888] = x306 * x516 * x998
    result[889] = x697
    result[890] = x699 * x911
    result[891] = x495 * x976
    result[892] = x100 * x12 * x497
    result[893] = x506 * x969
    result[894] = x700
    result[895] = 0
    result[896] = 0
    result[897] = 0
    result[898] = 0
    result[899] = 0
    result[900] = 0
    result[901] = x1002
    result[902] = 0
    result[903] = x1003 * x1004
    result[904] = x1005 * x1006
    result[905] = 0
    result[906] = x1008 * x522 * x882
    result[907] = x1011
    result[908] = x1012 * x81 * x882
    result[909] = 0
    result[910] = x1007 * x528 * x883
    result[911] = x1013 * x522 * x97
    result[912] = x1014 * x84 * x883
    result[913] = x1013 * x1015
    result[914] = 0
    result[915] = x1016
    result[916] = x1018 * x66 * x865
    result[917] = x1020 * x57
    result[918] = x1022 * x891
    result[919] = x1023 * x874 * x97
    result[920] = x1024 * x1025
    result[921] = x1026 * x544 * x881
    result[922] = x1028 * x539 * x97
    result[923] = x1018 * x1029 * x881
    result[924] = x1015 * x1027
    result[925] = x1008 * x549 * x880
    result[926] = x1030 * x550
    result[927] = x1024 * x539 * x880
    result[928] = x1030 * x552
    result[929] = x1031 * x118 * x70
    result[930] = 0
    result[931] = x1019 * x554
    result[932] = 0
    result[933] = x1033 * x558
    result[934] = x1025 * x1035
    result[935] = 0
    result[936] = x1027 * x165 * x522
    result[937] = x1037 * x84 * x881
    result[938] = x1028 * x1038
    result[939] = 0
    result[940] = x1031 * x564
    result[941] = x1030 * x565
    result[942] = x1039 * x177 * x880
    result[943] = x1030 * x568
    result[944] = 0
    result[945] = x1003 * x1040
    result[946] = x1041 * x570 * x856
    result[947] = x1042 * x571
    result[948] = x1044 * x66 * x854
    result[949] = x1046 * x854 * x97
    result[950] = x1048 * x301 * x854
    result[951] = x1041 * x583 * x871
    result[952] = x1049 * x574 * x97
    result[953] = x1046 * x81 * x871
    result[954] = x1050 * x301 * x871
    result[955] = x1003 * x1051
    result[956] = x1052 * x1053
    result[957] = x1048 * x574 * x90
    result[958] = x1050 * x570 * x90
    result[959] = x1057 * x118 * x121 * x5
    result[960] = x1005 * x1058
    result[961] = x1023 * x165 * x856
    result[962] = x1035 * x1059
    result[963] = x1060 * x165 * x854
    result[964] = x1062 * x535 * x854
    result[965] = x1038 * x1045 * x854
    result[966] = x1063 * x165 * x544
    result[967] = x1062 * x539 * x871
    result[968] = x1064 * x535 * x871
    result[969] = x1063 * x568
    result[970] = x1065
    result[971] = x1037 * x544 * x90
    result[972] = x1066 * x539 * x90
    result[973] = x1067 * x598
    result[974] = x1070 * x639
    result[975] = 0
    result[976] = x1059 * x1071
    result[977] = 0
    result[978] = x1072 * x84 * x854
    result[979] = x1043 * x281 * x70 * x854
    result[980] = 0
    result[981] = x1071 * x522 * x871
    result[982] = x1073 * x931
    result[983] = x1049 * x1074
    result[984] = 0
    result[985] = x1075 * x604
    result[986] = x1076 * x605
    result[987] = x1078 * x417
    result[988] = x1081 * x5
    result[989] = 0
    result[990] = x1008 * x609 * x938
    result[991] = x1026 * x612 * x937
    result[992] = x1082 * x609 * x97
    result[993] = x1083 * x615 * x66
    result[994] = x1084 * x612 * x97
    result[995] = x1024 * x609 * x852
    result[996] = x1085 * x618 * x66
    result[997] = x1086 * x615 * x97
    result[998] = x1029 * x1085 * x612
    result[999] = x107 * x1085 * x609
    result[1000] = x1088
    result[1001] = x1017 * x625 * x815
    result[1002] = x1024 * x12 * x615
    result[1003] = x107 * x1090
    result[1004] = x1091 * x118 * x609
    result[1005] = x1092
    result[1006] = x1082 * x1093 * x165
    result[1007] = x1037 * x301 * x937
    result[1008] = x1094 * x165 * x852
    result[1009] = x1062 * x570 * x852
    result[1010] = x1066 * x301 * x852
    result[1011] = x1086 * x165 * x583
    result[1012] = x1062 * x574 * x842
    result[1013] = x1064 * x570 * x842
    result[1014] = x1036 * x635 * x842
    result[1015] = x1095 * x636
    result[1016] = x1096 * x1097
    result[1017] = x1094 * x12 * x177
    result[1018] = x1093 * x1098
    result[1019] = x1099 * x121 * x197
    result[1020] = x1012 * x265 * x938
    result[1021] = x1023 * x265 * x937
    result[1022] = x1082 * x1100 * x70
    result[1023] = x1060 * x265 * x852
    result[1024] = x1101 * x535 * x852
    result[1025] = x1045 * x1074 * x852
    result[1026] = x1086 * x647
    result[1027] = x1101 * x539 * x842
    result[1028] = x1102 * x963
    result[1029] = x1086 * x606
    result[1030] = x1103 * x648
    result[1031] = x1100 * x1104
    result[1032] = x1060 * x1105
    result[1033] = x1023 * x12 * x288
    result[1034] = x1107 * x652
    result[1035] = 0
    result[1036] = x1082 * x688
    result[1037] = 0
    result[1038] = x1039 * x971
    result[1039] = x1084 * x654
    result[1040] = 0
    result[1041] = x1085 * x386 * x522
    result[1042] = x1108 * x974
    result[1043] = x1086 * x690
    result[1044] = 0
    result[1045] = x1109 * x12 * x528
    result[1046] = x1110 * x522
    result[1047] = x1111 * x51
    result[1048] = x1114
    result[1049] = 0
    result[1050] = x1007 * x660 * x978
    result[1051] = x1008 * x661 * x936
    result[1052] = x1115 * x660 * x97
    result[1053] = x1116 * x1117
    result[1054] = x1118
    result[1055] = x1014 * x306 * x660
    result[1056] = x1119
    result[1057] = x1095 * x667
    result[1058] = x1103 * x661 * x81
    result[1059] = x107 * x1091 * x660
    result[1060] = 0
    result[1061] = 0
    result[1062] = 0
    result[1063] = 0
    result[1064] = 0
    result[1065] = x1000 * x165 * x609 * x978
    result[1066] = x1120 * x165 * x612
    result[1067] = x1120 * x167 * x609
    result[1068] = x1121 * x1122
    result[1069] = x1037 * x306 * x612
    result[1070] = x1123 * x177 * x609
    result[1071] = x1124 * x673
    result[1072] = x1097 * x1125
    result[1073] = x1090 * x139 * x177
    result[1074] = x1098 * x609
    result[1075] = 0
    result[1076] = 0
    result[1077] = 0
    result[1078] = 0
    result[1079] = 0
    result[1080] = x1003 * x265 * x301 * x978
    result[1081] = x1071 * x570 * x936
    result[1082] = x1032 * x270 * x301 * x936
    result[1083] = x1072 * x306 * x574
    result[1084] = x1126 * x682
    result[1085] = x1078 * x488
    result[1086] = x1071 * x12 * x583
    result[1087] = x1044 * x12 * x281
    result[1088] = x1046 * x1105
    result[1089] = x1081 * x121
    result[1090] = 0
    result[1091] = 0
    result[1092] = 0
    result[1093] = 0
    result[1094] = 0
    result[1095] = x1109 * x70 * x978
    result[1096] = x1120 * x386 * x535
    result[1097] = x1120 * x654
    result[1098] = x1123 * x386 * x539
    result[1099] = x1127 * x689
    result[1100] = x1111 * x4
    result[1101] = x1104 * x386
    result[1102] = x1110 * x1128
    result[1103] = x1023 * x977
    result[1104] = x1114
    result[1105] = 0
    result[1106] = 0
    result[1107] = 0
    result[1108] = 0
    result[1109] = 0
    result[1110] = 0
    result[1111] = x1115 * x493 * x70
    result[1112] = 0
    result[1113] = x1057 * x4 * x493 * x51
    result[1114] = x1070 * x696
    result[1115] = 0
    result[1116] = x1091 * x493 * x522
    result[1117] = x1099 * x497 * x51
    result[1118] = x1107 * x698
    result[1119] = 0
    result[1120] = 0
    result[1121] = 0
    result[1122] = 0
    result[1123] = 0
    result[1124] = 0
    result[1125] = 0
    result[1126] = 0
    result[1127] = 0
    result[1128] = 0
    result[1129] = x1129 * x65
    result[1130] = 0
    result[1131] = 0
    result[1132] = x1130 * x1132
    result[1133] = x1132 * x1133
    result[1134] = 0
    result[1135] = 0
    result[1136] = x1134 * x529
    result[1137] = x110 * x1130 * x1135
    result[1138] = x1136 * x532
    result[1139] = 0
    result[1140] = 0
    result[1141] = 0
    result[1142] = x1137
    result[1143] = 0
    result[1144] = x1023 * x710
    result[1145] = x1133 * x1138
    result[1146] = 0
    result[1147] = x1140 * x545
    result[1148] = x1141 * x546
    result[1149] = x1142 * x547
    result[1150] = 0
    result[1151] = x1143 * x1144
    result[1152] = x1145 * x551
    result[1153] = x1143 * x535 * x704
    result[1154] = x1147 * x553
    result[1155] = 0
    result[1156] = x1137
    result[1157] = 0
    result[1158] = x1130 * x1138
    result[1159] = x1149 * x541
    result[1160] = 0
    result[1161] = x1139 * x559
    result[1162] = x1150 * x560
    result[1163] = x1151 * x547
    result[1164] = 0
    result[1165] = x1134 * x528 * x92
    result[1166] = x1143 * x522 * x718
    result[1167] = x1152 * x566
    result[1168] = x1143 * x1153
    result[1169] = 0
    result[1170] = 0
    result[1171] = 0
    result[1172] = x1154 * x1155
    result[1173] = 0
    result[1174] = x1046 * x1156
    result[1175] = x1157 * x131
    result[1176] = 0
    result[1177] = x1158 * x62
    result[1178] = x1160 * x584
    result[1179] = x1161 * x585
    result[1180] = 0
    result[1181] = x1021 * x1162 * x583
    result[1182] = x1159 * x592
    result[1183] = x1163 * x593
    result[1184] = x1003 * x594 * x708
    result[1185] = x1129 * x202
    result[1186] = x1023 * x743
    result[1187] = x1149 * x596
    result[1188] = x1060 * x1156
    result[1189] = x1102 * x744
    result[1190] = x1164 * x597
    result[1191] = x1144 * x1165
    result[1192] = x1166 * x539 * x62
    result[1193] = x1102 * x748
    result[1194] = x1153 * x1165
    result[1195] = x1005 * x1162 * x549
    result[1196] = x1149 * x544 * x88
    result[1197] = x1060 * x724 * x88
    result[1198] = x1023 * x730 * x88
    result[1199] = x1012 * x736 * x88
    result[1200] = 0
    result[1201] = x1155 * x1167
    result[1202] = 0
    result[1203] = x1157 * x898
    result[1204] = x1168 * x597
    result[1205] = 0
    result[1206] = x1169 * x601
    result[1207] = x1170 * x602
    result[1208] = x1172 * x62
    result[1209] = 0
    result[1210] = x1173 * x528 * x88
    result[1211] = x1174 * x522 * x88
    result[1212] = x1073 * x768
    result[1213] = x1175 * x70 * x88
    result[1214] = 0
    result[1215] = 0
    result[1216] = 0
    result[1217] = x1139 * x613
    result[1218] = 0
    result[1219] = x1176 * x1177
    result[1220] = x1145 * x616
    result[1221] = 0
    result[1222] = x1125 * x1178
    result[1223] = x1141 * x619
    result[1224] = x1142 * x620
    result[1225] = 0
    result[1226] = x1124 * x338 * x618
    result[1227] = x1053 * x1121
    result[1228] = x1142 * x626
    result[1229] = x1147 * x14 * x609
    result[1230] = x1154 * x1179
    result[1231] = x1140 * x629
    result[1232] = x1150 * x630
    result[1233] = x1158 * x28
    result[1234] = x1166 * x28 * x570
    result[1235] = x1180 * x631
    result[1236] = x1096 * x1178
    result[1237] = x1166 * x16 * x574
    result[1238] = x1181 * x634
    result[1239] = x1182 * x301 * x730
    result[1240] = x1005 * x1051
    result[1241] = x1149 * x637
    result[1242] = x1164 * x638
    result[1243] = x1093 * x1183 * x14
    result[1244] = x1185
    result[1245] = x1167 * x1179
    result[1246] = x1186 * x644
    result[1247] = x1187 * x645
    result[1248] = x1189 * x646
    result[1249] = x1102 * x784
    result[1250] = x1172 * x28
    result[1251] = x1182 * x384 * x544
    result[1252] = x1061 * x539 * x785
    result[1253] = x1102 * x786
    result[1254] = x1190 * x766
    result[1255] = x1065
    result[1256] = x1187 * x649
    result[1257] = x1060 * x14 * x756
    result[1258] = x1023 * x790
    result[1259] = x1191 * x1192
    result[1260] = 0
    result[1261] = x1193 * x645
    result[1262] = 0
    result[1263] = x1039 * x800
    result[1264] = x1177 * x1194 * x70
    result[1265] = 0
    result[1266] = x1193 * x16 * x522
    result[1267] = x1108 * x16 * x799
    result[1268] = x1190 * x803
    result[1269] = 0
    result[1270] = x1195 * x14 * x528
    result[1271] = x1194 * x14 * x522
    result[1272] = x1197 * x803
    result[1273] = x1198 * x5
    result[1274] = 0
    result[1275] = 0
    result[1276] = 0
    result[1277] = x1134 * x308 * x660
    result[1278] = 0
    result[1279] = x1005 * x1199 * x661
    result[1280] = x1200 * x664
    result[1281] = 0
    result[1282] = x1095 * x1116
    result[1283] = x1118
    result[1284] = x1136 * x668
    result[1285] = 0
    result[1286] = x1119
    result[1287] = x1117 * x667
    result[1288] = x1202 * x661 * x704
    result[1289] = x1201 * x660 * x708
    result[1290] = x1134 * x669
    result[1291] = x1176 * x308
    result[1292] = x1148 * x670
    result[1293] = x1021 * x1199 * x615
    result[1294] = x1149 * x304 * x612
    result[1295] = x1203 * x671
    result[1296] = x1124 * x4 * x672
    result[1297] = x1149 * x674
    result[1298] = x1151 * x675
    result[1299] = x1017 * x609 * x823
    result[1300] = x1088
    result[1301] = x1148 * x676
    result[1302] = x1203 * x677
    result[1303] = x1204 * x612 * x730
    result[1304] = x1202 * x609 * x736
    result[1305] = x1154 * x1205 * x423
    result[1306] = x1169 * x679
    result[1307] = x1032 * x680 * x751
    result[1308] = x1188 * x681
    result[1309] = x1168 * x304 * x570
    result[1310] = x1206 * x683
    result[1311] = x1052 * x1122
    result[1312] = x1168 * x684
    result[1313] = x1046 * x19 * x756
    result[1314] = x1207 * x766
    result[1315] = x1117 * x636
    result[1316] = x1174 * x686
    result[1317] = x1044 * x13 * x756
    result[1318] = x1021 * x570 * x827
    result[1319] = x1208 * x791
    result[1320] = x1195 * x423 * x70
    result[1321] = x1193 * x308 * x535
    result[1322] = x1194 * x695
    result[1323] = x1022 * x828
    result[1324] = x1023 * x304 * x799
    result[1325] = x1209 * x304 * x70
    result[1326] = x1193 * x691
    result[1327] = x1128 * x1194 * x19
    result[1328] = x1023 * x830
    result[1329] = x1198 * x4
    result[1330] = x1201 * x549 * x795
    result[1331] = x1204 * x544 * x799
    result[1332] = x1022 * x832
    result[1333] = x1018 * x13 * x807
    result[1334] = x1211
    result[1335] = 0
    result[1336] = x1212 * x695
    result[1337] = 0
    result[1338] = x1003 * x836 * x84
    result[1339] = x1012 * x304 * x835
    result[1340] = 0
    result[1341] = x1212 * x19 * x522
    result[1342] = x1213
    result[1343] = x1191 * x1214
    result[1344] = 0
    result[1345] = x1201 * x528 * x833
    result[1346] = x1202 * x522 * x835
    result[1347] = x1208 * x839
    result[1348] = x1215
    result[1349] = 0
    result[1350] = x1241 * (
        1.57079632679489662 * x1 * x2 * x42 * x45 * x46 - x1216 * x1240
    )
    result[1351] = x1245 * x51 * (1.57079632679489662 * x1 * x2 * x45 * x46 * x52 - x1244)
    result[1352] = x1245 * x57 * (1.57079632679489662 * x1 * x2 * x45 * x46 * x52 - x1244)
    result[1353] = (
        1.0 * x1256 * (x1 * x45 * x6 * x65 * x7 * x71 - x1248 * x67 - x1249 * x1255 * x71)
    )
    result[1354] = x1259 * (
        1.57079632679489662 * x1 * x2 * x45 * x46 * x51 * x57 * x65 - x1257 * x1258
    )
    result[1355] = (
        1.0 * x1256 * (-x1260 * x1261 - x1260 * x1264 + x1263 * x46 * x6 * x65 * x7)
    )
    result[1356] = (
        1.0
        * x1245
        * (x1 * x45 * x6 * x7 * x86 * x94 - x1249 * x1267 - x1249 * x1271 * x86)
    )
    result[1357] = (
        1.0
        * x1259
        * (x1 * x45 * x57 * x6 * x7 * x71 * x94 - x1248 * x98 - x1271 * x1272 * x71)
    )
    result[1358] = (
        1.0 * x1259 * (-x1260 * x1273 - x1260 * x1274 + x1263 * x46 * x51 * x6 * x7 * x94)
    )
    result[1359] = (
        1.0 * x1245 * (-x1275 * x1276 - x1275 * x527 + x1277 * x46 * x6 * x7 * x94)
    )
    result[1360] = (
        1.0
        * x1241
        * (x1 * x110 * x112 * x45 * x6 * x7 - x112 * x1249 * x1283 - x1249 * x1281)
    )
    result[1361] = (
        1.0
        * x1245
        * (x1 * x110 * x45 * x57 * x6 * x7 * x86 - x1272 * x1283 * x86 - x1272 * x1284)
    )
    result[1362] = (
        1.0 * x1256 * (x110 * x1263 * x71 - x1260 * x1283 * x71 - x1260 * x1285)
    )
    result[1363] = (
        1.0 * x1245 * (x110 * x1277 * x46 * x51 * x6 * x7 - x1275 * x1286 - x1275 * x530)
    )
    result[1364] = (
        1.0 * x1241 * (x110 * x1290 * x46 * x6 * x7 - x1287 * x1288 - x1287 * x532)
    )
    result[1365] = (
        x121 * x1245 * (1.57079632679489662 * x1 * x2 * x41 * x45 * x46 - x1291)
    )
    result[1366] = (
        1.0 * x1294 * (x1 * x125 * x40 * x45 * x6 * x7 - x1249 * x1292 - x1249 * x1293)
    )
    result[1367] = (
        x1294
        * x57
        * (1.57079632679489662 * x1 * x121 * x2 * x40 * x45 * x46 - x1243 * x1295)
    )
    result[1368] = (
        1.0
        * x1300
        * (x1 * x134 * x45 * x6 * x64 * x7 - x1249 * x1254 * x134 - x1249 * x1299)
    )
    result[1369] = (
        1.0
        * x1303
        * (x1 * x125 * x45 * x57 * x6 * x64 * x7 - x1272 * x1301 - x1272 * x1302)
    )
    result[1370] = (
        1.0 * x1300 * (x121 * x1263 * x46 * x6 * x64 * x7 - x1260 * x1304 - x1260 * x1305)
    )
    result[1371] = (
        1.0
        * x1294
        * (x1 * x148 * x45 * x6 * x7 * x93 - x1249 * x1270 * x148 - x1249 * x1309)
    )
    result[1372] = (
        1.0
        * x1303
        * (x1 * x134 * x45 * x57 * x6 * x7 * x93 - x1270 * x1272 * x134 - x1272 * x1310)
    )
    result[1373] = 1.0 * x1303 * (x125 * x1263 * x93 - x1260 * x1311 - x1260 * x1312)
    result[1374] = (
        1.0 * x1294 * (x121 * x1277 * x46 * x6 * x7 * x93 - x1275 * x1313 - x1275 * x1314)
    )
    result[1375] = (
        1.0 * x1245 * (x1 * x155 * x45 * x6 * x7 * x92 - x1249 * x1319 - x1315 * x156)
    )
    result[1376] = (
        1.0
        * x1294
        * (x1 * x148 * x45 * x57 * x6 * x7 * x92 - x1272 * x1320 - x1315 * x159)
    )
    result[1377] = (
        1.0 * x1300 * (-x1260 * x1269 * x134 - x1260 * x1321 + x1263 * x134 * x92)
    )
    result[1378] = 1.0 * x1294 * (x125 * x1277 * x92 - x1275 * x1322 - x1315 * x161)
    result[1379] = (
        1.0 * x1245 * (x121 * x1290 * x46 * x6 * x7 * x92 - x1287 * x1323 - x1315 * x162)
    )
    result[1380] = (
        x1245 * x163 * (1.57079632679489662 * x1 * x2 * x41 * x45 * x46 - x1291)
    )
    result[1381] = x1294 * (
        1.57079632679489662 * x1 * x163 * x2 * x40 * x45 * x46 * x51 - x1257 * x1324
    )
    result[1382] = (
        1.0 * x1294 * (x1 * x40 * x46 * x6 * x7 * x721 - x1325 * x1326 - x1325 * x1327)
    )
    result[1383] = (
        1.0
        * x1300
        * (x1 * x163 * x45 * x6 * x64 * x7 * x71 - x1248 * x171 - x1254 * x1328 * x71)
    )
    result[1384] = (
        1.0
        * x1303
        * (x1 * x46 * x51 * x6 * x64 * x7 * x721 - x1325 * x1329 - x1325 * x1330)
    )
    result[1385] = (
        1.0 * x1300 * (-x1331 * x1332 - x1331 * x541 + x1335 * x46 * x6 * x64 * x7)
    )
    result[1386] = (
        1.0
        * x1294
        * (x1 * x163 * x45 * x6 * x7 * x86 * x93 - x1270 * x1328 * x86 - x1328 * x1336)
    )
    result[1387] = (
        1.0 * x1303 * (x1 * x71 * x721 * x93 - x1270 * x1325 * x71 - x1325 * x1337)
    )
    result[1388] = (
        1.0 * x1303 * (-x1331 * x1338 - x1331 * x560 + x1335 * x46 * x51 * x6 * x7 * x93)
    )
    result[1389] = (
        1.0 * x1294 * (-x1339 * x1340 - x1339 * x547 + x1343 * x46 * x6 * x7 * x93)
    )
    result[1390] = (
        1.0
        * x1245
        * (x1 * x112 * x163 * x45 * x6 * x7 * x92 - x1315 * x191 - x1328 * x1344)
    )
    result[1391] = 1.0 * x1294 * (x1 * x721 * x86 * x92 - x1315 * x192 - x1325 * x1345)
    result[1392] = 1.0 * x1300 * (-x1315 * x193 - x1331 * x1346 + x1335 * x71 * x92)
    result[1393] = (
        1.0 * x1294 * (-x1315 * x195 - x1339 * x566 + x1343 * x46 * x51 * x6 * x7 * x92)
    )
    result[1394] = (
        1.0 * x1245 * (-x1315 * x198 + x1349 * x46 * x6 * x7 * x92 - x1350 * x1351)
    )
    result[1395] = (
        1.0
        * x1256
        * (x1 * x201 * x202 * x45 * x6 * x7 - x1249 * x1353 - x1249 * x1354 * x201)
    )
    result[1396] = (
        1.0 * x1300 * (x1 * x205 * x32 * x45 * x6 * x7 - x1249 * x1355 - x1249 * x1358)
    )
    result[1397] = (
        1.0
        * x1300
        * (x1 * x201 * x32 * x45 * x57 * x6 * x7 - x1230 * x1272 * x201 - x1272 * x1359)
    )
    result[1398] = (
        1.0
        * x1363
        * (x1 * x209 * x30 * x45 * x6 * x7 - x1228 * x1249 * x209 - x1249 * x1362)
    )
    result[1399] = (
        1.0
        * x1365
        * (x1 * x205 * x30 * x45 * x57 * x6 * x7 - x1228 * x1272 * x205 - x1272 * x1364)
    )
    result[1400] = (
        1.0 * x1363 * (-x1228 * x1260 * x201 - x1260 * x1366 + x1263 * x201 * x30)
    )
    result[1401] = (
        1.0
        * x1300
        * (x1 * x220 * x45 * x6 * x62 * x7 - x1249 * x1252 * x220 - x1249 * x1370)
    )
    result[1402] = (
        1.0
        * x1365
        * (x1 * x209 * x45 * x57 * x6 * x62 * x7 - x1252 * x1272 * x209 - x1272 * x1371)
    )
    result[1403] = (
        1.0 * x1365 * (-x1252 * x1260 * x205 - x1260 * x1372 + x1263 * x205 * x62)
    )
    result[1404] = (
        1.0 * x1300 * (-x1252 * x1275 * x201 - x1275 * x1373 + x1277 * x201 * x62)
    )
    result[1405] = (
        1.0 * x1256 * (x1 * x230 * x45 * x6 * x7 * x88 - x1249 * x1379 - x1374 * x231)
    )
    result[1406] = (
        1.0
        * x1300
        * (x1 * x220 * x45 * x57 * x6 * x7 * x88 - x1272 * x1380 - x1374 * x234)
    )
    result[1407] = 1.0 * x1363 * (-x1260 * x1381 - x1260 * x1382 + x1263 * x209 * x88)
    result[1408] = 1.0 * x1300 * (-x1275 * x1383 - x1275 * x1384 + x1277 * x205 * x88)
    result[1409] = (
        1.0 * x1256 * (-x1250 * x1287 * x201 - x1287 * x1385 + x1290 * x201 * x88)
    )
    result[1410] = (
        x121
        * x1259
        * (1.57079632679489662 * x1 * x163 * x2 * x202 * x45 * x46 - x1243 * x1386)
    )
    result[1411] = (
        1.0
        * x1303
        * (x1 * x125 * x163 * x32 * x45 * x6 * x7 - x1328 * x1387 - x1328 * x1388)
    )
    result[1412] = (
        1.0
        * x1303
        * (x1 * x121 * x32 * x46 * x6 * x7 * x721 - x1325 * x1389 - x1325 * x1390)
    )
    result[1413] = (
        1.0
        * x1365
        * (x1 * x134 * x163 * x30 * x45 * x6 * x7 - x1228 * x1328 * x134 - x1328 * x1391)
    )
    result[1414] = 1.0 * x1394 * (x1 * x125 * x30 * x721 - x1325 * x1392 - x1325 * x1393)
    result[1415] = (
        1.0 * x1365 * (x121 * x1335 * x30 * x46 * x6 * x7 - x1331 * x1395 - x1331 * x575)
    )
    result[1416] = (
        1.0
        * x1303
        * (x1 * x148 * x163 * x45 * x6 * x62 * x7 - x1252 * x1328 * x148 - x1328 * x1396)
    )
    result[1417] = (
        1.0 * x1394 * (x1 * x134 * x62 * x721 - x1252 * x1325 * x134 - x1325 * x1397)
    )
    result[1418] = 1.0 * x1394 * (x125 * x1335 * x62 - x1331 * x1398 - x1331 * x1399)
    result[1419] = (
        1.0 * x1303 * (x121 * x1343 * x46 * x6 * x62 * x7 - x1339 * x1400 - x1339 * x585)
    )
    result[1420] = (
        1.0
        * x1259
        * (x1 * x155 * x163 * x45 * x6 * x7 * x88 - x1328 * x1401 - x1374 * x256)
    )
    result[1421] = 1.0 * x1303 * (x1 * x148 * x721 * x88 - x1325 * x1402 - x1325 * x1403)
    result[1422] = 1.0 * x1365 * (-x1331 * x1404 - x1331 * x1405 + x1335 * x134 * x88)
    result[1423] = 1.0 * x1303 * (x125 * x1343 * x88 - x1339 * x1406 - x1374 * x260)
    result[1424] = (
        1.0 * x1259 * (x121 * x1349 * x46 * x6 * x7 * x88 - x1374 * x262 - x1407 * x594)
    )
    result[1425] = (
        1.0 * x1256 * (-x1408 * x1409 - x1408 * x1411 + x1410 * x202 * x46 * x6 * x7)
    )
    result[1426] = (
        1.0 * x1300 * (-x1408 * x1412 - x1408 * x1413 + x1410 * x32 * x46 * x51 * x6 * x7)
    )
    result[1427] = (
        1.0 * x1300 * (-x1414 * x1415 - x1414 * x596 + x1417 * x32 * x46 * x6 * x7)
    )
    result[1428] = (
        1.0 * x1363 * (-x1228 * x1408 * x71 - x1408 * x1418 + x1410 * x30 * x71)
    )
    result[1429] = (
        1.0 * x1365 * (-x1414 * x1419 - x1414 * x599 + x1417 * x30 * x46 * x51 * x6 * x7)
    )
    result[1430] = (
        1.0 * x1363 * (-x1420 * x1421 - x1420 * x597 + x1423 * x30 * x46 * x6 * x7)
    )
    result[1431] = (
        1.0 * x1300 * (-x1252 * x1408 * x86 - x1408 * x1424 + x1410 * x62 * x86)
    )
    result[1432] = (
        1.0 * x1365 * (-x1252 * x1414 * x71 - x1414 * x1425 + x1417 * x62 * x71)
    )
    result[1433] = (
        1.0 * x1365 * (-x1420 * x1426 - x1420 * x602 + x1423 * x46 * x51 * x6 * x62 * x7)
    )
    result[1434] = (
        1.0 * x1300 * (-x1350 * x289 - x1427 * x1428 + x1431 * x46 * x6 * x62 * x7)
    )
    result[1435] = 1.0 * x1256 * (x112 * x1410 * x88 - x1374 * x291 - x1408 * x1432)
    result[1436] = 1.0 * x1300 * (-x1374 * x292 - x1414 * x1433 + x1417 * x86 * x88)
    result[1437] = 1.0 * x1363 * (-x1248 * x293 - x1374 * x933 + x1423 * x71 * x88)
    result[1438] = (
        1.0 * x1300 * (-x1374 * x294 + x1431 * x46 * x51 * x6 * x7 * x88 - x1434 * x1435)
    )
    result[1439] = (
        1.0 * x1256 * (-x1350 * x1440 - x1374 * x299 + x1439 * x46 * x6 * x7 * x88)
    )
    result[1440] = (
        1.0 * x1245 * (x1 * x303 * x310 * x45 * x6 * x7 - x1249 * x1442 - x1249 * x1446)
    )
    result[1441] = (
        1.0 * x1294 * (x1 * x309 * x314 * x45 * x6 * x7 - x1249 * x1447 - x1249 * x1451)
    )
    result[1442] = (
        1.0
        * x1294
        * (x1 * x303 * x309 * x45 * x57 * x6 * x7 - x1272 * x1452 - x1272 * x1453)
    )
    result[1443] = (
        1.0 * x1300 * (x1 * x28 * x318 * x45 * x6 * x7 - x1249 * x1456 - x1249 * x1457)
    )
    result[1444] = (
        1.0
        * x1303
        * (x1 * x28 * x314 * x45 * x57 * x6 * x7 - x1272 * x1458 - x1272 * x1459)
    )
    result[1445] = 1.0 * x1300 * (-x1260 * x1460 - x1260 * x1461 + x1263 * x28 * x303)
    result[1446] = (
        1.0
        * x1294
        * (x1 * x16 * x323 * x45 * x6 * x7 - x1249 * x323 * x847 - x1462 * x1465)
    )
    result[1447] = (
        1.0
        * x1303
        * (x1 * x16 * x318 * x45 * x57 * x6 * x7 - x1272 * x318 * x847 - x1462 * x1466)
    )
    result[1448] = (
        1.0 * x1303 * (-x1260 * x1467 - x1260 * x314 * x847 + x1263 * x16 * x314)
    )
    result[1449] = (
        1.0 * x1294 * (-x1275 * x1468 - x1275 * x303 * x847 + x1277 * x16 * x303)
    )
    result[1450] = x1245 * x5 * (1.57079632679489662 * x1 * x10 * x2 * x330 * x45 - x1473)
    result[1451] = x1294 * (
        1.57079632679489662 * x1 * x10 * x2 * x323 * x45 * x5 * x57 - x1474 * x1475
    )
    result[1452] = (
        1.0
        * x1300
        * (x10 * x1263 * x318 * x5 * x6 * x7 - x1260 * x1476 - x1260 * x318 * x90)
    )
    result[1453] = (
        1.0
        * x1294
        * (x10 * x1277 * x314 * x5 * x6 * x7 - x1275 * x1477 - x1275 * x314 * x90)
    )
    result[1454] = (
        1.0
        * x1245
        * (x10 * x1290 * x303 * x5 * x6 * x7 - x1287 * x1478 - x1287 * x303 * x90)
    )
    result[1455] = (
        1.0
        * x1259
        * (x1 * x163 * x201 * x310 * x45 * x6 * x7 - x1328 * x1445 * x201 - x1328 * x1479)
    )
    result[1456] = (
        1.0
        * x1303
        * (x1 * x163 * x205 * x309 * x45 * x6 * x7 - x1328 * x1480 - x1328 * x1481)
    )
    result[1457] = (
        1.0 * x1303 * (x1 * x201 * x309 * x721 - x1325 * x1444 * x201 - x1325 * x1482)
    )
    result[1458] = (
        1.0
        * x1365
        * (x1 * x163 * x209 * x28 * x45 * x6 * x7 - x1328 * x1483 - x1328 * x1484)
    )
    result[1459] = 1.0 * x1394 * (x1 * x205 * x28 * x721 - x1325 * x1485 - x1325 * x1486)
    result[1460] = (
        1.0 * x1365 * (-x1226 * x1331 * x201 - x1331 * x1487 + x1335 * x201 * x28)
    )
    result[1461] = (
        1.0
        * x1303
        * (x1 * x16 * x163 * x220 * x45 * x6 * x7 - x1328 * x220 * x847 - x1462 * x1488)
    )
    result[1462] = (
        1.0 * x1394 * (x1 * x16 * x209 * x721 - x1325 * x1489 - x1325 * x209 * x847)
    )
    result[1463] = (
        1.0 * x1394 * (-x1331 * x1490 - x1331 * x205 * x847 + x1335 * x16 * x205)
    )
    result[1464] = (
        1.0 * x1303 * (-x1339 * x201 * x847 + x1343 * x16 * x201 - x1462 * x1491)
    )
    result[1465] = x1259 * (
        1.57079632679489662 * x1 * x10 * x163 * x2 * x230 * x45 * x5 - x1474 * x1492
    )
    result[1466] = (
        1.0
        * x1303
        * (x1 * x10 * x220 * x5 * x6 * x7 * x721 - x1325 * x1493 - x1325 * x220 * x90)
    )
    result[1467] = (
        1.0 * x1365 * (x10 * x1335 * x209 * x5 * x6 * x7 - x1331 * x1494 - x1331 * x912)
    )
    result[1468] = (
        1.0 * x1303 * (x10 * x1343 * x205 * x5 * x6 * x7 - x1339 * x1495 - x1339 * x913)
    )
    result[1469] = (
        1.0
        * x1259
        * (x10 * x1349 * x201 * x5 * x6 * x7 - x1407 * x1496 - x1407 * x201 * x90)
    )
    result[1470] = (
        1.0
        * x1259
        * (x121 * x1410 * x310 * x46 * x6 * x7 - x1408 * x1497 - x1408 * x1498)
    )
    result[1471] = 1.0 * x1303 * (x125 * x1410 * x309 - x1408 * x1499 - x1408 * x1500)
    result[1472] = (
        1.0 * x1303 * (x121 * x1417 * x309 * x46 * x6 * x7 - x1414 * x1501 - x1414 * x630)
    )
    result[1473] = (
        1.0 * x1365 * (-x1226 * x134 * x1408 + x134 * x1410 * x28 - x1408 * x1502)
    )
    result[1474] = 1.0 * x1394 * (x125 * x1417 * x28 - x1414 * x1503 - x1414 * x1504)
    result[1475] = (
        1.0 * x1365 * (x121 * x1423 * x28 * x46 * x6 * x7 - x1420 * x1505 - x1420 * x631)
    )
    result[1476] = (
        1.0 * x1303 * (-x1408 * x148 * x847 - x1408 * x1506 + x1410 * x148 * x16)
    )
    result[1477] = (
        1.0 * x1394 * (-x134 * x1414 * x847 + x134 * x1417 * x16 - x1414 * x1507)
    )
    result[1478] = (
        1.0 * x1394 * (-x125 * x1420 * x847 + x125 * x1423 * x16 - x1462 * x1508)
    )
    result[1479] = (
        1.0
        * x1303
        * (x121 * x1431 * x16 * x46 * x6 * x7 - x123 * x1434 * x847 - x1462 * x1509)
    )
    result[1480] = (
        1.0
        * x1259
        * (x10 * x1410 * x155 * x5 * x6 * x7 - x1408 * x1510 - x1408 * x155 * x90)
    )
    result[1481] = (
        1.0 * x1303 * (x10 * x1417 * x148 * x5 * x6 * x7 - x1414 * x1511 - x1414 * x924)
    )
    result[1482] = (
        1.0 * x1365 * (x10 * x134 * x1423 * x5 * x6 * x7 - x1420 * x1512 - x1420 * x925)
    )
    result[1483] = (
        1.0 * x1303 * (x10 * x125 * x1431 * x5 * x6 * x7 - x1434 * x1513 - x1434 * x1514)
    )
    result[1484] = x1259 * (x121 * x1439 * x1517 - x1519 * x380)
    result[1485] = (
        1.0 * x1245 * (-x1520 * x1521 - x1520 * x643 + x1522 * x310 * x46 * x6 * x7)
    )
    result[1486] = (
        1.0
        * x1294
        * (-x1520 * x1523 - x1520 * x1524 + x1522 * x309 * x46 * x51 * x6 * x7)
    )
    result[1487] = (
        1.0 * x1294 * (-x1525 * x1526 - x1525 * x645 + x1529 * x309 * x46 * x6 * x7)
    )
    result[1488] = 1.0 * x1300 * (-x1226 * x1520 * x71 - x1248 * x397 + x1522 * x28 * x71)
    result[1489] = (
        1.0 * x1303 * (-x1525 * x1530 - x1525 * x1531 + x1529 * x28 * x46 * x51 * x6 * x7)
    )
    result[1490] = (
        1.0 * x1300 * (-x1350 * x402 - x1427 * x1532 + x1534 * x28 * x46 * x6 * x7)
    )
    result[1491] = 1.0 * x1294 * (-x1462 * x1535 - x1520 * x847 * x86 + x1522 * x16 * x86)
    result[1492] = 1.0 * x1303 * (-x1248 * x404 - x1525 * x71 * x847 + x1529 * x16 * x71)
    result[1493] = (
        1.0
        * x1303
        * (-x101 * x1537 * x847 - x1462 * x1536 + x1534 * x16 * x46 * x51 * x6 * x7)
    )
    result[1494] = (
        1.0 * x1294 * (-x1427 * x408 * x847 - x1462 * x1540 + x1539 * x16 * x46 * x6 * x7)
    )
    result[1495] = (
        1.0
        * x1245
        * (x10 * x112 * x1522 * x5 * x6 * x7 - x112 * x1520 * x90 - x1520 * x1541)
    )
    result[1496] = (
        1.0
        * x1294
        * (x10 * x1529 * x5 * x6 * x7 * x86 - x1525 * x1542 - x1525 * x86 * x90)
    )
    result[1497] = (
        1.0 * x1300 * (x10 * x1534 * x5 * x6 * x7 * x71 - x1248 * x414 - x1537 * x1543)
    )
    result[1498] = x1294 * x51 * (x1517 * x1539 - x1519 * x408)
    result[1499] = x1245 * x5 * (x1546 - x1547)
    result[1500] = (
        1.0 * x1241 * (x1 * x422 * x423 * x45 * x6 * x7 - x1249 * x1549 - x1249 * x1551)
    )
    result[1501] = (
        1.0 * x1245 * (x1 * x308 * x424 * x45 * x6 * x7 - x1249 * x1552 - x1249 * x1554)
    )
    result[1502] = (
        1.0
        * x1245
        * (x1 * x308 * x422 * x45 * x57 * x6 * x7 - x1272 * x1555 - x1272 * x1556)
    )
    result[1503] = (
        1.0 * x1256 * (x1 * x304 * x426 * x45 * x6 * x7 - x1249 * x1559 - x1557 * x427)
    )
    result[1504] = (
        1.0
        * x1259
        * (x1 * x304 * x424 * x45 * x57 * x6 * x7 - x1272 * x1560 - x1557 * x429)
    )
    result[1505] = 1.0 * x1256 * (-x1260 * x1561 - x1260 * x1562 + x1263 * x304 * x422)
    result[1506] = x1245 * x4 * (1.57079632679489662 * x1 * x10 * x2 * x432 * x45 - x1564)
    result[1507] = x1259 * (
        1.57079632679489662 * x1 * x10 * x2 * x4 * x426 * x45 * x57 - x1565 * x1566
    )
    result[1508] = (
        1.0
        * x1259
        * (x10 * x1263 * x4 * x424 * x6 * x7 - x1260 * x1567 - x1260 * x306 * x424)
    )
    result[1509] = (
        1.0 * x1245 * (x10 * x1277 * x4 * x422 * x6 * x7 - x1275 * x1568 - x1275 * x980)
    )
    result[1510] = x1241 * (
        1.57079632679489662 * x1 * x10 * x2 * x438 * x45 - x1471 * x1569
    )
    result[1511] = (
        x1245 * x57 * (1.57079632679489662 * x1 * x10 * x2 * x432 * x45 - x1564)
    )
    result[1512] = (
        1.0 * x1256 * (x10 * x1263 * x426 * x6 * x7 - x12 * x1260 * x426 - x1260 * x1570)
    )
    result[1513] = (
        1.0 * x1245 * (x10 * x1277 * x424 * x6 * x7 - x1275 * x1571 - x1275 * x981)
    )
    result[1514] = (
        1.0 * x1241 * (x10 * x1290 * x422 * x6 * x7 - x1287 * x1572 - x1287 * x982)
    )
    result[1515] = (
        1.0
        * x1245
        * (x1 * x163 * x303 * x423 * x45 * x6 * x7 - x1328 * x1573 - x1328 * x1574)
    )
    result[1516] = (
        1.0
        * x1294
        * (x1 * x163 * x308 * x314 * x45 * x6 * x7 - x1328 * x1575 - x1328 * x1576)
    )
    result[1517] = 1.0 * x1294 * (x1 * x303 * x308 * x721 - x1325 * x1577 - x1325 * x1578)
    result[1518] = (
        1.0
        * x1300
        * (x1 * x163 * x304 * x318 * x45 * x6 * x7 - x1328 * x1579 - x1557 * x445)
    )
    result[1519] = 1.0 * x1303 * (x1 * x304 * x314 * x721 - x1325 * x1580 - x1325 * x1581)
    result[1520] = 1.0 * x1300 * (-x1331 * x1582 - x1331 * x1583 + x1335 * x303 * x304)
    result[1521] = x1294 * (
        1.57079632679489662 * x1 * x10 * x163 * x2 * x323 * x4 * x45 - x1565 * x1584
    )
    result[1522] = (
        1.0
        * x1303
        * (x1 * x10 * x318 * x4 * x6 * x7 * x721 - x1325 * x1585 - x1325 * x306 * x318)
    )
    result[1523] = (
        1.0 * x1303 * (x10 * x1335 * x314 * x4 * x6 * x7 - x1331 * x1586 - x1331 * x986)
    )
    result[1524] = (
        1.0 * x1294 * (x10 * x1343 * x303 * x4 * x6 * x7 - x1339 * x1587 - x1339 * x987)
    )
    result[1525] = (
        x1245 * x163 * (1.57079632679489662 * x1 * x10 * x2 * x330 * x45 - x1473)
    )
    result[1526] = (
        1.0
        * x1294
        * (x1 * x10 * x323 * x6 * x7 * x721 - x12 * x1325 * x323 - x1325 * x1588)
    )
    result[1527] = (
        1.0 * x1300 * (x10 * x1335 * x318 * x6 * x7 - x1331 * x1589 - x1331 * x944)
    )
    result[1528] = (
        1.0 * x1294 * (x10 * x1343 * x314 * x6 * x7 - x1339 * x1590 - x1339 * x945)
    )
    result[1529] = (
        1.0 * x1245 * (x10 * x1349 * x303 * x6 * x7 - x1407 * x946 - x1591 * x1592)
    )
    result[1530] = (
        1.0 * x1256 * (-x1408 * x1548 * x201 - x1408 * x1593 + x1410 * x201 * x423)
    )
    result[1531] = 1.0 * x1300 * (-x1408 * x1594 - x1408 * x1595 + x1410 * x205 * x308)
    result[1532] = (
        1.0 * x1300 * (-x1414 * x1443 * x201 - x1414 * x1596 + x1417 * x201 * x308)
    )
    result[1533] = 1.0 * x1363 * (-x1408 * x1597 - x1408 * x1598 + x1410 * x209 * x304)
    result[1534] = 1.0 * x1365 * (-x1414 * x1599 - x1414 * x1600 + x1417 * x205 * x304)
    result[1535] = 1.0 * x1363 * (-x1420 * x1601 - x1420 * x1602 + x1423 * x201 * x304)
    result[1536] = (
        1.0
        * x1300
        * (x10 * x1410 * x220 * x4 * x6 * x7 - x1408 * x1603 - x1408 * x220 * x306)
    )
    result[1537] = (
        1.0 * x1365 * (x10 * x1417 * x209 * x4 * x6 * x7 - x1414 * x1604 - x1414 * x991)
    )
    result[1538] = (
        1.0 * x1365 * (x10 * x1423 * x205 * x4 * x6 * x7 - x1420 * x1605 - x1420 * x992)
    )
    result[1539] = (
        1.0
        * x1300
        * (x10 * x1431 * x201 * x4 * x6 * x7 - x1434 * x1606 - x1434 * x201 * x306)
    )
    result[1540] = (
        1.0 * x1256 * (x10 * x1410 * x230 * x6 * x7 - x12 * x1408 * x230 - x1408 * x1607)
    )
    result[1541] = (
        1.0 * x1300 * (x10 * x1417 * x220 * x6 * x7 - x1414 * x1608 - x1414 * x954)
    )
    result[1542] = (
        1.0 * x1363 * (x10 * x1423 * x209 * x6 * x7 - x1420 * x1609 - x1420 * x955)
    )
    result[1543] = (
        1.0 * x1300 * (x10 * x1431 * x205 * x6 * x7 - x1434 * x956 - x1591 * x1610)
    )
    result[1544] = (
        1.0 * x1256 * (x10 * x1439 * x201 * x6 * x7 - x1591 * x1611 - x1612 * x476)
    )
    result[1545] = (
        1.0 * x1245 * (x121 * x1522 * x423 * x46 * x6 * x7 - x1520 * x1613 - x1520 * x678)
    )
    result[1546] = 1.0 * x1294 * (x125 * x1522 * x308 - x1520 * x1614 - x1520 * x1615)
    result[1547] = (
        1.0 * x1294 * (x121 * x1529 * x308 * x46 * x6 * x7 - x1525 * x1616 - x1525 * x680)
    )
    result[1548] = 1.0 * x1300 * (x134 * x1522 * x304 - x1520 * x1617 - x1520 * x1618)
    result[1549] = 1.0 * x1303 * (x125 * x1529 * x304 - x1525 * x1619 - x1557 * x482)
    result[1550] = (
        1.0 * x1300 * (x121 * x1534 * x304 * x46 * x6 * x7 - x1537 * x683 - x1557 * x484)
    )
    result[1551] = (
        1.0
        * x1294
        * (x10 * x148 * x1522 * x4 * x6 * x7 - x148 * x1520 * x306 - x1520 * x1620)
    )
    result[1552] = (
        1.0 * x1303 * (x10 * x134 * x1529 * x4 * x6 * x7 - x1525 * x1621 - x1525 * x996)
    )
    result[1553] = (
        1.0 * x1303 * (x10 * x125 * x1534 * x4 * x6 * x7 - x1537 * x1622 - x1537 * x1623)
    )
    result[1554] = x121 * x1294 * (x1539 * x1624 - x1625 * x408)
    result[1555] = (
        1.0 * x1245 * (x10 * x1522 * x155 * x6 * x7 - x1520 * x1626 - x1520 * x965)
    )
    result[1556] = (
        1.0 * x1294 * (x10 * x148 * x1529 * x6 * x7 - x1525 * x1627 - x1525 * x966)
    )
    result[1557] = (
        1.0 * x1300 * (x10 * x134 * x1534 * x6 * x7 - x134 * x1612 * x401 - x1591 * x1628)
    )
    result[1558] = (
        1.0 * x1294 * (x10 * x125 * x1539 * x6 * x7 - x1591 * x1629 - x1612 * x492)
    )
    result[1559] = x121 * x1245 * (x1546 - x1547)
    result[1560] = (
        1.0 * x1241 * (-x1350 * x494 - x1427 * x1630 + x1631 * x423 * x46 * x6 * x7)
    )
    result[1561] = (
        1.0 * x1245 * (x1631 * x308 * x46 * x51 * x6 * x7 - x1632 * x1633 - x1632 * x1634)
    )
    result[1562] = (
        1.0 * x1245 * (-x1350 * x498 - x1427 * x1635 + x1636 * x308 * x46 * x6 * x7)
    )
    result[1563] = 1.0 * x1256 * (-x1248 * x500 - x1557 * x998 + x1631 * x304 * x71)
    result[1564] = (
        1.0 * x1259 * (-x1557 * x501 + x1636 * x304 * x46 * x51 * x6 * x7 - x1637 * x1638)
    )
    result[1565] = (
        1.0 * x1256 * (-x1350 * x1640 - x1557 * x503 + x1639 * x304 * x46 * x6 * x7)
    )
    result[1566] = (
        1.0
        * x1245
        * (x10 * x1631 * x4 * x6 * x7 * x86 - x1632 * x1641 - x1632 * x306 * x86)
    )
    result[1567] = (
        1.0 * x1259 * (x10 * x1636 * x4 * x6 * x7 * x71 - x1248 * x505 - x1637 * x1642)
    )
    result[1568] = x1259 * (x1624 * x1639 * x51 - x1625 * x506)
    result[1569] = x1245 * x4 * (x1643 - x1644)
    result[1570] = (
        1.0 * x1241 * (x10 * x112 * x1631 * x6 * x7 - x1591 * x1645 - x1612 * x510)
    )
    result[1571] = (
        1.0 * x1245 * (x10 * x1636 * x6 * x7 * x86 - x1591 * x1646 - x1612 * x511)
    )
    result[1572] = (
        1.0 * x1256 * (x10 * x1639 * x6 * x7 * x71 - x1248 * x512 - x1612 * x502 * x71)
    )
    result[1573] = x1245 * x51 * (x1643 - x1644)
    result[1574] = x1241 * (
        x1516
        * (
            x1 * (7.0 * x1437 + 3.0 * x1438 + 4.0 * x1538 + 2.0 * x811 + 2.0 * x812)
            + x1545 * x163
        )
        - x1518 * x513
    )
    result[1575] = 0
    result[1576] = 0
    result[1577] = x1002
    result[1578] = 0
    result[1579] = x1004 * x1005
    result[1580] = x1003 * x1006
    result[1581] = 0
    result[1582] = x1005 * x1647 * x882
    result[1583] = x1011
    result[1584] = x1649 * x704 * x882
    result[1585] = 0
    result[1586] = x1134 * x884
    result[1587] = x1200 * x885
    result[1588] = x1136 * x886
    result[1589] = x1146 * x887
    result[1590] = 0
    result[1591] = 0
    result[1592] = x1020 * x121
    result[1593] = 0
    result[1594] = x1140 * x892
    result[1595] = x1033 * x571
    result[1596] = 0
    result[1597] = x1028 * x134 * x80
    result[1598] = x1141 * x893
    result[1599] = x1142 * x894
    result[1600] = 0
    result[1601] = x1030 * x714
    result[1602] = x1145 * x897
    result[1603] = x1030 * x716
    result[1604] = x1147 * x123 * x880
    result[1605] = x1016
    result[1606] = x1020 * x51
    result[1607] = x1148 * x899
    result[1608] = x1021 * x1647 * x874
    result[1609] = x1149 * x900
    result[1610] = x1203 * x901
    result[1611] = x1139 * x902
    result[1612] = x1149 * x903
    result[1613] = x101 * x1028 * x724
    result[1614] = x1650 * x730 * x881
    result[1615] = x1031 * x731
    result[1616] = x1030 * x732
    result[1617] = x1021 * x733 * x880
    result[1618] = x1030 * x734
    result[1619] = x1649 * x736 * x880
    result[1620] = 0
    result[1621] = 0
    result[1622] = x1021 * x80 * x905
    result[1623] = 0
    result[1624] = x1651 * x906
    result[1625] = x1159 * x907
    result[1626] = 0
    result[1627] = x1651 * x908
    result[1628] = x1160 * x909
    result[1629] = x1163 * x910
    result[1630] = 0
    result[1631] = x1652 * x1653
    result[1632] = x1652 * x1654 * x57
    result[1633] = x1161 * x913
    result[1634] = x1075 * x742
    result[1635] = x1005 * x1040
    result[1636] = x1140 * x916
    result[1637] = x1149 * x917
    result[1638] = x1651 * x918
    result[1639] = x1166 * x919
    result[1640] = x1164 * x920
    result[1641] = x1063 * x714
    result[1642] = x1166 * x921
    result[1643] = x1181 * x922
    result[1644] = x1655 * x923
    result[1645] = x1652 * x1656
    result[1646] = x1150 * x924
    result[1647] = x1180 * x925
    result[1648] = x1067 * x749
    result[1649] = x1185
    result[1650] = x1003 * x1058
    result[1651] = x1042 * x558
    result[1652] = x1174 * x926
    result[1653] = x1188 * x927
    result[1654] = x1168 * x928
    result[1655] = x1043 * x756 * x929
    result[1656] = x1169 * x930
    result[1657] = x1168 * x71 * x871
    result[1658] = x1171 * x932
    result[1659] = x1175 * x68 * x871
    result[1660] = x112 * x1205 * x1652
    result[1661] = x1076 * x767
    result[1662] = x1206 * x1543
    result[1663] = x1197 * x766
    result[1664] = x1192 * x1208
    result[1665] = 0
    result[1666] = 0
    result[1667] = x1139 * x939
    result[1668] = 0
    result[1669] = x1140 * x940
    result[1670] = x1145 * x941
    result[1671] = 0
    result[1672] = x1086 * x775
    result[1673] = x1141 * x942
    result[1674] = x1142 * x943
    result[1675] = 0
    result[1676] = x1657
    result[1677] = x1659 * x778
    result[1678] = x1142 * x945
    result[1679] = x1147 * x946
    result[1680] = x1005 * x201 * x80 * x938
    result[1681] = x1660 * x205 * x80
    result[1682] = x1149 * x948
    result[1683] = x1651 * x949
    result[1684] = x1166 * x950
    result[1685] = x1164 * x951
    result[1686] = x1086 * x741
    result[1687] = x1166 * x952
    result[1688] = x1181 * x953
    result[1689] = x1086 * x201 * x730
    result[1690] = x1661 * x230
    result[1691] = x1149 * x954
    result[1692] = x1164 * x955
    result[1693] = x1655 * x956
    result[1694] = x1005 * x736 * x993
    result[1695] = x1092
    result[1696] = x1186 * x957
    result[1697] = x123 * x1660 * x751
    result[1698] = x1189 * x958
    result[1699] = x1662 * x959
    result[1700] = x1171 * x960
    result[1701] = x1186 * x961
    result[1702] = x1662 * x962
    result[1703] = x1061 * x125 * x756 * x842
    result[1704] = x1086 * x787
    result[1705] = x1656 * x1663
    result[1706] = x1187 * x966
    result[1707] = x1171 * x967
    result[1708] = x1665 * x766
    result[1709] = x1191 * x791
    result[1710] = x1648 * x795 * x938
    result[1711] = x1193 * x970
    result[1712] = x1650 * x799 * x937
    result[1713] = x1083 * x71 * x794
    result[1714] = x1194 * x139 * x972
    result[1715] = x1083 * x68 * x803
    result[1716] = x1193 * x973
    result[1717] = x1086 * x804
    result[1718] = x1086 * x805
    result[1719] = x1085 * x68 * x807
    result[1720] = x1195 * x975
    result[1721] = x1194 * x976
    result[1722] = x12 * x1209 * x71
    result[1723] = x1198 * x51
    result[1724] = x1211
    result[1725] = 0
    result[1726] = 0
    result[1727] = x1134 * x979
    result[1728] = 0
    result[1729] = x1069 * x1666 * x435
    result[1730] = x1135 * x1658 * x4 * x422
    result[1731] = 0
    result[1732] = x1661 * x426
    result[1733] = x1131 * x1666 * x57
    result[1734] = x1136 * x982
    result[1735] = 0
    result[1736] = 0
    result[1737] = 0
    result[1738] = 0
    result[1739] = 0
    result[1740] = x1134 * x983
    result[1741] = x1120 * x774
    result[1742] = x1148 * x984
    result[1743] = x1659 * x985
    result[1744] = x1150 * x986
    result[1745] = x1152 * x987
    result[1746] = x1657
    result[1747] = x1149 * x944
    result[1748] = x1151 * x945
    result[1749] = x1183 * x946
    result[1750] = 0
    result[1751] = 0
    result[1752] = 0
    result[1753] = 0
    result[1754] = 0
    result[1755] = x1173 * x988
    result[1756] = x1169 * x989
    result[1757] = x1174 * x990
    result[1758] = x1654 * x1663 * x4
    result[1759] = x1170 * x992
    result[1760] = x1126 * x825
    result[1761] = x1653 * x1663
    result[1762] = x1168 * x955
    result[1763] = x1171 * x956
    result[1764] = x1175 * x993
    result[1765] = 0
    result[1766] = 0
    result[1767] = 0
    result[1768] = 0
    result[1769] = 0
    result[1770] = x1195 * x994
    result[1771] = x1193 * x995
    result[1772] = x1120 * x123 * x799
    result[1773] = x1032 * x794 * x996
    result[1774] = x1127 * x829
    result[1775] = x1207 * x803
    result[1776] = x1193 * x966
    result[1777] = x134 * x1664 * x799
    result[1778] = x1665 * x803
    result[1779] = x1124 * x831
    result[1780] = 0
    result[1781] = 0
    result[1782] = 0
    result[1783] = 0
    result[1784] = 0
    result[1785] = x1648 * x833 * x978
    result[1786] = x1212 * x997
    result[1787] = x1649 * x835 * x936
    result[1788] = x1003 * x1642 * x833
    result[1789] = x1213
    result[1790] = x1208 * x1214
    result[1791] = x1212 * x976
    result[1792] = x1103 * x71 * x835
    result[1793] = x1191 * x839
    result[1794] = x1215
    result[1795] = 0
    result[1796] = 0
    result[1797] = 0
    result[1798] = 0
    result[1799] = 0
    result[1800] = x1241 * (-x1 * x1668 * x42 + x1240 * x1667)
    result[1801] = x1245 * x51 * (x1669 - x1670)
    result[1802] = x1245 * x57 * (x1669 - x1670)
    result[1803] = x1256 * (
        0.866025403784438597 * x1255 * x45 * x6 * x7 * x71 - x1671 * x67
    )
    result[1804] = x1259 * x1672 * (x1258 - x519)
    result[1805] = x1256 * x1673 * (x1261 - x1264)
    result[1806] = -x1245 * (
        x1267 * x1674 - 0.866025403784438597 * x1271 * x45 * x6 * x7 * x86
    )
    result[1807] = x1259 * (
        0.866025403784438597 * x1271 * x45 * x57 * x6 * x7 * x71 - x1671 * x98
    )
    result[1808] = x1259 * x1673 * (x1273 - x1274)
    result[1809] = x1245 * x1675 * (x1276 - x527)
    result[1810] = x1241 * (
        0.866025403784438597 * x112 * x1283 * x45 * x6 * x7 - x1281 * x1674
    )
    result[1811] = x1245 * (
        0.866025403784438597 * x1283 * x45 * x57 * x6 * x7 * x86 - x1284 * x1676
    )
    result[1812] = x1256 * (0.866025403784438597 * x1283 * x71 * x81 - x1285 * x1673)
    result[1813] = x1245 * x1675 * (x1286 - x530)
    result[1814] = x1241 * x1677 * (x1288 - x532)
    result[1815] = x1245 * (x121 * x1678 - x1679 * x533)
    result[1816] = x1294 * x1674 * (x1292 - x1293)
    result[1817] = x1294 * x57 * (x1295 * x1668 - x1679 * x1680)
    result[1818] = x1300 * (
        0.866025403784438597 * x1254 * x134 * x45 * x6 * x7 - x1299 * x1674
    )
    result[1819] = x1303 * x1676 * (x1301 - x1302)
    result[1820] = x1300 * x1673 * (x1304 - x1305)
    result[1821] = x1294 * (
        0.866025403784438597 * x1270 * x148 * x45 * x6 * x7 - x1309 * x1674
    )
    result[1822] = x1303 * (
        0.866025403784438597 * x1270 * x134 * x45 * x57 * x6 * x7 - x1310 * x1676
    )
    result[1823] = x1303 * x1673 * (x1311 - x1312)
    result[1824] = x1294 * x1675 * (x1313 - x1314)
    result[1825] = x1245 * (
        0.866025403784438597 * x1269 * x155 * x45 * x6 * x7 - x1319 * x1674
    )
    result[1826] = x1294 * (
        0.866025403784438597 * x1269 * x148 * x45 * x57 * x6 * x7 - x1320 * x1676
    )
    result[1827] = x1300 * (0.866025403784438597 * x1269 * x134 * x81 - x1321 * x1673)
    result[1828] = x1294 * (-x1322 * x1675 + x161 * x1681)
    result[1829] = x1245 * (-x1323 * x1677 + x162 * x1681)
    result[1830] = x1245 * x163 * (-x1668 * x533 + x1678)
    result[1831] = x1294 * x1672 * (x1324 - x163 * x1680)
    result[1832] = x1294 * x1682 * (x1326 - x1327)
    result[1833] = x1300 * (
        0.866025403784438597 * x1254 * x163 * x45 * x6 * x7 * x71 - x1671 * x171
    )
    result[1834] = x1303 * x1682 * (x1329 - x1330)
    result[1835] = x1300 * x1683 * (x1332 - x541)
    result[1836] = x1294 * (
        0.866025403784438597 * x1270 * x163 * x45 * x6 * x7 * x86 - x1336 * x1684
    )
    result[1837] = x1303 * (0.866025403784438597 * x1270 * x167 * x71 - x1337 * x1682)
    result[1838] = x1303 * x1683 * (x1338 - x560)
    result[1839] = x1294 * x1685 * (x1340 - x547)
    result[1840] = x1245 * (
        0.866025403784438597 * x112 * x1269 * x163 * x45 * x6 * x7 - x1344 * x1684
    )
    result[1841] = x1294 * (0.866025403784438597 * x1269 * x167 * x86 - x1345 * x1682)
    result[1842] = x1300 * (0.866025403784438597 * x1269 * x177 * x71 - x1346 * x1683)
    result[1843] = x1294 * (x1681 * x195 - x1685 * x566)
    result[1844] = x1245 * (-x1351 * x1686 + x1681 * x198)
    result[1845] = -x1256 * (
        x1353 * x1674 - 0.866025403784438597 * x1354 * x201 * x45 * x6 * x7
    )
    result[1846] = x1300 * x1674 * (x1355 - x1358)
    result[1847] = x1300 * (
        0.866025403784438597 * x1230 * x201 * x45 * x57 * x6 * x7 - x1359 * x1676
    )
    result[1848] = x1363 * (
        0.866025403784438597 * x1228 * x209 * x45 * x6 * x7 - x1362 * x1674
    )
    result[1849] = x1365 * (
        0.866025403784438597 * x1228 * x205 * x45 * x57 * x6 * x7 - x1364 * x1676
    )
    result[1850] = x1363 * (0.866025403784438597 * x1228 * x201 * x81 - x1366 * x1673)
    result[1851] = x1300 * (
        0.866025403784438597 * x1252 * x220 * x45 * x6 * x7 - x1370 * x1674
    )
    result[1852] = x1365 * (
        0.866025403784438597 * x1252 * x209 * x45 * x57 * x6 * x7 - x1371 * x1676
    )
    result[1853] = x1365 * (0.866025403784438597 * x1252 * x205 * x81 - x1372 * x1673)
    result[1854] = x1300 * (0.866025403784438597 * x107 * x1252 * x201 - x1373 * x1675)
    result[1855] = x1256 * (-x1379 * x1674 + x1687 * x231)
    result[1856] = x1300 * (-x1380 * x1676 + x1687 * x234)
    result[1857] = x1363 * x1673 * (x1381 - x1382)
    result[1858] = x1300 * x1675 * (x1383 - x1384)
    result[1859] = x1256 * (0.866025403784438597 * x118 * x1250 * x201 - x1385 * x1677)
    result[1860] = x1259 * x1679 * (x1386 - x595)
    result[1861] = x1303 * x1684 * (x1387 - x1388)
    result[1862] = x1303 * x1682 * (x1389 - x1390)
    result[1863] = x1365 * (
        0.866025403784438597 * x1228 * x134 * x163 * x45 * x6 * x7 - x1391 * x1684
    )
    result[1864] = x1394 * x1682 * (x1392 - x1393)
    result[1865] = x1365 * x1683 * (x1395 - x575)
    result[1866] = x1303 * (
        0.866025403784438597 * x1252 * x148 * x163 * x45 * x6 * x7 - x1396 * x1684
    )
    result[1867] = x1394 * (0.866025403784438597 * x1252 * x134 * x167 - x1397 * x1682)
    result[1868] = x1394 * x1683 * (x1398 - x1399)
    result[1869] = x1303 * x1685 * (x1400 - x585)
    result[1870] = x1259 * (-x1401 * x1684 + x1687 * x256)
    result[1871] = x1303 * x1682 * (x1402 - x1403)
    result[1872] = x1365 * x1683 * (x1404 - x1405)
    result[1873] = x1303 * (-x1406 * x1685 + x1687 * x260)
    result[1874] = x1259 * (x1687 * x262 - x1688 * x594)
    result[1875] = x1256 * x1689 * (x1409 - x1411)
    result[1876] = x1300 * x1689 * (x1412 - x1413)
    result[1877] = x1300 * x1690 * (x1415 - x596)
    result[1878] = x1363 * (0.866025403784438597 * x1228 * x265 * x71 - x1418 * x1689)
    result[1879] = x1365 * x1690 * (x1419 - x599)
    result[1880] = x1363 * x1691 * (x1421 - x597)
    result[1881] = x1300 * (0.866025403784438597 * x1252 * x265 * x86 - x1424 * x1689)
    result[1882] = x1365 * (0.866025403784438597 * x1252 * x270 * x71 - x1425 * x1690)
    result[1883] = x1365 * x1691 * (x1426 - x602)
    result[1884] = x1300 * (x1428 * x1692 - x1686 * x289)
    result[1885] = x1256 * (-x1432 * x1689 + x1687 * x291)
    result[1886] = x1300 * (-x1433 * x1690 + x1687 * x292)
    result[1887] = x1363 * (0.866025403784438597 * x1250 * x277 * x71 - x1671 * x293)
    result[1888] = x1300 * (-x1435 * x1693 + x1687 * x294)
    result[1889] = x1256 * (-x1440 * x1686 + x1687 * x299)
    result[1890] = x1245 * x1674 * (-x1442 + x1446)
    result[1891] = x1294 * x1674 * (x1447 - x1451)
    result[1892] = x1294 * x1676 * (-x1452 + x1453)
    result[1893] = x1300 * x1674 * (-x1456 + x1457)
    result[1894] = x1303 * x1676 * (-x1458 + x1459)
    result[1895] = x1300 * x1673 * (-x1460 + x1461)
    result[1896] = x1294 * (
        0.866025403784438597 * x1 * x323 * x45 * x6 * x7 * x846 - x1465 * x1694
    )
    result[1897] = x1303 * (
        0.866025403784438597 * x1 * x318 * x45 * x57 * x6 * x7 * x846 - x1466 * x1694
    )
    result[1898] = x1303 * (0.866025403784438597 * x1 * x314 * x81 * x846 - x1467 * x1673)
    result[1899] = x1294 * (
        0.866025403784438597 * x1 * x107 * x303 * x846 - x1468 * x1675
    )
    result[1900] = x1245 * x5 * (2.72069904635132662 * x1 * x10 * x2 * x330 * x45 - x1697)
    result[1901] = x1294 * (
        2.72069904635132662 * x1 * x10 * x2 * x323 * x45 * x5 * x57 - x1475 * x1698
    )
    result[1902] = x1300 * (
        0.866025403784438597 * x1 * x10 * x318 * x5 * x6 * x7 * x81 - x1476 * x1673
    )
    result[1903] = x1294 * (
        0.866025403784438597 * x1 * x10 * x107 * x314 * x5 * x6 * x7 - x1477 * x1675
    )
    result[1904] = x1245 * (
        0.866025403784438597 * x1 * x10 * x118 * x303 * x5 * x6 * x7 - x1478 * x1677
    )
    result[1905] = x1259 * (
        0.866025403784438597 * x1445 * x163 * x201 * x45 * x6 * x7 - x1479 * x1684
    )
    result[1906] = x1303 * x1684 * (x1480 - x1481)
    result[1907] = x1303 * (0.866025403784438597 * x1444 * x167 * x201 - x1482 * x1682)
    result[1908] = x1365 * x1684 * (-x1483 + x1484)
    result[1909] = x1394 * x1682 * (-x1485 + x1486)
    result[1910] = x1365 * (0.866025403784438597 * x1226 * x177 * x201 - x1487 * x1683)
    result[1911] = x1303 * (
        0.866025403784438597 * x1 * x163 * x220 * x45 * x6 * x7 * x846 - x1488 * x1694
    )
    result[1912] = x1394 * (
        0.866025403784438597 * x1 * x167 * x209 * x846 - x1489 * x1682
    )
    result[1913] = x1394 * (
        0.866025403784438597 * x1 * x177 * x205 * x846 - x1490 * x1683
    )
    result[1914] = x1303 * (
        0.866025403784438597 * x1 * x188 * x201 * x846 - x1491 * x1694
    )
    result[1915] = x1259 * (
        2.72069904635132662 * x1 * x10 * x163 * x2 * x230 * x45 * x5 - x1492 * x1698
    )
    result[1916] = x1303 * (
        0.866025403784438597 * x1 * x10 * x167 * x220 * x5 * x6 * x7 - x1493 * x1682
    )
    result[1917] = x1365 * (
        0.866025403784438597 * x1 * x10 * x177 * x209 * x5 * x6 * x7 - x1494 * x1683
    )
    result[1918] = x1303 * (
        0.866025403784438597 * x1 * x10 * x188 * x205 * x5 * x6 * x7 - x1495 * x1685
    )
    result[1919] = x1259 * (
        0.866025403784438597 * x1 * x10 * x197 * x201 * x5 * x6 * x7 - x1496 * x1688
    )
    result[1920] = x1259 * x1689 * (x1497 - x1498)
    result[1921] = x1303 * x1689 * (x1499 - x1500)
    result[1922] = x1303 * x1690 * (x1501 - x630)
    result[1923] = x1365 * (0.866025403784438597 * x1226 * x134 * x265 - x1502 * x1689)
    result[1924] = x1394 * x1690 * (x1503 - x1504)
    result[1925] = x1365 * x1691 * (x1505 - x631)
    result[1926] = x1303 * (
        0.866025403784438597 * x1 * x148 * x265 * x846 - x1506 * x1689
    )
    result[1927] = x1394 * (
        0.866025403784438597 * x1 * x134 * x270 * x846 - x1507 * x1690
    )
    result[1928] = x1394 * (
        0.866025403784438597 * x1 * x125 * x277 * x846 - x1508 * x1694
    )
    result[1929] = x1303 * (
        0.866025403784438597 * x1 * x121 * x288 * x46 * x6 * x7 * x846 - x1509 * x1694
    )
    result[1930] = x1259 * (
        0.866025403784438597 * x1 * x10 * x155 * x265 * x5 * x6 * x7 - x1510 * x1689
    )
    result[1931] = x1303 * (
        0.866025403784438597 * x1 * x10 * x148 * x270 * x5 * x6 * x7 - x1511 * x1690
    )
    result[1932] = x1365 * (
        0.866025403784438597 * x1 * x10 * x134 * x277 * x5 * x6 * x7 - x1512 * x1691
    )
    result[1933] = x1303 * x1693 * (x1513 - x1514)
    result[1934] = 0
    result[1935] = x1245 * x1699 * (x1521 - x643)
    result[1936] = x1294 * x1699 * (x1523 - x1524)
    result[1937] = x1294 * x1700 * (x1526 - x645)
    result[1938] = x1300 * (0.866025403784438597 * x1226 * x386 * x71 - x1671 * x397)
    result[1939] = x1303 * x1700 * (x1530 - x1531)
    result[1940] = x1300 * (x1532 * x1692 - x1686 * x402)
    result[1941] = x1294 * (0.866025403784438597 * x1 * x386 * x846 * x86 - x1535 * x1694)
    result[1942] = x1303 * (0.866025403784438597 * x1 * x395 * x71 * x846 - x1671 * x404)
    result[1943] = x1303 * (
        0.866025403784438597 * x1 * x401 * x46 * x51 * x6 * x7 * x846 - x1536 * x1694
    )
    result[1944] = x1294 * (
        0.866025403784438597 * x1 * x408 * x46 * x6 * x7 * x846 - x1540 * x1694
    )
    result[1945] = x1245 * (
        0.866025403784438597 * x1 * x10 * x112 * x386 * x5 * x6 * x7 - x1541 * x1699
    )
    result[1946] = x1294 * (
        0.866025403784438597 * x1 * x10 * x395 * x5 * x6 * x7 * x86 - x1542 * x1700
    )
    result[1947] = x1300 * (
        0.866025403784438597 * x1 * x10 * x401 * x5 * x6 * x7 * x71 - x1671 * x414
    )
    result[1948] = 0
    result[1949] = 0
    result[1950] = x1241 * x1674 * (x1549 - x1551)
    result[1951] = x1245 * x1674 * (x1552 - x1554)
    result[1952] = x1245 * x1676 * (x1555 - x1556)
    result[1953] = x1256 * (-x1559 * x1674 + x1701 * x427)
    result[1954] = x1259 * (-x1560 * x1676 + x1701 * x429)
    result[1955] = x1256 * x1673 * (x1561 - x1562)
    result[1956] = x1245 * x4 * (2.72069904635132662 * x1 * x10 * x2 * x432 * x45 - x1702)
    result[1957] = x1259 * (
        2.72069904635132662 * x1 * x10 * x2 * x4 * x426 * x45 * x57 - x1566 * x1703
    )
    result[1958] = x1259 * (
        0.866025403784438597 * x1 * x10 * x4 * x424 * x6 * x7 * x81 - x1567 * x1673
    )
    result[1959] = x1245 * (
        0.866025403784438597 * x1 * x10 * x107 * x4 * x422 * x6 * x7 - x1568 * x1675
    )
    result[1960] = x1241 * (
        2.72069904635132662 * x1 * x10 * x2 * x438 * x45 - x1569 * x1695
    )
    result[1961] = (
        x1245 * x57 * (2.72069904635132662 * x1 * x10 * x2 * x432 * x45 - x1702)
    )
    result[1962] = x1256 * (
        0.866025403784438597 * x1 * x10 * x426 * x6 * x7 * x81 - x1570 * x1673
    )
    result[1963] = x1245 * (
        0.866025403784438597 * x1 * x10 * x107 * x424 * x6 * x7 - x1571 * x1675
    )
    result[1964] = x1241 * (
        0.866025403784438597 * x1 * x10 * x118 * x422 * x6 * x7 - x1572 * x1677
    )
    result[1965] = x1245 * x1684 * (-x1573 + x1574)
    result[1966] = x1294 * x1684 * (x1575 - x1576)
    result[1967] = x1294 * x1682 * (x1577 - x1578)
    result[1968] = x1300 * (-x1579 * x1684 + x1701 * x445)
    result[1969] = x1303 * x1682 * (x1580 - x1581)
    result[1970] = x1300 * x1683 * (x1582 - x1583)
    result[1971] = x1294 * (
        2.72069904635132662 * x1 * x10 * x163 * x2 * x323 * x4 * x45 - x1584 * x1703
    )
    result[1972] = x1303 * (
        0.866025403784438597 * x1 * x10 * x167 * x318 * x4 * x6 * x7 - x1585 * x1682
    )
    result[1973] = x1303 * (
        0.866025403784438597 * x1 * x10 * x177 * x314 * x4 * x6 * x7 - x1586 * x1683
    )
    result[1974] = x1294 * (
        0.866025403784438597 * x1 * x10 * x188 * x303 * x4 * x6 * x7 - x1587 * x1685
    )
    result[1975] = (
        x1245 * x163 * (2.72069904635132662 * x1 * x10 * x2 * x330 * x45 - x1697)
    )
    result[1976] = x1294 * (
        0.866025403784438597 * x1 * x10 * x167 * x323 * x6 * x7 - x1588 * x1682
    )
    result[1977] = x1300 * (
        0.866025403784438597 * x1 * x10 * x177 * x318 * x6 * x7 - x1589 * x1683
    )
    result[1978] = x1294 * (
        0.866025403784438597 * x1 * x10 * x188 * x314 * x6 * x7 - x1590 * x1685
    )
    result[1979] = x1245 * (
        0.866025403784438597 * x1 * x10 * x197 * x303 * x6 * x7 - x1592 * x1704
    )
    result[1980] = x1256 * (0.866025403784438597 * x1548 * x201 * x265 - x1593 * x1689)
    result[1981] = x1300 * x1689 * (x1594 - x1595)
    result[1982] = x1300 * (0.866025403784438597 * x1443 * x201 * x270 - x1596 * x1690)
    result[1983] = x1363 * x1689 * (x1597 - x1598)
    result[1984] = x1365 * x1690 * (x1599 - x1600)
    result[1985] = x1363 * x1691 * (x1601 - x1602)
    result[1986] = x1300 * (
        0.866025403784438597 * x1 * x10 * x220 * x265 * x4 * x6 * x7 - x1603 * x1689
    )
    result[1987] = x1365 * (
        0.866025403784438597 * x1 * x10 * x209 * x270 * x4 * x6 * x7 - x1604 * x1690
    )
    result[1988] = x1365 * (
        0.866025403784438597 * x1 * x10 * x205 * x277 * x4 * x6 * x7 - x1605 * x1691
    )
    result[1989] = x1300 * (
        0.866025403784438597 * x1 * x10 * x201 * x288 * x4 * x6 * x7 - x1606 * x1693
    )
    result[1990] = x1256 * (
        0.866025403784438597 * x1 * x10 * x230 * x265 * x6 * x7 - x1607 * x1689
    )
    result[1991] = x1300 * (
        0.866025403784438597 * x1 * x10 * x220 * x270 * x6 * x7 - x1608 * x1690
    )
    result[1992] = x1363 * (
        0.866025403784438597 * x1 * x10 * x209 * x277 * x6 * x7 - x1609 * x1691
    )
    result[1993] = x1300 * (
        0.866025403784438597 * x1 * x10 * x205 * x288 * x6 * x7 - x1610 * x1704
    )
    result[1994] = x1256 * (
        0.866025403784438597 * x1 * x10 * x201 * x298 * x6 * x7 - x1611 * x1704
    )
    result[1995] = x1245 * x1699 * (x1613 - x678)
    result[1996] = x1294 * x1699 * (x1614 - x1615)
    result[1997] = x1294 * x1700 * (x1616 - x680)
    result[1998] = x1300 * x1699 * (x1617 - x1618)
    result[1999] = x1303 * (-x1619 * x1700 + x1701 * x482)
    result[2000] = x1300 * (x1701 * x484 - x1705 * x683)
    result[2001] = x1294 * (
        0.866025403784438597 * x1 * x10 * x148 * x386 * x4 * x6 * x7 - x1620 * x1699
    )
    result[2002] = x1303 * (
        0.866025403784438597 * x1 * x10 * x134 * x395 * x4 * x6 * x7 - x1621 * x1700
    )
    result[2003] = x1303 * x1705 * (x1622 - x1623)
    result[2004] = 0
    result[2005] = x1245 * (
        0.866025403784438597 * x1 * x10 * x155 * x386 * x6 * x7 - x1626 * x1699
    )
    result[2006] = x1294 * (
        0.866025403784438597 * x1 * x10 * x148 * x395 * x6 * x7 - x1627 * x1700
    )
    result[2007] = x1300 * (
        0.866025403784438597 * x1 * x10 * x134 * x401 * x6 * x7 - x1628 * x1704
    )
    result[2008] = x1294 * (0.866025403784438597 * x12 * x492 - x1629 * x1704)
    result[2009] = 0
    result[2010] = x1241 * (x1630 * x1692 - x1686 * x494)
    result[2011] = x1245 * x1706 * (x1633 - x1634)
    result[2012] = x1245 * (x1635 * x1692 - x1686 * x498)
    result[2013] = x1256 * (0.866025403784438597 * x1224 * x493 * x71 - x1671 * x500)
    result[2014] = -x1259 * (0.866025403784438597 * x1638 * x497 - x1701 * x501)
    result[2015] = x1256 * (-x1640 * x1686 + x1701 * x503)
    result[2016] = x1245 * (
        0.866025403784438597 * x1 * x10 * x4 * x493 * x6 * x7 * x86 - x1641 * x1706
    )
    result[2017] = x1259 * (
        0.866025403784438597 * x1 * x10 * x4 * x497 * x6 * x7 * x71 - x1671 * x505
    )
    result[2018] = 0
    result[2019] = 0
    result[2020] = x1241 * (
        0.866025403784438597 * x1 * x10 * x112 * x493 * x6 * x7 - x1645 * x1704
    )
    result[2021] = x1245 * (
        0.866025403784438597 * x1 * x10 * x497 * x6 * x7 * x86 - x1646 * x1704
    )
    result[2022] = x1256 * (
        0.866025403784438597 * x1 * x10 * x502 * x6 * x7 * x71 - x1671 * x512
    )
    result[2023] = 0
    result[2024] = 0


int_tuple_type = numba.types.UniTuple(i8, 2)
func_dict_type = numba.types.DictType(int_tuple_type, func_type)

# Sadly, this function can't be cached.
@numba.jit(func_dict_type(), nopython=True, cache=True)
def get_func_dict():
    # Can we somehow utilize the 'func_dict_type' definition above?!
    #
    # This definition below does not work but leads to strange errors.
    # func_dict = numba.typed.Dict.empty(
    # key_type=func_dict_type.key_type,
    # value_type=func_dict_type.value_type,
    # )
    # numba plzzz
    func_dict = numba.typed.Dict.empty(
        key_type=int_tuple_type,
        value_type=func_type,
    )
    func_dict[(0, 0)] = multipole3d_sph_00
    func_dict[(1, 0)] = multipole3d_sph_10
    func_dict[(0, 1)] = multipole3d_sph_01
    func_dict[(2, 0)] = multipole3d_sph_20
    func_dict[(0, 2)] = multipole3d_sph_02
    func_dict[(3, 0)] = multipole3d_sph_30
    func_dict[(0, 3)] = multipole3d_sph_03
    func_dict[(4, 0)] = multipole3d_sph_40
    func_dict[(0, 4)] = multipole3d_sph_04
    func_dict[(1, 1)] = multipole3d_sph_11
    func_dict[(2, 1)] = multipole3d_sph_21
    func_dict[(1, 2)] = multipole3d_sph_12
    func_dict[(3, 1)] = multipole3d_sph_31
    func_dict[(1, 3)] = multipole3d_sph_13
    func_dict[(4, 1)] = multipole3d_sph_41
    func_dict[(1, 4)] = multipole3d_sph_14
    func_dict[(2, 2)] = multipole3d_sph_22
    func_dict[(3, 2)] = multipole3d_sph_32
    func_dict[(2, 3)] = multipole3d_sph_23
    func_dict[(4, 2)] = multipole3d_sph_42
    func_dict[(2, 4)] = multipole3d_sph_24
    func_dict[(3, 3)] = multipole3d_sph_33
    func_dict[(4, 3)] = multipole3d_sph_43
    func_dict[(3, 4)] = multipole3d_sph_34
    func_dict[(4, 4)] = multipole3d_sph_44
    return func_dict
